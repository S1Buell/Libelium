

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Wed Mar 27 11:57:10 2019

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    79                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    80                           	psect	text58,global,reloc=2,class=CODE,delta=1
    81                           	psect	text59,global,reloc=2,class=CODE,delta=1
    82                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    83                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	text63,global,reloc=2,class=CODE,delta=1
    86                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    87                           	psect	text65,global,reloc=2,class=CODE,delta=1
    88                           	psect	text66,global,reloc=2,class=CODE,delta=1
    89                           	psect	text67,global,reloc=2,class=CODE,delta=1
    90                           	psect	text68,global,reloc=2,class=CODE,delta=1
    91                           	psect	text69,global,reloc=2,class=CODE,delta=1
    92                           	psect	text70,global,reloc=2,class=CODE,delta=1
    93                           	psect	text71,global,reloc=2,class=CODE,delta=1
    94                           	psect	text72,global,reloc=2,class=CODE,delta=1
    95                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=1
    96                           	psect	text74,global,reloc=2,class=CODE,delta=1
    97                           	psect	text75,global,reloc=2,class=CODE,delta=1
    98                           	psect	text76,global,reloc=2,class=CODE,delta=1
    99                           	psect	text77,global,reloc=2,class=CODE,delta=1
   100                           	psect	text78,global,reloc=2,class=CODE,delta=1
   101                           	psect	text79,global,reloc=2,class=CODE,delta=1
   102                           	psect	text80,global,reloc=2,class=CODE,delta=1
   103                           	psect	text81,global,reloc=2,class=CODE,delta=1
   104                           	psect	text82,global,reloc=2,class=CODE,delta=1
   105                           	psect	text83,global,reloc=2,class=CODE,delta=1
   106                           	psect	text84,global,reloc=2,class=CODE,delta=1
   107                           	psect	text85,global,reloc=2,class=CODE,delta=1
   108                           	psect	text86,global,reloc=2,class=CODE,delta=1
   109                           	psect	text87,global,reloc=2,class=CODE,delta=1
   110                           	psect	text88,global,reloc=2,class=CODE,delta=1
   111                           	psect	text89,global,reloc=2,class=CODE,delta=1
   112                           	psect	text90,global,reloc=2,class=CODE,delta=1
   113                           	psect	text91,global,reloc=2,class=CODE,delta=1
   114                           	psect	text92,global,reloc=2,class=CODE,delta=1
   115                           	psect	text93,global,reloc=2,class=CODE,delta=1
   116                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   117                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   118                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   119                           	dabs	1,0x400,48,_BDT
   120                           	dabs	1,0x500,64,_cdc_data_tx
   121                           	dabs	1,0x438,8,_CtrlTrfData
   122                           	dabs	1,0x430,8,_SetupPkt
   123                           	dabs	1,0x540,64,_cdc_data_rx
   124  0000                     
   125                           ; Version 1.44
   126                           ; Generated 14/09/2017 GMT
   127                           ; 
   128                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   129                           ; All rights reserved.
   130                           ; 
   131                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   132                           ; 
   133                           ; Redistribution and use in source and binary forms, with or without modification, are
   134                           ; permitted provided that the following conditions are met:
   135                           ; 
   136                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   137                           ;        conditions and the following disclaimer.
   138                           ; 
   139                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   140                           ;        of conditions and the following disclaimer in the documentation and/or other
   141                           ;        materials provided with the distribution.
   142                           ; 
   143                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   144                           ;        software without specific prior written permission.
   145                           ; 
   146                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   147                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   148                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   149                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   150                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   151                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   152                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   153                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   154                           ; 
   155                           ; 
   156                           ; Code-generator required, PIC18F4550 Definitions
   157                           ; 
   158                           ; SFR Addresses
   159  0000                     
   160                           	psect	idataBANK3
   161  005664                     __pidataBANK3:
   162                           	opt stack 0
   163                           
   164                           ;initializer for _MSG_LORAWAN
   165  005664  85                 	db	low (STR_18+7)
   166  005665  7F                 	db	high (STR_18+7)
   167  005666  37                 	db	low STR_10
   168  005667  7F                 	db	high STR_10
   169  005668  53                 	db	low STR_11
   170  005669  7F                 	db	high STR_11
   171  00566A  69                 	db	low STR_12
   172  00566B  7F                 	db	high STR_12
   173  00566C  C8                 	db	low STR_13
   174  00566D  7F                 	db	high STR_13
   175  00566E  AF                 	db	low STR_14
   176  00566F  7E                 	db	high STR_14
   177  005670  FA                 	db	low STR_15
   178  005671  7F                 	db	high STR_15
   179  005672  5E                 	db	low STR_16
   180  005673  7F                 	db	high STR_16
   181  005674  05                 	db	low STR_17
   182  005675  7F                 	db	high STR_17
   183  005676  7E                 	db	low STR_18
   184  005677  7F                 	db	high STR_18
   185  005678  9B                 	db	low STR_19
   186  005679  7F                 	db	high STR_19
   187  00567A  A3                 	db	low STR_20
   188  00567B  7F                 	db	high STR_20
   189  00567C  45                 	db	low STR_21
   190  00567D  7F                 	db	high STR_21
   191  00567E  C1                 	db	low STR_22
   192  00567F  7F                 	db	high STR_22
   193  005680  27                 	db	low STR_23
   194  005681  7F                 	db	high STR_23
   195                           
   196                           ;initializer for _randx
   197  005682  0001               	dw	1
   198  005684  0000               	dw	0
   199                           
   200                           	psect	mediumconst
   201  007BD2                     __pmediumconst:
   202                           	opt stack 0
   203  007BD2  00                 	db	0
   204  007BD3                     _dpowers:
   205                           	opt stack 0
   206  007BD3  0001               	dw	1
   207  007BD5  0000               	dw	0
   208  007BD7  000A               	dw	10
   209  007BD9  0000               	dw	0
   210  007BDB  0064               	dw	100
   211  007BDD  0000               	dw	0
   212  007BDF  03E8               	dw	1000
   213  007BE1  0000               	dw	0
   214  007BE3  2710               	dw	10000
   215  007BE5  0000               	dw	0
   216  007BE7  86A0               	dw	34464
   217  007BE9  0001               	dw	1
   218  007BEB  4240               	dw	16960
   219  007BED  000F               	dw	15
   220  007BEF  9680               	dw	38528
   221  007BF1  0098               	dw	152
   222  007BF3  E100               	dw	57600
   223  007BF5  05F5               	dw	1525
   224  007BF7  CA00               	dw	51712
   225  007BF9  3B9A               	dw	15258
   226  007BFB                     __end_of_dpowers:
   227                           	opt stack 0
   228  007BFB                     __powers_:
   229                           	opt stack 0
   230  007BFB  00                 	db	0
   231  007BFC  80                 	db	128
   232  007BFD  3F                 	db	63
   233  007BFE  00                 	db	0
   234  007BFF  20                 	db	32
   235  007C00  41                 	db	65
   236  007C01  00                 	db	0
   237  007C02  C8                 	db	200
   238  007C03  42                 	db	66
   239  007C04  00                 	db	0
   240  007C05  7A                 	db	122
   241  007C06  44                 	db	68
   242  007C07  40                 	db	64
   243  007C08  1C                 	db	28
   244  007C09  46                 	db	70
   245  007C0A  50                 	db	80
   246  007C0B  C3                 	db	195
   247  007C0C  47                 	db	71
   248  007C0D  24                 	db	36
   249  007C0E  74                 	db	116
   250  007C0F  49                 	db	73
   251  007C10  97                 	db	151
   252  007C11  18                 	db	24
   253  007C12  4B                 	db	75
   254  007C13  BC                 	db	188
   255  007C14  BE                 	db	190
   256  007C15  4C                 	db	76
   257  007C16  6B                 	db	107
   258  007C17  6E                 	db	110
   259  007C18  4E                 	db	78
   260  007C19  03                 	db	3
   261  007C1A  15                 	db	21
   262  007C1B  50                 	db	80
   263  007C1C  79                 	db	121
   264  007C1D  AD                 	db	173
   265  007C1E  60                 	db	96
   266  007C1F  F3                 	db	243
   267  007C20  49                 	db	73
   268  007C21  71                 	db	113
   269  007C22                     __end_of__powers_:
   270                           	opt stack 0
   271  007C22                     __npowers_:
   272                           	opt stack 0
   273  007C22  00                 	db	0
   274  007C23  80                 	db	128
   275  007C24  3F                 	db	63
   276  007C25  CD                 	db	205
   277  007C26  CC                 	db	204
   278  007C27  3D                 	db	61
   279  007C28  D7                 	db	215
   280  007C29  23                 	db	35
   281  007C2A  3C                 	db	60
   282  007C2B  12                 	db	18
   283  007C2C  83                 	db	131
   284  007C2D  3A                 	db	58
   285  007C2E  B7                 	db	183
   286  007C2F  D1                 	db	209
   287  007C30  38                 	db	56
   288  007C31  C6                 	db	198
   289  007C32  27                 	db	39
   290  007C33  37                 	db	55
   291  007C34  38                 	db	56
   292  007C35  86                 	db	134
   293  007C36  35                 	db	53
   294  007C37  C0                 	db	192
   295  007C38  D6                 	db	214
   296  007C39  33                 	db	51
   297  007C3A  CC                 	db	204
   298  007C3B  2B                 	db	43
   299  007C3C  32                 	db	50
   300  007C3D  70                 	db	112
   301  007C3E  89                 	db	137
   302  007C3F  30                 	db	48
   303  007C40  E7                 	db	231
   304  007C41  DB                 	db	219
   305  007C42  2E                 	db	46
   306  007C43  E5                 	db	229
   307  007C44  3C                 	db	60
   308  007C45  1E                 	db	30
   309  007C46  42                 	db	66
   310  007C47  A2                 	db	162
   311  007C48  0D                 	db	13
   312  007C49                     __end_of__npowers_:
   313                           	opt stack 0
   314  007C49                     _hexpowers:
   315                           	opt stack 0
   316  007C49  0001               	dw	1
   317  007C4B  0000               	dw	0
   318  007C4D  0010               	dw	16
   319  007C4F  0000               	dw	0
   320  007C51  0100               	dw	256
   321  007C53  0000               	dw	0
   322  007C55  1000               	dw	4096
   323  007C57  0000               	dw	0
   324  007C59  0000               	dw	0
   325  007C5B  0001               	dw	1
   326  007C5D  0000               	dw	0
   327  007C5F  0010               	dw	16
   328  007C61  0000               	dw	0
   329  007C63  0100               	dw	256
   330  007C65  0000               	dw	0
   331  007C67  1000               	dw	4096
   332  007C69                     __end_of_hexpowers:
   333                           	opt stack 0
   334  007C69                     _USB_SD_Ptr:
   335                           	opt stack 0
   336  007C69  CA                 	db	low _sd000
   337  007C6A  7D                 	db	high _sd000
   338  007C6B  E8                 	db	low _sd001
   339  007C6C  7C                 	db	high _sd001
   340  007C6D  B4                 	db	low _sd002
   341  007C6E  7C                 	db	high _sd002
   342  007C6F                     __end_of_USB_SD_Ptr:
   343                           	opt stack 0
   344  007C6F                     _USB_CD_Ptr:
   345                           	opt stack 0
   346  007C6F  71                 	db	low _configDescriptor1
   347  007C70  7C                 	db	high _configDescriptor1
   348  007C71                     __end_of_USB_CD_Ptr:
   349                           	opt stack 0
   350  007C71                     _configDescriptor1:
   351                           	opt stack 0
   352  007C71  09                 	db	9
   353  007C72  02                 	db	2
   354  007C73  43                 	db	67
   355  007C74  00                 	db	0
   356  007C75  02                 	db	2
   357  007C76  01                 	db	1
   358  007C77  00                 	db	0
   359  007C78  C0                 	db	192
   360  007C79  32                 	db	50
   361  007C7A  09                 	db	9
   362  007C7B  04                 	db	4
   363  007C7C  00                 	db	0
   364  007C7D  00                 	db	0
   365  007C7E  01                 	db	1
   366  007C7F  02                 	db	2
   367  007C80  02                 	db	2
   368  007C81  01                 	db	1
   369  007C82  00                 	db	0
   370  007C83  05                 	db	5
   371  007C84  24                 	db	36
   372  007C85  00                 	db	0
   373  007C86  10                 	db	16
   374  007C87  01                 	db	1
   375  007C88  04                 	db	4
   376  007C89  24                 	db	36
   377  007C8A  02                 	db	2
   378  007C8B  02                 	db	2
   379  007C8C  05                 	db	5
   380  007C8D  24                 	db	36
   381  007C8E  06                 	db	6
   382  007C8F  00                 	db	0
   383  007C90  01                 	db	1
   384  007C91  05                 	db	5
   385  007C92  24                 	db	36
   386  007C93  01                 	db	1
   387  007C94  00                 	db	0
   388  007C95  01                 	db	1
   389  007C96  07                 	db	7
   390  007C97  05                 	db	5
   391  007C98  81                 	db	129
   392  007C99  03                 	db	3
   393  007C9A  08                 	db	8
   394  007C9B  00                 	db	0
   395  007C9C  02                 	db	2
   396  007C9D  09                 	db	9
   397  007C9E  04                 	db	4
   398  007C9F  01                 	db	1
   399  007CA0  00                 	db	0
   400  007CA1  02                 	db	2
   401  007CA2  0A                 	db	10
   402  007CA3  00                 	db	0
   403  007CA4  00                 	db	0
   404  007CA5  00                 	db	0
   405  007CA6  07                 	db	7
   406  007CA7  05                 	db	5
   407  007CA8  02                 	db	2
   408  007CA9  02                 	db	2
   409  007CAA  40                 	db	64
   410  007CAB  00                 	db	0
   411  007CAC  00                 	db	0
   412  007CAD  07                 	db	7
   413  007CAE  05                 	db	5
   414  007CAF  82                 	db	130
   415  007CB0  02                 	db	2
   416  007CB1  40                 	db	64
   417  007CB2  00                 	db	0
   418  007CB3  00                 	db	0
   419  007CB4                     __end_of_configDescriptor1:
   420                           	opt stack 0
   421  007CB4                     _sd002:
   422                           	opt stack 0
   423  007CB4  34                 	db	52
   424  007CB5  03                 	db	3
   425  007CB6  0043               	dw	67
   426  007CB8  0044               	dw	68
   427  007CBA  0043               	dw	67
   428  007CBC  0020               	dw	32
   429  007CBE  0052               	dw	82
   430  007CC0  0053               	dw	83
   431  007CC2  002D               	dw	45
   432  007CC4  0032               	dw	50
   433  007CC6  0033               	dw	51
   434  007CC8  0032               	dw	50
   435  007CCA  0020               	dw	32
   436  007CCC  0045               	dw	69
   437  007CCE  006D               	dw	109
   438  007CD0  0075               	dw	117
   439  007CD2  006C               	dw	108
   440  007CD4  0061               	dw	97
   441  007CD6  0074               	dw	116
   442  007CD8  0069               	dw	105
   443  007CDA  006F               	dw	111
   444  007CDC  006E               	dw	110
   445  007CDE  0020               	dw	32
   446  007CE0  0044               	dw	68
   447  007CE2  0065               	dw	101
   448  007CE4  006D               	dw	109
   449  007CE6  006F               	dw	111
   450  007CE8                     __end_of_sd002:
   451                           	opt stack 0
   452  007CE8                     _sd001:
   453                           	opt stack 0
   454  007CE8  34                 	db	52
   455  007CE9  03                 	db	3
   456  007CEA  004D               	dw	77
   457  007CEC  0069               	dw	105
   458  007CEE  0063               	dw	99
   459  007CF0  0072               	dw	114
   460  007CF2  006F               	dw	111
   461  007CF4  0063               	dw	99
   462  007CF6  0068               	dw	104
   463  007CF8  0069               	dw	105
   464  007CFA  0070               	dw	112
   465  007CFC  0020               	dw	32
   466  007CFE  0054               	dw	84
   467  007D00  0065               	dw	101
   468  007D02  0063               	dw	99
   469  007D04  0068               	dw	104
   470  007D06  006E               	dw	110
   471  007D08  006F               	dw	111
   472  007D0A  006C               	dw	108
   473  007D0C  006F               	dw	111
   474  007D0E  0067               	dw	103
   475  007D10  0079               	dw	121
   476  007D12  0020               	dw	32
   477  007D14  0049               	dw	73
   478  007D16  006E               	dw	110
   479  007D18  0063               	dw	99
   480  007D1A  002E               	dw	46
   481  007D1C                     __end_of_sd001:
   482                           	opt stack 0
   483  007D1C                     _device_dsc:
   484                           	opt stack 0
   485  007D1C  12                 	db	18
   486  007D1D  01                 	db	1
   487  007D1E  0200               	dw	512
   488  007D20  02                 	db	2
   489  007D21  00                 	db	0
   490  007D22  00                 	db	0
   491  007D23  08                 	db	8
   492  007D24  04D8               	dw	1240
   493  007D26  000A               	dw	10
   494  007D28  0100               	dw	256
   495  007D2A  01                 	db	1
   496  007D2B  02                 	db	2
   497  007D2C  00                 	db	0
   498  007D2D  01                 	db	1
   499  007D2E                     __end_of_device_dsc:
   500                           	opt stack 0
   501  007D2E                     _MAC_SET_SF:
   502                           	opt stack 0
   503  007D2E  72                 	db	114
   504  007D2F  61                 	db	97
   505  007D30  64                 	db	100
   506  007D31  69                 	db	105
   507  007D32  6F                 	db	111
   508  007D33  20                 	db	32
   509  007D34  73                 	db	115
   510  007D35  65                 	db	101
   511  007D36  74                 	db	116
   512  007D37  20                 	db	32
   513  007D38  73                 	db	115
   514  007D39  66                 	db	102
   515  007D3A  20                 	db	32
   516  007D3B  53                 	db	83
   517  007D3C  46                 	db	70
   518  007D3D  00                 	db	0
   519  007D3E                     __end_of_MAC_SET_SF:
   520                           	opt stack 0
   521  007D3E                     _MAC_SET_CH_STATUS:
   522                           	opt stack 0
   523  007D3E  73                 	db	115
   524  007D3F  65                 	db	101
   525  007D40  74                 	db	116
   526  007D41  20                 	db	32
   527  007D42  63                 	db	99
   528  007D43  68                 	db	104
   529  007D44  20                 	db	32
   530  007D45  73                 	db	115
   531  007D46  74                 	db	116
   532  007D47  61                 	db	97
   533  007D48  74                 	db	116
   534  007D49  75                 	db	117
   535  007D4A  73                 	db	115
   536  007D4B  00                 	db	0
   537  007D4C                     __end_of_MAC_SET_CH_STATUS:
   538                           	opt stack 0
   539  007D4C                     _MAC_SET_BW:
   540                           	opt stack 0
   541  007D4C  72                 	db	114
   542  007D4D  61                 	db	97
   543  007D4E  64                 	db	100
   544  007D4F  69                 	db	105
   545  007D50  6F                 	db	111
   546  007D51  20                 	db	32
   547  007D52  73                 	db	115
   548  007D53  65                 	db	101
   549  007D54  74                 	db	116
   550  007D55  20                 	db	32
   551  007D56  62                 	db	98
   552  007D57  77                 	db	119
   553  007D58  00                 	db	0
   554  007D59                     __end_of_MAC_SET_BW:
   555                           	opt stack 0
   556  007D59                     _MAC_SET_APPKEY:
   557                           	opt stack 0
   558  007D59  73                 	db	115
   559  007D5A  65                 	db	101
   560  007D5B  74                 	db	116
   561  007D5C  20                 	db	32
   562  007D5D  61                 	db	97
   563  007D5E  70                 	db	112
   564  007D5F  70                 	db	112
   565  007D60  6B                 	db	107
   566  007D61  65                 	db	101
   567  007D62  79                 	db	121
   568  007D63  00                 	db	0
   569  007D64                     __end_of_MAC_SET_APPKEY:
   570                           	opt stack 0
   571  007D64                     _MAC_SET_APPEUI:
   572                           	opt stack 0
   573  007D64  73                 	db	115
   574  007D65  65                 	db	101
   575  007D66  74                 	db	116
   576  007D67  20                 	db	32
   577  007D68  61                 	db	97
   578  007D69  70                 	db	112
   579  007D6A  70                 	db	112
   580  007D6B  65                 	db	101
   581  007D6C  75                 	db	117
   582  007D6D  69                 	db	105
   583  007D6E  00                 	db	0
   584  007D6F                     __end_of_MAC_SET_APPEUI:
   585                           	opt stack 0
   586  007D6F                     _MAC_SET_DEVEUI:
   587                           	opt stack 0
   588  007D6F  73                 	db	115
   589  007D70  65                 	db	101
   590  007D71  74                 	db	116
   591  007D72  20                 	db	32
   592  007D73  64                 	db	100
   593  007D74  65                 	db	101
   594  007D75  76                 	db	118
   595  007D76  65                 	db	101
   596  007D77  75                 	db	117
   597  007D78  69                 	db	105
   598  007D79  00                 	db	0
   599  007D7A                     __end_of_MAC_SET_DEVEUI:
   600                           	opt stack 0
   601  007D7A                     _MAC_GET_DNCTR:
   602                           	opt stack 0
   603  007D7A  67                 	db	103
   604  007D7B  65                 	db	101
   605  007D7C  74                 	db	116
   606  007D7D  20                 	db	32
   607  007D7E  64                 	db	100
   608  007D7F  6E                 	db	110
   609  007D80  63                 	db	99
   610  007D81  74                 	db	116
   611  007D82  72                 	db	114
   612  007D83  00                 	db	0
   613  007D84                     __end_of_MAC_GET_DNCTR:
   614                           	opt stack 0
   615  007D84                     _MAC_JOIN_OTAA:
   616                           	opt stack 0
   617  007D84  6A                 	db	106
   618  007D85  6F                 	db	111
   619  007D86  69                 	db	105
   620  007D87  6E                 	db	110
   621  007D88  20                 	db	32
   622  007D89  6F                 	db	111
   623  007D8A  74                 	db	116
   624  007D8B  61                 	db	97
   625  007D8C  61                 	db	97
   626  007D8D  00                 	db	0
   627  007D8E                     __end_of_MAC_JOIN_OTAA:
   628                           	opt stack 0
   629  007D8E                     _MAC_TX_UNCNF:
   630                           	opt stack 0
   631  007D8E  74                 	db	116
   632  007D8F  78                 	db	120
   633  007D90  20                 	db	32
   634  007D91  75                 	db	117
   635  007D92  6E                 	db	110
   636  007D93  63                 	db	99
   637  007D94  6E                 	db	110
   638  007D95  66                 	db	102
   639  007D96  00                 	db	0
   640  007D97                     __end_of_MAC_TX_UNCNF:
   641                           	opt stack 0
   642  007D97                     _MAC_GET_ADR:
   643                           	opt stack 0
   644  007D97  67                 	db	103
   645  007D98  65                 	db	101
   646  007D99  74                 	db	116
   647  007D9A  20                 	db	32
   648  007D9B  61                 	db	97
   649  007D9C  64                 	db	100
   650  007D9D  72                 	db	114
   651  007D9E  00                 	db	0
   652  007D9F                     __end_of_MAC_GET_ADR:
   653                           	opt stack 0
   654  007D9F                     _MAC_SET_ADR:
   655                           	opt stack 0
   656  007D9F  73                 	db	115
   657  007DA0  65                 	db	101
   658  007DA1  74                 	db	116
   659  007DA2  20                 	db	32
   660  007DA3  61                 	db	97
   661  007DA4  64                 	db	100
   662  007DA5  72                 	db	114
   663  007DA6  00                 	db	0
   664  007DA7                     __end_of_MAC_SET_ADR:
   665                           	opt stack 0
   666  007DA7                     _MAC_SET_DR:
   667                           	opt stack 0
   668  007DA7  73                 	db	115
   669  007DA8  65                 	db	101
   670  007DA9  74                 	db	116
   671  007DAA  20                 	db	32
   672  007DAB  64                 	db	100
   673  007DAC  72                 	db	114
   674  007DAD  00                 	db	0
   675  007DAE                     __end_of_MAC_SET_DR:
   676                           	opt stack 0
   677  007DAE                     _MAC_TX_CNF:
   678                           	opt stack 0
   679  007DAE  74                 	db	116
   680  007DAF  78                 	db	120
   681  007DB0  20                 	db	32
   682  007DB1  63                 	db	99
   683  007DB2  6E                 	db	110
   684  007DB3  66                 	db	102
   685  007DB4  00                 	db	0
   686  007DB5                     __end_of_MAC_TX_CNF:
   687                           	opt stack 0
   688  007DB5                     _SYS_RESET:
   689                           	opt stack 0
   690  007DB5  72                 	db	114
   691  007DB6  65                 	db	101
   692  007DB7  73                 	db	115
   693  007DB8  65                 	db	101
   694  007DB9  74                 	db	116
   695  007DBA  00                 	db	0
   696  007DBB                     __end_of_SYS_RESET:
   697                           	opt stack 0
   698  007DBB                     _SYS:
   699                           	opt stack 0
   700  007DBB  73                 	db	115
   701  007DBC  79                 	db	121
   702  007DBD  73                 	db	115
   703  007DBE  20                 	db	32
   704  007DBF  00                 	db	0
   705  007DC0                     __end_of_SYS:
   706                           	opt stack 0
   707  007DC0                     _MAC_SAVE:
   708                           	opt stack 0
   709  007DC0  73                 	db	115
   710  007DC1  61                 	db	97
   711  007DC2  76                 	db	118
   712  007DC3  65                 	db	101
   713  007DC4  00                 	db	0
   714  007DC5                     __end_of_MAC_SAVE:
   715                           	opt stack 0
   716  007DC5                     _MAC:
   717                           	opt stack 0
   718  007DC5  6D                 	db	109
   719  007DC6  61                 	db	97
   720  007DC7  63                 	db	99
   721  007DC8  20                 	db	32
   722  007DC9  00                 	db	0
   723  007DCA                     __end_of_MAC:
   724                           	opt stack 0
   725  007DCA                     _sd000:
   726                           	opt stack 0
   727  007DCA  04                 	db	4
   728  007DCB  03                 	db	3
   729  007DCC  0409               	dw	1033
   730  007DCE                     __end_of_sd000:
   731                           	opt stack 0
   732  007DCE                     _STATE_OFF:
   733                           	opt stack 0
   734  007DCE  6F                 	db	111
   735  007DCF  66                 	db	102
   736  007DD0  66                 	db	102
   737  007DD1  00                 	db	0
   738  007DD2                     __end_of_STATE_OFF:
   739                           	opt stack 0
   740  007DD2                     _STATE_ON:
   741                           	opt stack 0
   742  007DD2  6F                 	db	111
   743  007DD3  6E                 	db	110
   744  007DD4  00                 	db	0
   745  007DD5                     __end_of_STATE_ON:
   746                           	opt stack 0
   747  007DD5                     _get_preambleid_900:
   748                           	opt stack 0
   749  007DD5  48                 	db	72
   750  007DD6  50                 	db	80
   751  007DD7                     __end_of_get_preambleid_900:
   752                           	opt stack 0
   753  007DD7                     _set_preambleid_900:
   754                           	opt stack 0
   755  007DD7  48                 	db	72
   756  007DD8  50                 	db	80
   757  007DD9                     __end_of_set_preambleid_900:
   758                           	opt stack 0
   759  007DD9                     _get_channelmask_900:
   760                           	opt stack 0
   761  007DD9  43                 	db	67
   762  007DDA  4D                 	db	77
   763  007DDB                     __end_of_get_channelmask_900:
   764                           	opt stack 0
   765  007DDB                     _set_channelmask_900:
   766                           	opt stack 0
   767  007DDB  43                 	db	67
   768  007DDC  4D                 	db	77
   769  007DDD                     __end_of_set_channelmask_900:
   770                           	opt stack 0
   771  007DDD                     _gs_encryption:
   772                           	opt stack 0
   773  007DDD  45                 	db	69
   774  007DDE  45                 	db	69
   775  007DDF                     __end_of_gs_encryption:
   776                           	opt stack 0
   777  007DDF                     _set_link_key:
   778                           	opt stack 0
   779  007DDF  4B                 	db	75
   780  007DE0  59                 	db	89
   781  007DE1                     __end_of_set_link_key:
   782                           	opt stack 0
   783  007DE1                     _write_values:
   784                           	opt stack 0
   785  007DE1  57                 	db	87
   786  007DE2  52                 	db	82
   787  007DE3                     __end_of_write_values:
   788                           	opt stack 0
   789  007DE3                     _gs_channel:
   790                           	opt stack 0
   791  007DE3  43                 	db	67
   792  007DE4  48                 	db	72
   793  007DE5                     __end_of_gs_channel:
   794                           	opt stack 0
   795  007DE5                     _gs_pan:
   796                           	opt stack 0
   797  007DE5  49                 	db	73
   798  007DE6  44                 	db	68
   799  007DE7                     __end_of_gs_pan:
   800                           	opt stack 0
   801  007DE7                     _get_own_mac_high:
   802                           	opt stack 0
   803  007DE7  53                 	db	83
   804  007DE8  48                 	db	72
   805  007DE9                     __end_of_get_own_mac_high:
   806                           	opt stack 0
   807  007DE9                     _get_own_mac_low:
   808                           	opt stack 0
   809  007DE9  53                 	db	83
   810  007DEA  4C                 	db	76
   811  007DEB                     __end_of_get_own_mac_low:
   812                           	opt stack 0
   813  0000                     _EECON2	set	4007
   814  0000                     _EECON1bits	set	4006
   815  0000                     _EEDATA	set	4008
   816  0000                     _EEADR	set	4009
   817  0000                     _ADRESL	set	4035
   818  0000                     _ADRESH	set	4036
   819  0000                     _ADCON0	set	4034
   820  0000                     _ADCON2	set	4032
   821  0000                     _ADCON1	set	4033
   822  0000                     _IPR1bits	set	3999
   823  0000                     _CCP1CON	set	4029
   824  0000                     _CCPR1L	set	4030
   825  0000                     _CCPR1H	set	4031
   826  0000                     _TMR1L	set	4046
   827  0000                     _TMR1H	set	4047
   828  0000                     _T3CON	set	4017
   829  0000                     _T0CON	set	4053
   830  0000                     _T1CON	set	4045
   831  0000                     _RCREG	set	4014
   832  0000                     _RCSTA	set	4011
   833  0000                     _TXREG	set	4013
   834  0000                     _RCSTAbits	set	4011
   835  0000                     _SPBRGH	set	4016
   836  0000                     _SPBRG	set	4015
   837  0000                     _BAUDCONbits	set	4024
   838  0000                     _TXSTAbits	set	4012
   839  0000                     _TRISCbits	set	3988
   840  0000                     _LATDbits	set	3980
   841  0000                     _LATEbits	set	3981
   842  0000                     _PORTEbits	set	3972
   843  0000                     _TRISDbits	set	3989
   844  0000                     _TRISEbits	set	3990
   845  0000                     _UEP0bits	set	3952
   846  0000                     _INTCONbits	set	4082
   847  0000                     _IPR2bits	set	4002
   848  0000                     _RCONbits	set	4048
   849  0000                     _PORTCbits	set	3970
   850  0000                     _UCON	set	3949
   851  0000                     _USTAT	set	3948
   852  0000                     _PIR2bits	set	4001
   853  0000                     _UIEbits	set	3945
   854  0000                     _UIRbits	set	3944
   855  0000                     _UADDR	set	3950
   856  0000                     _UCONbits	set	3949
   857  0000                     _UIE	set	3945
   858  0000                     _UEIE	set	3947
   859  0000                     _UCFG	set	3951
   860  0000                     _UIR	set	3944
   861  0000                     _UEIR	set	3946
   862  0000                     _PIE2bits	set	4000
   863  0000                     _PORTDbits	set	3971
   864  0000                     _UEP1	set	3953
   865  0000                     _UEP0	set	3952
   866  0000                     _GO_DONE	set	32273
   867  0000                     _ADIE	set	31982
   868  0000                     _ADIF	set	31990
   869  0000                     _ADON	set	32272
   870  0000                     _TMR0IE	set	32661
   871  0000                     _GIEH	set	32663
   872  0000                     _TMR1IE	set	31976
   873  0000                     _TXIF	set	31988
   874  0000                     _USBIE	set	32005
   875  0000                     _RCIF	set	31989
   876  0000                     _RCIE	set	31981
   877  0000                     _CCP1IE	set	31978
   878  0000                     _CCP1IF	set	31986
   879  007DEB                     STR_1:
   880                           
   881                           ; BSR set to: 3
   882  007DEB  72                 	db	114	;'r'
   883  007DEC  65                 	db	101	;'e'
   884  007DED  73                 	db	115	;'s'
   885  007DEE  70                 	db	112	;'p'
   886  007DEF  6F                 	db	111	;'o'
   887  007DF0  73                 	db	115	;'s'
   888  007DF1  74                 	db	116	;'t'
   889  007DF2  61                 	db	97	;'a'
   890  007DF3  3A                 	db	58	;':'
   891  007DF4  20                 	db	32
   892  007DF5  25                 	db	37
   893  007DF6  32                 	db	50	;'2'
   894  007DF7  58                 	db	88	;'X'
   895  007DF8  20                 	db	32
   896  007DF9  25                 	db	37
   897  007DFA  32                 	db	50	;'2'
   898  007DFB  58                 	db	88	;'X'
   899  007DFC  20                 	db	32
   900  007DFD  25                 	db	37
   901  007DFE  32                 	db	50	;'2'
   902  007DFF  58                 	db	88	;'X'
   903  007E00  20                 	db	32
   904  007E01  25                 	db	37
   905  007E02  32                 	db	50	;'2'
   906  007E03  58                 	db	88	;'X'
   907  007E04  20                 	db	32
   908  007E05  25                 	db	37
   909  007E06  32                 	db	50	;'2'
   910  007E07  58                 	db	88	;'X'
   911  007E08  20                 	db	32
   912  007E09  25                 	db	37
   913  007E0A  32                 	db	50	;'2'
   914  007E0B  58                 	db	88	;'X'
   915  007E0C  20                 	db	32
   916  007E0D  25                 	db	37
   917  007E0E  32                 	db	50	;'2'
   918  007E0F  58                 	db	88	;'X'
   919  007E10  20                 	db	32
   920  007E11  25                 	db	37
   921  007E12  32                 	db	50	;'2'
   922  007E13  58                 	db	88	;'X'
   923  007E14  20                 	db	32
   924  007E15  25                 	db	37
   925  007E16  32                 	db	50	;'2'
   926  007E17  58                 	db	88	;'X'
   927  007E18  20                 	db	32
   928  007E19  25                 	db	37
   929  007E1A  32                 	db	50	;'2'
   930  007E1B  58                 	db	88	;'X'
   931  007E1C  20                 	db	32
   932  007E1D  20                 	db	32
   933  007E1E  25                 	db	37
   934  007E1F  64                 	db	100	;'d'
   935  007E20  20                 	db	32
   936  007E21  20                 	db	32
   937  007E22  25                 	db	37
   938  007E23  64                 	db	100	;'d'
   939  007E24  20                 	db	32
   940  007E25  20                 	db	32
   941  007E26  25                 	db	37
   942  007E27  64                 	db	100	;'d'
   943  007E28  20                 	db	32
   944  007E29  20                 	db	32
   945  007E2A  25                 	db	37
   946  007E2B  64                 	db	100	;'d'
   947  007E2C  20                 	db	32
   948  007E2D  20                 	db	32
   949  007E2E  25                 	db	37
   950  007E2F  64                 	db	100	;'d'
   951  007E30  20                 	db	32
   952  007E31  20                 	db	32
   953  007E32  25                 	db	37
   954  007E33  64                 	db	100	;'d'
   955  007E34  20                 	db	32
   956  007E35  20                 	db	32
   957  007E36  25                 	db	37
   958  007E37  64                 	db	100	;'d'
   959  007E38  20                 	db	32
   960  007E39  20                 	db	32
   961  007E3A  25                 	db	37
   962  007E3B  64                 	db	100	;'d'
   963  007E3C  20                 	db	32
   964  007E3D  20                 	db	32
   965  007E3E  25                 	db	37
   966  007E3F  64                 	db	100	;'d'
   967  007E40  20                 	db	32
   968  007E41  20                 	db	32
   969  007E42  25                 	db	37
   970  007E43  64                 	db	100	;'d'
   971  007E44  0A                 	db	10
   972  007E45  0D                 	db	13
   973  007E46  00                 	db	0
   974  007E47                     STR_27:
   975                           
   976                           ; BSR set to: 3
   977  007E47  25                 	db	37
   978  007E48  73                 	db	115	;'s'
   979  007E49  20                 	db	32
   980  007E4A  25                 	db	37
   981  007E4B  2E                 	db	46
   982  007E4C  32                 	db	50	;'2'
   983  007E4D  78                 	db	120	;'x'
   984  007E4E  25                 	db	37
   985  007E4F  2E                 	db	46
   986  007E50  32                 	db	50	;'2'
   987  007E51  78                 	db	120	;'x'
   988  007E52  25                 	db	37
   989  007E53  2E                 	db	46
   990  007E54  32                 	db	50	;'2'
   991  007E55  78                 	db	120	;'x'
   992  007E56  25                 	db	37
   993  007E57  2E                 	db	46
   994  007E58  32                 	db	50	;'2'
   995  007E59  78                 	db	120	;'x'
   996  007E5A  25                 	db	37
   997  007E5B  2E                 	db	46
   998  007E5C  32                 	db	50	;'2'
   999  007E5D  78                 	db	120	;'x'
  1000  007E5E  25                 	db	37
  1001  007E5F  2E                 	db	46
  1002  007E60  32                 	db	50	;'2'
  1003  007E61  78                 	db	120	;'x'
  1004  007E62  25                 	db	37
  1005  007E63  2E                 	db	46
  1006  007E64  32                 	db	50	;'2'
  1007  007E65  78                 	db	120	;'x'
  1008  007E66  25                 	db	37
  1009  007E67  2E                 	db	46
  1010  007E68  32                 	db	50	;'2'
  1011  007E69  78                 	db	120	;'x'
  1012  007E6A  25                 	db	37
  1013  007E6B  2E                 	db	46
  1014  007E6C  32                 	db	50	;'2'
  1015  007E6D  78                 	db	120	;'x'
  1016  007E6E  25                 	db	37
  1017  007E6F  2E                 	db	46
  1018  007E70  32                 	db	50	;'2'
  1019  007E71  78                 	db	120	;'x'
  1020  007E72  25                 	db	37
  1021  007E73  2E                 	db	46
  1022  007E74  32                 	db	50	;'2'
  1023  007E75  78                 	db	120	;'x'
  1024  007E76  25                 	db	37
  1025  007E77  2E                 	db	46
  1026  007E78  32                 	db	50	;'2'
  1027  007E79  78                 	db	120	;'x'
  1028  007E7A  25                 	db	37
  1029  007E7B  2E                 	db	46
  1030  007E7C  32                 	db	50	;'2'
  1031  007E7D  78                 	db	120	;'x'
  1032  007E7E  25                 	db	37
  1033  007E7F  2E                 	db	46
  1034  007E80  32                 	db	50	;'2'
  1035  007E81  78                 	db	120	;'x'
  1036  007E82  25                 	db	37
  1037  007E83  2E                 	db	46
  1038  007E84  32                 	db	50	;'2'
  1039  007E85  78                 	db	120	;'x'
  1040  007E86  25                 	db	37
  1041  007E87  2E                 	db	46
  1042  007E88  32                 	db	50	;'2'
  1043  007E89  78                 	db	120	;'x'
  1044  007E8A  00                 	db	0
  1045  007E8B                     STR_25:
  1046                           
  1047                           ; BSR set to: 3
  1048  007E8B  25                 	db	37
  1049  007E8C  73                 	db	115	;'s'
  1050  007E8D  20                 	db	32
  1051  007E8E  25                 	db	37
  1052  007E8F  2E                 	db	46
  1053  007E90  32                 	db	50	;'2'
  1054  007E91  78                 	db	120	;'x'
  1055  007E92  25                 	db	37
  1056  007E93  2E                 	db	46
  1057  007E94  32                 	db	50	;'2'
  1058  007E95  78                 	db	120	;'x'
  1059  007E96  25                 	db	37
  1060  007E97  2E                 	db	46
  1061  007E98  32                 	db	50	;'2'
  1062  007E99  78                 	db	120	;'x'
  1063  007E9A  25                 	db	37
  1064  007E9B  2E                 	db	46
  1065  007E9C  32                 	db	50	;'2'
  1066  007E9D  78                 	db	120	;'x'
  1067  007E9E  25                 	db	37
  1068  007E9F  2E                 	db	46
  1069  007EA0  32                 	db	50	;'2'
  1070  007EA1  78                 	db	120	;'x'
  1071  007EA2  25                 	db	37
  1072  007EA3  2E                 	db	46
  1073  007EA4  32                 	db	50	;'2'
  1074  007EA5  78                 	db	120	;'x'
  1075  007EA6  25                 	db	37
  1076  007EA7  2E                 	db	46
  1077  007EA8  32                 	db	50	;'2'
  1078  007EA9  78                 	db	120	;'x'
  1079  007EAA  25                 	db	37
  1080  007EAB  2E                 	db	46
  1081  007EAC  32                 	db	50	;'2'
  1082  007EAD  78                 	db	120	;'x'
  1083  007EAE  00                 	db	0
  1084  007EAF                     STR_14:
  1085                           
  1086                           ; BSR set to: 3
  1087  007EAF  66                 	db	102	;'f'
  1088  007EB0  72                 	db	114	;'r'
  1089  007EB1  61                 	db	97	;'a'
  1090  007EB2  6D                 	db	109	;'m'
  1091  007EB3  65                 	db	101	;'e'
  1092  007EB4  5F                 	db	95	;'_'
  1093  007EB5  63                 	db	99	;'c'
  1094  007EB6  6F                 	db	111	;'o'
  1095  007EB7  75                 	db	117	;'u'
  1096  007EB8  6E                 	db	110	;'n'
  1097  007EB9  74                 	db	116	;'t'
  1098  007EBA  65                 	db	101	;'e'
  1099  007EBB  72                 	db	114	;'r'
  1100  007EBC  5F                 	db	95	;'_'
  1101  007EBD  65                 	db	101	;'e'
  1102  007EBE  72                 	db	114	;'r'
  1103  007EBF  72                 	db	114	;'r'
  1104  007EC0  5F                 	db	95	;'_'
  1105  007EC1  72                 	db	114	;'r'
  1106  007EC2  65                 	db	101	;'e'
  1107  007EC3  6A                 	db	106	;'j'
  1108  007EC4  6F                 	db	111	;'o'
  1109  007EC5  69                 	db	105	;'i'
  1110  007EC6  6E                 	db	110	;'n'
  1111  007EC7  5F                 	db	95	;'_'
  1112  007EC8  6E                 	db	110	;'n'
  1113  007EC9  65                 	db	101	;'e'
  1114  007ECA  65                 	db	101	;'e'
  1115  007ECB  64                 	db	100	;'d'
  1116  007ECC  65                 	db	101	;'e'
  1117  007ECD  64                 	db	100	;'d'
  1118  007ECE  00                 	db	0
  1119  007ECF                     
  1120                           ; BSR set to: 3
  1121  007ECF  25                 	db	37
  1122  007ED0  73                 	db	115	;'s'
  1123  007ED1  3A                 	db	58	;':'
  1124  007ED2  25                 	db	37
  1125  007ED3  6C                 	db	108	;'l'
  1126  007ED4  75                 	db	117	;'u'
  1127  007ED5  3B                 	db	59	;';'
  1128  007ED6  25                 	db	37
  1129  007ED7  6C                 	db	108	;'l'
  1130  007ED8  75                 	db	117	;'u'
  1131  007ED9  3B                 	db	59	;';'
  1132  007EDA  25                 	db	37
  1133  007EDB  6C                 	db	108	;'l'
  1134  007EDC  75                 	db	117	;'u'
  1135  007EDD  3B                 	db	59	;';'
  1136  007EDE  25                 	db	37
  1137  007EDF  6C                 	db	108	;'l'
  1138  007EE0  75                 	db	117	;'u'
  1139  007EE1  23                 	db	35
  1140  007EE2  00                 	db	0
  1141  007EE3                     STR_40:
  1142                           
  1143                           ; BSR set to: 3
  1144  007EE3  30                 	db	48	;'0'
  1145  007EE4  31                 	db	49	;'1'
  1146  007EE5  32                 	db	50	;'2'
  1147  007EE6  33                 	db	51	;'3'
  1148  007EE7  34                 	db	52	;'4'
  1149  007EE8  35                 	db	53	;'5'
  1150  007EE9  36                 	db	54	;'6'
  1151  007EEA  37                 	db	55	;'7'
  1152  007EEB  38                 	db	56	;'8'
  1153  007EEC  39                 	db	57	;'9'
  1154  007EED  41                 	db	65	;'A'
  1155  007EEE  42                 	db	66	;'B'
  1156  007EEF  43                 	db	67	;'C'
  1157  007EF0  44                 	db	68	;'D'
  1158  007EF1  45                 	db	69	;'E'
  1159  007EF2  46                 	db	70	;'F'
  1160  007EF3  00                 	db	0
  1161  007EF4                     STR_41:
  1162                           
  1163                           ; BSR set to: 3
  1164  007EF4  30                 	db	48	;'0'
  1165  007EF5  31                 	db	49	;'1'
  1166  007EF6  32                 	db	50	;'2'
  1167  007EF7  33                 	db	51	;'3'
  1168  007EF8  34                 	db	52	;'4'
  1169  007EF9  35                 	db	53	;'5'
  1170  007EFA  36                 	db	54	;'6'
  1171  007EFB  37                 	db	55	;'7'
  1172  007EFC  38                 	db	56	;'8'
  1173  007EFD  39                 	db	57	;'9'
  1174  007EFE  61                 	db	97	;'a'
  1175  007EFF  62                 	db	98	;'b'
  1176  007F00  63                 	db	99	;'c'
  1177  007F01  64                 	db	100	;'d'
  1178  007F02  65                 	db	101	;'e'
  1179  007F03  66                 	db	102	;'f'
  1180  007F04  00                 	db	0
  1181  007F05                     STR_17:
  1182                           
  1183                           ; BSR set to: 3
  1184  007F05  69                 	db	105	;'i'
  1185  007F06  6E                 	db	110	;'n'
  1186  007F07  76                 	db	118	;'v'
  1187  007F08  61                 	db	97	;'a'
  1188  007F09  6C                 	db	108	;'l'
  1189  007F0A  69                 	db	105	;'i'
  1190  007F0B  64                 	db	100	;'d'
  1191  007F0C  5F                 	db	95	;'_'
  1192  007F0D  64                 	db	100	;'d'
  1193  007F0E  61                 	db	97	;'a'
  1194  007F0F  74                 	db	116	;'t'
  1195  007F10  61                 	db	97	;'a'
  1196  007F11  5F                 	db	95	;'_'
  1197  007F12  6C                 	db	108	;'l'
  1198  007F13  65                 	db	101	;'e'
  1199  007F14  6E                 	db	110	;'n'
  1200  007F15  00                 	db	0
  1201  007F16                     
  1202                           ; BSR set to: 3
  1203  007F16  3C                 	db	60	;'<'
  1204  007F17  3D                 	db	61	;'='
  1205  007F18  3E                 	db	62	;'>'
  1206  007F19  80                 	db	-128
  1207  007F1A  4E                 	db	78	;'N'
  1208  007F1B  23                 	db	35
  1209  007F1C  25                 	db	37
  1210  007F1D  6C                 	db	108	;'l'
  1211  007F1E  64                 	db	100	;'d'
  1212  007F1F  23                 	db	35
  1213  007F20  25                 	db	37
  1214  007F21  73                 	db	115	;'s'
  1215  007F22  23                 	db	35
  1216  007F23  25                 	db	37
  1217  007F24  75                 	db	117	;'u'
  1218  007F25  23                 	db	35
  1219  007F26  00                 	db	0
  1220  007F27                     STR_23:
  1221                           
  1222                           ; BSR set to: 3
  1223  007F27  61                 	db	97	;'a'
  1224  007F28  63                 	db	99	;'c'
  1225  007F29  63                 	db	99	;'c'
  1226  007F2A  65                 	db	101	;'e'
  1227  007F2B  70                 	db	112	;'p'
  1228  007F2C  74                 	db	116	;'t'
  1229  007F2D  65                 	db	101	;'e'
  1230  007F2E  64                 	db	100	;'d'
  1231  007F2F  52                 	db	82	;'R'
  1232  007F30  4E                 	db	78	;'N'
  1233  007F31  32                 	db	50	;'2'
  1234  007F32  39                 	db	57	;'9'
  1235  007F33  30                 	db	48	;'0'
  1236  007F34  33                 	db	51	;'3'
  1237  007F35  20                 	db	32
  1238  007F36  00                 	db	0
  1239  007F37                     STR_10:
  1240                           
  1241                           ; BSR set to: 3
  1242  007F37  69                 	db	105	;'i'
  1243  007F38  6E                 	db	110	;'n'
  1244  007F39  76                 	db	118	;'v'
  1245  007F3A  61                 	db	97	;'a'
  1246  007F3B  6C                 	db	108	;'l'
  1247  007F3C  69                 	db	105	;'i'
  1248  007F3D  64                 	db	100	;'d'
  1249  007F3E  5F                 	db	95	;'_'
  1250  007F3F  70                 	db	112	;'p'
  1251  007F40  61                 	db	97	;'a'
  1252  007F41  72                 	db	114	;'r'
  1253  007F42  61                 	db	97	;'a'
  1254  007F43  6D                 	db	109	;'m'
  1255  007F44  00                 	db	0
  1256  007F45                     STR_21:
  1257                           
  1258                           ; BSR set to: 3
  1259  007F45  6B                 	db	107	;'k'
  1260  007F46  65                 	db	101	;'e'
  1261  007F47  79                 	db	121	;'y'
  1262  007F48  73                 	db	115	;'s'
  1263  007F49  5F                 	db	95	;'_'
  1264  007F4A  6E                 	db	110	;'n'
  1265  007F4B  6F                 	db	111	;'o'
  1266  007F4C  74                 	db	116	;'t'
  1267  007F4D  5F                 	db	95	;'_'
  1268  007F4E  69                 	db	105	;'i'
  1269  007F4F  6E                 	db	110	;'n'
  1270  007F50  69                 	db	105	;'i'
  1271  007F51  74                 	db	116	;'t'
  1272  007F52  00                 	db	0
  1273  007F53                     STR_11:
  1274                           
  1275                           ; BSR set to: 3
  1276  007F53  6E                 	db	110	;'n'
  1277  007F54  6F                 	db	111	;'o'
  1278  007F55  74                 	db	116	;'t'
  1279  007F56  5F                 	db	95	;'_'
  1280  007F57  6A                 	db	106	;'j'
  1281  007F58  6F                 	db	111	;'o'
  1282  007F59  69                 	db	105	;'i'
  1283  007F5A  6E                 	db	110	;'n'
  1284  007F5B  65                 	db	101	;'e'
  1285  007F5C  64                 	db	100	;'d'
  1286  007F5D  00                 	db	0
  1287  007F5E                     STR_16:
  1288                           
  1289                           ; BSR set to: 3
  1290  007F5E  6D                 	db	109	;'m'
  1291  007F5F  61                 	db	97	;'a'
  1292  007F60  63                 	db	99	;'c'
  1293  007F61  5F                 	db	95	;'_'
  1294  007F62  70                 	db	112	;'p'
  1295  007F63  61                 	db	97	;'a'
  1296  007F64  75                 	db	117	;'u'
  1297  007F65  73                 	db	115	;'s'
  1298  007F66  65                 	db	101	;'e'
  1299  007F67  64                 	db	100	;'d'
  1300  007F68  00                 	db	0
  1301  007F69                     STR_12:
  1302                           
  1303                           ; BSR set to: 3
  1304  007F69  6E                 	db	110	;'n'
  1305  007F6A  6F                 	db	111	;'o'
  1306  007F6B  5F                 	db	95	;'_'
  1307  007F6C  66                 	db	102	;'f'
  1308  007F6D  72                 	db	114	;'r'
  1309  007F6E  65                 	db	101	;'e'
  1310  007F6F  65                 	db	101	;'e'
  1311  007F70  5F                 	db	95	;'_'
  1312  007F71  63                 	db	99	;'c'
  1313  007F72  68                 	db	104	;'h'
  1314  007F73  00                 	db	0
  1315  007F74                     STR_29:
  1316                           
  1317                           ; BSR set to: 3
  1318  007F74  25                 	db	37
  1319  007F75  73                 	db	115	;'s'
  1320  007F76  20                 	db	32
  1321  007F77  25                 	db	37
  1322  007F78  64                 	db	100	;'d'
  1323  007F79  20                 	db	32
  1324  007F7A  6F                 	db	111	;'o'
  1325  007F7B  66                 	db	102	;'f'
  1326  007F7C  66                 	db	102	;'f'
  1327  007F7D  00                 	db	0
  1328  007F7E                     STR_18:
  1329                           
  1330                           ; BSR set to: 3
  1331  007F7E  6D                 	db	109	;'m'
  1332  007F7F  61                 	db	97	;'a'
  1333  007F80  63                 	db	99	;'c'
  1334  007F81  5F                 	db	95	;'_'
  1335  007F82  74                 	db	116	;'t'
  1336  007F83  78                 	db	120	;'x'
  1337  007F84  5F                 	db	95	;'_'
  1338  007F85  6F                 	db	111	;'o'
  1339  007F86  6B                 	db	107	;'k'
  1340  007F87  00                 	db	0
  1341  007F88                     
  1342                           ; BSR set to: 3
  1343  007F88  25                 	db	37
  1344  007F89  73                 	db	115	;'s'
  1345  007F8A  3A                 	db	58	;':'
  1346  007F8B  25                 	db	37
  1347  007F8C  75                 	db	117	;'u'
  1348  007F8D  3B                 	db	59	;';'
  1349  007F8E  25                 	db	37
  1350  007F8F  75                 	db	117	;'u'
  1351  007F90  23                 	db	35
  1352  007F91  00                 	db	0
  1353  007F92                     STR_28:
  1354                           
  1355                           ; BSR set to: 3
  1356  007F92  25                 	db	37
  1357  007F93  73                 	db	115	;'s'
  1358  007F94  20                 	db	32
  1359  007F95  25                 	db	37
  1360  007F96  64                 	db	100	;'d'
  1361  007F97  20                 	db	32
  1362  007F98  6F                 	db	111	;'o'
  1363  007F99  6E                 	db	110	;'n'
  1364  007F9A  00                 	db	0
  1365  007F9B                     STR_19:
  1366                           
  1367                           ; BSR set to: 3
  1368  007F9B  6D                 	db	109	;'m'
  1369  007F9C  61                 	db	97	;'a'
  1370  007F9D  63                 	db	99	;'c'
  1371  007F9E  5F                 	db	95	;'_'
  1372  007F9F  72                 	db	114	;'r'
  1373  007FA0  78                 	db	120	;'x'
  1374  007FA1  20                 	db	32
  1375  007FA2  00                 	db	0
  1376  007FA3                     STR_20:
  1377                           
  1378                           ; BSR set to: 3
  1379  007FA3  6D                 	db	109	;'m'
  1380  007FA4  61                 	db	97	;'a'
  1381  007FA5  63                 	db	99	;'c'
  1382  007FA6  5F                 	db	95	;'_'
  1383  007FA7  65                 	db	101	;'e'
  1384  007FA8  72                 	db	114	;'r'
  1385  007FA9  72                 	db	114	;'r'
  1386  007FAA  00                 	db	0
  1387  007FAB                     
  1388                           ; BSR set to: 3
  1389  007FAB  25                 	db	37
  1390  007FAC  73                 	db	115	;'s'
  1391  007FAD  3A                 	db	58	;':'
  1392  007FAE  25                 	db	37
  1393  007FAF  6C                 	db	108	;'l'
  1394  007FB0  75                 	db	117	;'u'
  1395  007FB1  23                 	db	35
  1396  007FB2  00                 	db	0
  1397  007FB3                     STR_39:
  1398                           
  1399                           ; BSR set to: 3
  1400  007FB3  28                 	db	40
  1401  007FB4  6E                 	db	110	;'n'
  1402  007FB5  75                 	db	117	;'u'
  1403  007FB6  6C                 	db	108	;'l'
  1404  007FB7  6C                 	db	108	;'l'
  1405  007FB8  29                 	db	41
  1406  007FB9  00                 	db	0
  1407  007FBA                     STR_36:
  1408                           
  1409                           ; BSR set to: 3
  1410  007FBA  25                 	db	37
  1411  007FBB  73                 	db	115	;'s'
  1412  007FBC  20                 	db	32
  1413  007FBD  25                 	db	37
  1414  007FBE  64                 	db	100	;'d'
  1415  007FBF  20                 	db	32
  1416  007FC0  00                 	db	0
  1417  007FC1                     STR_22:
  1418                           
  1419                           ; BSR set to: 3
  1420  007FC1  64                 	db	100	;'d'
  1421  007FC2  65                 	db	101	;'e'
  1422  007FC3  6E                 	db	110	;'n'
  1423  007FC4  69                 	db	105	;'i'
  1424  007FC5  65                 	db	101	;'e'
  1425  007FC6  64                 	db	100	;'d'
  1426  007FC7  00                 	db	0
  1427  007FC8                     STR_13:
  1428                           
  1429                           ; BSR set to: 3
  1430  007FC8  73                 	db	115	;'s'
  1431  007FC9  69                 	db	105	;'i'
  1432  007FCA  6C                 	db	108	;'l'
  1433  007FCB  65                 	db	101	;'e'
  1434  007FCC  6E                 	db	110	;'n'
  1435  007FCD  74                 	db	116	;'t'
  1436  007FCE  00                 	db	0
  1437  007FCF                     
  1438                           ; BSR set to: 3
  1439  007FCF  25                 	db	37
  1440  007FD0  73                 	db	115	;'s'
  1441  007FD1  3A                 	db	58	;':'
  1442  007FD2  25                 	db	37
  1443  007FD3  64                 	db	100	;'d'
  1444  007FD4  23                 	db	35
  1445  007FD5  00                 	db	0
  1446  007FD6                     
  1447                           ; BSR set to: 3
  1448  007FD6  25                 	db	37
  1449  007FD7  73                 	db	115	;'s'
  1450  007FD8  3A                 	db	58	;':'
  1451  007FD9  25                 	db	37
  1452  007FDA  66                 	db	102	;'f'
  1453  007FDB  23                 	db	35
  1454  007FDC  00                 	db	0
  1455  007FDD                     
  1456                           ; BSR set to: 3
  1457  007FDD  25                 	db	37
  1458  007FDE  73                 	db	115	;'s'
  1459  007FDF  3A                 	db	58	;':'
  1460  007FE0  25                 	db	37
  1461  007FE1  73                 	db	115	;'s'
  1462  007FE2  23                 	db	35
  1463  007FE3  00                 	db	0
  1464  007FE4                     STR_34:
  1465                           
  1466                           ; BSR set to: 3
  1467  007FE4  25                 	db	37
  1468  007FE5  73                 	db	115	;'s'
  1469  007FE6  20                 	db	32
  1470  007FE7  25                 	db	37
  1471  007FE8  64                 	db	100	;'d'
  1472  007FE9  00                 	db	0
  1473  007FEA                     STR_30:
  1474                           
  1475                           ; BSR set to: 3
  1476  007FEA  25                 	db	37
  1477  007FEB  73                 	db	115	;'s'
  1478  007FEC  20                 	db	32
  1479  007FED  25                 	db	37
  1480  007FEE  73                 	db	115	;'s'
  1481  007FEF  00                 	db	0
  1482  007FF0                     STR_38:
  1483                           
  1484                           ; BSR set to: 3
  1485  007FF0  25                 	db	37
  1486  007FF1  30                 	db	48	;'0'
  1487  007FF2  32                 	db	50	;'2'
  1488  007FF3  58                 	db	88	;'X'
  1489  007FF4  00                 	db	0
  1490  007FF5                     STR_33:
  1491                           
  1492                           ; BSR set to: 3
  1493  007FF5  25                 	db	37
  1494  007FF6  73                 	db	115	;'s'
  1495  007FF7  25                 	db	37
  1496  007FF8  64                 	db	100	;'d'
  1497  007FF9  00                 	db	0
  1498  007FFA                     STR_15:
  1499                           
  1500                           ; BSR set to: 3
  1501  007FFA  62                 	db	98	;'b'
  1502  007FFB  75                 	db	117	;'u'
  1503  007FFC  73                 	db	115	;'s'
  1504  007FFD  79                 	db	121	;'y'
  1505  007FFE  00                 	db	0
  1506  0000                     
  1507                           ; #config settings
  1508  007FFF  00                 	db	0	; dummy byte at the end
  1509  0000                     
  1510                           	psect	cinit
  1511  00488C                     __pcinit:
  1512                           	opt stack 0
  1513  00488C                     start_initialization:
  1514                           	opt stack 0
  1515  00488C                     __initialization:
  1516                           	opt stack 0
  1517                           
  1518                           ; Initialize objects allocated to BANK3 (34 bytes)
  1519                           ; load TBLPTR registers with __pidataBANK3
  1520  00488C  0E64               	movlw	low __pidataBANK3
  1521  00488E  6EF6               	movwf	tblptrl,c
  1522  004890  0E56               	movlw	high __pidataBANK3
  1523  004892  6EF7               	movwf	tblptrh,c
  1524  004894  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1525  004896  6EF8               	movwf	tblptru,c
  1526  004898  EE03  F0C3         	lfsr	0,__pdataBANK3
  1527  00489C  EE10 F022          	lfsr	1,34
  1528  0048A0                     copy_data0:
  1529  0048A0  0009               	tblrd		*+
  1530  0048A2  CFF5 FFEE          	movff	tablat,postinc0
  1531  0048A6  50E5               	movf	postdec1,w,c
  1532  0048A8  50E1               	movf	fsr1l,w,c
  1533  0048AA  E1FA               	bnz	copy_data0
  1534                           
  1535                           ; Clear objects allocated to BANK7 (250 bytes)
  1536  0048AC  EE07  F000         	lfsr	0,__pbssBANK7
  1537  0048B0  0EFA               	movlw	250
  1538  0048B2                     clear_0:
  1539  0048B2  6AEE               	clrf	postinc0,c
  1540  0048B4  06E8               	decf	wreg,f,c
  1541  0048B6  E1FD               	bnz	clear_0
  1542                           
  1543                           ; Clear objects allocated to BANK6 (250 bytes)
  1544  0048B8  EE06  F000         	lfsr	0,__pbssBANK6
  1545  0048BC  0EFA               	movlw	250
  1546  0048BE                     clear_1:
  1547  0048BE  6AEE               	clrf	postinc0,c
  1548  0048C0  06E8               	decf	wreg,f,c
  1549  0048C2  E1FD               	bnz	clear_1
  1550                           
  1551                           ; Clear objects allocated to BANK3 (195 bytes)
  1552  0048C4  EE03  F000         	lfsr	0,__pbssBANK3
  1553  0048C8  0EC3               	movlw	195
  1554  0048CA                     clear_2:
  1555  0048CA  6AEE               	clrf	postinc0,c
  1556  0048CC  06E8               	decf	wreg,f,c
  1557  0048CE  E1FD               	bnz	clear_2
  1558                           
  1559                           ; Clear objects allocated to BANK2 (56 bytes)
  1560  0048D0  EE02  F0C8         	lfsr	0,__pbssBANK2
  1561  0048D4  0E38               	movlw	56
  1562  0048D6                     clear_3:
  1563  0048D6  6AEE               	clrf	postinc0,c
  1564  0048D8  06E8               	decf	wreg,f,c
  1565  0048DA  E1FD               	bnz	clear_3
  1566                           
  1567                           ; Clear objects allocated to BANK1 (17 bytes)
  1568  0048DC  EE01  F0EF         	lfsr	0,__pbssBANK1
  1569  0048E0  0E11               	movlw	17
  1570  0048E2                     clear_4:
  1571  0048E2  6AEE               	clrf	postinc0,c
  1572  0048E4  06E8               	decf	wreg,f,c
  1573  0048E6  E1FD               	bnz	clear_4
  1574                           
  1575                           ; Clear objects allocated to BANK4 (100 bytes)
  1576  0048E8  EE04  F040         	lfsr	0,__pbssBANK4
  1577  0048EC  0E64               	movlw	100
  1578  0048EE                     clear_5:
  1579  0048EE  6AEE               	clrf	postinc0,c
  1580  0048F0  06E8               	decf	wreg,f,c
  1581  0048F2  E1FD               	bnz	clear_5
  1582                           
  1583                           ; Clear objects allocated to BANK5 (100 bytes)
  1584  0048F4  EE05  F080         	lfsr	0,__pbssBANK5
  1585  0048F8  0E64               	movlw	100
  1586  0048FA                     clear_6:
  1587  0048FA  6AEE               	clrf	postinc0,c
  1588  0048FC  06E8               	decf	wreg,f,c
  1589  0048FE  E1FD               	bnz	clear_6
  1590                           
  1591                           ; Clear objects allocated to COMRAM (39 bytes)
  1592  004900  EE00  F038         	lfsr	0,__pbssCOMRAM
  1593  004904  0E27               	movlw	39
  1594  004906                     clear_7:
  1595  004906  6AEE               	clrf	postinc0,c
  1596  004908  06E8               	decf	wreg,f,c
  1597  00490A  E1FD               	bnz	clear_7
  1598  00490C                     end_of_initialization:
  1599                           	opt stack 0
  1600  00490C                     __end_of__initialization:
  1601                           	opt stack 0
  1602  00490C  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1603  00490E  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1604  004910  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1605  004912  6EF8               	movwf	tblptru,c
  1606  004914  0100               	movlb	0
  1607  004916  EF08  F007         	goto	_main	;jump to C main() function
  1608                           tblptru	equ	0xFF8
  1609                           tblptrh	equ	0xFF7
  1610                           tblptrl	equ	0xFF6
  1611                           tablat	equ	0xFF5
  1612                           postinc0	equ	0xFEE
  1613                           wreg	equ	0xFE8
  1614                           postdec1	equ	0xFE5
  1615                           fsr1l	equ	0xFE1
  1616                           
  1617                           	psect	bssCOMRAM
  1618  000038                     __pbssCOMRAM:
  1619                           	opt stack 0
  1620  000038                     _outPipes:
  1621                           	opt stack 0
  1622  000038                     	ds	8
  1623  000040                     _inPipes:
  1624                           	opt stack 0
  1625  000040                     	ds	6
  1626  000046                     _pBDTEntryIn:
  1627                           	opt stack 0
  1628  000046                     	ds	6
  1629  00004C                     recebeByte@sizeData:
  1630                           	opt stack 0
  1631  00004C                     	ds	2
  1632  00004E                     _pBDTEntryEP0OutNext:
  1633                           	opt stack 0
  1634  00004E                     	ds	2
  1635  000050                     _pBDTEntryEP0OutCurrent:
  1636                           	opt stack 0
  1637  000050                     	ds	2
  1638  000052                     _cdc_tx_len:
  1639                           	opt stack 0
  1640  000052                     	ds	1
  1641  000053                     _cdc_rx_len:
  1642                           	opt stack 0
  1643  000053                     	ds	1
  1644  000054                     _USBDeferStatusStagePacket:
  1645                           	opt stack 0
  1646  000054                     	ds	1
  1647  000055                     _USBStatusStageTimeoutCounter:
  1648                           	opt stack 0
  1649  000055                     	ds	1
  1650  000056                     _endpoint_number:
  1651                           	opt stack 0
  1652  000056                     	ds	1
  1653  000057                     _controlTransferState:
  1654                           	opt stack 0
  1655  000057                     	ds	1
  1656  000058                     _shortPacketStatus:
  1657                           	opt stack 0
  1658  000058                     	ds	1
  1659  000059                     _USBDeviceState:
  1660                           	opt stack 0
  1661  000059                     	ds	1
  1662  00005A                     _novaMsgLoRaWan:
  1663                           	opt stack 0
  1664  00005A                     	ds	1
  1665  00005B                     _tamFrame:
  1666                           	opt stack 0
  1667  00005B                     	ds	1
  1668  00005C                     _tamDadosRecebidos:
  1669                           	opt stack 0
  1670  00005C                     	ds	1
  1671  00005D                     _USTATcopy:
  1672                           	opt stack 0
  1673  00005D                     	ds	1
  1674  00005E                     _USBActiveConfiguration:
  1675                           	opt stack 0
  1676  00005E                     	ds	1
  1677                           tblptru	equ	0xFF8
  1678                           tblptrh	equ	0xFF7
  1679                           tblptrl	equ	0xFF6
  1680                           tablat	equ	0xFF5
  1681                           postinc0	equ	0xFEE
  1682                           wreg	equ	0xFE8
  1683                           postdec1	equ	0xFE5
  1684                           fsr1l	equ	0xFE1
  1685                           
  1686                           	psect	bssBANK1
  1687  0001EF                     __pbssBANK1:
  1688                           	opt stack 0
  1689  0001EF                     _tamanhoCommand:
  1690                           	opt stack 0
  1691  0001EF                     	ds	2
  1692  0001F1                     recebeByte@tamanhoMensagem:
  1693                           	opt stack 0
  1694  0001F1                     	ds	2
  1695  0001F3                     _CDCDataOutHandle:
  1696                           	opt stack 0
  1697  0001F3                     	ds	2
  1698  0001F5                     recebeByte@escapeCaracter:
  1699                           	opt stack 0
  1700  0001F5                     	ds	1
  1701  0001F6                     _USBStatusStageEnabledFlag1:
  1702                           	opt stack 0
  1703  0001F6                     	ds	1
  1704  0001F7                     _BothEP0OutUOWNsSet:
  1705                           	opt stack 0
  1706  0001F7                     	ds	1
  1707  0001F8                     _USBBusIsSuspended:
  1708                           	opt stack 0
  1709  0001F8                     	ds	1
  1710  0001F9                     _RemoteWakeup:
  1711                           	opt stack 0
  1712  0001F9                     	ds	1
  1713  0001FA                     _pulsos4:
  1714                           	opt stack 0
  1715  0001FA                     	ds	1
  1716  0001FB                     _pulsos3:
  1717                           	opt stack 0
  1718  0001FB                     	ds	1
  1719  0001FC                     _pulsos2:
  1720                           	opt stack 0
  1721  0001FC                     	ds	1
  1722  0001FD                     _pulsos1:
  1723                           	opt stack 0
  1724  0001FD                     	ds	1
  1725  0001FE                     _responseLoRaWan:
  1726                           	opt stack 0
  1727  0001FE                     	ds	1
  1728  0001FF                     _error_TX:
  1729                           	opt stack 0
  1730  0001FF                     	ds	1
  1731                           tblptru	equ	0xFF8
  1732                           tblptrh	equ	0xFF7
  1733                           tblptrl	equ	0xFF6
  1734                           tablat	equ	0xFF5
  1735                           postinc0	equ	0xFEE
  1736                           wreg	equ	0xFE8
  1737                           postdec1	equ	0xFE5
  1738                           fsr1l	equ	0xFE1
  1739                           
  1740                           	psect	bssBANK2
  1741  0002C8                     __pbssBANK2:
  1742                           	opt stack 0
  1743  0002C8                     _pBDTEntryOut:
  1744                           	opt stack 0
  1745  0002C8                     	ds	6
  1746  0002CE                     _USB1msTickCount:
  1747                           	opt stack 0
  1748  0002CE                     	ds	4
  1749  0002D2                     _ep_data_out:
  1750                           	opt stack 0
  1751  0002D2                     	ds	3
  1752  0002D5                     _ep_data_in:
  1753                           	opt stack 0
  1754  0002D5                     	ds	3
  1755  0002D8                     _CDCDataInHandle:
  1756                           	opt stack 0
  1757  0002D8                     	ds	2
  1758  0002DA                     _dig_4:
  1759                           	opt stack 0
  1760  0002DA                     	ds	2
  1761  0002DC                     _dig_3:
  1762                           	opt stack 0
  1763  0002DC                     	ds	2
  1764  0002DE                     _dig_2:
  1765                           	opt stack 0
  1766  0002DE                     	ds	2
  1767  0002E0                     _dig_1:
  1768                           	opt stack 0
  1769  0002E0                     	ds	2
  1770  0002E2                     _cs:
  1771                           	opt stack 0
  1772  0002E2                     	ds	1
  1773  0002E3                     recebeByte@checksumRecebimento:
  1774                           	opt stack 0
  1775  0002E3                     	ds	1
  1776  0002E4                     recebeByte@estadoRecepcao:
  1777                           	opt stack 0
  1778  0002E4                     	ds	1
  1779  0002E5                     _control_signal_bitmap:
  1780                           	opt stack 0
  1781  0002E5                     	ds	1
  1782  0002E6                     _cdc_mem_type:
  1783                           	opt stack 0
  1784  0002E6                     	ds	1
  1785  0002E7                     _cdc_trf_state:
  1786                           	opt stack 0
  1787  0002E7                     	ds	1
  1788  0002E8                     _USBTicksSinceSuspendEnd:
  1789                           	opt stack 0
  1790  0002E8                     	ds	1
  1791  0002E9                     _USBDeferOUTDataStagePackets:
  1792                           	opt stack 0
  1793  0002E9                     	ds	1
  1794  0002EA                     _USBDeferINDataStagePackets:
  1795                           	opt stack 0
  1796  0002EA                     	ds	1
  1797  0002EB                     _USBStatusStageEnabledFlag2:
  1798                           	opt stack 0
  1799  0002EB                     	ds	1
  1800  0002EC                     _Sequence:
  1801                           	opt stack 0
  1802  0002EC                     	ds	1
  1803  0002ED                     _nivel2:
  1804                           	opt stack 0
  1805  0002ED                     	ds	1
  1806  0002EE                     _nivel1:
  1807                           	opt stack 0
  1808  0002EE                     	ds	1
  1809  0002EF                     _teste1:
  1810                           	opt stack 0
  1811  0002EF                     	ds	1
  1812  0002F0                     _teste0:
  1813                           	opt stack 0
  1814  0002F0                     	ds	1
  1815  0002F1                     _feedback2:
  1816                           	opt stack 0
  1817  0002F1                     	ds	1
  1818  0002F2                     _feedback1:
  1819                           	opt stack 0
  1820  0002F2                     	ds	1
  1821  0002F3                     _aaa:
  1822                           	opt stack 0
  1823  0002F3                     	ds	1
  1824  0002F4                     _encryptMode:
  1825                           	opt stack 0
  1826  0002F4                     	ds	1
  1827  0002F5                     _retries_sending:
  1828                           	opt stack 0
  1829  0002F5                     	ds	1
  1830  0002F6                     _discovery_status:
  1831                           	opt stack 0
  1832  0002F6                     	ds	1
  1833  0002F7                     _delivery_status:
  1834                           	opt stack 0
  1835  0002F7                     	ds	1
  1836  0002F8                     __send_retries:
  1837                           	opt stack 0
  1838  0002F8                     	ds	1
  1839  0002F9                     _channel:
  1840                           	opt stack 0
  1841  0002F9                     	ds	1
  1842  0002FA                     _error_RX:
  1843                           	opt stack 0
  1844  0002FA                     	ds	1
  1845  0002FB                     _protocol:
  1846                           	opt stack 0
  1847  0002FB                     	ds	1
  1848  0002FC                     _error_AT:
  1849                           	opt stack 0
  1850  0002FC                     	ds	1
  1851  0002FD                     __preambleID:
  1852                           	opt stack 0
  1853  0002FD                     	ds	1
  1854  0002FE                     _USBAlternateInterface:
  1855                           	opt stack 0
  1856  0002FE                     	ds	2
  1857                           tblptru	equ	0xFF8
  1858                           tblptrh	equ	0xFF7
  1859                           tblptrl	equ	0xFF6
  1860                           tablat	equ	0xFF5
  1861                           postinc0	equ	0xFEE
  1862                           wreg	equ	0xFE8
  1863                           postdec1	equ	0xFE5
  1864                           fsr1l	equ	0xFE1
  1865                           
  1866                           	psect	bssBANK3
  1867  000300                     __pbssBANK3:
  1868                           	opt stack 0
  1869  000300                     _dadosRecebidos:
  1870                           	opt stack 0
  1871  000300                     	ds	20
  1872  000314                     _cdc_notice:
  1873                           	opt stack 0
  1874  000314                     	ds	10
  1875  00031E                     __channelMask:
  1876                           	opt stack 0
  1877  00031E                     	ds	8
  1878  000326                     _BaudRateGen:
  1879                           	opt stack 0
  1880  000326                     	ds	4
  1881  00032A                     _ticks:
  1882                           	opt stack 0
  1883  00032A                     	ds	4
  1884  00032E                     _freqPulses4:
  1885                           	opt stack 0
  1886  00032E                     	ds	4
  1887  000332                     _freqPulses3:
  1888                           	opt stack 0
  1889  000332                     	ds	4
  1890  000336                     _freqPulses2:
  1891                           	opt stack 0
  1892  000336                     	ds	4
  1893  00033A                     _freqPulses1:
  1894                           	opt stack 0
  1895  00033A                     	ds	4
  1896  00033E                     _sourceMacHigh:
  1897                           	opt stack 0
  1898  00033E                     	ds	4
  1899  000342                     _sourceMacLow:
  1900                           	opt stack 0
  1901  000342                     	ds	4
  1902  000346                     _pCDCDst:
  1903                           	opt stack 0
  1904  000346                     	ds	3
  1905  000349                     _pCDCSrc:
  1906                           	opt stack 0
  1907  000349                     	ds	3
  1908  00034C                     _pDst:
  1909                           	opt stack 0
  1910  00034C                     	ds	2
  1911  00034E                     _PAN_ID:
  1912                           	opt stack 0
  1913  00034E                     	ds	2
  1914  000350                     _response:
  1915                           	opt stack 0
  1916  000350                     	ds	100
  1917  0003B4                     _dummy_encapsulated_cmd_response:
  1918                           	opt stack 0
  1919  0003B4                     	ds	8
  1920  0003BC                     _line_coding:
  1921                           	opt stack 0
  1922  0003BC                     	ds	7
  1923                           tblptru	equ	0xFF8
  1924                           tblptrh	equ	0xFF7
  1925                           tblptrl	equ	0xFF6
  1926                           tablat	equ	0xFF5
  1927                           postinc0	equ	0xFEE
  1928                           wreg	equ	0xFE8
  1929                           postdec1	equ	0xFE5
  1930                           fsr1l	equ	0xFE1
  1931                           
  1932                           	psect	dataBANK3
  1933  0003C3                     __pdataBANK3:
  1934                           	opt stack 0
  1935  0003C3                     _MSG_LORAWAN:
  1936                           	opt stack 0
  1937  0003C3                     	ds	30
  1938  0003E1                     _randx:
  1939                           	opt stack 0
  1940  0003E1                     	ds	4
  1941                           tblptru	equ	0xFF8
  1942                           tblptrh	equ	0xFF7
  1943                           tblptrl	equ	0xFF6
  1944                           tablat	equ	0xFF5
  1945                           postinc0	equ	0xFEE
  1946                           wreg	equ	0xFE8
  1947                           postdec1	equ	0xFE5
  1948                           fsr1l	equ	0xFE1
  1949                           
  1950                           	psect	bssBANK4
  1951  000440                     __pbssBANK4:
  1952                           	opt stack 0
  1953  000440                     recebeByteLoRaWan@frameData:
  1954                           	opt stack 0
  1955  000440                     	ds	100
  1956                           tblptru	equ	0xFF8
  1957                           tblptrh	equ	0xFF7
  1958                           tblptrl	equ	0xFF6
  1959                           tablat	equ	0xFF5
  1960                           postinc0	equ	0xFEE
  1961                           wreg	equ	0xFE8
  1962                           postdec1	equ	0xFE5
  1963                           fsr1l	equ	0xFE1
  1964                           
  1965                           	psect	bssBANK5
  1966  000580                     __pbssBANK5:
  1967                           	opt stack 0
  1968  000580                     _receivePacket:
  1969                           	opt stack 0
  1970  000580                     	ds	100
  1971                           tblptru	equ	0xFF8
  1972                           tblptrh	equ	0xFF7
  1973                           tblptrl	equ	0xFF6
  1974                           tablat	equ	0xFF5
  1975                           postinc0	equ	0xFEE
  1976                           wreg	equ	0xFE8
  1977                           postdec1	equ	0xFE5
  1978                           fsr1l	equ	0xFE1
  1979                           
  1980                           	psect	bssBANK6
  1981  000600                     __pbssBANK6:
  1982                           	opt stack 0
  1983  000600                     _data:
  1984                           	opt stack 0
  1985  000600                     	ds	100
  1986  000664                     _frameBuffer:
  1987                           	opt stack 0
  1988  000664                     	ds	150
  1989                           tblptru	equ	0xFF8
  1990                           tblptrh	equ	0xFF7
  1991                           tblptrl	equ	0xFF6
  1992                           tablat	equ	0xFF5
  1993                           postinc0	equ	0xFEE
  1994                           wreg	equ	0xFE8
  1995                           postdec1	equ	0xFE5
  1996                           fsr1l	equ	0xFE1
  1997                           
  1998                           	psect	bssBANK7
  1999  000700                     __pbssBANK7:
  2000                           	opt stack 0
  2001  000700                     _command:
  2002                           	opt stack 0
  2003  000700                     	ds	150
  2004  000796                     recebeByte@frameData:
  2005                           	opt stack 0
  2006  000796                     	ds	100
  2007                           tblptru	equ	0xFF8
  2008                           tblptrh	equ	0xFF7
  2009                           tblptrl	equ	0xFF6
  2010                           tablat	equ	0xFF5
  2011                           postinc0	equ	0xFEE
  2012                           wreg	equ	0xFE8
  2013                           postdec1	equ	0xFE5
  2014                           fsr1l	equ	0xFE1
  2015                           
  2016                           	psect	cstackBANK2
  2017  000200                     __pcstackBANK2:
  2018                           	opt stack 0
  2019  000200                     main@data:
  2020                           	opt stack 0
  2021                           
  2022                           ; 150 bytes @ 0x0
  2023  000200                     	ds	150
  2024  000296                     main@tempo:
  2025                           	opt stack 0
  2026                           
  2027                           ; 4 bytes @ 0x96
  2028  000296                     	ds	4
  2029  00029A                     main@tempoTimeOut:
  2030                           	opt stack 0
  2031                           
  2032                           ; 4 bytes @ 0x9A
  2033  00029A                     	ds	4
  2034  00029E                     main@Icanal:
  2035                           	opt stack 0
  2036                           
  2037                           ; 1 bytes @ 0x9E
  2038  00029E                     	ds	1
  2039  00029F                     main@sf:
  2040                           	opt stack 0
  2041                           
  2042                           ; 1 bytes @ 0x9F
  2043  00029F                     	ds	1
  2044  0002A0                     main@resp:
  2045                           	opt stack 0
  2046                           
  2047                           ; 1 bytes @ 0xA0
  2048  0002A0                     	ds	1
  2049  0002A1                     main@contador:
  2050                           	opt stack 0
  2051                           
  2052                           ; 1 bytes @ 0xA1
  2053  0002A1                     	ds	1
  2054  0002A2                     main@deltaTempo:
  2055                           	opt stack 0
  2056                           
  2057                           ; 4 bytes @ 0xA2
  2058  0002A2                     	ds	4
  2059  0002A6                     _main$5956:
  2060                           	opt stack 0
  2061                           
  2062                           ; 3 bytes @ 0xA6
  2063  0002A6                     	ds	3
  2064  0002A9                     main@i:
  2065                           	opt stack 0
  2066                           
  2067                           ; 2 bytes @ 0xA9
  2068  0002A9                     	ds	2
  2069  0002AB                     main@Fcanal:
  2070                           	opt stack 0
  2071                           
  2072                           ; 1 bytes @ 0xAB
  2073  0002AB                     	ds	1
  2074  0002AC                     main@i_3349:
  2075                           	opt stack 0
  2076                           
  2077                           ; 1 bytes @ 0xAC
  2078  0002AC                     	ds	1
  2079  0002AD                     main@i_3350:
  2080                           	opt stack 0
  2081                           
  2082                           ; 1 bytes @ 0xAD
  2083  0002AD                     	ds	1
  2084  0002AE                     main@dr:
  2085                           	opt stack 0
  2086                           
  2087                           ; 1 bytes @ 0xAE
  2088  0002AE                     	ds	1
  2089  0002AF                     main@pisca:
  2090                           	opt stack 0
  2091                           
  2092                           ; 1 bytes @ 0xAF
  2093  0002AF                     	ds	1
  2094  0002B0                     main@i_3332:
  2095                           	opt stack 0
  2096                           
  2097                           ; 1 bytes @ 0xB0
  2098  0002B0                     	ds	1
  2099  0002B1                     main@i_3333:
  2100                           	opt stack 0
  2101                           
  2102                           ; 1 bytes @ 0xB1
  2103  0002B1                     	ds	1
  2104  0002B2                     main@dadoPoco:
  2105                           	opt stack 0
  2106                           
  2107                           ; 22 bytes @ 0xB2
  2108  0002B2                     	ds	22
  2109                           tblptru	equ	0xFF8
  2110                           tblptrh	equ	0xFF7
  2111                           tblptrl	equ	0xFF6
  2112                           tablat	equ	0xFF5
  2113                           postinc0	equ	0xFEE
  2114                           wreg	equ	0xFE8
  2115                           postdec1	equ	0xFE5
  2116                           fsr1l	equ	0xFE1
  2117                           
  2118                           	psect	cstackBANK1
  2119  000100                     __pcstackBANK1:
  2120                           	opt stack 0
  2121  000100                     _sprintf$5961:
  2122                           	opt stack 0
  2123                           
  2124                           ; 3 bytes @ 0x0
  2125  000100                     	ds	3
  2126  000103                     _sprintf$5155:
  2127                           	opt stack 0
  2128                           
  2129                           ; 2 bytes @ 0x3
  2130  000103                     	ds	2
  2131  000105                     sprintf@idx:
  2132                           	opt stack 0
  2133                           
  2134                           ; 1 bytes @ 0x5
  2135  000105                     	ds	1
  2136  000106                     sprintf@cp:
  2137                           	opt stack 0
  2138                           
  2139                           ; 2 bytes @ 0x6
  2140  000106                     	ds	2
  2141  000108                     sprintf@len:
  2142                           	opt stack 0
  2143                           
  2144                           ; 2 bytes @ 0x8
  2145  000108                     	ds	2
  2146  00010A                     sprintf@ap:
  2147                           	opt stack 0
  2148                           
  2149                           ; 2 bytes @ 0xA
  2150  00010A                     	ds	2
  2151  00010C                     sprintf@tmpval:
  2152                           	opt stack 0
  2153                           
  2154                           ; 4 bytes @ 0xC
  2155  00010C                     	ds	4
  2156  000110                     sprintf@exp:
  2157                           	opt stack 0
  2158                           
  2159                           ; 2 bytes @ 0x10
  2160  000110                     	ds	2
  2161  000112                     sprintf@val:
  2162                           	opt stack 0
  2163                           
  2164                           ; 4 bytes @ 0x12
  2165  000112                     	ds	4
  2166  000116                     sprintf@fval:
  2167                           	opt stack 0
  2168                           
  2169                           ; 3 bytes @ 0x16
  2170  000116                     	ds	3
  2171  000119                     sprintf@width:
  2172                           	opt stack 0
  2173                           
  2174                           ; 2 bytes @ 0x19
  2175  000119                     	ds	2
  2176  00011B                     sprintf@flag:
  2177                           	opt stack 0
  2178                           
  2179                           ; 2 bytes @ 0x1B
  2180  00011B                     	ds	2
  2181  00011D                     sprintf@prec:
  2182                           	opt stack 0
  2183                           
  2184                           ; 2 bytes @ 0x1D
  2185  00011D                     	ds	2
  2186  00011F                     sprintf@c:
  2187                           	opt stack 0
  2188                           
  2189                           ; 1 bytes @ 0x1F
  2190  00011F                     	ds	1
  2191  000120                     SetDevEUI@comando:
  2192                           	opt stack 0
  2193  000120                     SetAppEUI@comando:
  2194                           	opt stack 0
  2195  000120                     SetAppKey@comando:
  2196                           	opt stack 0
  2197  000120                     SetChannelLoRaWan@comando:
  2198                           	opt stack 0
  2199  000120                     SetAdr@comando:
  2200                           	opt stack 0
  2201  000120                     MacSave@comando:
  2202                           	opt stack 0
  2203  000120                     SetSpreadingFactor@comando:
  2204                           	opt stack 0
  2205  000120                     SetBandWidth@comando:
  2206                           	opt stack 0
  2207  000120                     DataRate@comando:
  2208                           	opt stack 0
  2209  000120                     TxLoRaWan@comando:
  2210                           	opt stack 0
  2211                           
  2212                           ; 200 bytes @ 0x20
  2213  000120                     	ds	200
  2214  0001E8                     SetDevEUI@status:
  2215                           	opt stack 0
  2216  0001E8                     SetAppEUI@status:
  2217                           	opt stack 0
  2218  0001E8                     SetAppKey@status:
  2219                           	opt stack 0
  2220  0001E8                     SetChannelLoRaWan@status:
  2221                           	opt stack 0
  2222  0001E8                     SetAdr@status:
  2223                           	opt stack 0
  2224  0001E8                     MacSave@status:
  2225                           	opt stack 0
  2226  0001E8                     SetSpreadingFactor@status:
  2227                           	opt stack 0
  2228  0001E8                     TxLoRaWan@conf:
  2229                           	opt stack 0
  2230  0001E8                     SetBandWidth@status:
  2231                           	opt stack 0
  2232  0001E8                     DataRate@status:
  2233                           	opt stack 0
  2234                           
  2235                           ; 2 bytes @ 0xE8
  2236  0001E8                     	ds	1
  2237  0001E9                     SetChannelLoRaWan@canal:
  2238                           	opt stack 0
  2239  0001E9                     SetSpreadingFactor@sf:
  2240                           	opt stack 0
  2241  0001E9                     TxLoRaWan@status:
  2242                           	opt stack 0
  2243                           
  2244                           ; 1 bytes @ 0xE9
  2245  0001E9                     	ds	1
  2246  0001EA                     TxLoRaWan@hex:
  2247                           	opt stack 0
  2248                           
  2249                           ; 4 bytes @ 0xEA
  2250  0001EA                     	ds	4
  2251  0001EE                     TxLoRaWan@i:
  2252                           	opt stack 0
  2253                           
  2254                           ; 1 bytes @ 0xEE
  2255  0001EE                     	ds	1
  2256                           tblptru	equ	0xFF8
  2257                           tblptrh	equ	0xFF7
  2258                           tblptrl	equ	0xFF6
  2259                           tablat	equ	0xFF5
  2260                           postinc0	equ	0xFEE
  2261                           wreg	equ	0xFE8
  2262                           postdec1	equ	0xFE5
  2263                           fsr1l	equ	0xFE1
  2264                           
  2265                           	psect	cstackBANK0
  2266  000060                     __pcstackBANK0:
  2267                           	opt stack 0
  2268  000060                     ??_setup_pulsos:
  2269  000060                     ??_isdigit:
  2270  000060                     ?_USBTransferOnePacket:
  2271                           	opt stack 0
  2272  000060                     ?_strlen:
  2273                           	opt stack 0
  2274  000060                     ?___awmod:
  2275                           	opt stack 0
  2276  000060                     ?___ftpack:
  2277                           	opt stack 0
  2278  000060                     ?___ftneg:
  2279                           	opt stack 0
  2280  000060                     ?_millis:
  2281                           	opt stack 0
  2282  000060                     ?__tdiv_to_l_:
  2283                           	opt stack 0
  2284  000060                     ?__div_to_l_:
  2285                           	opt stack 0
  2286  000060                     ?___lldiv:
  2287                           	opt stack 0
  2288  000060                     USBTransferOnePacket@dir:
  2289                           	opt stack 0
  2290  000060                     putch@data:
  2291                           	opt stack 0
  2292  000060                     retornaDado@dadoBit:
  2293                           	opt stack 0
  2294  000060                     putsUSBUSART@data:
  2295                           	opt stack 0
  2296  000060                     ___awmod@dividend:
  2297                           	opt stack 0
  2298  000060                     memset@p1:
  2299                           	opt stack 0
  2300  000060                     strcat@to:
  2301                           	opt stack 0
  2302  000060                     strlen@s:
  2303                           	opt stack 0
  2304  000060                     __div_to_l_@f1:
  2305                           	opt stack 0
  2306  000060                     ___ftpack@arg:
  2307                           	opt stack 0
  2308  000060                     __tdiv_to_l_@f1:
  2309                           	opt stack 0
  2310  000060                     ___ftge@ff1:
  2311                           	opt stack 0
  2312  000060                     ___ftneg@f1:
  2313                           	opt stack 0
  2314  000060                     ___lldiv@dividend:
  2315                           	opt stack 0
  2316                           
  2317                           ; 4 bytes @ 0x0
  2318  000060                     	ds	1
  2319  000061                     ??_retornaDado:
  2320  000061                     _isdigit$5381:
  2321                           	opt stack 0
  2322  000061                     USBTransferOnePacket@data:
  2323                           	opt stack 0
  2324                           
  2325                           ; 2 bytes @ 0x1
  2326  000061                     	ds	1
  2327  000062                     ??_strlen:
  2328  000062                     isdigit@c:
  2329                           	opt stack 0
  2330  000062                     putsUSBUSART@pData:
  2331                           	opt stack 0
  2332  000062                     ___awmod@divisor:
  2333                           	opt stack 0
  2334  000062                     memset@c:
  2335                           	opt stack 0
  2336  000062                     strcat@from:
  2337                           	opt stack 0
  2338                           
  2339                           ; 2 bytes @ 0x2
  2340  000062                     	ds	1
  2341  000063                     USBTransferOnePacket@len:
  2342                           	opt stack 0
  2343  000063                     retornaDado@selectDado:
  2344                           	opt stack 0
  2345  000063                     ___ftpack@exp:
  2346                           	opt stack 0
  2347  000063                     __div_to_l_@f2:
  2348                           	opt stack 0
  2349  000063                     __tdiv_to_l_@f2:
  2350                           	opt stack 0
  2351  000063                     ___ftge@ff2:
  2352                           	opt stack 0
  2353                           
  2354                           ; 3 bytes @ 0x3
  2355  000063                     	ds	1
  2356  000064                     ??_USBTransferOnePacket:
  2357  000064                     putsUSBUSART@len:
  2358                           	opt stack 0
  2359  000064                     retornaDado@dadoByte:
  2360                           	opt stack 0
  2361  000064                     ___awmod@counter:
  2362                           	opt stack 0
  2363  000064                     ___ftpack@sign:
  2364                           	opt stack 0
  2365  000064                     memset@n:
  2366                           	opt stack 0
  2367  000064                     strcat@cp:
  2368                           	opt stack 0
  2369  000064                     strlen@cp:
  2370                           	opt stack 0
  2371  000064                     millis@m:
  2372                           	opt stack 0
  2373  000064                     ___lldiv@divisor:
  2374                           	opt stack 0
  2375                           
  2376                           ; 4 bytes @ 0x4
  2377  000064                     	ds	1
  2378  000065                     ??___ftpack:
  2379  000065                     ?_le_pulsos:
  2380                           	opt stack 0
  2381  000065                     le_pulsos@modo:
  2382                           	opt stack 0
  2383  000065                     ___awmod@sign:
  2384                           	opt stack 0
  2385                           
  2386                           ; 1 bytes @ 0x5
  2387  000065                     	ds	1
  2388  000066                     ??__tdiv_to_l_:
  2389  000066                     ??___ftge:
  2390  000066                     ?___awdiv:
  2391                           	opt stack 0
  2392  000066                     ___awdiv@dividend:
  2393                           	opt stack 0
  2394  000066                     memset@p:
  2395                           	opt stack 0
  2396  000066                     __div_to_l_@quot:
  2397                           	opt stack 0
  2398                           
  2399                           ; 4 bytes @ 0x6
  2400  000066                     	ds	2
  2401  000068                     ??_parseLoRaWan:
  2402  000068                     ?___awtoft:
  2403                           	opt stack 0
  2404  000068                     ?___lltoft:
  2405                           	opt stack 0
  2406  000068                     USBDeviceInit@i:
  2407                           	opt stack 0
  2408  000068                     USBTransferOnePacket@ep:
  2409                           	opt stack 0
  2410  000068                     ___awdiv@divisor:
  2411                           	opt stack 0
  2412  000068                     ___awtoft@c:
  2413                           	opt stack 0
  2414  000068                     ___lldiv@quotient:
  2415                           	opt stack 0
  2416  000068                     ___lltoft@c:
  2417                           	opt stack 0
  2418                           
  2419                           ; 4 bytes @ 0x8
  2420  000068                     	ds	1
  2421  000069                     le_pulsos@freqPulses:
  2422                           	opt stack 0
  2423  000069                     USBTransferOnePacket@handle:
  2424                           	opt stack 0
  2425  000069                     __tdiv_to_l_@quot:
  2426                           	opt stack 0
  2427                           
  2428                           ; 4 bytes @ 0x9
  2429  000069                     	ds	1
  2430  00006A                     ___awdiv@counter:
  2431                           	opt stack 0
  2432  00006A                     __div_to_l_@cntr:
  2433                           	opt stack 0
  2434  00006A                     le_pulsos@freq:
  2435                           	opt stack 0
  2436                           
  2437                           ; 4 bytes @ 0xA
  2438  00006A                     	ds	1
  2439  00006B                     CDCTxService@i:
  2440                           	opt stack 0
  2441  00006B                     ___awdiv@sign:
  2442                           	opt stack 0
  2443  00006B                     ___awtoft@sign:
  2444                           	opt stack 0
  2445  00006B                     __div_to_l_@exp1:
  2446                           	opt stack 0
  2447                           
  2448                           ; 1 bytes @ 0xB
  2449  00006B                     	ds	1
  2450  00006C                     ??___lltoft:
  2451  00006C                     CDCTxService@byte_to_send:
  2452                           	opt stack 0
  2453  00006C                     ___lldiv@counter:
  2454                           	opt stack 0
  2455  00006C                     ___awdiv@quotient:
  2456                           	opt stack 0
  2457                           
  2458                           ; 2 bytes @ 0xC
  2459  00006C                     	ds	1
  2460  00006D                     ?___llmod:
  2461                           	opt stack 0
  2462  00006D                     __tdiv_to_l_@cntr:
  2463                           	opt stack 0
  2464  00006D                     delay@time:
  2465                           	opt stack 0
  2466  00006D                     setup_uart@baudRate:
  2467                           	opt stack 0
  2468  00006D                     ___llmod@dividend:
  2469                           	opt stack 0
  2470                           
  2471                           ; 4 bytes @ 0xD
  2472  00006D                     	ds	1
  2473  00006E                     ?___wmul:
  2474                           	opt stack 0
  2475  00006E                     __tdiv_to_l_@exp1:
  2476                           	opt stack 0
  2477  00006E                     ___wmul@multiplier:
  2478                           	opt stack 0
  2479                           
  2480                           ; 2 bytes @ 0xE
  2481  00006E                     	ds	2
  2482  000070                     ___lltoft@exp:
  2483                           	opt stack 0
  2484  000070                     ___wmul@multiplicand:
  2485                           	opt stack 0
  2486                           
  2487                           ; 2 bytes @ 0x10
  2488  000070                     	ds	1
  2489  000071                     ??_delay:
  2490  000071                     setup_uart@brg:
  2491                           	opt stack 0
  2492  000071                     ___llmod@divisor:
  2493                           	opt stack 0
  2494                           
  2495                           ; 4 bytes @ 0x11
  2496  000071                     	ds	1
  2497  000072                     ___wmul@product:
  2498                           	opt stack 0
  2499                           
  2500                           ; 2 bytes @ 0x12
  2501  000072                     	ds	2
  2502  000074                     ?___ftadd:
  2503                           	opt stack 0
  2504  000074                     ___ftadd@f1:
  2505                           	opt stack 0
  2506  000074                     parseLoRaWan@previous:
  2507                           	opt stack 0
  2508                           
  2509                           ; 4 bytes @ 0x14
  2510  000074                     	ds	1
  2511  000075                     ___llmod@counter:
  2512                           	opt stack 0
  2513                           
  2514                           ; 1 bytes @ 0x15
  2515  000075                     	ds	2
  2516  000077                     ___ftadd@f2:
  2517                           	opt stack 0
  2518                           
  2519                           ; 3 bytes @ 0x17
  2520  000077                     	ds	1
  2521  000078                     parseLoRaWan@intervalMAX:
  2522                           	opt stack 0
  2523                           
  2524                           ; 2 bytes @ 0x18
  2525  000078                     	ds	1
  2526  000079                     delay@to:
  2527                           	opt stack 0
  2528                           
  2529                           ; 4 bytes @ 0x19
  2530  000079                     	ds	1
  2531  00007A                     ??___ftadd:
  2532  00007A                     parseLoRaWan@status:
  2533                           	opt stack 0
  2534                           
  2535                           ; 1 bytes @ 0x1A
  2536  00007A                     	ds	1
  2537  00007B                     parseLoRaWan@timeout:
  2538                           	opt stack 0
  2539                           
  2540                           ; 1 bytes @ 0x1B
  2541  00007B                     	ds	1
  2542  00007C                     enviaComando@cmd:
  2543                           	opt stack 0
  2544                           
  2545                           ; 2 bytes @ 0x1C
  2546  00007C                     	ds	1
  2547  00007D                     ___ftadd@sign:
  2548                           	opt stack 0
  2549                           
  2550                           ; 1 bytes @ 0x1D
  2551  00007D                     	ds	1
  2552  00007E                     enviaComando@tipoComando:
  2553                           	opt stack 0
  2554  00007E                     ___ftadd@exp2:
  2555                           	opt stack 0
  2556                           
  2557                           ; 1 bytes @ 0x1E
  2558  00007E                     	ds	1
  2559  00007F                     ??_enviaComando:
  2560  00007F                     ___ftadd@exp1:
  2561                           	opt stack 0
  2562                           
  2563                           ; 1 bytes @ 0x1F
  2564  00007F                     	ds	1
  2565  000080                     ?___ftmul:
  2566                           	opt stack 0
  2567  000080                     ?___ftsub:
  2568                           	opt stack 0
  2569  000080                     ___ftmul@f1:
  2570                           	opt stack 0
  2571  000080                     ___ftsub@f1:
  2572                           	opt stack 0
  2573                           
  2574                           ; 3 bytes @ 0x20
  2575  000080                     	ds	1
  2576  000081                     enviaComando@i:
  2577                           	opt stack 0
  2578                           
  2579                           ; 2 bytes @ 0x21
  2580  000081                     	ds	2
  2581  000083                     enviaComando@i_4906:
  2582                           	opt stack 0
  2583  000083                     ___ftmul@f2:
  2584                           	opt stack 0
  2585  000083                     ___ftsub@f2:
  2586                           	opt stack 0
  2587                           
  2588                           ; 3 bytes @ 0x23
  2589  000083                     	ds	2
  2590  000085                     enviaComando@i_4907:
  2591                           	opt stack 0
  2592                           
  2593                           ; 2 bytes @ 0x25
  2594  000085                     	ds	1
  2595  000086                     ??___ftmul:
  2596  000086                     
  2597                           ; 1 bytes @ 0x26
  2598  000086                     	ds	1
  2599  000087                     ResetModuloLoRaWan@status:
  2600                           	opt stack 0
  2601  000087                     JoinLoRaWan@status:
  2602                           	opt stack 0
  2603                           
  2604                           ; 1 bytes @ 0x27
  2605  000087                     	ds	2
  2606  000089                     ___ftmul@exp:
  2607                           	opt stack 0
  2608                           
  2609                           ; 1 bytes @ 0x29
  2610  000089                     	ds	1
  2611  00008A                     ___ftmul@f3_as_product:
  2612                           	opt stack 0
  2613                           
  2614                           ; 3 bytes @ 0x2A
  2615  00008A                     	ds	3
  2616  00008D                     ___ftmul@cntr:
  2617                           	opt stack 0
  2618                           
  2619                           ; 1 bytes @ 0x2D
  2620  00008D                     	ds	1
  2621  00008E                     ___ftmul@sign:
  2622                           	opt stack 0
  2623                           
  2624                           ; 1 bytes @ 0x2E
  2625  00008E                     	ds	1
  2626  00008F                     ?___ftdiv:
  2627                           	opt stack 0
  2628  00008F                     ?_fround:
  2629                           	opt stack 0
  2630  00008F                     ?_scale:
  2631                           	opt stack 0
  2632  00008F                     ___ftdiv@f1:
  2633                           	opt stack 0
  2634                           
  2635                           ; 3 bytes @ 0x2F
  2636  00008F                     	ds	3
  2637  000092                     ___ftdiv@f2:
  2638                           	opt stack 0
  2639  000092                     _fround$5959:
  2640                           	opt stack 0
  2641  000092                     _scale$5960:
  2642                           	opt stack 0
  2643                           
  2644                           ; 3 bytes @ 0x32
  2645  000092                     	ds	3
  2646  000095                     ??___ftdiv:
  2647  000095                     scale@scl:
  2648                           	opt stack 0
  2649  000095                     _fround$5958:
  2650                           	opt stack 0
  2651                           
  2652                           ; 3 bytes @ 0x35
  2653  000095                     	ds	3
  2654  000098                     fround@prec:
  2655                           	opt stack 0
  2656  000098                     ___ftdiv@cntr:
  2657                           	opt stack 0
  2658                           
  2659                           ; 1 bytes @ 0x38
  2660  000098                     	ds	1
  2661  000099                     ___ftdiv@f3:
  2662                           	opt stack 0
  2663                           
  2664                           ; 3 bytes @ 0x39
  2665  000099                     	ds	3
  2666  00009C                     ___ftdiv@exp:
  2667                           	opt stack 0
  2668                           
  2669                           ; 1 bytes @ 0x3C
  2670  00009C                     	ds	1
  2671  00009D                     ___ftdiv@sign:
  2672                           	opt stack 0
  2673                           
  2674                           ; 1 bytes @ 0x3D
  2675  00009D                     	ds	1
  2676  00009E                     ?_le_AD:
  2677                           	opt stack 0
  2678                           
  2679                           ; 3 bytes @ 0x3E
  2680  00009E                     	ds	3
  2681  0000A1                     ??_le_AD:
  2682                           
  2683                           ; 1 bytes @ 0x41
  2684  0000A1                     	ds	2
  2685  0000A3                     _le_AD$5957:
  2686                           	opt stack 0
  2687                           
  2688                           ; 3 bytes @ 0x43
  2689  0000A3                     	ds	3
  2690  0000A6                     le_AD@corrente:
  2691                           	opt stack 0
  2692                           
  2693                           ; 3 bytes @ 0x46
  2694  0000A6                     	ds	3
  2695  0000A9                     le_AD@AnalogPort:
  2696                           	opt stack 0
  2697                           
  2698                           ; 1 bytes @ 0x49
  2699  0000A9                     	ds	1
  2700  0000AA                     le_AD@leituraAux:
  2701                           	opt stack 0
  2702                           
  2703                           ; 2 bytes @ 0x4A
  2704  0000AA                     	ds	2
  2705  0000AC                     le_AD@i:
  2706                           	opt stack 0
  2707                           
  2708                           ; 2 bytes @ 0x4C
  2709  0000AC                     	ds	2
  2710  0000AE                     le_AD@leitura:
  2711                           	opt stack 0
  2712                           
  2713                           ; 2 bytes @ 0x4E
  2714  0000AE                     	ds	2
  2715  0000B0                     ?___fttol:
  2716                           	opt stack 0
  2717  0000B0                     ___fttol@f1:
  2718                           	opt stack 0
  2719                           
  2720                           ; 3 bytes @ 0x50
  2721  0000B0                     	ds	4
  2722  0000B4                     ??___fttol:
  2723                           
  2724                           ; 1 bytes @ 0x54
  2725  0000B4                     	ds	5
  2726  0000B9                     ___fttol@sign1:
  2727                           	opt stack 0
  2728                           
  2729                           ; 1 bytes @ 0x59
  2730  0000B9                     	ds	1
  2731  0000BA                     ___fttol@lval:
  2732                           	opt stack 0
  2733                           
  2734                           ; 4 bytes @ 0x5A
  2735  0000BA                     	ds	4
  2736  0000BE                     ___fttol@exp1:
  2737                           	opt stack 0
  2738                           
  2739                           ; 1 bytes @ 0x5E
  2740  0000BE                     	ds	1
  2741  0000BF                     ?_sprintf:
  2742                           	opt stack 0
  2743  0000BF                     sprintf@sp:
  2744                           	opt stack 0
  2745                           
  2746                           ; 2 bytes @ 0x5F
  2747  0000BF                     	ds	2
  2748  0000C1                     sprintf@f:
  2749                           	opt stack 0
  2750                           
  2751                           ; 2 bytes @ 0x61
  2752  0000C1                     	ds	42
  2753  0000EB                     ??_sprintf:
  2754                           
  2755                           ; 1 bytes @ 0x8B
  2756  0000EB                     	ds	6
  2757  0000F1                     SetChannelLoRaWan@ligado:
  2758                           	opt stack 0
  2759  0000F1                     TxLoRaWan@porta:
  2760                           	opt stack 0
  2761  0000F1                     SetAdr@state:
  2762                           	opt stack 0
  2763  0000F1                     SetBandWidth@bw:
  2764                           	opt stack 0
  2765  0000F1                     DataRate@dr:
  2766                           	opt stack 0
  2767                           
  2768                           ; 2 bytes @ 0x91
  2769  0000F1                     	ds	1
  2770  0000F2                     TxLoRaWan@data:
  2771                           	opt stack 0
  2772                           
  2773                           ; 2 bytes @ 0x92
  2774  0000F2                     	ds	1
  2775  0000F3                     ??_DataRate:
  2776  0000F3                     ??_SetBandWidth:
  2777                           
  2778                           ; 1 bytes @ 0x93
  2779  0000F3                     	ds	1
  2780  0000F4                     TxLoRaWan@tamData:
  2781                           	opt stack 0
  2782                           
  2783                           ; 1 bytes @ 0x94
  2784  0000F4                     	ds	1
  2785  0000F5                     ??_TxLoRaWan:
  2786                           
  2787                           ; 1 bytes @ 0x95
  2788  0000F5                     	ds	1
  2789  0000F6                     ??_main:
  2790                           
  2791                           ; 1 bytes @ 0x96
  2792  0000F6                     	ds	10
  2793                           tblptru	equ	0xFF8
  2794                           tblptrh	equ	0xFF7
  2795                           tblptrl	equ	0xFF6
  2796                           tablat	equ	0xFF5
  2797                           postinc0	equ	0xFEE
  2798                           wreg	equ	0xFE8
  2799                           postdec1	equ	0xFE5
  2800                           fsr1l	equ	0xFE1
  2801                           
  2802                           	psect	cstackCOMRAM
  2803  000001                     __pcstackCOMRAM:
  2804                           	opt stack 0
  2805  000001                     ??_getch:
  2806  000001                     ??_USBStdGetDscHandler:
  2807  000001                     ??_USBStdGetStatusHandler:
  2808  000001                     ?_strcmp:
  2809                           	opt stack 0
  2810  000001                     ?_strncmp:
  2811                           	opt stack 0
  2812  000001                     ?i2_USBTransferOnePacket:
  2813                           	opt stack 0
  2814  000001                     ?i2_strlen:
  2815                           	opt stack 0
  2816  000001                     USBConfigureEndpoint@direction:
  2817                           	opt stack 0
  2818  000001                     USBCtrlTrfTxService@byteToSend:
  2819                           	opt stack 0
  2820  000001                     USBCtrlTrfRxService@i:
  2821                           	opt stack 0
  2822  000001                     toupper@c:
  2823                           	opt stack 0
  2824  000001                     i2USBTransferOnePacket@dir:
  2825                           	opt stack 0
  2826  000001                     memcpy@d1:
  2827                           	opt stack 0
  2828  000001                     strcmp@s1:
  2829                           	opt stack 0
  2830  000001                     strcpy@to:
  2831                           	opt stack 0
  2832  000001                     strncmp@s1:
  2833                           	opt stack 0
  2834  000001                     i2memset@p1:
  2835                           	opt stack 0
  2836  000001                     i2strlen@s:
  2837                           	opt stack 0
  2838                           
  2839                           ; 2 bytes @ 0x0
  2840  000001                     	ds	1
  2841  000002                     ??_USBConfigureEndpoint:
  2842  000002                     USBCtrlTrfRxService@byteToRead:
  2843                           	opt stack 0
  2844  000002                     USBCtrlTrfInHandler@lastDTS:
  2845                           	opt stack 0
  2846  000002                     getch@RC:
  2847                           	opt stack 0
  2848  000002                     converter@conv2:
  2849                           	opt stack 0
  2850  000002                     USBStdGetStatusHandler@p:
  2851                           	opt stack 0
  2852  000002                     i2USBTransferOnePacket@data:
  2853                           	opt stack 0
  2854                           
  2855                           ; 2 bytes @ 0x1
  2856  000002                     	ds	1
  2857  000003                     ??i2_strlen:
  2858  000003                     getch@data:
  2859                           	opt stack 0
  2860  000003                     converter@resul:
  2861                           	opt stack 0
  2862  000003                     memcpy@s1:
  2863                           	opt stack 0
  2864  000003                     strcmp@s2:
  2865                           	opt stack 0
  2866  000003                     strcpy@from:
  2867                           	opt stack 0
  2868  000003                     strncmp@s2:
  2869                           	opt stack 0
  2870  000003                     i2memset@c:
  2871                           	opt stack 0
  2872                           
  2873                           ; 2 bytes @ 0x2
  2874  000003                     	ds	1
  2875  000004                     converter@aux:
  2876                           	opt stack 0
  2877  000004                     i2USBTransferOnePacket@len:
  2878                           	opt stack 0
  2879                           
  2880                           ; 1 bytes @ 0x3
  2881  000004                     	ds	1
  2882  000005                     ??_strcmp:
  2883  000005                     ??i2_USBTransferOnePacket:
  2884  000005                     converter@aux2:
  2885                           	opt stack 0
  2886  000005                     memcpy@n:
  2887                           	opt stack 0
  2888  000005                     strcpy@cp:
  2889                           	opt stack 0
  2890  000005                     strncmp@len:
  2891                           	opt stack 0
  2892  000005                     i2memset@n:
  2893                           	opt stack 0
  2894  000005                     i2strlen@cp:
  2895                           	opt stack 0
  2896                           
  2897                           ; 2 bytes @ 0x4
  2898  000005                     	ds	1
  2899  000006                     USBConfigureEndpoint@EPNum:
  2900                           	opt stack 0
  2901  000006                     converter@conv1:
  2902                           	opt stack 0
  2903  000006                     strcmp@r:
  2904                           	opt stack 0
  2905                           
  2906                           ; 1 bytes @ 0x5
  2907  000006                     	ds	1
  2908  000007                     ??_strncmp:
  2909  000007                     USBConfigureEndpoint@handle:
  2910                           	opt stack 0
  2911  000007                     memcpy@d:
  2912                           	opt stack 0
  2913  000007                     i2memset@p:
  2914                           	opt stack 0
  2915                           
  2916                           ; 2 bytes @ 0x6
  2917  000007                     	ds	2
  2918  000009                     USBEnableEndpoint@options:
  2919                           	opt stack 0
  2920  000009                     i2USBDeviceInit@i:
  2921                           	opt stack 0
  2922  000009                     i2USBTransferOnePacket@ep:
  2923                           	opt stack 0
  2924  000009                     memcpy@s:
  2925                           	opt stack 0
  2926                           
  2927                           ; 2 bytes @ 0x8
  2928  000009                     	ds	1
  2929  00000A                     ??_recebeByteLoRaWan:
  2930  00000A                     USBEnableEndpoint@p:
  2931                           	opt stack 0
  2932  00000A                     i2USBTransferOnePacket@handle:
  2933                           	opt stack 0
  2934                           
  2935                           ; 2 bytes @ 0x9
  2936  00000A                     	ds	1
  2937  00000B                     memcpy@tmp:
  2938                           	opt stack 0
  2939                           
  2940                           ; 1 bytes @ 0xA
  2941  00000B                     	ds	1
  2942  00000C                     USBEnableEndpoint@ep:
  2943                           	opt stack 0
  2944                           
  2945                           ; 1 bytes @ 0xB
  2946  00000C                     	ds	1
  2947  00000D                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  2948                           	opt stack 0
  2949                           
  2950                           ; 2 bytes @ 0xC
  2951  00000D                     	ds	1
  2952  00000E                     recebeByteLoRaWan@len:
  2953                           	opt stack 0
  2954                           
  2955                           ; 1 bytes @ 0xD
  2956  00000E                     	ds	1
  2957  00000F                     recebeByteLoRaWan@port:
  2958                           	opt stack 0
  2959  00000F                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  2960                           	opt stack 0
  2961                           
  2962                           ; 2 bytes @ 0xE
  2963  00000F                     	ds	1
  2964  000010                     recebeByteLoRaWan@b:
  2965                           	opt stack 0
  2966                           
  2967                           ; 1 bytes @ 0xF
  2968  000010                     	ds	1
  2969  000011                     recebeByteLoRaWan@i:
  2970                           	opt stack 0
  2971  000011                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  2972                           	opt stack 0
  2973                           
  2974                           ; 2 bytes @ 0x10
  2975  000011                     	ds	1
  2976  000012                     recebeByteLoRaWan@tamMsgRx:
  2977                           	opt stack 0
  2978                           
  2979                           ; 1 bytes @ 0x11
  2980  000012                     	ds	1
  2981  000013                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  2982  000013                     recebeByteLoRaWan@i_4920:
  2983                           	opt stack 0
  2984                           
  2985                           ; 1 bytes @ 0x12
  2986  000013                     	ds	2
  2987  000015                     ??_USBStdFeatureReqHandler:
  2988  000015                     USBStdSetCfgHandler@i:
  2989                           	opt stack 0
  2990                           
  2991                           ; 1 bytes @ 0x14
  2992  000015                     	ds	1
  2993  000016                     USBStdFeatureReqHandler@pUEP:
  2994                           	opt stack 0
  2995                           
  2996                           ; 2 bytes @ 0x15
  2997  000016                     	ds	2
  2998  000018                     USBStdFeatureReqHandler@current_ep_data:
  2999                           	opt stack 0
  3000                           
  3001                           ; 1 bytes @ 0x17
  3002  000018                     	ds	1
  3003  000019                     USBStdFeatureReqHandler@p:
  3004                           	opt stack 0
  3005                           
  3006                           ; 2 bytes @ 0x18
  3007  000019                     	ds	2
  3008  00001B                     ??_USBCtrlEPService:
  3009  00001B                     
  3010                           ; 1 bytes @ 0x1A
  3011  00001B                     	ds	1
  3012  00001C                     USBDeviceTasks@i:
  3013                           	opt stack 0
  3014                           
  3015                           ; 1 bytes @ 0x1B
  3016  00001C                     	ds	1
  3017  00001D                     ??_SYS_InterruptHigh:
  3018                           
  3019                           ; 1 bytes @ 0x1C
  3020  00001D                     	ds	19
  3021  000030                     SYS_InterruptHigh@dig1:
  3022                           	opt stack 0
  3023                           
  3024                           ; 2 bytes @ 0x2F
  3025  000030                     	ds	2
  3026  000032                     SYS_InterruptHigh@dig2:
  3027                           	opt stack 0
  3028                           
  3029                           ; 2 bytes @ 0x31
  3030  000032                     	ds	2
  3031  000034                     SYS_InterruptHigh@dig3:
  3032                           	opt stack 0
  3033                           
  3034                           ; 2 bytes @ 0x33
  3035  000034                     	ds	2
  3036  000036                     SYS_InterruptHigh@dig4:
  3037                           	opt stack 0
  3038                           
  3039                           ; 2 bytes @ 0x35
  3040  000036                     	ds	2
  3041                           tblptru	equ	0xFF8
  3042                           tblptrh	equ	0xFF7
  3043                           tblptrl	equ	0xFF6
  3044                           tablat	equ	0xFF5
  3045                           postinc0	equ	0xFEE
  3046                           wreg	equ	0xFE8
  3047                           postdec1	equ	0xFE5
  3048                           fsr1l	equ	0xFE1
  3049                           
  3050 ;;
  3051 ;;Main: autosize = 0, tempsize = 10, incstack = 0, save=0
  3052 ;;
  3053 ;; *************** function _main *****************
  3054 ;; Defined at:
  3055 ;;		line 42 in file "UT.c"
  3056 ;; Parameters:    Size  Location     Type
  3057 ;;		None
  3058 ;; Auto vars:     Size  Location     Type
  3059 ;;  sf              1  159[BANK2 ] unsigned char 
  3060 ;;  dr              1  174[BANK2 ] unsigned char 
  3061 ;;  i               1  173[BANK2 ] unsigned char 
  3062 ;;  i               1  172[BANK2 ] unsigned char 
  3063 ;;  tempoTimeOut    4  154[BANK2 ] unsigned long 
  3064 ;;  data          150    0[BANK2 ] unsigned char [150]
  3065 ;;  Fcanal          1  171[BANK2 ] unsigned char 
  3066 ;;  Icanal          1  158[BANK2 ] unsigned char 
  3067 ;;  deltaTempo      4  162[BANK2 ] unsigned long 
  3068 ;;  tempo           4  150[BANK2 ] unsigned long 
  3069 ;;  resp            1  160[BANK2 ] unsigned char 
  3070 ;;  i               1  177[BANK2 ] unsigned char 
  3071 ;;  i               1  176[BANK2 ] unsigned char 
  3072 ;;  i               2  169[BANK2 ] int 
  3073 ;;  dadoPoco       22  178[BANK2 ] struct .
  3074 ;;  pisca           1  175[BANK2 ] unsigned char 
  3075 ;;  contador        1  161[BANK2 ] unsigned char 
  3076 ;;  valor           1    0        unsigned char 
  3077 ;; Return value:  Size  Location     Type
  3078 ;;                  1    wreg      void 
  3079 ;; Registers used:
  3080 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3081 ;; Tracked objects:
  3082 ;;		On entry : 0/0
  3083 ;;		On exit  : 0/0
  3084 ;;		Unchanged: 0/0
  3085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3086 ;;      Params:         0       0       0       0       0       0       0       0       0
  3087 ;;      Locals:         0       0       0     200       0       0       0       0       0
  3088 ;;      Temps:          0      10       0       0       0       0       0       0       0
  3089 ;;      Totals:         0      10       0     200       0       0       0       0       0
  3090 ;;Total ram usage:      210 bytes
  3091 ;; Hardware stack levels required when called:   15
  3092 ;; This function calls:
  3093 ;;		_DataRate
  3094 ;;		_MacSave
  3095 ;;		_SetAdr
  3096 ;;		_SetAppEUI
  3097 ;;		_SetAppKey
  3098 ;;		_SetBandWidth
  3099 ;;		_SetChannelLoRaWan
  3100 ;;		_SetDevEUI
  3101 ;;		_SetSpreadingFactor
  3102 ;;		_TxLoRaWan
  3103 ;;		_USBDeviceInit
  3104 ;;		___ftmul
  3105 ;;		___fttol
  3106 ;;		_delay
  3107 ;;		_le_AD
  3108 ;;		_le_pulsos
  3109 ;;		_millis
  3110 ;;		_putch
  3111 ;;		_putsUSBUSART
  3112 ;;		_retornaDado
  3113 ;;		_setup_AD
  3114 ;;		_setup_ccp1
  3115 ;;		_setup_pulsos
  3116 ;;		_setup_uart
  3117 ;;		_sprintf
  3118 ;;		_verificaUSB
  3119 ;; This function is called by:
  3120 ;;		Startup code after reset
  3121 ;; This function uses a non-reentrant model
  3122 ;;
  3123                           
  3124                           	psect	text0
  3125  000E10                     __ptext0:
  3126                           	opt stack 0
  3127  000E10                     _main:
  3128                           	opt stack 16
  3129                           
  3130                           ;UT.c: 43: uint8_t contador;
  3131                           ;UT.c: 44: uint8_t pisca=0;
  3132                           
  3133                           ;incstack = 0
  3134  000E10  0E00               	movlw	0
  3135  000E12  0102               	movlb	2	; () banked
  3136  000E14  6FAF               	movwf	main@pisca& (0+255),b
  3137                           
  3138                           ; BSR set to: 2
  3139                           ;UT.c: 46: TRISEbits.RE2=0;
  3140  000E16  9496               	bcf	3990,2,c	;volatile
  3141                           
  3142                           ; BSR set to: 2
  3143                           ;UT.c: 47: PORTDbits.RD4=0;
  3144  000E18  9883               	bcf	3971,4,c	;volatile
  3145                           
  3146                           ; BSR set to: 2
  3147                           ;UT.c: 48: TRISDbits.RD4=0;
  3148  000E1A  9895               	bcf	3989,4,c	;volatile
  3149                           
  3150                           ; BSR set to: 2
  3151                           ;UT.c: 49: PORTDbits.RD5=0;
  3152  000E1C  9A83               	bcf	3971,5,c	;volatile
  3153                           
  3154                           ; BSR set to: 2
  3155                           ;UT.c: 50: TRISDbits.RD5=0;
  3156  000E1E  9A95               	bcf	3989,5,c	;volatile
  3157                           
  3158                           ; BSR set to: 2
  3159                           ;UT.c: 51: PORTDbits.RD6=0;
  3160  000E20  9C83               	bcf	3971,6,c	;volatile
  3161                           
  3162                           ; BSR set to: 2
  3163                           ;UT.c: 52: TRISDbits.RD6=0;
  3164  000E22  9C95               	bcf	3989,6,c	;volatile
  3165                           
  3166                           ; BSR set to: 2
  3167                           ;UT.c: 53: PORTDbits.RD7=0;
  3168  000E24  9E83               	bcf	3971,7,c	;volatile
  3169                           
  3170                           ; BSR set to: 2
  3171                           ;UT.c: 54: TRISDbits.RD7=0;
  3172  000E26  9E95               	bcf	3989,7,c	;volatile
  3173                           
  3174                           ;UT.c: 57: for (int i=0;i<25;i++)
  3175  000E28  0E00               	movlw	0
  3176  000E2A  6FAA               	movwf	(main@i+1)& (0+255),b
  3177  000E2C  0E00               	movlw	0
  3178  000E2E  6FA9               	movwf	main@i& (0+255),b
  3179  000E30                     l10694:
  3180                           
  3181                           ; BSR set to: 2
  3182  000E30  BFAA               	btfsc	(main@i+1)& (0+255),7,b
  3183  000E32  D006               	goto	l1059
  3184  000E34  51AA               	movf	(main@i+1)& (0+255),w,b
  3185  000E36  E11C               	bnz	l10706
  3186  000E38  0E19               	movlw	25
  3187  000E3A  5DA9               	subwf	main@i& (0+255),w,b
  3188  000E3C  B0D8               	btfsc	status,0,c
  3189  000E3E  D018               	goto	u10920
  3190  000E40                     l1059:
  3191                           
  3192                           ; BSR set to: 2
  3193                           ;UT.c: 58: {
  3194                           ;UT.c: 59: pisca ^= 1;
  3195                           
  3196                           ; BSR set to: 2
  3197  000E40  0E01               	movlw	1
  3198  000E42  1BAF               	xorwf	main@pisca& (0+255),f,b
  3199                           
  3200                           ; BSR set to: 2
  3201                           ;UT.c: 60: PORTEbits.RE2 = pisca;
  3202  000E44  B1AF               	btfsc	main@pisca& (0+255),0,b
  3203  000E46  D002               	bra	u10915
  3204  000E48  9484               	bcf	3972,2,c	;volatile
  3205  000E4A  D001               	bra	u10916
  3206  000E4C                     u10915:
  3207  000E4C  8484               	bsf	3972,2,c	;volatile
  3208  000E4E                     u10916:
  3209                           
  3210                           ;UT.c: 61: _delay((unsigned long)((200)*(48000000/4000.0)));
  3211  000E4E  0E0D               	movlw	13
  3212  000E50  0100               	movlb	0	; () banked
  3213  000E52  6FF7               	movwf	(??_main+1)& (0+255),b
  3214  000E54  0E2D               	movlw	45
  3215  000E56  6FF6               	movwf	??_main& (0+255),b
  3216  000E58  0ED7               	movlw	215
  3217  000E5A                     u11507:
  3218  000E5A  2EE8               	decfsz	wreg,f,c
  3219  000E5C  D7FE               	bra	u11507
  3220  000E5E  2FF6               	decfsz	??_main& (0+255),f,b
  3221  000E60  D7FC               	bra	u11507
  3222  000E62  2FF7               	decfsz	(??_main+1)& (0+255),f,b
  3223  000E64  D7FA               	bra	u11507
  3224  000E66  D000               	nop2	
  3225  000E68  0102               	movlb	2	; () banked
  3226  000E6A  4BA9               	infsnz	main@i& (0+255),f,b
  3227  000E6C  2BAA               	incf	(main@i+1)& (0+255),f,b
  3228  000E6E  D7E0               	goto	l10694
  3229  000E70                     u10920:
  3230  000E70                     l10706:
  3231                           
  3232                           ; BSR set to: 2
  3233                           ;UT.c: 62: }
  3234                           ;UT.c: 65: setup_uart(57600);
  3235  000E70  0E00               	movlw	0
  3236  000E72  0100               	movlb	0	; () banked
  3237  000E74  6F6D               	movwf	setup_uart@baudRate& (0+255),b
  3238  000E76  0EE1               	movlw	225
  3239  000E78  6F6E               	movwf	(setup_uart@baudRate+1)& (0+255),b
  3240  000E7A  0E00               	movlw	0
  3241  000E7C  6F6F               	movwf	(setup_uart@baudRate+2)& (0+255),b
  3242  000E7E  0E00               	movlw	0
  3243  000E80  6F70               	movwf	(setup_uart@baudRate+3)& (0+255),b
  3244  000E82  EC33  F022         	call	_setup_uart	;wreg free
  3245                           
  3246                           ;UT.c: 71: USBDeviceInit();
  3247  000E86  EC56  F015         	call	_USBDeviceInit	;wreg free
  3248                           
  3249                           ;UT.c: 72: setup_AD();
  3250  000E8A  EC69  F02B         	call	_setup_AD	;wreg free
  3251                           
  3252                           ;UT.c: 73: setup_pulsos();
  3253  000E8E  EC35  F021         	call	_setup_pulsos	;wreg free
  3254                           
  3255                           ;UT.c: 74: setup_ccp1();
  3256  000E92  EC01  F029         	call	_setup_ccp1	;wreg free
  3257                           
  3258                           ;UT.c: 76: verificaUSB();
  3259  000E96  EC4B  F02A         	call	_verificaUSB	;wreg free
  3260                           
  3261                           ;UT.c: 87: struct
  3262                           ;UT.c: 88: {
  3263                           ;UT.c: 89: uint8_t feedback1;
  3264                           ;UT.c: 90: uint8_t feedback2;
  3265                           ;UT.c: 91: uint16_t nivel1;
  3266                           ;UT.c: 92: uint16_t nivel2;
  3267                           ;UT.c: 93: uint32_t pulsos1;
  3268                           ;UT.c: 94: uint32_t pulsos2;
  3269                           ;UT.c: 95: uint32_t pulsos3;
  3270                           ;UT.c: 96: uint32_t pulsos4;
  3271                           ;UT.c: 97: } dadoPoco;
  3272                           ;UT.c: 100: putch(0x34);
  3273  000E9A  0E34               	movlw	52
  3274  000E9C  EC78  F02B         	call	_putch
  3275                           
  3276                           ;UT.c: 102: for (uint8_t i=0; i<48; i++){
  3277  000EA0  0E00               	movlw	0
  3278  000EA2  0102               	movlb	2	; () banked
  3279  000EA4  6FB0               	movwf	main@i_3332& (0+255),b
  3280  000EA6                     l10722:
  3281                           
  3282                           ; BSR set to: 2
  3283  000EA6  0E2F               	movlw	47
  3284  000EA8  65B0               	cpfsgt	main@i_3332& (0+255),b
  3285  000EAA  D001               	goto	l1061
  3286  000EAC  D00A               	goto	u10940
  3287  000EAE                     l1061:
  3288                           
  3289                           ; BSR set to: 2
  3290                           ;UT.c: 103: SetChannelLoRaWan (i,0);
  3291                           
  3292                           ; BSR set to: 2
  3293  000EAE  0E00               	movlw	0
  3294  000EB0  0100               	movlb	0	; () banked
  3295  000EB2  6FF1               	movwf	SetChannelLoRaWan@ligado& (0+255),b
  3296  000EB4  0102               	movlb	2	; () banked
  3297  000EB6  51B0               	movf	main@i_3332& (0+255),w,b
  3298  000EB8  EC7E  F026         	call	_SetChannelLoRaWan
  3299  000EBC  0102               	movlb	2	; () banked
  3300  000EBE  2BB0               	incf	main@i_3332& (0+255),f,b
  3301  000EC0  D7F2               	goto	l10722
  3302  000EC2                     u10940:
  3303                           
  3304                           ; BSR set to: 2
  3305                           ;UT.c: 104: }
  3306                           ;UT.c: 105: for (uint8_t i=48; i<=63; i++){
  3307                           
  3308                           ; BSR set to: 2
  3309  000EC2  0E30               	movlw	48
  3310  000EC4  6FB1               	movwf	main@i_3333& (0+255),b
  3311  000EC6                     l10734:
  3312                           
  3313                           ; BSR set to: 2
  3314  000EC6  0E3F               	movlw	63
  3315  000EC8  65B1               	cpfsgt	main@i_3333& (0+255),b
  3316  000ECA  D001               	goto	l1063
  3317  000ECC  D00A               	goto	u10960
  3318  000ECE                     l1063:
  3319                           
  3320                           ; BSR set to: 2
  3321                           ;UT.c: 106: SetChannelLoRaWan (i,1);
  3322                           
  3323                           ; BSR set to: 2
  3324  000ECE  0E01               	movlw	1
  3325  000ED0  0100               	movlb	0	; () banked
  3326  000ED2  6FF1               	movwf	SetChannelLoRaWan@ligado& (0+255),b
  3327  000ED4  0102               	movlb	2	; () banked
  3328  000ED6  51B1               	movf	main@i_3333& (0+255),w,b
  3329  000ED8  EC7E  F026         	call	_SetChannelLoRaWan
  3330  000EDC  0102               	movlb	2	; () banked
  3331  000EDE  2BB1               	incf	main@i_3333& (0+255),f,b
  3332  000EE0  D7F2               	goto	l10734
  3333  000EE2                     u10960:
  3334                           
  3335                           ; BSR set to: 2
  3336                           ;UT.c: 107: }
  3337                           ;UT.c: 109: DataRate(1);
  3338                           
  3339                           ; BSR set to: 2
  3340  000EE2  0E00               	movlw	0
  3341  000EE4  0100               	movlb	0	; () banked
  3342  000EE6  6FF2               	movwf	(DataRate@dr+1)& (0+255),b
  3343  000EE8  0E01               	movlw	1
  3344  000EEA  6FF1               	movwf	DataRate@dr& (0+255),b
  3345  000EEC  ECBC  F028         	call	_DataRate	;wreg free
  3346                           
  3347                           ;UT.c: 110: SetAdr(STATE_OFF);
  3348  000EF0  0ECE               	movlw	low _STATE_OFF
  3349  000EF2  0100               	movlb	0	; () banked
  3350  000EF4  6FF1               	movwf	SetAdr@state& (0+255),b
  3351  000EF6  0E7D               	movlw	high _STATE_OFF
  3352  000EF8  6FF2               	movwf	(SetAdr@state+1)& (0+255),b
  3353  000EFA  EC84  F029         	call	_SetAdr	;wreg free
  3354                           
  3355                           ;UT.c: 111: SetDevEUI();
  3356  000EFE  EC96  F025         	call	_SetDevEUI	;wreg free
  3357                           
  3358                           ;UT.c: 112: SetAppEUI();
  3359  000F02  ECD1  F025         	call	_SetAppEUI	;wreg free
  3360                           
  3361                           ;UT.c: 113: SetAppKey();
  3362  000F06  EC82  F020         	call	_SetAppKey	;wreg free
  3363                           
  3364                           ;UT.c: 114: MacSave();
  3365  000F0A  ECFB  F029         	call	_MacSave	;wreg free
  3366  000F0E                     
  3367                           ;UT.c: 118: {
  3368                           ;UT.c: 119: uint32_t tempo=millis();
  3369  000F0E  ECFA  F02A         	call	_millis	;wreg free
  3370  000F12  C060  F296         	movff	?_millis,main@tempo
  3371  000F16  C061  F297         	movff	?_millis+1,main@tempo+1
  3372  000F1A  C062  F298         	movff	?_millis+2,main@tempo+2
  3373  000F1E  C063  F299         	movff	?_millis+3,main@tempo+3
  3374                           
  3375                           ;UT.c: 120: pisca ^= 1;
  3376  000F22  0E01               	movlw	1
  3377  000F24  0102               	movlb	2	; () banked
  3378  000F26  1BAF               	xorwf	main@pisca& (0+255),f,b
  3379                           
  3380                           ; BSR set to: 2
  3381                           ;UT.c: 121: LATEbits.LATE2 = pisca;
  3382  000F28  B1AF               	btfsc	main@pisca& (0+255),0,b
  3383  000F2A  D002               	bra	u10975
  3384  000F2C  948D               	bcf	3981,2,c	;volatile
  3385  000F2E  D001               	bra	u10976
  3386  000F30                     u10975:
  3387  000F30  848D               	bsf	3981,2,c	;volatile
  3388  000F32                     u10976:
  3389                           
  3390                           ;UT.c: 147: dadoPoco.nivel1 =(uint16_t)(le_AD(0)*1000.0);
  3391  000F32  0E00               	movlw	0
  3392  000F34  EC61  F018         	call	_le_AD
  3393  000F38  C09E  F2A6         	movff	?_le_AD,_main$5956
  3394  000F3C  C09F  F2A7         	movff	?_le_AD+1,_main$5956+1
  3395  000F40  C0A0  F2A8         	movff	?_le_AD+2,_main$5956+2
  3396                           
  3397                           ;UT.c: 147: dadoPoco.nivel1 =(uint16_t)(le_AD(0)*1000.0);
  3398  000F44  0E00               	movlw	0
  3399  000F46  0100               	movlb	0	; () banked
  3400  000F48  6F83               	movwf	___ftmul@f2& (0+255),b
  3401  000F4A  0E7A               	movlw	122
  3402  000F4C  6F84               	movwf	(___ftmul@f2+1)& (0+255),b
  3403  000F4E  0E44               	movlw	68
  3404  000F50  6F85               	movwf	(___ftmul@f2+2)& (0+255),b
  3405  000F52  C2A6  F080         	movff	_main$5956,___ftmul@f1
  3406  000F56  C2A7  F081         	movff	_main$5956+1,___ftmul@f1+1
  3407  000F5A  C2A8  F082         	movff	_main$5956+2,___ftmul@f1+2
  3408  000F5E  EC21  F01D         	call	___ftmul	;wreg free
  3409  000F62  C080  F0B0         	movff	?___ftmul,___fttol@f1
  3410  000F66  C081  F0B1         	movff	?___ftmul+1,___fttol@f1+1
  3411  000F6A  C082  F0B2         	movff	?___ftmul+2,___fttol@f1+2
  3412  000F6E  ECA5  F01C         	call	___fttol	;wreg free
  3413  000F72  C0B0  F2B4         	movff	?___fttol,main@dadoPoco+2
  3414  000F76  C0B1  F2B5         	movff	?___fttol+1,main@dadoPoco+3
  3415                           
  3416                           ;UT.c: 148: dadoPoco.nivel2 =(uint16_t)(le_AD(1)*1000.0);
  3417  000F7A  0E01               	movlw	1
  3418  000F7C  EC61  F018         	call	_le_AD
  3419  000F80  C09E  F2A6         	movff	?_le_AD,_main$5956
  3420  000F84  C09F  F2A7         	movff	?_le_AD+1,_main$5956+1
  3421  000F88  C0A0  F2A8         	movff	?_le_AD+2,_main$5956+2
  3422                           
  3423                           ;UT.c: 148: dadoPoco.nivel2 =(uint16_t)(le_AD(1)*1000.0);
  3424  000F8C  0E00               	movlw	0
  3425  000F8E  0100               	movlb	0	; () banked
  3426  000F90  6F83               	movwf	___ftmul@f2& (0+255),b
  3427  000F92  0E7A               	movlw	122
  3428  000F94  6F84               	movwf	(___ftmul@f2+1)& (0+255),b
  3429  000F96  0E44               	movlw	68
  3430  000F98  6F85               	movwf	(___ftmul@f2+2)& (0+255),b
  3431  000F9A  C2A6  F080         	movff	_main$5956,___ftmul@f1
  3432  000F9E  C2A7  F081         	movff	_main$5956+1,___ftmul@f1+1
  3433  000FA2  C2A8  F082         	movff	_main$5956+2,___ftmul@f1+2
  3434  000FA6  EC21  F01D         	call	___ftmul	;wreg free
  3435  000FAA  C080  F0B0         	movff	?___ftmul,___fttol@f1
  3436  000FAE  C081  F0B1         	movff	?___ftmul+1,___fttol@f1+1
  3437  000FB2  C082  F0B2         	movff	?___ftmul+2,___fttol@f1+2
  3438  000FB6  ECA5  F01C         	call	___fttol	;wreg free
  3439  000FBA  C0B0  F2B6         	movff	?___fttol,main@dadoPoco+4
  3440  000FBE  C0B1  F2B7         	movff	?___fttol+1,main@dadoPoco+5
  3441                           
  3442                           ;UT.c: 149: dadoPoco.pulsos1 =le_pulsos(1,retornaDado(1,0));
  3443  000FC2  0E00               	movlw	0
  3444  000FC4  0100               	movlb	0	; () banked
  3445  000FC6  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3446  000FC8  0E01               	movlw	1
  3447  000FCA  EC1A  F027         	call	_retornaDado
  3448  000FCE  0100               	movlb	0	; () banked
  3449  000FD0  6F65               	movwf	le_pulsos@modo& (0+255),b
  3450  000FD2  0E01               	movlw	1
  3451  000FD4  EC10  F01E         	call	_le_pulsos
  3452  000FD8  C065  F2B8         	movff	?_le_pulsos,main@dadoPoco+6
  3453  000FDC  C066  F2B9         	movff	?_le_pulsos+1,main@dadoPoco+7
  3454  000FE0  C067  F2BA         	movff	?_le_pulsos+2,main@dadoPoco+8
  3455  000FE4  C068  F2BB         	movff	?_le_pulsos+3,main@dadoPoco+9
  3456                           
  3457                           ;UT.c: 150: dadoPoco.pulsos2 =le_pulsos(2,retornaDado(1,1));
  3458  000FE8  0E01               	movlw	1
  3459  000FEA  0100               	movlb	0	; () banked
  3460  000FEC  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3461  000FEE  0E01               	movlw	1
  3462  000FF0  EC1A  F027         	call	_retornaDado
  3463  000FF4  0100               	movlb	0	; () banked
  3464  000FF6  6F65               	movwf	le_pulsos@modo& (0+255),b
  3465  000FF8  0E02               	movlw	2
  3466  000FFA  EC10  F01E         	call	_le_pulsos
  3467  000FFE  C065  F2BC         	movff	?_le_pulsos,main@dadoPoco+10
  3468  001002  C066  F2BD         	movff	?_le_pulsos+1,main@dadoPoco+11
  3469  001006  C067  F2BE         	movff	?_le_pulsos+2,main@dadoPoco+12
  3470  00100A  C068  F2BF         	movff	?_le_pulsos+3,main@dadoPoco+13
  3471                           
  3472                           ;UT.c: 151: dadoPoco.pulsos3 =le_pulsos(3,retornaDado(1,2));
  3473  00100E  0E02               	movlw	2
  3474  001010  0100               	movlb	0	; () banked
  3475  001012  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3476  001014  0E01               	movlw	1
  3477  001016  EC1A  F027         	call	_retornaDado
  3478  00101A  0100               	movlb	0	; () banked
  3479  00101C  6F65               	movwf	le_pulsos@modo& (0+255),b
  3480  00101E  0E03               	movlw	3
  3481  001020  EC10  F01E         	call	_le_pulsos
  3482  001024  C065  F2C0         	movff	?_le_pulsos,main@dadoPoco+14
  3483  001028  C066  F2C1         	movff	?_le_pulsos+1,main@dadoPoco+15
  3484  00102C  C067  F2C2         	movff	?_le_pulsos+2,main@dadoPoco+16
  3485  001030  C068  F2C3         	movff	?_le_pulsos+3,main@dadoPoco+17
  3486                           
  3487                           ;UT.c: 152: dadoPoco.pulsos4 =le_pulsos(4,retornaDado(1,3));
  3488  001034  0E03               	movlw	3
  3489  001036  0100               	movlb	0	; () banked
  3490  001038  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3491  00103A  0E01               	movlw	1
  3492  00103C  EC1A  F027         	call	_retornaDado
  3493  001040  0100               	movlb	0	; () banked
  3494  001042  6F65               	movwf	le_pulsos@modo& (0+255),b
  3495  001044  0E04               	movlw	4
  3496  001046  EC10  F01E         	call	_le_pulsos
  3497  00104A  C065  F2C4         	movff	?_le_pulsos,main@dadoPoco+18
  3498  00104E  C066  F2C5         	movff	?_le_pulsos+1,main@dadoPoco+19
  3499  001052  C067  F2C6         	movff	?_le_pulsos+2,main@dadoPoco+20
  3500  001056  C068  F2C7         	movff	?_le_pulsos+3,main@dadoPoco+21
  3501                           
  3502                           ;UT.c: 154: nivel1 = dadoPoco.nivel1;
  3503  00105A  C2B4  F2EE         	movff	main@dadoPoco+2,_nivel1
  3504                           
  3505                           ;UT.c: 155: nivel2 = dadoPoco.nivel2;
  3506  00105E  C2B6  F2ED         	movff	main@dadoPoco+4,_nivel2
  3507                           
  3508                           ;UT.c: 156: pulsos1 = dadoPoco.pulsos1;
  3509  001062  C2B8  F1FD         	movff	main@dadoPoco+6,_pulsos1
  3510                           
  3511                           ;UT.c: 157: pulsos2 = dadoPoco.pulsos2;
  3512  001066  C2BC  F1FC         	movff	main@dadoPoco+10,_pulsos2
  3513                           
  3514                           ;UT.c: 158: pulsos3 = dadoPoco.pulsos3;
  3515  00106A  C2C0  F1FB         	movff	main@dadoPoco+14,_pulsos3
  3516                           
  3517                           ;UT.c: 159: pulsos4 = dadoPoco.pulsos4;
  3518  00106E  C2C4  F1FA         	movff	main@dadoPoco+18,_pulsos4
  3519                           
  3520                           ;UT.c: 161: LATDbits.LATD4 = retornaDado(0,0);
  3521  001072  0E00               	movlw	0
  3522  001074  0100               	movlb	0	; () banked
  3523  001076  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3524  001078  0E00               	movlw	0
  3525  00107A  EC1A  F027         	call	_retornaDado
  3526  00107E  0100               	movlb	0	; () banked
  3527  001080  6FF6               	movwf	??_main& (0+255),b
  3528  001082  3BF6               	swapf	??_main& (0+255),f,b
  3529  001084  508C               	movf	3980,w,c	;volatile
  3530  001086  19F6               	xorwf	??_main& (0+255),w,b
  3531  001088  0BEF               	andlw	-17
  3532  00108A  19F6               	xorwf	??_main& (0+255),w,b
  3533  00108C  6E8C               	movwf	3980,c	;volatile
  3534                           
  3535                           ; BSR set to: 0
  3536                           ;UT.c: 162: LATDbits.LATD5 = retornaDado(0,3);
  3537  00108E  0E03               	movlw	3
  3538  001090  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3539  001092  0E00               	movlw	0
  3540  001094  EC1A  F027         	call	_retornaDado
  3541  001098  0100               	movlb	0	; () banked
  3542  00109A  6FF6               	movwf	??_main& (0+255),b
  3543  00109C  3BF6               	swapf	??_main& (0+255),f,b
  3544  00109E  47F6               	rlncf	??_main& (0+255),f,b
  3545  0010A0  508C               	movf	3980,w,c	;volatile
  3546  0010A2  19F6               	xorwf	??_main& (0+255),w,b
  3547  0010A4  0BDF               	andlw	-33
  3548  0010A6  19F6               	xorwf	??_main& (0+255),w,b
  3549  0010A8  6E8C               	movwf	3980,c	;volatile
  3550                           
  3551                           ; BSR set to: 0
  3552                           ;UT.c: 163: LATDbits.LATD6 = retornaDado(0,2);
  3553  0010AA  0E02               	movlw	2
  3554  0010AC  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3555  0010AE  0E00               	movlw	0
  3556  0010B0  EC1A  F027         	call	_retornaDado
  3557  0010B4  0100               	movlb	0	; () banked
  3558  0010B6  6FF6               	movwf	??_main& (0+255),b
  3559  0010B8  3BF6               	swapf	??_main& (0+255),f,b
  3560  0010BA  47F6               	rlncf	??_main& (0+255),f,b
  3561  0010BC  47F6               	rlncf	??_main& (0+255),f,b
  3562  0010BE  508C               	movf	3980,w,c	;volatile
  3563  0010C0  19F6               	xorwf	??_main& (0+255),w,b
  3564  0010C2  0BBF               	andlw	-65
  3565  0010C4  19F6               	xorwf	??_main& (0+255),w,b
  3566  0010C6  6E8C               	movwf	3980,c	;volatile
  3567                           
  3568                           ; BSR set to: 0
  3569                           ;UT.c: 164: LATDbits.LATD7 = retornaDado(0,1);
  3570  0010C8  0E01               	movlw	1
  3571  0010CA  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3572  0010CC  0E00               	movlw	0
  3573  0010CE  EC1A  F027         	call	_retornaDado
  3574  0010D2  0100               	movlb	0	; () banked
  3575  0010D4  6FF6               	movwf	??_main& (0+255),b
  3576  0010D6  33F6               	rrcf	??_main& (0+255),f,b
  3577  0010D8  33F6               	rrcf	??_main& (0+255),f,b
  3578  0010DA  508C               	movf	3980,w,c	;volatile
  3579  0010DC  19F6               	xorwf	??_main& (0+255),w,b
  3580  0010DE  0B7F               	andlw	-129
  3581  0010E0  19F6               	xorwf	??_main& (0+255),w,b
  3582  0010E2  6E8C               	movwf	3980,c	;volatile
  3583                           
  3584                           ; BSR set to: 0
  3585                           ;UT.c: 166: feedback1 = (feedback1 & (~(1))) | (retornaDado(0,0));
  3586  0010E4  0E00               	movlw	0
  3587  0010E6  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3588  0010E8  0E00               	movlw	0
  3589  0010EA  EC1A  F027         	call	_retornaDado
  3590  0010EE  0100               	movlb	0	; () banked
  3591  0010F0  6FF6               	movwf	??_main& (0+255),b
  3592  0010F2  0102               	movlb	2	; () banked
  3593  0010F4  51F2               	movf	_feedback1& (0+255),w,b
  3594  0010F6  0BFE               	andlw	254
  3595  0010F8  0100               	movlb	0	; () banked
  3596  0010FA  11F6               	iorwf	??_main& (0+255),w,b
  3597  0010FC  0102               	movlb	2	; () banked
  3598  0010FE  6FF2               	movwf	_feedback1& (0+255),b
  3599                           
  3600                           ; BSR set to: 2
  3601                           ;UT.c: 167: feedback1 = (feedback1 & (~(1<<1))) | (retornaDado(0,3)<<1);
  3602  001100  0E03               	movlw	3
  3603  001102  0100               	movlb	0	; () banked
  3604  001104  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3605  001106  0E00               	movlw	0
  3606  001108  EC1A  F027         	call	_retornaDado
  3607  00110C  0100               	movlb	0	; () banked
  3608  00110E  6FF6               	movwf	??_main& (0+255),b
  3609  001110  90D8               	bcf	status,0,c
  3610  001112  35F6               	rlcf	??_main& (0+255),w,b
  3611  001114  6FF7               	movwf	(??_main+1)& (0+255),b
  3612  001116  0102               	movlb	2	; () banked
  3613  001118  51F2               	movf	_feedback1& (0+255),w,b
  3614  00111A  0BFD               	andlw	253
  3615  00111C  0100               	movlb	0	; () banked
  3616  00111E  11F7               	iorwf	(??_main+1)& (0+255),w,b
  3617  001120  0102               	movlb	2	; () banked
  3618  001122  6FF2               	movwf	_feedback1& (0+255),b
  3619                           
  3620                           ; BSR set to: 2
  3621                           ;UT.c: 168: feedback1 = (feedback1 & (~(1<<2))) | (retornaDado(0,2)<<2);
  3622  001124  0E02               	movlw	2
  3623  001126  0100               	movlb	0	; () banked
  3624  001128  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3625  00112A  0E00               	movlw	0
  3626  00112C  EC1A  F027         	call	_retornaDado
  3627  001130  0100               	movlb	0	; () banked
  3628  001132  6FF6               	movwf	??_main& (0+255),b
  3629  001134  90D8               	bcf	status,0,c
  3630  001136  37F6               	rlcf	??_main& (0+255),f,b
  3631  001138  90D8               	bcf	status,0,c
  3632  00113A  37F6               	rlcf	??_main& (0+255),f,b
  3633  00113C  0102               	movlb	2	; () banked
  3634  00113E  51F2               	movf	_feedback1& (0+255),w,b
  3635  001140  0BFB               	andlw	251
  3636  001142  0100               	movlb	0	; () banked
  3637  001144  11F6               	iorwf	??_main& (0+255),w,b
  3638  001146  0102               	movlb	2	; () banked
  3639  001148  6FF2               	movwf	_feedback1& (0+255),b
  3640                           
  3641                           ; BSR set to: 2
  3642                           ;UT.c: 169: feedback1 = (feedback1 & (~(1<<3))) | (retornaDado(0,1)<<3);
  3643  00114A  0E01               	movlw	1
  3644  00114C  0100               	movlb	0	; () banked
  3645  00114E  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3646  001150  0E00               	movlw	0
  3647  001152  EC1A  F027         	call	_retornaDado
  3648  001156  0100               	movlb	0	; () banked
  3649  001158  6FF6               	movwf	??_main& (0+255),b
  3650  00115A  90D8               	bcf	status,0,c
  3651  00115C  37F6               	rlcf	??_main& (0+255),f,b
  3652  00115E  90D8               	bcf	status,0,c
  3653  001160  37F6               	rlcf	??_main& (0+255),f,b
  3654  001162  90D8               	bcf	status,0,c
  3655  001164  37F6               	rlcf	??_main& (0+255),f,b
  3656  001166  0102               	movlb	2	; () banked
  3657  001168  51F2               	movf	_feedback1& (0+255),w,b
  3658  00116A  0BF7               	andlw	247
  3659  00116C  0100               	movlb	0	; () banked
  3660  00116E  11F6               	iorwf	??_main& (0+255),w,b
  3661  001170  0102               	movlb	2	; () banked
  3662  001172  6FF2               	movwf	_feedback1& (0+255),b
  3663                           
  3664                           ; BSR set to: 2
  3665                           ;UT.c: 170: feedback1 = (feedback1 & (~(1<<4))) | (retornaDado(1,4)<<4);
  3666  001174  0E04               	movlw	4
  3667  001176  0100               	movlb	0	; () banked
  3668  001178  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3669  00117A  0E01               	movlw	1
  3670  00117C  EC1A  F027         	call	_retornaDado
  3671  001180  0100               	movlb	0	; () banked
  3672  001182  6FF6               	movwf	??_main& (0+255),b
  3673  001184  3BF6               	swapf	??_main& (0+255),f,b
  3674  001186  0EF0               	movlw	240
  3675  001188  17F6               	andwf	??_main& (0+255),f,b
  3676  00118A  0102               	movlb	2	; () banked
  3677  00118C  51F2               	movf	_feedback1& (0+255),w,b
  3678  00118E  0BEF               	andlw	239
  3679  001190  0100               	movlb	0	; () banked
  3680  001192  11F6               	iorwf	??_main& (0+255),w,b
  3681  001194  0102               	movlb	2	; () banked
  3682  001196  6FF2               	movwf	_feedback1& (0+255),b
  3683                           
  3684                           ; BSR set to: 2
  3685                           ;UT.c: 171: feedback1 = (feedback1 & (~(1<<5))) | (retornaDado(1,5)<<5);
  3686  001198  0E05               	movlw	5
  3687  00119A  0100               	movlb	0	; () banked
  3688  00119C  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3689  00119E  0E01               	movlw	1
  3690  0011A0  EC1A  F027         	call	_retornaDado
  3691  0011A4  0100               	movlb	0	; () banked
  3692  0011A6  6FF6               	movwf	??_main& (0+255),b
  3693  0011A8  0E05               	movlw	5
  3694  0011AA  6FF7               	movwf	(??_main+1)& (0+255),b
  3695  0011AC                     u10985:
  3696  0011AC  90D8               	bcf	status,0,c
  3697  0011AE  37F6               	rlcf	??_main& (0+255),f,b
  3698  0011B0  2FF7               	decfsz	(??_main+1)& (0+255),f,b
  3699  0011B2  D7FC               	goto	u10985
  3700  0011B4  0102               	movlb	2	; () banked
  3701  0011B6  51F2               	movf	_feedback1& (0+255),w,b
  3702  0011B8  0BDF               	andlw	223
  3703  0011BA  0100               	movlb	0	; () banked
  3704  0011BC  11F6               	iorwf	??_main& (0+255),w,b
  3705  0011BE  0102               	movlb	2	; () banked
  3706  0011C0  6FF2               	movwf	_feedback1& (0+255),b
  3707                           
  3708                           ; BSR set to: 2
  3709                           ;UT.c: 172: feedback2 = (feedback2 & (~(1))) | (retornaDado(5,6));
  3710  0011C2  0E06               	movlw	6
  3711  0011C4  0100               	movlb	0	; () banked
  3712  0011C6  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3713  0011C8  0E05               	movlw	5
  3714  0011CA  EC1A  F027         	call	_retornaDado
  3715  0011CE  0100               	movlb	0	; () banked
  3716  0011D0  6FF6               	movwf	??_main& (0+255),b
  3717  0011D2  0102               	movlb	2	; () banked
  3718  0011D4  51F1               	movf	_feedback2& (0+255),w,b
  3719  0011D6  0BFE               	andlw	254
  3720  0011D8  0100               	movlb	0	; () banked
  3721  0011DA  11F6               	iorwf	??_main& (0+255),w,b
  3722  0011DC  0102               	movlb	2	; () banked
  3723  0011DE  6FF1               	movwf	_feedback2& (0+255),b
  3724                           
  3725                           ; BSR set to: 2
  3726                           ;UT.c: 173: feedback2 = (feedback2 & (~(1<<1))) | (retornaDado(5,7)<<1);
  3727  0011E0  0E07               	movlw	7
  3728  0011E2  0100               	movlb	0	; () banked
  3729  0011E4  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3730  0011E6  0E05               	movlw	5
  3731  0011E8  EC1A  F027         	call	_retornaDado
  3732  0011EC  0100               	movlb	0	; () banked
  3733  0011EE  6FF6               	movwf	??_main& (0+255),b
  3734  0011F0  90D8               	bcf	status,0,c
  3735  0011F2  35F6               	rlcf	??_main& (0+255),w,b
  3736  0011F4  6FF7               	movwf	(??_main+1)& (0+255),b
  3737  0011F6  0102               	movlb	2	; () banked
  3738  0011F8  51F1               	movf	_feedback2& (0+255),w,b
  3739  0011FA  0BFD               	andlw	253
  3740  0011FC  0100               	movlb	0	; () banked
  3741  0011FE  11F7               	iorwf	(??_main+1)& (0+255),w,b
  3742  001200  0102               	movlb	2	; () banked
  3743  001202  6FF1               	movwf	_feedback2& (0+255),b
  3744                           
  3745                           ; BSR set to: 2
  3746                           ;UT.c: 174: feedback2 = (feedback2 & (~(1<<2))) | (retornaDado(5,4)<<2);
  3747  001204  0E04               	movlw	4
  3748  001206  0100               	movlb	0	; () banked
  3749  001208  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3750  00120A  0E05               	movlw	5
  3751  00120C  EC1A  F027         	call	_retornaDado
  3752  001210  0100               	movlb	0	; () banked
  3753  001212  6FF6               	movwf	??_main& (0+255),b
  3754  001214  90D8               	bcf	status,0,c
  3755  001216  37F6               	rlcf	??_main& (0+255),f,b
  3756  001218  90D8               	bcf	status,0,c
  3757  00121A  37F6               	rlcf	??_main& (0+255),f,b
  3758  00121C  0102               	movlb	2	; () banked
  3759  00121E  51F1               	movf	_feedback2& (0+255),w,b
  3760  001220  0BFB               	andlw	251
  3761  001222  0100               	movlb	0	; () banked
  3762  001224  11F6               	iorwf	??_main& (0+255),w,b
  3763  001226  0102               	movlb	2	; () banked
  3764  001228  6FF1               	movwf	_feedback2& (0+255),b
  3765                           
  3766                           ; BSR set to: 2
  3767                           ;UT.c: 175: feedback2 = (feedback2 & (~(1<<3))) | (retornaDado(5,5)<<3);
  3768  00122A  0E05               	movlw	5
  3769  00122C  0100               	movlb	0	; () banked
  3770  00122E  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3771  001230  0E05               	movlw	5
  3772  001232  EC1A  F027         	call	_retornaDado
  3773  001236  0100               	movlb	0	; () banked
  3774  001238  6FF6               	movwf	??_main& (0+255),b
  3775  00123A  90D8               	bcf	status,0,c
  3776  00123C  37F6               	rlcf	??_main& (0+255),f,b
  3777  00123E  90D8               	bcf	status,0,c
  3778  001240  37F6               	rlcf	??_main& (0+255),f,b
  3779  001242  90D8               	bcf	status,0,c
  3780  001244  37F6               	rlcf	??_main& (0+255),f,b
  3781  001246  0102               	movlb	2	; () banked
  3782  001248  51F1               	movf	_feedback2& (0+255),w,b
  3783  00124A  0BF7               	andlw	247
  3784  00124C  0100               	movlb	0	; () banked
  3785  00124E  11F6               	iorwf	??_main& (0+255),w,b
  3786  001250  0102               	movlb	2	; () banked
  3787  001252  6FF1               	movwf	_feedback2& (0+255),b
  3788                           
  3789                           ; BSR set to: 2
  3790                           ;UT.c: 176: feedback2 = (feedback2 & (~(1<<4))) | (retornaDado(5,2)<<4);
  3791  001254  0E02               	movlw	2
  3792  001256  0100               	movlb	0	; () banked
  3793  001258  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3794  00125A  0E05               	movlw	5
  3795  00125C  EC1A  F027         	call	_retornaDado
  3796  001260  0100               	movlb	0	; () banked
  3797  001262  6FF6               	movwf	??_main& (0+255),b
  3798  001264  3BF6               	swapf	??_main& (0+255),f,b
  3799  001266  0EF0               	movlw	240
  3800  001268  17F6               	andwf	??_main& (0+255),f,b
  3801  00126A  0102               	movlb	2	; () banked
  3802  00126C  51F1               	movf	_feedback2& (0+255),w,b
  3803  00126E  0BEF               	andlw	239
  3804  001270  0100               	movlb	0	; () banked
  3805  001272  11F6               	iorwf	??_main& (0+255),w,b
  3806  001274  0102               	movlb	2	; () banked
  3807  001276  6FF1               	movwf	_feedback2& (0+255),b
  3808                           
  3809                           ; BSR set to: 2
  3810                           ;UT.c: 177: feedback2 = (feedback2 & (~(1<<5))) | (retornaDado(5,3)<<5);
  3811  001278  0E03               	movlw	3
  3812  00127A  0100               	movlb	0	; () banked
  3813  00127C  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3814  00127E  0E05               	movlw	5
  3815  001280  EC1A  F027         	call	_retornaDado
  3816  001284  0100               	movlb	0	; () banked
  3817  001286  6FF6               	movwf	??_main& (0+255),b
  3818  001288  0E05               	movlw	5
  3819  00128A  6FF7               	movwf	(??_main+1)& (0+255),b
  3820  00128C                     u10995:
  3821  00128C  90D8               	bcf	status,0,c
  3822  00128E  37F6               	rlcf	??_main& (0+255),f,b
  3823  001290  2FF7               	decfsz	(??_main+1)& (0+255),f,b
  3824  001292  D7FC               	goto	u10995
  3825  001294  0102               	movlb	2	; () banked
  3826  001296  51F1               	movf	_feedback2& (0+255),w,b
  3827  001298  0BDF               	andlw	223
  3828  00129A  0100               	movlb	0	; () banked
  3829  00129C  11F6               	iorwf	??_main& (0+255),w,b
  3830  00129E  0102               	movlb	2	; () banked
  3831  0012A0  6FF1               	movwf	_feedback2& (0+255),b
  3832                           
  3833                           ; BSR set to: 2
  3834                           ;UT.c: 178: feedback2 = (feedback2 & (~(1<<6))) | (retornaDado(5,0)<<6);
  3835  0012A2  0E00               	movlw	0
  3836  0012A4  0100               	movlb	0	; () banked
  3837  0012A6  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3838  0012A8  0E05               	movlw	5
  3839  0012AA  EC1A  F027         	call	_retornaDado
  3840  0012AE  0100               	movlb	0	; () banked
  3841  0012B0  6FF6               	movwf	??_main& (0+255),b
  3842  0012B2  0E06               	movlw	6
  3843  0012B4  6FF7               	movwf	(??_main+1)& (0+255),b
  3844  0012B6                     u11005:
  3845  0012B6  90D8               	bcf	status,0,c
  3846  0012B8  37F6               	rlcf	??_main& (0+255),f,b
  3847  0012BA  2FF7               	decfsz	(??_main+1)& (0+255),f,b
  3848  0012BC  D7FC               	goto	u11005
  3849  0012BE  0102               	movlb	2	; () banked
  3850  0012C0  51F1               	movf	_feedback2& (0+255),w,b
  3851  0012C2  0BBF               	andlw	191
  3852  0012C4  0100               	movlb	0	; () banked
  3853  0012C6  11F6               	iorwf	??_main& (0+255),w,b
  3854  0012C8  0102               	movlb	2	; () banked
  3855  0012CA  6FF1               	movwf	_feedback2& (0+255),b
  3856                           
  3857                           ; BSR set to: 2
  3858                           ;UT.c: 179: feedback2 = (feedback2 & (~(1<<7))) | (retornaDado(5,1)<<7);
  3859  0012CC  0E01               	movlw	1
  3860  0012CE  0100               	movlb	0	; () banked
  3861  0012D0  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3862  0012D2  0E05               	movlw	5
  3863  0012D4  EC1A  F027         	call	_retornaDado
  3864  0012D8  0100               	movlb	0	; () banked
  3865  0012DA  6FF6               	movwf	??_main& (0+255),b
  3866  0012DC  0E00               	movlw	0
  3867  0012DE  B1F6               	btfsc	??_main& (0+255),0,b
  3868  0012E0  0E80               	movlw	128
  3869  0012E2  6FF6               	movwf	??_main& (0+255),b
  3870  0012E4  0102               	movlb	2	; () banked
  3871  0012E6  51F1               	movf	_feedback2& (0+255),w,b
  3872  0012E8  0B7F               	andlw	127
  3873  0012EA  0100               	movlb	0	; () banked
  3874  0012EC  11F6               	iorwf	??_main& (0+255),w,b
  3875  0012EE  0102               	movlb	2	; () banked
  3876  0012F0  6FF1               	movwf	_feedback2& (0+255),b
  3877                           
  3878                           ; BSR set to: 2
  3879                           ;UT.c: 181: if (retornaDado(0,4) == 1){
  3880  0012F2  0E04               	movlw	4
  3881  0012F4  0100               	movlb	0	; () banked
  3882  0012F6  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3883  0012F8  0E00               	movlw	0
  3884  0012FA  EC1A  F027         	call	_retornaDado
  3885  0012FE  06E8               	decf	wreg,f,c
  3886  001300  A4D8               	btfss	status,2,c
  3887  001302  D170               	goto	l1066
  3888                           
  3889                           ;UT.c: 182: uint8_t Icanal = retornaDado(6,6)<<6 | retornaDado(6,5)<<5 | retornaDado(6,4
      +                          )<<4 | retornaDado(6,3)<<3 | retornaDado(6,2)<<2 | retornaDado(6,1)<<1 | retornaDado(6,0
      +                          );
  3890  001304  0E00               	movlw	0
  3891  001306  0100               	movlb	0	; () banked
  3892  001308  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3893  00130A  0E06               	movlw	6
  3894  00130C  EC1A  F027         	call	_retornaDado
  3895  001310  0100               	movlb	0	; () banked
  3896  001312  6FF6               	movwf	??_main& (0+255),b
  3897  001314  0E01               	movlw	1
  3898  001316  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3899  001318  0E06               	movlw	6
  3900  00131A  EC1A  F027         	call	_retornaDado
  3901  00131E  0100               	movlb	0	; () banked
  3902  001320  6FF7               	movwf	(??_main+1)& (0+255),b
  3903  001322  90D8               	bcf	status,0,c
  3904  001324  35F7               	rlcf	(??_main+1)& (0+255),w,b
  3905  001326  6FF8               	movwf	(??_main+2)& (0+255),b
  3906  001328  0E02               	movlw	2
  3907  00132A  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3908  00132C  0E06               	movlw	6
  3909  00132E  EC1A  F027         	call	_retornaDado
  3910  001332  0100               	movlb	0	; () banked
  3911  001334  6FF9               	movwf	(??_main+3)& (0+255),b
  3912  001336  90D8               	bcf	status,0,c
  3913  001338  37F9               	rlcf	(??_main+3)& (0+255),f,b
  3914  00133A  90D8               	bcf	status,0,c
  3915  00133C  37F9               	rlcf	(??_main+3)& (0+255),f,b
  3916  00133E  0E03               	movlw	3
  3917  001340  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3918  001342  0E06               	movlw	6
  3919  001344  EC1A  F027         	call	_retornaDado
  3920  001348  0100               	movlb	0	; () banked
  3921  00134A  6FFA               	movwf	(??_main+4)& (0+255),b
  3922  00134C  90D8               	bcf	status,0,c
  3923  00134E  37FA               	rlcf	(??_main+4)& (0+255),f,b
  3924  001350  90D8               	bcf	status,0,c
  3925  001352  37FA               	rlcf	(??_main+4)& (0+255),f,b
  3926  001354  90D8               	bcf	status,0,c
  3927  001356  37FA               	rlcf	(??_main+4)& (0+255),f,b
  3928  001358  0E04               	movlw	4
  3929  00135A  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3930  00135C  0E06               	movlw	6
  3931  00135E  EC1A  F027         	call	_retornaDado
  3932  001362  0100               	movlb	0	; () banked
  3933  001364  6FFB               	movwf	(??_main+5)& (0+255),b
  3934  001366  3BFB               	swapf	(??_main+5)& (0+255),f,b
  3935  001368  0EF0               	movlw	240
  3936  00136A  17FB               	andwf	(??_main+5)& (0+255),f,b
  3937  00136C  0E05               	movlw	5
  3938  00136E  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3939  001370  0E06               	movlw	6
  3940  001372  EC1A  F027         	call	_retornaDado
  3941  001376  0100               	movlb	0	; () banked
  3942  001378  6FFC               	movwf	(??_main+6)& (0+255),b
  3943  00137A  0E05               	movlw	5
  3944  00137C  6FFD               	movwf	(??_main+7)& (0+255),b
  3945  00137E                     u11025:
  3946  00137E  90D8               	bcf	status,0,c
  3947  001380  37FC               	rlcf	(??_main+6)& (0+255),f,b
  3948  001382  2FFD               	decfsz	(??_main+7)& (0+255),f,b
  3949  001384  D7FC               	goto	u11025
  3950  001386  0E06               	movlw	6
  3951  001388  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3952  00138A  0E06               	movlw	6
  3953  00138C  EC1A  F027         	call	_retornaDado
  3954  001390  0100               	movlb	0	; () banked
  3955  001392  6FFE               	movwf	(??_main+8)& (0+255),b
  3956  001394  0E06               	movlw	6
  3957  001396  6FFF               	movwf	(??_main+9)& (0+255),b
  3958  001398                     u11035:
  3959  001398  90D8               	bcf	status,0,c
  3960  00139A  37FE               	rlcf	(??_main+8)& (0+255),f,b
  3961  00139C  2FFF               	decfsz	(??_main+9)& (0+255),f,b
  3962  00139E  D7FC               	goto	u11035
  3963  0013A0  51FE               	movf	(??_main+8)& (0+255),w,b
  3964  0013A2  11FC               	iorwf	(??_main+6)& (0+255),w,b
  3965  0013A4  11FB               	iorwf	(??_main+5)& (0+255),w,b
  3966  0013A6  11FA               	iorwf	(??_main+4)& (0+255),w,b
  3967  0013A8  11F9               	iorwf	(??_main+3)& (0+255),w,b
  3968  0013AA  11F8               	iorwf	(??_main+2)& (0+255),w,b
  3969  0013AC  11F6               	iorwf	??_main& (0+255),w,b
  3970  0013AE  0102               	movlb	2	; () banked
  3971  0013B0  6F9E               	movwf	main@Icanal& (0+255),b
  3972                           
  3973                           ;UT.c: 183: uint8_t Fcanal = retornaDado(7,6)<<6 | retornaDado(7,5)<<5 | retornaDado(7,4
      +                          )<<4 | retornaDado(7,3)<<3 | retornaDado(7,2)<<2 | retornaDado(7,1)<<1 | retornaDado(7,0
      +                          );
  3974  0013B2  0E00               	movlw	0
  3975  0013B4  0100               	movlb	0	; () banked
  3976  0013B6  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3977  0013B8  0E07               	movlw	7
  3978  0013BA  EC1A  F027         	call	_retornaDado
  3979  0013BE  0100               	movlb	0	; () banked
  3980  0013C0  6FF6               	movwf	??_main& (0+255),b
  3981  0013C2  0E01               	movlw	1
  3982  0013C4  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3983  0013C6  0E07               	movlw	7
  3984  0013C8  EC1A  F027         	call	_retornaDado
  3985  0013CC  0100               	movlb	0	; () banked
  3986  0013CE  6FF7               	movwf	(??_main+1)& (0+255),b
  3987  0013D0  90D8               	bcf	status,0,c
  3988  0013D2  35F7               	rlcf	(??_main+1)& (0+255),w,b
  3989  0013D4  6FF8               	movwf	(??_main+2)& (0+255),b
  3990  0013D6  0E02               	movlw	2
  3991  0013D8  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3992  0013DA  0E07               	movlw	7
  3993  0013DC  EC1A  F027         	call	_retornaDado
  3994  0013E0  0100               	movlb	0	; () banked
  3995  0013E2  6FF9               	movwf	(??_main+3)& (0+255),b
  3996  0013E4  90D8               	bcf	status,0,c
  3997  0013E6  37F9               	rlcf	(??_main+3)& (0+255),f,b
  3998  0013E8  90D8               	bcf	status,0,c
  3999  0013EA  37F9               	rlcf	(??_main+3)& (0+255),f,b
  4000  0013EC  0E03               	movlw	3
  4001  0013EE  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  4002  0013F0  0E07               	movlw	7
  4003  0013F2  EC1A  F027         	call	_retornaDado
  4004  0013F6  0100               	movlb	0	; () banked
  4005  0013F8  6FFA               	movwf	(??_main+4)& (0+255),b
  4006  0013FA  90D8               	bcf	status,0,c
  4007  0013FC  37FA               	rlcf	(??_main+4)& (0+255),f,b
  4008  0013FE  90D8               	bcf	status,0,c
  4009  001400  37FA               	rlcf	(??_main+4)& (0+255),f,b
  4010  001402  90D8               	bcf	status,0,c
  4011  001404  37FA               	rlcf	(??_main+4)& (0+255),f,b
  4012  001406  0E04               	movlw	4
  4013  001408  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  4014  00140A  0E07               	movlw	7
  4015  00140C  EC1A  F027         	call	_retornaDado
  4016  001410  0100               	movlb	0	; () banked
  4017  001412  6FFB               	movwf	(??_main+5)& (0+255),b
  4018  001414  3BFB               	swapf	(??_main+5)& (0+255),f,b
  4019  001416  0EF0               	movlw	240
  4020  001418  17FB               	andwf	(??_main+5)& (0+255),f,b
  4021  00141A  0E05               	movlw	5
  4022  00141C  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  4023  00141E  0E07               	movlw	7
  4024  001420  EC1A  F027         	call	_retornaDado
  4025  001424  0100               	movlb	0	; () banked
  4026  001426  6FFC               	movwf	(??_main+6)& (0+255),b
  4027  001428  0E05               	movlw	5
  4028  00142A  6FFD               	movwf	(??_main+7)& (0+255),b
  4029  00142C                     u11045:
  4030  00142C  90D8               	bcf	status,0,c
  4031  00142E  37FC               	rlcf	(??_main+6)& (0+255),f,b
  4032  001430  2FFD               	decfsz	(??_main+7)& (0+255),f,b
  4033  001432  D7FC               	goto	u11045
  4034  001434  0E06               	movlw	6
  4035  001436  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  4036  001438  0E07               	movlw	7
  4037  00143A  EC1A  F027         	call	_retornaDado
  4038  00143E  0100               	movlb	0	; () banked
  4039  001440  6FFE               	movwf	(??_main+8)& (0+255),b
  4040  001442  0E06               	movlw	6
  4041  001444  6FFF               	movwf	(??_main+9)& (0+255),b
  4042  001446                     u11055:
  4043  001446  90D8               	bcf	status,0,c
  4044  001448  37FE               	rlcf	(??_main+8)& (0+255),f,b
  4045  00144A  2FFF               	decfsz	(??_main+9)& (0+255),f,b
  4046  00144C  D7FC               	goto	u11055
  4047  00144E  51FE               	movf	(??_main+8)& (0+255),w,b
  4048  001450  11FC               	iorwf	(??_main+6)& (0+255),w,b
  4049  001452  11FB               	iorwf	(??_main+5)& (0+255),w,b
  4050  001454  11FA               	iorwf	(??_main+4)& (0+255),w,b
  4051  001456  11F9               	iorwf	(??_main+3)& (0+255),w,b
  4052  001458  11F8               	iorwf	(??_main+2)& (0+255),w,b
  4053  00145A  11F6               	iorwf	??_main& (0+255),w,b
  4054  00145C  0102               	movlb	2	; () banked
  4055  00145E  6FAB               	movwf	main@Fcanal& (0+255),b
  4056                           
  4057                           ; BSR set to: 2
  4058                           ;UT.c: 184: for (uint8_t i=0; i<Fcanal; i++){
  4059  001460  0E00               	movlw	0
  4060  001462  6FAC               	movwf	main@i_3349& (0+255),b
  4061  001464  D009               	goto	l1067
  4062  001466                     
  4063                           ; BSR set to: 2
  4064                           ;UT.c: 185: SetChannelLoRaWan (i,0);
  4065                           
  4066                           ; BSR set to: 2
  4067  001466  0E00               	movlw	0
  4068  001468  0100               	movlb	0	; () banked
  4069  00146A  6FF1               	movwf	SetChannelLoRaWan@ligado& (0+255),b
  4070  00146C  0102               	movlb	2	; () banked
  4071  00146E  51AC               	movf	main@i_3349& (0+255),w,b
  4072  001470  EC7E  F026         	call	_SetChannelLoRaWan
  4073  001474  0102               	movlb	2	; () banked
  4074  001476  2BAC               	incf	main@i_3349& (0+255),f,b
  4075  001478                     l1067:
  4076                           
  4077                           ; BSR set to: 2
  4078                           
  4079                           ; BSR set to: 2
  4080  001478  51AB               	movf	main@Fcanal& (0+255),w,b
  4081  00147A  5DAC               	subwf	main@i_3349& (0+255),w,b
  4082  00147C  A0D8               	btfss	status,0,c
  4083  00147E  D7F3               	goto	l1068
  4084                           
  4085                           ; BSR set to: 2
  4086                           ;UT.c: 186: }
  4087                           ;UT.c: 187: for (uint8_t i=Icanal; i<=Fcanal; i++){
  4088  001480  C29E  F2AD         	movff	main@Icanal,main@i_3350
  4089  001484  D009               	goto	l1070
  4090  001486                     
  4091                           ; BSR set to: 2
  4092                           ;UT.c: 188: SetChannelLoRaWan (i,1);
  4093                           
  4094                           ; BSR set to: 2
  4095  001486  0E01               	movlw	1
  4096  001488  0100               	movlb	0	; () banked
  4097  00148A  6FF1               	movwf	SetChannelLoRaWan@ligado& (0+255),b
  4098  00148C  0102               	movlb	2	; () banked
  4099  00148E  51AD               	movf	main@i_3350& (0+255),w,b
  4100  001490  EC7E  F026         	call	_SetChannelLoRaWan
  4101  001494  0102               	movlb	2	; () banked
  4102  001496  2BAD               	incf	main@i_3350& (0+255),f,b
  4103  001498                     l1070:
  4104                           
  4105                           ; BSR set to: 2
  4106                           
  4107                           ; BSR set to: 2
  4108  001498  51AD               	movf	main@i_3350& (0+255),w,b
  4109  00149A  5DAB               	subwf	main@Fcanal& (0+255),w,b
  4110  00149C  B0D8               	btfsc	status,0,c
  4111  00149E  D7F3               	goto	l1071
  4112                           
  4113                           ; BSR set to: 2
  4114                           ;UT.c: 189: }
  4115                           ;UT.c: 190: if (retornaDado(0,7) == 1){
  4116                           
  4117                           ; BSR set to: 2
  4118  0014A0  0E07               	movlw	7
  4119  0014A2  0100               	movlb	0	; () banked
  4120  0014A4  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  4121  0014A6  0E00               	movlw	0
  4122  0014A8  EC1A  F027         	call	_retornaDado
  4123  0014AC  06E8               	decf	wreg,f,c
  4124  0014AE  A4D8               	btfss	status,2,c
  4125  0014B0  D090               	goto	l1073
  4126                           
  4127                           ;UT.c: 191: SetAdr(STATE_OFF);
  4128  0014B2  0ECE               	movlw	low _STATE_OFF
  4129  0014B4  0100               	movlb	0	; () banked
  4130  0014B6  6FF1               	movwf	SetAdr@state& (0+255),b
  4131  0014B8  0E7D               	movlw	high _STATE_OFF
  4132  0014BA  6FF2               	movwf	(SetAdr@state+1)& (0+255),b
  4133  0014BC  EC84  F029         	call	_SetAdr	;wreg free
  4134                           
  4135                           ;UT.c: 192: uint8_t dr = retornaDado(2,3)<<3 | retornaDado(2,2)<<2 | retornaDado(2,1)<<1
      +                           | retornaDado(2,0);
  4136  0014C0  0E00               	movlw	0
  4137  0014C2  0100               	movlb	0	; () banked
  4138  0014C4  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  4139  0014C6  0E02               	movlw	2
  4140  0014C8  EC1A  F027         	call	_retornaDado
  4141  0014CC  0100               	movlb	0	; () banked
  4142  0014CE  6FF6               	movwf	??_main& (0+255),b
  4143  0014D0  0E01               	movlw	1
  4144  0014D2  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  4145  0014D4  0E02               	movlw	2
  4146  0014D6  EC1A  F027         	call	_retornaDado
  4147  0014DA  0100               	movlb	0	; () banked
  4148  0014DC  6FF7               	movwf	(??_main+1)& (0+255),b
  4149  0014DE  90D8               	bcf	status,0,c
  4150  0014E0  35F7               	rlcf	(??_main+1)& (0+255),w,b
  4151  0014E2  6FF8               	movwf	(??_main+2)& (0+255),b
  4152  0014E4  0E02               	movlw	2
  4153  0014E6  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  4154  0014E8  0E02               	movlw	2
  4155  0014EA  EC1A  F027         	call	_retornaDado
  4156  0014EE  0100               	movlb	0	; () banked
  4157  0014F0  6FF9               	movwf	(??_main+3)& (0+255),b
  4158  0014F2  90D8               	bcf	status,0,c
  4159  0014F4  37F9               	rlcf	(??_main+3)& (0+255),f,b
  4160  0014F6  90D8               	bcf	status,0,c
  4161  0014F8  37F9               	rlcf	(??_main+3)& (0+255),f,b
  4162  0014FA  0E03               	movlw	3
  4163  0014FC  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  4164  0014FE  0E02               	movlw	2
  4165  001500  EC1A  F027         	call	_retornaDado
  4166  001504  0100               	movlb	0	; () banked
  4167  001506  6FFA               	movwf	(??_main+4)& (0+255),b
  4168  001508  90D8               	bcf	status,0,c
  4169  00150A  37FA               	rlcf	(??_main+4)& (0+255),f,b
  4170  00150C  90D8               	bcf	status,0,c
  4171  00150E  37FA               	rlcf	(??_main+4)& (0+255),f,b
  4172  001510  90D8               	bcf	status,0,c
  4173  001512  35FA               	rlcf	(??_main+4)& (0+255),w,b
  4174  001514  11F9               	iorwf	(??_main+3)& (0+255),w,b
  4175  001516  11F8               	iorwf	(??_main+2)& (0+255),w,b
  4176  001518  11F6               	iorwf	??_main& (0+255),w,b
  4177  00151A  0102               	movlb	2	; () banked
  4178  00151C  6FAE               	movwf	main@dr& (0+255),b
  4179                           
  4180                           ; BSR set to: 2
  4181                           ;UT.c: 195: DataRate(dr);
  4182                           
  4183                           ; BSR set to: 2
  4184                           
  4185                           ; BSR set to: 2
  4186                           ;UT.c: 194: dr++;
  4187                           
  4188                           ; BSR set to: 2
  4189                           
  4190                           ;UT.c: 193: if (sizeof(dadoPoco)<11 && dr==0)
  4191  00151E  C2AE  F0F1         	movff	main@dr,DataRate@dr
  4192  001522  0100               	movlb	0	; () banked
  4193  001524  6BF2               	clrf	(DataRate@dr+1)& (0+255),b
  4194  001526  ECBC  F028         	call	_DataRate	;wreg free
  4195                           
  4196                           ;UT.c: 196: if (retornaDado(0,5) == 1){
  4197  00152A  0E05               	movlw	5
  4198  00152C  0100               	movlb	0	; () banked
  4199  00152E  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  4200  001530  0E00               	movlw	0
  4201  001532  EC1A  F027         	call	_retornaDado
  4202  001536  06E8               	decf	wreg,f,c
  4203  001538  A4D8               	btfss	status,2,c
  4204  00153A  D052               	goto	l1078
  4205                           
  4206                           ;UT.c: 197: uint8_t sf = retornaDado(2,7)<<3 | retornaDado(2,6)<<2 | retornaDado(2,5)<<1
      +                           | retornaDado(2,4);
  4207  00153C  0E04               	movlw	4
  4208  00153E  0100               	movlb	0	; () banked
  4209  001540  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  4210  001542  0E02               	movlw	2
  4211  001544  EC1A  F027         	call	_retornaDado
  4212  001548  0100               	movlb	0	; () banked
  4213  00154A  6FF6               	movwf	??_main& (0+255),b
  4214  00154C  0E05               	movlw	5
  4215  00154E  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  4216  001550  0E02               	movlw	2
  4217  001552  EC1A  F027         	call	_retornaDado
  4218  001556  0100               	movlb	0	; () banked
  4219  001558  6FF7               	movwf	(??_main+1)& (0+255),b
  4220  00155A  90D8               	bcf	status,0,c
  4221  00155C  35F7               	rlcf	(??_main+1)& (0+255),w,b
  4222  00155E  6FF8               	movwf	(??_main+2)& (0+255),b
  4223  001560  0E06               	movlw	6
  4224  001562  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  4225  001564  0E02               	movlw	2
  4226  001566  EC1A  F027         	call	_retornaDado
  4227  00156A  0100               	movlb	0	; () banked
  4228  00156C  6FF9               	movwf	(??_main+3)& (0+255),b
  4229  00156E  90D8               	bcf	status,0,c
  4230  001570  37F9               	rlcf	(??_main+3)& (0+255),f,b
  4231  001572  90D8               	bcf	status,0,c
  4232  001574  37F9               	rlcf	(??_main+3)& (0+255),f,b
  4233  001576  0E07               	movlw	7
  4234  001578  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  4235  00157A  0E02               	movlw	2
  4236  00157C  EC1A  F027         	call	_retornaDado
  4237  001580  0100               	movlb	0	; () banked
  4238  001582  6FFA               	movwf	(??_main+4)& (0+255),b
  4239  001584  90D8               	bcf	status,0,c
  4240  001586  37FA               	rlcf	(??_main+4)& (0+255),f,b
  4241  001588  90D8               	bcf	status,0,c
  4242  00158A  37FA               	rlcf	(??_main+4)& (0+255),f,b
  4243  00158C  90D8               	bcf	status,0,c
  4244  00158E  35FA               	rlcf	(??_main+4)& (0+255),w,b
  4245  001590  11F9               	iorwf	(??_main+3)& (0+255),w,b
  4246  001592  11F8               	iorwf	(??_main+2)& (0+255),w,b
  4247  001594  11F6               	iorwf	??_main& (0+255),w,b
  4248  001596  0102               	movlb	2	; () banked
  4249  001598  6F9F               	movwf	main@sf& (0+255),b
  4250                           
  4251                           ; BSR set to: 2
  4252                           ;UT.c: 198: SetSpreadingFactor (sf);
  4253  00159A  519F               	movf	main@sf& (0+255),w,b
  4254  00159C  EC64  F029         	call	_SetSpreadingFactor
  4255                           
  4256                           ;UT.c: 199: if (retornaDado(0,6) == 0)
  4257  0015A0  0E06               	movlw	6
  4258  0015A2  0100               	movlb	0	; () banked
  4259  0015A4  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  4260  0015A6  0E00               	movlw	0
  4261  0015A8  EC1A  F027         	call	_retornaDado
  4262  0015AC  0900               	iorlw	0
  4263  0015AE  A4D8               	btfss	status,2,c
  4264  0015B0  D008               	goto	l1076
  4265                           
  4266                           ;UT.c: 200: SetBandWidth (125);
  4267  0015B2  0E00               	movlw	0
  4268  0015B4  0100               	movlb	0	; () banked
  4269  0015B6  6FF2               	movwf	(SetBandWidth@bw+1)& (0+255),b
  4270  0015B8  0E7D               	movlw	125
  4271  0015BA  6FF1               	movwf	SetBandWidth@bw& (0+255),b
  4272  0015BC  EC99  F028         	call	_SetBandWidth	;wreg free
  4273  0015C0  D00F               	goto	l1078
  4274  0015C2                     l1076:
  4275                           
  4276                           ;UT.c: 201: else
  4277                           ;UT.c: 202: SetBandWidth (500);
  4278  0015C2  0E01               	movlw	1
  4279  0015C4  0100               	movlb	0	; () banked
  4280  0015C6  6FF2               	movwf	(SetBandWidth@bw+1)& (0+255),b
  4281  0015C8  0EF4               	movlw	244
  4282  0015CA  6FF1               	movwf	SetBandWidth@bw& (0+255),b
  4283  0015CC  EC99  F028         	call	_SetBandWidth	;wreg free
  4284                           
  4285                           ;UT.c: 203: }}
  4286  0015D0  D007               	goto	l1078
  4287  0015D2                     l1073:
  4288                           
  4289                           ;UT.c: 204: else
  4290                           ;UT.c: 205: SetAdr(STATE_ON);
  4291  0015D2  0ED2               	movlw	low _STATE_ON
  4292  0015D4  0100               	movlb	0	; () banked
  4293  0015D6  6FF1               	movwf	SetAdr@state& (0+255),b
  4294  0015D8  0E7D               	movlw	high _STATE_ON
  4295  0015DA  6FF2               	movwf	(SetAdr@state+1)& (0+255),b
  4296  0015DC  EC84  F029         	call	_SetAdr	;wreg free
  4297  0015E0                     l1078:
  4298                           
  4299                           ;UT.c: 206: MacSave();
  4300  0015E0  ECFB  F029         	call	_MacSave	;wreg free
  4301  0015E4                     l1066:
  4302                           
  4303                           ;UT.c: 207: }
  4304                           ;UT.c: 209: dadoPoco.feedback1=feedback1;
  4305  0015E4  C2F2  F2B2         	movff	_feedback1,main@dadoPoco
  4306                           
  4307                           ;UT.c: 210: dadoPoco.feedback2=feedback2;
  4308  0015E8  C2F1  F2B3         	movff	_feedback2,main@dadoPoco+1
  4309                           
  4310                           ;UT.c: 212: uint8_t resp=TxLoRaWan(1, 3, (const uint8_t*)&dadoPoco, sizeof(dadoPoco));
  4311  0015EC  0E03               	movlw	3
  4312  0015EE  0100               	movlb	0	; () banked
  4313  0015F0  6FF1               	movwf	TxLoRaWan@porta& (0+255),b
  4314  0015F2  0EB2               	movlw	low main@dadoPoco
  4315  0015F4  6FF2               	movwf	TxLoRaWan@data& (0+255),b
  4316  0015F6  0E02               	movlw	high main@dadoPoco
  4317  0015F8  6FF3               	movwf	(TxLoRaWan@data+1)& (0+255),b
  4318  0015FA  0E16               	movlw	22
  4319  0015FC  6FF4               	movwf	TxLoRaWan@tamData& (0+255),b
  4320  0015FE  0E01               	movlw	1
  4321  001600  ECF4  F00D         	call	_TxLoRaWan
  4322  001604  0102               	movlb	2	; () banked
  4323  001606  6FA0               	movwf	main@resp& (0+255),b
  4324                           
  4325                           ; BSR set to: 2
  4326                           ;UT.c: 214: if (resp == 0){
  4327  001608  51A0               	movf	main@resp& (0+255),w,b
  4328  00160A  A4D8               	btfss	status,2,c
  4329  00160C  D017               	goto	l1080
  4330                           
  4331                           ; BSR set to: 2
  4332                           ;UT.c: 215: contador++;
  4333  00160E  2BA1               	incf	main@contador& (0+255),f,b
  4334                           
  4335                           ; BSR set to: 2
  4336                           ;UT.c: 216: if (contador > 2 ){
  4337  001610  0E02               	movlw	2
  4338  001612  65A1               	cpfsgt	main@contador& (0+255),b
  4339  001614  D013               	goto	l1080
  4340                           
  4341                           ; BSR set to: 2
  4342                           ;UT.c: 217: SetAdr(STATE_OFF);
  4343  001616  0ECE               	movlw	low _STATE_OFF
  4344  001618  0100               	movlb	0	; () banked
  4345  00161A  6FF1               	movwf	SetAdr@state& (0+255),b
  4346  00161C  0E7D               	movlw	high _STATE_OFF
  4347  00161E  6FF2               	movwf	(SetAdr@state+1)& (0+255),b
  4348  001620  EC84  F029         	call	_SetAdr	;wreg free
  4349                           
  4350                           ;UT.c: 218: DataRate(1);
  4351  001624  0E00               	movlw	0
  4352  001626  0100               	movlb	0	; () banked
  4353  001628  6FF2               	movwf	(DataRate@dr+1)& (0+255),b
  4354  00162A  0E01               	movlw	1
  4355  00162C  6FF1               	movwf	DataRate@dr& (0+255),b
  4356  00162E  ECBC  F028         	call	_DataRate	;wreg free
  4357                           
  4358                           ;UT.c: 219: MacSave();
  4359  001632  ECFB  F029         	call	_MacSave	;wreg free
  4360                           
  4361                           ;UT.c: 220: contador=0;
  4362  001636  0E00               	movlw	0
  4363  001638  0102               	movlb	2	; () banked
  4364  00163A  6FA1               	movwf	main@contador& (0+255),b
  4365  00163C                     l1080:
  4366                           
  4367                           ; BSR set to: 2
  4368                           ;UT.c: 221: }
  4369                           ;UT.c: 222: }
  4370                           ;UT.c: 228: if (verificaUSB() && (cdc_trf_state == 0))
  4371                           
  4372                           ; BSR set to: 2
  4373                           
  4374                           ; BSR set to: 2
  4375  00163C  EC4B  F02A         	call	_verificaUSB	;wreg free
  4376  001640  0900               	iorlw	0
  4377  001642  B4D8               	btfsc	status,2,c
  4378  001644  D052               	goto	l1081
  4379  001646  0102               	movlb	2	; () banked
  4380  001648  51E7               	movf	_cdc_trf_state& (0+255),w,b
  4381  00164A  A4D8               	btfss	status,2,c
  4382  00164C  D04E               	goto	l1081
  4383                           
  4384                           ; BSR set to: 2
  4385                           ;UT.c: 229: {
  4386                           ;UT.c: 230: char data[150];
  4387                           ;UT.c: 232: sprintf(data,"resposta: %2X %2X %2X %2X %2X %2X %2X %2X %2X %2X  %d  %d  %d 
      +                           %d  %d  %d  %d  %d  %d  %d\n\r",
  4388                           ;UT.c: 233: dadosRecebidos[0].data,
  4389                           ;UT.c: 234: dadosRecebidos[1].data,
  4390                           ;UT.c: 235: dadosRecebidos[2].data,
  4391                           ;UT.c: 236: dadosRecebidos[3].data,
  4392                           ;UT.c: 237: dadosRecebidos[4].data,
  4393                           ;UT.c: 238: dadosRecebidos[5].data,
  4394                           ;UT.c: 239: dadosRecebidos[6].data,
  4395                           ;UT.c: 240: dadosRecebidos[7].data,
  4396                           ;UT.c: 241: dadosRecebidos[8].data,
  4397                           ;UT.c: 242: dadosRecebidos[9].data,
  4398  00164E  0E00               	movlw	low main@data
  4399  001650  0100               	movlb	0	; () banked
  4400  001652  6FBF               	movwf	sprintf@sp& (0+255),b
  4401  001654  0E02               	movlw	high main@data
  4402  001656  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  4403  001658  0EEB               	movlw	low STR_1
  4404  00165A  6FC1               	movwf	sprintf@f& (0+255),b
  4405  00165C  0E7D               	movlw	high STR_1
  4406  00165E  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  4407  001660  C301  F0C3         	movff	_dadosRecebidos+1,?_sprintf+4	;volatile
  4408  001664  6BC4               	clrf	(?_sprintf+5)& (0+255),b
  4409  001666  C303  F0C5         	movff	_dadosRecebidos+3,?_sprintf+6	;volatile
  4410  00166A  6BC6               	clrf	(?_sprintf+7)& (0+255),b
  4411  00166C  C305  F0C7         	movff	_dadosRecebidos+5,?_sprintf+8	;volatile
  4412  001670  6BC8               	clrf	(?_sprintf+9)& (0+255),b
  4413  001672  C307  F0C9         	movff	_dadosRecebidos+7,?_sprintf+10	;volatile
  4414  001676  6BCA               	clrf	(?_sprintf+11)& (0+255),b
  4415  001678  C309  F0CB         	movff	_dadosRecebidos+9,?_sprintf+12	;volatile
  4416  00167C  6BCC               	clrf	(?_sprintf+13)& (0+255),b
  4417  00167E  C30B  F0CD         	movff	_dadosRecebidos+11,?_sprintf+14	;volatile
  4418  001682  6BCE               	clrf	(?_sprintf+15)& (0+255),b
  4419  001684  C30D  F0CF         	movff	_dadosRecebidos+13,?_sprintf+16	;volatile
  4420  001688  6BD0               	clrf	(?_sprintf+17)& (0+255),b
  4421  00168A  C30F  F0D1         	movff	_dadosRecebidos+15,?_sprintf+18	;volatile
  4422  00168E  6BD2               	clrf	(?_sprintf+19)& (0+255),b
  4423  001690  C311  F0D3         	movff	_dadosRecebidos+17,?_sprintf+20	;volatile
  4424  001694  6BD4               	clrf	(?_sprintf+21)& (0+255),b
  4425  001696  C313  F0D5         	movff	_dadosRecebidos+19,?_sprintf+22	;volatile
  4426  00169A  6BD6               	clrf	(?_sprintf+23)& (0+255),b
  4427  00169C  C300  F0D7         	movff	_dadosRecebidos,?_sprintf+24	;volatile
  4428  0016A0  6BD8               	clrf	(?_sprintf+25)& (0+255),b
  4429  0016A2  C302  F0D9         	movff	_dadosRecebidos+2,?_sprintf+26	;volatile
  4430  0016A6  6BDA               	clrf	(?_sprintf+27)& (0+255),b
  4431  0016A8  C304  F0DB         	movff	_dadosRecebidos+4,?_sprintf+28	;volatile
  4432  0016AC  6BDC               	clrf	(?_sprintf+29)& (0+255),b
  4433  0016AE  C306  F0DD         	movff	_dadosRecebidos+6,?_sprintf+30	;volatile
  4434  0016B2  6BDE               	clrf	(?_sprintf+31)& (0+255),b
  4435  0016B4  C308  F0DF         	movff	_dadosRecebidos+8,?_sprintf+32	;volatile
  4436  0016B8  6BE0               	clrf	(?_sprintf+33)& (0+255),b
  4437  0016BA  C30A  F0E1         	movff	_dadosRecebidos+10,?_sprintf+34	;volatile
  4438  0016BE  6BE2               	clrf	(?_sprintf+35)& (0+255),b
  4439  0016C0  C30C  F0E3         	movff	_dadosRecebidos+12,?_sprintf+36	;volatile
  4440  0016C4  6BE4               	clrf	(?_sprintf+37)& (0+255),b
  4441  0016C6  C30E  F0E5         	movff	_dadosRecebidos+14,?_sprintf+38	;volatile
  4442  0016CA  6BE6               	clrf	(?_sprintf+39)& (0+255),b
  4443  0016CC  C310  F0E7         	movff	_dadosRecebidos+16,?_sprintf+40	;volatile
  4444  0016D0  6BE8               	clrf	(?_sprintf+41)& (0+255),b
  4445  0016D2  C2EC  F0E9         	movff	_Sequence,?_sprintf+42
  4446  0016D6  6BEA               	clrf	(?_sprintf+43)& (0+255),b
  4447  0016D8  EC09  F000         	call	_sprintf	;wreg free
  4448                           
  4449                           ;UT.c: 254: putsUSBUSART(data);
  4450  0016DC  0E00               	movlw	low main@data
  4451  0016DE  0100               	movlb	0	; () banked
  4452  0016E0  6F60               	movwf	putsUSBUSART@data& (0+255),b
  4453  0016E2  0E02               	movlw	high main@data
  4454  0016E4  6F61               	movwf	(putsUSBUSART@data+1)& (0+255),b
  4455  0016E6  EC2A  F028         	call	_putsUSBUSART	;wreg free
  4456  0016EA                     l1081:
  4457                           
  4458                           ;UT.c: 255: }
  4459                           ;UT.c: 256: uint32_t deltaTempo=(millis()-tempo);
  4460  0016EA  C296  F0F6         	movff	main@tempo,??_main
  4461  0016EE  C297  F0F7         	movff	main@tempo+1,??_main+1
  4462  0016F2  C298  F0F8         	movff	main@tempo+2,??_main+2
  4463  0016F6  C299  F0F9         	movff	main@tempo+3,??_main+3
  4464  0016FA  0100               	movlb	0	; () banked
  4465  0016FC  1FF6               	comf	??_main& (0+255),f,b
  4466  0016FE  1FF7               	comf	(??_main+1)& (0+255),f,b
  4467  001700  1FF8               	comf	(??_main+2)& (0+255),f,b
  4468  001702  1FF9               	comf	(??_main+3)& (0+255),f,b
  4469  001704  2BF6               	incf	??_main& (0+255),f,b
  4470  001706  0E00               	movlw	0
  4471  001708  23F7               	addwfc	(??_main+1)& (0+255),f,b
  4472  00170A  23F8               	addwfc	(??_main+2)& (0+255),f,b
  4473  00170C  23F9               	addwfc	(??_main+3)& (0+255),f,b
  4474  00170E  ECFA  F02A         	call	_millis	;wreg free
  4475  001712  0100               	movlb	0	; () banked
  4476  001714  51F6               	movf	??_main& (0+255),w,b
  4477  001716  2560               	addwf	?_millis& (0+255),w,b
  4478  001718  0102               	movlb	2	; () banked
  4479  00171A  6FA2               	movwf	main@deltaTempo& (0+255),b
  4480  00171C  0100               	movlb	0	; () banked
  4481  00171E  51F7               	movf	(??_main+1)& (0+255),w,b
  4482  001720  2161               	addwfc	(?_millis+1)& (0+255),w,b
  4483  001722  0102               	movlb	2	; () banked
  4484  001724  6FA3               	movwf	(main@deltaTempo+1)& (0+255),b
  4485  001726  0100               	movlb	0	; () banked
  4486  001728  51F8               	movf	(??_main+2)& (0+255),w,b
  4487  00172A  2162               	addwfc	(?_millis+2)& (0+255),w,b
  4488  00172C  0102               	movlb	2	; () banked
  4489  00172E  6FA4               	movwf	(main@deltaTempo+2)& (0+255),b
  4490  001730  0100               	movlb	0	; () banked
  4491  001732  51F9               	movf	(??_main+3)& (0+255),w,b
  4492  001734  2163               	addwfc	(?_millis+3)& (0+255),w,b
  4493  001736  0102               	movlb	2	; () banked
  4494  001738  6FA5               	movwf	(main@deltaTempo+3)& (0+255),b
  4495                           
  4496                           ; BSR set to: 2
  4497                           ;UT.c: 257: if (deltaTempo<30000)
  4498  00173A  51A5               	movf	(main@deltaTempo+3)& (0+255),w,b
  4499  00173C  11A4               	iorwf	(main@deltaTempo+2)& (0+255),w,b
  4500  00173E  E105               	bnz	u11161
  4501  001740  0E30               	movlw	48
  4502  001742  5DA2               	subwf	main@deltaTempo& (0+255),w,b
  4503  001744  0E75               	movlw	117
  4504  001746  59A3               	subwfb	(main@deltaTempo+1)& (0+255),w,b
  4505  001748  B0D8               	btfsc	status,0,c
  4506  00174A                     u11161:
  4507  00174A  EF87  F007         	goto	l1065
  4508                           
  4509                           ; BSR set to: 2
  4510                           ;UT.c: 258: {
  4511                           ;UT.c: 259: uint32_t tempoTimeOut=30000-deltaTempo;
  4512  00174E  C2A2  F0F6         	movff	main@deltaTempo,??_main
  4513  001752  C2A3  F0F7         	movff	main@deltaTempo+1,??_main+1
  4514  001756  C2A4  F0F8         	movff	main@deltaTempo+2,??_main+2
  4515  00175A  C2A5  F0F9         	movff	main@deltaTempo+3,??_main+3
  4516  00175E  0100               	movlb	0	; () banked
  4517  001760  1FF6               	comf	??_main& (0+255),f,b
  4518  001762  1FF7               	comf	(??_main+1)& (0+255),f,b
  4519  001764  1FF8               	comf	(??_main+2)& (0+255),f,b
  4520  001766  1FF9               	comf	(??_main+3)& (0+255),f,b
  4521  001768  2BF6               	incf	??_main& (0+255),f,b
  4522  00176A  0E00               	movlw	0
  4523  00176C  23F7               	addwfc	(??_main+1)& (0+255),f,b
  4524  00176E  23F8               	addwfc	(??_main+2)& (0+255),f,b
  4525  001770  23F9               	addwfc	(??_main+3)& (0+255),f,b
  4526  001772  0E30               	movlw	48
  4527  001774  25F6               	addwf	??_main& (0+255),w,b
  4528  001776  0102               	movlb	2	; () banked
  4529  001778  6F9A               	movwf	main@tempoTimeOut& (0+255),b
  4530  00177A  0E75               	movlw	117
  4531  00177C  0100               	movlb	0	; () banked
  4532  00177E  21F7               	addwfc	(??_main+1)& (0+255),w,b
  4533  001780  0102               	movlb	2	; () banked
  4534  001782  6F9B               	movwf	(main@tempoTimeOut+1)& (0+255),b
  4535  001784  0E00               	movlw	0
  4536  001786  0100               	movlb	0	; () banked
  4537  001788  21F8               	addwfc	(??_main+2)& (0+255),w,b
  4538  00178A  0102               	movlb	2	; () banked
  4539  00178C  6F9C               	movwf	(main@tempoTimeOut+2)& (0+255),b
  4540  00178E  0E00               	movlw	0
  4541  001790  0100               	movlb	0	; () banked
  4542  001792  21F9               	addwfc	(??_main+3)& (0+255),w,b
  4543  001794  0102               	movlb	2	; () banked
  4544  001796  6F9D               	movwf	(main@tempoTimeOut+3)& (0+255),b
  4545                           
  4546                           ; BSR set to: 2
  4547                           ;UT.c: 260: delay(tempoTimeOut);
  4548  001798  C29A  F06D         	movff	main@tempoTimeOut,delay@time
  4549  00179C  C29B  F06E         	movff	main@tempoTimeOut+1,delay@time+1
  4550  0017A0  C29C  F06F         	movff	main@tempoTimeOut+2,delay@time+2
  4551  0017A4  C29D  F070         	movff	main@tempoTimeOut+3,delay@time+3
  4552  0017A8  EC0C  F026         	call	_delay	;wreg free
  4553  0017AC  EF87  F007         	goto	l1065
  4554  0017B0                     __end_of_main:
  4555                           	opt stack 0
  4556                           tblptru	equ	0xFF8
  4557                           tblptrh	equ	0xFF7
  4558                           tblptrl	equ	0xFF6
  4559                           tablat	equ	0xFF5
  4560                           postinc0	equ	0xFEE
  4561                           wreg	equ	0xFE8
  4562                           postdec1	equ	0xFE5
  4563                           fsr1l	equ	0xFE1
  4564                           status	equ	0xFD8
  4565                           
  4566 ;; *************** function _setup_uart *****************
  4567 ;; Defined at:
  4568 ;;		line 13 in file "uart/uart.c"
  4569 ;; Parameters:    Size  Location     Type
  4570 ;;  baudRate        4   13[BANK0 ] unsigned long 
  4571 ;; Auto vars:     Size  Location     Type
  4572 ;;  brg             4   17[BANK0 ] unsigned long 
  4573 ;; Return value:  Size  Location     Type
  4574 ;;                  1    wreg      void 
  4575 ;; Registers used:
  4576 ;;		wreg, status,2, status,0, cstack
  4577 ;; Tracked objects:
  4578 ;;		On entry : 0/0
  4579 ;;		On exit  : 0/0
  4580 ;;		Unchanged: 0/0
  4581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4582 ;;      Params:         0       4       0       0       0       0       0       0       0
  4583 ;;      Locals:         0       4       0       0       0       0       0       0       0
  4584 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4585 ;;      Totals:         0       8       0       0       0       0       0       0       0
  4586 ;;Total ram usage:        8 bytes
  4587 ;; Hardware stack levels used:    1
  4588 ;; Hardware stack levels required when called:   11
  4589 ;; This function calls:
  4590 ;;		___lldiv
  4591 ;; This function is called by:
  4592 ;;		_main
  4593 ;; This function uses a non-reentrant model
  4594 ;;
  4595                           
  4596                           	psect	text1
  4597  004466                     __ptext1:
  4598                           	opt stack 0
  4599  004466                     _setup_uart:
  4600                           	opt stack 19
  4601                           
  4602                           ;uart.c: 15: uint32_t brg;
  4603                           ;uart.c: 17: PORTCbits.RC6=1;
  4604                           
  4605                           ;incstack = 0
  4606  004466  8C82               	bsf	3970,6,c	;volatile
  4607                           
  4608                           ;uart.c: 18: TRISCbits.RC6=0;
  4609  004468  9C94               	bcf	3988,6,c	;volatile
  4610                           
  4611                           ;uart.c: 20: PORTCbits.RC7=1;
  4612  00446A  8E82               	bsf	3970,7,c	;volatile
  4613                           
  4614                           ;uart.c: 21: TRISCbits.RC7=1;
  4615  00446C  8E94               	bsf	3988,7,c	;volatile
  4616                           
  4617                           ;uart.c: 23: TXSTAbits.BRGH=1;
  4618  00446E  84AC               	bsf	4012,2,c	;volatile
  4619                           
  4620                           ;uart.c: 24: BAUDCONbits.BRG16=1;
  4621  004470  86B8               	bsf	4024,3,c	;volatile
  4622                           
  4623                           ;uart.c: 25: brg = ((48000000*10/4)/(baudRate)-5);
  4624  004472  0E00               	movlw	0
  4625  004474  0100               	movlb	0	; () banked
  4626  004476  6F60               	movwf	___lldiv@dividend& (0+255),b
  4627  004478  0E0E               	movlw	14
  4628  00447A  6F61               	movwf	(___lldiv@dividend+1)& (0+255),b
  4629  00447C  0E27               	movlw	39
  4630  00447E  6F62               	movwf	(___lldiv@dividend+2)& (0+255),b
  4631  004480  0E07               	movlw	7
  4632  004482  6F63               	movwf	(___lldiv@dividend+3)& (0+255),b
  4633  004484  C06D  F064         	movff	setup_uart@baudRate,___lldiv@divisor
  4634  004488  C06E  F065         	movff	setup_uart@baudRate+1,___lldiv@divisor+1
  4635  00448C  C06F  F066         	movff	setup_uart@baudRate+2,___lldiv@divisor+2
  4636  004490  C070  F067         	movff	setup_uart@baudRate+3,___lldiv@divisor+3
  4637  004494  EC13  F025         	call	___lldiv	;wreg free
  4638  004498  0EFB               	movlw	251
  4639  00449A  0100               	movlb	0	; () banked
  4640  00449C  2560               	addwf	?___lldiv& (0+255),w,b
  4641  00449E  6F71               	movwf	setup_uart@brg& (0+255),b
  4642  0044A0  0EFF               	movlw	255
  4643  0044A2  2161               	addwfc	(?___lldiv+1)& (0+255),w,b
  4644  0044A4  6F72               	movwf	(setup_uart@brg+1)& (0+255),b
  4645  0044A6  0EFF               	movlw	255
  4646  0044A8  2162               	addwfc	(?___lldiv+2)& (0+255),w,b
  4647  0044AA  6F73               	movwf	(setup_uart@brg+2)& (0+255),b
  4648  0044AC  0EFF               	movlw	255
  4649  0044AE  2163               	addwfc	(?___lldiv+3)& (0+255),w,b
  4650  0044B0  6F74               	movwf	(setup_uart@brg+3)& (0+255),b
  4651                           
  4652                           ;uart.c: 26: brg /= 10;
  4653  0044B2  C071  F060         	movff	setup_uart@brg,___lldiv@dividend
  4654  0044B6  C072  F061         	movff	setup_uart@brg+1,___lldiv@dividend+1
  4655  0044BA  C073  F062         	movff	setup_uart@brg+2,___lldiv@dividend+2
  4656  0044BE  C074  F063         	movff	setup_uart@brg+3,___lldiv@dividend+3
  4657  0044C2  0E0A               	movlw	10
  4658  0044C4  6F64               	movwf	___lldiv@divisor& (0+255),b
  4659  0044C6  0E00               	movlw	0
  4660  0044C8  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  4661  0044CA  0E00               	movlw	0
  4662  0044CC  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  4663  0044CE  0E00               	movlw	0
  4664  0044D0  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  4665  0044D2  EC13  F025         	call	___lldiv	;wreg free
  4666  0044D6  C060  F071         	movff	?___lldiv,setup_uart@brg
  4667  0044DA  C061  F072         	movff	?___lldiv+1,setup_uart@brg+1
  4668  0044DE  C062  F073         	movff	?___lldiv+2,setup_uart@brg+2
  4669  0044E2  C063  F074         	movff	?___lldiv+3,setup_uart@brg+3
  4670                           
  4671                           ;uart.c: 27: SPBRG=(uint8_t)brg;
  4672  0044E6  C071  FFAF         	movff	setup_uart@brg,4015	;volatile
  4673                           
  4674                           ;uart.c: 28: SPBRGH=(uint8_t)(brg >> 8);
  4675  0044EA  C072  FFB0         	movff	setup_uart@brg+1,4016	;volatile
  4676                           
  4677                           ;uart.c: 30: TXSTAbits.SYNC=0;
  4678  0044EE  98AC               	bcf	4012,4,c	;volatile
  4679                           
  4680                           ;uart.c: 31: TXSTAbits.SENDB=0;
  4681  0044F0  96AC               	bcf	4012,3,c	;volatile
  4682                           
  4683                           ;uart.c: 32: RCSTAbits.SPEN=1;
  4684  0044F2  8EAB               	bsf	4011,7,c	;volatile
  4685                           
  4686                           ;uart.c: 34: BAUDCONbits.TXCKP=0;
  4687  0044F4  98B8               	bcf	4024,4,c	;volatile
  4688                           
  4689                           ;uart.c: 35: BAUDCONbits.RXDTP=0;
  4690  0044F6  9AB8               	bcf	4024,5,c	;volatile
  4691                           
  4692                           ;uart.c: 36: BAUDCONbits.ABDEN=0;
  4693  0044F8  90B8               	bcf	4024,0,c	;volatile
  4694                           
  4695                           ;uart.c: 37: TXSTAbits.TX9=0;
  4696  0044FA  9CAC               	bcf	4012,6,c	;volatile
  4697                           
  4698                           ;uart.c: 38: RCSTAbits.RX9=0;
  4699  0044FC  9CAB               	bcf	4011,6,c	;volatile
  4700                           
  4701                           ;uart.c: 40: RCSTAbits.CREN=1;
  4702  0044FE  88AB               	bsf	4011,4,c	;volatile
  4703                           
  4704                           ;uart.c: 41: TXSTAbits.TXEN=1;
  4705  004500  8AAC               	bsf	4012,5,c	;volatile
  4706                           
  4707                           ;uart.c: 43: RCIE=1;
  4708  004502  8A9D               	bsf	3997,5,c	;volatile
  4709  004504  0012               	return		;funcret
  4710  004506                     __end_of_setup_uart:
  4711                           	opt stack 0
  4712                           tblptru	equ	0xFF8
  4713                           tblptrh	equ	0xFF7
  4714                           tblptrl	equ	0xFF6
  4715                           tablat	equ	0xFF5
  4716                           postinc0	equ	0xFEE
  4717                           wreg	equ	0xFE8
  4718                           postdec1	equ	0xFE5
  4719                           fsr1l	equ	0xFE1
  4720                           status	equ	0xFD8
  4721                           
  4722 ;; *************** function _setup_pulsos *****************
  4723 ;; Defined at:
  4724 ;;		line 10 in file "Pulses.c"
  4725 ;; Parameters:    Size  Location     Type
  4726 ;;		None
  4727 ;; Auto vars:     Size  Location     Type
  4728 ;;		None
  4729 ;; Return value:  Size  Location     Type
  4730 ;;                  1    wreg      void 
  4731 ;; Registers used:
  4732 ;;		wreg, status,2
  4733 ;; Tracked objects:
  4734 ;;		On entry : 0/0
  4735 ;;		On exit  : 0/0
  4736 ;;		Unchanged: 0/0
  4737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4738 ;;      Params:         0       0       0       0       0       0       0       0       0
  4739 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4740 ;;      Temps:          0       1       0       0       0       0       0       0       0
  4741 ;;      Totals:         0       1       0       0       0       0       0       0       0
  4742 ;;Total ram usage:        1 bytes
  4743 ;; Hardware stack levels used:    1
  4744 ;; Hardware stack levels required when called:   10
  4745 ;; This function calls:
  4746 ;;		Nothing
  4747 ;; This function is called by:
  4748 ;;		_main
  4749 ;; This function uses a non-reentrant model
  4750 ;;
  4751                           
  4752                           	psect	text2
  4753  00426A                     __ptext2:
  4754                           	opt stack 0
  4755  00426A                     _setup_pulsos:
  4756                           	opt stack 20
  4757                           
  4758                           ;Pulses.c: 12: TRISDbits.RD0=1;
  4759                           
  4760                           ;incstack = 0
  4761  00426A  8095               	bsf	3989,0,c	;volatile
  4762                           
  4763                           ;Pulses.c: 13: dig_1=PORTDbits.RD0;
  4764  00426C  A083               	btfss	3971,0,c	;volatile
  4765  00426E  D004               	goto	u9570
  4766  004270  0100               	movlb	0	; () banked
  4767  004272  6B60               	clrf	??_setup_pulsos& (0+255),b
  4768  004274  2B60               	incf	??_setup_pulsos& (0+255),f,b
  4769  004276  D002               	goto	u9578
  4770  004278                     u9570:
  4771  004278  0100               	movlb	0	; () banked
  4772  00427A  6B60               	clrf	??_setup_pulsos& (0+255),b
  4773  00427C                     u9578:
  4774  00427C  5160               	movf	??_setup_pulsos& (0+255),w,b
  4775  00427E  0102               	movlb	2	; () banked
  4776  004280  6FE0               	movwf	_dig_1& (0+255),b	;volatile
  4777  004282  6BE1               	clrf	(_dig_1+1)& (0+255),b	;volatile
  4778                           
  4779                           ; BSR set to: 2
  4780                           ;Pulses.c: 14: TRISDbits.RD1=1;
  4781  004284  8295               	bsf	3989,1,c	;volatile
  4782                           
  4783                           ;Pulses.c: 15: dig_2=PORTDbits.RD1;
  4784  004286  A283               	btfss	3971,1,c	;volatile
  4785  004288  D004               	goto	u9580
  4786  00428A  0100               	movlb	0	; () banked
  4787  00428C  6B60               	clrf	??_setup_pulsos& (0+255),b
  4788  00428E  2B60               	incf	??_setup_pulsos& (0+255),f,b
  4789  004290  D002               	goto	u9588
  4790  004292                     u9580:
  4791  004292  0100               	movlb	0	; () banked
  4792  004294  6B60               	clrf	??_setup_pulsos& (0+255),b
  4793  004296                     u9588:
  4794  004296  5160               	movf	??_setup_pulsos& (0+255),w,b
  4795  004298  0102               	movlb	2	; () banked
  4796  00429A  6FDE               	movwf	_dig_2& (0+255),b	;volatile
  4797  00429C  6BDF               	clrf	(_dig_2+1)& (0+255),b	;volatile
  4798                           
  4799                           ; BSR set to: 2
  4800                           ;Pulses.c: 16: TRISDbits.RD2=1;
  4801  00429E  8495               	bsf	3989,2,c	;volatile
  4802                           
  4803                           ;Pulses.c: 17: dig_3=PORTDbits.RD2;
  4804  0042A0  A483               	btfss	3971,2,c	;volatile
  4805  0042A2  D004               	goto	u9590
  4806  0042A4  0100               	movlb	0	; () banked
  4807  0042A6  6B60               	clrf	??_setup_pulsos& (0+255),b
  4808  0042A8  2B60               	incf	??_setup_pulsos& (0+255),f,b
  4809  0042AA  D002               	goto	u9598
  4810  0042AC                     u9590:
  4811  0042AC  0100               	movlb	0	; () banked
  4812  0042AE  6B60               	clrf	??_setup_pulsos& (0+255),b
  4813  0042B0                     u9598:
  4814  0042B0  5160               	movf	??_setup_pulsos& (0+255),w,b
  4815  0042B2  0102               	movlb	2	; () banked
  4816  0042B4  6FDC               	movwf	_dig_3& (0+255),b	;volatile
  4817  0042B6  6BDD               	clrf	(_dig_3+1)& (0+255),b	;volatile
  4818                           
  4819                           ; BSR set to: 2
  4820                           ;Pulses.c: 18: TRISDbits.RD3=1;
  4821  0042B8  8695               	bsf	3989,3,c	;volatile
  4822                           
  4823                           ;Pulses.c: 19: dig_4=PORTDbits.RD3;
  4824  0042BA  A683               	btfss	3971,3,c	;volatile
  4825  0042BC  D004               	goto	u9600
  4826  0042BE  0100               	movlb	0	; () banked
  4827  0042C0  6B60               	clrf	??_setup_pulsos& (0+255),b
  4828  0042C2  2B60               	incf	??_setup_pulsos& (0+255),f,b
  4829  0042C4  D002               	goto	u9608
  4830  0042C6                     u9600:
  4831  0042C6  0100               	movlb	0	; () banked
  4832  0042C8  6B60               	clrf	??_setup_pulsos& (0+255),b
  4833  0042CA                     u9608:
  4834  0042CA  5160               	movf	??_setup_pulsos& (0+255),w,b
  4835  0042CC  0102               	movlb	2	; () banked
  4836  0042CE  6FDA               	movwf	_dig_4& (0+255),b	;volatile
  4837  0042D0  6BDB               	clrf	(_dig_4+1)& (0+255),b	;volatile
  4838                           
  4839                           ;Pulses.c: 20: freqPulses1=0;
  4840  0042D2  0E00               	movlw	0
  4841  0042D4  0103               	movlb	3	; () banked
  4842  0042D6  6F3A               	movwf	_freqPulses1& (0+255),b	;volatile
  4843  0042D8  0E00               	movlw	0
  4844  0042DA  6F3B               	movwf	(_freqPulses1+1)& (0+255),b	;volatile
  4845  0042DC  0E00               	movlw	0
  4846  0042DE  6F3C               	movwf	(_freqPulses1+2)& (0+255),b	;volatile
  4847  0042E0  0E00               	movlw	0
  4848  0042E2  6F3D               	movwf	(_freqPulses1+3)& (0+255),b	;volatile
  4849                           
  4850                           ;Pulses.c: 21: freqPulses2=0;
  4851  0042E4  0E00               	movlw	0
  4852  0042E6  6F36               	movwf	_freqPulses2& (0+255),b	;volatile
  4853  0042E8  0E00               	movlw	0
  4854  0042EA  6F37               	movwf	(_freqPulses2+1)& (0+255),b	;volatile
  4855  0042EC  0E00               	movlw	0
  4856  0042EE  6F38               	movwf	(_freqPulses2+2)& (0+255),b	;volatile
  4857  0042F0  0E00               	movlw	0
  4858  0042F2  6F39               	movwf	(_freqPulses2+3)& (0+255),b	;volatile
  4859                           
  4860                           ;Pulses.c: 22: freqPulses3=0;
  4861  0042F4  0E00               	movlw	0
  4862  0042F6  6F32               	movwf	_freqPulses3& (0+255),b	;volatile
  4863  0042F8  0E00               	movlw	0
  4864  0042FA  6F33               	movwf	(_freqPulses3+1)& (0+255),b	;volatile
  4865  0042FC  0E00               	movlw	0
  4866  0042FE  6F34               	movwf	(_freqPulses3+2)& (0+255),b	;volatile
  4867  004300  0E00               	movlw	0
  4868  004302  6F35               	movwf	(_freqPulses3+3)& (0+255),b	;volatile
  4869                           
  4870                           ;Pulses.c: 23: freqPulses4=0;
  4871  004304  0E00               	movlw	0
  4872  004306  6F2E               	movwf	_freqPulses4& (0+255),b	;volatile
  4873  004308  0E00               	movlw	0
  4874  00430A  6F2F               	movwf	(_freqPulses4+1)& (0+255),b	;volatile
  4875  00430C  0E00               	movlw	0
  4876  00430E  6F30               	movwf	(_freqPulses4+2)& (0+255),b	;volatile
  4877  004310  0E00               	movlw	0
  4878  004312  6F31               	movwf	(_freqPulses4+3)& (0+255),b	;volatile
  4879                           
  4880                           ; BSR set to: 3
  4881  004314  0012               	return		;funcret
  4882  004316                     __end_of_setup_pulsos:
  4883                           	opt stack 0
  4884                           tblptru	equ	0xFF8
  4885                           tblptrh	equ	0xFF7
  4886                           tblptrl	equ	0xFF6
  4887                           tablat	equ	0xFF5
  4888                           postinc0	equ	0xFEE
  4889                           wreg	equ	0xFE8
  4890                           postdec1	equ	0xFE5
  4891                           fsr1l	equ	0xFE1
  4892                           status	equ	0xFD8
  4893                           
  4894 ;; *************** function _setup_ccp1 *****************
  4895 ;; Defined at:
  4896 ;;		line 27 in file "Timer.c"
  4897 ;; Parameters:    Size  Location     Type
  4898 ;;		None
  4899 ;; Auto vars:     Size  Location     Type
  4900 ;;		None
  4901 ;; Return value:  Size  Location     Type
  4902 ;;                  1    wreg      void 
  4903 ;; Registers used:
  4904 ;;		wreg, status,2
  4905 ;; Tracked objects:
  4906 ;;		On entry : 0/0
  4907 ;;		On exit  : 0/0
  4908 ;;		Unchanged: 0/0
  4909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4910 ;;      Params:         0       0       0       0       0       0       0       0       0
  4911 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4912 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4913 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4914 ;;Total ram usage:        0 bytes
  4915 ;; Hardware stack levels used:    1
  4916 ;; Hardware stack levels required when called:   10
  4917 ;; This function calls:
  4918 ;;		Nothing
  4919 ;; This function is called by:
  4920 ;;		_main
  4921 ;; This function uses a non-reentrant model
  4922 ;;
  4923                           
  4924                           	psect	text3
  4925  005202                     __ptext3:
  4926                           	opt stack 0
  4927  005202                     _setup_ccp1:
  4928                           	opt stack 20
  4929                           
  4930                           ;Timer.c: 29: aaa = 1;
  4931                           
  4932                           ; BSR set to: 3
  4933                           ;incstack = 0
  4934  005202  0E01               	movlw	1
  4935  005204  0102               	movlb	2	; () banked
  4936  005206  6FF3               	movwf	_aaa& (0+255),b
  4937                           
  4938                           ; BSR set to: 2
  4939                           ;Timer.c: 30: GIEH = 0;
  4940  005208  9EF2               	bcf	intcon,7,c	;volatile
  4941                           
  4942                           ;Timer.c: 31: T3CON=0b10111000;
  4943  00520A  0EB8               	movlw	184
  4944  00520C  6EB1               	movwf	4017,c	;volatile
  4945                           
  4946                           ;Timer.c: 32: TMR1H=0x00;
  4947  00520E  0E00               	movlw	0
  4948  005210  6ECF               	movwf	4047,c	;volatile
  4949                           
  4950                           ;Timer.c: 33: TMR1L=0x00;
  4951  005212  0E00               	movlw	0
  4952  005214  6ECE               	movwf	4046,c	;volatile
  4953                           
  4954                           ;Timer.c: 34: CCPR1H=0x05;
  4955  005216  0E05               	movlw	5
  4956  005218  6EBF               	movwf	4031,c	;volatile
  4957                           
  4958                           ;Timer.c: 35: CCPR1L=0xDC;
  4959  00521A  0EDC               	movlw	220
  4960  00521C  6EBE               	movwf	4030,c	;volatile
  4961                           
  4962                           ;Timer.c: 36: ticks=0;
  4963  00521E  0E00               	movlw	0
  4964  005220  0103               	movlb	3	; () banked
  4965  005222  6F2A               	movwf	_ticks& (0+255),b	;volatile
  4966  005224  0E00               	movlw	0
  4967  005226  6F2B               	movwf	(_ticks+1)& (0+255),b	;volatile
  4968  005228  0E00               	movlw	0
  4969  00522A  6F2C               	movwf	(_ticks+2)& (0+255),b	;volatile
  4970  00522C  0E00               	movlw	0
  4971  00522E  6F2D               	movwf	(_ticks+3)& (0+255),b	;volatile
  4972                           
  4973                           ; BSR set to: 3
  4974                           ;Timer.c: 38: CCP1IF=0;
  4975  005230  949E               	bcf	3998,2,c	;volatile
  4976                           
  4977                           ;Timer.c: 39: T1CON=0b11110001;
  4978  005232  0EF1               	movlw	241
  4979  005234  6ECD               	movwf	4045,c	;volatile
  4980                           
  4981                           ;Timer.c: 40: CCP1CON = 0b00001011;
  4982  005236  0E0B               	movlw	11
  4983  005238  6EBD               	movwf	4029,c	;volatile
  4984                           
  4985                           ; BSR set to: 3
  4986                           ;Timer.c: 41: CCP1IE=1;
  4987  00523A  849D               	bsf	3997,2,c	;volatile
  4988                           
  4989                           ; BSR set to: 3
  4990                           ;Timer.c: 42: IPR1bits.CCP1IP=1;
  4991  00523C  849F               	bsf	3999,2,c	;volatile
  4992                           
  4993                           ; BSR set to: 3
  4994                           ;Timer.c: 43: RCONbits.IPEN = 1;
  4995  00523E  8ED0               	bsf	4048,7,c	;volatile
  4996                           
  4997                           ; BSR set to: 3
  4998                           ;Timer.c: 44: GIEH = 1;
  4999  005240  8EF2               	bsf	intcon,7,c	;volatile
  5000                           
  5001                           ; BSR set to: 3
  5002  005242  0012               	return		;funcret
  5003  005244                     __end_of_setup_ccp1:
  5004                           	opt stack 0
  5005                           tblptru	equ	0xFF8
  5006                           tblptrh	equ	0xFF7
  5007                           tblptrl	equ	0xFF6
  5008                           tablat	equ	0xFF5
  5009                           intcon	equ	0xFF2
  5010                           postinc0	equ	0xFEE
  5011                           wreg	equ	0xFE8
  5012                           postdec1	equ	0xFE5
  5013                           fsr1l	equ	0xFE1
  5014                           status	equ	0xFD8
  5015                           
  5016 ;; *************** function _setup_AD *****************
  5017 ;; Defined at:
  5018 ;;		line 10 in file "AD.c"
  5019 ;; Parameters:    Size  Location     Type
  5020 ;;		None
  5021 ;; Auto vars:     Size  Location     Type
  5022 ;;		None
  5023 ;; Return value:  Size  Location     Type
  5024 ;;                  1    wreg      void 
  5025 ;; Registers used:
  5026 ;;		wreg, status,2
  5027 ;; Tracked objects:
  5028 ;;		On entry : 0/0
  5029 ;;		On exit  : 0/0
  5030 ;;		Unchanged: 0/0
  5031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5032 ;;      Params:         0       0       0       0       0       0       0       0       0
  5033 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5034 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5035 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5036 ;;Total ram usage:        0 bytes
  5037 ;; Hardware stack levels used:    1
  5038 ;; Hardware stack levels required when called:   10
  5039 ;; This function calls:
  5040 ;;		Nothing
  5041 ;; This function is called by:
  5042 ;;		_main
  5043 ;; This function uses a non-reentrant model
  5044 ;;
  5045                           
  5046                           	psect	text4
  5047  0056D2                     __ptext4:
  5048                           	opt stack 0
  5049  0056D2                     _setup_AD:
  5050                           	opt stack 20
  5051                           
  5052                           ;AD.c: 12: ADON=0;
  5053                           
  5054                           ; BSR set to: 3
  5055                           ;incstack = 0
  5056  0056D2  90C2               	bcf	4034,0,c	;volatile
  5057                           
  5058                           ;AD.c: 13: ADCON1=0b00001101;
  5059  0056D4  0E0D               	movlw	13
  5060  0056D6  6EC1               	movwf	4033,c	;volatile
  5061                           
  5062                           ;AD.c: 14: ADCON2=0b10111110;
  5063  0056D8  0EBE               	movlw	190
  5064  0056DA  6EC0               	movwf	4032,c	;volatile
  5065                           
  5066                           ;AD.c: 16: ADIF=0;
  5067  0056DC  9C9E               	bcf	3998,6,c	;volatile
  5068                           
  5069                           ;AD.c: 17: ADIE=0;
  5070  0056DE  9C9D               	bcf	3997,6,c	;volatile
  5071  0056E0  0012               	return		;funcret
  5072  0056E2                     __end_of_setup_AD:
  5073                           	opt stack 0
  5074                           tblptru	equ	0xFF8
  5075                           tblptrh	equ	0xFF7
  5076                           tblptrl	equ	0xFF6
  5077                           tablat	equ	0xFF5
  5078                           intcon	equ	0xFF2
  5079                           postinc0	equ	0xFEE
  5080                           wreg	equ	0xFE8
  5081                           postdec1	equ	0xFE5
  5082                           fsr1l	equ	0xFE1
  5083                           status	equ	0xFD8
  5084                           
  5085 ;; *************** function _putsUSBUSART *****************
  5086 ;; Defined at:
  5087 ;;		line 629 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device_cdc.c"
  5088 ;; Parameters:    Size  Location     Type
  5089 ;;  data            2    0[BANK0 ] PTR unsigned char 
  5090 ;;		 -> main@data(150), 
  5091 ;; Auto vars:     Size  Location     Type
  5092 ;;  pData           2    2[BANK0 ] PTR unsigned char 
  5093 ;;		 -> main@data(150), 
  5094 ;;  len             1    4[BANK0 ] unsigned char 
  5095 ;; Return value:  Size  Location     Type
  5096 ;;                  1    wreg      void 
  5097 ;; Registers used:
  5098 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5099 ;; Tracked objects:
  5100 ;;		On entry : 0/0
  5101 ;;		On exit  : 0/0
  5102 ;;		Unchanged: 0/0
  5103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5104 ;;      Params:         0       2       0       0       0       0       0       0       0
  5105 ;;      Locals:         0       3       0       0       0       0       0       0       0
  5106 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5107 ;;      Totals:         0       5       0       0       0       0       0       0       0
  5108 ;;Total ram usage:        5 bytes
  5109 ;; Hardware stack levels used:    1
  5110 ;; Hardware stack levels required when called:   10
  5111 ;; This function calls:
  5112 ;;		Nothing
  5113 ;; This function is called by:
  5114 ;;		_main
  5115 ;; This function uses a non-reentrant model
  5116 ;;
  5117                           
  5118                           	psect	text5
  5119  005054                     __ptext5:
  5120                           	opt stack 0
  5121  005054                     _putsUSBUSART:
  5122                           	opt stack 20
  5123                           
  5124                           ;usb_device_cdc.c: 631: uint8_t len;
  5125                           ;usb_device_cdc.c: 632: char *pData;
  5126                           ;usb_device_cdc.c: 657: {PIE2bits.USBIE = 0;};
  5127                           
  5128                           ;incstack = 0
  5129  005054  9AA0               	bcf	4000,5,c	;volatile
  5130                           
  5131                           ;usb_device_cdc.c: 658: if(cdc_trf_state != 0)
  5132  005056  0102               	movlb	2	; () banked
  5133  005058  51E7               	movf	_cdc_trf_state& (0+255),w,b
  5134  00505A  B4D8               	btfsc	status,2,c
  5135  00505C  D002               	goto	l838
  5136                           
  5137                           ; BSR set to: 2
  5138                           ;usb_device_cdc.c: 659: {
  5139                           ;usb_device_cdc.c: 660: {PIE2bits.USBIE = 1;};
  5140  00505E  8AA0               	bsf	4000,5,c	;volatile
  5141                           
  5142                           ;usb_device_cdc.c: 661: return;
  5143  005060  0012               	return	
  5144  005062                     l838:
  5145                           
  5146                           ; BSR set to: 2
  5147                           ;usb_device_cdc.c: 662: }
  5148                           ;usb_device_cdc.c: 668: len = 0;
  5149                           
  5150                           ; BSR set to: 2
  5151  005062  0E00               	movlw	0
  5152  005064  0100               	movlb	0	; () banked
  5153  005066  6F64               	movwf	putsUSBUSART@len& (0+255),b
  5154                           
  5155                           ; BSR set to: 0
  5156                           ;usb_device_cdc.c: 669: pData = data;
  5157  005068  C060  F062         	movff	putsUSBUSART@data,putsUSBUSART@pData
  5158  00506C  C061  F063         	movff	putsUSBUSART@data+1,putsUSBUSART@pData+1
  5159  005070                     
  5160                           ; BSR set to: 0
  5161                           ;usb_device_cdc.c: 671: {
  5162                           ;usb_device_cdc.c: 672: len++;
  5163                           
  5164                           ; BSR set to: 0
  5165  005070  2B64               	incf	putsUSBUSART@len& (0+255),f,b
  5166                           
  5167                           ; BSR set to: 0
  5168                           ;usb_device_cdc.c: 673: if(len == 255) break;
  5169  005072  2964               	incf	putsUSBUSART@len& (0+255),w,b
  5170  005074  B4D8               	btfsc	status,2,c
  5171  005076  D009               	goto	u9550
  5172                           
  5173                           ; BSR set to: 0
  5174                           ;usb_device_cdc.c: 674: }while(*pData++);
  5175                           
  5176                           ; BSR set to: 0
  5177                           
  5178                           ; BSR set to: 0
  5179  005078  C062  FFD9         	movff	putsUSBUSART@pData,fsr2l
  5180  00507C  C063  FFDA         	movff	putsUSBUSART@pData+1,fsr2h
  5181  005080  4B62               	infsnz	putsUSBUSART@pData& (0+255),f,b
  5182  005082  2B63               	incf	(putsUSBUSART@pData+1)& (0+255),f,b
  5183  005084  50DF               	movf	indf2,w,c
  5184  005086  A4D8               	btfss	status,2,c
  5185  005088  D7F3               	goto	l840
  5186  00508A                     u9550:
  5187                           
  5188                           ; BSR set to: 0
  5189                           ;usb_device_cdc.c: 682: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = len; cdc_mem_type 
      +                          = 0x01; cdc_trf_state = 1; };
  5190                           
  5191                           ; BSR set to: 0
  5192  00508A  C060  F349         	movff	putsUSBUSART@data,_pCDCSrc
  5193  00508E  C061  F34A         	movff	putsUSBUSART@data+1,_pCDCSrc+1
  5194                           
  5195                           ; BSR set to: 0
  5196  005092  C064  F052         	movff	putsUSBUSART@len,_cdc_tx_len
  5197                           
  5198                           ; BSR set to: 0
  5199  005096  0E01               	movlw	1
  5200  005098  0102               	movlb	2	; () banked
  5201  00509A  6FE6               	movwf	_cdc_mem_type& (0+255),b
  5202                           
  5203                           ; BSR set to: 2
  5204  00509C  0E01               	movlw	1
  5205  00509E  6FE7               	movwf	_cdc_trf_state& (0+255),b
  5206                           
  5207                           ; BSR set to: 2
  5208                           ;usb_device_cdc.c: 683: {PIE2bits.USBIE = 1;};
  5209  0050A0  8AA0               	bsf	4000,5,c	;volatile
  5210                           
  5211                           ; BSR set to: 2
  5212  0050A2  0012               	return		;funcret
  5213  0050A4                     __end_of_putsUSBUSART:
  5214                           	opt stack 0
  5215                           tblptru	equ	0xFF8
  5216                           tblptrh	equ	0xFF7
  5217                           tblptrl	equ	0xFF6
  5218                           tablat	equ	0xFF5
  5219                           intcon	equ	0xFF2
  5220                           postinc0	equ	0xFEE
  5221                           wreg	equ	0xFE8
  5222                           postdec1	equ	0xFE5
  5223                           fsr1l	equ	0xFE1
  5224                           indf2	equ	0xFDF
  5225                           fsr2h	equ	0xFDA
  5226                           fsr2l	equ	0xFD9
  5227                           status	equ	0xFD8
  5228                           
  5229 ;; *************** function _le_pulsos *****************
  5230 ;; Defined at:
  5231 ;;		line 26 in file "Pulses.c"
  5232 ;; Parameters:    Size  Location     Type
  5233 ;;  freqPulses      1    wreg     unsigned char 
  5234 ;;  modo            1    5[BANK0 ] unsigned char 
  5235 ;; Auto vars:     Size  Location     Type
  5236 ;;  freqPulses      1    9[BANK0 ] unsigned char 
  5237 ;;  freq            4   10[BANK0 ] unsigned long 
  5238 ;; Return value:  Size  Location     Type
  5239 ;;                  4    5[BANK0 ] unsigned long 
  5240 ;; Registers used:
  5241 ;;		wreg, status,2, status,0
  5242 ;; Tracked objects:
  5243 ;;		On entry : 0/0
  5244 ;;		On exit  : 0/0
  5245 ;;		Unchanged: 0/0
  5246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5247 ;;      Params:         0       4       0       0       0       0       0       0       0
  5248 ;;      Locals:         0       5       0       0       0       0       0       0       0
  5249 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5250 ;;      Totals:         0       9       0       0       0       0       0       0       0
  5251 ;;Total ram usage:        9 bytes
  5252 ;; Hardware stack levels used:    1
  5253 ;; Hardware stack levels required when called:   10
  5254 ;; This function calls:
  5255 ;;		Nothing
  5256 ;; This function is called by:
  5257 ;;		_main
  5258 ;; This function uses a non-reentrant model
  5259 ;;
  5260                           
  5261                           	psect	text6
  5262  003C20                     __ptext6:
  5263                           	opt stack 0
  5264  003C20                     _le_pulsos:
  5265                           	opt stack 20
  5266                           
  5267                           ; BSR set to: 2
  5268                           ;incstack = 0
  5269                           ;le_pulsos@freqPulses stored from wreg
  5270  003C20  0100               	movlb	0	; () banked
  5271  003C22  6F69               	movwf	le_pulsos@freqPulses& (0+255),b
  5272                           
  5273                           ;Pulses.c: 28: CCP1IE=0;
  5274  003C24  949D               	bcf	3997,2,c	;volatile
  5275                           
  5276                           ;Pulses.c: 29: uint32_t freq;
  5277                           ;Pulses.c: 30: switch(freqPulses){
  5278  003C26  D054               	goto	l2091
  5279  003C28                     l2092:
  5280                           
  5281                           ; BSR set to: 0
  5282                           ;Pulses.c: 32: freq = freqPulses1;
  5283  003C28  C33A  F06A         	movff	_freqPulses1,le_pulsos@freq	;volatile
  5284  003C2C  C33B  F06B         	movff	_freqPulses1+1,le_pulsos@freq+1	;volatile
  5285  003C30  C33C  F06C         	movff	_freqPulses1+2,le_pulsos@freq+2	;volatile
  5286  003C34  C33D  F06D         	movff	_freqPulses1+3,le_pulsos@freq+3	;volatile
  5287                           
  5288                           ; BSR set to: 0
  5289                           ;Pulses.c: 33: if (!modo)
  5290  003C38  5165               	movf	le_pulsos@modo& (0+255),w,b
  5291  003C3A  A4D8               	btfss	status,2,c
  5292  003C3C  D057               	goto	l2094
  5293                           
  5294                           ; BSR set to: 0
  5295                           ;Pulses.c: 34: freqPulses1=0;
  5296  003C3E  0E00               	movlw	0
  5297  003C40  0103               	movlb	3	; () banked
  5298  003C42  6F3A               	movwf	_freqPulses1& (0+255),b	;volatile
  5299  003C44  0E00               	movlw	0
  5300  003C46  6F3B               	movwf	(_freqPulses1+1)& (0+255),b	;volatile
  5301  003C48  0E00               	movlw	0
  5302  003C4A  6F3C               	movwf	(_freqPulses1+2)& (0+255),b	;volatile
  5303  003C4C  0E00               	movlw	0
  5304  003C4E  6F3D               	movwf	(_freqPulses1+3)& (0+255),b	;volatile
  5305                           
  5306                           ; BSR set to: 3
  5307                           ;Pulses.c: 35: break;
  5308  003C50  D04D               	goto	l2094
  5309  003C52                     l2095:
  5310                           
  5311                           ; BSR set to: 0
  5312                           ;Pulses.c: 37: freq = freqPulses2;
  5313  003C52  C336  F06A         	movff	_freqPulses2,le_pulsos@freq	;volatile
  5314  003C56  C337  F06B         	movff	_freqPulses2+1,le_pulsos@freq+1	;volatile
  5315  003C5A  C338  F06C         	movff	_freqPulses2+2,le_pulsos@freq+2	;volatile
  5316  003C5E  C339  F06D         	movff	_freqPulses2+3,le_pulsos@freq+3	;volatile
  5317                           
  5318                           ; BSR set to: 0
  5319                           ;Pulses.c: 38: if (!modo)
  5320  003C62  5165               	movf	le_pulsos@modo& (0+255),w,b
  5321  003C64  A4D8               	btfss	status,2,c
  5322  003C66  D042               	goto	l2094
  5323                           
  5324                           ; BSR set to: 0
  5325                           ;Pulses.c: 39: freqPulses2=0;
  5326  003C68  0E00               	movlw	0
  5327  003C6A  0103               	movlb	3	; () banked
  5328  003C6C  6F36               	movwf	_freqPulses2& (0+255),b	;volatile
  5329  003C6E  0E00               	movlw	0
  5330  003C70  6F37               	movwf	(_freqPulses2+1)& (0+255),b	;volatile
  5331  003C72  0E00               	movlw	0
  5332  003C74  6F38               	movwf	(_freqPulses2+2)& (0+255),b	;volatile
  5333  003C76  0E00               	movlw	0
  5334  003C78  6F39               	movwf	(_freqPulses2+3)& (0+255),b	;volatile
  5335                           
  5336                           ; BSR set to: 3
  5337                           ;Pulses.c: 40: break;
  5338  003C7A  D038               	goto	l2094
  5339  003C7C                     l2097:
  5340                           
  5341                           ; BSR set to: 0
  5342                           ;Pulses.c: 42: freq = freqPulses3;
  5343  003C7C  C332  F06A         	movff	_freqPulses3,le_pulsos@freq	;volatile
  5344  003C80  C333  F06B         	movff	_freqPulses3+1,le_pulsos@freq+1	;volatile
  5345  003C84  C334  F06C         	movff	_freqPulses3+2,le_pulsos@freq+2	;volatile
  5346  003C88  C335  F06D         	movff	_freqPulses3+3,le_pulsos@freq+3	;volatile
  5347                           
  5348                           ; BSR set to: 0
  5349                           ;Pulses.c: 43: if (!modo)
  5350  003C8C  5165               	movf	le_pulsos@modo& (0+255),w,b
  5351  003C8E  A4D8               	btfss	status,2,c
  5352  003C90  D02D               	goto	l2094
  5353                           
  5354                           ; BSR set to: 0
  5355                           ;Pulses.c: 44: freqPulses3=0;
  5356  003C92  0E00               	movlw	0
  5357  003C94  0103               	movlb	3	; () banked
  5358  003C96  6F32               	movwf	_freqPulses3& (0+255),b	;volatile
  5359  003C98  0E00               	movlw	0
  5360  003C9A  6F33               	movwf	(_freqPulses3+1)& (0+255),b	;volatile
  5361  003C9C  0E00               	movlw	0
  5362  003C9E  6F34               	movwf	(_freqPulses3+2)& (0+255),b	;volatile
  5363  003CA0  0E00               	movlw	0
  5364  003CA2  6F35               	movwf	(_freqPulses3+3)& (0+255),b	;volatile
  5365                           
  5366                           ; BSR set to: 3
  5367                           ;Pulses.c: 45: break;
  5368  003CA4  D023               	goto	l2094
  5369  003CA6                     l2099:
  5370                           
  5371                           ; BSR set to: 0
  5372                           ;Pulses.c: 47: freq = freqPulses4;
  5373  003CA6  C32E  F06A         	movff	_freqPulses4,le_pulsos@freq	;volatile
  5374  003CAA  C32F  F06B         	movff	_freqPulses4+1,le_pulsos@freq+1	;volatile
  5375  003CAE  C330  F06C         	movff	_freqPulses4+2,le_pulsos@freq+2	;volatile
  5376  003CB2  C331  F06D         	movff	_freqPulses4+3,le_pulsos@freq+3	;volatile
  5377                           
  5378                           ; BSR set to: 0
  5379                           ;Pulses.c: 48: if (!modo)
  5380  003CB6  5165               	movf	le_pulsos@modo& (0+255),w,b
  5381  003CB8  A4D8               	btfss	status,2,c
  5382  003CBA  D018               	goto	l2094
  5383                           
  5384                           ; BSR set to: 0
  5385                           ;Pulses.c: 49: freqPulses4=0;
  5386  003CBC  0E00               	movlw	0
  5387  003CBE  0103               	movlb	3	; () banked
  5388  003CC0  6F2E               	movwf	_freqPulses4& (0+255),b	;volatile
  5389  003CC2  0E00               	movlw	0
  5390  003CC4  6F2F               	movwf	(_freqPulses4+1)& (0+255),b	;volatile
  5391  003CC6  0E00               	movlw	0
  5392  003CC8  6F30               	movwf	(_freqPulses4+2)& (0+255),b	;volatile
  5393  003CCA  0E00               	movlw	0
  5394  003CCC  6F31               	movwf	(_freqPulses4+3)& (0+255),b	;volatile
  5395                           
  5396                           ; BSR set to: 3
  5397                           ;Pulses.c: 51: }
  5398                           
  5399                           ; BSR set to: 3
  5400                           ;Pulses.c: 50: break;
  5401  003CCE  D00E               	goto	l2094
  5402  003CD0                     l2091:
  5403                           
  5404                           ; BSR set to: 3
  5405  003CD0  0100               	movlb	0	; () banked
  5406  003CD2  5169               	movf	le_pulsos@freqPulses& (0+255),w,b
  5407                           
  5408                           ; Switch size 1, requested type "space"
  5409                           ; Number of cases is 4, Range of values is 1 to 4
  5410                           ; switch strategies available:
  5411                           ; Name         Instructions Cycles
  5412                           ; simple_byte           13     7 (average)
  5413                           ;	Chosen strategy is simple_byte
  5414  003CD4  0A01               	xorlw	1	; case 1
  5415  003CD6  B4D8               	btfsc	status,2,c
  5416  003CD8  D7A7               	goto	l2092
  5417  003CDA  0A03               	xorlw	3	; case 2
  5418  003CDC  B4D8               	btfsc	status,2,c
  5419  003CDE  D7B9               	goto	l2095
  5420  003CE0  0A01               	xorlw	1	; case 3
  5421  003CE2  B4D8               	btfsc	status,2,c
  5422  003CE4  D7CB               	goto	l2097
  5423  003CE6  0A07               	xorlw	7	; case 4
  5424  003CE8  B4D8               	btfsc	status,2,c
  5425  003CEA  D7DD               	goto	l2099
  5426  003CEC                     l2094:
  5427                           
  5428                           ;Pulses.c: 53: CCP1IE=1;
  5429  003CEC  849D               	bsf	3997,2,c	;volatile
  5430                           
  5431                           ;Pulses.c: 54: return freq;
  5432  003CEE  C06A  F065         	movff	le_pulsos@freq,?_le_pulsos
  5433  003CF2  C06B  F066         	movff	le_pulsos@freq+1,?_le_pulsos+1
  5434  003CF6  C06C  F067         	movff	le_pulsos@freq+2,?_le_pulsos+2
  5435  003CFA  C06D  F068         	movff	le_pulsos@freq+3,?_le_pulsos+3
  5436  003CFE  0012               	return		;funcret
  5437  003D00                     __end_of_le_pulsos:
  5438                           	opt stack 0
  5439                           tblptru	equ	0xFF8
  5440                           tblptrh	equ	0xFF7
  5441                           tblptrl	equ	0xFF6
  5442                           tablat	equ	0xFF5
  5443                           intcon	equ	0xFF2
  5444                           postinc0	equ	0xFEE
  5445                           wreg	equ	0xFE8
  5446                           postdec1	equ	0xFE5
  5447                           fsr1l	equ	0xFE1
  5448                           indf2	equ	0xFDF
  5449                           fsr2h	equ	0xFDA
  5450                           fsr2l	equ	0xFD9
  5451                           status	equ	0xFD8
  5452                           
  5453 ;; *************** function _le_AD *****************
  5454 ;; Defined at:
  5455 ;;		line 20 in file "AD.c"
  5456 ;; Parameters:    Size  Location     Type
  5457 ;;  AnalogPort      1    wreg     unsigned char 
  5458 ;; Auto vars:     Size  Location     Type
  5459 ;;  AnalogPort      1   73[BANK0 ] unsigned char 
  5460 ;;  i               2   76[BANK0 ] int 
  5461 ;;  corrente        3   70[BANK0 ] float 
  5462 ;;  leitura         2   78[BANK0 ] unsigned int 
  5463 ;;  leituraAux      2   74[BANK0 ] unsigned int 
  5464 ;; Return value:  Size  Location     Type
  5465 ;;                  3   62[BANK0 ] float 
  5466 ;; Registers used:
  5467 ;;		wreg, status,2, status,0, cstack
  5468 ;; Tracked objects:
  5469 ;;		On entry : 0/0
  5470 ;;		On exit  : 0/0
  5471 ;;		Unchanged: 0/0
  5472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5473 ;;      Params:         0       3       0       0       0       0       0       0       0
  5474 ;;      Locals:         0      13       0       0       0       0       0       0       0
  5475 ;;      Temps:          0       2       0       0       0       0       0       0       0
  5476 ;;      Totals:         0      18       0       0       0       0       0       0       0
  5477 ;;Total ram usage:       18 bytes
  5478 ;; Hardware stack levels used:    1
  5479 ;; Hardware stack levels required when called:   12
  5480 ;; This function calls:
  5481 ;;		___awtoft
  5482 ;;		___ftadd
  5483 ;;		___ftdiv
  5484 ;;		___ftmul
  5485 ;; This function is called by:
  5486 ;;		_main
  5487 ;; This function uses a non-reentrant model
  5488 ;;
  5489                           
  5490                           	psect	text7
  5491  0030C2                     __ptext7:
  5492                           	opt stack 0
  5493  0030C2                     _le_AD:
  5494                           	opt stack 18
  5495                           
  5496                           ;incstack = 0
  5497                           ;le_AD@AnalogPort stored from wreg
  5498  0030C2  0100               	movlb	0	; () banked
  5499  0030C4  6FA9               	movwf	le_AD@AnalogPort& (0+255),b
  5500                           
  5501                           ;AD.c: 22: if (AnalogPort == 0){
  5502  0030C6  0100               	movlb	0	; () banked
  5503  0030C8  51A9               	movf	le_AD@AnalogPort& (0+255),w,b
  5504  0030CA  A4D8               	btfss	status,2,c
  5505  0030CC  D002               	goto	l1974
  5506                           
  5507                           ; BSR set to: 0
  5508                           ;AD.c: 23: ADCON0=0b00000001;
  5509  0030CE  0E01               	movlw	1
  5510  0030D0  6EC2               	movwf	4034,c	;volatile
  5511  0030D2                     l1974:
  5512                           
  5513                           ; BSR set to: 0
  5514                           ;AD.c: 24: }
  5515                           ;AD.c: 25: if (AnalogPort == 1){
  5516                           
  5517                           ; BSR set to: 0
  5518  0030D2  05A9               	decf	le_AD@AnalogPort& (0+255),w,b
  5519  0030D4  A4D8               	btfss	status,2,c
  5520  0030D6  D002               	goto	l1975
  5521                           
  5522                           ; BSR set to: 0
  5523                           ;AD.c: 26: ADCON0=0b00000101;
  5524  0030D8  0E05               	movlw	5
  5525  0030DA  6EC2               	movwf	4034,c	;volatile
  5526  0030DC                     l1975:
  5527                           
  5528                           ; BSR set to: 0
  5529                           ;AD.c: 27: }
  5530                           ;AD.c: 35: float corrente;
  5531                           ;AD.c: 37: uint16_t leituraAux;
  5532                           ;AD.c: 38: uint16_t leitura=0;
  5533  0030DC  0E00               	movlw	0
  5534  0030DE  6FAF               	movwf	(le_AD@leitura+1)& (0+255),b
  5535  0030E0  0E00               	movlw	0
  5536  0030E2  6FAE               	movwf	le_AD@leitura& (0+255),b
  5537                           
  5538                           ;AD.c: 40: for (int i=0;i<32;i++)
  5539  0030E4  0E00               	movlw	0
  5540  0030E6  6FAD               	movwf	(le_AD@i+1)& (0+255),b
  5541  0030E8  0E00               	movlw	0
  5542  0030EA  6FAC               	movwf	le_AD@i& (0+255),b
  5543  0030EC                     l10118:
  5544                           
  5545                           ; BSR set to: 0
  5546  0030EC  BFAD               	btfsc	(le_AD@i+1)& (0+255),7,b
  5547  0030EE  D006               	goto	l1976
  5548  0030F0  51AD               	movf	(le_AD@i+1)& (0+255),w,b
  5549  0030F2  E119               	bnz	l10130
  5550  0030F4  0E20               	movlw	32
  5551  0030F6  5DAC               	subwf	le_AD@i& (0+255),w,b
  5552  0030F8  B0D8               	btfsc	status,0,c
  5553  0030FA  D015               	goto	u9660
  5554  0030FC                     l1976:
  5555                           
  5556                           ; BSR set to: 0
  5557                           ;AD.c: 41: {
  5558                           ;AD.c: 42: GO_DONE=1;
  5559  0030FC  82C2               	bsf	4034,1,c	;volatile
  5560                           
  5561                           ;AD.c: 43: __nop();
  5562  0030FE  F000               	nop	
  5563  003100  B2C2               	btfsc	4034,1,c	;volatile
  5564  003102  D7FE               	goto	l1979
  5565                           
  5566                           ;AD.c: 47: leituraAux=ADRESH;
  5567  003104  CFC4 F0AA          	movff	4036,le_AD@leituraAux	;volatile
  5568  003108  0100               	movlb	0	; () banked
  5569  00310A  6BAB               	clrf	(le_AD@leituraAux+1)& (0+255),b
  5570                           
  5571                           ; BSR set to: 0
  5572                           ;AD.c: 48: leituraAux=(leituraAux <<8) | ADRESL;
  5573  00310C  51AA               	movf	le_AD@leituraAux& (0+255),w,b
  5574  00310E  6FA1               	movwf	??_le_AD& (0+255),b
  5575  003110  50C3               	movf	4035,w,c	;volatile
  5576  003112  6FAA               	movwf	le_AD@leituraAux& (0+255),b
  5577  003114  C0A1  F0AB         	movff	??_le_AD,le_AD@leituraAux+1
  5578                           
  5579                           ; BSR set to: 0
  5580                           ;AD.c: 49: leitura+=leituraAux;
  5581  003118  51AA               	movf	le_AD@leituraAux& (0+255),w,b
  5582  00311A  27AE               	addwf	le_AD@leitura& (0+255),f,b
  5583  00311C  51AB               	movf	(le_AD@leituraAux+1)& (0+255),w,b
  5584  00311E  23AF               	addwfc	(le_AD@leitura+1)& (0+255),f,b
  5585                           
  5586                           ; BSR set to: 0
  5587  003120  4BAC               	infsnz	le_AD@i& (0+255),f,b
  5588  003122  2BAD               	incf	(le_AD@i+1)& (0+255),f,b
  5589  003124  D7E3               	goto	l10118
  5590  003126                     u9660:
  5591  003126                     l10130:
  5592                           
  5593                           ; BSR set to: 0
  5594                           ;AD.c: 51: }
  5595                           ;AD.c: 53: leitura>>=5;
  5596  003126  0E05               	movlw	5
  5597  003128  6FA1               	movwf	??_le_AD& (0+255),b
  5598  00312A                     u9675:
  5599  00312A  90D8               	bcf	status,0,c
  5600  00312C  33AF               	rrcf	(le_AD@leitura+1)& (0+255),f,b
  5601  00312E  33AE               	rrcf	le_AD@leitura& (0+255),f,b
  5602  003130  2FA1               	decfsz	??_le_AD& (0+255),f,b
  5603  003132  D7FB               	goto	u9675
  5604                           
  5605                           ;AD.c: 55: if (leitura==0)
  5606  003134  51AE               	movf	le_AD@leitura& (0+255),w,b
  5607  003136  11AF               	iorwf	(le_AD@leitura+1)& (0+255),w,b
  5608  003138  A4D8               	btfss	status,2,c
  5609  00313A  D007               	goto	l1981
  5610                           
  5611                           ; BSR set to: 0
  5612                           ;AD.c: 56: corrente=0;
  5613  00313C  0E00               	movlw	0
  5614  00313E  6FA6               	movwf	le_AD@corrente& (0+255),b
  5615  003140  0E00               	movlw	0
  5616  003142  6FA7               	movwf	(le_AD@corrente+1)& (0+255),b
  5617  003144  0E00               	movlw	0
  5618  003146  6FA8               	movwf	(le_AD@corrente+2)& (0+255),b
  5619  003148  D04B               	goto	l1982
  5620  00314A                     l1981:
  5621                           
  5622                           ; BSR set to: 0
  5623                           ;AD.c: 57: else
  5624                           ;AD.c: 58: corrente=((int16_t) leitura-195.0)*16.0/784.0+4.0;
  5625                           
  5626                           ; BSR set to: 0
  5627  00314A  0E00               	movlw	0
  5628  00314C  6F92               	movwf	___ftdiv@f2& (0+255),b
  5629  00314E  0E44               	movlw	68
  5630  003150  6F93               	movwf	(___ftdiv@f2+1)& (0+255),b
  5631  003152  0E44               	movlw	68
  5632  003154  6F94               	movwf	(___ftdiv@f2+2)& (0+255),b
  5633  003156  0E00               	movlw	0
  5634  003158  6F83               	movwf	___ftmul@f2& (0+255),b
  5635  00315A  0E80               	movlw	128
  5636  00315C  6F84               	movwf	(___ftmul@f2+1)& (0+255),b
  5637  00315E  0E41               	movlw	65
  5638  003160  6F85               	movwf	(___ftmul@f2+2)& (0+255),b
  5639  003162  0E00               	movlw	0
  5640  003164  6F77               	movwf	___ftadd@f2& (0+255),b
  5641  003166  0E43               	movlw	67
  5642  003168  6F78               	movwf	(___ftadd@f2+1)& (0+255),b
  5643  00316A  0EC3               	movlw	195
  5644  00316C  6F79               	movwf	(___ftadd@f2+2)& (0+255),b
  5645  00316E  C0AE  F068         	movff	le_AD@leitura,___awtoft@c
  5646  003172  C0AF  F069         	movff	le_AD@leitura+1,___awtoft@c+1
  5647  003176  ECC1  F029         	call	___awtoft	;wreg free
  5648  00317A  C068  F074         	movff	?___awtoft,___ftadd@f1
  5649  00317E  C069  F075         	movff	?___awtoft+1,___ftadd@f1+1
  5650  003182  C06A  F076         	movff	?___awtoft+2,___ftadd@f1+2
  5651  003186  EC7F  F014         	call	___ftadd	;wreg free
  5652  00318A  C074  F080         	movff	?___ftadd,___ftmul@f1
  5653  00318E  C075  F081         	movff	?___ftadd+1,___ftmul@f1+1
  5654  003192  C076  F082         	movff	?___ftadd+2,___ftmul@f1+2
  5655  003196  EC21  F01D         	call	___ftmul	;wreg free
  5656  00319A  C080  F08F         	movff	?___ftmul,___ftdiv@f1
  5657  00319E  C081  F090         	movff	?___ftmul+1,___ftdiv@f1+1
  5658  0031A2  C082  F091         	movff	?___ftmul+2,___ftdiv@f1+2
  5659  0031A6  EC9C  F01D         	call	___ftdiv	;wreg free
  5660  0031AA  C08F  F0A3         	movff	?___ftdiv,_le_AD$5957
  5661  0031AE  C090  F0A4         	movff	?___ftdiv+1,_le_AD$5957+1
  5662  0031B2  C091  F0A5         	movff	?___ftdiv+2,_le_AD$5957+2
  5663                           
  5664                           ;AD.c: 57: else
  5665                           ;AD.c: 58: corrente=((int16_t) leitura-195.0)*16.0/784.0+4.0;
  5666  0031B6  C0A3  F074         	movff	_le_AD$5957,___ftadd@f1
  5667  0031BA  C0A4  F075         	movff	_le_AD$5957+1,___ftadd@f1+1
  5668  0031BE  C0A5  F076         	movff	_le_AD$5957+2,___ftadd@f1+2
  5669  0031C2  0E00               	movlw	0
  5670  0031C4  0100               	movlb	0	; () banked
  5671  0031C6  6F77               	movwf	___ftadd@f2& (0+255),b
  5672  0031C8  0E80               	movlw	128
  5673  0031CA  6F78               	movwf	(___ftadd@f2+1)& (0+255),b
  5674  0031CC  0E40               	movlw	64
  5675  0031CE  6F79               	movwf	(___ftadd@f2+2)& (0+255),b
  5676  0031D0  EC7F  F014         	call	___ftadd	;wreg free
  5677  0031D4  C074  F0A6         	movff	?___ftadd,le_AD@corrente
  5678  0031D8  C075  F0A7         	movff	?___ftadd+1,le_AD@corrente+1
  5679  0031DC  C076  F0A8         	movff	?___ftadd+2,le_AD@corrente+2
  5680  0031E0                     l1982:
  5681                           
  5682                           ;AD.c: 60: return corrente;
  5683  0031E0  C0A6  F09E         	movff	le_AD@corrente,?_le_AD
  5684  0031E4  C0A7  F09F         	movff	le_AD@corrente+1,?_le_AD+1
  5685  0031E8  C0A8  F0A0         	movff	le_AD@corrente+2,?_le_AD+2
  5686  0031EC  0012               	return	
  5687  0031EE                     __end_of_le_AD:
  5688                           	opt stack 0
  5689                           tblptru	equ	0xFF8
  5690                           tblptrh	equ	0xFF7
  5691                           tblptrl	equ	0xFF6
  5692                           tablat	equ	0xFF5
  5693                           intcon	equ	0xFF2
  5694                           postinc0	equ	0xFEE
  5695                           wreg	equ	0xFE8
  5696                           postdec1	equ	0xFE5
  5697                           fsr1l	equ	0xFE1
  5698                           indf2	equ	0xFDF
  5699                           fsr2h	equ	0xFDA
  5700                           fsr2l	equ	0xFD9
  5701                           status	equ	0xFD8
  5702                           
  5703 ;; *************** function ___ftdiv *****************
  5704 ;; Defined at:
  5705 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftdiv.c"
  5706 ;; Parameters:    Size  Location     Type
  5707 ;;  f1              3   47[BANK0 ] float 
  5708 ;;  f2              3   50[BANK0 ] float 
  5709 ;; Auto vars:     Size  Location     Type
  5710 ;;  f3              3   57[BANK0 ] float 
  5711 ;;  sign            1   61[BANK0 ] unsigned char 
  5712 ;;  exp             1   60[BANK0 ] unsigned char 
  5713 ;;  cntr            1   56[BANK0 ] unsigned char 
  5714 ;; Return value:  Size  Location     Type
  5715 ;;                  3   47[BANK0 ] float 
  5716 ;; Registers used:
  5717 ;;		wreg, status,2, status,0, cstack
  5718 ;; Tracked objects:
  5719 ;;		On entry : 0/0
  5720 ;;		On exit  : 0/0
  5721 ;;		Unchanged: 0/0
  5722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5723 ;;      Params:         0       6       0       0       0       0       0       0       0
  5724 ;;      Locals:         0       6       0       0       0       0       0       0       0
  5725 ;;      Temps:          0       3       0       0       0       0       0       0       0
  5726 ;;      Totals:         0      15       0       0       0       0       0       0       0
  5727 ;;Total ram usage:       15 bytes
  5728 ;; Hardware stack levels used:    1
  5729 ;; Hardware stack levels required when called:   11
  5730 ;; This function calls:
  5731 ;;		___ftpack
  5732 ;; This function is called by:
  5733 ;;		_le_AD
  5734 ;; This function uses a non-reentrant model
  5735 ;;
  5736                           
  5737                           	psect	text8
  5738  003B38                     __ptext8:
  5739                           	opt stack 0
  5740  003B38                     ___ftdiv:
  5741                           	opt stack 18
  5742                           
  5743                           ;incstack = 0
  5744  003B38  C091  F095         	movff	___ftdiv@f1+2,??___ftdiv
  5745  003B3C  0100               	movlb	0	; () banked
  5746  003B3E  6B96               	clrf	(??___ftdiv+1)& (0+255),b
  5747  003B40  6B97               	clrf	(??___ftdiv+2)& (0+255),b
  5748  003B42  3590               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  5749  003B44  3795               	rlcf	??___ftdiv& (0+255),f,b
  5750  003B46  E301               	bnc	u8941
  5751  003B48  8196               	bsf	(??___ftdiv+1)& (0+255),0,b
  5752  003B4A                     u8941:
  5753  003B4A  5195               	movf	??___ftdiv& (0+255),w,b
  5754  003B4C  6F9C               	movwf	___ftdiv@exp& (0+255),b
  5755  003B4E  519C               	movf	___ftdiv@exp& (0+255),w,b
  5756  003B50  A4D8               	btfss	status,2,c
  5757  003B52  D007               	goto	l3081
  5758                           
  5759                           ; BSR set to: 0
  5760  003B54  0E00               	movlw	0
  5761  003B56  6F8F               	movwf	?___ftdiv& (0+255),b
  5762  003B58  0E00               	movlw	0
  5763  003B5A  6F90               	movwf	(?___ftdiv+1)& (0+255),b
  5764  003B5C  0E00               	movlw	0
  5765  003B5E  6F91               	movwf	(?___ftdiv+2)& (0+255),b
  5766                           
  5767                           ; BSR set to: 0
  5768  003B60  0012               	return	
  5769  003B62                     l3081:
  5770                           
  5771                           ; BSR set to: 0
  5772                           
  5773                           ; BSR set to: 0
  5774  003B62  C094  F095         	movff	___ftdiv@f2+2,??___ftdiv
  5775  003B66  6B96               	clrf	(??___ftdiv+1)& (0+255),b
  5776  003B68  6B97               	clrf	(??___ftdiv+2)& (0+255),b
  5777  003B6A  3593               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  5778  003B6C  3795               	rlcf	??___ftdiv& (0+255),f,b
  5779  003B6E  E301               	bnc	u8961
  5780  003B70  8196               	bsf	(??___ftdiv+1)& (0+255),0,b
  5781  003B72                     u8961:
  5782  003B72  5195               	movf	??___ftdiv& (0+255),w,b
  5783  003B74  6F9D               	movwf	___ftdiv@sign& (0+255),b
  5784  003B76  519D               	movf	___ftdiv@sign& (0+255),w,b
  5785  003B78  A4D8               	btfss	status,2,c
  5786  003B7A  D007               	goto	l3083
  5787                           
  5788                           ; BSR set to: 0
  5789  003B7C  0E00               	movlw	0
  5790  003B7E  6F8F               	movwf	?___ftdiv& (0+255),b
  5791  003B80  0E00               	movlw	0
  5792  003B82  6F90               	movwf	(?___ftdiv+1)& (0+255),b
  5793  003B84  0E00               	movlw	0
  5794  003B86  6F91               	movwf	(?___ftdiv+2)& (0+255),b
  5795                           
  5796                           ; BSR set to: 0
  5797  003B88  0012               	return	
  5798  003B8A                     l3083:
  5799                           
  5800                           ; BSR set to: 0
  5801                           
  5802                           ; BSR set to: 0
  5803  003B8A  0E00               	movlw	0
  5804  003B8C  6F99               	movwf	___ftdiv@f3& (0+255),b
  5805  003B8E  0E00               	movlw	0
  5806  003B90  6F9A               	movwf	(___ftdiv@f3+1)& (0+255),b
  5807  003B92  0E00               	movlw	0
  5808  003B94  6F9B               	movwf	(___ftdiv@f3+2)& (0+255),b
  5809                           
  5810                           ; BSR set to: 0
  5811  003B96  519D               	movf	___ftdiv@sign& (0+255),w,b
  5812  003B98  0F89               	addlw	137
  5813  003B9A  5F9C               	subwf	___ftdiv@exp& (0+255),f,b
  5814                           
  5815                           ; BSR set to: 0
  5816  003B9C  C091  F09D         	movff	___ftdiv@f1+2,___ftdiv@sign
  5817                           
  5818                           ; BSR set to: 0
  5819  003BA0  5194               	movf	(___ftdiv@f2+2)& (0+255),w,b
  5820  003BA2  1B9D               	xorwf	___ftdiv@sign& (0+255),f,b
  5821                           
  5822                           ; BSR set to: 0
  5823  003BA4  0E80               	movlw	128
  5824  003BA6  179D               	andwf	___ftdiv@sign& (0+255),f,b
  5825                           
  5826                           ; BSR set to: 0
  5827  003BA8  8F90               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  5828                           
  5829                           ; BSR set to: 0
  5830  003BAA  0EFF               	movlw	255
  5831  003BAC  178F               	andwf	___ftdiv@f1& (0+255),f,b
  5832  003BAE  0EFF               	movlw	255
  5833  003BB0  1790               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  5834  003BB2  0E00               	movlw	0
  5835  003BB4  1791               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  5836                           
  5837                           ; BSR set to: 0
  5838  003BB6  8F93               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  5839                           
  5840                           ; BSR set to: 0
  5841  003BB8  0EFF               	movlw	255
  5842  003BBA  1792               	andwf	___ftdiv@f2& (0+255),f,b
  5843  003BBC  0EFF               	movlw	255
  5844  003BBE  1793               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  5845  003BC0  0E00               	movlw	0
  5846  003BC2  1794               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  5847                           
  5848                           ; BSR set to: 0
  5849  003BC4  0E18               	movlw	24
  5850  003BC6  6F98               	movwf	___ftdiv@cntr& (0+255),b
  5851  003BC8                     
  5852                           ; BSR set to: 0
  5853                           
  5854                           ; BSR set to: 0
  5855  003BC8  90D8               	bcf	status,0,c
  5856  003BCA  3799               	rlcf	___ftdiv@f3& (0+255),f,b
  5857  003BCC  379A               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  5858  003BCE  379B               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  5859                           
  5860                           ; BSR set to: 0
  5861  003BD0  5192               	movf	___ftdiv@f2& (0+255),w,b
  5862  003BD2  5D8F               	subwf	___ftdiv@f1& (0+255),w,b
  5863  003BD4  5193               	movf	(___ftdiv@f2+1)& (0+255),w,b
  5864  003BD6  5990               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  5865  003BD8  5194               	movf	(___ftdiv@f2+2)& (0+255),w,b
  5866  003BDA  5991               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  5867  003BDC  A0D8               	btfss	status,0,c
  5868  003BDE  D007               	goto	l3085
  5869                           
  5870                           ; BSR set to: 0
  5871  003BE0  5192               	movf	___ftdiv@f2& (0+255),w,b
  5872  003BE2  5F8F               	subwf	___ftdiv@f1& (0+255),f,b
  5873  003BE4  5193               	movf	(___ftdiv@f2+1)& (0+255),w,b
  5874  003BE6  5B90               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  5875  003BE8  5194               	movf	(___ftdiv@f2+2)& (0+255),w,b
  5876  003BEA  5B91               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  5877                           
  5878                           ; BSR set to: 0
  5879  003BEC  8199               	bsf	___ftdiv@f3& (0+255),0,b
  5880  003BEE                     l3085:
  5881                           
  5882                           ; BSR set to: 0
  5883  003BEE  90D8               	bcf	status,0,c
  5884  003BF0  378F               	rlcf	___ftdiv@f1& (0+255),f,b
  5885  003BF2  3790               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  5886  003BF4  3791               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  5887                           
  5888                           ; BSR set to: 0
  5889  003BF6  2F98               	decfsz	___ftdiv@cntr& (0+255),f,b
  5890  003BF8  D7E7               	goto	l3084
  5891                           
  5892                           ; BSR set to: 0
  5893                           
  5894                           ; BSR set to: 0
  5895  003BFA  C099  F060         	movff	___ftdiv@f3,___ftpack@arg
  5896  003BFE  C09A  F061         	movff	___ftdiv@f3+1,___ftpack@arg+1
  5897  003C02  C09B  F062         	movff	___ftdiv@f3+2,___ftpack@arg+2
  5898  003C06  C09C  F063         	movff	___ftdiv@exp,___ftpack@exp
  5899  003C0A  C09D  F064         	movff	___ftdiv@sign,___ftpack@sign
  5900  003C0E  ECDD  F020         	call	___ftpack	;wreg free
  5901  003C12  C060  F08F         	movff	?___ftpack,?___ftdiv
  5902  003C16  C061  F090         	movff	?___ftpack+1,?___ftdiv+1
  5903  003C1A  C062  F091         	movff	?___ftpack+2,?___ftdiv+2
  5904  003C1E  0012               	return	
  5905  003C20                     __end_of___ftdiv:
  5906                           	opt stack 0
  5907                           tblptru	equ	0xFF8
  5908                           tblptrh	equ	0xFF7
  5909                           tblptrl	equ	0xFF6
  5910                           tablat	equ	0xFF5
  5911                           intcon	equ	0xFF2
  5912                           postinc0	equ	0xFEE
  5913                           wreg	equ	0xFE8
  5914                           postdec1	equ	0xFE5
  5915                           fsr1l	equ	0xFE1
  5916                           indf2	equ	0xFDF
  5917                           fsr2h	equ	0xFDA
  5918                           fsr2l	equ	0xFD9
  5919                           status	equ	0xFD8
  5920                           
  5921 ;; *************** function ___awtoft *****************
  5922 ;; Defined at:
  5923 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\awtoft.c"
  5924 ;; Parameters:    Size  Location     Type
  5925 ;;  c               2    8[BANK0 ] int 
  5926 ;; Auto vars:     Size  Location     Type
  5927 ;;  sign            1   11[BANK0 ] unsigned char 
  5928 ;; Return value:  Size  Location     Type
  5929 ;;                  3    8[BANK0 ] float 
  5930 ;; Registers used:
  5931 ;;		wreg, status,2, status,0, cstack
  5932 ;; Tracked objects:
  5933 ;;		On entry : 0/0
  5934 ;;		On exit  : 0/0
  5935 ;;		Unchanged: 0/0
  5936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5937 ;;      Params:         0       3       0       0       0       0       0       0       0
  5938 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5939 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5940 ;;      Totals:         0       4       0       0       0       0       0       0       0
  5941 ;;Total ram usage:        4 bytes
  5942 ;; Hardware stack levels used:    1
  5943 ;; Hardware stack levels required when called:   11
  5944 ;; This function calls:
  5945 ;;		___ftpack
  5946 ;; This function is called by:
  5947 ;;		_le_AD
  5948 ;; This function uses a non-reentrant model
  5949 ;;
  5950                           
  5951                           	psect	text9
  5952  005382                     __ptext9:
  5953                           	opt stack 0
  5954  005382                     ___awtoft:
  5955                           	opt stack 18
  5956                           
  5957                           ;incstack = 0
  5958  005382  0E00               	movlw	0
  5959  005384  0100               	movlb	0	; () banked
  5960  005386  6F6B               	movwf	___awtoft@sign& (0+255),b
  5961                           
  5962                           ; BSR set to: 0
  5963  005388  AF69               	btfss	(___awtoft@c+1)& (0+255),7,b
  5964  00538A  D006               	goto	l2981
  5965                           
  5966                           ; BSR set to: 0
  5967  00538C  6D68               	negf	___awtoft@c& (0+255),b
  5968  00538E  1F69               	comf	(___awtoft@c+1)& (0+255),f,b
  5969  005390  B0D8               	btfsc	status,0,c
  5970  005392  2B69               	incf	(___awtoft@c+1)& (0+255),f,b
  5971                           
  5972                           ; BSR set to: 0
  5973  005394  0E01               	movlw	1
  5974  005396  6F6B               	movwf	___awtoft@sign& (0+255),b
  5975  005398                     l2981:
  5976                           
  5977                           ; BSR set to: 0
  5978                           
  5979                           ; BSR set to: 0
  5980  005398  C068  F060         	movff	___awtoft@c,___ftpack@arg
  5981  00539C  C069  F061         	movff	___awtoft@c+1,___ftpack@arg+1
  5982  0053A0  6B62               	clrf	(___ftpack@arg+2)& (0+255),b
  5983  0053A2  0E8E               	movlw	142
  5984  0053A4  6F63               	movwf	___ftpack@exp& (0+255),b
  5985  0053A6  C06B  F064         	movff	___awtoft@sign,___ftpack@sign
  5986  0053AA  ECDD  F020         	call	___ftpack	;wreg free
  5987  0053AE  C060  F068         	movff	?___ftpack,?___awtoft
  5988  0053B2  C061  F069         	movff	?___ftpack+1,?___awtoft+1
  5989  0053B6  C062  F06A         	movff	?___ftpack+2,?___awtoft+2
  5990  0053BA  0012               	return	
  5991  0053BC                     __end_of___awtoft:
  5992                           	opt stack 0
  5993                           tblptru	equ	0xFF8
  5994                           tblptrh	equ	0xFF7
  5995                           tblptrl	equ	0xFF6
  5996                           tablat	equ	0xFF5
  5997                           intcon	equ	0xFF2
  5998                           postinc0	equ	0xFEE
  5999                           wreg	equ	0xFE8
  6000                           postdec1	equ	0xFE5
  6001                           fsr1l	equ	0xFE1
  6002                           indf2	equ	0xFDF
  6003                           fsr2h	equ	0xFDA
  6004                           fsr2l	equ	0xFD9
  6005                           status	equ	0xFD8
  6006                           
  6007 ;; *************** function _delay *****************
  6008 ;; Defined at:
  6009 ;;		line 33 in file "UT.c"
  6010 ;; Parameters:    Size  Location     Type
  6011 ;;  time            4   13[BANK0 ] unsigned long 
  6012 ;; Auto vars:     Size  Location     Type
  6013 ;;  to              4   25[BANK0 ] unsigned long 
  6014 ;; Return value:  Size  Location     Type
  6015 ;;                  1    wreg      void 
  6016 ;; Registers used:
  6017 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6018 ;; Tracked objects:
  6019 ;;		On entry : 0/0
  6020 ;;		On exit  : 0/0
  6021 ;;		Unchanged: 0/0
  6022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6023 ;;      Params:         0       4       0       0       0       0       0       0       0
  6024 ;;      Locals:         0       4       0       0       0       0       0       0       0
  6025 ;;      Temps:          0       8       0       0       0       0       0       0       0
  6026 ;;      Totals:         0      16       0       0       0       0       0       0       0
  6027 ;;Total ram usage:       16 bytes
  6028 ;; Hardware stack levels used:    1
  6029 ;; Hardware stack levels required when called:   13
  6030 ;; This function calls:
  6031 ;;		_millis
  6032 ;;		_verificaUSB
  6033 ;; This function is called by:
  6034 ;;		_main
  6035 ;; This function uses a non-reentrant model
  6036 ;;
  6037                           
  6038                           	psect	text10
  6039  004C18                     __ptext10:
  6040                           	opt stack 0
  6041  004C18                     _delay:
  6042                           	opt stack 17
  6043                           
  6044                           ;UT.c: 35: uint32_t to=millis();
  6045                           
  6046                           ;incstack = 0
  6047  004C18  ECFA  F02A         	call	_millis	;wreg free
  6048  004C1C  C060  F079         	movff	?_millis,delay@to
  6049  004C20  C061  F07A         	movff	?_millis+1,delay@to+1
  6050  004C24  C062  F07B         	movff	?_millis+2,delay@to+2
  6051  004C28  C063  F07C         	movff	?_millis+3,delay@to+3
  6052                           
  6053                           ;UT.c: 36: while ((millis()-to)<time)
  6054  004C2C  D002               	goto	l1051
  6055  004C2E                     
  6056                           ;UT.c: 37: {
  6057                           ;UT.c: 38: verificaUSB();
  6058  004C2E  EC4B  F02A         	call	_verificaUSB	;wreg free
  6059  004C32                     l1051:
  6060  004C32  C079  F071         	movff	delay@to,??_delay
  6061  004C36  C07A  F072         	movff	delay@to+1,??_delay+1
  6062  004C3A  C07B  F073         	movff	delay@to+2,??_delay+2
  6063  004C3E  C07C  F074         	movff	delay@to+3,??_delay+3
  6064  004C42  0100               	movlb	0	; () banked
  6065  004C44  1F71               	comf	??_delay& (0+255),f,b
  6066  004C46  1F72               	comf	(??_delay+1)& (0+255),f,b
  6067  004C48  1F73               	comf	(??_delay+2)& (0+255),f,b
  6068  004C4A  1F74               	comf	(??_delay+3)& (0+255),f,b
  6069  004C4C  2B71               	incf	??_delay& (0+255),f,b
  6070  004C4E  0E00               	movlw	0
  6071  004C50  2372               	addwfc	(??_delay+1)& (0+255),f,b
  6072  004C52  2373               	addwfc	(??_delay+2)& (0+255),f,b
  6073  004C54  2374               	addwfc	(??_delay+3)& (0+255),f,b
  6074  004C56  ECFA  F02A         	call	_millis	;wreg free
  6075  004C5A  0100               	movlb	0	; () banked
  6076  004C5C  5171               	movf	??_delay& (0+255),w,b
  6077  004C5E  2560               	addwf	?_millis& (0+255),w,b
  6078  004C60  6F75               	movwf	(??_delay+4)& (0+255),b
  6079  004C62  5172               	movf	(??_delay+1)& (0+255),w,b
  6080  004C64  2161               	addwfc	(?_millis+1)& (0+255),w,b
  6081  004C66  6F76               	movwf	(??_delay+5)& (0+255),b
  6082  004C68  5173               	movf	(??_delay+2)& (0+255),w,b
  6083  004C6A  2162               	addwfc	(?_millis+2)& (0+255),w,b
  6084  004C6C  6F77               	movwf	(??_delay+6)& (0+255),b
  6085  004C6E  5174               	movf	(??_delay+3)& (0+255),w,b
  6086  004C70  2163               	addwfc	(?_millis+3)& (0+255),w,b
  6087  004C72  6F78               	movwf	(??_delay+7)& (0+255),b
  6088  004C74  516D               	movf	delay@time& (0+255),w,b
  6089  004C76  5D75               	subwf	(??_delay+4)& (0+255),w,b
  6090  004C78  516E               	movf	(delay@time+1)& (0+255),w,b
  6091  004C7A  5976               	subwfb	(??_delay+5)& (0+255),w,b
  6092  004C7C  516F               	movf	(delay@time+2)& (0+255),w,b
  6093  004C7E  5977               	subwfb	(??_delay+6)& (0+255),w,b
  6094  004C80  5170               	movf	(delay@time+3)& (0+255),w,b
  6095  004C82  5978               	subwfb	(??_delay+7)& (0+255),w,b
  6096  004C84  B0D8               	btfsc	status,0,c
  6097  004C86  0012               	return	
  6098  004C88  D7D2               	goto	l1052
  6099  004C8A                     __end_of_delay:
  6100                           	opt stack 0
  6101                           tblptru	equ	0xFF8
  6102                           tblptrh	equ	0xFF7
  6103                           tblptrl	equ	0xFF6
  6104                           tablat	equ	0xFF5
  6105                           intcon	equ	0xFF2
  6106                           postinc0	equ	0xFEE
  6107                           wreg	equ	0xFE8
  6108                           postdec1	equ	0xFE5
  6109                           fsr1l	equ	0xFE1
  6110                           indf2	equ	0xFDF
  6111                           fsr2h	equ	0xFDA
  6112                           fsr2l	equ	0xFD9
  6113                           status	equ	0xFD8
  6114                           
  6115 ;; *************** function _verificaUSB *****************
  6116 ;; Defined at:
  6117 ;;		line 13 in file "UT.c"
  6118 ;; Parameters:    Size  Location     Type
  6119 ;;		None
  6120 ;; Auto vars:     Size  Location     Type
  6121 ;;		None
  6122 ;; Return value:  Size  Location     Type
  6123 ;;                  1    wreg      unsigned char 
  6124 ;; Registers used:
  6125 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6126 ;; Tracked objects:
  6127 ;;		On entry : 0/0
  6128 ;;		On exit  : 0/0
  6129 ;;		Unchanged: 0/0
  6130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6131 ;;      Params:         0       0       0       0       0       0       0       0       0
  6132 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6133 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6134 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6135 ;;Total ram usage:        0 bytes
  6136 ;; Hardware stack levels used:    1
  6137 ;; Hardware stack levels required when called:   12
  6138 ;; This function calls:
  6139 ;;		_CDCTxService
  6140 ;;		_USBDeviceAttach
  6141 ;;		_USBDeviceDetach
  6142 ;; This function is called by:
  6143 ;;		_delay
  6144 ;;		_main
  6145 ;; This function uses a non-reentrant model
  6146 ;;
  6147                           
  6148                           	psect	text11
  6149  005496                     __ptext11:
  6150                           	opt stack 0
  6151  005496                     _verificaUSB:
  6152                           	opt stack 18
  6153                           
  6154                           ;UT.c: 15: if ((USBDeviceState == DETACHED_STATE) && (PORTCbits.RC2 == 1))
  6155                           
  6156                           ; BSR set to: 0
  6157                           ;incstack = 0
  6158  005496  5059               	movf	_USBDeviceState,w,c	;volatile
  6159  005498  B4D8               	btfsc	status,2,c
  6160  00549A  A482               	btfss	3970,2,c	;volatile
  6161  00549C  D003               	goto	l1042
  6162                           
  6163                           ;UT.c: 16: {
  6164                           ;UT.c: 17: USBDeviceAttach();
  6165  00549E  EC31  F02A         	call	_USBDeviceAttach	;wreg free
  6166                           
  6167                           ;UT.c: 18: }
  6168  0054A2  D006               	goto	l1044
  6169  0054A4                     l1042:
  6170                           
  6171                           ;UT.c: 19: else if ((USBDeviceState == ATTACHED_STATE) && (PORTCbits.RC2 != 1))
  6172  0054A4  0459               	decf	_USBDeviceState,w,c	;volatile
  6173  0054A6  B4D8               	btfsc	status,2,c
  6174  0054A8  B482               	btfsc	3970,2,c	;volatile
  6175  0054AA  D002               	goto	l1044
  6176                           
  6177                           ;UT.c: 20: {
  6178                           ;UT.c: 21: USBDeviceDetach();
  6179  0054AC  EC71  F02B         	call	_USBDeviceDetach	;wreg free
  6180  0054B0                     l1044:
  6181                           
  6182                           ;UT.c: 22: }
  6183                           ;UT.c: 24: if ((USBDeviceState < CONFIGURED_STATE) || (UCONbits.SUSPND))
  6184  0054B0  0E1F               	movlw	31
  6185  0054B2  6459               	cpfsgt	_USBDeviceState,c	;volatile
  6186  0054B4  D002               	goto	u7930
  6187  0054B6  A26D               	btfss	3949,1,c	;volatile
  6188  0054B8  D002               	goto	l1045
  6189  0054BA                     u7930:
  6190                           
  6191                           ;UT.c: 25: {
  6192                           ;UT.c: 26: return 0;
  6193  0054BA  0E00               	movlw	0
  6194  0054BC  0012               	return	
  6195  0054BE                     l1045:
  6196                           
  6197                           ;UT.c: 27: }
  6198                           ;UT.c: 29: CDCTxService();
  6199  0054BE  EC33  F017         	call	_CDCTxService	;wreg free
  6200                           
  6201                           ;UT.c: 30: return 1;
  6202  0054C2  0E01               	movlw	1
  6203  0054C4  0012               	return	
  6204  0054C6                     __end_of_verificaUSB:
  6205                           	opt stack 0
  6206                           tblptru	equ	0xFF8
  6207                           tblptrh	equ	0xFF7
  6208                           tblptrl	equ	0xFF6
  6209                           tablat	equ	0xFF5
  6210                           intcon	equ	0xFF2
  6211                           postinc0	equ	0xFEE
  6212                           wreg	equ	0xFE8
  6213                           postdec1	equ	0xFE5
  6214                           fsr1l	equ	0xFE1
  6215                           indf2	equ	0xFDF
  6216                           fsr2h	equ	0xFDA
  6217                           fsr2l	equ	0xFD9
  6218                           status	equ	0xFD8
  6219                           
  6220 ;; *************** function _USBDeviceDetach *****************
  6221 ;; Defined at:
  6222 ;;		line 1247 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
  6223 ;; Parameters:    Size  Location     Type
  6224 ;;		None
  6225 ;; Auto vars:     Size  Location     Type
  6226 ;;		None
  6227 ;; Return value:  Size  Location     Type
  6228 ;;                  1    wreg      void 
  6229 ;; Registers used:
  6230 ;;		wreg, status,2
  6231 ;; Tracked objects:
  6232 ;;		On entry : 0/0
  6233 ;;		On exit  : 0/0
  6234 ;;		Unchanged: 0/0
  6235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6236 ;;      Params:         0       0       0       0       0       0       0       0       0
  6237 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6238 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6239 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6240 ;;Total ram usage:        0 bytes
  6241 ;; Hardware stack levels used:    1
  6242 ;; Hardware stack levels required when called:   10
  6243 ;; This function calls:
  6244 ;;		Nothing
  6245 ;; This function is called by:
  6246 ;;		_verificaUSB
  6247 ;; This function uses a non-reentrant model
  6248 ;;
  6249                           
  6250                           	psect	text12
  6251  0056E2                     __ptext12:
  6252                           	opt stack 0
  6253  0056E2                     _USBDeviceDetach:
  6254                           	opt stack 19
  6255                           
  6256                           ;usb_device.c: 1255: {
  6257                           ;usb_device.c: 1257: UCON = 0;
  6258                           
  6259                           ;incstack = 0
  6260  0056E2  0E00               	movlw	0
  6261  0056E4  6E6D               	movwf	3949,c	;volatile
  6262                           
  6263                           ;usb_device.c: 1260: UIE = 0;
  6264  0056E6  0E00               	movlw	0
  6265  0056E8  6E69               	movwf	3945,c	;volatile
  6266                           
  6267                           ;usb_device.c: 1263: USBDeviceState = DETACHED_STATE;
  6268  0056EA  0E00               	movlw	0
  6269  0056EC  6E59               	movwf	_USBDeviceState,c	;volatile
  6270  0056EE  0012               	return	
  6271  0056F0                     __end_of_USBDeviceDetach:
  6272                           	opt stack 0
  6273                           tblptru	equ	0xFF8
  6274                           tblptrh	equ	0xFF7
  6275                           tblptrl	equ	0xFF6
  6276                           tablat	equ	0xFF5
  6277                           intcon	equ	0xFF2
  6278                           postinc0	equ	0xFEE
  6279                           wreg	equ	0xFE8
  6280                           postdec1	equ	0xFE5
  6281                           fsr1l	equ	0xFE1
  6282                           indf2	equ	0xFDF
  6283                           fsr2h	equ	0xFDA
  6284                           fsr2l	equ	0xFD9
  6285                           status	equ	0xFD8
  6286                           
  6287 ;; *************** function _USBDeviceAttach *****************
  6288 ;; Defined at:
  6289 ;;		line 1352 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
  6290 ;; Parameters:    Size  Location     Type
  6291 ;;		None
  6292 ;; Auto vars:     Size  Location     Type
  6293 ;;		None
  6294 ;; Return value:  Size  Location     Type
  6295 ;;                  1    wreg      void 
  6296 ;; Registers used:
  6297 ;;		wreg, status,2
  6298 ;; Tracked objects:
  6299 ;;		On entry : 0/0
  6300 ;;		On exit  : 0/0
  6301 ;;		Unchanged: 0/0
  6302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6303 ;;      Params:         0       0       0       0       0       0       0       0       0
  6304 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6305 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6306 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6307 ;;Total ram usage:        0 bytes
  6308 ;; Hardware stack levels used:    1
  6309 ;; Hardware stack levels required when called:   10
  6310 ;; This function calls:
  6311 ;;		Nothing
  6312 ;; This function is called by:
  6313 ;;		_verificaUSB
  6314 ;; This function uses a non-reentrant model
  6315 ;;
  6316                           
  6317                           	psect	text13
  6318  005462                     __ptext13:
  6319                           	opt stack 0
  6320  005462                     _USBDeviceAttach:
  6321                           	opt stack 19
  6322                           
  6323                           ;usb_device.c: 1355: if(USBDeviceState == DETACHED_STATE)
  6324                           
  6325                           ;incstack = 0
  6326  005462  5059               	movf	_USBDeviceState,w,c	;volatile
  6327  005464  A4D8               	btfss	status,2,c
  6328  005466  0012               	return	
  6329                           
  6330                           ;usb_device.c: 1356: {
  6331                           ;usb_device.c: 1357: if(PORTCbits.RC2 == 1)
  6332  005468  A482               	btfss	3970,2,c	;volatile
  6333  00546A  0012               	return	
  6334                           
  6335                           ;usb_device.c: 1358: {
  6336                           ;usb_device.c: 1360: UCON = 0;
  6337  00546C  0E00               	movlw	0
  6338  00546E  6E6D               	movwf	3949,c	;volatile
  6339                           
  6340                           ;usb_device.c: 1363: UIE = 0;
  6341  005470  0E00               	movlw	0
  6342  005472  6E69               	movwf	3945,c	;volatile
  6343                           
  6344                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
  6345  005474  0E16               	movlw	22
  6346  005476  6E6F               	movwf	3951,c	;volatile
  6347  005478  0E9F               	movlw	159
  6348  00547A  6E6B               	movwf	3947,c	;volatile
  6349  00547C  0E7B               	movlw	123
  6350  00547E  6E69               	movwf	3945,c	;volatile
  6351                           
  6352                           ;usb_device.c: 1369: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
  6353  005480  8ED0               	bsf	4048,7,c	;volatile
  6354  005482  8AA2               	bsf	4002,5,c	;volatile
  6355  005484  8AA0               	bsf	4000,5,c	;volatile
  6356  005486  8EF2               	bsf	intcon,7,c	;volatile
  6357                           
  6358                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  6359  005488  D001               	goto	l459
  6360  00548A                     l460:
  6361  00548A  866D               	bsf	3949,3,c	;volatile
  6362  00548C                     l459:
  6363  00548C  A66D               	btfss	3949,3,c	;volatile
  6364  00548E  D7FD               	goto	l460
  6365                           
  6366                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
  6367  005490  0E01               	movlw	1
  6368  005492  6E59               	movwf	_USBDeviceState,c	;volatile
  6369  005494  0012               	return	
  6370  005496                     __end_of_USBDeviceAttach:
  6371                           	opt stack 0
  6372                           tblptru	equ	0xFF8
  6373                           tblptrh	equ	0xFF7
  6374                           tblptrl	equ	0xFF6
  6375                           tablat	equ	0xFF5
  6376                           intcon	equ	0xFF2
  6377                           postinc0	equ	0xFEE
  6378                           wreg	equ	0xFE8
  6379                           postdec1	equ	0xFE5
  6380                           fsr1l	equ	0xFE1
  6381                           indf2	equ	0xFDF
  6382                           fsr2h	equ	0xFDA
  6383                           fsr2l	equ	0xFD9
  6384                           status	equ	0xFD8
  6385                           
  6386 ;; *************** function _CDCTxService *****************
  6387 ;; Defined at:
  6388 ;;		line 836 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device_cdc.c"
  6389 ;; Parameters:    Size  Location     Type
  6390 ;;		None
  6391 ;; Auto vars:     Size  Location     Type
  6392 ;;  byte_to_send    1   12[BANK0 ] unsigned char 
  6393 ;;  i               1   11[BANK0 ] unsigned char 
  6394 ;; Return value:  Size  Location     Type
  6395 ;;                  1    wreg      void 
  6396 ;; Registers used:
  6397 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6398 ;; Tracked objects:
  6399 ;;		On entry : 0/0
  6400 ;;		On exit  : 0/0
  6401 ;;		Unchanged: 0/0
  6402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6403 ;;      Params:         0       0       0       0       0       0       0       0       0
  6404 ;;      Locals:         0       2       0       0       0       0       0       0       0
  6405 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6406 ;;      Totals:         0       2       0       0       0       0       0       0       0
  6407 ;;Total ram usage:        2 bytes
  6408 ;; Hardware stack levels used:    1
  6409 ;; Hardware stack levels required when called:   11
  6410 ;; This function calls:
  6411 ;;		_USBTransferOnePacket
  6412 ;; This function is called by:
  6413 ;;		_verificaUSB
  6414 ;; This function uses a non-reentrant model
  6415 ;;
  6416                           
  6417                           	psect	text14
  6418  002E66                     __ptext14:
  6419                           	opt stack 0
  6420  002E66                     _CDCTxService:
  6421                           	opt stack 18
  6422                           
  6423                           ;usb_device_cdc.c: 838: uint8_t byte_to_send;
  6424                           ;usb_device_cdc.c: 839: uint8_t i;
  6425                           ;usb_device_cdc.c: 841: {PIE2bits.USBIE = 0;};
  6426                           
  6427                           ;incstack = 0
  6428  002E66  9AA0               	bcf	4000,5,c	;volatile
  6429                           
  6430                           ;usb_device_cdc.c: 843: {};
  6431                           ;usb_device_cdc.c: 845: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
  6432  002E68  0102               	movlb	2	; () banked
  6433  002E6A  51D8               	movf	_CDCDataInHandle& (0+255),w,b
  6434  002E6C  11D9               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
  6435  002E6E  B4D8               	btfsc	status,2,c
  6436  002E70  D008               	goto	l852
  6437                           
  6438                           ; BSR set to: 2
  6439  002E72  C2D8  FFD9         	movff	_CDCDataInHandle,fsr2l
  6440  002E76  C2D9  FFDA         	movff	_CDCDataInHandle+1,fsr2h
  6441  002E7A  AEDF               	btfss	indf2,7,c
  6442  002E7C  D002               	goto	l852
  6443                           
  6444                           ; BSR set to: 2
  6445                           ;usb_device_cdc.c: 846: {
  6446                           ;usb_device_cdc.c: 847: {PIE2bits.USBIE = 1;};
  6447  002E7E  8AA0               	bsf	4000,5,c	;volatile
  6448                           
  6449                           ;usb_device_cdc.c: 848: return;
  6450  002E80  0012               	return	
  6451  002E82                     l852:
  6452                           
  6453                           ; BSR set to: 2
  6454                           ;usb_device_cdc.c: 849: }
  6455                           ;usb_device_cdc.c: 856: if(cdc_trf_state == 3)
  6456                           
  6457                           ; BSR set to: 2
  6458  002E82  0E03               	movlw	3
  6459  002E84  19E7               	xorwf	_cdc_trf_state& (0+255),w,b
  6460  002E86  A4D8               	btfss	status,2,c
  6461  002E88  D002               	goto	l854
  6462                           
  6463                           ; BSR set to: 2
  6464                           ;usb_device_cdc.c: 857: cdc_trf_state = 0;
  6465  002E8A  0E00               	movlw	0
  6466  002E8C  6FE7               	movwf	_cdc_trf_state& (0+255),b
  6467  002E8E                     l854:
  6468                           
  6469                           ; BSR set to: 2
  6470                           ;usb_device_cdc.c: 862: if(cdc_trf_state == 0)
  6471  002E8E  51E7               	movf	_cdc_trf_state& (0+255),w,b
  6472  002E90  A4D8               	btfss	status,2,c
  6473  002E92  D002               	goto	l855
  6474                           
  6475                           ; BSR set to: 2
  6476                           ;usb_device_cdc.c: 863: {
  6477                           ;usb_device_cdc.c: 864: {PIE2bits.USBIE = 1;};
  6478  002E94  8AA0               	bsf	4000,5,c	;volatile
  6479                           
  6480                           ;usb_device_cdc.c: 865: return;
  6481  002E96  0012               	return	
  6482  002E98                     l855:
  6483                           
  6484                           ; BSR set to: 2
  6485                           ;usb_device_cdc.c: 866: }
  6486                           ;usb_device_cdc.c: 871: if(cdc_trf_state == 2)
  6487                           
  6488                           ; BSR set to: 2
  6489  002E98  0E02               	movlw	2
  6490  002E9A  19E7               	xorwf	_cdc_trf_state& (0+255),w,b
  6491  002E9C  A4D8               	btfss	status,2,c
  6492  002E9E  D014               	goto	l856
  6493                           
  6494                           ; BSR set to: 2
  6495                           ;usb_device_cdc.c: 872: {
  6496                           ;usb_device_cdc.c: 873: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
  6497  002EA0  0E01               	movlw	1
  6498  002EA2  0100               	movlb	0	; () banked
  6499  002EA4  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
  6500  002EA6  0E00               	movlw	0
  6501  002EA8  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
  6502  002EAA  0E00               	movlw	0
  6503  002EAC  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  6504  002EAE  0E00               	movlw	0
  6505  002EB0  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
  6506  002EB2  0E02               	movlw	2
  6507  002EB4  EC9F  F01A         	call	_USBTransferOnePacket
  6508  002EB8  C060  F2D8         	movff	?_USBTransferOnePacket,_CDCDataInHandle
  6509  002EBC  C061  F2D9         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
  6510                           
  6511                           ;usb_device_cdc.c: 875: cdc_trf_state = 3;
  6512  002EC0  0E03               	movlw	3
  6513  002EC2  0102               	movlb	2	; () banked
  6514  002EC4  6FE7               	movwf	_cdc_trf_state& (0+255),b
  6515                           
  6516                           ;usb_device_cdc.c: 876: }
  6517  002EC6  D064               	goto	l858
  6518  002EC8                     l856:
  6519                           
  6520                           ; BSR set to: 2
  6521                           ;usb_device_cdc.c: 877: else if(cdc_trf_state == 1)
  6522                           
  6523                           ; BSR set to: 2
  6524  002EC8  05E7               	decf	_cdc_trf_state& (0+255),w,b
  6525  002ECA  A4D8               	btfss	status,2,c
  6526  002ECC  D061               	goto	l858
  6527                           
  6528                           ; BSR set to: 2
  6529                           ;usb_device_cdc.c: 878: {
  6530                           ;usb_device_cdc.c: 882: if(cdc_tx_len > sizeof(cdc_data_tx))
  6531  002ECE  0E40               	movlw	64
  6532  002ED0  6452               	cpfsgt	_cdc_tx_len,c
  6533  002ED2  D004               	goto	l859
  6534                           
  6535                           ; BSR set to: 2
  6536                           ;usb_device_cdc.c: 883: byte_to_send = sizeof(cdc_data_tx);
  6537  002ED4  0E40               	movlw	64
  6538  002ED6  0100               	movlb	0	; () banked
  6539  002ED8  6F6C               	movwf	CDCTxService@byte_to_send& (0+255),b
  6540  002EDA  D002               	goto	l860
  6541  002EDC                     l859:
  6542                           
  6543                           ; BSR set to: 2
  6544                           ;usb_device_cdc.c: 884: else
  6545                           ;usb_device_cdc.c: 885: byte_to_send = cdc_tx_len;
  6546  002EDC  C052  F06C         	movff	_cdc_tx_len,CDCTxService@byte_to_send
  6547  002EE0                     l860:
  6548                           
  6549                           ;usb_device_cdc.c: 890: cdc_tx_len = cdc_tx_len - byte_to_send;
  6550                           
  6551                           ; BSR set to: 2
  6552  002EE0  0100               	movlb	0	; () banked
  6553  002EE2  516C               	movf	CDCTxService@byte_to_send& (0+255),w,b
  6554  002EE4  0800               	sublw	0
  6555  002EE6  2452               	addwf	_cdc_tx_len,w,c
  6556  002EE8  6E52               	movwf	_cdc_tx_len,c
  6557                           
  6558                           ;usb_device_cdc.c: 892: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
  6559  002EEA  0E00               	movlw	0
  6560  002EEC  0103               	movlb	3	; () banked
  6561  002EEE  6F46               	movwf	_pCDCDst& (0+255),b
  6562  002EF0  0E05               	movlw	5
  6563  002EF2  6F47               	movwf	(_pCDCDst+1)& (0+255),b
  6564                           
  6565                           ; BSR set to: 3
  6566                           ;usb_device_cdc.c: 894: i = byte_to_send;
  6567  002EF4  C06C  F06B         	movff	CDCTxService@byte_to_send,CDCTxService@i
  6568                           
  6569                           ; BSR set to: 3
  6570                           ;usb_device_cdc.c: 895: if(cdc_mem_type == 0x00)
  6571  002EF8  0102               	movlb	2	; () banked
  6572  002EFA  51E6               	movf	_cdc_mem_type& (0+255),w,b
  6573  002EFC  B4D8               	btfsc	status,2,c
  6574  002EFE  D012               	goto	l862
  6575  002F00  D027               	goto	l866
  6576  002F02                     
  6577                           ;usb_device_cdc.c: 898: {
  6578                           ;usb_device_cdc.c: 899: *pCDCDst.bRam = *pCDCSrc.bRom;
  6579                           
  6580                           ; BSR set to: 2
  6581  002F02  C349  FFD9         	movff	_pCDCSrc,fsr2l
  6582  002F06  C34A  FFDA         	movff	_pCDCSrc+1,fsr2h
  6583  002F0A  C346  FFE1         	movff	_pCDCDst,fsr1l
  6584  002F0E  C347  FFE2         	movff	_pCDCDst+1,fsr1h
  6585  002F12  CFDF FFE7          	movff	indf2,indf1
  6586                           
  6587                           ;usb_device_cdc.c: 900: pCDCDst.bRam++;
  6588  002F16  0103               	movlb	3	; () banked
  6589  002F18  4B46               	infsnz	_pCDCDst& (0+255),f,b
  6590  002F1A  2B47               	incf	(_pCDCDst+1)& (0+255),f,b
  6591                           
  6592                           ; BSR set to: 3
  6593                           ;usb_device_cdc.c: 901: pCDCSrc.bRom++;
  6594  002F1C  4B49               	infsnz	_pCDCSrc& (0+255),f,b
  6595  002F1E  2B4A               	incf	(_pCDCSrc+1)& (0+255),f,b
  6596                           
  6597                           ; BSR set to: 3
  6598                           ;usb_device_cdc.c: 902: i--;
  6599  002F20  0100               	movlb	0	; () banked
  6600  002F22  076B               	decf	CDCTxService@i& (0+255),f,b
  6601  002F24                     l862:
  6602                           
  6603                           ; BSR set to: 0
  6604  002F24  0100               	movlb	0	; () banked
  6605  002F26  516B               	movf	CDCTxService@i& (0+255),w,b
  6606  002F28  B4D8               	btfsc	status,2,c
  6607  002F2A  D016               	goto	u7240
  6608  002F2C  D7EA               	goto	l863
  6609  002F2E                     
  6610                           ; BSR set to: 0
  6611                           ;usb_device_cdc.c: 908: {
  6612                           ;usb_device_cdc.c: 909: *pCDCDst.bRam = *pCDCSrc.bRam;
  6613                           
  6614                           ; BSR set to: 0
  6615  002F2E  C349  FFD9         	movff	_pCDCSrc,fsr2l
  6616  002F32  C34A  FFDA         	movff	_pCDCSrc+1,fsr2h
  6617  002F36  C346  FFE1         	movff	_pCDCDst,fsr1l
  6618  002F3A  C347  FFE2         	movff	_pCDCDst+1,fsr1h
  6619  002F3E  CFDF FFE7          	movff	indf2,indf1
  6620                           
  6621                           ; BSR set to: 0
  6622                           ;usb_device_cdc.c: 910: pCDCDst.bRam++;
  6623  002F42  0103               	movlb	3	; () banked
  6624  002F44  4B46               	infsnz	_pCDCDst& (0+255),f,b
  6625  002F46  2B47               	incf	(_pCDCDst+1)& (0+255),f,b
  6626                           
  6627                           ; BSR set to: 3
  6628                           ;usb_device_cdc.c: 911: pCDCSrc.bRam++;
  6629  002F48  4B49               	infsnz	_pCDCSrc& (0+255),f,b
  6630  002F4A  2B4A               	incf	(_pCDCSrc+1)& (0+255),f,b
  6631                           
  6632                           ; BSR set to: 3
  6633                           ;usb_device_cdc.c: 912: i--;
  6634  002F4C  0100               	movlb	0	; () banked
  6635  002F4E  076B               	decf	CDCTxService@i& (0+255),f,b
  6636  002F50                     l866:
  6637                           
  6638                           ; BSR set to: 0
  6639  002F50  0100               	movlb	0	; () banked
  6640  002F52  516B               	movf	CDCTxService@i& (0+255),w,b
  6641  002F54  A4D8               	btfss	status,2,c
  6642  002F56  D7EB               	goto	l867
  6643  002F58                     u7240:
  6644                           
  6645                           ; BSR set to: 0
  6646                           ;usb_device_cdc.c: 913: }
  6647                           ;usb_device_cdc.c: 914: }
  6648                           ;usb_device_cdc.c: 920: if(cdc_tx_len == 0)
  6649                           
  6650                           ; BSR set to: 0
  6651                           
  6652                           ; BSR set to: 0
  6653  002F58  5052               	movf	_cdc_tx_len,w,c
  6654  002F5A  A4D8               	btfss	status,2,c
  6655  002F5C  D009               	goto	l871
  6656                           
  6657                           ; BSR set to: 0
  6658                           ;usb_device_cdc.c: 921: {
  6659                           ;usb_device_cdc.c: 922: if(byte_to_send == 64)
  6660  002F5E  0E40               	movlw	64
  6661  002F60  196C               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
  6662  002F62  A4D8               	btfss	status,2,c
  6663  002F64  D002               	goto	l870
  6664                           
  6665                           ; BSR set to: 0
  6666                           ;usb_device_cdc.c: 923: cdc_trf_state = 2;
  6667  002F66  0E02               	movlw	2
  6668  002F68  D001               	goto	L1
  6669  002F6A                     l870:
  6670                           
  6671                           ;usb_device_cdc.c: 924: else
  6672                           ;usb_device_cdc.c: 925: cdc_trf_state = 3;
  6673                           
  6674                           ; BSR set to: 2
  6675  002F6A  0E03               	movlw	3
  6676  002F6C                     L1:
  6677  002F6C  0102               	movlb	2	; () banked
  6678  002F6E  6FE7               	movwf	_cdc_trf_state& (0+255),b
  6679  002F70                     l871:
  6680                           
  6681                           ;usb_device_cdc.c: 926: }
  6682                           ;usb_device_cdc.c: 927: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
  6683                           
  6684                           ; BSR set to: 2
  6685                           
  6686                           ; BSR set to: 2
  6687  002F70  0E01               	movlw	1
  6688  002F72  0100               	movlb	0	; () banked
  6689  002F74  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
  6690  002F76  0E00               	movlw	0
  6691  002F78  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
  6692  002F7A  0E05               	movlw	5
  6693  002F7C  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  6694  002F7E  C06C  F063         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
  6695  002F82  0E02               	movlw	2
  6696  002F84  EC9F  F01A         	call	_USBTransferOnePacket
  6697  002F88  C060  F2D8         	movff	?_USBTransferOnePacket,_CDCDataInHandle
  6698  002F8C  C061  F2D9         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
  6699  002F90                     l858:
  6700                           
  6701                           ;usb_device_cdc.c: 929: }
  6702                           ;usb_device_cdc.c: 931: {PIE2bits.USBIE = 1;};
  6703  002F90  8AA0               	bsf	4000,5,c	;volatile
  6704  002F92  0012               	return		;funcret
  6705  002F94                     __end_of_CDCTxService:
  6706                           	opt stack 0
  6707                           tblptru	equ	0xFF8
  6708                           tblptrh	equ	0xFF7
  6709                           tblptrl	equ	0xFF6
  6710                           tablat	equ	0xFF5
  6711                           intcon	equ	0xFF2
  6712                           postinc0	equ	0xFEE
  6713                           wreg	equ	0xFE8
  6714                           indf1	equ	0xFE7
  6715                           postdec1	equ	0xFE5
  6716                           fsr1h	equ	0xFE2
  6717                           fsr1l	equ	0xFE1
  6718                           indf2	equ	0xFDF
  6719                           fsr2h	equ	0xFDA
  6720                           fsr2l	equ	0xFD9
  6721                           status	equ	0xFD8
  6722                           
  6723 ;; *************** function _USBTransferOnePacket *****************
  6724 ;; Defined at:
  6725 ;;		line 995 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
  6726 ;; Parameters:    Size  Location     Type
  6727 ;;  ep              1    wreg     unsigned char 
  6728 ;;  dir             1    0[BANK0 ] unsigned char 
  6729 ;;  data            2    1[BANK0 ] PTR unsigned char 
  6730 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
  6731 ;;  len             1    3[BANK0 ] unsigned char 
  6732 ;; Auto vars:     Size  Location     Type
  6733 ;;  ep              1    8[BANK0 ] unsigned char 
  6734 ;;  handle          2    9[BANK0 ] PTR volatile struct __BD
  6735 ;;		 -> RAM(2047), NULL(0), BDT(48), 
  6736 ;; Return value:  Size  Location     Type
  6737 ;;                  2    0[BANK0 ] PTR void 
  6738 ;; Registers used:
  6739 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6740 ;; Tracked objects:
  6741 ;;		On entry : 0/0
  6742 ;;		On exit  : 0/0
  6743 ;;		Unchanged: 0/0
  6744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6745 ;;      Params:         0       4       0       0       0       0       0       0       0
  6746 ;;      Locals:         0       3       0       0       0       0       0       0       0
  6747 ;;      Temps:          0       4       0       0       0       0       0       0       0
  6748 ;;      Totals:         0      11       0       0       0       0       0       0       0
  6749 ;;Total ram usage:       11 bytes
  6750 ;; Hardware stack levels used:    1
  6751 ;; Hardware stack levels required when called:   10
  6752 ;; This function calls:
  6753 ;;		Nothing
  6754 ;; This function is called by:
  6755 ;;		_CDCTxService
  6756 ;;		_USBCDCEventHandler
  6757 ;;		_getsUSBUSART
  6758 ;; This function uses a non-reentrant model
  6759 ;;
  6760                           
  6761                           	psect	text15
  6762  00353E                     __ptext15:
  6763                           	opt stack 0
  6764  00353E                     _USBTransferOnePacket:
  6765                           	opt stack 18
  6766                           
  6767                           ;incstack = 0
  6768                           ;USBTransferOnePacket@ep stored from wreg
  6769  00353E  0100               	movlb	0	; () banked
  6770  003540  6F68               	movwf	USBTransferOnePacket@ep& (0+255),b
  6771                           
  6772                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
  6773                           ;usb_device.c: 1000: if(dir != 0)
  6774  003542  0100               	movlb	0	; () banked
  6775  003544  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
  6776  003546  B4D8               	btfsc	status,2,c
  6777  003548  D007               	goto	l437
  6778                           
  6779                           ; BSR set to: 0
  6780                           ;usb_device.c: 1001: {
  6781                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
  6782  00354A  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
  6783  00354C  0D02               	mullw	2
  6784  00354E  0E46               	movlw	low _pBDTEntryIn
  6785  003550  24F3               	addwf	prodl,w,c
  6786  003552  6ED9               	movwf	fsr2l,c
  6787  003554  0E00               	movlw	high _pBDTEntryIn
  6788  003556  D006               	goto	L2
  6789  003558                     l437:
  6790                           
  6791                           ; BSR set to: 0
  6792                           ;usb_device.c: 1005: else
  6793                           ;usb_device.c: 1006: {
  6794                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
  6795                           
  6796                           ; BSR set to: 0
  6797  003558  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
  6798  00355A  0D02               	mullw	2
  6799  00355C  0EC8               	movlw	low _pBDTEntryOut
  6800  00355E  24F3               	addwf	prodl,w,c
  6801  003560  6ED9               	movwf	fsr2l,c
  6802  003562  0E02               	movlw	high _pBDTEntryOut
  6803  003564                     L2:
  6804  003564  20F4               	addwfc	prodh,w,c
  6805  003566  6EDA               	movwf	fsr2h,c
  6806  003568  CFDE F069          	movff	postinc2,USBTransferOnePacket@handle
  6807  00356C  CFDD F06A          	movff	postdec2,USBTransferOnePacket@handle+1
  6808                           
  6809                           ; BSR set to: 0
  6810                           ;usb_device.c: 1009: }
  6811                           ;usb_device.c: 1013: if(handle == 0)
  6812                           
  6813                           ; BSR set to: 0
  6814  003570  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
  6815  003572  116A               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  6816  003574  A4D8               	btfss	status,2,c
  6817  003576  D005               	goto	l439
  6818                           
  6819                           ; BSR set to: 0
  6820                           ;usb_device.c: 1014: {
  6821                           ;usb_device.c: 1015: return 0;
  6822  003578  0E00               	movlw	0
  6823  00357A  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
  6824  00357C  0E00               	movlw	0
  6825  00357E  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
  6826                           
  6827                           ; BSR set to: 0
  6828  003580  0012               	return	
  6829  003582                     l439:
  6830                           
  6831                           ; BSR set to: 0
  6832                           ;usb_device.c: 1016: }
  6833                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
  6834                           
  6835                           ; BSR set to: 0
  6836  003582  EE20 F002          	lfsr	2,2
  6837  003586  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
  6838  003588  26D9               	addwf	fsr2l,f,c
  6839  00358A  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  6840  00358C  22DA               	addwfc	fsr2h,f,c
  6841  00358E  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
  6842  003592  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
  6843                           
  6844                           ;usb_device.c: 1030: handle->CNT = len;
  6845  003596  EE20 F001          	lfsr	2,1
  6846  00359A  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
  6847  00359C  26D9               	addwf	fsr2l,f,c
  6848  00359E  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  6849  0035A0  22DA               	addwfc	fsr2h,f,c
  6850  0035A2  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
  6851                           
  6852                           ; BSR set to: 0
  6853                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
  6854  0035A6  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  6855  0035AA  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  6856  0035AE  0E40               	movlw	64
  6857  0035B0  16DF               	andwf	indf2,f,c
  6858                           
  6859                           ; BSR set to: 0
  6860                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
  6861  0035B2  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  6862  0035B6  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  6863  0035BA  0E00               	movlw	0
  6864  0035BC  86DB               	bsf	plusw2,3,c
  6865                           
  6866                           ; BSR set to: 0
  6867                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
  6868  0035BE  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  6869  0035C2  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  6870  0035C6  0E00               	movlw	0
  6871  0035C8  8EDB               	bsf	plusw2,7,c
  6872                           
  6873                           ; BSR set to: 0
  6874                           ;usb_device.c: 1036: if(dir != 0)
  6875  0035CA  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
  6876  0035CC  B4D8               	btfsc	status,2,c
  6877  0035CE  D018               	goto	l441
  6878                           
  6879                           ; BSR set to: 0
  6880                           ;usb_device.c: 1037: {
  6881                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
  6882  0035D0  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
  6883  0035D2  0D02               	mullw	2
  6884  0035D4  0E46               	movlw	low _pBDTEntryIn
  6885  0035D6  24F3               	addwf	prodl,w,c
  6886  0035D8  6ED9               	movwf	fsr2l,c
  6887  0035DA  0E00               	movlw	high _pBDTEntryIn
  6888  0035DC  20F4               	addwfc	prodh,w,c
  6889  0035DE  6EDA               	movwf	fsr2h,c
  6890  0035E0  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
  6891  0035E4  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
  6892  0035E8  0E04               	movlw	4
  6893  0035EA  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
  6894  0035EC  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
  6895  0035EE  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
  6896  0035F0  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
  6897  0035F2  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
  6898  0035F4  0D02               	mullw	2
  6899  0035F6  0E46               	movlw	low _pBDTEntryIn
  6900  0035F8  24F3               	addwf	prodl,w,c
  6901  0035FA  6ED9               	movwf	fsr2l,c
  6902  0035FC  0E00               	movlw	high _pBDTEntryIn
  6903  0035FE  D017               	goto	L3
  6904  003600                     l441:
  6905                           
  6906                           ; BSR set to: 0
  6907                           ;usb_device.c: 1041: else
  6908                           ;usb_device.c: 1042: {
  6909                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
  6910                           
  6911                           ; BSR set to: 0
  6912  003600  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
  6913  003602  0D02               	mullw	2
  6914  003604  0EC8               	movlw	low _pBDTEntryOut
  6915  003606  24F3               	addwf	prodl,w,c
  6916  003608  6ED9               	movwf	fsr2l,c
  6917  00360A  0E02               	movlw	high _pBDTEntryOut
  6918  00360C  20F4               	addwfc	prodh,w,c
  6919  00360E  6EDA               	movwf	fsr2h,c
  6920  003610  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
  6921  003614  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
  6922  003618  0E04               	movlw	4
  6923  00361A  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
  6924  00361C  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
  6925  00361E  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
  6926  003620  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
  6927  003622  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
  6928  003624  0D02               	mullw	2
  6929  003626  0EC8               	movlw	low _pBDTEntryOut
  6930  003628  24F3               	addwf	prodl,w,c
  6931  00362A  6ED9               	movwf	fsr2l,c
  6932  00362C  0E02               	movlw	high _pBDTEntryOut
  6933  00362E                     L3:
  6934  00362E  20F4               	addwfc	prodh,w,c
  6935  003630  6EDA               	movwf	fsr2h,c
  6936  003632  C066  FFDE         	movff	??_USBTransferOnePacket+2,postinc2
  6937  003636  C067  FFDD         	movff	??_USBTransferOnePacket+3,postdec2
  6938                           
  6939                           ; BSR set to: 0
  6940                           ;usb_device.c: 1045: }
  6941                           ;usb_device.c: 1046: return (void*)handle;
  6942                           
  6943                           ; BSR set to: 0
  6944  00363A  C069  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
  6945  00363E  C06A  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
  6946  003642  0012               	return	
  6947  003644                     __end_of_USBTransferOnePacket:
  6948                           	opt stack 0
  6949                           tblptru	equ	0xFF8
  6950                           tblptrh	equ	0xFF7
  6951                           tblptrl	equ	0xFF6
  6952                           tablat	equ	0xFF5
  6953                           prodh	equ	0xFF4
  6954                           prodl	equ	0xFF3
  6955                           intcon	equ	0xFF2
  6956                           postinc0	equ	0xFEE
  6957                           wreg	equ	0xFE8
  6958                           indf1	equ	0xFE7
  6959                           postdec1	equ	0xFE5
  6960                           fsr1h	equ	0xFE2
  6961                           fsr1l	equ	0xFE1
  6962                           indf2	equ	0xFDF
  6963                           postinc2	equ	0xFDE
  6964                           postdec2	equ	0xFDD
  6965                           plusw2	equ	0xFDB
  6966                           fsr2h	equ	0xFDA
  6967                           fsr2l	equ	0xFD9
  6968                           status	equ	0xFD8
  6969                           
  6970 ;; *************** function _USBDeviceInit *****************
  6971 ;; Defined at:
  6972 ;;		line 277 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
  6973 ;; Parameters:    Size  Location     Type
  6974 ;;		None
  6975 ;; Auto vars:     Size  Location     Type
  6976 ;;  i               1    8[BANK0 ] unsigned char 
  6977 ;; Return value:  Size  Location     Type
  6978 ;;                  1    wreg      void 
  6979 ;; Registers used:
  6980 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6981 ;; Tracked objects:
  6982 ;;		On entry : 0/0
  6983 ;;		On exit  : 0/0
  6984 ;;		Unchanged: 0/0
  6985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6986 ;;      Params:         0       0       0       0       0       0       0       0       0
  6987 ;;      Locals:         0       1       0       0       0       0       0       0       0
  6988 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6989 ;;      Totals:         0       1       0       0       0       0       0       0       0
  6990 ;;Total ram usage:        1 bytes
  6991 ;; Hardware stack levels used:    1
  6992 ;; Hardware stack levels required when called:   11
  6993 ;; This function calls:
  6994 ;;		_memset
  6995 ;; This function is called by:
  6996 ;;		_main
  6997 ;; This function uses a non-reentrant model
  6998 ;;
  6999                           
  7000                           	psect	text16
  7001  002AAC                     __ptext16:
  7002                           	opt stack 0
  7003  002AAC                     _USBDeviceInit:
  7004                           	opt stack 19
  7005                           
  7006                           ;usb_device.c: 279: uint8_t i;
  7007                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
  7008                           
  7009                           ; BSR set to: 0
  7010                           ;incstack = 0
  7011  002AAC  9AA0               	bcf	4000,5,c	;volatile
  7012                           
  7013                           ;usb_device.c: 285: ;
  7014                           ;usb_device.c: 288: {UEIR = 0;};
  7015  002AAE  0E00               	movlw	0
  7016  002AB0  6E6A               	movwf	3946,c	;volatile
  7017                           
  7018                           ;usb_device.c: 291: {UIR = 0;};
  7019  002AB2  0E00               	movlw	0
  7020  002AB4  6E68               	movwf	3944,c	;volatile
  7021                           
  7022                           ;usb_device.c: 294: UEP0 = 0;
  7023  002AB6  0E00               	movlw	0
  7024  002AB8  6E70               	movwf	3952,c	;volatile
  7025                           
  7026                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
  7027  002ABA  0E71               	movlw	113
  7028  002ABC  0100               	movlb	0	; () banked
  7029  002ABE  6F60               	movwf	memset@p1& (0+255),b
  7030  002AC0  0E0F               	movlw	15
  7031  002AC2  6F61               	movwf	(memset@p1+1)& (0+255),b
  7032  002AC4  0E00               	movlw	0
  7033  002AC6  6F63               	movwf	(memset@c+1)& (0+255),b
  7034  002AC8  0E00               	movlw	0
  7035  002ACA  6F62               	movwf	memset@c& (0+255),b
  7036  002ACC  0E00               	movlw	0
  7037  002ACE  6F65               	movwf	(memset@n+1)& (0+255),b
  7038  002AD0  0E02               	movlw	2
  7039  002AD2  6F64               	movwf	memset@n& (0+255),b
  7040  002AD4  EC63  F02A         	call	_memset	;wreg free
  7041                           
  7042                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  7043  002AD8  0E16               	movlw	22
  7044  002ADA  6E6F               	movwf	3951,c	;volatile
  7045  002ADC  0E9F               	movlw	159
  7046  002ADE  6E6B               	movwf	3947,c	;volatile
  7047  002AE0  0E7B               	movlw	123
  7048  002AE2  6E69               	movwf	3945,c	;volatile
  7049                           
  7050                           ;usb_device.c: 301: ;
  7051                           ;usb_device.c: 304: ;
  7052                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  7053  002AE4  0E00               	movlw	0
  7054  002AE6  0100               	movlb	0	; () banked
  7055  002AE8  6F68               	movwf	USBDeviceInit@i& (0+255),b
  7056  002AEA                     l9910:
  7057                           
  7058                           ; BSR set to: 0
  7059  002AEA  0E0B               	movlw	11
  7060  002AEC  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
  7061  002AEE  D001               	goto	l398
  7062  002AF0  D00E               	goto	u9490
  7063  002AF2                     l398:
  7064                           
  7065                           ; BSR set to: 0
  7066                           ;usb_device.c: 308: {
  7067                           ;usb_device.c: 309: BDT[i].Val = 0x00;
  7068                           
  7069                           ; BSR set to: 0
  7070  002AF2  5168               	movf	USBDeviceInit@i& (0+255),w,b
  7071  002AF4  0D04               	mullw	4
  7072  002AF6  0E00               	movlw	0
  7073  002AF8  24F3               	addwf	prodl,w,c
  7074  002AFA  6ED9               	movwf	fsr2l,c
  7075  002AFC  0E04               	movlw	4
  7076  002AFE  20F4               	addwfc	prodh,w,c
  7077  002B00  6EDA               	movwf	fsr2h,c
  7078  002B02  6ADE               	clrf	postinc2,c
  7079  002B04  6ADE               	clrf	postinc2,c
  7080  002B06  6ADE               	clrf	postinc2,c
  7081  002B08  6ADD               	clrf	postdec2,c
  7082                           
  7083                           ; BSR set to: 0
  7084  002B0A  2B68               	incf	USBDeviceInit@i& (0+255),f,b
  7085  002B0C  D7EE               	goto	l9910
  7086  002B0E                     u9490:
  7087                           
  7088                           ; BSR set to: 0
  7089                           ;usb_device.c: 310: }
  7090                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
  7091  002B0E  8C6D               	bsf	3949,6,c	;volatile
  7092                           
  7093                           ; BSR set to: 0
  7094                           ;usb_device.c: 316: UADDR = 0x00;
  7095  002B10  0E00               	movlw	0
  7096  002B12  6E6E               	movwf	3950,c	;volatile
  7097                           
  7098                           ; BSR set to: 0
  7099                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
  7100  002B14  986D               	bcf	3949,4,c	;volatile
  7101                           
  7102                           ; BSR set to: 0
  7103                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
  7104  002B16  9C6D               	bcf	3949,6,c	;volatile
  7105  002B18                     
  7106                           ;usb_device.c: 326: {
  7107                           ;usb_device.c: 327: (UIR &= 0xF7);
  7108                           
  7109                           ; BSR set to: 0
  7110  002B18  9668               	bcf	3944,3,c	;volatile
  7111                           
  7112                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
  7113  002B1A  0E00               	movlw	0
  7114  002B1C  6E43               	movwf	_inPipes+3,c	;volatile
  7115                           
  7116                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
  7117  002B1E  0E00               	movlw	0
  7118  002B20  6E3B               	movwf	_outPipes+3,c	;volatile
  7119                           
  7120                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
  7121  002B22  0E00               	movlw	0
  7122  002B24  6E3D               	movwf	_outPipes+5,c	;volatile
  7123  002B26  0E00               	movlw	0
  7124  002B28  6E3C               	movwf	_outPipes+4,c	;volatile
  7125                           
  7126                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
  7127  002B2A  B668               	btfsc	3944,3,c	;volatile
  7128  002B2C  D7F5               	goto	l400
  7129                           
  7130                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
  7131  002B2E  0E01               	movlw	1
  7132  002B30  0101               	movlb	1	; () banked
  7133  002B32  6FF6               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  7134                           
  7135                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
  7136  002B34  0E01               	movlw	1
  7137  002B36  0102               	movlb	2	; () banked
  7138  002B38  6FEB               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
  7139                           
  7140                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
  7141  002B3A  0E00               	movlw	0
  7142  002B3C  6FEA               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
  7143                           
  7144                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
  7145  002B3E  0E00               	movlw	0
  7146  002B40  6FE9               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
  7147                           
  7148                           ;usb_device.c: 341: USBBusIsSuspended = 0;
  7149  002B42  0E00               	movlw	0
  7150  002B44  0101               	movlb	1	; () banked
  7151  002B46  6FF8               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
  7152                           
  7153                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
  7154  002B48  0E00               	movlw	0
  7155  002B4A  0100               	movlb	0	; () banked
  7156  002B4C  6F68               	movwf	USBDeviceInit@i& (0+255),b
  7157  002B4E                     l9938:
  7158                           
  7159                           ; BSR set to: 0
  7160  002B4E  0E02               	movlw	2
  7161  002B50  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
  7162  002B52  D001               	goto	l402
  7163  002B54  D02E               	goto	u9520
  7164  002B56                     l402:
  7165                           
  7166                           ; BSR set to: 0
  7167                           ;usb_device.c: 346: {
  7168                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
  7169                           
  7170                           ; BSR set to: 0
  7171  002B56  5168               	movf	USBDeviceInit@i& (0+255),w,b
  7172  002B58  0D02               	mullw	2
  7173  002B5A  0E46               	movlw	low _pBDTEntryIn
  7174  002B5C  24F3               	addwf	prodl,w,c
  7175  002B5E  6ED9               	movwf	fsr2l,c
  7176  002B60  0E00               	movlw	high _pBDTEntryIn
  7177  002B62  20F4               	addwfc	prodh,w,c
  7178  002B64  6EDA               	movwf	fsr2h,c
  7179  002B66  0E00               	movlw	0
  7180  002B68  6EDE               	movwf	postinc2,c
  7181  002B6A  0E00               	movlw	0
  7182  002B6C  6EDD               	movwf	postdec2,c
  7183                           
  7184                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
  7185  002B6E  5168               	movf	USBDeviceInit@i& (0+255),w,b
  7186  002B70  0D02               	mullw	2
  7187  002B72  0EC8               	movlw	low _pBDTEntryOut
  7188  002B74  24F3               	addwf	prodl,w,c
  7189  002B76  6ED9               	movwf	fsr2l,c
  7190  002B78  0E02               	movlw	high _pBDTEntryOut
  7191  002B7A  20F4               	addwfc	prodh,w,c
  7192  002B7C  6EDA               	movwf	fsr2h,c
  7193  002B7E  0E00               	movlw	0
  7194  002B80  6EDE               	movwf	postinc2,c
  7195  002B82  0E00               	movlw	0
  7196  002B84  6EDD               	movwf	postdec2,c
  7197                           
  7198                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
  7199  002B86  5168               	movf	USBDeviceInit@i& (0+255),w,b
  7200  002B88  0D01               	mullw	1
  7201  002B8A  0ED5               	movlw	low _ep_data_in
  7202  002B8C  24F3               	addwf	prodl,w,c
  7203  002B8E  6ED9               	movwf	fsr2l,c
  7204  002B90  0E02               	movlw	high _ep_data_in
  7205  002B92  20F4               	addwfc	prodh,w,c
  7206  002B94  6EDA               	movwf	fsr2h,c
  7207  002B96  0E00               	movlw	0
  7208  002B98  6EDF               	movwf	indf2,c
  7209                           
  7210                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
  7211  002B9A  5168               	movf	USBDeviceInit@i& (0+255),w,b
  7212  002B9C  0D01               	mullw	1
  7213  002B9E  0ED2               	movlw	low _ep_data_out
  7214  002BA0  24F3               	addwf	prodl,w,c
  7215  002BA2  6ED9               	movwf	fsr2l,c
  7216  002BA4  0E02               	movlw	high _ep_data_out
  7217  002BA6  20F4               	addwfc	prodh,w,c
  7218  002BA8  6EDA               	movwf	fsr2h,c
  7219  002BAA  0E00               	movlw	0
  7220  002BAC  6EDF               	movwf	indf2,c
  7221                           
  7222                           ; BSR set to: 0
  7223  002BAE  2B68               	incf	USBDeviceInit@i& (0+255),f,b
  7224  002BB0  D7CE               	goto	l9938
  7225  002BB2                     u9520:
  7226                           
  7227                           ; BSR set to: 0
  7228                           ;usb_device.c: 351: }
  7229                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  7230                           
  7231                           ; BSR set to: 0
  7232  002BB2  0E08               	movlw	8
  7233  002BB4  6E46               	movwf	_pBDTEntryIn,c
  7234  002BB6  0E04               	movlw	4
  7235  002BB8  6E47               	movwf	_pBDTEntryIn+1,c
  7236                           
  7237                           ; BSR set to: 0
  7238                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
  7239  002BBA  0E16               	movlw	22
  7240  002BBC  6E70               	movwf	3952,c	;volatile
  7241                           
  7242                           ; BSR set to: 0
  7243                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  7244  002BBE  0E04               	movlw	4
  7245  002BC0  0104               	movlb	4	; () banked
  7246  002BC2  6F03               	movwf	3,b	;volatile
  7247  002BC4  0E30               	movlw	48
  7248  002BC6  6F02               	movwf	2,b	;volatile
  7249                           
  7250                           ; BSR set to: 4
  7251                           ;usb_device.c: 359: BDT[0].CNT = 8;
  7252  002BC8  0E08               	movlw	8
  7253  002BCA  6F01               	movwf	1,b	;volatile
  7254                           
  7255                           ; BSR set to: 4
  7256                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
  7257  002BCC  0E04               	movlw	4
  7258  002BCE  6F00               	movwf	0,b	;volatile
  7259                           
  7260                           ; BSR set to: 4
  7261                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
  7262  002BD0  8F00               	bsf	0,7,b	;volatile
  7263                           
  7264                           ; BSR set to: 4
  7265                           ;usb_device.c: 364: USBActiveConfiguration = 0;
  7266  002BD2  0E00               	movlw	0
  7267  002BD4  6E5E               	movwf	_USBActiveConfiguration,c	;volatile
  7268                           
  7269                           ; BSR set to: 4
  7270                           ;usb_device.c: 366: USB1msTickCount = 0;
  7271  002BD6  0E00               	movlw	0
  7272  002BD8  0102               	movlb	2	; () banked
  7273  002BDA  6FCE               	movwf	_USB1msTickCount& (0+255),b	;volatile
  7274  002BDC  0E00               	movlw	0
  7275  002BDE  6FCF               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
  7276  002BE0  0E00               	movlw	0
  7277  002BE2  6FD0               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
  7278  002BE4  0E00               	movlw	0
  7279  002BE6  6FD1               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
  7280                           
  7281                           ; BSR set to: 2
  7282                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
  7283  002BE8  0E00               	movlw	0
  7284  002BEA  6FE8               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
  7285                           
  7286                           ; BSR set to: 2
  7287                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
  7288  002BEC  0E00               	movlw	0
  7289  002BEE  6E59               	movwf	_USBDeviceState,c	;volatile
  7290                           
  7291                           ; BSR set to: 2
  7292  002BF0  0012               	return		;funcret
  7293  002BF2                     __end_of_USBDeviceInit:
  7294                           	opt stack 0
  7295                           tblptru	equ	0xFF8
  7296                           tblptrh	equ	0xFF7
  7297                           tblptrl	equ	0xFF6
  7298                           tablat	equ	0xFF5
  7299                           prodh	equ	0xFF4
  7300                           prodl	equ	0xFF3
  7301                           intcon	equ	0xFF2
  7302                           postinc0	equ	0xFEE
  7303                           wreg	equ	0xFE8
  7304                           indf1	equ	0xFE7
  7305                           postdec1	equ	0xFE5
  7306                           fsr1h	equ	0xFE2
  7307                           fsr1l	equ	0xFE1
  7308                           indf2	equ	0xFDF
  7309                           postinc2	equ	0xFDE
  7310                           postdec2	equ	0xFDD
  7311                           plusw2	equ	0xFDB
  7312                           fsr2h	equ	0xFDA
  7313                           fsr2l	equ	0xFD9
  7314                           status	equ	0xFD8
  7315                           
  7316 ;; *************** function _memset *****************
  7317 ;; Defined at:
  7318 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\memset.c"
  7319 ;; Parameters:    Size  Location     Type
  7320 ;;  p1              2    0[BANK0 ] PTR void 
  7321 ;;		 -> frameBuffer(150), USBAlternateInterface(2), BDT(48), UEP1(1), 
  7322 ;;  c               2    2[BANK0 ] int 
  7323 ;;  n               2    4[BANK0 ] unsigned int 
  7324 ;; Auto vars:     Size  Location     Type
  7325 ;;  p               2    6[BANK0 ] PTR unsigned char 
  7326 ;;		 -> frameBuffer(150), USBAlternateInterface(2), BDT(48), UEP1(1), 
  7327 ;; Return value:  Size  Location     Type
  7328 ;;                  2    0[BANK0 ] PTR void 
  7329 ;; Registers used:
  7330 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7331 ;; Tracked objects:
  7332 ;;		On entry : 0/0
  7333 ;;		On exit  : 0/0
  7334 ;;		Unchanged: 0/0
  7335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7336 ;;      Params:         0       6       0       0       0       0       0       0       0
  7337 ;;      Locals:         0       2       0       0       0       0       0       0       0
  7338 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7339 ;;      Totals:         0       8       0       0       0       0       0       0       0
  7340 ;;Total ram usage:        8 bytes
  7341 ;; Hardware stack levels used:    1
  7342 ;; Hardware stack levels required when called:   10
  7343 ;; This function calls:
  7344 ;;		Nothing
  7345 ;; This function is called by:
  7346 ;;		_USBDeviceInit
  7347 ;;		_sendError
  7348 ;; This function uses a non-reentrant model
  7349 ;;
  7350                           
  7351                           	psect	text17
  7352  0054C6                     __ptext17:
  7353                           	opt stack 0
  7354  0054C6                     _memset:
  7355                           	opt stack 19
  7356                           
  7357                           ; BSR set to: 2
  7358                           ;incstack = 0
  7359  0054C6  C060  F066         	movff	memset@p1,memset@p
  7360  0054CA  C061  F067         	movff	memset@p1+1,memset@p+1
  7361  0054CE  D009               	goto	l3258
  7362  0054D0                     l8866:
  7363  0054D0  C066  FFD9         	movff	memset@p,fsr2l
  7364  0054D4  C067  FFDA         	movff	memset@p+1,fsr2h
  7365  0054D8  C062  FFDF         	movff	memset@c,indf2
  7366  0054DC  0100               	movlb	0	; () banked
  7367  0054DE  4B66               	infsnz	memset@p& (0+255),f,b
  7368  0054E0  2B67               	incf	(memset@p+1)& (0+255),f,b
  7369  0054E2                     l3258:
  7370                           
  7371                           ; BSR set to: 0
  7372  0054E2  0100               	movlb	0	; () banked
  7373  0054E4  0764               	decf	memset@n& (0+255),f,b
  7374  0054E6  A0D8               	btfss	status,0,c
  7375  0054E8  0765               	decf	(memset@n+1)& (0+255),f,b
  7376  0054EA  2964               	incf	memset@n& (0+255),w,b
  7377  0054EC  E1F1               	bnz	l8866
  7378  0054EE  2965               	incf	(memset@n+1)& (0+255),w,b
  7379  0054F0  B4D8               	btfsc	status,2,c
  7380  0054F2  0012               	return	
  7381  0054F4  D7ED               	goto	l3259
  7382  0054F6                     __end_of_memset:
  7383                           	opt stack 0
  7384                           tblptru	equ	0xFF8
  7385                           tblptrh	equ	0xFF7
  7386                           tblptrl	equ	0xFF6
  7387                           tablat	equ	0xFF5
  7388                           prodh	equ	0xFF4
  7389                           prodl	equ	0xFF3
  7390                           intcon	equ	0xFF2
  7391                           postinc0	equ	0xFEE
  7392                           wreg	equ	0xFE8
  7393                           indf1	equ	0xFE7
  7394                           postdec1	equ	0xFE5
  7395                           fsr1h	equ	0xFE2
  7396                           fsr1l	equ	0xFE1
  7397                           indf2	equ	0xFDF
  7398                           postinc2	equ	0xFDE
  7399                           postdec2	equ	0xFDD
  7400                           plusw2	equ	0xFDB
  7401                           fsr2h	equ	0xFDA
  7402                           fsr2l	equ	0xFD9
  7403                           status	equ	0xFD8
  7404                           
  7405 ;; *************** function _TxLoRaWan *****************
  7406 ;; Defined at:
  7407 ;;		line 173 in file "LoRaWanCore.c"
  7408 ;; Parameters:    Size  Location     Type
  7409 ;;  conf            1    wreg     unsigned char 
  7410 ;;  porta           1  145[BANK0 ] unsigned char 
  7411 ;;  data            2  146[BANK0 ] PTR const unsigned char 
  7412 ;;		 -> main@dadoPoco(22), 
  7413 ;;  tamData         1  148[BANK0 ] unsigned char 
  7414 ;; Auto vars:     Size  Location     Type
  7415 ;;  conf            1  232[BANK1 ] unsigned char 
  7416 ;;  status          1  233[BANK1 ] unsigned char 
  7417 ;;  i               1  238[BANK1 ] unsigned char 
  7418 ;;  comando       200   32[BANK1 ] unsigned char [200]
  7419 ;;  hex             4  234[BANK1 ] unsigned char [4]
  7420 ;; Return value:  Size  Location     Type
  7421 ;;                  1    wreg      unsigned char 
  7422 ;; Registers used:
  7423 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7424 ;; Tracked objects:
  7425 ;;		On entry : 0/0
  7426 ;;		On exit  : 0/0
  7427 ;;		Unchanged: 0/0
  7428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7429 ;;      Params:         0       4       0       0       0       0       0       0       0
  7430 ;;      Locals:         0       0     207       0       0       0       0       0       0
  7431 ;;      Temps:          0       1       0       0       0       0       0       0       0
  7432 ;;      Totals:         0       5     207       0       0       0       0       0       0
  7433 ;;Total ram usage:      212 bytes
  7434 ;; Hardware stack levels used:    1
  7435 ;; Hardware stack levels required when called:   14
  7436 ;; This function calls:
  7437 ;;		_JoinLoRaWan
  7438 ;;		_ResetModuloLoRaWan
  7439 ;;		_enviaComando
  7440 ;;		_parseLoRaWan
  7441 ;;		_retornaDado
  7442 ;;		_sprintf
  7443 ;;		_strcat
  7444 ;; This function is called by:
  7445 ;;		_main
  7446 ;; This function uses a non-reentrant model
  7447 ;;
  7448                           
  7449                           	psect	text18
  7450  001BE8                     __ptext18:
  7451                           	opt stack 0
  7452  001BE8                     _TxLoRaWan:
  7453                           	opt stack 16
  7454                           
  7455                           ; BSR set to: 0
  7456                           ;incstack = 0
  7457                           ;TxLoRaWan@conf stored from wreg
  7458  001BE8  0101               	movlb	1	; () banked
  7459  001BEA  6FE8               	movwf	TxLoRaWan@conf& (0+255),b
  7460                           
  7461                           ;LoRaWanCore.c: 175: char comando[200];
  7462                           ;LoRaWanCore.c: 176: char hex[4];
  7463                           ;LoRaWanCore.c: 178: if (conf)
  7464  001BEC  0101               	movlb	1	; () banked
  7465  001BEE  51E8               	movf	TxLoRaWan@conf& (0+255),w,b
  7466  001BF0  B4D8               	btfsc	status,2,c
  7467  001BF2  D013               	goto	l2312
  7468                           
  7469                           ; BSR set to: 1
  7470                           ;LoRaWanCore.c: 179: sprintf(comando, "%s %d ", MAC_TX_CNF, porta);
  7471  001BF4  0E20               	movlw	low TxLoRaWan@comando
  7472  001BF6  0100               	movlb	0	; () banked
  7473  001BF8  6FBF               	movwf	sprintf@sp& (0+255),b
  7474  001BFA  0E01               	movlw	high TxLoRaWan@comando
  7475  001BFC  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  7476  001BFE  0EBA               	movlw	low STR_36
  7477  001C00  6FC1               	movwf	sprintf@f& (0+255),b
  7478  001C02  0E7F               	movlw	high STR_36
  7479  001C04  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  7480  001C06  0EAE               	movlw	low _MAC_TX_CNF
  7481  001C08  6FC3               	movwf	(?_sprintf+4)& (0+255),b
  7482  001C0A  0E7D               	movlw	high _MAC_TX_CNF
  7483  001C0C  6FC4               	movwf	(?_sprintf+5)& (0+255),b
  7484  001C0E  C0F1  F0C5         	movff	TxLoRaWan@porta,?_sprintf+6
  7485  001C12  6BC6               	clrf	(?_sprintf+7)& (0+255),b
  7486  001C14  EC09  F000         	call	_sprintf	;wreg free
  7487  001C18  D012               	goto	l2313
  7488  001C1A                     l2312:
  7489                           
  7490                           ;LoRaWanCore.c: 180: else
  7491                           ;LoRaWanCore.c: 181: sprintf(comando, "%s %d ", MAC_TX_UNCNF, porta);
  7492  001C1A  0E20               	movlw	low TxLoRaWan@comando
  7493  001C1C  0100               	movlb	0	; () banked
  7494  001C1E  6FBF               	movwf	sprintf@sp& (0+255),b
  7495  001C20  0E01               	movlw	high TxLoRaWan@comando
  7496  001C22  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  7497  001C24  0EBA               	movlw	low STR_36
  7498  001C26  6FC1               	movwf	sprintf@f& (0+255),b
  7499  001C28  0E7F               	movlw	high STR_36
  7500  001C2A  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  7501  001C2C  0E8E               	movlw	low _MAC_TX_UNCNF
  7502  001C2E  6FC3               	movwf	(?_sprintf+4)& (0+255),b
  7503  001C30  0E7D               	movlw	high _MAC_TX_UNCNF
  7504  001C32  6FC4               	movwf	(?_sprintf+5)& (0+255),b
  7505  001C34  C0F1  F0C5         	movff	TxLoRaWan@porta,?_sprintf+6
  7506  001C38  6BC6               	clrf	(?_sprintf+7)& (0+255),b
  7507  001C3A  EC09  F000         	call	_sprintf	;wreg free
  7508  001C3E                     l2313:
  7509                           
  7510                           ;LoRaWanCore.c: 183: for (uint8_t i=0;i<tamData;i++)
  7511  001C3E  0E00               	movlw	0
  7512  001C40  0101               	movlb	1	; () banked
  7513  001C42  6FEE               	movwf	TxLoRaWan@i& (0+255),b
  7514  001C44  D183               	goto	l2314
  7515  001C46                     
  7516                           ; BSR set to: 1
  7517                           ;LoRaWanCore.c: 184: {
  7518                           ;LoRaWanCore.c: 186: if (i == 2 || i == 3) {
  7519                           
  7520                           ; BSR set to: 1
  7521  001C46  0E02               	movlw	2
  7522  001C48  19EE               	xorwf	TxLoRaWan@i& (0+255),w,b
  7523  001C4A  B4D8               	btfsc	status,2,c
  7524  001C4C  D004               	goto	u9750
  7525                           
  7526                           ; BSR set to: 1
  7527  001C4E  0E03               	movlw	3
  7528  001C50  19EE               	xorwf	TxLoRaWan@i& (0+255),w,b
  7529  001C52  A4D8               	btfss	status,2,c
  7530  001C54  D00E               	goto	l2316
  7531  001C56                     u9750:
  7532                           
  7533                           ; BSR set to: 1
  7534                           ;LoRaWanCore.c: 187: if (retornaDado(1,4) == 1 || nivel1 == 0) {
  7535                           
  7536                           ; BSR set to: 1
  7537  001C56  0E04               	movlw	4
  7538  001C58  0100               	movlb	0	; () banked
  7539  001C5A  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7540  001C5C  0E01               	movlw	1
  7541  001C5E  EC1A  F027         	call	_retornaDado
  7542  001C62  06E8               	decf	wreg,f,c
  7543  001C64  B4D8               	btfsc	status,2,c
  7544  001C66  D170               	goto	l2322
  7545  001C68  0102               	movlb	2	; () banked
  7546  001C6A  51EE               	movf	_nivel1& (0+255),w,b
  7547  001C6C                     L4:
  7548  001C6C  B4D8               	btfsc	status,2,c
  7549  001C6E  D16C               	goto	l2322
  7550  001C70  D146               	goto	l2413
  7551  001C72                     l2316:
  7552                           
  7553                           ;LoRaWanCore.c: 189: else if (i == 4 || i == 5 ){
  7554                           
  7555                           ; BSR set to: 2
  7556  001C72  0E04               	movlw	4
  7557  001C74  0101               	movlb	1	; () banked
  7558  001C76  19EE               	xorwf	TxLoRaWan@i& (0+255),w,b
  7559  001C78  B4D8               	btfsc	status,2,c
  7560  001C7A  D004               	goto	u9790
  7561                           
  7562                           ; BSR set to: 1
  7563  001C7C  0E05               	movlw	5
  7564  001C7E  19EE               	xorwf	TxLoRaWan@i& (0+255),w,b
  7565  001C80  A4D8               	btfss	status,2,c
  7566  001C82  D00C               	goto	l2324
  7567  001C84                     u9790:
  7568                           
  7569                           ; BSR set to: 1
  7570                           ;LoRaWanCore.c: 190: if (retornaDado(1,5) == 1 || nivel2 == 0) {
  7571                           
  7572                           ; BSR set to: 1
  7573  001C84  0E05               	movlw	5
  7574  001C86  0100               	movlb	0	; () banked
  7575  001C88  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7576  001C8A  0E01               	movlw	1
  7577  001C8C  EC1A  F027         	call	_retornaDado
  7578  001C90  06E8               	decf	wreg,f,c
  7579  001C92  B4D8               	btfsc	status,2,c
  7580  001C94  D159               	goto	l2322
  7581  001C96  0102               	movlb	2	; () banked
  7582  001C98  51ED               	movf	_nivel2& (0+255),w,b
  7583  001C9A  D7E8               	goto	L4
  7584  001C9C                     l2324:
  7585                           
  7586                           ;LoRaWanCore.c: 193: else if (i == 9){
  7587                           
  7588                           ; BSR set to: 2
  7589  001C9C  0E09               	movlw	9
  7590  001C9E  0101               	movlb	1	; () banked
  7591  001CA0  19EE               	xorwf	TxLoRaWan@i& (0+255),w,b
  7592  001CA2  A4D8               	btfss	status,2,c
  7593  001CA4  D010               	goto	l2331
  7594                           
  7595                           ; BSR set to: 1
  7596                           ;LoRaWanCore.c: 194: if((retornaDado(5,0) == 1) || (retornaDado(5,1) == 1) || pulsos1== 
      +                          0){
  7597  001CA6  0E00               	movlw	0
  7598  001CA8  0100               	movlb	0	; () banked
  7599  001CAA  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7600  001CAC  0E05               	movlw	5
  7601  001CAE  EC1A  F027         	call	_retornaDado
  7602  001CB2  06E8               	decf	wreg,f,c
  7603  001CB4  B4D8               	btfsc	status,2,c
  7604  001CB6  D148               	goto	l2322
  7605  001CB8  0E01               	movlw	1
  7606  001CBA  0100               	movlb	0	; () banked
  7607  001CBC  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7608  001CBE  0E05               	movlw	5
  7609  001CC0  EC1A  F027         	call	_retornaDado
  7610  001CC4  D032               	goto	L33
  7611  001CC6                     l2331:
  7612                           
  7613                           ; BSR set to: 1
  7614                           ;LoRaWanCore.c: 196: else if (i == 8){
  7615                           
  7616                           ; BSR set to: 1
  7617  001CC6  0E08               	movlw	8
  7618  001CC8  19EE               	xorwf	TxLoRaWan@i& (0+255),w,b
  7619  001CCA  A4D8               	btfss	status,2,c
  7620  001CCC  D010               	goto	l2336
  7621                           
  7622                           ; BSR set to: 1
  7623                           ;LoRaWanCore.c: 197: if((retornaDado(5,0) == 1) || (retornaDado(5,1) == 1) || pulsos1 ==
      +                           0){
  7624  001CCE  0E00               	movlw	0
  7625  001CD0  0100               	movlb	0	; () banked
  7626  001CD2  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7627  001CD4  0E05               	movlw	5
  7628  001CD6  EC1A  F027         	call	_retornaDado
  7629  001CDA  06E8               	decf	wreg,f,c
  7630  001CDC  B4D8               	btfsc	status,2,c
  7631  001CDE  D134               	goto	l2322
  7632  001CE0  0E01               	movlw	1
  7633  001CE2  0100               	movlb	0	; () banked
  7634  001CE4  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7635  001CE6  0E05               	movlw	5
  7636  001CE8  EC1A  F027         	call	_retornaDado
  7637  001CEC  D01E               	goto	L33
  7638  001CEE                     l2336:
  7639                           
  7640                           ; BSR set to: 1
  7641                           ;LoRaWanCore.c: 199: else if (i == 7){
  7642                           
  7643                           ; BSR set to: 1
  7644  001CEE  0E07               	movlw	7
  7645  001CF0  19EE               	xorwf	TxLoRaWan@i& (0+255),w,b
  7646  001CF2  A4D8               	btfss	status,2,c
  7647  001CF4  D007               	goto	l2341
  7648                           
  7649                           ; BSR set to: 1
  7650                           ;LoRaWanCore.c: 200: if((retornaDado(5,0) == 1) || pulsos1 == 0){
  7651  001CF6  0E00               	movlw	0
  7652  001CF8  0100               	movlb	0	; () banked
  7653  001CFA  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7654  001CFC  0E05               	movlw	5
  7655  001CFE  EC1A  F027         	call	_retornaDado
  7656  001D02  D013               	goto	L33
  7657  001D04                     l2341:
  7658                           
  7659                           ; BSR set to: 1
  7660                           ;LoRaWanCore.c: 202: else if (i == 6){
  7661                           
  7662                           ; BSR set to: 1
  7663  001D04  0E06               	movlw	6
  7664  001D06  19EE               	xorwf	TxLoRaWan@i& (0+255),w,b
  7665  001D08  A4D8               	btfss	status,2,c
  7666  001D0A  D015               	goto	l2346
  7667                           
  7668                           ; BSR set to: 1
  7669                           ;LoRaWanCore.c: 203: if((retornaDado(5,0) == 1) && (retornaDado(5,1) == 1) || pulsos1 ==
      +                           0){
  7670  001D0C  0E00               	movlw	0
  7671  001D0E  0100               	movlb	0	; () banked
  7672  001D10  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7673  001D12  0E05               	movlw	5
  7674  001D14  EC1A  F027         	call	_retornaDado
  7675  001D18  06E8               	decf	wreg,f,c
  7676  001D1A  A4D8               	btfss	status,2,c
  7677  001D1C  D009               	goto	u9950
  7678  001D1E  0E01               	movlw	1
  7679  001D20  0100               	movlb	0	; () banked
  7680  001D22  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7681  001D24  0E05               	movlw	5
  7682  001D26  EC1A  F027         	call	_retornaDado
  7683  001D2A                     L33:
  7684  001D2A  06E8               	decf	wreg,f,c
  7685  001D2C  B4D8               	btfsc	status,2,c
  7686  001D2E  D10C               	goto	l2322
  7687  001D30                     u9950:
  7688  001D30  0101               	movlb	1	; () banked
  7689  001D32  51FD               	movf	_pulsos1& (0+255),w,b
  7690  001D34  D79B               	goto	L4
  7691  001D36                     l2346:
  7692                           
  7693                           ; BSR set to: 1
  7694                           ;LoRaWanCore.c: 206: else if (i == 13){
  7695                           
  7696                           ; BSR set to: 1
  7697  001D36  0E0D               	movlw	13
  7698  001D38  19EE               	xorwf	TxLoRaWan@i& (0+255),w,b
  7699  001D3A  A4D8               	btfss	status,2,c
  7700  001D3C  D010               	goto	l2353
  7701                           
  7702                           ; BSR set to: 1
  7703                           ;LoRaWanCore.c: 207: if((retornaDado(5,2) == 1) || (retornaDado(5,3) == 1) || pulsos2 ==
      +                           0){
  7704  001D3E  0E02               	movlw	2
  7705  001D40  0100               	movlb	0	; () banked
  7706  001D42  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7707  001D44  0E05               	movlw	5
  7708  001D46  EC1A  F027         	call	_retornaDado
  7709  001D4A  06E8               	decf	wreg,f,c
  7710  001D4C  B4D8               	btfsc	status,2,c
  7711  001D4E  D0FC               	goto	l2322
  7712  001D50  0E03               	movlw	3
  7713  001D52  0100               	movlb	0	; () banked
  7714  001D54  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7715  001D56  0E05               	movlw	5
  7716  001D58  EC1A  F027         	call	_retornaDado
  7717  001D5C  D032               	goto	L34
  7718  001D5E                     l2353:
  7719                           
  7720                           ; BSR set to: 1
  7721                           ;LoRaWanCore.c: 209: else if (i == 12){
  7722                           
  7723                           ; BSR set to: 1
  7724  001D5E  0E0C               	movlw	12
  7725  001D60  19EE               	xorwf	TxLoRaWan@i& (0+255),w,b
  7726  001D62  A4D8               	btfss	status,2,c
  7727  001D64  D010               	goto	l2358
  7728                           
  7729                           ; BSR set to: 1
  7730                           ;LoRaWanCore.c: 210: if((retornaDado(5,2) == 1) || (retornaDado(5,3) == 1) || pulsos2 ==
      +                           0){
  7731  001D66  0E02               	movlw	2
  7732  001D68  0100               	movlb	0	; () banked
  7733  001D6A  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7734  001D6C  0E05               	movlw	5
  7735  001D6E  EC1A  F027         	call	_retornaDado
  7736  001D72  06E8               	decf	wreg,f,c
  7737  001D74  B4D8               	btfsc	status,2,c
  7738  001D76  D0E8               	goto	l2322
  7739  001D78  0E03               	movlw	3
  7740  001D7A  0100               	movlb	0	; () banked
  7741  001D7C  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7742  001D7E  0E05               	movlw	5
  7743  001D80  EC1A  F027         	call	_retornaDado
  7744  001D84  D01E               	goto	L34
  7745  001D86                     l2358:
  7746                           
  7747                           ; BSR set to: 1
  7748                           ;LoRaWanCore.c: 212: else if (i == 11){
  7749                           
  7750                           ; BSR set to: 1
  7751  001D86  0E0B               	movlw	11
  7752  001D88  19EE               	xorwf	TxLoRaWan@i& (0+255),w,b
  7753  001D8A  A4D8               	btfss	status,2,c
  7754  001D8C  D007               	goto	l2363
  7755                           
  7756                           ; BSR set to: 1
  7757                           ;LoRaWanCore.c: 213: if((retornaDado(5,2) == 1) || pulsos2 == 0){
  7758  001D8E  0E02               	movlw	2
  7759  001D90  0100               	movlb	0	; () banked
  7760  001D92  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7761  001D94  0E05               	movlw	5
  7762  001D96  EC1A  F027         	call	_retornaDado
  7763  001D9A  D013               	goto	L34
  7764  001D9C                     l2363:
  7765                           
  7766                           ; BSR set to: 1
  7767                           ;LoRaWanCore.c: 215: else if (i == 10){
  7768                           
  7769                           ; BSR set to: 1
  7770  001D9C  0E0A               	movlw	10
  7771  001D9E  19EE               	xorwf	TxLoRaWan@i& (0+255),w,b
  7772  001DA0  A4D8               	btfss	status,2,c
  7773  001DA2  D015               	goto	l2368
  7774                           
  7775                           ; BSR set to: 1
  7776                           ;LoRaWanCore.c: 216: if((retornaDado(5,2) == 1) && (retornaDado(5,3) == 1) || pulsos2 ==
      +                           0){
  7777  001DA4  0E02               	movlw	2
  7778  001DA6  0100               	movlb	0	; () banked
  7779  001DA8  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7780  001DAA  0E05               	movlw	5
  7781  001DAC  EC1A  F027         	call	_retornaDado
  7782  001DB0  06E8               	decf	wreg,f,c
  7783  001DB2  A4D8               	btfss	status,2,c
  7784  001DB4  D009               	goto	u10100
  7785  001DB6  0E03               	movlw	3
  7786  001DB8  0100               	movlb	0	; () banked
  7787  001DBA  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7788  001DBC  0E05               	movlw	5
  7789  001DBE  EC1A  F027         	call	_retornaDado
  7790  001DC2                     L34:
  7791  001DC2  06E8               	decf	wreg,f,c
  7792  001DC4  B4D8               	btfsc	status,2,c
  7793  001DC6  D0C0               	goto	l2322
  7794  001DC8                     u10100:
  7795  001DC8  0101               	movlb	1	; () banked
  7796  001DCA  51FC               	movf	_pulsos2& (0+255),w,b
  7797  001DCC  D74F               	goto	L4
  7798  001DCE                     l2368:
  7799                           
  7800                           ; BSR set to: 1
  7801                           ;LoRaWanCore.c: 219: else if (i == 17){
  7802                           
  7803                           ; BSR set to: 1
  7804  001DCE  0E11               	movlw	17
  7805  001DD0  19EE               	xorwf	TxLoRaWan@i& (0+255),w,b
  7806  001DD2  A4D8               	btfss	status,2,c
  7807  001DD4  D010               	goto	l2375
  7808                           
  7809                           ; BSR set to: 1
  7810                           ;LoRaWanCore.c: 220: if((retornaDado(5,4) == 1) || (retornaDado(5,5) == 1) || pulsos3 ==
      +                           0){
  7811  001DD6  0E04               	movlw	4
  7812  001DD8  0100               	movlb	0	; () banked
  7813  001DDA  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7814  001DDC  0E05               	movlw	5
  7815  001DDE  EC1A  F027         	call	_retornaDado
  7816  001DE2  06E8               	decf	wreg,f,c
  7817  001DE4  B4D8               	btfsc	status,2,c
  7818  001DE6  D0B0               	goto	l2322
  7819  001DE8  0E05               	movlw	5
  7820  001DEA  0100               	movlb	0	; () banked
  7821  001DEC  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7822  001DEE  0E05               	movlw	5
  7823  001DF0  EC1A  F027         	call	_retornaDado
  7824  001DF4  D032               	goto	L35
  7825  001DF6                     l2375:
  7826                           
  7827                           ; BSR set to: 1
  7828                           ;LoRaWanCore.c: 222: else if (i == 16){
  7829                           
  7830                           ; BSR set to: 1
  7831  001DF6  0E10               	movlw	16
  7832  001DF8  19EE               	xorwf	TxLoRaWan@i& (0+255),w,b
  7833  001DFA  A4D8               	btfss	status,2,c
  7834  001DFC  D010               	goto	l2380
  7835                           
  7836                           ; BSR set to: 1
  7837                           ;LoRaWanCore.c: 223: if((retornaDado(5,4) == 1) || (retornaDado(5,5) == 1) || pulsos3 ==
      +                           0){
  7838  001DFE  0E04               	movlw	4
  7839  001E00  0100               	movlb	0	; () banked
  7840  001E02  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7841  001E04  0E05               	movlw	5
  7842  001E06  EC1A  F027         	call	_retornaDado
  7843  001E0A  06E8               	decf	wreg,f,c
  7844  001E0C  B4D8               	btfsc	status,2,c
  7845  001E0E  D09C               	goto	l2322
  7846  001E10  0E05               	movlw	5
  7847  001E12  0100               	movlb	0	; () banked
  7848  001E14  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7849  001E16  0E05               	movlw	5
  7850  001E18  EC1A  F027         	call	_retornaDado
  7851  001E1C  D01E               	goto	L35
  7852  001E1E                     l2380:
  7853                           
  7854                           ; BSR set to: 1
  7855                           ;LoRaWanCore.c: 225: else if (i == 15){
  7856                           
  7857                           ; BSR set to: 1
  7858  001E1E  0E0F               	movlw	15
  7859  001E20  19EE               	xorwf	TxLoRaWan@i& (0+255),w,b
  7860  001E22  A4D8               	btfss	status,2,c
  7861  001E24  D007               	goto	l2385
  7862                           
  7863                           ; BSR set to: 1
  7864                           ;LoRaWanCore.c: 226: if((retornaDado(5,4) == 1) || pulsos3 == 0){
  7865  001E26  0E04               	movlw	4
  7866  001E28  0100               	movlb	0	; () banked
  7867  001E2A  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7868  001E2C  0E05               	movlw	5
  7869  001E2E  EC1A  F027         	call	_retornaDado
  7870  001E32  D013               	goto	L35
  7871  001E34                     l2385:
  7872                           
  7873                           ; BSR set to: 1
  7874                           ;LoRaWanCore.c: 228: else if (i == 14){
  7875                           
  7876                           ; BSR set to: 1
  7877  001E34  0E0E               	movlw	14
  7878  001E36  19EE               	xorwf	TxLoRaWan@i& (0+255),w,b
  7879  001E38  A4D8               	btfss	status,2,c
  7880  001E3A  D015               	goto	l2390
  7881                           
  7882                           ; BSR set to: 1
  7883                           ;LoRaWanCore.c: 229: if((retornaDado(5,4) == 1) && (retornaDado(5,5) == 1) || pulsos3 ==
      +                           0){
  7884  001E3C  0E04               	movlw	4
  7885  001E3E  0100               	movlb	0	; () banked
  7886  001E40  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7887  001E42  0E05               	movlw	5
  7888  001E44  EC1A  F027         	call	_retornaDado
  7889  001E48  06E8               	decf	wreg,f,c
  7890  001E4A  A4D8               	btfss	status,2,c
  7891  001E4C  D009               	goto	u10250
  7892  001E4E  0E05               	movlw	5
  7893  001E50  0100               	movlb	0	; () banked
  7894  001E52  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7895  001E54  0E05               	movlw	5
  7896  001E56  EC1A  F027         	call	_retornaDado
  7897  001E5A                     L35:
  7898  001E5A  06E8               	decf	wreg,f,c
  7899  001E5C  B4D8               	btfsc	status,2,c
  7900  001E5E  D074               	goto	l2322
  7901  001E60                     u10250:
  7902  001E60  0101               	movlb	1	; () banked
  7903  001E62  51FB               	movf	_pulsos3& (0+255),w,b
  7904  001E64  D703               	goto	L4
  7905  001E66                     l2390:
  7906                           
  7907                           ; BSR set to: 1
  7908                           ;LoRaWanCore.c: 232: else if (i == 21){
  7909                           
  7910                           ; BSR set to: 1
  7911  001E66  0E15               	movlw	21
  7912  001E68  19EE               	xorwf	TxLoRaWan@i& (0+255),w,b
  7913  001E6A  A4D8               	btfss	status,2,c
  7914  001E6C  D010               	goto	l2397
  7915                           
  7916                           ; BSR set to: 1
  7917                           ;LoRaWanCore.c: 233: if((retornaDado(5,6) == 1) || (retornaDado(5,7) == 1) || pulsos4 ==
      +                           0){
  7918  001E6E  0E06               	movlw	6
  7919  001E70  0100               	movlb	0	; () banked
  7920  001E72  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7921  001E74  0E05               	movlw	5
  7922  001E76  EC1A  F027         	call	_retornaDado
  7923  001E7A  06E8               	decf	wreg,f,c
  7924  001E7C  B4D8               	btfsc	status,2,c
  7925  001E7E  D064               	goto	l2322
  7926  001E80  0E07               	movlw	7
  7927  001E82  0100               	movlb	0	; () banked
  7928  001E84  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7929  001E86  0E05               	movlw	5
  7930  001E88  EC1A  F027         	call	_retornaDado
  7931  001E8C  D032               	goto	L36
  7932  001E8E                     l2397:
  7933                           
  7934                           ; BSR set to: 1
  7935                           ;LoRaWanCore.c: 235: else if (i == 20){
  7936                           
  7937                           ; BSR set to: 1
  7938  001E8E  0E14               	movlw	20
  7939  001E90  19EE               	xorwf	TxLoRaWan@i& (0+255),w,b
  7940  001E92  A4D8               	btfss	status,2,c
  7941  001E94  D010               	goto	l2402
  7942                           
  7943                           ; BSR set to: 1
  7944                           ;LoRaWanCore.c: 236: if((retornaDado(5,6) == 1) || (retornaDado(5,7) == 1) || pulsos4 ==
      +                           0){
  7945  001E96  0E06               	movlw	6
  7946  001E98  0100               	movlb	0	; () banked
  7947  001E9A  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7948  001E9C  0E05               	movlw	5
  7949  001E9E  EC1A  F027         	call	_retornaDado
  7950  001EA2  06E8               	decf	wreg,f,c
  7951  001EA4  B4D8               	btfsc	status,2,c
  7952  001EA6  D050               	goto	l2322
  7953  001EA8  0E07               	movlw	7
  7954  001EAA  0100               	movlb	0	; () banked
  7955  001EAC  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7956  001EAE  0E05               	movlw	5
  7957  001EB0  EC1A  F027         	call	_retornaDado
  7958  001EB4  D01E               	goto	L36
  7959  001EB6                     l2402:
  7960                           
  7961                           ; BSR set to: 1
  7962                           ;LoRaWanCore.c: 238: else if (i == 19){
  7963                           
  7964                           ; BSR set to: 1
  7965  001EB6  0E13               	movlw	19
  7966  001EB8  19EE               	xorwf	TxLoRaWan@i& (0+255),w,b
  7967  001EBA  A4D8               	btfss	status,2,c
  7968  001EBC  D007               	goto	l2407
  7969                           
  7970                           ; BSR set to: 1
  7971                           ;LoRaWanCore.c: 239: if((retornaDado(5,6) == 1) || pulsos4 == 0){
  7972  001EBE  0E06               	movlw	6
  7973  001EC0  0100               	movlb	0	; () banked
  7974  001EC2  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7975  001EC4  0E05               	movlw	5
  7976  001EC6  EC1A  F027         	call	_retornaDado
  7977  001ECA  D013               	goto	L36
  7978  001ECC                     l2407:
  7979                           
  7980                           ; BSR set to: 1
  7981                           ;LoRaWanCore.c: 241: else if (i == 18){
  7982                           
  7983                           ; BSR set to: 1
  7984  001ECC  0E12               	movlw	18
  7985  001ECE  19EE               	xorwf	TxLoRaWan@i& (0+255),w,b
  7986  001ED0  A4D8               	btfss	status,2,c
  7987  001ED2  D015               	goto	l2413
  7988                           
  7989                           ; BSR set to: 1
  7990                           ;LoRaWanCore.c: 242: if((retornaDado(5,6) == 1) && (retornaDado(5,7) == 1) || pulsos4 ==
      +                           0){
  7991  001ED4  0E06               	movlw	6
  7992  001ED6  0100               	movlb	0	; () banked
  7993  001ED8  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7994  001EDA  0E05               	movlw	5
  7995  001EDC  EC1A  F027         	call	_retornaDado
  7996  001EE0  06E8               	decf	wreg,f,c
  7997  001EE2  A4D8               	btfss	status,2,c
  7998  001EE4  D009               	goto	u10400
  7999  001EE6  0E07               	movlw	7
  8000  001EE8  0100               	movlb	0	; () banked
  8001  001EEA  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  8002  001EEC  0E05               	movlw	5
  8003  001EEE  EC1A  F027         	call	_retornaDado
  8004  001EF2                     L36:
  8005  001EF2  06E8               	decf	wreg,f,c
  8006  001EF4  B4D8               	btfsc	status,2,c
  8007  001EF6  D028               	goto	l2322
  8008  001EF8                     u10400:
  8009  001EF8  0101               	movlb	1	; () banked
  8010  001EFA  51FA               	movf	_pulsos4& (0+255),w,b
  8011  001EFC  D6B7               	goto	L4
  8012  001EFE                     l2413:
  8013                           
  8014                           ;LoRaWanCore.c: 245: sprintf(hex, "%02X", data[i]);
  8015                           
  8016                           ; BSR set to: 1
  8017                           
  8018                           ; BSR set to: 1
  8019                           
  8020                           ; BSR set to: 1
  8021                           
  8022                           ; BSR set to: 1
  8023                           
  8024                           ; BSR set to: 1
  8025                           
  8026                           ; BSR set to: 1
  8027                           
  8028                           ; BSR set to: 1
  8029                           
  8030                           ; BSR set to: 1
  8031                           
  8032                           ; BSR set to: 1
  8033                           
  8034                           ; BSR set to: 1
  8035                           
  8036                           ; BSR set to: 1
  8037                           
  8038                           ; BSR set to: 1
  8039                           
  8040                           ; BSR set to: 1
  8041                           
  8042                           ; BSR set to: 1
  8043                           
  8044                           ; BSR set to: 1
  8045                           
  8046                           ; BSR set to: 1
  8047                           
  8048                           ; BSR set to: 1
  8049                           
  8050                           ; BSR set to: 1
  8051                           
  8052                           ; BSR set to: 1
  8053  001EFE  0EEA               	movlw	low TxLoRaWan@hex
  8054  001F00  0100               	movlb	0	; () banked
  8055  001F02  6FBF               	movwf	sprintf@sp& (0+255),b
  8056  001F04  0E01               	movlw	high TxLoRaWan@hex
  8057  001F06  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  8058  001F08  0EF0               	movlw	low STR_38
  8059  001F0A  6FC1               	movwf	sprintf@f& (0+255),b
  8060  001F0C  0E7F               	movlw	high STR_38
  8061  001F0E  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  8062  001F10  0101               	movlb	1	; () banked
  8063  001F12  51EE               	movf	TxLoRaWan@i& (0+255),w,b
  8064  001F14  0D01               	mullw	1
  8065  001F16  50F3               	movf	prodl,w,c
  8066  001F18  0100               	movlb	0	; () banked
  8067  001F1A  25F2               	addwf	TxLoRaWan@data& (0+255),w,b
  8068  001F1C  6ED9               	movwf	fsr2l,c
  8069  001F1E  50F4               	movf	prodh,w,c
  8070  001F20  21F3               	addwfc	(TxLoRaWan@data+1)& (0+255),w,b
  8071  001F22  6EDA               	movwf	fsr2h,c
  8072  001F24  50DF               	movf	indf2,w,c
  8073  001F26  6FF5               	movwf	??_TxLoRaWan& (0+255),b
  8074  001F28  51F5               	movf	??_TxLoRaWan& (0+255),w,b
  8075  001F2A  6FC3               	movwf	(?_sprintf+4)& (0+255),b
  8076  001F2C  6BC4               	clrf	(?_sprintf+5)& (0+255),b
  8077  001F2E  EC09  F000         	call	_sprintf	;wreg free
  8078                           
  8079                           ;LoRaWanCore.c: 246: strcat(comando,hex);
  8080  001F32  0E20               	movlw	low TxLoRaWan@comando
  8081  001F34  0100               	movlb	0	; () banked
  8082  001F36  6F60               	movwf	strcat@to& (0+255),b
  8083  001F38  0E01               	movlw	high TxLoRaWan@comando
  8084  001F3A  6F61               	movwf	(strcat@to+1)& (0+255),b
  8085  001F3C  0EEA               	movlw	low TxLoRaWan@hex
  8086  001F3E  6F62               	movwf	strcat@from& (0+255),b
  8087  001F40  0E01               	movlw	high TxLoRaWan@hex
  8088  001F42  6F63               	movwf	(strcat@from+1)& (0+255),b
  8089  001F44  EC76  F028         	call	_strcat	;wreg free
  8090  001F48                     l2322:
  8091  001F48  0101               	movlb	1	; () banked
  8092  001F4A  2BEE               	incf	TxLoRaWan@i& (0+255),f,b
  8093  001F4C                     l2314:
  8094                           
  8095                           ; BSR set to: 1
  8096                           
  8097                           ; BSR set to: 1
  8098  001F4C  0100               	movlb	0	; () banked
  8099  001F4E  51F4               	movf	TxLoRaWan@tamData& (0+255),w,b
  8100  001F50  0101               	movlb	1	; () banked
  8101  001F52  5DEE               	subwf	TxLoRaWan@i& (0+255),w,b
  8102  001F54  A0D8               	btfss	status,0,c
  8103  001F56  D677               	goto	l2315
  8104  001F58                     u10420:
  8105                           
  8106                           ;LoRaWanCore.c: 251: {
  8107                           ;LoRaWanCore.c: 252: uint8_t status=enviaComando(comando,0);
  8108                           
  8109                           ; BSR set to: 1
  8110                           
  8111                           ;LoRaWanCore.c: 247: }
  8112                           ;LoRaWanCore.c: 250: while (1)
  8113                           
  8114                           ; BSR set to: 1
  8115  001F58  0E20               	movlw	low TxLoRaWan@comando
  8116  001F5A  0100               	movlb	0	; () banked
  8117  001F5C  6F7C               	movwf	enviaComando@cmd& (0+255),b
  8118  001F5E  0E01               	movlw	high TxLoRaWan@comando
  8119  001F60  6F7D               	movwf	(enviaComando@cmd+1)& (0+255),b
  8120  001F62  0E00               	movlw	0
  8121  001F64  6F7E               	movwf	enviaComando@tipoComando& (0+255),b
  8122  001F66  EC22  F01B         	call	_enviaComando	;wreg free
  8123  001F6A  0101               	movlb	1	; () banked
  8124  001F6C  6FE9               	movwf	TxLoRaWan@status& (0+255),b
  8125                           
  8126                           ;LoRaWanCore.c: 253: switch (status)
  8127  001F6E  D015               	goto	l2420
  8128  001F70                     
  8129                           ; BSR set to: 1
  8130                           ;LoRaWanCore.c: 256: return (parseLoRaWan()==9);
  8131                           
  8132                           ; BSR set to: 1
  8133  001F70  EC8B  F021         	call	_parseLoRaWan	;wreg free
  8134  001F74  0A09               	xorlw	9
  8135  001F76  A4D8               	btfss	status,2,c
  8136  001F78  D002               	goto	u10430
  8137  001F7A  0E01               	movlw	1
  8138  001F7C  0012               	return	
  8139  001F7E                     u10430:
  8140  001F7E  0E00               	movlw	0
  8141  001F80  0012               	return	
  8142  001F82                     
  8143                           ;LoRaWanCore.c: 258: case 5:
  8144                           ;LoRaWanCore.c: 259: {
  8145                           ;LoRaWanCore.c: 260: if (!JoinLoRaWan())
  8146  001F82  ECDE  F029         	call	_JoinLoRaWan	;wreg free
  8147  001F86  D002               	goto	L9
  8148  001F88                     
  8149                           ;LoRaWanCore.c: 265: {
  8150                           ;LoRaWanCore.c: 266: if (!ResetModuloLoRaWan())
  8151  001F88  ECD4  F02A         	call	_ResetModuloLoRaWan	;wreg free
  8152  001F8C                     L9:
  8153  001F8C  0900               	iorlw	0
  8154  001F8E  A4D8               	btfss	status,2,c
  8155  001F90  D7E3               	goto	u10420
  8156                           
  8157                           ;LoRaWanCore.c: 267: return 0;
  8158  001F92  0E00               	movlw	0
  8159  001F94  0012               	return	
  8160  001F96                     
  8161                           ;LoRaWanCore.c: 272: return 0;
  8162  001F96  0E00               	movlw	0
  8163  001F98  0012               	return	
  8164  001F9A                     l2420:
  8165  001F9A  0101               	movlb	1	; () banked
  8166  001F9C  51E9               	movf	TxLoRaWan@status& (0+255),w,b
  8167                           
  8168                           ; Switch size 1, requested type "space"
  8169                           ; Number of cases is 4, Range of values is 0 to 6
  8170                           ; switch strategies available:
  8171                           ; Name         Instructions Cycles
  8172                           ; simple_byte           13     7 (average)
  8173                           ;	Chosen strategy is simple_byte
  8174  001F9E  0A00               	xorlw	0	; case 0
  8175  001FA0  B4D8               	btfsc	status,2,c
  8176  001FA2  D7E6               	goto	l2421
  8177  001FA4  0A02               	xorlw	2	; case 2
  8178  001FA6  B4D8               	btfsc	status,2,c
  8179  001FA8  D7EC               	goto	l2423
  8180  001FAA  0A07               	xorlw	7	; case 5
  8181  001FAC  B4D8               	btfsc	status,2,c
  8182  001FAE  D7E9               	goto	l2423
  8183  001FB0  0A03               	xorlw	3	; case 6
  8184  001FB2  B4D8               	btfsc	status,2,c
  8185  001FB4  D7E9               	goto	l2427
  8186  001FB6  D7EF               	goto	l2429
  8187  001FB8                     __end_of_TxLoRaWan:
  8188                           	opt stack 0
  8189                           tblptru	equ	0xFF8
  8190                           tblptrh	equ	0xFF7
  8191                           tblptrl	equ	0xFF6
  8192                           tablat	equ	0xFF5
  8193                           prodh	equ	0xFF4
  8194                           prodl	equ	0xFF3
  8195                           intcon	equ	0xFF2
  8196                           postinc0	equ	0xFEE
  8197                           wreg	equ	0xFE8
  8198                           indf1	equ	0xFE7
  8199                           postdec1	equ	0xFE5
  8200                           fsr1h	equ	0xFE2
  8201                           fsr1l	equ	0xFE1
  8202                           indf2	equ	0xFDF
  8203                           postinc2	equ	0xFDE
  8204                           postdec2	equ	0xFDD
  8205                           plusw2	equ	0xFDB
  8206                           fsr2h	equ	0xFDA
  8207                           fsr2l	equ	0xFD9
  8208                           status	equ	0xFD8
  8209                           
  8210 ;; *************** function _strcat *****************
  8211 ;; Defined at:
  8212 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strcat.c"
  8213 ;; Parameters:    Size  Location     Type
  8214 ;;  to              2    0[BANK0 ] PTR unsigned char 
  8215 ;;		 -> TxLoRaWan@comando(200), frameBuffer(150), 
  8216 ;;  from            2    2[BANK0 ] PTR const unsigned char 
  8217 ;;		 -> TxLoRaWan@hex(4), sendError@f(30), addSensorInt@f(30), addSensorStr@f(30), 
  8218 ;;		 -> addSensorPulso@f(50), addSensorNivel@f(18), 
  8219 ;; Auto vars:     Size  Location     Type
  8220 ;;  cp              2    4[BANK0 ] PTR unsigned char 
  8221 ;;		 -> TxLoRaWan@comando(200), frameBuffer(150), 
  8222 ;; Return value:  Size  Location     Type
  8223 ;;                  2    0[BANK0 ] PTR unsigned char 
  8224 ;; Registers used:
  8225 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8226 ;; Tracked objects:
  8227 ;;		On entry : 0/0
  8228 ;;		On exit  : 0/0
  8229 ;;		Unchanged: 0/0
  8230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8231 ;;      Params:         0       4       0       0       0       0       0       0       0
  8232 ;;      Locals:         0       2       0       0       0       0       0       0       0
  8233 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8234 ;;      Totals:         0       6       0       0       0       0       0       0       0
  8235 ;;Total ram usage:        6 bytes
  8236 ;; Hardware stack levels used:    1
  8237 ;; Hardware stack levels required when called:   10
  8238 ;; This function calls:
  8239 ;;		Nothing
  8240 ;; This function is called by:
  8241 ;;		_TxLoRaWan
  8242 ;;		_addSensorNivel
  8243 ;;		_addSensorPulso
  8244 ;;		_addSensorStr
  8245 ;;		_addSensorInt
  8246 ;;		_sendError
  8247 ;; This function uses a non-reentrant model
  8248 ;;
  8249                           
  8250                           	psect	text19
  8251  0050EC                     __ptext19:
  8252                           	opt stack 0
  8253  0050EC                     _strcat:
  8254                           	opt stack 19
  8255                           
  8256                           ;incstack = 0
  8257  0050EC  C060  F064         	movff	strcat@to,strcat@cp
  8258  0050F0  C061  F065         	movff	strcat@to+1,strcat@cp+1
  8259  0050F4  D003               	goto	l3396
  8260  0050F6  0100               	movlb	0	; () banked
  8261  0050F8  4B64               	infsnz	strcat@cp& (0+255),f,b
  8262  0050FA  2B65               	incf	(strcat@cp+1)& (0+255),f,b
  8263  0050FC                     l3396:
  8264                           
  8265                           ; BSR set to: 0
  8266  0050FC  C064  FFD9         	movff	strcat@cp,fsr2l
  8267  005100  C065  FFDA         	movff	strcat@cp+1,fsr2h
  8268  005104  50DF               	movf	indf2,w,c
  8269  005106  B4D8               	btfsc	status,2,c
  8270  005108  D006               	goto	l3399
  8271  00510A  D7F5               	goto	l3397
  8272  00510C  0100               	movlb	0	; () banked
  8273  00510E  4B64               	infsnz	strcat@cp& (0+255),f,b
  8274  005110  2B65               	incf	(strcat@cp+1)& (0+255),f,b
  8275  005112  4B62               	infsnz	strcat@from& (0+255),f,b
  8276  005114  2B63               	incf	(strcat@from+1)& (0+255),f,b
  8277  005116                     l3399:
  8278                           
  8279                           ; BSR set to: 0
  8280  005116  C062  FFD9         	movff	strcat@from,fsr2l
  8281  00511A  C063  FFDA         	movff	strcat@from+1,fsr2h
  8282  00511E  C064  FFE1         	movff	strcat@cp,fsr1l
  8283  005122  C065  FFE2         	movff	strcat@cp+1,fsr1h
  8284  005126  CFDF FFE7          	movff	indf2,indf1
  8285  00512A  50E7               	movf	indf1,w,c
  8286  00512C  B4D8               	btfsc	status,2,c
  8287  00512E  0012               	return	
  8288  005130  D7ED               	goto	l3400
  8289  005132                     __end_of_strcat:
  8290                           	opt stack 0
  8291                           tblptru	equ	0xFF8
  8292                           tblptrh	equ	0xFF7
  8293                           tblptrl	equ	0xFF6
  8294                           tablat	equ	0xFF5
  8295                           prodh	equ	0xFF4
  8296                           prodl	equ	0xFF3
  8297                           intcon	equ	0xFF2
  8298                           postinc0	equ	0xFEE
  8299                           wreg	equ	0xFE8
  8300                           indf1	equ	0xFE7
  8301                           postdec1	equ	0xFE5
  8302                           fsr1h	equ	0xFE2
  8303                           fsr1l	equ	0xFE1
  8304                           indf2	equ	0xFDF
  8305                           postinc2	equ	0xFDE
  8306                           postdec2	equ	0xFDD
  8307                           plusw2	equ	0xFDB
  8308                           fsr2h	equ	0xFDA
  8309                           fsr2l	equ	0xFD9
  8310                           status	equ	0xFD8
  8311                           
  8312 ;; *************** function _retornaDado *****************
  8313 ;; Defined at:
  8314 ;;		line 51 in file "LoRaWanCore.c"
  8315 ;; Parameters:    Size  Location     Type
  8316 ;;  dadoByte        1    wreg     unsigned char 
  8317 ;;  dadoBit         1    0[BANK0 ] unsigned char 
  8318 ;; Auto vars:     Size  Location     Type
  8319 ;;  dadoByte        1    4[BANK0 ] unsigned char 
  8320 ;;  selectDado      1    3[BANK0 ] unsigned char 
  8321 ;; Return value:  Size  Location     Type
  8322 ;;                  1    wreg      unsigned char 
  8323 ;; Registers used:
  8324 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8325 ;; Tracked objects:
  8326 ;;		On entry : 0/0
  8327 ;;		On exit  : 0/0
  8328 ;;		Unchanged: 0/0
  8329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8330 ;;      Params:         0       1       0       0       0       0       0       0       0
  8331 ;;      Locals:         0       2       0       0       0       0       0       0       0
  8332 ;;      Temps:          0       2       0       0       0       0       0       0       0
  8333 ;;      Totals:         0       5       0       0       0       0       0       0       0
  8334 ;;Total ram usage:        5 bytes
  8335 ;; Hardware stack levels used:    1
  8336 ;; Hardware stack levels required when called:   10
  8337 ;; This function calls:
  8338 ;;		Nothing
  8339 ;; This function is called by:
  8340 ;;		_main
  8341 ;;		_TxLoRaWan
  8342 ;; This function uses a non-reentrant model
  8343 ;;
  8344                           
  8345                           	psect	text20
  8346  004E34                     __ptext20:
  8347                           	opt stack 0
  8348  004E34                     _retornaDado:
  8349                           	opt stack 20
  8350                           
  8351                           ;incstack = 0
  8352                           ;retornaDado@dadoByte stored from wreg
  8353  004E34  0100               	movlb	0	; () banked
  8354  004E36  6F64               	movwf	retornaDado@dadoByte& (0+255),b
  8355                           
  8356                           ;LoRaWanCore.c: 52: uint8_t selectDado;
  8357                           ;LoRaWanCore.c: 53: if (dadoBit){
  8358  004E38  0100               	movlb	0	; () banked
  8359  004E3A  5160               	movf	retornaDado@dadoBit& (0+255),w,b
  8360  004E3C  B4D8               	btfsc	status,2,c
  8361  004E3E  D019               	goto	l2262
  8362                           
  8363                           ; BSR set to: 0
  8364                           ;LoRaWanCore.c: 54: selectDado = (dadosRecebidos[dadoByte].data >> dadoBit) & 1;
  8365  004E40  C060  F061         	movff	retornaDado@dadoBit,??_retornaDado
  8366  004E44  5164               	movf	retornaDado@dadoByte& (0+255),w,b
  8367  004E46  0D02               	mullw	2
  8368  004E48  0E01               	movlw	1
  8369  004E4A  26F3               	addwf	prodl,f,c
  8370  004E4C  0E00               	movlw	0
  8371  004E4E  22F4               	addwfc	prodh,f,c
  8372  004E50  0E00               	movlw	low _dadosRecebidos
  8373  004E52  24F3               	addwf	prodl,w,c
  8374  004E54  6ED9               	movwf	fsr2l,c
  8375  004E56  0E03               	movlw	high _dadosRecebidos
  8376  004E58  20F4               	addwfc	prodh,w,c
  8377  004E5A  6EDA               	movwf	fsr2h,c
  8378  004E5C  50DF               	movf	indf2,w,c
  8379  004E5E  6F62               	movwf	(??_retornaDado+1)& (0+255),b
  8380  004E60  2B61               	incf	??_retornaDado& (0+255),f,b
  8381  004E62  D002               	goto	u7954
  8382  004E64                     u7955:
  8383  004E64  90D8               	bcf	status,0,c
  8384  004E66  3362               	rrcf	(??_retornaDado+1)& (0+255),f,b
  8385  004E68                     u7954:
  8386  004E68  2F61               	decfsz	??_retornaDado& (0+255),f,b
  8387  004E6A  D7FC               	goto	u7955
  8388  004E6C  0100               	movlb	0	; () banked
  8389  004E6E  5162               	movf	(??_retornaDado+1)& (0+255),w,b
  8390  004E70  D00D               	goto	L10
  8391  004E72                     l2262:
  8392                           
  8393                           ; BSR set to: 0
  8394                           ;LoRaWanCore.c: 56: selectDado = (dadosRecebidos[dadoByte].data) & 1;}
  8395                           
  8396                           ; BSR set to: 0
  8397  004E72  5164               	movf	retornaDado@dadoByte& (0+255),w,b
  8398  004E74  0D02               	mullw	2
  8399  004E76  0E01               	movlw	1
  8400  004E78  26F3               	addwf	prodl,f,c
  8401  004E7A  0E00               	movlw	0
  8402  004E7C  22F4               	addwfc	prodh,f,c
  8403  004E7E  0E00               	movlw	low _dadosRecebidos
  8404  004E80  24F3               	addwf	prodl,w,c
  8405  004E82  6ED9               	movwf	fsr2l,c
  8406  004E84  0E03               	movlw	high _dadosRecebidos
  8407  004E86  20F4               	addwfc	prodh,w,c
  8408  004E88  6EDA               	movwf	fsr2h,c
  8409  004E8A  50DF               	movf	indf2,w,c
  8410  004E8C                     L10:
  8411  004E8C  0B01               	andlw	1
  8412  004E8E  6F63               	movwf	retornaDado@selectDado& (0+255),b
  8413                           
  8414                           ; BSR set to: 0
  8415                           ;LoRaWanCore.c: 57: return selectDado;
  8416                           
  8417                           ; BSR set to: 0
  8418  004E90  5163               	movf	retornaDado@selectDado& (0+255),w,b
  8419  004E92  0012               	return	
  8420  004E94                     __end_of_retornaDado:
  8421                           	opt stack 0
  8422                           tblptru	equ	0xFF8
  8423                           tblptrh	equ	0xFF7
  8424                           tblptrl	equ	0xFF6
  8425                           tablat	equ	0xFF5
  8426                           prodh	equ	0xFF4
  8427                           prodl	equ	0xFF3
  8428                           intcon	equ	0xFF2
  8429                           postinc0	equ	0xFEE
  8430                           wreg	equ	0xFE8
  8431                           indf1	equ	0xFE7
  8432                           postdec1	equ	0xFE5
  8433                           fsr1h	equ	0xFE2
  8434                           fsr1l	equ	0xFE1
  8435                           indf2	equ	0xFDF
  8436                           postinc2	equ	0xFDE
  8437                           postdec2	equ	0xFDD
  8438                           plusw2	equ	0xFDB
  8439                           fsr2h	equ	0xFDA
  8440                           fsr2l	equ	0xFD9
  8441                           status	equ	0xFD8
  8442                           
  8443 ;; *************** function _ResetModuloLoRaWan *****************
  8444 ;; Defined at:
  8445 ;;		line 92 in file "LoRaWanCore.c"
  8446 ;; Parameters:    Size  Location     Type
  8447 ;;		None
  8448 ;; Auto vars:     Size  Location     Type
  8449 ;;  status          1   39[BANK0 ] unsigned char 
  8450 ;; Return value:  Size  Location     Type
  8451 ;;                  1    wreg      unsigned char 
  8452 ;; Registers used:
  8453 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8454 ;; Tracked objects:
  8455 ;;		On entry : 0/0
  8456 ;;		On exit  : 0/0
  8457 ;;		Unchanged: 0/0
  8458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8459 ;;      Params:         0       0       0       0       0       0       0       0       0
  8460 ;;      Locals:         0       1       0       0       0       0       0       0       0
  8461 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8462 ;;      Totals:         0       1       0       0       0       0       0       0       0
  8463 ;;Total ram usage:        1 bytes
  8464 ;; Hardware stack levels used:    1
  8465 ;; Hardware stack levels required when called:   13
  8466 ;; This function calls:
  8467 ;;		_enviaComando
  8468 ;; This function is called by:
  8469 ;;		_TxLoRaWan
  8470 ;; This function uses a non-reentrant model
  8471 ;;
  8472                           
  8473                           	psect	text21
  8474  0055A8                     __ptext21:
  8475                           	opt stack 0
  8476  0055A8                     _ResetModuloLoRaWan:
  8477                           	opt stack 16
  8478                           
  8479                           ;LoRaWanCore.c: 94: uint8_t status;
  8480                           ;LoRaWanCore.c: 96: status=enviaComando(SYS_RESET,1);
  8481                           
  8482                           ; BSR set to: 0
  8483                           ;incstack = 0
  8484  0055A8  0EB5               	movlw	low _SYS_RESET
  8485  0055AA  0100               	movlb	0	; () banked
  8486  0055AC  6F7C               	movwf	enviaComando@cmd& (0+255),b
  8487  0055AE  0E7D               	movlw	high _SYS_RESET
  8488  0055B0  6F7D               	movwf	(enviaComando@cmd+1)& (0+255),b
  8489  0055B2  0E01               	movlw	1
  8490  0055B4  6F7E               	movwf	enviaComando@tipoComando& (0+255),b
  8491  0055B6  EC22  F01B         	call	_enviaComando	;wreg free
  8492  0055BA  0100               	movlb	0	; () banked
  8493  0055BC  6F87               	movwf	ResetModuloLoRaWan@status& (0+255),b
  8494                           
  8495                           ; BSR set to: 0
  8496                           ;LoRaWanCore.c: 97: return (status==15);
  8497  0055BE  0E0F               	movlw	15
  8498  0055C0  1987               	xorwf	ResetModuloLoRaWan@status& (0+255),w,b
  8499  0055C2  A4D8               	btfss	status,2,c
  8500  0055C4  D002               	goto	u8840
  8501  0055C6  0E01               	movlw	1
  8502  0055C8  0012               	return	
  8503  0055CA                     u8840:
  8504  0055CA  0E00               	movlw	0
  8505  0055CC  0012               	return	
  8506  0055CE                     __end_of_ResetModuloLoRaWan:
  8507                           	opt stack 0
  8508                           tblptru	equ	0xFF8
  8509                           tblptrh	equ	0xFF7
  8510                           tblptrl	equ	0xFF6
  8511                           tablat	equ	0xFF5
  8512                           prodh	equ	0xFF4
  8513                           prodl	equ	0xFF3
  8514                           intcon	equ	0xFF2
  8515                           postinc0	equ	0xFEE
  8516                           wreg	equ	0xFE8
  8517                           indf1	equ	0xFE7
  8518                           postdec1	equ	0xFE5
  8519                           fsr1h	equ	0xFE2
  8520                           fsr1l	equ	0xFE1
  8521                           indf2	equ	0xFDF
  8522                           postinc2	equ	0xFDE
  8523                           postdec2	equ	0xFDD
  8524                           plusw2	equ	0xFDB
  8525                           fsr2h	equ	0xFDA
  8526                           fsr2l	equ	0xFD9
  8527                           status	equ	0xFD8
  8528                           
  8529 ;; *************** function _JoinLoRaWan *****************
  8530 ;; Defined at:
  8531 ;;		line 100 in file "LoRaWanCore.c"
  8532 ;; Parameters:    Size  Location     Type
  8533 ;;		None
  8534 ;; Auto vars:     Size  Location     Type
  8535 ;;  status          1   39[BANK0 ] unsigned char 
  8536 ;; Return value:  Size  Location     Type
  8537 ;;                  1    wreg      unsigned char 
  8538 ;; Registers used:
  8539 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8540 ;; Tracked objects:
  8541 ;;		On entry : 0/0
  8542 ;;		On exit  : 0/0
  8543 ;;		Unchanged: 0/0
  8544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8545 ;;      Params:         0       0       0       0       0       0       0       0       0
  8546 ;;      Locals:         0       1       0       0       0       0       0       0       0
  8547 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8548 ;;      Totals:         0       1       0       0       0       0       0       0       0
  8549 ;;Total ram usage:        1 bytes
  8550 ;; Hardware stack levels used:    1
  8551 ;; Hardware stack levels required when called:   13
  8552 ;; This function calls:
  8553 ;;		_enviaComando
  8554 ;;		_parseLoRaWan
  8555 ;; This function is called by:
  8556 ;;		_TxLoRaWan
  8557 ;; This function uses a non-reentrant model
  8558 ;;
  8559                           
  8560                           	psect	text22
  8561  0053BC                     __ptext22:
  8562                           	opt stack 0
  8563  0053BC                     _JoinLoRaWan:
  8564                           	opt stack 16
  8565                           
  8566                           ;LoRaWanCore.c: 102: uint8_t status;
  8567                           ;LoRaWanCore.c: 104: status=enviaComando(MAC_JOIN_OTAA,0);
  8568                           
  8569                           ; BSR set to: 0
  8570                           ;incstack = 0
  8571  0053BC  0E84               	movlw	low _MAC_JOIN_OTAA
  8572  0053BE  0100               	movlb	0	; () banked
  8573  0053C0  6F7C               	movwf	enviaComando@cmd& (0+255),b
  8574  0053C2  0E7D               	movlw	high _MAC_JOIN_OTAA
  8575  0053C4  6F7D               	movwf	(enviaComando@cmd+1)& (0+255),b
  8576  0053C6  0E00               	movlw	0
  8577  0053C8  6F7E               	movwf	enviaComando@tipoComando& (0+255),b
  8578  0053CA  EC22  F01B         	call	_enviaComando	;wreg free
  8579  0053CE  0100               	movlb	0	; () banked
  8580  0053D0  6F87               	movwf	JoinLoRaWan@status& (0+255),b
  8581                           
  8582                           ;LoRaWanCore.c: 105: switch (status)
  8583  0053D2  D00B               	goto	l2282
  8584  0053D4                     
  8585                           ; BSR set to: 0
  8586                           ;LoRaWanCore.c: 108: return (parseLoRaWan()==0);
  8587                           
  8588                           ; BSR set to: 0
  8589  0053D4  EC8B  F021         	call	_parseLoRaWan	;wreg free
  8590  0053D8  0900               	iorlw	0
  8591  0053DA  A4D8               	btfss	status,2,c
  8592  0053DC  D002               	goto	u8860
  8593  0053DE  0E01               	movlw	1
  8594  0053E0  0012               	return	
  8595  0053E2                     u8860:
  8596  0053E2  0E00               	movlw	0
  8597  0053E4  0012               	return	
  8598  0053E6                     
  8599                           ;LoRaWanCore.c: 110: return 0;
  8600  0053E6  0E00               	movlw	0
  8601                           
  8602                           ;LoRaWanCore.c: 111: }
  8603  0053E8  0012               	return	
  8604  0053EA                     l2282:
  8605  0053EA  0100               	movlb	0	; () banked
  8606  0053EC  5187               	movf	JoinLoRaWan@status& (0+255),w,b
  8607                           
  8608                           ; Switch size 1, requested type "space"
  8609                           ; Number of cases is 1, Range of values is 0 to 0
  8610                           ; switch strategies available:
  8611                           ; Name         Instructions Cycles
  8612                           ; simple_byte            4     3 (average)
  8613                           ;	Chosen strategy is simple_byte
  8614  0053EE  0A00               	xorlw	0	; case 0
  8615  0053F0  B4D8               	btfsc	status,2,c
  8616  0053F2  D7F0               	goto	l2283
  8617  0053F4  D7F8               	goto	l2285
  8618  0053F6                     __end_of_JoinLoRaWan:
  8619                           	opt stack 0
  8620                           tblptru	equ	0xFF8
  8621                           tblptrh	equ	0xFF7
  8622                           tblptrl	equ	0xFF6
  8623                           tablat	equ	0xFF5
  8624                           prodh	equ	0xFF4
  8625                           prodl	equ	0xFF3
  8626                           intcon	equ	0xFF2
  8627                           postinc0	equ	0xFEE
  8628                           wreg	equ	0xFE8
  8629                           indf1	equ	0xFE7
  8630                           postdec1	equ	0xFE5
  8631                           fsr1h	equ	0xFE2
  8632                           fsr1l	equ	0xFE1
  8633                           indf2	equ	0xFDF
  8634                           postinc2	equ	0xFDE
  8635                           postdec2	equ	0xFDD
  8636                           plusw2	equ	0xFDB
  8637                           fsr2h	equ	0xFDA
  8638                           fsr2l	equ	0xFD9
  8639                           status	equ	0xFD8
  8640                           
  8641 ;; *************** function _SetSpreadingFactor *****************
  8642 ;; Defined at:
  8643 ;;		line 149 in file "LoRaWanCore.c"
  8644 ;; Parameters:    Size  Location     Type
  8645 ;;  sf              1    wreg     unsigned char 
  8646 ;; Auto vars:     Size  Location     Type
  8647 ;;  sf              1  233[BANK1 ] unsigned char 
  8648 ;;  comando       200   32[BANK1 ] unsigned char [200]
  8649 ;;  status          1  232[BANK1 ] unsigned char 
  8650 ;; Return value:  Size  Location     Type
  8651 ;;                  1    wreg      unsigned char 
  8652 ;; Registers used:
  8653 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8654 ;; Tracked objects:
  8655 ;;		On entry : 0/0
  8656 ;;		On exit  : 0/0
  8657 ;;		Unchanged: 0/0
  8658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8659 ;;      Params:         0       0       0       0       0       0       0       0       0
  8660 ;;      Locals:         0       0     202       0       0       0       0       0       0
  8661 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8662 ;;      Totals:         0       0     202       0       0       0       0       0       0
  8663 ;;Total ram usage:      202 bytes
  8664 ;; Hardware stack levels used:    1
  8665 ;; Hardware stack levels required when called:   14
  8666 ;; This function calls:
  8667 ;;		_enviaComando
  8668 ;;		_sprintf
  8669 ;; This function is called by:
  8670 ;;		_main
  8671 ;; This function uses a non-reentrant model
  8672 ;;
  8673                           
  8674                           	psect	text23
  8675  0052C8                     __ptext23:
  8676                           	opt stack 0
  8677  0052C8                     _SetSpreadingFactor:
  8678                           	opt stack 16
  8679                           
  8680                           ;incstack = 0
  8681                           ;SetSpreadingFactor@sf stored from wreg
  8682  0052C8  0101               	movlb	1	; () banked
  8683  0052CA  6FE9               	movwf	SetSpreadingFactor@sf& (0+255),b
  8684                           
  8685                           ;LoRaWanCore.c: 150: char comando[200];
  8686                           ;LoRaWanCore.c: 152: sprintf(comando, "%s%d", MAC_SET_SF, sf);
  8687  0052CC  0E20               	movlw	low SetSpreadingFactor@comando
  8688  0052CE  0100               	movlb	0	; () banked
  8689  0052D0  6FBF               	movwf	sprintf@sp& (0+255),b
  8690  0052D2  0E01               	movlw	high SetSpreadingFactor@comando
  8691  0052D4  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  8692  0052D6  0EF5               	movlw	low STR_33
  8693  0052D8  6FC1               	movwf	sprintf@f& (0+255),b
  8694  0052DA  0E7F               	movlw	high STR_33
  8695  0052DC  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  8696  0052DE  0E2E               	movlw	low _MAC_SET_SF
  8697  0052E0  6FC3               	movwf	(?_sprintf+4)& (0+255),b
  8698  0052E2  0E7D               	movlw	high _MAC_SET_SF
  8699  0052E4  6FC4               	movwf	(?_sprintf+5)& (0+255),b
  8700  0052E6  C1E9  F0C5         	movff	SetSpreadingFactor@sf,?_sprintf+6
  8701  0052EA  6BC6               	clrf	(?_sprintf+7)& (0+255),b
  8702  0052EC  EC09  F000         	call	_sprintf	;wreg free
  8703                           
  8704                           ;LoRaWanCore.c: 153: uint8_t status=enviaComando(comando,0);
  8705  0052F0  0E20               	movlw	low SetSpreadingFactor@comando
  8706  0052F2  0100               	movlb	0	; () banked
  8707  0052F4  6F7C               	movwf	enviaComando@cmd& (0+255),b
  8708  0052F6  0E01               	movlw	high SetSpreadingFactor@comando
  8709  0052F8  6F7D               	movwf	(enviaComando@cmd+1)& (0+255),b
  8710  0052FA  0E00               	movlw	0
  8711  0052FC  6F7E               	movwf	enviaComando@tipoComando& (0+255),b
  8712  0052FE  EC22  F01B         	call	_enviaComando	;wreg free
  8713  005302  0101               	movlb	1	; () banked
  8714  005304  6FE8               	movwf	SetSpreadingFactor@status& (0+255),b
  8715  005306  0012               	return	
  8716  005308                     __end_of_SetSpreadingFactor:
  8717                           	opt stack 0
  8718                           tblptru	equ	0xFF8
  8719                           tblptrh	equ	0xFF7
  8720                           tblptrl	equ	0xFF6
  8721                           tablat	equ	0xFF5
  8722                           prodh	equ	0xFF4
  8723                           prodl	equ	0xFF3
  8724                           intcon	equ	0xFF2
  8725                           postinc0	equ	0xFEE
  8726                           wreg	equ	0xFE8
  8727                           indf1	equ	0xFE7
  8728                           postdec1	equ	0xFE5
  8729                           fsr1h	equ	0xFE2
  8730                           fsr1l	equ	0xFE1
  8731                           indf2	equ	0xFDF
  8732                           postinc2	equ	0xFDE
  8733                           postdec2	equ	0xFDD
  8734                           plusw2	equ	0xFDB
  8735                           fsr2h	equ	0xFDA
  8736                           fsr2l	equ	0xFD9
  8737                           status	equ	0xFD8
  8738                           
  8739 ;; *************** function _SetDevEUI *****************
  8740 ;; Defined at:
  8741 ;;		line 68 in file "LoRaWanCore.c"
  8742 ;; Parameters:    Size  Location     Type
  8743 ;;		None
  8744 ;; Auto vars:     Size  Location     Type
  8745 ;;  comando       200   32[BANK1 ] unsigned char [200]
  8746 ;;  status          1  232[BANK1 ] unsigned char 
  8747 ;; Return value:  Size  Location     Type
  8748 ;;                  1    wreg      unsigned char 
  8749 ;; Registers used:
  8750 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8751 ;; Tracked objects:
  8752 ;;		On entry : 0/0
  8753 ;;		On exit  : 0/0
  8754 ;;		Unchanged: 0/0
  8755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8756 ;;      Params:         0       0       0       0       0       0       0       0       0
  8757 ;;      Locals:         0       0     201       0       0       0       0       0       0
  8758 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8759 ;;      Totals:         0       0     201       0       0       0       0       0       0
  8760 ;;Total ram usage:      201 bytes
  8761 ;; Hardware stack levels used:    1
  8762 ;; Hardware stack levels required when called:   14
  8763 ;; This function calls:
  8764 ;;		_enviaComando
  8765 ;;		_sprintf
  8766 ;; This function is called by:
  8767 ;;		_main
  8768 ;; This function uses a non-reentrant model
  8769 ;;
  8770                           
  8771                           	psect	text24
  8772  004B2C                     __ptext24:
  8773                           	opt stack 0
  8774  004B2C                     _SetDevEUI:
  8775                           	opt stack 16
  8776                           
  8777                           ;LoRaWanCore.c: 70: char comando[200];
  8778                           ;LoRaWanCore.c: 71: sprintf(comando, "%s %.2x%.2x%.2x%.2x%.2x%.2x%.2x%.2x", MAC_SET_DEVE
      +                          UI, 0x00,0x04,0xa3,0x0b,0x00,0x1b,0x74,0x76 );
  8779                           
  8780                           ; BSR set to: 1
  8781                           ;incstack = 0
  8782  004B2C  0E20               	movlw	low SetDevEUI@comando
  8783  004B2E  0100               	movlb	0	; () banked
  8784  004B30  6FBF               	movwf	sprintf@sp& (0+255),b
  8785  004B32  0E01               	movlw	high SetDevEUI@comando
  8786  004B34  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  8787  004B36  0E8B               	movlw	low STR_25
  8788  004B38  6FC1               	movwf	sprintf@f& (0+255),b
  8789  004B3A  0E7E               	movlw	high STR_25
  8790  004B3C  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  8791  004B3E  0E6F               	movlw	low _MAC_SET_DEVEUI
  8792  004B40  6FC3               	movwf	(?_sprintf+4)& (0+255),b
  8793  004B42  0E7D               	movlw	high _MAC_SET_DEVEUI
  8794  004B44  6FC4               	movwf	(?_sprintf+5)& (0+255),b
  8795  004B46  0E00               	movlw	0
  8796  004B48  6FC6               	movwf	(?_sprintf+7)& (0+255),b
  8797  004B4A  0E00               	movlw	0
  8798  004B4C  6FC5               	movwf	(?_sprintf+6)& (0+255),b
  8799  004B4E  0E00               	movlw	0
  8800  004B50  6FC8               	movwf	(?_sprintf+9)& (0+255),b
  8801  004B52  0E04               	movlw	4
  8802  004B54  6FC7               	movwf	(?_sprintf+8)& (0+255),b
  8803  004B56  0E00               	movlw	0
  8804  004B58  6FCA               	movwf	(?_sprintf+11)& (0+255),b
  8805  004B5A  0EA3               	movlw	163
  8806  004B5C  6FC9               	movwf	(?_sprintf+10)& (0+255),b
  8807  004B5E  0E00               	movlw	0
  8808  004B60  6FCC               	movwf	(?_sprintf+13)& (0+255),b
  8809  004B62  0E0B               	movlw	11
  8810  004B64  6FCB               	movwf	(?_sprintf+12)& (0+255),b
  8811  004B66  0E00               	movlw	0
  8812  004B68  6FCE               	movwf	(?_sprintf+15)& (0+255),b
  8813  004B6A  0E00               	movlw	0
  8814  004B6C  6FCD               	movwf	(?_sprintf+14)& (0+255),b
  8815  004B6E  0E00               	movlw	0
  8816  004B70  6FD0               	movwf	(?_sprintf+17)& (0+255),b
  8817  004B72  0E1B               	movlw	27
  8818  004B74  6FCF               	movwf	(?_sprintf+16)& (0+255),b
  8819  004B76  0E00               	movlw	0
  8820  004B78  6FD2               	movwf	(?_sprintf+19)& (0+255),b
  8821  004B7A  0E74               	movlw	116
  8822  004B7C  6FD1               	movwf	(?_sprintf+18)& (0+255),b
  8823  004B7E  0E00               	movlw	0
  8824  004B80  6FD4               	movwf	(?_sprintf+21)& (0+255),b
  8825  004B82  0E76               	movlw	118
  8826  004B84  6FD3               	movwf	(?_sprintf+20)& (0+255),b
  8827  004B86  EC09  F000         	call	_sprintf	;wreg free
  8828                           
  8829                           ;LoRaWanCore.c: 73: uint8_t status=enviaComando(comando,0);
  8830  004B8A  0E20               	movlw	low SetDevEUI@comando
  8831  004B8C  0100               	movlb	0	; () banked
  8832  004B8E  6F7C               	movwf	enviaComando@cmd& (0+255),b
  8833  004B90  0E01               	movlw	high SetDevEUI@comando
  8834  004B92  6F7D               	movwf	(enviaComando@cmd+1)& (0+255),b
  8835  004B94  0E00               	movlw	0
  8836  004B96  6F7E               	movwf	enviaComando@tipoComando& (0+255),b
  8837  004B98  EC22  F01B         	call	_enviaComando	;wreg free
  8838  004B9C  0101               	movlb	1	; () banked
  8839  004B9E  6FE8               	movwf	SetDevEUI@status& (0+255),b
  8840  004BA0  0012               	return	
  8841  004BA2                     __end_of_SetDevEUI:
  8842                           	opt stack 0
  8843                           tblptru	equ	0xFF8
  8844                           tblptrh	equ	0xFF7
  8845                           tblptrl	equ	0xFF6
  8846                           tablat	equ	0xFF5
  8847                           prodh	equ	0xFF4
  8848                           prodl	equ	0xFF3
  8849                           intcon	equ	0xFF2
  8850                           postinc0	equ	0xFEE
  8851                           wreg	equ	0xFE8
  8852                           indf1	equ	0xFE7
  8853                           postdec1	equ	0xFE5
  8854                           fsr1h	equ	0xFE2
  8855                           fsr1l	equ	0xFE1
  8856                           indf2	equ	0xFDF
  8857                           postinc2	equ	0xFDE
  8858                           postdec2	equ	0xFDD
  8859                           plusw2	equ	0xFDB
  8860                           fsr2h	equ	0xFDA
  8861                           fsr2l	equ	0xFD9
  8862                           status	equ	0xFD8
  8863                           
  8864 ;; *************** function _SetChannelLoRaWan *****************
  8865 ;; Defined at:
  8866 ;;		line 114 in file "LoRaWanCore.c"
  8867 ;; Parameters:    Size  Location     Type
  8868 ;;  canal           1    wreg     unsigned char 
  8869 ;;  ligado          1  145[BANK0 ] unsigned char 
  8870 ;; Auto vars:     Size  Location     Type
  8871 ;;  canal           1  233[BANK1 ] unsigned char 
  8872 ;;  comando       200   32[BANK1 ] unsigned char [200]
  8873 ;;  status          1  232[BANK1 ] unsigned char 
  8874 ;; Return value:  Size  Location     Type
  8875 ;;                  1    wreg      unsigned char 
  8876 ;; Registers used:
  8877 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8878 ;; Tracked objects:
  8879 ;;		On entry : 0/0
  8880 ;;		On exit  : 0/0
  8881 ;;		Unchanged: 0/0
  8882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8883 ;;      Params:         0       1       0       0       0       0       0       0       0
  8884 ;;      Locals:         0       0     202       0       0       0       0       0       0
  8885 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8886 ;;      Totals:         0       1     202       0       0       0       0       0       0
  8887 ;;Total ram usage:      203 bytes
  8888 ;; Hardware stack levels used:    1
  8889 ;; Hardware stack levels required when called:   14
  8890 ;; This function calls:
  8891 ;;		_enviaComando
  8892 ;;		_sprintf
  8893 ;; This function is called by:
  8894 ;;		_main
  8895 ;; This function uses a non-reentrant model
  8896 ;;
  8897                           
  8898                           	psect	text25
  8899  004CFC                     __ptext25:
  8900                           	opt stack 0
  8901  004CFC                     _SetChannelLoRaWan:
  8902                           	opt stack 16
  8903                           
  8904                           ; BSR set to: 1
  8905                           ;incstack = 0
  8906                           ;SetChannelLoRaWan@canal stored from wreg
  8907  004CFC  0101               	movlb	1	; () banked
  8908  004CFE  6FE9               	movwf	SetChannelLoRaWan@canal& (0+255),b
  8909                           
  8910                           ;LoRaWanCore.c: 116: char comando[200];
  8911                           ;LoRaWanCore.c: 117: if (ligado)
  8912  004D00  0100               	movlb	0	; () banked
  8913  004D02  51F1               	movf	SetChannelLoRaWan@ligado& (0+255),w,b
  8914  004D04  B4D8               	btfsc	status,2,c
  8915  004D06  D012               	goto	l2289
  8916                           
  8917                           ; BSR set to: 0
  8918                           ;LoRaWanCore.c: 118: sprintf(comando, "%s %d on", MAC_SET_CH_STATUS, canal);
  8919  004D08  0E20               	movlw	low SetChannelLoRaWan@comando
  8920  004D0A  6FBF               	movwf	sprintf@sp& (0+255),b
  8921  004D0C  0E01               	movlw	high SetChannelLoRaWan@comando
  8922  004D0E  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  8923  004D10  0E92               	movlw	low STR_28
  8924  004D12  6FC1               	movwf	sprintf@f& (0+255),b
  8925  004D14  0E7F               	movlw	high STR_28
  8926  004D16  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  8927  004D18  0E3E               	movlw	low _MAC_SET_CH_STATUS
  8928  004D1A  6FC3               	movwf	(?_sprintf+4)& (0+255),b
  8929  004D1C  0E7D               	movlw	high _MAC_SET_CH_STATUS
  8930  004D1E  6FC4               	movwf	(?_sprintf+5)& (0+255),b
  8931  004D20  C1E9  F0C5         	movff	SetChannelLoRaWan@canal,?_sprintf+6
  8932  004D24  6BC6               	clrf	(?_sprintf+7)& (0+255),b
  8933  004D26  EC09  F000         	call	_sprintf	;wreg free
  8934  004D2A  D012               	goto	l2290
  8935  004D2C                     l2289:
  8936                           
  8937                           ;LoRaWanCore.c: 119: else
  8938                           ;LoRaWanCore.c: 120: sprintf(comando, "%s %d off", MAC_SET_CH_STATUS, canal);
  8939  004D2C  0E20               	movlw	low SetChannelLoRaWan@comando
  8940  004D2E  0100               	movlb	0	; () banked
  8941  004D30  6FBF               	movwf	sprintf@sp& (0+255),b
  8942  004D32  0E01               	movlw	high SetChannelLoRaWan@comando
  8943  004D34  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  8944  004D36  0E74               	movlw	low STR_29
  8945  004D38  6FC1               	movwf	sprintf@f& (0+255),b
  8946  004D3A  0E7F               	movlw	high STR_29
  8947  004D3C  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  8948  004D3E  0E3E               	movlw	low _MAC_SET_CH_STATUS
  8949  004D40  6FC3               	movwf	(?_sprintf+4)& (0+255),b
  8950  004D42  0E7D               	movlw	high _MAC_SET_CH_STATUS
  8951  004D44  6FC4               	movwf	(?_sprintf+5)& (0+255),b
  8952  004D46  C1E9  F0C5         	movff	SetChannelLoRaWan@canal,?_sprintf+6
  8953  004D4A  6BC6               	clrf	(?_sprintf+7)& (0+255),b
  8954  004D4C  EC09  F000         	call	_sprintf	;wreg free
  8955  004D50                     l2290:
  8956                           
  8957                           ;LoRaWanCore.c: 121: uint8_t status=enviaComando(comando,0);
  8958  004D50  0E20               	movlw	low SetChannelLoRaWan@comando
  8959  004D52  0100               	movlb	0	; () banked
  8960  004D54  6F7C               	movwf	enviaComando@cmd& (0+255),b
  8961  004D56  0E01               	movlw	high SetChannelLoRaWan@comando
  8962  004D58  6F7D               	movwf	(enviaComando@cmd+1)& (0+255),b
  8963  004D5A  0E00               	movlw	0
  8964  004D5C  6F7E               	movwf	enviaComando@tipoComando& (0+255),b
  8965  004D5E  EC22  F01B         	call	_enviaComando	;wreg free
  8966  004D62  0101               	movlb	1	; () banked
  8967  004D64  6FE8               	movwf	SetChannelLoRaWan@status& (0+255),b
  8968  004D66  0012               	return	
  8969  004D68                     __end_of_SetChannelLoRaWan:
  8970                           	opt stack 0
  8971                           tblptru	equ	0xFF8
  8972                           tblptrh	equ	0xFF7
  8973                           tblptrl	equ	0xFF6
  8974                           tablat	equ	0xFF5
  8975                           prodh	equ	0xFF4
  8976                           prodl	equ	0xFF3
  8977                           intcon	equ	0xFF2
  8978                           postinc0	equ	0xFEE
  8979                           wreg	equ	0xFE8
  8980                           indf1	equ	0xFE7
  8981                           postdec1	equ	0xFE5
  8982                           fsr1h	equ	0xFE2
  8983                           fsr1l	equ	0xFE1
  8984                           indf2	equ	0xFDF
  8985                           postinc2	equ	0xFDE
  8986                           postdec2	equ	0xFDD
  8987                           plusw2	equ	0xFDB
  8988                           fsr2h	equ	0xFDA
  8989                           fsr2l	equ	0xFD9
  8990                           status	equ	0xFD8
  8991                           
  8992 ;; *************** function _SetBandWidth *****************
  8993 ;; Defined at:
  8994 ;;		line 157 in file "LoRaWanCore.c"
  8995 ;; Parameters:    Size  Location     Type
  8996 ;;  bw              2  145[BANK0 ] unsigned int 
  8997 ;; Auto vars:     Size  Location     Type
  8998 ;;  comando       200   32[BANK1 ] unsigned char [200]
  8999 ;;  status          2  232[BANK1 ] unsigned int 
  9000 ;; Return value:  Size  Location     Type
  9001 ;;                  1    wreg      unsigned char 
  9002 ;; Registers used:
  9003 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9004 ;; Tracked objects:
  9005 ;;		On entry : 0/0
  9006 ;;		On exit  : 0/0
  9007 ;;		Unchanged: 0/0
  9008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9009 ;;      Params:         0       2       0       0       0       0       0       0       0
  9010 ;;      Locals:         0       0     202       0       0       0       0       0       0
  9011 ;;      Temps:          0       1       0       0       0       0       0       0       0
  9012 ;;      Totals:         0       3     202       0       0       0       0       0       0
  9013 ;;Total ram usage:      205 bytes
  9014 ;; Hardware stack levels used:    1
  9015 ;; Hardware stack levels required when called:   14
  9016 ;; This function calls:
  9017 ;;		_enviaComando
  9018 ;;		_sprintf
  9019 ;; This function is called by:
  9020 ;;		_main
  9021 ;; This function uses a non-reentrant model
  9022 ;;
  9023                           
  9024                           	psect	text26
  9025  005132                     __ptext26:
  9026                           	opt stack 0
  9027  005132                     _SetBandWidth:
  9028                           	opt stack 16
  9029                           
  9030                           ;LoRaWanCore.c: 158: char comando[200];
  9031                           ;LoRaWanCore.c: 160: sprintf(comando, "%s %d", MAC_SET_BW, bw);
  9032                           
  9033                           ; BSR set to: 1
  9034                           ;incstack = 0
  9035  005132  0E20               	movlw	low SetBandWidth@comando
  9036  005134  0100               	movlb	0	; () banked
  9037  005136  6FBF               	movwf	sprintf@sp& (0+255),b
  9038  005138  0E01               	movlw	high SetBandWidth@comando
  9039  00513A  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  9040  00513C  0EE4               	movlw	low STR_34
  9041  00513E  6FC1               	movwf	sprintf@f& (0+255),b
  9042  005140  0E7F               	movlw	high STR_34
  9043  005142  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  9044  005144  0E4C               	movlw	low _MAC_SET_BW
  9045  005146  6FC3               	movwf	(?_sprintf+4)& (0+255),b
  9046  005148  0E7D               	movlw	high _MAC_SET_BW
  9047  00514A  6FC4               	movwf	(?_sprintf+5)& (0+255),b
  9048  00514C  C0F1  F0C5         	movff	SetBandWidth@bw,?_sprintf+6
  9049  005150  C0F2  F0C6         	movff	SetBandWidth@bw+1,?_sprintf+7
  9050  005154  EC09  F000         	call	_sprintf	;wreg free
  9051                           
  9052                           ;LoRaWanCore.c: 161: uint16_t status=enviaComando(comando,0);
  9053  005158  0E20               	movlw	low SetBandWidth@comando
  9054  00515A  0100               	movlb	0	; () banked
  9055  00515C  6F7C               	movwf	enviaComando@cmd& (0+255),b
  9056  00515E  0E01               	movlw	high SetBandWidth@comando
  9057  005160  6F7D               	movwf	(enviaComando@cmd+1)& (0+255),b
  9058  005162  0E00               	movlw	0
  9059  005164  6F7E               	movwf	enviaComando@tipoComando& (0+255),b
  9060  005166  EC22  F01B         	call	_enviaComando	;wreg free
  9061  00516A  0100               	movlb	0	; () banked
  9062  00516C  6FF3               	movwf	??_SetBandWidth& (0+255),b
  9063  00516E  51F3               	movf	??_SetBandWidth& (0+255),w,b
  9064  005170  0101               	movlb	1	; () banked
  9065  005172  6FE8               	movwf	SetBandWidth@status& (0+255),b
  9066  005174  6BE9               	clrf	(SetBandWidth@status+1)& (0+255),b
  9067  005176  0012               	return	
  9068  005178                     __end_of_SetBandWidth:
  9069                           	opt stack 0
  9070                           tblptru	equ	0xFF8
  9071                           tblptrh	equ	0xFF7
  9072                           tblptrl	equ	0xFF6
  9073                           tablat	equ	0xFF5
  9074                           prodh	equ	0xFF4
  9075                           prodl	equ	0xFF3
  9076                           intcon	equ	0xFF2
  9077                           postinc0	equ	0xFEE
  9078                           wreg	equ	0xFE8
  9079                           indf1	equ	0xFE7
  9080                           postdec1	equ	0xFE5
  9081                           fsr1h	equ	0xFE2
  9082                           fsr1l	equ	0xFE1
  9083                           indf2	equ	0xFDF
  9084                           postinc2	equ	0xFDE
  9085                           postdec2	equ	0xFDD
  9086                           plusw2	equ	0xFDB
  9087                           fsr2h	equ	0xFDA
  9088                           fsr2l	equ	0xFD9
  9089                           status	equ	0xFD8
  9090                           
  9091 ;; *************** function _SetAppKey *****************
  9092 ;; Defined at:
  9093 ;;		line 83 in file "LoRaWanCore.c"
  9094 ;; Parameters:    Size  Location     Type
  9095 ;;		None
  9096 ;; Auto vars:     Size  Location     Type
  9097 ;;  comando       200   32[BANK1 ] unsigned char [200]
  9098 ;;  status          1  232[BANK1 ] unsigned char 
  9099 ;; Return value:  Size  Location     Type
  9100 ;;                  1    wreg      unsigned char 
  9101 ;; Registers used:
  9102 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9103 ;; Tracked objects:
  9104 ;;		On entry : 0/0
  9105 ;;		On exit  : 0/0
  9106 ;;		Unchanged: 0/0
  9107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9108 ;;      Params:         0       0       0       0       0       0       0       0       0
  9109 ;;      Locals:         0       0     201       0       0       0       0       0       0
  9110 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9111 ;;      Totals:         0       0     201       0       0       0       0       0       0
  9112 ;;Total ram usage:      201 bytes
  9113 ;; Hardware stack levels used:    1
  9114 ;; Hardware stack levels required when called:   14
  9115 ;; This function calls:
  9116 ;;		_enviaComando
  9117 ;;		_sprintf
  9118 ;; This function is called by:
  9119 ;;		_main
  9120 ;; This function uses a non-reentrant model
  9121 ;;
  9122                           
  9123                           	psect	text27
  9124  004104                     __ptext27:
  9125                           	opt stack 0
  9126  004104                     _SetAppKey:
  9127                           	opt stack 16
  9128                           
  9129                           ;LoRaWanCore.c: 85: char comando[200];
  9130                           ;LoRaWanCore.c: 86: sprintf(comando, "%s %.2x%.2x%.2x%.2x%.2x%.2x%.2x%.2x%.2x%.2x%.2x%.2
      +                          x%.2x%.2x%.2x%.2x", MAC_SET_APPKEY,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x5
      +                          5,0x55,0x55,0x55,0x55,0x55 );
  9131                           
  9132                           ; BSR set to: 1
  9133                           ;incstack = 0
  9134  004104  0E20               	movlw	low SetAppKey@comando
  9135  004106  0100               	movlb	0	; () banked
  9136  004108  6FBF               	movwf	sprintf@sp& (0+255),b
  9137  00410A  0E01               	movlw	high SetAppKey@comando
  9138  00410C  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  9139  00410E  0E47               	movlw	low STR_27
  9140  004110  6FC1               	movwf	sprintf@f& (0+255),b
  9141  004112  0E7E               	movlw	high STR_27
  9142  004114  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  9143  004116  0E59               	movlw	low _MAC_SET_APPKEY
  9144  004118  6FC3               	movwf	(?_sprintf+4)& (0+255),b
  9145  00411A  0E7D               	movlw	high _MAC_SET_APPKEY
  9146  00411C  6FC4               	movwf	(?_sprintf+5)& (0+255),b
  9147  00411E  0E00               	movlw	0
  9148  004120  6FC6               	movwf	(?_sprintf+7)& (0+255),b
  9149  004122  0E55               	movlw	85
  9150  004124  6FC5               	movwf	(?_sprintf+6)& (0+255),b
  9151  004126  0E00               	movlw	0
  9152  004128  6FC8               	movwf	(?_sprintf+9)& (0+255),b
  9153  00412A  0E55               	movlw	85
  9154  00412C  6FC7               	movwf	(?_sprintf+8)& (0+255),b
  9155  00412E  0E00               	movlw	0
  9156  004130  6FCA               	movwf	(?_sprintf+11)& (0+255),b
  9157  004132  0E55               	movlw	85
  9158  004134  6FC9               	movwf	(?_sprintf+10)& (0+255),b
  9159  004136  0E00               	movlw	0
  9160  004138  6FCC               	movwf	(?_sprintf+13)& (0+255),b
  9161  00413A  0E55               	movlw	85
  9162  00413C  6FCB               	movwf	(?_sprintf+12)& (0+255),b
  9163  00413E  0E00               	movlw	0
  9164  004140  6FCE               	movwf	(?_sprintf+15)& (0+255),b
  9165  004142  0E55               	movlw	85
  9166  004144  6FCD               	movwf	(?_sprintf+14)& (0+255),b
  9167  004146  0E00               	movlw	0
  9168  004148  6FD0               	movwf	(?_sprintf+17)& (0+255),b
  9169  00414A  0E55               	movlw	85
  9170  00414C  6FCF               	movwf	(?_sprintf+16)& (0+255),b
  9171  00414E  0E00               	movlw	0
  9172  004150  6FD2               	movwf	(?_sprintf+19)& (0+255),b
  9173  004152  0E55               	movlw	85
  9174  004154  6FD1               	movwf	(?_sprintf+18)& (0+255),b
  9175  004156  0E00               	movlw	0
  9176  004158  6FD4               	movwf	(?_sprintf+21)& (0+255),b
  9177  00415A  0E55               	movlw	85
  9178  00415C  6FD3               	movwf	(?_sprintf+20)& (0+255),b
  9179  00415E  0E00               	movlw	0
  9180  004160  6FD6               	movwf	(?_sprintf+23)& (0+255),b
  9181  004162  0E55               	movlw	85
  9182  004164  6FD5               	movwf	(?_sprintf+22)& (0+255),b
  9183  004166  0E00               	movlw	0
  9184  004168  6FD8               	movwf	(?_sprintf+25)& (0+255),b
  9185  00416A  0E55               	movlw	85
  9186  00416C  6FD7               	movwf	(?_sprintf+24)& (0+255),b
  9187  00416E  0E00               	movlw	0
  9188  004170  6FDA               	movwf	(?_sprintf+27)& (0+255),b
  9189  004172  0E55               	movlw	85
  9190  004174  6FD9               	movwf	(?_sprintf+26)& (0+255),b
  9191  004176  0E00               	movlw	0
  9192  004178  6FDC               	movwf	(?_sprintf+29)& (0+255),b
  9193  00417A  0E55               	movlw	85
  9194  00417C  6FDB               	movwf	(?_sprintf+28)& (0+255),b
  9195  00417E  0E00               	movlw	0
  9196  004180  6FDE               	movwf	(?_sprintf+31)& (0+255),b
  9197  004182  0E55               	movlw	85
  9198  004184  6FDD               	movwf	(?_sprintf+30)& (0+255),b
  9199  004186  0E00               	movlw	0
  9200  004188  6FE0               	movwf	(?_sprintf+33)& (0+255),b
  9201  00418A  0E55               	movlw	85
  9202  00418C  6FDF               	movwf	(?_sprintf+32)& (0+255),b
  9203  00418E  0E00               	movlw	0
  9204  004190  6FE2               	movwf	(?_sprintf+35)& (0+255),b
  9205  004192  0E55               	movlw	85
  9206  004194  6FE1               	movwf	(?_sprintf+34)& (0+255),b
  9207  004196  0E00               	movlw	0
  9208  004198  6FE4               	movwf	(?_sprintf+37)& (0+255),b
  9209  00419A  0E55               	movlw	85
  9210  00419C  6FE3               	movwf	(?_sprintf+36)& (0+255),b
  9211  00419E  EC09  F000         	call	_sprintf	;wreg free
  9212                           
  9213                           ;LoRaWanCore.c: 88: uint8_t status=enviaComando(comando,0);
  9214  0041A2  0E20               	movlw	low SetAppKey@comando
  9215  0041A4  0100               	movlb	0	; () banked
  9216  0041A6  6F7C               	movwf	enviaComando@cmd& (0+255),b
  9217  0041A8  0E01               	movlw	high SetAppKey@comando
  9218  0041AA  6F7D               	movwf	(enviaComando@cmd+1)& (0+255),b
  9219  0041AC  0E00               	movlw	0
  9220  0041AE  6F7E               	movwf	enviaComando@tipoComando& (0+255),b
  9221  0041B0  EC22  F01B         	call	_enviaComando	;wreg free
  9222  0041B4  0101               	movlb	1	; () banked
  9223  0041B6  6FE8               	movwf	SetAppKey@status& (0+255),b
  9224  0041B8  0012               	return	
  9225  0041BA                     __end_of_SetAppKey:
  9226                           	opt stack 0
  9227                           tblptru	equ	0xFF8
  9228                           tblptrh	equ	0xFF7
  9229                           tblptrl	equ	0xFF6
  9230                           tablat	equ	0xFF5
  9231                           prodh	equ	0xFF4
  9232                           prodl	equ	0xFF3
  9233                           intcon	equ	0xFF2
  9234                           postinc0	equ	0xFEE
  9235                           wreg	equ	0xFE8
  9236                           indf1	equ	0xFE7
  9237                           postdec1	equ	0xFE5
  9238                           fsr1h	equ	0xFE2
  9239                           fsr1l	equ	0xFE1
  9240                           indf2	equ	0xFDF
  9241                           postinc2	equ	0xFDE
  9242                           postdec2	equ	0xFDD
  9243                           plusw2	equ	0xFDB
  9244                           fsr2h	equ	0xFDA
  9245                           fsr2l	equ	0xFD9
  9246                           status	equ	0xFD8
  9247                           
  9248 ;; *************** function _SetAppEUI *****************
  9249 ;; Defined at:
  9250 ;;		line 76 in file "LoRaWanCore.c"
  9251 ;; Parameters:    Size  Location     Type
  9252 ;;		None
  9253 ;; Auto vars:     Size  Location     Type
  9254 ;;  comando       200   32[BANK1 ] unsigned char [200]
  9255 ;;  status          1  232[BANK1 ] unsigned char 
  9256 ;; Return value:  Size  Location     Type
  9257 ;;                  1    wreg      unsigned char 
  9258 ;; Registers used:
  9259 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9260 ;; Tracked objects:
  9261 ;;		On entry : 0/0
  9262 ;;		On exit  : 0/0
  9263 ;;		Unchanged: 0/0
  9264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9265 ;;      Params:         0       0       0       0       0       0       0       0       0
  9266 ;;      Locals:         0       0     201       0       0       0       0       0       0
  9267 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9268 ;;      Totals:         0       0     201       0       0       0       0       0       0
  9269 ;;Total ram usage:      201 bytes
  9270 ;; Hardware stack levels used:    1
  9271 ;; Hardware stack levels required when called:   14
  9272 ;; This function calls:
  9273 ;;		_enviaComando
  9274 ;;		_sprintf
  9275 ;; This function is called by:
  9276 ;;		_main
  9277 ;; This function uses a non-reentrant model
  9278 ;;
  9279                           
  9280                           	psect	text28
  9281  004BA2                     __ptext28:
  9282                           	opt stack 0
  9283  004BA2                     _SetAppEUI:
  9284                           	opt stack 16
  9285                           
  9286                           ;LoRaWanCore.c: 78: char comando[200];
  9287                           ;LoRaWanCore.c: 79: sprintf(comando, "%s %.2x%.2x%.2x%.2x%.2x%.2x%.2x%.2x", MAC_SET_APPE
      +                          UI, 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 );
  9288                           
  9289                           ; BSR set to: 1
  9290                           ;incstack = 0
  9291  004BA2  0E20               	movlw	low SetAppEUI@comando
  9292  004BA4  0100               	movlb	0	; () banked
  9293  004BA6  6FBF               	movwf	sprintf@sp& (0+255),b
  9294  004BA8  0E01               	movlw	high SetAppEUI@comando
  9295  004BAA  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  9296  004BAC  0E8B               	movlw	low STR_25
  9297  004BAE  6FC1               	movwf	sprintf@f& (0+255),b
  9298  004BB0  0E7E               	movlw	high STR_25
  9299  004BB2  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  9300  004BB4  0E64               	movlw	low _MAC_SET_APPEUI
  9301  004BB6  6FC3               	movwf	(?_sprintf+4)& (0+255),b
  9302  004BB8  0E7D               	movlw	high _MAC_SET_APPEUI
  9303  004BBA  6FC4               	movwf	(?_sprintf+5)& (0+255),b
  9304  004BBC  0E00               	movlw	0
  9305  004BBE  6FC6               	movwf	(?_sprintf+7)& (0+255),b
  9306  004BC0  0E00               	movlw	0
  9307  004BC2  6FC5               	movwf	(?_sprintf+6)& (0+255),b
  9308  004BC4  0E00               	movlw	0
  9309  004BC6  6FC8               	movwf	(?_sprintf+9)& (0+255),b
  9310  004BC8  0E00               	movlw	0
  9311  004BCA  6FC7               	movwf	(?_sprintf+8)& (0+255),b
  9312  004BCC  0E00               	movlw	0
  9313  004BCE  6FCA               	movwf	(?_sprintf+11)& (0+255),b
  9314  004BD0  0E00               	movlw	0
  9315  004BD2  6FC9               	movwf	(?_sprintf+10)& (0+255),b
  9316  004BD4  0E00               	movlw	0
  9317  004BD6  6FCC               	movwf	(?_sprintf+13)& (0+255),b
  9318  004BD8  0E00               	movlw	0
  9319  004BDA  6FCB               	movwf	(?_sprintf+12)& (0+255),b
  9320  004BDC  0E00               	movlw	0
  9321  004BDE  6FCE               	movwf	(?_sprintf+15)& (0+255),b
  9322  004BE0  0E00               	movlw	0
  9323  004BE2  6FCD               	movwf	(?_sprintf+14)& (0+255),b
  9324  004BE4  0E00               	movlw	0
  9325  004BE6  6FD0               	movwf	(?_sprintf+17)& (0+255),b
  9326  004BE8  0E00               	movlw	0
  9327  004BEA  6FCF               	movwf	(?_sprintf+16)& (0+255),b
  9328  004BEC  0E00               	movlw	0
  9329  004BEE  6FD2               	movwf	(?_sprintf+19)& (0+255),b
  9330  004BF0  0E00               	movlw	0
  9331  004BF2  6FD1               	movwf	(?_sprintf+18)& (0+255),b
  9332  004BF4  0E00               	movlw	0
  9333  004BF6  6FD4               	movwf	(?_sprintf+21)& (0+255),b
  9334  004BF8  0E00               	movlw	0
  9335  004BFA  6FD3               	movwf	(?_sprintf+20)& (0+255),b
  9336  004BFC  EC09  F000         	call	_sprintf	;wreg free
  9337                           
  9338                           ;LoRaWanCore.c: 80: uint8_t status=enviaComando(comando,0);
  9339  004C00  0E20               	movlw	low SetAppEUI@comando
  9340  004C02  0100               	movlb	0	; () banked
  9341  004C04  6F7C               	movwf	enviaComando@cmd& (0+255),b
  9342  004C06  0E01               	movlw	high SetAppEUI@comando
  9343  004C08  6F7D               	movwf	(enviaComando@cmd+1)& (0+255),b
  9344  004C0A  0E00               	movlw	0
  9345  004C0C  6F7E               	movwf	enviaComando@tipoComando& (0+255),b
  9346  004C0E  EC22  F01B         	call	_enviaComando	;wreg free
  9347  004C12  0101               	movlb	1	; () banked
  9348  004C14  6FE8               	movwf	SetAppEUI@status& (0+255),b
  9349  004C16  0012               	return	
  9350  004C18                     __end_of_SetAppEUI:
  9351                           	opt stack 0
  9352                           tblptru	equ	0xFF8
  9353                           tblptrh	equ	0xFF7
  9354                           tblptrl	equ	0xFF6
  9355                           tablat	equ	0xFF5
  9356                           prodh	equ	0xFF4
  9357                           prodl	equ	0xFF3
  9358                           intcon	equ	0xFF2
  9359                           postinc0	equ	0xFEE
  9360                           wreg	equ	0xFE8
  9361                           indf1	equ	0xFE7
  9362                           postdec1	equ	0xFE5
  9363                           fsr1h	equ	0xFE2
  9364                           fsr1l	equ	0xFE1
  9365                           indf2	equ	0xFDF
  9366                           postinc2	equ	0xFDE
  9367                           postdec2	equ	0xFDD
  9368                           plusw2	equ	0xFDB
  9369                           fsr2h	equ	0xFDA
  9370                           fsr2l	equ	0xFD9
  9371                           status	equ	0xFD8
  9372                           
  9373 ;; *************** function _SetAdr *****************
  9374 ;; Defined at:
  9375 ;;		line 125 in file "LoRaWanCore.c"
  9376 ;; Parameters:    Size  Location     Type
  9377 ;;  state           2  145[BANK0 ] PTR const unsigned char 
  9378 ;;		 -> STATE_ON(3), STATE_OFF(4), 
  9379 ;; Auto vars:     Size  Location     Type
  9380 ;;  comando       200   32[BANK1 ] unsigned char [200]
  9381 ;;  status          1  232[BANK1 ] unsigned char 
  9382 ;; Return value:  Size  Location     Type
  9383 ;;                  1    wreg      unsigned char 
  9384 ;; Registers used:
  9385 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9386 ;; Tracked objects:
  9387 ;;		On entry : 0/0
  9388 ;;		On exit  : 0/0
  9389 ;;		Unchanged: 0/0
  9390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9391 ;;      Params:         0       2       0       0       0       0       0       0       0
  9392 ;;      Locals:         0       0     201       0       0       0       0       0       0
  9393 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9394 ;;      Totals:         0       2     201       0       0       0       0       0       0
  9395 ;;Total ram usage:      203 bytes
  9396 ;; Hardware stack levels used:    1
  9397 ;; Hardware stack levels required when called:   14
  9398 ;; This function calls:
  9399 ;;		_enviaComando
  9400 ;;		_sprintf
  9401 ;; This function is called by:
  9402 ;;		_main
  9403 ;; This function uses a non-reentrant model
  9404 ;;
  9405                           
  9406                           	psect	text29
  9407  005308                     __ptext29:
  9408                           	opt stack 0
  9409  005308                     _SetAdr:
  9410                           	opt stack 16
  9411                           
  9412                           ;LoRaWanCore.c: 126: char comando[200];
  9413                           ;LoRaWanCore.c: 128: sprintf(comando, "%s %s", MAC_SET_ADR, state);
  9414                           
  9415                           ; BSR set to: 1
  9416                           ;incstack = 0
  9417  005308  0E20               	movlw	low SetAdr@comando
  9418  00530A  0100               	movlb	0	; () banked
  9419  00530C  6FBF               	movwf	sprintf@sp& (0+255),b
  9420  00530E  0E01               	movlw	high SetAdr@comando
  9421  005310  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  9422  005312  0EEA               	movlw	low STR_30
  9423  005314  6FC1               	movwf	sprintf@f& (0+255),b
  9424  005316  0E7F               	movlw	high STR_30
  9425  005318  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  9426  00531A  0E9F               	movlw	low _MAC_SET_ADR
  9427  00531C  6FC3               	movwf	(?_sprintf+4)& (0+255),b
  9428  00531E  0E7D               	movlw	high _MAC_SET_ADR
  9429  005320  6FC4               	movwf	(?_sprintf+5)& (0+255),b
  9430  005322  C0F1  F0C5         	movff	SetAdr@state,?_sprintf+6
  9431  005326  C0F2  F0C6         	movff	SetAdr@state+1,?_sprintf+7
  9432  00532A  EC09  F000         	call	_sprintf	;wreg free
  9433                           
  9434                           ;LoRaWanCore.c: 129: uint8_t status=enviaComando(comando,0);
  9435  00532E  0E20               	movlw	low SetAdr@comando
  9436  005330  0100               	movlb	0	; () banked
  9437  005332  6F7C               	movwf	enviaComando@cmd& (0+255),b
  9438  005334  0E01               	movlw	high SetAdr@comando
  9439  005336  6F7D               	movwf	(enviaComando@cmd+1)& (0+255),b
  9440  005338  0E00               	movlw	0
  9441  00533A  6F7E               	movwf	enviaComando@tipoComando& (0+255),b
  9442  00533C  EC22  F01B         	call	_enviaComando	;wreg free
  9443  005340  0101               	movlb	1	; () banked
  9444  005342  6FE8               	movwf	SetAdr@status& (0+255),b
  9445  005344  0012               	return	
  9446  005346                     __end_of_SetAdr:
  9447                           	opt stack 0
  9448                           tblptru	equ	0xFF8
  9449                           tblptrh	equ	0xFF7
  9450                           tblptrl	equ	0xFF6
  9451                           tablat	equ	0xFF5
  9452                           prodh	equ	0xFF4
  9453                           prodl	equ	0xFF3
  9454                           intcon	equ	0xFF2
  9455                           postinc0	equ	0xFEE
  9456                           wreg	equ	0xFE8
  9457                           indf1	equ	0xFE7
  9458                           postdec1	equ	0xFE5
  9459                           fsr1h	equ	0xFE2
  9460                           fsr1l	equ	0xFE1
  9461                           indf2	equ	0xFDF
  9462                           postinc2	equ	0xFDE
  9463                           postdec2	equ	0xFDD
  9464                           plusw2	equ	0xFDB
  9465                           fsr2h	equ	0xFDA
  9466                           fsr2l	equ	0xFD9
  9467                           status	equ	0xFD8
  9468                           
  9469 ;; *************** function _MacSave *****************
  9470 ;; Defined at:
  9471 ;;		line 141 in file "LoRaWanCore.c"
  9472 ;; Parameters:    Size  Location     Type
  9473 ;;		None
  9474 ;; Auto vars:     Size  Location     Type
  9475 ;;  comando       200   32[BANK1 ] unsigned char [200]
  9476 ;;  status          1  232[BANK1 ] unsigned char 
  9477 ;; Return value:  Size  Location     Type
  9478 ;;                  1    wreg      unsigned char 
  9479 ;; Registers used:
  9480 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9481 ;; Tracked objects:
  9482 ;;		On entry : 0/0
  9483 ;;		On exit  : 0/0
  9484 ;;		Unchanged: 0/0
  9485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9486 ;;      Params:         0       0       0       0       0       0       0       0       0
  9487 ;;      Locals:         0       0     201       0       0       0       0       0       0
  9488 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9489 ;;      Totals:         0       0     201       0       0       0       0       0       0
  9490 ;;Total ram usage:      201 bytes
  9491 ;; Hardware stack levels used:    1
  9492 ;; Hardware stack levels required when called:   14
  9493 ;; This function calls:
  9494 ;;		_enviaComando
  9495 ;;		_sprintf
  9496 ;; This function is called by:
  9497 ;;		_main
  9498 ;; This function uses a non-reentrant model
  9499 ;;
  9500                           
  9501                           	psect	text30
  9502  0053F6                     __ptext30:
  9503                           	opt stack 0
  9504  0053F6                     _MacSave:
  9505                           	opt stack 16
  9506                           
  9507                           ;LoRaWanCore.c: 142: char comando[200];
  9508                           ;LoRaWanCore.c: 144: sprintf(comando, "%s", MAC_SAVE);
  9509                           
  9510                           ; BSR set to: 1
  9511                           ;incstack = 0
  9512  0053F6  0E20               	movlw	low MacSave@comando
  9513  0053F8  0100               	movlb	0	; () banked
  9514  0053FA  6FBF               	movwf	sprintf@sp& (0+255),b
  9515  0053FC  0E01               	movlw	high MacSave@comando
  9516  0053FE  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  9517  005400  0EED               	movlw	low (STR_30+3)
  9518  005402  6FC1               	movwf	sprintf@f& (0+255),b
  9519  005404  0E7F               	movlw	high (STR_30+3)
  9520  005406  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  9521  005408  0EC0               	movlw	low _MAC_SAVE
  9522  00540A  6FC3               	movwf	(?_sprintf+4)& (0+255),b
  9523  00540C  0E7D               	movlw	high _MAC_SAVE
  9524  00540E  6FC4               	movwf	(?_sprintf+5)& (0+255),b
  9525  005410  EC09  F000         	call	_sprintf	;wreg free
  9526                           
  9527                           ;LoRaWanCore.c: 145: uint8_t status=enviaComando(comando,0);
  9528  005414  0E20               	movlw	low MacSave@comando
  9529  005416  0100               	movlb	0	; () banked
  9530  005418  6F7C               	movwf	enviaComando@cmd& (0+255),b
  9531  00541A  0E01               	movlw	high MacSave@comando
  9532  00541C  6F7D               	movwf	(enviaComando@cmd+1)& (0+255),b
  9533  00541E  0E00               	movlw	0
  9534  005420  6F7E               	movwf	enviaComando@tipoComando& (0+255),b
  9535  005422  EC22  F01B         	call	_enviaComando	;wreg free
  9536  005426  0101               	movlb	1	; () banked
  9537  005428  6FE8               	movwf	MacSave@status& (0+255),b
  9538  00542A  0012               	return	
  9539  00542C                     __end_of_MacSave:
  9540                           	opt stack 0
  9541                           tblptru	equ	0xFF8
  9542                           tblptrh	equ	0xFF7
  9543                           tblptrl	equ	0xFF6
  9544                           tablat	equ	0xFF5
  9545                           prodh	equ	0xFF4
  9546                           prodl	equ	0xFF3
  9547                           intcon	equ	0xFF2
  9548                           postinc0	equ	0xFEE
  9549                           wreg	equ	0xFE8
  9550                           indf1	equ	0xFE7
  9551                           postdec1	equ	0xFE5
  9552                           fsr1h	equ	0xFE2
  9553                           fsr1l	equ	0xFE1
  9554                           indf2	equ	0xFDF
  9555                           postinc2	equ	0xFDE
  9556                           postdec2	equ	0xFDD
  9557                           plusw2	equ	0xFDB
  9558                           fsr2h	equ	0xFDA
  9559                           fsr2l	equ	0xFD9
  9560                           status	equ	0xFD8
  9561                           
  9562 ;; *************** function _DataRate *****************
  9563 ;; Defined at:
  9564 ;;		line 165 in file "LoRaWanCore.c"
  9565 ;; Parameters:    Size  Location     Type
  9566 ;;  dr              2  145[BANK0 ] unsigned int 
  9567 ;; Auto vars:     Size  Location     Type
  9568 ;;  comando       200   32[BANK1 ] unsigned char [200]
  9569 ;;  status          2  232[BANK1 ] unsigned int 
  9570 ;; Return value:  Size  Location     Type
  9571 ;;                  1    wreg      unsigned char 
  9572 ;; Registers used:
  9573 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9574 ;; Tracked objects:
  9575 ;;		On entry : 0/0
  9576 ;;		On exit  : 0/0
  9577 ;;		Unchanged: 0/0
  9578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9579 ;;      Params:         0       2       0       0       0       0       0       0       0
  9580 ;;      Locals:         0       0     202       0       0       0       0       0       0
  9581 ;;      Temps:          0       1       0       0       0       0       0       0       0
  9582 ;;      Totals:         0       3     202       0       0       0       0       0       0
  9583 ;;Total ram usage:      205 bytes
  9584 ;; Hardware stack levels used:    1
  9585 ;; Hardware stack levels required when called:   14
  9586 ;; This function calls:
  9587 ;;		_enviaComando
  9588 ;;		_sprintf
  9589 ;; This function is called by:
  9590 ;;		_main
  9591 ;; This function uses a non-reentrant model
  9592 ;;
  9593                           
  9594                           	psect	text31
  9595  005178                     __ptext31:
  9596                           	opt stack 0
  9597  005178                     _DataRate:
  9598                           	opt stack 16
  9599                           
  9600                           ;LoRaWanCore.c: 166: char comando[200];
  9601                           ;LoRaWanCore.c: 168: sprintf(comando, "%s %d", MAC_SET_DR, dr);
  9602                           
  9603                           ; BSR set to: 1
  9604                           ;incstack = 0
  9605  005178  0E20               	movlw	low DataRate@comando
  9606  00517A  0100               	movlb	0	; () banked
  9607  00517C  6FBF               	movwf	sprintf@sp& (0+255),b
  9608  00517E  0E01               	movlw	high DataRate@comando
  9609  005180  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  9610  005182  0EE4               	movlw	low STR_34
  9611  005184  6FC1               	movwf	sprintf@f& (0+255),b
  9612  005186  0E7F               	movlw	high STR_34
  9613  005188  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  9614  00518A  0EA7               	movlw	low _MAC_SET_DR
  9615  00518C  6FC3               	movwf	(?_sprintf+4)& (0+255),b
  9616  00518E  0E7D               	movlw	high _MAC_SET_DR
  9617  005190  6FC4               	movwf	(?_sprintf+5)& (0+255),b
  9618  005192  C0F1  F0C5         	movff	DataRate@dr,?_sprintf+6
  9619  005196  C0F2  F0C6         	movff	DataRate@dr+1,?_sprintf+7
  9620  00519A  EC09  F000         	call	_sprintf	;wreg free
  9621                           
  9622                           ;LoRaWanCore.c: 169: uint16_t status=enviaComando(comando,0);
  9623  00519E  0E20               	movlw	low DataRate@comando
  9624  0051A0  0100               	movlb	0	; () banked
  9625  0051A2  6F7C               	movwf	enviaComando@cmd& (0+255),b
  9626  0051A4  0E01               	movlw	high DataRate@comando
  9627  0051A6  6F7D               	movwf	(enviaComando@cmd+1)& (0+255),b
  9628  0051A8  0E00               	movlw	0
  9629  0051AA  6F7E               	movwf	enviaComando@tipoComando& (0+255),b
  9630  0051AC  EC22  F01B         	call	_enviaComando	;wreg free
  9631  0051B0  0100               	movlb	0	; () banked
  9632  0051B2  6FF3               	movwf	??_DataRate& (0+255),b
  9633  0051B4  51F3               	movf	??_DataRate& (0+255),w,b
  9634  0051B6  0101               	movlb	1	; () banked
  9635  0051B8  6FE8               	movwf	DataRate@status& (0+255),b
  9636  0051BA  6BE9               	clrf	(DataRate@status+1)& (0+255),b
  9637  0051BC  0012               	return	
  9638  0051BE                     __end_of_DataRate:
  9639                           	opt stack 0
  9640                           tblptru	equ	0xFF8
  9641                           tblptrh	equ	0xFF7
  9642                           tblptrl	equ	0xFF6
  9643                           tablat	equ	0xFF5
  9644                           prodh	equ	0xFF4
  9645                           prodl	equ	0xFF3
  9646                           intcon	equ	0xFF2
  9647                           postinc0	equ	0xFEE
  9648                           wreg	equ	0xFE8
  9649                           indf1	equ	0xFE7
  9650                           postdec1	equ	0xFE5
  9651                           fsr1h	equ	0xFE2
  9652                           fsr1l	equ	0xFE1
  9653                           indf2	equ	0xFDF
  9654                           postinc2	equ	0xFDE
  9655                           postdec2	equ	0xFDD
  9656                           plusw2	equ	0xFDB
  9657                           fsr2h	equ	0xFDA
  9658                           fsr2l	equ	0xFD9
  9659                           status	equ	0xFD8
  9660                           
  9661 ;; *************** function _sprintf *****************
  9662 ;; Defined at:
  9663 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\doprnt.c"
  9664 ;; Parameters:    Size  Location     Type
  9665 ;;  sp              2   95[BANK0 ] PTR unsigned char 
  9666 ;;		 -> TxLoRaWan@hex(4), TxLoRaWan@comando(200), DataRate@comando(200), SetBandWidth@comando(200), 
  9667 ;;		 -> SetSpreadingFactor@comando(200), MacSave@comando(200), GetAdr@comando(200), SetAdr@comando(200), 
  9668 ;;		 -> SetChannelLoRaWan@comando(200), SetAppKey@comando(200), SetAppEUI@comando(200), SetDevEUI@comando(200), 
  9669 ;;		 -> GetDnctr@comando(200), sendError@f(30), addSensorFloat@f(30), addSensorInt@f(30), 
  9670 ;;		 -> addSensorStr@f(30), addSensorPulso@f(50), addSensorNivel@f(18), frameBuffer(150), 
  9671 ;;		 -> main@data(150), 
  9672 ;;  f               2   97[BANK0 ] PTR const unsigned char 
  9673 ;;		 -> STR_38(5), STR_37(7), STR_36(7), STR_35(6), 
  9674 ;;		 -> STR_34(6), STR_33(5), STR_32(3), STR_31(3), 
  9675 ;;		 -> STR_30(6), STR_29(10), STR_28(9), STR_27(68), 
  9676 ;;		 -> STR_26(36), STR_25(36), STR_24(3), STR_8(7), 
  9677 ;;		 -> STR_7(7), STR_6(8), STR_5(7), STR_4(20), 
  9678 ;;		 -> STR_3(10), STR_2(17), STR_1(92), 
  9679 ;; Auto vars:     Size  Location     Type
  9680 ;;  idx             1    5[BANK1 ] unsigned char 
  9681 ;;  val             4   18[BANK1 ] unsigned long 
  9682 ;;  tmpval          4   12[BANK1 ] struct .
  9683 ;;  fval            3   22[BANK1 ] struct .
  9684 ;;  prec            2   29[BANK1 ] int 
  9685 ;;  flag            2   27[BANK1 ] unsigned short 
  9686 ;;  width           2   25[BANK1 ] int 
  9687 ;;  exp             2   16[BANK1 ] int 
  9688 ;;  ap              2   10[BANK1 ] PTR void [1]
  9689 ;;		 -> ?_sprintf(2), 
  9690 ;;  len             2    8[BANK1 ] unsigned int 
  9691 ;;  cp              2    6[BANK1 ] PTR const unsigned char 
  9692 ;;		 -> STR_39(7), MAC_TX_UNCNF(9), MAC_TX_CNF(7), MAC_SET_DR(7), 
  9693 ;;		 -> MAC_SET_BW(13), MAC_SET_SF(16), MAC_SAVE(5), MAC_GET_ADR(8), 
  9694 ;;		 -> MAC_SET_ADR(8), MAC_SET_CH_STATUS(14), MAC_SET_APPKEY(11), MAC_SET_APPEUI(11), 
  9695 ;;		 -> MAC_SET_DEVEUI(11), MAC_GET_DNCTR(10), STATE_ON(3), STATE_OFF(4), 
  9696 ;;  c               1   31[BANK1 ] char 
  9697 ;;  d               1    0        unsigned char 
  9698 ;; Return value:  Size  Location     Type
  9699 ;;                  2   95[BANK0 ] int 
  9700 ;; Registers used:
  9701 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9702 ;; Tracked objects:
  9703 ;;		On entry : 0/0
  9704 ;;		On exit  : 0/0
  9705 ;;		Unchanged: 0/0
  9706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9707 ;;      Params:         0      44       0       0       0       0       0       0       0
  9708 ;;      Locals:         0       0      32       0       0       0       0       0       0
  9709 ;;      Temps:          0       6       0       0       0       0       0       0       0
  9710 ;;      Totals:         0      50      32       0       0       0       0       0       0
  9711 ;;Total ram usage:       82 bytes
  9712 ;; Hardware stack levels used:    1
  9713 ;; Hardware stack levels required when called:   13
  9714 ;; This function calls:
  9715 ;;		___awdiv
  9716 ;;		___ftadd
  9717 ;;		___ftge
  9718 ;;		___ftmul
  9719 ;;		___ftneg
  9720 ;;		___ftsub
  9721 ;;		___fttol
  9722 ;;		___lldiv
  9723 ;;		___llmod
  9724 ;;		___lltoft
  9725 ;;		___wmul
  9726 ;;		__div_to_l_
  9727 ;;		__tdiv_to_l_
  9728 ;;		_fround
  9729 ;;		_isdigit
  9730 ;;		_scale
  9731 ;; This function is called by:
  9732 ;;		_main
  9733 ;;		_SetDevEUI
  9734 ;;		_SetAppEUI
  9735 ;;		_SetAppKey
  9736 ;;		_SetChannelLoRaWan
  9737 ;;		_SetAdr
  9738 ;;		_MacSave
  9739 ;;		_SetSpreadingFactor
  9740 ;;		_SetBandWidth
  9741 ;;		_DataRate
  9742 ;;		_TxLoRaWan
  9743 ;;		_createFrameHeader
  9744 ;;		_addSensorNivel
  9745 ;;		_addSensorPulso
  9746 ;;		_addSensorStr
  9747 ;;		_addSensorInt
  9748 ;;		_addSensorFloat
  9749 ;;		_sendError
  9750 ;;		_GetDnctr
  9751 ;;		_GetAdr
  9752 ;; This function uses a non-reentrant model
  9753 ;;
  9754                           
  9755                           	psect	text32
  9756  000012                     __ptext32:
  9757                           	opt stack 0
  9758  000012                     _sprintf:
  9759                           	opt stack 17
  9760                           
  9761                           ;doprnt.c: 494: va_list ap;
  9762                           ;doprnt.c: 499: signed char c;
  9763                           ;doprnt.c: 501: int width;
  9764                           ;doprnt.c: 504: int prec;
  9765                           ;doprnt.c: 508: unsigned short flag;
  9766                           ;doprnt.c: 515: char d;
  9767                           ;doprnt.c: 516: double fval;
  9768                           ;doprnt.c: 517: int exp;
  9769                           ;doprnt.c: 523: union {
  9770                           ;doprnt.c: 524: unsigned long vd;
  9771                           ;doprnt.c: 525: double integ;
  9772                           ;doprnt.c: 526: } tmpval;
  9773                           ;doprnt.c: 528: unsigned long val;
  9774                           ;doprnt.c: 529: unsigned len;
  9775                           ;doprnt.c: 530: const char * cp;
  9776                           ;doprnt.c: 533: *ap = __va_start();
  9777                           
  9778                           ; BSR set to: 1
  9779                           ;incstack = 0
  9780  000012  0EC3               	movlw	low (?_sprintf+4)
  9781  000014  0101               	movlb	1	; () banked
  9782  000016  6F0A               	movwf	sprintf@ap& (0+255),b
  9783  000018  0E00               	movlw	high (?_sprintf+4)
  9784  00001A  6F0B               	movwf	(sprintf@ap+1)& (0+255),b
  9785                           
  9786                           ;doprnt.c: 536: while(c = *f++) {
  9787  00001C  EFF2  F006         	goto	u8650
  9788  000020                     
  9789                           ; BSR set to: 1
  9790                           ;doprnt.c: 538: if(c != '%')
  9791                           
  9792                           ; BSR set to: 1
  9793  000020  0E25               	movlw	37
  9794  000022  191F               	xorwf	sprintf@c& (0+255),w,b
  9795  000024  B4D8               	btfsc	status,2,c
  9796  000026  D00B               	goto	l2643
  9797                           
  9798                           ; BSR set to: 1
  9799                           ;doprnt.c: 540: {
  9800                           ;doprnt.c: 541: ((*sp++ = (c)));
  9801  000028  C0BF  FFD9         	movff	sprintf@sp,fsr2l
  9802  00002C  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
  9803  000030  C11F  FFDF         	movff	sprintf@c,indf2
  9804                           
  9805                           ; BSR set to: 1
  9806  000034  0100               	movlb	0	; () banked
  9807  000036  4BBF               	infsnz	sprintf@sp& (0+255),f,b
  9808  000038  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
  9809                           
  9810                           ;doprnt.c: 542: continue;
  9811  00003A  EFF2  F006         	goto	u8650
  9812  00003E                     l2643:
  9813                           
  9814                           ;doprnt.c: 543: }
  9815                           ;doprnt.c: 546: width = 0;
  9816                           
  9817                           ; BSR set to: 0
  9818  00003E  0E00               	movlw	0
  9819  000040  0101               	movlb	1	; () banked
  9820  000042  6F1A               	movwf	(sprintf@width+1)& (0+255),b
  9821  000044  0E00               	movlw	0
  9822  000046  6F19               	movwf	sprintf@width& (0+255),b
  9823                           
  9824                           ;doprnt.c: 548: flag = 0;
  9825  000048  0E00               	movlw	0
  9826  00004A  6F1C               	movwf	(sprintf@flag+1)& (0+255),b
  9827  00004C  0E00               	movlw	0
  9828  00004E  6F1B               	movwf	sprintf@flag& (0+255),b
  9829                           
  9830                           ; BSR set to: 1
  9831                           ;doprnt.c: 551: switch(*f) {
  9832                           
  9833                           ;doprnt.c: 550: for(;;) {
  9834  000050  D005               	goto	l2645
  9835  000052                     
  9836                           ;doprnt.c: 580: flag |= 0x04;
  9837                           
  9838                           ; BSR set to: 1
  9839  000052  0101               	movlb	1	; () banked
  9840  000054  851B               	bsf	sprintf@flag& (0+255),2,b
  9841                           
  9842                           ;doprnt.c: 581: f++;
  9843  000056  0100               	movlb	0	; () banked
  9844  000058  4BC1               	infsnz	sprintf@f& (0+255),f,b
  9845  00005A  2BC2               	incf	(sprintf@f+1)& (0+255),f,b
  9846  00005C                     l2645:
  9847                           
  9848                           ; BSR set to: 0
  9849  00005C  C0C1  FFF6         	movff	sprintf@f,tblptrl
  9850  000060  C0C2  FFF7         	movff	sprintf@f+1,tblptrh
  9851  000064                     	if	0	;tblptru may be non-zero
  9852  000064                     	endif
  9853  000064                     	if	0	;tblptru may be non-zero
  9854  000064                     	endif
  9855  000064  0008               	tblrd		*
  9856  000066  50F5               	movf	tablat,w,c
  9857                           
  9858                           ; Switch size 1, requested type "space"
  9859                           ; Number of cases is 1, Range of values is 48 to 48
  9860                           ; switch strategies available:
  9861                           ; Name         Instructions Cycles
  9862                           ; simple_byte            4     3 (average)
  9863                           ;	Chosen strategy is simple_byte
  9864  000068  0A30               	xorlw	48	; case 48
  9865  00006A  B4D8               	btfsc	status,2,c
  9866  00006C  D7F2               	goto	l2646
  9867                           
  9868                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  9869                           
  9870                           ;doprnt.c: 586: }
  9871                           
  9872                           ;doprnt.c: 585: break;
  9873  00006E  C0C1  FFF6         	movff	sprintf@f,tblptrl
  9874  000072  C0C2  FFF7         	movff	sprintf@f+1,tblptrh
  9875  000076                     	if	0	;tblptru may be non-zero
  9876  000076                     	endif
  9877  000076                     	if	0	;tblptru may be non-zero
  9878  000076                     	endif
  9879  000076  0008               	tblrd		*
  9880  000078  50F5               	movf	tablat,w,c
  9881  00007A  EC43  F02B         	call	_isdigit
  9882  00007E  A0D8               	btfss	status,0,c
  9883  000080  D039               	goto	u7980
  9884                           
  9885                           ;doprnt.c: 598: width = 0;
  9886  000082  0E00               	movlw	0
  9887  000084  0101               	movlb	1	; () banked
  9888  000086  6F1A               	movwf	(sprintf@width+1)& (0+255),b
  9889  000088  0E00               	movlw	0
  9890  00008A  6F19               	movwf	sprintf@width& (0+255),b
  9891  00008C                     
  9892                           ;doprnt.c: 600: width *= 10;
  9893                           
  9894                           ; BSR set to: 1
  9895  00008C  C119  F06E         	movff	sprintf@width,___wmul@multiplier
  9896  000090  C11A  F06F         	movff	sprintf@width+1,___wmul@multiplier+1
  9897  000094  0E00               	movlw	0
  9898  000096  0100               	movlb	0	; () banked
  9899  000098  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9900  00009A  0E0A               	movlw	10
  9901  00009C  6F70               	movwf	___wmul@multiplicand& (0+255),b
  9902  00009E  ECC0  F02A         	call	___wmul	;wreg free
  9903  0000A2  C06E  F119         	movff	?___wmul,sprintf@width
  9904  0000A6  C06F  F11A         	movff	?___wmul+1,sprintf@width+1
  9905                           
  9906                           ;doprnt.c: 601: width += *f++ - '0';
  9907  0000AA  0ED0               	movlw	208
  9908  0000AC  0100               	movlb	0	; () banked
  9909  0000AE  6FEB               	movwf	??_sprintf& (0+255),b
  9910  0000B0  0EFF               	movlw	255
  9911  0000B2  6FEC               	movwf	(??_sprintf+1)& (0+255),b
  9912  0000B4  C0C1  FFF6         	movff	sprintf@f,tblptrl
  9913  0000B8  C0C2  FFF7         	movff	sprintf@f+1,tblptrh
  9914  0000BC                     	if	0	;tblptru may be non-zero
  9915  0000BC                     	endif
  9916  0000BC                     	if	0	;tblptru may be non-zero
  9917  0000BC                     	endif
  9918  0000BC  0008               	tblrd		*
  9919  0000BE  50F5               	movf	tablat,w,c
  9920  0000C0  6FED               	movwf	(??_sprintf+2)& (0+255),b
  9921  0000C2  6BEE               	clrf	(??_sprintf+3)& (0+255),b
  9922  0000C4  51EB               	movf	??_sprintf& (0+255),w,b
  9923  0000C6  27ED               	addwf	(??_sprintf+2)& (0+255),f,b
  9924  0000C8  51EC               	movf	(??_sprintf+1)& (0+255),w,b
  9925  0000CA  23EE               	addwfc	(??_sprintf+3)& (0+255),f,b
  9926  0000CC  51ED               	movf	(??_sprintf+2)& (0+255),w,b
  9927  0000CE  0101               	movlb	1	; () banked
  9928  0000D0  2719               	addwf	sprintf@width& (0+255),f,b
  9929  0000D2  0100               	movlb	0	; () banked
  9930  0000D4  51EE               	movf	(??_sprintf+3)& (0+255),w,b
  9931  0000D6  0101               	movlb	1	; () banked
  9932  0000D8  231A               	addwfc	(sprintf@width+1)& (0+255),f,b
  9933                           
  9934                           ; BSR set to: 1
  9935  0000DA  0100               	movlb	0	; () banked
  9936  0000DC  4BC1               	infsnz	sprintf@f& (0+255),f,b
  9937  0000DE  2BC2               	incf	(sprintf@f+1)& (0+255),f,b
  9938                           
  9939                           ; BSR set to: 0
  9940                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  9941  0000E0  C0C1  FFF6         	movff	sprintf@f,tblptrl
  9942  0000E4  C0C2  FFF7         	movff	sprintf@f+1,tblptrh
  9943  0000E8                     	if	0	;tblptru may be non-zero
  9944  0000E8                     	endif
  9945  0000E8                     	if	0	;tblptru may be non-zero
  9946  0000E8                     	endif
  9947  0000E8  0008               	tblrd		*
  9948  0000EA  50F5               	movf	tablat,w,c
  9949  0000EC  EC43  F02B         	call	_isdigit
  9950  0000F0  B0D8               	btfsc	status,0,c
  9951  0000F2  D7CC               	goto	l2651
  9952  0000F4                     u7980:
  9953                           
  9954                           ;doprnt.c: 608: }
  9955                           ;doprnt.c: 611: if(*f == '.') {
  9956  0000F4  C0C1  FFF6         	movff	sprintf@f,tblptrl
  9957  0000F8  C0C2  FFF7         	movff	sprintf@f+1,tblptrh
  9958  0000FC                     	if	0	;tblptru may be non-zero
  9959  0000FC                     	endif
  9960  0000FC                     	if	0	;tblptru may be non-zero
  9961  0000FC                     	endif
  9962  0000FC  0008               	tblrd		*
  9963  0000FE  50F5               	movf	tablat,w,c
  9964  000100  0A2E               	xorlw	46
  9965  000102  A4D8               	btfss	status,2,c
  9966  000104  D037               	goto	l2653
  9967                           
  9968                           ;doprnt.c: 612: flag |= 0x4000;
  9969  000106  0101               	movlb	1	; () banked
  9970  000108  8D1C               	bsf	(sprintf@flag+1)& (0+255),6,b
  9971                           
  9972                           ;doprnt.c: 613: f++;
  9973  00010A  0100               	movlb	0	; () banked
  9974  00010C  4BC1               	infsnz	sprintf@f& (0+255),f,b
  9975  00010E  2BC2               	incf	(sprintf@f+1)& (0+255),f,b
  9976                           
  9977                           ; BSR set to: 0
  9978                           ;doprnt.c: 620: {
  9979                           ;doprnt.c: 621: prec = 0;
  9980  000110  0E00               	movlw	0
  9981  000112  0101               	movlb	1	; () banked
  9982  000114  6F1E               	movwf	(sprintf@prec+1)& (0+255),b
  9983  000116  0E00               	movlw	0
  9984  000118  6F1D               	movwf	sprintf@prec& (0+255),b
  9985                           
  9986                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  9987  00011A  D021               	goto	l2654
  9988  00011C                     
  9989                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  9990                           
  9991                           ; BSR set to: 1
  9992  00011C  C11D  F06E         	movff	sprintf@prec,___wmul@multiplier
  9993  000120  C11E  F06F         	movff	sprintf@prec+1,___wmul@multiplier+1
  9994  000124  0E00               	movlw	0
  9995  000126  0100               	movlb	0	; () banked
  9996  000128  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9997  00012A  0E0A               	movlw	10
  9998  00012C  6F70               	movwf	___wmul@multiplicand& (0+255),b
  9999  00012E  ECC0  F02A         	call	___wmul	;wreg free
 10000  000132  C0C1  FFF6         	movff	sprintf@f,tblptrl
 10001  000136  C0C2  FFF7         	movff	sprintf@f+1,tblptrh
 10002  00013A                     	if	0	;tblptru may be non-zero
 10003  00013A                     	endif
 10004  00013A                     	if	0	;tblptru may be non-zero
 10005  00013A                     	endif
 10006  00013A  0008               	tblrd		*
 10007  00013C  50F5               	movf	tablat,w,c
 10008  00013E  0100               	movlb	0	; () banked
 10009  000140  276E               	addwf	?___wmul& (0+255),f,b
 10010  000142  0E00               	movlw	0
 10011  000144  236F               	addwfc	(?___wmul+1)& (0+255),f,b
 10012  000146  0ED0               	movlw	208
 10013  000148  256E               	addwf	?___wmul& (0+255),w,b
 10014  00014A  0101               	movlb	1	; () banked
 10015  00014C  6F1D               	movwf	sprintf@prec& (0+255),b
 10016  00014E  0EFF               	movlw	255
 10017  000150  0100               	movlb	0	; () banked
 10018  000152  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 10019  000154  0101               	movlb	1	; () banked
 10020  000156  6F1E               	movwf	(sprintf@prec+1)& (0+255),b
 10021                           
 10022                           ; BSR set to: 1
 10023  000158  0100               	movlb	0	; () banked
 10024  00015A  4BC1               	infsnz	sprintf@f& (0+255),f,b
 10025  00015C  2BC2               	incf	(sprintf@f+1)& (0+255),f,b
 10026  00015E                     l2654:
 10027                           
 10028                           ; BSR set to: 0
 10029  00015E  C0C1  FFF6         	movff	sprintf@f,tblptrl
 10030  000162  C0C2  FFF7         	movff	sprintf@f+1,tblptrh
 10031  000166                     	if	0	;tblptru may be non-zero
 10032  000166                     	endif
 10033  000166                     	if	0	;tblptru may be non-zero
 10034  000166                     	endif
 10035  000166  0008               	tblrd		*
 10036  000168  50F5               	movf	tablat,w,c
 10037  00016A  EC43  F02B         	call	_isdigit
 10038  00016E  A0D8               	btfss	status,0,c
 10039  000170  D08D               	goto	l2659
 10040  000172  D7D4               	goto	l2655
 10041  000174                     l2653:
 10042                           
 10043                           ;doprnt.c: 626: prec = 0;
 10044  000174  0E00               	movlw	0
 10045  000176  0101               	movlb	1	; () banked
 10046  000178  6F1E               	movwf	(sprintf@prec+1)& (0+255),b
 10047  00017A  0E00               	movlw	0
 10048  00017C  6F1D               	movwf	sprintf@prec& (0+255),b
 10049                           
 10050                           ; BSR set to: 1
 10051                           ;doprnt.c: 628: flag |= 0x1000;
 10052  00017E  891C               	bsf	(sprintf@flag+1)& (0+255),4,b
 10053                           
 10054                           ; BSR set to: 1
 10055                           ;doprnt.c: 635: switch(c = *f++) {
 10056                           
 10057                           ;doprnt.c: 630: }
 10058                           ;doprnt.c: 633: loop:
 10059                           
 10060                           ; BSR set to: 1
 10061  000180  D085               	goto	l2659
 10062  000182                     
 10063                           ; BSR set to: 1
 10064                           ;doprnt.c: 643: flag |= 0x10;
 10065                           
 10066                           ; BSR set to: 1
 10067  000182  891B               	bsf	sprintf@flag& (0+255),4,b
 10068                           
 10069                           ;doprnt.c: 644: goto loop;
 10070  000184  D083               	goto	l2659
 10071  000186                     
 10072                           ; BSR set to: 1
 10073                           ;doprnt.c: 663: flag |= 0x400;
 10074                           
 10075                           ; BSR set to: 1
 10076  000186  851C               	bsf	(sprintf@flag+1)& (0+255),2,b
 10077                           
 10078                           ; BSR set to: 1
 10079                           ;doprnt.c: 698: case 'i':
 10080                           ;doprnt.c: 699: break;
 10081                           
 10082                           ; BSR set to: 1
 10083                           
 10084                           ;doprnt.c: 697: case 'd':
 10085                           
 10086                           ;doprnt.c: 664: break;
 10087  000188  D0AB               	goto	l2664
 10088  00018A                     
 10089                           ; BSR set to: 1
 10090                           ;doprnt.c: 714: flag |= 0x20;
 10091                           
 10092                           ; BSR set to: 1
 10093  00018A  8B1B               	bsf	sprintf@flag& (0+255),5,b
 10094  00018C                     l2668:
 10095                           
 10096                           ; BSR set to: 1
 10097                           ;doprnt.c: 721: flag |= 0x80;
 10098  00018C  8F1B               	bsf	sprintf@flag& (0+255),7,b
 10099                           
 10100                           ;doprnt.c: 723: break;
 10101  00018E  D0A8               	goto	l2664
 10102  000190                     
 10103                           ; BSR set to: 1
 10104                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 10105                           
 10106                           ; BSR set to: 1
 10107  000190  C10A  FFD9         	movff	sprintf@ap,fsr2l
 10108  000194  C10B  FFDA         	movff	sprintf@ap+1,fsr2h
 10109  000198  CFDE F106          	movff	postinc2,sprintf@cp
 10110  00019C  CFDD F107          	movff	postdec2,sprintf@cp+1
 10111                           
 10112                           ; BSR set to: 1
 10113  0001A0  0E02               	movlw	2
 10114  0001A2  270A               	addwf	sprintf@ap& (0+255),f,b
 10115  0001A4  0E00               	movlw	0
 10116  0001A6  230B               	addwfc	(sprintf@ap+1)& (0+255),f,b
 10117                           
 10118                           ; BSR set to: 1
 10119                           ;doprnt.c: 740: if(!cp)
 10120  0001A8  5106               	movf	sprintf@cp& (0+255),w,b
 10121  0001AA  1107               	iorwf	(sprintf@cp+1)& (0+255),w,b
 10122  0001AC  A4D8               	btfss	status,2,c
 10123  0001AE  D004               	goto	l2670
 10124                           
 10125                           ; BSR set to: 1
 10126                           ;doprnt.c: 741: cp = "(null)";
 10127  0001B0  0EB3               	movlw	low STR_39
 10128  0001B2  6F06               	movwf	sprintf@cp& (0+255),b
 10129  0001B4  0E7F               	movlw	high STR_39
 10130  0001B6  6F07               	movwf	(sprintf@cp+1)& (0+255),b
 10131  0001B8                     l2670:
 10132                           
 10133                           ; BSR set to: 1
 10134                           ;doprnt.c: 745: len = 0;
 10135                           
 10136                           ; BSR set to: 1
 10137  0001B8  0E00               	movlw	0
 10138  0001BA  6F09               	movwf	(sprintf@len+1)& (0+255),b
 10139  0001BC  0E00               	movlw	0
 10140  0001BE  6F08               	movwf	sprintf@len& (0+255),b
 10141                           
 10142                           ;doprnt.c: 746: while(cp[len])
 10143  0001C0  D003               	goto	l2671
 10144  0001C2                     
 10145                           ;doprnt.c: 747: len++;
 10146                           
 10147                           ; BSR set to: 1
 10148  0001C2  0101               	movlb	1	; () banked
 10149  0001C4  4B08               	infsnz	sprintf@len& (0+255),f,b
 10150  0001C6  2B09               	incf	(sprintf@len+1)& (0+255),f,b
 10151  0001C8                     l2671:
 10152                           
 10153                           ; BSR set to: 1
 10154                           
 10155                           ; BSR set to: 1
 10156  0001C8  5108               	movf	sprintf@len& (0+255),w,b
 10157  0001CA  2506               	addwf	sprintf@cp& (0+255),w,b
 10158  0001CC  0100               	movlb	0	; () banked
 10159  0001CE  6FEB               	movwf	??_sprintf& (0+255),b
 10160  0001D0  0101               	movlb	1	; () banked
 10161  0001D2  5109               	movf	(sprintf@len+1)& (0+255),w,b
 10162  0001D4  2107               	addwfc	(sprintf@cp+1)& (0+255),w,b
 10163  0001D6  0100               	movlb	0	; () banked
 10164  0001D8  6FEC               	movwf	(??_sprintf+1)& (0+255),b
 10165  0001DA  C0EB  FFF6         	movff	??_sprintf,tblptrl
 10166  0001DE  C0EC  FFF7         	movff	??_sprintf+1,tblptrh
 10167  0001E2                     	if	0	;tblptru may be non-zero
 10168  0001E2                     	endif
 10169  0001E2                     	if	0	;tblptru may be non-zero
 10170  0001E2                     	endif
 10171  0001E2  0008               	tblrd		*
 10172  0001E4  50F5               	movf	tablat,w,c
 10173  0001E6  0900               	iorlw	0
 10174  0001E8  A4D8               	btfss	status,2,c
 10175  0001EA  D7EB               	goto	l2672
 10176                           
 10177                           ; BSR set to: 0
 10178                           ;doprnt.c: 753: if(prec && prec < len)
 10179                           
 10180                           ; BSR set to: 0
 10181  0001EC  0101               	movlb	1	; () banked
 10182  0001EE  511D               	movf	sprintf@prec& (0+255),w,b
 10183  0001F0  111E               	iorwf	(sprintf@prec+1)& (0+255),w,b
 10184  0001F2  B4D8               	btfsc	status,2,c
 10185  0001F4  D00A               	goto	l2674
 10186                           
 10187                           ; BSR set to: 1
 10188  0001F6  5108               	movf	sprintf@len& (0+255),w,b
 10189  0001F8  5D1D               	subwf	sprintf@prec& (0+255),w,b
 10190  0001FA  5109               	movf	(sprintf@len+1)& (0+255),w,b
 10191  0001FC  591E               	subwfb	(sprintf@prec+1)& (0+255),w,b
 10192  0001FE  B0D8               	btfsc	status,0,c
 10193  000200  D004               	goto	l2674
 10194                           
 10195                           ; BSR set to: 1
 10196                           ;doprnt.c: 754: len = prec;
 10197  000202  C11D  F108         	movff	sprintf@prec,sprintf@len
 10198  000206  C11E  F109         	movff	sprintf@prec+1,sprintf@len+1
 10199  00020A                     l2674:
 10200                           
 10201                           ; BSR set to: 1
 10202                           ;doprnt.c: 757: if(width > len)
 10203                           
 10204                           ; BSR set to: 1
 10205  00020A  5119               	movf	sprintf@width& (0+255),w,b
 10206  00020C  5D08               	subwf	sprintf@len& (0+255),w,b
 10207  00020E  511A               	movf	(sprintf@width+1)& (0+255),w,b
 10208  000210  5909               	subwfb	(sprintf@len+1)& (0+255),w,b
 10209  000212  B0D8               	btfsc	status,0,c
 10210  000214  D005               	goto	l2675
 10211                           
 10212                           ; BSR set to: 1
 10213                           ;doprnt.c: 758: width -= len;
 10214  000216  5108               	movf	sprintf@len& (0+255),w,b
 10215  000218  5F19               	subwf	sprintf@width& (0+255),f,b
 10216  00021A  5109               	movf	(sprintf@len+1)& (0+255),w,b
 10217  00021C  5B1A               	subwfb	(sprintf@width+1)& (0+255),f,b
 10218  00021E  D00E               	goto	l2677
 10219  000220                     l2675:
 10220                           
 10221                           ; BSR set to: 1
 10222                           ;doprnt.c: 759: else
 10223                           ;doprnt.c: 760: width = 0;
 10224                           
 10225                           ; BSR set to: 1
 10226  000220  0E00               	movlw	0
 10227  000222  6F1A               	movwf	(sprintf@width+1)& (0+255),b
 10228  000224  0E00               	movlw	0
 10229  000226  6F19               	movwf	sprintf@width& (0+255),b
 10230                           
 10231                           ; BSR set to: 1
 10232                           ;doprnt.c: 764: while(width--)
 10233  000228  D009               	goto	l2677
 10234  00022A                     l9054:
 10235                           
 10236                           ; BSR set to: 1
 10237                           ;doprnt.c: 765: ((*sp++ = (' ')));
 10238  00022A  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 10239  00022E  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 10240  000232  0E20               	movlw	32
 10241  000234  6EDF               	movwf	indf2,c
 10242                           
 10243                           ; BSR set to: 1
 10244  000236  0100               	movlb	0	; () banked
 10245  000238  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 10246  00023A  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 10247  00023C                     l2677:
 10248                           
 10249                           ; BSR set to: 0
 10250  00023C  0101               	movlb	1	; () banked
 10251  00023E  0719               	decf	sprintf@width& (0+255),f,b
 10252  000240  A0D8               	btfss	status,0,c
 10253  000242  071A               	decf	(sprintf@width+1)& (0+255),f,b
 10254  000244  2919               	incf	sprintf@width& (0+255),w,b
 10255  000246  E1F1               	bnz	l9054
 10256  000248  291A               	incf	(sprintf@width+1)& (0+255),w,b
 10257  00024A  B4D8               	btfsc	status,2,c
 10258  00024C  D011               	goto	l2680
 10259  00024E  D7ED               	goto	l2678
 10260  000250                     l9060:
 10261                           
 10262                           ; BSR set to: 1
 10263                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
 10264  000250  C106  FFF6         	movff	sprintf@cp,tblptrl
 10265  000254  C107  FFF7         	movff	sprintf@cp+1,tblptrh
 10266  000258                     	if	0	;tblptru may be non-zero
 10267  000258                     	endif
 10268  000258                     	if	0	;tblptru may be non-zero
 10269  000258                     	endif
 10270  000258  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 10271  00025C  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 10272  000260  0008               	tblrd		*
 10273  000262  CFF5 FFDF          	movff	tablat,indf2
 10274                           
 10275                           ; BSR set to: 1
 10276  000266  4B06               	infsnz	sprintf@cp& (0+255),f,b
 10277  000268  2B07               	incf	(sprintf@cp+1)& (0+255),f,b
 10278                           
 10279                           ; BSR set to: 1
 10280  00026A  0100               	movlb	0	; () banked
 10281  00026C  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 10282  00026E  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 10283  000270                     l2680:
 10284                           
 10285                           ; BSR set to: 0
 10286  000270  0101               	movlb	1	; () banked
 10287  000272  0708               	decf	sprintf@len& (0+255),f,b
 10288  000274  A0D8               	btfss	status,0,c
 10289  000276  0709               	decf	(sprintf@len+1)& (0+255),f,b
 10290  000278  2908               	incf	sprintf@len& (0+255),w,b
 10291  00027A  E1EA               	bnz	l9060
 10292  00027C  2909               	incf	(sprintf@len+1)& (0+255),w,b
 10293  00027E  B4D8               	btfsc	status,2,c
 10294  000280  EFF2  F006         	goto	u8650
 10295  000284  D7E5               	goto	l2681
 10296  000286                     
 10297                           ; BSR set to: 1
 10298                           ;doprnt.c: 818: flag |= 0xC0;
 10299                           
 10300                           ; BSR set to: 1
 10301  000286  0EC0               	movlw	192
 10302  000288  131B               	iorwf	sprintf@flag& (0+255),f,b
 10303                           
 10304                           ; BSR set to: 1
 10305                           ;doprnt.c: 822: }
 10306                           
 10307                           ;doprnt.c: 819: break;
 10308  00028A  D02A               	goto	l2664
 10309  00028C                     l2659:
 10310                           
 10311                           ; BSR set to: 1
 10312  00028C  C0C1  FFF6         	movff	sprintf@f,tblptrl
 10313  000290  C0C2  FFF7         	movff	sprintf@f+1,tblptrh
 10314  000294  0100               	movlb	0	; () banked
 10315  000296  4BC1               	infsnz	sprintf@f& (0+255),f,b
 10316  000298  2BC2               	incf	(sprintf@f+1)& (0+255),f,b
 10317  00029A                     	if	0	;tblptru may be non-zero
 10318  00029A                     	endif
 10319  00029A                     	if	0	;tblptru may be non-zero
 10320  00029A                     	endif
 10321  00029A  0008               	tblrd		*
 10322  00029C  CFF5 F11F          	movff	tablat,sprintf@c
 10323  0002A0  0101               	movlb	1	; () banked
 10324  0002A2  511F               	movf	sprintf@c& (0+255),w,b
 10325                           
 10326                           ; Switch size 1, requested type "space"
 10327                           ; Number of cases is 9, Range of values is 0 to 120
 10328                           ; switch strategies available:
 10329                           ; Name         Instructions Cycles
 10330                           ; simple_byte           28    15 (average)
 10331                           ;	Chosen strategy is simple_byte
 10332  0002A4  0A00               	xorlw	0	; case 0
 10333  0002A6  B4D8               	btfsc	status,2,c
 10334  0002A8  EF01  F007         	goto	u8660
 10335  0002AC  0A58               	xorlw	88	; case 88
 10336  0002AE  B4D8               	btfsc	status,2,c
 10337  0002B0  D76C               	goto	l2667
 10338  0002B2  0A3C               	xorlw	60	; case 100
 10339  0002B4  B4D8               	btfsc	status,2,c
 10340  0002B6  D014               	goto	l2664
 10341  0002B8  0A02               	xorlw	2	; case 102
 10342  0002BA  B4D8               	btfsc	status,2,c
 10343  0002BC  D764               	goto	l2663
 10344  0002BE  0A0F               	xorlw	15	; case 105
 10345  0002C0  B4D8               	btfsc	status,2,c
 10346  0002C2  D00E               	goto	l2664
 10347  0002C4  0A05               	xorlw	5	; case 108
 10348  0002C6  B4D8               	btfsc	status,2,c
 10349  0002C8  D75C               	goto	l2662
 10350  0002CA  0A1F               	xorlw	31	; case 115
 10351  0002CC  B4D8               	btfsc	status,2,c
 10352  0002CE  D760               	goto	l2669
 10353  0002D0  0A06               	xorlw	6	; case 117
 10354  0002D2  B4D8               	btfsc	status,2,c
 10355  0002D4  D7D8               	goto	l2684
 10356  0002D6  0A0D               	xorlw	13	; case 120
 10357  0002D8  B4D8               	btfsc	status,2,c
 10358  0002DA  D758               	goto	l2668
 10359  0002DC  EFF2  F006         	goto	u8650
 10360  0002E0                     l2664:
 10361                           
 10362                           ; BSR set to: 1
 10363                           ;doprnt.c: 825: if(flag & (0x700)) {
 10364                           
 10365                           ; BSR set to: 1
 10366  0002E0  0E07               	movlw	7
 10367  0002E2  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
 10368  0002E4  B4D8               	btfsc	status,2,c
 10369  0002E6  D35F               	goto	l2685
 10370                           
 10371                           ; BSR set to: 1
 10372                           ;doprnt.c: 827: if(flag & 0x1000)
 10373  0002E8  A91C               	btfss	(sprintf@flag+1)& (0+255),4,b
 10374  0002EA  D004               	goto	l2686
 10375                           
 10376                           ; BSR set to: 1
 10377                           ;doprnt.c: 829: prec = 6;
 10378  0002EC  0E00               	movlw	0
 10379  0002EE  6F1E               	movwf	(sprintf@prec+1)& (0+255),b
 10380  0002F0  0E06               	movlw	6
 10381  0002F2  6F1D               	movwf	sprintf@prec& (0+255),b
 10382  0002F4                     l2686:
 10383                           
 10384                           ; BSR set to: 1
 10385                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 10386                           
 10387                           ; BSR set to: 1
 10388  0002F4  C10A  FFD9         	movff	sprintf@ap,fsr2l
 10389  0002F8  C10B  FFDA         	movff	sprintf@ap+1,fsr2h
 10390  0002FC  CFDE F116          	movff	postinc2,sprintf@fval
 10391  000300  CFDE F117          	movff	postinc2,sprintf@fval+1
 10392  000304  CFDD F118          	movff	postdec2,sprintf@fval+2
 10393                           
 10394                           ; BSR set to: 1
 10395  000308  0E03               	movlw	3
 10396  00030A  270A               	addwf	sprintf@ap& (0+255),f,b
 10397  00030C  0E00               	movlw	0
 10398  00030E  230B               	addwfc	(sprintf@ap+1)& (0+255),f,b
 10399                           
 10400                           ; BSR set to: 1
 10401                           ;doprnt.c: 831: if(fval < 0.0) {
 10402  000310  AF18               	btfss	(sprintf@fval+2)& (0+255),7,b
 10403  000312  D011               	goto	l2687
 10404                           
 10405                           ; BSR set to: 1
 10406                           ;doprnt.c: 832: fval = -fval;
 10407  000314  C116  F060         	movff	sprintf@fval,___ftneg@f1
 10408  000318  C117  F061         	movff	sprintf@fval+1,___ftneg@f1+1
 10409  00031C  C118  F062         	movff	sprintf@fval+2,___ftneg@f1+2
 10410  000320  ECE7  F02A         	call	___ftneg	;wreg free
 10411  000324  C060  F116         	movff	?___ftneg,sprintf@fval
 10412  000328  C061  F117         	movff	?___ftneg+1,sprintf@fval+1
 10413  00032C  C062  F118         	movff	?___ftneg+2,sprintf@fval+2
 10414                           
 10415                           ;doprnt.c: 833: flag |= 0x03;
 10416  000330  0E03               	movlw	3
 10417  000332  0101               	movlb	1	; () banked
 10418  000334  131B               	iorwf	sprintf@flag& (0+255),f,b
 10419  000336                     l2687:
 10420                           
 10421                           ; BSR set to: 1
 10422                           ;doprnt.c: 834: }
 10423                           ;doprnt.c: 835: exp = 0;
 10424                           
 10425                           ; BSR set to: 1
 10426  000336  0E00               	movlw	0
 10427  000338  6F11               	movwf	(sprintf@exp+1)& (0+255),b
 10428  00033A  0E00               	movlw	0
 10429  00033C  6F10               	movwf	sprintf@exp& (0+255),b
 10430                           
 10431                           ; BSR set to: 1
 10432                           ;doprnt.c: 836: if( fval!=0) {
 10433  00033E  5116               	movf	sprintf@fval& (0+255),w,b
 10434  000340  1117               	iorwf	(sprintf@fval+1)& (0+255),w,b
 10435  000342  1118               	iorwf	(sprintf@fval+2)& (0+255),w,b
 10436  000344  B4D8               	btfsc	status,2,c
 10437  000346  D090               	goto	l2692
 10438                           
 10439                           ; BSR set to: 1
 10440                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
 10441  000348  0E82               	movlw	130
 10442  00034A  0100               	movlb	0	; () banked
 10443  00034C  6FEB               	movwf	??_sprintf& (0+255),b
 10444  00034E  0EFF               	movlw	255
 10445  000350  6FEC               	movwf	(??_sprintf+1)& (0+255),b
 10446  000352  C116  F0ED         	movff	sprintf@fval,??_sprintf+2
 10447  000356  C117  F0EE         	movff	sprintf@fval+1,??_sprintf+3
 10448  00035A  C118  F0EF         	movff	sprintf@fval+2,??_sprintf+4
 10449  00035E  C119  F0F0         	movff	sprintf@fval+3,??_sprintf+5
 10450  000362  0E10               	movlw	16
 10451  000364  D005               	goto	u8120
 10452  000366                     u8125:
 10453  000366  90D8               	bcf	status,0,c
 10454  000368  33F0               	rrcf	(??_sprintf+5)& (0+255),f,b
 10455  00036A  33EF               	rrcf	(??_sprintf+4)& (0+255),f,b
 10456  00036C  33EE               	rrcf	(??_sprintf+3)& (0+255),f,b
 10457  00036E  33ED               	rrcf	(??_sprintf+2)& (0+255),f,b
 10458  000370                     u8120:
 10459  000370  2EE8               	decfsz	wreg,f,c
 10460  000372  D7F9               	goto	u8125
 10461  000374  51ED               	movf	(??_sprintf+2)& (0+255),w,b
 10462  000376  25EB               	addwf	??_sprintf& (0+255),w,b
 10463  000378  0101               	movlb	1	; () banked
 10464  00037A  6F10               	movwf	sprintf@exp& (0+255),b
 10465  00037C  0E00               	movlw	0
 10466  00037E  0100               	movlb	0	; () banked
 10467  000380  21EC               	addwfc	(??_sprintf+1)& (0+255),w,b
 10468  000382  0101               	movlb	1	; () banked
 10469  000384  6F11               	movwf	(sprintf@exp+1)& (0+255),b
 10470                           
 10471                           ; BSR set to: 1
 10472                           ;doprnt.c: 838: exp--;
 10473  000386  0710               	decf	sprintf@exp& (0+255),f,b
 10474  000388  A0D8               	btfss	status,0,c
 10475  00038A  0711               	decf	(sprintf@exp+1)& (0+255),f,b
 10476                           
 10477                           ; BSR set to: 1
 10478                           ;doprnt.c: 839: exp *= 3;
 10479  00038C  C110  F06E         	movff	sprintf@exp,___wmul@multiplier
 10480  000390  C111  F06F         	movff	sprintf@exp+1,___wmul@multiplier+1
 10481  000394  0E00               	movlw	0
 10482  000396  0100               	movlb	0	; () banked
 10483  000398  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10484  00039A  0E03               	movlw	3
 10485  00039C  6F70               	movwf	___wmul@multiplicand& (0+255),b
 10486  00039E  ECC0  F02A         	call	___wmul	;wreg free
 10487  0003A2  C06E  F110         	movff	?___wmul,sprintf@exp
 10488  0003A6  C06F  F111         	movff	?___wmul+1,sprintf@exp+1
 10489                           
 10490                           ;doprnt.c: 840: exp /= 10;
 10491  0003AA  C110  F066         	movff	sprintf@exp,___awdiv@dividend
 10492  0003AE  C111  F067         	movff	sprintf@exp+1,___awdiv@dividend+1
 10493  0003B2  0E00               	movlw	0
 10494  0003B4  0100               	movlb	0	; () banked
 10495  0003B6  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 10496  0003B8  0E0A               	movlw	10
 10497  0003BA  6F68               	movwf	___awdiv@divisor& (0+255),b
 10498  0003BC  EC8D  F024         	call	___awdiv	;wreg free
 10499  0003C0  C066  F110         	movff	?___awdiv,sprintf@exp
 10500  0003C4  C067  F111         	movff	?___awdiv+1,sprintf@exp+1
 10501                           
 10502                           ;doprnt.c: 841: if(exp < 0)
 10503  0003C8  0101               	movlb	1	; () banked
 10504  0003CA  AF11               	btfss	(sprintf@exp+1)& (0+255),7,b
 10505  0003CC  D003               	goto	l2689
 10506                           
 10507                           ; BSR set to: 1
 10508                           ;doprnt.c: 842: exp--;
 10509  0003CE  0710               	decf	sprintf@exp& (0+255),f,b
 10510  0003D0  A0D8               	btfss	status,0,c
 10511  0003D2  0711               	decf	(sprintf@exp+1)& (0+255),f,b
 10512  0003D4                     l2689:
 10513                           
 10514                           ; BSR set to: 1
 10515                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 10516                           
 10517                           ; BSR set to: 1
 10518  0003D4  5110               	movf	sprintf@exp& (0+255),w,b
 10519  0003D6  0800               	sublw	0
 10520  0003D8  ECD8  F00B         	call	_scale
 10521  0003DC  C08F  F10C         	movff	?_scale,sprintf@tmpval
 10522  0003E0  C090  F10D         	movff	?_scale+1,sprintf@tmpval+1
 10523  0003E4  C091  F10E         	movff	?_scale+2,sprintf@tmpval+2
 10524                           
 10525                           ;doprnt.c: 847: tmpval.integ *= fval;
 10526  0003E8  C10C  F080         	movff	sprintf@tmpval,___ftmul@f1
 10527  0003EC  C10D  F081         	movff	sprintf@tmpval+1,___ftmul@f1+1
 10528  0003F0  C10E  F082         	movff	sprintf@tmpval+2,___ftmul@f1+2
 10529  0003F4  C116  F083         	movff	sprintf@fval,___ftmul@f2
 10530  0003F8  C117  F084         	movff	sprintf@fval+1,___ftmul@f2+1
 10531  0003FC  C118  F085         	movff	sprintf@fval+2,___ftmul@f2+2
 10532  000400  EC21  F01D         	call	___ftmul	;wreg free
 10533  000404  C080  F10C         	movff	?___ftmul,sprintf@tmpval
 10534  000408  C081  F10D         	movff	?___ftmul+1,sprintf@tmpval+1
 10535  00040C  C082  F10E         	movff	?___ftmul+2,sprintf@tmpval+2
 10536                           
 10537                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 10538  000410  C10C  F060         	movff	sprintf@tmpval,___ftge@ff1
 10539  000414  C10D  F061         	movff	sprintf@tmpval+1,___ftge@ff1+1
 10540  000418  C10E  F062         	movff	sprintf@tmpval+2,___ftge@ff1+2
 10541  00041C  0E00               	movlw	0
 10542  00041E  0100               	movlb	0	; () banked
 10543  000420  6F63               	movwf	___ftge@ff2& (0+255),b
 10544  000422  0E80               	movlw	128
 10545  000424  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
 10546  000426  0E3F               	movlw	63
 10547  000428  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
 10548  00042A  ECB4  F023         	call	___ftge	;wreg free
 10549  00042E  0100               	movlb	0	; () banked
 10550  000430  B0D8               	btfsc	status,0,c
 10551  000432  D005               	goto	l2690
 10552                           
 10553                           ; BSR set to: 0
 10554                           ;doprnt.c: 849: exp--;
 10555  000434  0101               	movlb	1	; () banked
 10556  000436  0710               	decf	sprintf@exp& (0+255),f,b
 10557  000438  A0D8               	btfss	status,0,c
 10558  00043A  0711               	decf	(sprintf@exp+1)& (0+255),f,b
 10559  00043C  D015               	goto	l2692
 10560  00043E                     l2690:
 10561                           
 10562                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 10563                           
 10564                           ; BSR set to: 1
 10565  00043E  C10C  F060         	movff	sprintf@tmpval,___ftge@ff1
 10566  000442  C10D  F061         	movff	sprintf@tmpval+1,___ftge@ff1+1
 10567  000446  C10E  F062         	movff	sprintf@tmpval+2,___ftge@ff1+2
 10568  00044A  0E00               	movlw	0
 10569  00044C  0100               	movlb	0	; () banked
 10570  00044E  6F63               	movwf	___ftge@ff2& (0+255),b
 10571  000450  0E20               	movlw	32
 10572  000452  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
 10573  000454  0E41               	movlw	65
 10574  000456  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
 10575  000458  ECB4  F023         	call	___ftge	;wreg free
 10576  00045C  0100               	movlb	0	; () banked
 10577  00045E  A0D8               	btfss	status,0,c
 10578  000460  D003               	goto	l2692
 10579                           
 10580                           ; BSR set to: 0
 10581                           ;doprnt.c: 851: exp++;
 10582  000462  0101               	movlb	1	; () banked
 10583  000464  4B10               	infsnz	sprintf@exp& (0+255),f,b
 10584  000466  2B11               	incf	(sprintf@exp+1)& (0+255),f,b
 10585  000468                     l2692:
 10586                           
 10587                           ;doprnt.c: 852: }
 10588                           ;doprnt.c: 1112: if(prec <= 12)
 10589                           
 10590                           ; BSR set to: 1
 10591                           
 10592                           ; BSR set to: 1
 10593                           
 10594                           ; BSR set to: 1
 10595  000468  0101               	movlb	1	; () banked
 10596  00046A  BF1E               	btfsc	(sprintf@prec+1)& (0+255),7,b
 10597  00046C  D006               	goto	u8160
 10598  00046E  511E               	movf	(sprintf@prec+1)& (0+255),w,b
 10599  000470  E11B               	bnz	l9122
 10600  000472  0E0D               	movlw	13
 10601  000474  5D1D               	subwf	sprintf@prec& (0+255),w,b
 10602  000476  B0D8               	btfsc	status,0,c
 10603  000478  D017               	goto	l2693
 10604  00047A                     u8160:
 10605                           
 10606                           ; BSR set to: 1
 10607                           ;doprnt.c: 1113: fval += fround(prec);
 10608  00047A  C116  F074         	movff	sprintf@fval,___ftadd@f1
 10609  00047E  C117  F075         	movff	sprintf@fval+1,___ftadd@f1+1
 10610  000482  C118  F076         	movff	sprintf@fval+2,___ftadd@f1+2
 10611  000486  511D               	movf	sprintf@prec& (0+255),w,b
 10612  000488  EC65  F012         	call	_fround
 10613  00048C  C08F  F077         	movff	?_fround,___ftadd@f2
 10614  000490  C090  F078         	movff	?_fround+1,___ftadd@f2+1
 10615  000494  C091  F079         	movff	?_fround+2,___ftadd@f2+2
 10616  000498  EC7F  F014         	call	___ftadd	;wreg free
 10617  00049C  C074  F116         	movff	?___ftadd,sprintf@fval
 10618  0004A0  C075  F117         	movff	?___ftadd+1,sprintf@fval+1
 10619  0004A4  C076  F118         	movff	?___ftadd+2,sprintf@fval+2
 10620  0004A8                     l2693:
 10621  0004A8                     l9122:
 10622                           
 10623                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 10624  0004A8  0101               	movlb	1	; () banked
 10625  0004AA  BF11               	btfsc	(sprintf@exp+1)& (0+255),7,b
 10626  0004AC  D006               	goto	u8170
 10627  0004AE  5111               	movf	(sprintf@exp+1)& (0+255),w,b
 10628  0004B0  E121               	bnz	l9130
 10629  0004B2  0E0A               	movlw	10
 10630  0004B4  5D10               	subwf	sprintf@exp& (0+255),w,b
 10631  0004B6  B0D8               	btfsc	status,0,c
 10632  0004B8  D01D               	goto	u8200
 10633  0004BA                     u8170:
 10634                           
 10635                           ; BSR set to: 1
 10636  0004BA  5116               	movf	sprintf@fval& (0+255),w,b
 10637  0004BC  1117               	iorwf	(sprintf@fval+1)& (0+255),w,b
 10638  0004BE  1118               	iorwf	(sprintf@fval+2)& (0+255),w,b
 10639  0004C0  B4D8               	btfsc	status,2,c
 10640  0004C2  D059               	goto	l2694
 10641                           
 10642                           ; BSR set to: 1
 10643  0004C4  C116  F0B0         	movff	sprintf@fval,___fttol@f1
 10644  0004C8  C117  F0B1         	movff	sprintf@fval+1,___fttol@f1+1
 10645  0004CC  C118  F0B2         	movff	sprintf@fval+2,___fttol@f1+2
 10646  0004D0  ECA5  F01C         	call	___fttol	;wreg free
 10647  0004D4  0100               	movlb	0	; () banked
 10648  0004D6  51B0               	movf	?___fttol& (0+255),w,b
 10649  0004D8  11B1               	iorwf	(?___fttol+1)& (0+255),w,b
 10650  0004DA  11B2               	iorwf	(?___fttol+2)& (0+255),w,b
 10651  0004DC  11B3               	iorwf	(?___fttol+3)& (0+255),w,b
 10652  0004DE  A4D8               	btfss	status,2,c
 10653  0004E0  D04A               	goto	l2694
 10654                           
 10655                           ; BSR set to: 0
 10656  0004E2  0101               	movlb	1	; () banked
 10657  0004E4  BF11               	btfsc	(sprintf@exp+1)& (0+255),7,b
 10658  0004E6  D047               	goto	l2694
 10659  0004E8  5111               	movf	(sprintf@exp+1)& (0+255),w,b
 10660  0004EA  E104               	bnz	l9130
 10661  0004EC  0E02               	movlw	2
 10662  0004EE  5D10               	subwf	sprintf@exp& (0+255),w,b
 10663  0004F0  A0D8               	btfss	status,0,c
 10664  0004F2  D041               	goto	l2694
 10665  0004F4                     u8200:
 10666  0004F4                     l9130:
 10667                           
 10668                           ; BSR set to: 1
 10669                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 10670  0004F4  C10C  F060         	movff	sprintf@tmpval,___ftge@ff1
 10671  0004F8  C10D  F061         	movff	sprintf@tmpval+1,___ftge@ff1+1
 10672  0004FC  C10E  F062         	movff	sprintf@tmpval+2,___ftge@ff1+2
 10673  000500  0E70               	movlw	112
 10674  000502  0100               	movlb	0	; () banked
 10675  000504  6F63               	movwf	___ftge@ff2& (0+255),b
 10676  000506  0E89               	movlw	137
 10677  000508  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
 10678  00050A  0E40               	movlw	64
 10679  00050C  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
 10680  00050E  ECB4  F023         	call	___ftge	;wreg free
 10681  000512  0100               	movlb	0	; () banked
 10682  000514  B0D8               	btfsc	status,0,c
 10683  000516  D003               	goto	l2697
 10684                           
 10685                           ; BSR set to: 0
 10686                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 10687  000518  0101               	movlb	1	; () banked
 10688  00051A  0EF7               	movlw	247
 10689  00051C  D002               	goto	L11
 10690  00051E                     l2697:
 10691                           
 10692                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 10693                           
 10694                           ; BSR set to: 1
 10695  00051E  0101               	movlb	1	; () banked
 10696  000520  0EF8               	movlw	248
 10697  000522                     L11:
 10698  000522  2710               	addwf	sprintf@exp& (0+255),f,b
 10699  000524  0EFF               	movlw	255
 10700  000526  2311               	addwfc	(sprintf@exp+1)& (0+255),f,b
 10701                           
 10702                           ; BSR set to: 1
 10703                           ;doprnt.c: 1124: }
 10704                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
 10705                           
 10706                           ; BSR set to: 1
 10707  000528  5110               	movf	sprintf@exp& (0+255),w,b
 10708  00052A  ECD8  F00B         	call	_scale
 10709  00052E  C08F  F10C         	movff	?_scale,sprintf@tmpval
 10710  000532  C090  F10D         	movff	?_scale+1,sprintf@tmpval+1
 10711  000536  C091  F10E         	movff	?_scale+2,sprintf@tmpval+2
 10712                           
 10713                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 10714  00053A  C116  F060         	movff	sprintf@fval,__tdiv_to_l_@f1
 10715  00053E  C117  F061         	movff	sprintf@fval+1,__tdiv_to_l_@f1+1
 10716  000542  C118  F062         	movff	sprintf@fval+2,__tdiv_to_l_@f1+2
 10717  000546  C10C  F063         	movff	sprintf@tmpval,__tdiv_to_l_@f2
 10718  00054A  C10D  F064         	movff	sprintf@tmpval+1,__tdiv_to_l_@f2+1
 10719  00054E  C10E  F065         	movff	sprintf@tmpval+2,__tdiv_to_l_@f2+2
 10720  000552  EC99  F016         	call	__tdiv_to_l_	;wreg free
 10721  000556  C060  F112         	movff	?__tdiv_to_l_,sprintf@val
 10722  00055A  C061  F113         	movff	?__tdiv_to_l_+1,sprintf@val+1
 10723  00055E  C062  F114         	movff	?__tdiv_to_l_+2,sprintf@val+2
 10724  000562  C063  F115         	movff	?__tdiv_to_l_+3,sprintf@val+3
 10725                           
 10726                           ;doprnt.c: 1129: fval = 0.0;
 10727  000566  0E00               	movlw	0
 10728  000568  0101               	movlb	1	; () banked
 10729  00056A  6F16               	movwf	sprintf@fval& (0+255),b
 10730  00056C  0E00               	movlw	0
 10731  00056E  6F17               	movwf	(sprintf@fval+1)& (0+255),b
 10732  000570  0E00               	movlw	0
 10733  000572  6F18               	movwf	(sprintf@fval+2)& (0+255),b
 10734                           
 10735                           ;doprnt.c: 1130: } else {
 10736  000574  D033               	goto	l2703
 10737  000576                     l2694:
 10738                           
 10739                           ;doprnt.c: 1131: val = (unsigned long)fval;
 10740                           
 10741                           ; BSR set to: 1
 10742  000576  C116  F0B0         	movff	sprintf@fval,___fttol@f1
 10743  00057A  C117  F0B1         	movff	sprintf@fval+1,___fttol@f1+1
 10744  00057E  C118  F0B2         	movff	sprintf@fval+2,___fttol@f1+2
 10745  000582  ECA5  F01C         	call	___fttol	;wreg free
 10746  000586  C0B0  F112         	movff	?___fttol,sprintf@val
 10747  00058A  C0B1  F113         	movff	?___fttol+1,sprintf@val+1
 10748  00058E  C0B2  F114         	movff	?___fttol+2,sprintf@val+2
 10749  000592  C0B3  F115         	movff	?___fttol+3,sprintf@val+3
 10750                           
 10751                           ;doprnt.c: 1132: fval -= (double)val;
 10752  000596  C116  F080         	movff	sprintf@fval,___ftsub@f1
 10753  00059A  C117  F081         	movff	sprintf@fval+1,___ftsub@f1+1
 10754  00059E  C118  F082         	movff	sprintf@fval+2,___ftsub@f1+2
 10755  0005A2  C112  F068         	movff	sprintf@val,___lltoft@c
 10756  0005A6  C113  F069         	movff	sprintf@val+1,___lltoft@c+1
 10757  0005AA  C114  F06A         	movff	sprintf@val+2,___lltoft@c+2
 10758  0005AE  C115  F06B         	movff	sprintf@val+3,___lltoft@c+3
 10759  0005B2  EC4A  F027         	call	___lltoft	;wreg free
 10760  0005B6  C068  F083         	movff	?___lltoft,___ftsub@f2
 10761  0005BA  C069  F084         	movff	?___lltoft+1,___ftsub@f2+1
 10762  0005BE  C06A  F085         	movff	?___lltoft+2,___ftsub@f2+2
 10763  0005C2  EC22  F029         	call	___ftsub	;wreg free
 10764  0005C6  C080  F116         	movff	?___ftsub,sprintf@fval
 10765  0005CA  C081  F117         	movff	?___ftsub+1,sprintf@fval+1
 10766  0005CE  C082  F118         	movff	?___ftsub+2,sprintf@fval+2
 10767                           
 10768                           ;doprnt.c: 1133: exp = 0;
 10769  0005D2  0E00               	movlw	0
 10770  0005D4  0101               	movlb	1	; () banked
 10771  0005D6  6F11               	movwf	(sprintf@exp+1)& (0+255),b
 10772  0005D8  0E00               	movlw	0
 10773  0005DA  6F10               	movwf	sprintf@exp& (0+255),b
 10774  0005DC                     l2703:
 10775                           
 10776                           ; BSR set to: 1
 10777                           ;doprnt.c: 1134: }
 10778                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 10779                           
 10780                           ; BSR set to: 1
 10781  0005DC  0E01               	movlw	1
 10782  0005DE  6F1F               	movwf	sprintf@c& (0+255),b
 10783  0005E0                     l9150:
 10784                           
 10785                           ; BSR set to: 1
 10786  0005E0  0E0A               	movlw	10
 10787  0005E2  191F               	xorwf	sprintf@c& (0+255),w,b
 10788  0005E4  B4D8               	btfsc	status,2,c
 10789  0005E6  D018               	goto	u8240
 10790                           
 10791                           ; BSR set to: 1
 10792                           ;doprnt.c: 1137: if(val < dpowers[c])
 10793                           
 10794                           ; BSR set to: 1
 10795                           
 10796                           ; BSR set to: 1
 10797  0005E8  511F               	movf	sprintf@c& (0+255),w,b
 10798  0005EA  0D04               	mullw	4
 10799  0005EC  0ED3               	movlw	low _dpowers
 10800  0005EE  24F3               	addwf	prodl,w,c
 10801  0005F0  6EF6               	movwf	tblptrl,c
 10802  0005F2  0E7B               	movlw	high _dpowers
 10803  0005F4  20F4               	addwfc	prodh,w,c
 10804  0005F6  6EF7               	movwf	tblptrh,c
 10805  0005F8                     	if	0	;There are less than 3 active tblptr bytes
 10806  0005F8                     	endif
 10807  0005F8  0009               	tblrd		*+
 10808  0005FA  50F5               	movf	tablat,w,c
 10809  0005FC  5D12               	subwf	sprintf@val& (0+255),w,b
 10810  0005FE  0009               	tblrd		*+
 10811  000600  50F5               	movf	tablat,w,c
 10812  000602  5913               	subwfb	(sprintf@val+1)& (0+255),w,b
 10813  000604  0009               	tblrd		*+
 10814  000606  50F5               	movf	tablat,w,c
 10815  000608  5914               	subwfb	(sprintf@val+2)& (0+255),w,b
 10816  00060A  0009               	tblrd		*+
 10817  00060C  50F5               	movf	tablat,w,c
 10818  00060E  5915               	subwfb	(sprintf@val+3)& (0+255),w,b
 10819  000610  A0D8               	btfss	status,0,c
 10820  000612  D002               	goto	u8240
 10821                           
 10822                           ; BSR set to: 1
 10823                           
 10824                           ; BSR set to: 1
 10825                           
 10826                           ; BSR set to: 1
 10827                           ;doprnt.c: 1138: break;
 10828  000614  2B1F               	incf	sprintf@c& (0+255),f,b
 10829  000616  D7E4               	goto	l9150
 10830  000618                     u8240:
 10831                           
 10832                           ; BSR set to: 1
 10833                           ;doprnt.c: 1142: width -= prec + c + exp;
 10834                           
 10835                           ; BSR set to: 1
 10836  000618  C11F  F0EB         	movff	sprintf@c,??_sprintf
 10837  00061C  0100               	movlb	0	; () banked
 10838  00061E  6BEC               	clrf	(??_sprintf+1)& (0+255),b
 10839  000620  BFEB               	btfsc	??_sprintf& (0+255),7,b
 10840  000622  07EC               	decf	(??_sprintf+1)& (0+255),f,b
 10841  000624  0101               	movlb	1	; () banked
 10842  000626  511D               	movf	sprintf@prec& (0+255),w,b
 10843  000628  0100               	movlb	0	; () banked
 10844  00062A  27EB               	addwf	??_sprintf& (0+255),f,b
 10845  00062C  0101               	movlb	1	; () banked
 10846  00062E  511E               	movf	(sprintf@prec+1)& (0+255),w,b
 10847  000630  0100               	movlb	0	; () banked
 10848  000632  23EC               	addwfc	(??_sprintf+1)& (0+255),f,b
 10849  000634  0101               	movlb	1	; () banked
 10850  000636  5110               	movf	sprintf@exp& (0+255),w,b
 10851  000638  0100               	movlb	0	; () banked
 10852  00063A  27EB               	addwf	??_sprintf& (0+255),f,b
 10853  00063C  0101               	movlb	1	; () banked
 10854  00063E  5111               	movf	(sprintf@exp+1)& (0+255),w,b
 10855  000640  0100               	movlb	0	; () banked
 10856  000642  23EC               	addwfc	(??_sprintf+1)& (0+255),f,b
 10857  000644  51EB               	movf	??_sprintf& (0+255),w,b
 10858  000646  0101               	movlb	1	; () banked
 10859  000648  5F19               	subwf	sprintf@width& (0+255),f,b
 10860  00064A  0100               	movlb	0	; () banked
 10861  00064C  51EC               	movf	(??_sprintf+1)& (0+255),w,b
 10862  00064E  0101               	movlb	1	; () banked
 10863  000650  5B1A               	subwfb	(sprintf@width+1)& (0+255),f,b
 10864                           
 10865                           ;doprnt.c: 1143: if(
 10866                           ;doprnt.c: 1147: prec)
 10867  000652  511D               	movf	sprintf@prec& (0+255),w,b
 10868  000654  111E               	iorwf	(sprintf@prec+1)& (0+255),w,b
 10869  000656  B4D8               	btfsc	status,2,c
 10870  000658  D003               	goto	l2707
 10871                           
 10872                           ; BSR set to: 1
 10873                           ;doprnt.c: 1148: width--;
 10874  00065A  0719               	decf	sprintf@width& (0+255),f,b
 10875  00065C  A0D8               	btfss	status,0,c
 10876  00065E  071A               	decf	(sprintf@width+1)& (0+255),f,b
 10877  000660                     l2707:
 10878                           
 10879                           ; BSR set to: 1
 10880                           ;doprnt.c: 1149: if(flag & 0x03)
 10881                           
 10882                           ; BSR set to: 1
 10883  000660  0E03               	movlw	3
 10884  000662  151B               	andwf	sprintf@flag& (0+255),w,b
 10885  000664  0100               	movlb	0	; () banked
 10886  000666  6FEB               	movwf	??_sprintf& (0+255),b
 10887  000668  0E00               	movlw	0
 10888  00066A  0101               	movlb	1	; () banked
 10889  00066C  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
 10890  00066E  0100               	movlb	0	; () banked
 10891  000670  6FEC               	movwf	(??_sprintf+1)& (0+255),b
 10892  000672  51EB               	movf	??_sprintf& (0+255),w,b
 10893  000674  11EC               	iorwf	(??_sprintf+1)& (0+255),w,b
 10894  000676  B4D8               	btfsc	status,2,c
 10895  000678  D004               	goto	l2708
 10896                           
 10897                           ; BSR set to: 0
 10898                           ;doprnt.c: 1150: width--;
 10899  00067A  0101               	movlb	1	; () banked
 10900  00067C  0719               	decf	sprintf@width& (0+255),f,b
 10901  00067E  A0D8               	btfss	status,0,c
 10902  000680  071A               	decf	(sprintf@width+1)& (0+255),f,b
 10903  000682                     l2708:
 10904                           
 10905                           ;doprnt.c: 1153: if(flag & 0x04) {
 10906                           
 10907                           ; BSR set to: 1
 10908  000682  0101               	movlb	1	; () banked
 10909  000684  A51B               	btfss	sprintf@flag& (0+255),2,b
 10910  000686  D039               	goto	l2715
 10911                           
 10912                           ; BSR set to: 1
 10913                           ;doprnt.c: 1157: if(flag & 0x03)
 10914  000688  0E03               	movlw	3
 10915  00068A  151B               	andwf	sprintf@flag& (0+255),w,b
 10916  00068C  0100               	movlb	0	; () banked
 10917  00068E  6FEB               	movwf	??_sprintf& (0+255),b
 10918  000690  0E00               	movlw	0
 10919  000692  0101               	movlb	1	; () banked
 10920  000694  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
 10921  000696  0100               	movlb	0	; () banked
 10922  000698  6FEC               	movwf	(??_sprintf+1)& (0+255),b
 10923  00069A  51EB               	movf	??_sprintf& (0+255),w,b
 10924  00069C  11EC               	iorwf	(??_sprintf+1)& (0+255),w,b
 10925  00069E  B4D8               	btfsc	status,2,c
 10926  0006A0  D016               	goto	l2711
 10927                           
 10928                           ; BSR set to: 0
 10929                           ;doprnt.c: 1159: ((*sp++ = ('-')));
 10930  0006A2  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 10931  0006A6  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 10932  0006AA  0E2D               	movlw	45
 10933  0006AC  6EDF               	movwf	indf2,c
 10934                           
 10935                           ; BSR set to: 0
 10936  0006AE  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 10937  0006B0  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 10938                           
 10939                           ; BSR set to: 0
 10940                           ;doprnt.c: 1168: while(width > 0) {
 10941  0006B2  D00D               	goto	l2711
 10942  0006B4                     l9178:
 10943                           
 10944                           ;doprnt.c: 1169: ((*sp++ = ('0')));
 10945  0006B4  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 10946  0006B8  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 10947  0006BC  0E30               	movlw	48
 10948  0006BE  6EDF               	movwf	indf2,c
 10949  0006C0  0100               	movlb	0	; () banked
 10950  0006C2  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 10951  0006C4  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 10952                           
 10953                           ; BSR set to: 0
 10954                           ;doprnt.c: 1170: width--;
 10955  0006C6  0101               	movlb	1	; () banked
 10956  0006C8  0719               	decf	sprintf@width& (0+255),f,b
 10957  0006CA  A0D8               	btfss	status,0,c
 10958  0006CC  071A               	decf	(sprintf@width+1)& (0+255),f,b
 10959  0006CE                     l2711:
 10960                           
 10961                           ; BSR set to: 1
 10962  0006CE  0101               	movlb	1	; () banked
 10963  0006D0  BF1A               	btfsc	(sprintf@width+1)& (0+255),7,b
 10964  0006D2  D07B               	goto	l2719
 10965  0006D4  511A               	movf	(sprintf@width+1)& (0+255),w,b
 10966  0006D6  E1EE               	bnz	l9178
 10967  0006D8  0519               	decf	sprintf@width& (0+255),w,b
 10968  0006DA  A0D8               	btfss	status,0,c
 10969  0006DC  D076               	goto	l2719
 10970  0006DE  D7EA               	goto	l2712
 10971  0006E0                     l9186:
 10972                           
 10973                           ; BSR set to: 1
 10974                           ;doprnt.c: 1181: ((*sp++ = (' ')));
 10975  0006E0  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 10976  0006E4  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 10977  0006E8  0E20               	movlw	32
 10978  0006EA  6EDF               	movwf	indf2,c
 10979                           
 10980                           ; BSR set to: 1
 10981  0006EC  0100               	movlb	0	; () banked
 10982  0006EE  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 10983  0006F0  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 10984                           
 10985                           ; BSR set to: 0
 10986                           ;doprnt.c: 1182: width--;
 10987  0006F2  0101               	movlb	1	; () banked
 10988  0006F4  0719               	decf	sprintf@width& (0+255),f,b
 10989  0006F6  A0D8               	btfss	status,0,c
 10990  0006F8  071A               	decf	(sprintf@width+1)& (0+255),f,b
 10991  0006FA                     l2715:
 10992                           
 10993                           ; BSR set to: 1
 10994                           
 10995                           ; BSR set to: 1
 10996  0006FA  BF1A               	btfsc	(sprintf@width+1)& (0+255),7,b
 10997  0006FC  D005               	goto	u8300
 10998  0006FE  511A               	movf	(sprintf@width+1)& (0+255),w,b
 10999  000700  E1EF               	bnz	l9186
 11000  000702  0519               	decf	sprintf@width& (0+255),w,b
 11001  000704  B0D8               	btfsc	status,0,c
 11002  000706  D7EC               	goto	l2716
 11003  000708                     u8300:
 11004                           
 11005                           ; BSR set to: 1
 11006                           ;doprnt.c: 1183: }
 11007                           ;doprnt.c: 1188: if(flag & 0x03)
 11008                           
 11009                           ; BSR set to: 1
 11010  000708  0E03               	movlw	3
 11011  00070A  151B               	andwf	sprintf@flag& (0+255),w,b
 11012  00070C  0100               	movlb	0	; () banked
 11013  00070E  6FEB               	movwf	??_sprintf& (0+255),b
 11014  000710  0E00               	movlw	0
 11015  000712  0101               	movlb	1	; () banked
 11016  000714  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
 11017  000716  0100               	movlb	0	; () banked
 11018  000718  6FEC               	movwf	(??_sprintf+1)& (0+255),b
 11019  00071A  51EB               	movf	??_sprintf& (0+255),w,b
 11020  00071C  11EC               	iorwf	(??_sprintf+1)& (0+255),w,b
 11021  00071E  B4D8               	btfsc	status,2,c
 11022  000720  D054               	goto	l2719
 11023                           
 11024                           ; BSR set to: 0
 11025                           ;doprnt.c: 1190: ((*sp++ = ('-')));
 11026  000722  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 11027  000726  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 11028  00072A  0E2D               	movlw	45
 11029  00072C  6EDF               	movwf	indf2,c
 11030  00072E  D04B               	goto	L12
 11031  000730                     
 11032                           ;doprnt.c: 1200: {
 11033                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 11034                           
 11035                           ; BSR set to: 0
 11036  000730  C112  F060         	movff	sprintf@val,___lldiv@dividend
 11037  000734  C113  F061         	movff	sprintf@val+1,___lldiv@dividend+1
 11038  000738  C114  F062         	movff	sprintf@val+2,___lldiv@dividend+2
 11039  00073C  C115  F063         	movff	sprintf@val+3,___lldiv@dividend+3
 11040  000740  0101               	movlb	1	; () banked
 11041  000742  511F               	movf	sprintf@c& (0+255),w,b
 11042  000744  0D04               	mullw	4
 11043  000746  0ED3               	movlw	low _dpowers
 11044  000748  24F3               	addwf	prodl,w,c
 11045  00074A  6EF6               	movwf	tblptrl,c
 11046  00074C  0E7B               	movlw	high _dpowers
 11047  00074E  20F4               	addwfc	prodh,w,c
 11048  000750  6EF7               	movwf	tblptrh,c
 11049  000752                     	if	0	;There are less than 3 active tblptr bytes
 11050  000752                     	endif
 11051  000752  0009               	tblrd		*+
 11052  000754  CFF5 F064          	movff	tablat,___lldiv@divisor
 11053  000758  0009               	tblrd		*+
 11054  00075A  CFF5 F065          	movff	tablat,___lldiv@divisor+1
 11055  00075E  0009               	tblrd		*+
 11056  000760  CFF5 F066          	movff	tablat,___lldiv@divisor+2
 11057  000764  000A               	tblrd		*-
 11058  000766  CFF5 F067          	movff	tablat,___lldiv@divisor+3
 11059  00076A  EC13  F025         	call	___lldiv	;wreg free
 11060  00076E  C060  F10C         	movff	?___lldiv,sprintf@tmpval
 11061  000772  C061  F10D         	movff	?___lldiv+1,sprintf@tmpval+1
 11062  000776  C062  F10E         	movff	?___lldiv+2,sprintf@tmpval+2
 11063  00077A  C063  F10F         	movff	?___lldiv+3,sprintf@tmpval+3
 11064                           
 11065                           ;doprnt.c: 1202: tmpval.vd %= 10;
 11066  00077E  C10C  F06D         	movff	sprintf@tmpval,___llmod@dividend
 11067  000782  C10D  F06E         	movff	sprintf@tmpval+1,___llmod@dividend+1
 11068  000786  C10E  F06F         	movff	sprintf@tmpval+2,___llmod@dividend+2
 11069  00078A  C10F  F070         	movff	sprintf@tmpval+3,___llmod@dividend+3
 11070  00078E  0E0A               	movlw	10
 11071  000790  0100               	movlb	0	; () banked
 11072  000792  6F71               	movwf	___llmod@divisor& (0+255),b
 11073  000794  0E00               	movlw	0
 11074  000796  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 11075  000798  0E00               	movlw	0
 11076  00079A  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 11077  00079C  0E00               	movlw	0
 11078  00079E  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 11079  0007A0  ECB4  F026         	call	___llmod	;wreg free
 11080  0007A4  C06D  F10C         	movff	?___llmod,sprintf@tmpval
 11081  0007A8  C06E  F10D         	movff	?___llmod+1,sprintf@tmpval+1
 11082  0007AC  C06F  F10E         	movff	?___llmod+2,sprintf@tmpval+2
 11083  0007B0  C070  F10F         	movff	?___llmod+3,sprintf@tmpval+3
 11084                           
 11085                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
 11086  0007B4  0101               	movlb	1	; () banked
 11087  0007B6  510C               	movf	sprintf@tmpval& (0+255),w,b
 11088  0007B8  0F30               	addlw	48
 11089  0007BA  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 11090  0007BE  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 11091  0007C2  6EDF               	movwf	indf2,c
 11092                           
 11093                           ; BSR set to: 1
 11094  0007C4  0100               	movlb	0	; () banked
 11095  0007C6                     L12:
 11096  0007C6  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 11097  0007C8  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 11098  0007CA                     l2719:
 11099                           
 11100                           ; BSR set to: 0
 11101  0007CA  0101               	movlb	1	; () banked
 11102  0007CC  071F               	decf	sprintf@c& (0+255),f,b
 11103  0007CE  291F               	incf	sprintf@c& (0+255),w,b
 11104  0007D0  B4D8               	btfsc	status,2,c
 11105  0007D2  D00E               	goto	l2722
 11106  0007D4  D7AD               	goto	l2720
 11107  0007D6                     l9210:
 11108                           
 11109                           ; BSR set to: 1
 11110                           ;doprnt.c: 1208: ((*sp++ = ('0')));
 11111  0007D6  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 11112  0007DA  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 11113  0007DE  0E30               	movlw	48
 11114  0007E0  6EDF               	movwf	indf2,c
 11115                           
 11116                           ; BSR set to: 1
 11117  0007E2  0100               	movlb	0	; () banked
 11118  0007E4  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 11119  0007E6  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 11120                           
 11121                           ; BSR set to: 0
 11122                           ;doprnt.c: 1209: exp--;
 11123  0007E8  0101               	movlb	1	; () banked
 11124  0007EA  0710               	decf	sprintf@exp& (0+255),f,b
 11125  0007EC  A0D8               	btfss	status,0,c
 11126  0007EE  0711               	decf	(sprintf@exp+1)& (0+255),f,b
 11127  0007F0                     l2722:
 11128                           
 11129                           ; BSR set to: 1
 11130                           
 11131                           ; BSR set to: 1
 11132  0007F0  BF11               	btfsc	(sprintf@exp+1)& (0+255),7,b
 11133  0007F2  D005               	goto	u8330
 11134  0007F4  5111               	movf	(sprintf@exp+1)& (0+255),w,b
 11135  0007F6  E1EF               	bnz	l9210
 11136  0007F8  0510               	decf	sprintf@exp& (0+255),w,b
 11137  0007FA  B0D8               	btfsc	status,0,c
 11138  0007FC  D7EC               	goto	l2723
 11139  0007FE                     u8330:
 11140                           
 11141                           ; BSR set to: 1
 11142                           ;doprnt.c: 1210: }
 11143                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 11144                           
 11145                           ; BSR set to: 1
 11146  0007FE  BF1E               	btfsc	(sprintf@prec+1)& (0+255),7,b
 11147  000800  D009               	goto	l2725
 11148  000802  511E               	movf	(sprintf@prec+1)& (0+255),w,b
 11149  000804  E104               	bnz	u8340
 11150  000806  0E09               	movlw	9
 11151  000808  5D1D               	subwf	sprintf@prec& (0+255),w,b
 11152  00080A  A0D8               	btfss	status,0,c
 11153  00080C  D003               	goto	l2725
 11154  00080E                     u8340:
 11155                           
 11156                           ; BSR set to: 1
 11157                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 11158  00080E  0E08               	movlw	8
 11159  000810  6F1F               	movwf	sprintf@c& (0+255),b
 11160  000812  D002               	goto	l2726
 11161  000814                     l2725:
 11162                           
 11163                           ; BSR set to: 1
 11164                           ;doprnt.c: 1213: else
 11165                           ;doprnt.c: 1214: c = prec;
 11166  000814  C11D  F11F         	movff	sprintf@prec,sprintf@c
 11167  000818                     l2726:
 11168                           
 11169                           ; BSR set to: 1
 11170                           ;doprnt.c: 1215: prec -= c;
 11171                           
 11172                           ; BSR set to: 1
 11173  000818  511F               	movf	sprintf@c& (0+255),w,b
 11174  00081A  5F1D               	subwf	sprintf@prec& (0+255),f,b
 11175  00081C  0E00               	movlw	0
 11176  00081E  BF1F               	btfsc	sprintf@c& (0+255),7,b
 11177  000820  0EFF               	movlw	255
 11178  000822  5B1E               	subwfb	(sprintf@prec+1)& (0+255),f,b
 11179                           
 11180                           ; BSR set to: 1
 11181                           ;doprnt.c: 1219: if(c)
 11182  000824  511F               	movf	sprintf@c& (0+255),w,b
 11183  000826  B4D8               	btfsc	status,2,c
 11184  000828  D009               	goto	l2727
 11185                           
 11186                           ; BSR set to: 1
 11187                           ;doprnt.c: 1221: ((*sp++ = ('.')));
 11188  00082A  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 11189  00082E  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 11190  000832  0E2E               	movlw	46
 11191  000834  6EDF               	movwf	indf2,c
 11192                           
 11193                           ; BSR set to: 1
 11194  000836  0100               	movlb	0	; () banked
 11195  000838  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 11196  00083A  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 11197  00083C                     l2727:
 11198                           
 11199                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 11200                           
 11201                           ; BSR set to: 0
 11202  00083C  0101               	movlb	1	; () banked
 11203  00083E  511F               	movf	sprintf@c& (0+255),w,b
 11204  000840  ECD8  F00B         	call	_scale
 11205  000844  C08F  F100         	movff	?_scale,_sprintf$5961
 11206  000848  C090  F101         	movff	?_scale+1,_sprintf$5961+1
 11207  00084C  C091  F102         	movff	?_scale+2,_sprintf$5961+2
 11208                           
 11209                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 11210  000850  C116  F083         	movff	sprintf@fval,___ftmul@f2
 11211  000854  C117  F084         	movff	sprintf@fval+1,___ftmul@f2+1
 11212  000858  C118  F085         	movff	sprintf@fval+2,___ftmul@f2+2
 11213  00085C  C100  F080         	movff	_sprintf$5961,___ftmul@f1
 11214  000860  C101  F081         	movff	_sprintf$5961+1,___ftmul@f1+1
 11215  000864  C102  F082         	movff	_sprintf$5961+2,___ftmul@f1+2
 11216  000868  EC21  F01D         	call	___ftmul	;wreg free
 11217  00086C  C080  F0B0         	movff	?___ftmul,___fttol@f1
 11218  000870  C081  F0B1         	movff	?___ftmul+1,___fttol@f1+1
 11219  000874  C082  F0B2         	movff	?___ftmul+2,___fttol@f1+2
 11220  000878  ECA5  F01C         	call	___fttol	;wreg free
 11221  00087C  C0B0  F112         	movff	?___fttol,sprintf@val
 11222  000880  C0B1  F113         	movff	?___fttol+1,sprintf@val+1
 11223  000884  C0B2  F114         	movff	?___fttol+2,sprintf@val+2
 11224  000888  C0B3  F115         	movff	?___fttol+3,sprintf@val+3
 11225                           
 11226                           ;doprnt.c: 1228: while(c--) {
 11227  00088C  D074               	goto	l2728
 11228  00088E                     
 11229                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 11230  00088E  C112  F060         	movff	sprintf@val,___lldiv@dividend
 11231  000892  C113  F061         	movff	sprintf@val+1,___lldiv@dividend+1
 11232  000896  C114  F062         	movff	sprintf@val+2,___lldiv@dividend+2
 11233  00089A  C115  F063         	movff	sprintf@val+3,___lldiv@dividend+3
 11234  00089E  0101               	movlb	1	; () banked
 11235  0008A0  511F               	movf	sprintf@c& (0+255),w,b
 11236  0008A2  0D04               	mullw	4
 11237  0008A4  0ED3               	movlw	low _dpowers
 11238  0008A6  24F3               	addwf	prodl,w,c
 11239  0008A8  6EF6               	movwf	tblptrl,c
 11240  0008AA  0E7B               	movlw	high _dpowers
 11241  0008AC  20F4               	addwfc	prodh,w,c
 11242  0008AE  6EF7               	movwf	tblptrh,c
 11243  0008B0                     	if	0	;There are less than 3 active tblptr bytes
 11244  0008B0                     	endif
 11245  0008B0  0009               	tblrd		*+
 11246  0008B2  CFF5 F064          	movff	tablat,___lldiv@divisor
 11247  0008B6  0009               	tblrd		*+
 11248  0008B8  CFF5 F065          	movff	tablat,___lldiv@divisor+1
 11249  0008BC  0009               	tblrd		*+
 11250  0008BE  CFF5 F066          	movff	tablat,___lldiv@divisor+2
 11251  0008C2  000A               	tblrd		*-
 11252  0008C4  CFF5 F067          	movff	tablat,___lldiv@divisor+3
 11253  0008C8  EC13  F025         	call	___lldiv	;wreg free
 11254  0008CC  C060  F10C         	movff	?___lldiv,sprintf@tmpval
 11255  0008D0  C061  F10D         	movff	?___lldiv+1,sprintf@tmpval+1
 11256  0008D4  C062  F10E         	movff	?___lldiv+2,sprintf@tmpval+2
 11257  0008D8  C063  F10F         	movff	?___lldiv+3,sprintf@tmpval+3
 11258                           
 11259                           ;doprnt.c: 1230: tmpval.vd %= 10;
 11260  0008DC  C10C  F06D         	movff	sprintf@tmpval,___llmod@dividend
 11261  0008E0  C10D  F06E         	movff	sprintf@tmpval+1,___llmod@dividend+1
 11262  0008E4  C10E  F06F         	movff	sprintf@tmpval+2,___llmod@dividend+2
 11263  0008E8  C10F  F070         	movff	sprintf@tmpval+3,___llmod@dividend+3
 11264  0008EC  0E0A               	movlw	10
 11265  0008EE  0100               	movlb	0	; () banked
 11266  0008F0  6F71               	movwf	___llmod@divisor& (0+255),b
 11267  0008F2  0E00               	movlw	0
 11268  0008F4  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 11269  0008F6  0E00               	movlw	0
 11270  0008F8  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 11271  0008FA  0E00               	movlw	0
 11272  0008FC  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 11273  0008FE  ECB4  F026         	call	___llmod	;wreg free
 11274  000902  C06D  F10C         	movff	?___llmod,sprintf@tmpval
 11275  000906  C06E  F10D         	movff	?___llmod+1,sprintf@tmpval+1
 11276  00090A  C06F  F10E         	movff	?___llmod+2,sprintf@tmpval+2
 11277  00090E  C070  F10F         	movff	?___llmod+3,sprintf@tmpval+3
 11278                           
 11279                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
 11280  000912  0101               	movlb	1	; () banked
 11281  000914  510C               	movf	sprintf@tmpval& (0+255),w,b
 11282  000916  0F30               	addlw	48
 11283  000918  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 11284  00091C  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 11285  000920  6EDF               	movwf	indf2,c
 11286                           
 11287                           ; BSR set to: 1
 11288  000922  0100               	movlb	0	; () banked
 11289  000924  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 11290  000926  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 11291                           
 11292                           ; BSR set to: 0
 11293                           ;doprnt.c: 1232: val %= dpowers[c];
 11294  000928  C112  F06D         	movff	sprintf@val,___llmod@dividend
 11295  00092C  C113  F06E         	movff	sprintf@val+1,___llmod@dividend+1
 11296  000930  C114  F06F         	movff	sprintf@val+2,___llmod@dividend+2
 11297  000934  C115  F070         	movff	sprintf@val+3,___llmod@dividend+3
 11298  000938  0101               	movlb	1	; () banked
 11299  00093A  511F               	movf	sprintf@c& (0+255),w,b
 11300  00093C  0D04               	mullw	4
 11301  00093E  0ED3               	movlw	low _dpowers
 11302  000940  24F3               	addwf	prodl,w,c
 11303  000942  6EF6               	movwf	tblptrl,c
 11304  000944  0E7B               	movlw	high _dpowers
 11305  000946  20F4               	addwfc	prodh,w,c
 11306  000948  6EF7               	movwf	tblptrh,c
 11307  00094A                     	if	0	;There are less than 3 active tblptr bytes
 11308  00094A                     	endif
 11309  00094A  0009               	tblrd		*+
 11310  00094C  CFF5 F071          	movff	tablat,___llmod@divisor
 11311  000950  0009               	tblrd		*+
 11312  000952  CFF5 F072          	movff	tablat,___llmod@divisor+1
 11313  000956  0009               	tblrd		*+
 11314  000958  CFF5 F073          	movff	tablat,___llmod@divisor+2
 11315  00095C  000A               	tblrd		*-
 11316  00095E  CFF5 F074          	movff	tablat,___llmod@divisor+3
 11317  000962  ECB4  F026         	call	___llmod	;wreg free
 11318  000966  C06D  F112         	movff	?___llmod,sprintf@val
 11319  00096A  C06E  F113         	movff	?___llmod+1,sprintf@val+1
 11320  00096E  C06F  F114         	movff	?___llmod+2,sprintf@val+2
 11321  000972  C070  F115         	movff	?___llmod+3,sprintf@val+3
 11322  000976                     l2728:
 11323  000976  0101               	movlb	1	; () banked
 11324  000978  071F               	decf	sprintf@c& (0+255),f,b
 11325  00097A  291F               	incf	sprintf@c& (0+255),w,b
 11326  00097C  B4D8               	btfsc	status,2,c
 11327  00097E  D00E               	goto	l2731
 11328  000980  D786               	goto	l2729
 11329  000982                     
 11330                           ; BSR set to: 1
 11331                           ;doprnt.c: 1236: ((*sp++ = ('0')));
 11332                           
 11333                           ; BSR set to: 1
 11334  000982  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 11335  000986  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 11336  00098A  0E30               	movlw	48
 11337  00098C  6EDF               	movwf	indf2,c
 11338                           
 11339                           ; BSR set to: 1
 11340  00098E  0100               	movlb	0	; () banked
 11341  000990  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 11342  000992  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 11343                           
 11344                           ; BSR set to: 0
 11345                           ;doprnt.c: 1237: prec--;
 11346  000994  0101               	movlb	1	; () banked
 11347  000996  071D               	decf	sprintf@prec& (0+255),f,b
 11348  000998  A0D8               	btfss	status,0,c
 11349  00099A  071E               	decf	(sprintf@prec+1)& (0+255),f,b
 11350  00099C                     l2731:
 11351                           
 11352                           ; BSR set to: 1
 11353                           
 11354                           ; BSR set to: 1
 11355  00099C  511D               	movf	sprintf@prec& (0+255),w,b
 11356  00099E  111E               	iorwf	(sprintf@prec+1)& (0+255),w,b
 11357  0009A0  B4D8               	btfsc	status,2,c
 11358  0009A2  D220               	goto	u8650
 11359  0009A4  D7EE               	goto	l2732
 11360  0009A6                     l2685:
 11361                           
 11362                           ; BSR set to: 1
 11363                           ;doprnt.c: 1246: }
 11364                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 11365                           
 11366                           ; BSR set to: 1
 11367  0009A6  0EC0               	movlw	192
 11368  0009A8  151B               	andwf	sprintf@flag& (0+255),w,b
 11369  0009AA  0100               	movlb	0	; () banked
 11370  0009AC  6FEB               	movwf	??_sprintf& (0+255),b
 11371  0009AE  0E00               	movlw	0
 11372  0009B0  0101               	movlb	1	; () banked
 11373  0009B2  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
 11374  0009B4  0100               	movlb	0	; () banked
 11375  0009B6  6FEC               	movwf	(??_sprintf+1)& (0+255),b
 11376  0009B8  51EB               	movf	??_sprintf& (0+255),w,b
 11377  0009BA  11EC               	iorwf	(??_sprintf+1)& (0+255),w,b
 11378  0009BC  A4D8               	btfss	status,2,c
 11379  0009BE  D02F               	goto	l2734
 11380                           
 11381                           ; BSR set to: 0
 11382                           ;doprnt.c: 1253: {
 11383                           ;doprnt.c: 1255: if(flag & 0x10)
 11384  0009C0  0101               	movlb	1	; () banked
 11385  0009C2  A91B               	btfss	sprintf@flag& (0+255),4,b
 11386  0009C4  D00E               	goto	l2735
 11387                           
 11388                           ; BSR set to: 1
 11389                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 11390  0009C6  C10A  FFD9         	movff	sprintf@ap,fsr2l
 11391  0009CA  C10B  FFDA         	movff	sprintf@ap+1,fsr2h
 11392  0009CE  CFDE F112          	movff	postinc2,sprintf@val
 11393  0009D2  CFDE F113          	movff	postinc2,sprintf@val+1
 11394  0009D6  CFDE F114          	movff	postinc2,sprintf@val+2
 11395  0009DA  CFDE F115          	movff	postinc2,sprintf@val+3
 11396                           
 11397                           ; BSR set to: 1
 11398  0009DE  0E04               	movlw	4
 11399  0009E0  D00E               	goto	L13
 11400  0009E2                     l2735:
 11401                           
 11402                           ; BSR set to: 1
 11403                           ;doprnt.c: 1257: else
 11404                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 11405                           
 11406                           ; BSR set to: 1
 11407  0009E2  C10A  FFD9         	movff	sprintf@ap,fsr2l
 11408  0009E6  C10B  FFDA         	movff	sprintf@ap+1,fsr2h
 11409  0009EA  CFDE F112          	movff	postinc2,sprintf@val
 11410  0009EE  CFDD F113          	movff	postdec2,sprintf@val+1
 11411  0009F2  0E00               	movlw	0
 11412  0009F4  BF13               	btfsc	(sprintf@val+1)& (0+255),7,b
 11413  0009F6  0EFF               	movlw	-1
 11414  0009F8  6F14               	movwf	(sprintf@val+2)& (0+255),b
 11415  0009FA  6F15               	movwf	(sprintf@val+3)& (0+255),b
 11416                           
 11417                           ; BSR set to: 1
 11418  0009FC  0E02               	movlw	2
 11419  0009FE                     L13:
 11420  0009FE  270A               	addwf	sprintf@ap& (0+255),f,b
 11421  000A00  0E00               	movlw	0
 11422  000A02  230B               	addwfc	(sprintf@ap+1)& (0+255),f,b
 11423                           
 11424                           ; BSR set to: 1
 11425                           ;doprnt.c: 1261: if((long)val < 0) {
 11426                           
 11427                           ; BSR set to: 1
 11428  000A04  AF15               	btfss	(sprintf@val+3)& (0+255),7,b
 11429  000A06  D02E               	goto	l2740
 11430                           
 11431                           ; BSR set to: 1
 11432                           ;doprnt.c: 1262: flag |= 0x03;
 11433  000A08  0E03               	movlw	3
 11434  000A0A  131B               	iorwf	sprintf@flag& (0+255),f,b
 11435                           
 11436                           ; BSR set to: 1
 11437                           ;doprnt.c: 1263: val = -val;
 11438  000A0C  1F15               	comf	(sprintf@val+3)& (0+255),f,b
 11439  000A0E  1F14               	comf	(sprintf@val+2)& (0+255),f,b
 11440  000A10  1F13               	comf	(sprintf@val+1)& (0+255),f,b
 11441  000A12  6D12               	negf	sprintf@val& (0+255),b
 11442  000A14  0E00               	movlw	0
 11443  000A16  2313               	addwfc	(sprintf@val+1)& (0+255),f,b
 11444  000A18  2314               	addwfc	(sprintf@val+2)& (0+255),f,b
 11445  000A1A  2315               	addwfc	(sprintf@val+3)& (0+255),f,b
 11446                           
 11447                           ; BSR set to: 1
 11448                           ;doprnt.c: 1264: }
 11449                           ;doprnt.c: 1266: }
 11450  000A1C  D023               	goto	l2740
 11451  000A1E                     l2734:
 11452                           
 11453                           ; BSR set to: 0
 11454                           ;doprnt.c: 1268: else
 11455                           ;doprnt.c: 1273: {
 11456                           ;doprnt.c: 1281: if(flag & 0x10)
 11457  000A1E  0101               	movlb	1	; () banked
 11458  000A20  A91B               	btfss	sprintf@flag& (0+255),4,b
 11459  000A22  D00E               	goto	l2739
 11460                           
 11461                           ; BSR set to: 1
 11462                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
 11463  000A24  C10A  FFD9         	movff	sprintf@ap,fsr2l
 11464  000A28  C10B  FFDA         	movff	sprintf@ap+1,fsr2h
 11465  000A2C  CFDE F112          	movff	postinc2,sprintf@val
 11466  000A30  CFDE F113          	movff	postinc2,sprintf@val+1
 11467  000A34  CFDE F114          	movff	postinc2,sprintf@val+2
 11468  000A38  CFDE F115          	movff	postinc2,sprintf@val+3
 11469                           
 11470                           ; BSR set to: 1
 11471  000A3C  0E04               	movlw	4
 11472  000A3E  D00F               	goto	L14
 11473  000A40                     l2739:
 11474                           
 11475                           ; BSR set to: 1
 11476                           ;doprnt.c: 1283: else
 11477                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 11478                           
 11479                           ; BSR set to: 1
 11480  000A40  C10A  FFD9         	movff	sprintf@ap,fsr2l
 11481  000A44  C10B  FFDA         	movff	sprintf@ap+1,fsr2h
 11482  000A48  CFDE F0EB          	movff	postinc2,??_sprintf
 11483  000A4C  CFDD F0EC          	movff	postdec2,??_sprintf+1
 11484  000A50  C0EB  F112         	movff	??_sprintf,sprintf@val
 11485  000A54  C0EC  F113         	movff	??_sprintf+1,sprintf@val+1
 11486  000A58  6B14               	clrf	(sprintf@val+2)& (0+255),b
 11487  000A5A  6B15               	clrf	(sprintf@val+3)& (0+255),b
 11488                           
 11489                           ; BSR set to: 1
 11490  000A5C  0E02               	movlw	2
 11491  000A5E                     L14:
 11492  000A5E  270A               	addwf	sprintf@ap& (0+255),f,b
 11493  000A60  0E00               	movlw	0
 11494  000A62  230B               	addwfc	(sprintf@ap+1)& (0+255),f,b
 11495  000A64                     l2740:
 11496                           
 11497                           ; BSR set to: 1
 11498                           ;doprnt.c: 1287: }
 11499                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 11500                           
 11501                           ; BSR set to: 1
 11502                           
 11503                           ; BSR set to: 1
 11504  000A64  511D               	movf	sprintf@prec& (0+255),w,b
 11505  000A66  111E               	iorwf	(sprintf@prec+1)& (0+255),w,b
 11506  000A68  A4D8               	btfss	status,2,c
 11507  000A6A  D045               	goto	l2742
 11508                           
 11509                           ; BSR set to: 1
 11510  000A6C  5112               	movf	sprintf@val& (0+255),w,b
 11511  000A6E  1113               	iorwf	(sprintf@val+1)& (0+255),w,b
 11512  000A70  1114               	iorwf	(sprintf@val+2)& (0+255),w,b
 11513  000A72  1115               	iorwf	(sprintf@val+3)& (0+255),w,b
 11514  000A74  A4D8               	btfss	status,2,c
 11515  000A76  D03F               	goto	l2742
 11516                           
 11517                           ; BSR set to: 1
 11518                           ;doprnt.c: 1291: prec++;
 11519  000A78  4B1D               	infsnz	sprintf@prec& (0+255),f,b
 11520  000A7A  2B1E               	incf	(sprintf@prec+1)& (0+255),f,b
 11521                           
 11522                           ; BSR set to: 1
 11523                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 11524  000A7C  D03C               	goto	l2742
 11525  000A7E                     
 11526                           ; BSR set to: 1
 11527                           ;doprnt.c: 1302: case 0xC0:
 11528                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 11529                           
 11530                           ; BSR set to: 1
 11531                           
 11532                           ; BSR set to: 1
 11533  000A7E  0E01               	movlw	1
 11534  000A80  6F1F               	movwf	sprintf@c& (0+255),b
 11535  000A82                     l9288:
 11536                           
 11537                           ; BSR set to: 1
 11538  000A82  0E0A               	movlw	10
 11539  000A84  191F               	xorwf	sprintf@c& (0+255),w,b
 11540  000A86  B4D8               	btfsc	status,2,c
 11541  000A88  D041               	goto	l2748
 11542                           
 11543                           ; BSR set to: 1
 11544                           ;doprnt.c: 1306: if(val < dpowers[c])
 11545                           
 11546                           ; BSR set to: 1
 11547                           
 11548                           ; BSR set to: 1
 11549  000A8A  511F               	movf	sprintf@c& (0+255),w,b
 11550  000A8C  0D04               	mullw	4
 11551  000A8E  0ED3               	movlw	low _dpowers
 11552  000A90  24F3               	addwf	prodl,w,c
 11553  000A92  6EF6               	movwf	tblptrl,c
 11554  000A94  0E7B               	movlw	high _dpowers
 11555  000A96  20F4               	addwfc	prodh,w,c
 11556  000A98  6EF7               	movwf	tblptrh,c
 11557  000A9A                     	if	0	;There are less than 3 active tblptr bytes
 11558  000A9A                     	endif
 11559  000A9A  0009               	tblrd		*+
 11560  000A9C  50F5               	movf	tablat,w,c
 11561  000A9E  5D12               	subwf	sprintf@val& (0+255),w,b
 11562  000AA0  0009               	tblrd		*+
 11563  000AA2  50F5               	movf	tablat,w,c
 11564  000AA4  5913               	subwfb	(sprintf@val+1)& (0+255),w,b
 11565  000AA6  0009               	tblrd		*+
 11566  000AA8  50F5               	movf	tablat,w,c
 11567  000AAA  5914               	subwfb	(sprintf@val+2)& (0+255),w,b
 11568  000AAC  0009               	tblrd		*+
 11569  000AAE  50F5               	movf	tablat,w,c
 11570  000AB0  5915               	subwfb	(sprintf@val+3)& (0+255),w,b
 11571  000AB2  A0D8               	btfss	status,0,c
 11572  000AB4  D02B               	goto	l2748
 11573                           
 11574                           ; BSR set to: 1
 11575                           
 11576                           ; BSR set to: 1
 11577                           
 11578                           ; BSR set to: 1
 11579                           ;doprnt.c: 1307: break;
 11580  000AB6  2B1F               	incf	sprintf@c& (0+255),f,b
 11581  000AB8  D7E4               	goto	l9288
 11582  000ABA                     
 11583                           ; BSR set to: 1
 11584                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 11585                           
 11586                           ; BSR set to: 1
 11587  000ABA  0E01               	movlw	1
 11588  000ABC  6F1F               	movwf	sprintf@c& (0+255),b
 11589  000ABE                     l9302:
 11590                           
 11591                           ; BSR set to: 1
 11592  000ABE  0E08               	movlw	8
 11593  000AC0  191F               	xorwf	sprintf@c& (0+255),w,b
 11594  000AC2  B4D8               	btfsc	status,2,c
 11595  000AC4  D023               	goto	l2748
 11596                           
 11597                           ; BSR set to: 1
 11598                           ;doprnt.c: 1317: if(val < hexpowers[c])
 11599                           
 11600                           ; BSR set to: 1
 11601                           
 11602                           ; BSR set to: 1
 11603  000AC6  511F               	movf	sprintf@c& (0+255),w,b
 11604  000AC8  0D04               	mullw	4
 11605  000ACA  0E49               	movlw	low _hexpowers
 11606  000ACC  24F3               	addwf	prodl,w,c
 11607  000ACE  6EF6               	movwf	tblptrl,c
 11608  000AD0  0E7C               	movlw	high _hexpowers
 11609  000AD2  20F4               	addwfc	prodh,w,c
 11610  000AD4  6EF7               	movwf	tblptrh,c
 11611  000AD6                     	if	0	;There are less than 3 active tblptr bytes
 11612  000AD6                     	endif
 11613  000AD6  0009               	tblrd		*+
 11614  000AD8  50F5               	movf	tablat,w,c
 11615  000ADA  5D12               	subwf	sprintf@val& (0+255),w,b
 11616  000ADC  0009               	tblrd		*+
 11617  000ADE  50F5               	movf	tablat,w,c
 11618  000AE0  5913               	subwfb	(sprintf@val+1)& (0+255),w,b
 11619  000AE2  0009               	tblrd		*+
 11620  000AE4  50F5               	movf	tablat,w,c
 11621  000AE6  5914               	subwfb	(sprintf@val+2)& (0+255),w,b
 11622  000AE8  0009               	tblrd		*+
 11623  000AEA  50F5               	movf	tablat,w,c
 11624  000AEC  5915               	subwfb	(sprintf@val+3)& (0+255),w,b
 11625  000AEE  A0D8               	btfss	status,0,c
 11626  000AF0  D00D               	goto	l2748
 11627                           
 11628                           ; BSR set to: 1
 11629                           
 11630                           ; BSR set to: 1
 11631                           
 11632                           ; BSR set to: 1
 11633                           ;doprnt.c: 1318: break;
 11634  000AF2  2B1F               	incf	sprintf@c& (0+255),f,b
 11635  000AF4  D7E4               	goto	l9302
 11636  000AF6                     l2742:
 11637                           
 11638                           ; BSR set to: 1
 11639                           
 11640                           ; BSR set to: 1
 11641  000AF6  511B               	movf	sprintf@flag& (0+255),w,b
 11642  000AF8  0BC0               	andlw	192
 11643                           
 11644                           ; Switch size 1, requested type "space"
 11645                           ; Number of cases is 3, Range of values is 0 to 192
 11646                           ; switch strategies available:
 11647                           ; Name         Instructions Cycles
 11648                           ; simple_byte           10     6 (average)
 11649                           ;	Chosen strategy is simple_byte
 11650  000AFA  0A00               	xorlw	0	; case 0
 11651  000AFC  B4D8               	btfsc	status,2,c
 11652  000AFE  D7BF               	goto	l2743
 11653  000B00  0A80               	xorlw	128	; case 128
 11654  000B02  B4D8               	btfsc	status,2,c
 11655  000B04  D7DA               	goto	l2749
 11656  000B06  0A40               	xorlw	64	; case 192
 11657  000B08  B4D8               	btfsc	status,2,c
 11658  000B0A  D7B9               	goto	l2743
 11659  000B0C                     l2748:
 11660                           
 11661                           ; BSR set to: 1
 11662                           ;doprnt.c: 1339: if(c < prec)
 11663                           
 11664                           ; BSR set to: 1
 11665  000B0C  0E80               	movlw	128
 11666  000B0E  BF1F               	btfsc	sprintf@c& (0+255),7,b
 11667  000B10  0E7F               	movlw	127
 11668  000B12  0100               	movlb	0	; () banked
 11669  000B14  6FEB               	movwf	??_sprintf& (0+255),b
 11670  000B16  0101               	movlb	1	; () banked
 11671  000B18  511D               	movf	sprintf@prec& (0+255),w,b
 11672  000B1A  5D1F               	subwf	sprintf@c& (0+255),w,b
 11673  000B1C  511E               	movf	(sprintf@prec+1)& (0+255),w,b
 11674  000B1E  0A80               	xorlw	128
 11675  000B20  0100               	movlb	0	; () banked
 11676  000B22  59EB               	subwfb	??_sprintf& (0+255),w,b
 11677  000B24  B0D8               	btfsc	status,0,c
 11678  000B26  D003               	goto	l2753
 11679                           
 11680                           ; BSR set to: 0
 11681                           ;doprnt.c: 1340: c = prec;
 11682  000B28  C11D  F11F         	movff	sprintf@prec,sprintf@c
 11683  000B2C  D015               	goto	l2755
 11684  000B2E                     l2753:
 11685                           
 11686                           ; BSR set to: 0
 11687                           ;doprnt.c: 1341: else if(prec < c)
 11688                           
 11689                           ; BSR set to: 0
 11690  000B2E  0101               	movlb	1	; () banked
 11691  000B30  511E               	movf	(sprintf@prec+1)& (0+255),w,b
 11692  000B32  0A80               	xorlw	128
 11693  000B34  0100               	movlb	0	; () banked
 11694  000B36  6FEB               	movwf	??_sprintf& (0+255),b
 11695  000B38  0101               	movlb	1	; () banked
 11696  000B3A  511F               	movf	sprintf@c& (0+255),w,b
 11697  000B3C  5D1D               	subwf	sprintf@prec& (0+255),w,b
 11698  000B3E  0E80               	movlw	128
 11699  000B40  BF1F               	btfsc	sprintf@c& (0+255),7,b
 11700  000B42  0E7F               	movlw	127
 11701  000B44  0100               	movlb	0	; () banked
 11702  000B46  59EB               	subwfb	??_sprintf& (0+255),w,b
 11703  000B48  B0D8               	btfsc	status,0,c
 11704  000B4A  D006               	goto	l2755
 11705                           
 11706                           ; BSR set to: 0
 11707                           ;doprnt.c: 1342: prec = c;
 11708  000B4C  0101               	movlb	1	; () banked
 11709  000B4E  511F               	movf	sprintf@c& (0+255),w,b
 11710  000B50  6F1D               	movwf	sprintf@prec& (0+255),b
 11711  000B52  6B1E               	clrf	(sprintf@prec+1)& (0+255),b
 11712  000B54  BF1D               	btfsc	sprintf@prec& (0+255),7,b
 11713  000B56  071E               	decf	(sprintf@prec+1)& (0+255),f,b
 11714  000B58                     l2755:
 11715                           
 11716                           ;doprnt.c: 1345: if(width && flag & 0x03)
 11717                           
 11718                           ; BSR set to: 1
 11719                           
 11720                           ; BSR set to: 1
 11721  000B58  0101               	movlb	1	; () banked
 11722  000B5A  5119               	movf	sprintf@width& (0+255),w,b
 11723  000B5C  111A               	iorwf	(sprintf@width+1)& (0+255),w,b
 11724  000B5E  B4D8               	btfsc	status,2,c
 11725  000B60  D011               	goto	l2756
 11726                           
 11727                           ; BSR set to: 1
 11728  000B62  0E03               	movlw	3
 11729  000B64  151B               	andwf	sprintf@flag& (0+255),w,b
 11730  000B66  0100               	movlb	0	; () banked
 11731  000B68  6FEB               	movwf	??_sprintf& (0+255),b
 11732  000B6A  0E00               	movlw	0
 11733  000B6C  0101               	movlb	1	; () banked
 11734  000B6E  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
 11735  000B70  0100               	movlb	0	; () banked
 11736  000B72  6FEC               	movwf	(??_sprintf+1)& (0+255),b
 11737  000B74  51EB               	movf	??_sprintf& (0+255),w,b
 11738  000B76  11EC               	iorwf	(??_sprintf+1)& (0+255),w,b
 11739  000B78  B4D8               	btfsc	status,2,c
 11740  000B7A  D004               	goto	l2756
 11741                           
 11742                           ; BSR set to: 0
 11743                           ;doprnt.c: 1346: width--;
 11744  000B7C  0101               	movlb	1	; () banked
 11745  000B7E  0719               	decf	sprintf@width& (0+255),f,b
 11746  000B80  A0D8               	btfss	status,0,c
 11747  000B82  071A               	decf	(sprintf@width+1)& (0+255),f,b
 11748  000B84                     l2756:
 11749                           
 11750                           ;doprnt.c: 1348: if(flag & 0x4000) {
 11751                           
 11752                           ; BSR set to: 1
 11753  000B84  0101               	movlb	1	; () banked
 11754  000B86  AD1C               	btfss	(sprintf@flag+1)& (0+255),6,b
 11755  000B88  D018               	goto	l2759
 11756                           
 11757                           ; BSR set to: 1
 11758                           ;doprnt.c: 1349: if(width > prec)
 11759  000B8A  5119               	movf	sprintf@width& (0+255),w,b
 11760  000B8C  5D1D               	subwf	sprintf@prec& (0+255),w,b
 11761  000B8E  511E               	movf	(sprintf@prec+1)& (0+255),w,b
 11762  000B90  0A80               	xorlw	128
 11763  000B92  0100               	movlb	0	; () banked
 11764  000B94  6FEB               	movwf	??_sprintf& (0+255),b
 11765  000B96  0101               	movlb	1	; () banked
 11766  000B98  511A               	movf	(sprintf@width+1)& (0+255),w,b
 11767  000B9A  0A80               	xorlw	128
 11768  000B9C  0100               	movlb	0	; () banked
 11769  000B9E  59EB               	subwfb	??_sprintf& (0+255),w,b
 11770  000BA0  B0D8               	btfsc	status,0,c
 11771  000BA2  D006               	goto	l2758
 11772                           
 11773                           ; BSR set to: 0
 11774                           ;doprnt.c: 1350: width -= prec;
 11775  000BA4  0101               	movlb	1	; () banked
 11776  000BA6  511D               	movf	sprintf@prec& (0+255),w,b
 11777  000BA8  5F19               	subwf	sprintf@width& (0+255),f,b
 11778  000BAA  511E               	movf	(sprintf@prec+1)& (0+255),w,b
 11779  000BAC  5B1A               	subwfb	(sprintf@width+1)& (0+255),f,b
 11780  000BAE  D005               	goto	l2759
 11781  000BB0                     l2758:
 11782                           
 11783                           ;doprnt.c: 1351: else
 11784                           ;doprnt.c: 1352: width = 0;
 11785                           
 11786                           ; BSR set to: 1
 11787  000BB0  0E00               	movlw	0
 11788  000BB2  0101               	movlb	1	; () banked
 11789  000BB4  6F1A               	movwf	(sprintf@width+1)& (0+255),b
 11790  000BB6  0E00               	movlw	0
 11791  000BB8  6F19               	movwf	sprintf@width& (0+255),b
 11792  000BBA                     l2759:
 11793                           
 11794                           ; BSR set to: 1
 11795                           ;doprnt.c: 1353: }
 11796                           ;doprnt.c: 1381: if(width > c)
 11797                           
 11798                           ; BSR set to: 1
 11799                           
 11800                           ; BSR set to: 1
 11801  000BBA  0E80               	movlw	128
 11802  000BBC  BF1F               	btfsc	sprintf@c& (0+255),7,b
 11803  000BBE  0E7F               	movlw	127
 11804  000BC0  0100               	movlb	0	; () banked
 11805  000BC2  6FEB               	movwf	??_sprintf& (0+255),b
 11806  000BC4  0101               	movlb	1	; () banked
 11807  000BC6  5119               	movf	sprintf@width& (0+255),w,b
 11808  000BC8  5D1F               	subwf	sprintf@c& (0+255),w,b
 11809  000BCA  511A               	movf	(sprintf@width+1)& (0+255),w,b
 11810  000BCC  0A80               	xorlw	128
 11811  000BCE  0100               	movlb	0	; () banked
 11812  000BD0  59EB               	subwfb	??_sprintf& (0+255),w,b
 11813  000BD2  B0D8               	btfsc	status,0,c
 11814  000BD4  D008               	goto	l2760
 11815                           
 11816                           ; BSR set to: 0
 11817                           ;doprnt.c: 1382: width -= c;
 11818  000BD6  0101               	movlb	1	; () banked
 11819  000BD8  511F               	movf	sprintf@c& (0+255),w,b
 11820  000BDA  5F19               	subwf	sprintf@width& (0+255),f,b
 11821  000BDC  0E00               	movlw	0
 11822  000BDE  BF1F               	btfsc	sprintf@c& (0+255),7,b
 11823  000BE0  0EFF               	movlw	255
 11824  000BE2  5B1A               	subwfb	(sprintf@width+1)& (0+255),f,b
 11825  000BE4  D005               	goto	l2761
 11826  000BE6                     l2760:
 11827                           
 11828                           ;doprnt.c: 1383: else
 11829                           ;doprnt.c: 1384: width = 0;
 11830                           
 11831                           ; BSR set to: 1
 11832  000BE6  0E00               	movlw	0
 11833  000BE8  0101               	movlb	1	; () banked
 11834  000BEA  6F1A               	movwf	(sprintf@width+1)& (0+255),b
 11835  000BEC  0E00               	movlw	0
 11836  000BEE  6F19               	movwf	sprintf@width& (0+255),b
 11837  000BF0                     l2761:
 11838                           
 11839                           ; BSR set to: 1
 11840                           ;doprnt.c: 1387: if(flag & 0x04) {
 11841                           
 11842                           ; BSR set to: 1
 11843  000BF0  A51B               	btfss	sprintf@flag& (0+255),2,b
 11844  000BF2  D028               	goto	l2762
 11845                           
 11846                           ; BSR set to: 1
 11847                           ;doprnt.c: 1392: if(flag & 0x03)
 11848  000BF4  0E03               	movlw	3
 11849  000BF6  151B               	andwf	sprintf@flag& (0+255),w,b
 11850  000BF8  0100               	movlb	0	; () banked
 11851  000BFA  6FEB               	movwf	??_sprintf& (0+255),b
 11852  000BFC  0E00               	movlw	0
 11853  000BFE  0101               	movlb	1	; () banked
 11854  000C00  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
 11855  000C02  0100               	movlb	0	; () banked
 11856  000C04  6FEC               	movwf	(??_sprintf+1)& (0+255),b
 11857  000C06  51EB               	movf	??_sprintf& (0+255),w,b
 11858  000C08  11EC               	iorwf	(??_sprintf+1)& (0+255),w,b
 11859  000C0A  B4D8               	btfsc	status,2,c
 11860  000C0C  D008               	goto	l2763
 11861                           
 11862                           ; BSR set to: 0
 11863                           ;doprnt.c: 1393: ((*sp++ = ('-')));
 11864  000C0E  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 11865  000C12  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 11866  000C16  0E2D               	movlw	45
 11867  000C18  6EDF               	movwf	indf2,c
 11868                           
 11869                           ; BSR set to: 0
 11870  000C1A  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 11871  000C1C  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 11872  000C1E                     l2763:
 11873                           
 11874                           ; BSR set to: 0
 11875                           ;doprnt.c: 1415: if(width)
 11876                           
 11877                           ; BSR set to: 0
 11878  000C1E  0101               	movlb	1	; () banked
 11879  000C20  5119               	movf	sprintf@width& (0+255),w,b
 11880  000C22  111A               	iorwf	(sprintf@width+1)& (0+255),w,b
 11881  000C24  B4D8               	btfsc	status,2,c
 11882  000C26  D0D5               	goto	l2772
 11883                           
 11884                           ; BSR set to: 1
 11885                           ;doprnt.c: 1417: ((*sp++ = ('0')));
 11886                           
 11887                           ; BSR set to: 1
 11888                           
 11889                           ;doprnt.c: 1416: do
 11890  000C28  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 11891  000C2C  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 11892  000C30  0E30               	movlw	48
 11893  000C32  6EDF               	movwf	indf2,c
 11894                           
 11895                           ; BSR set to: 1
 11896  000C34  0100               	movlb	0	; () banked
 11897  000C36  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 11898  000C38  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 11899                           
 11900                           ; BSR set to: 0
 11901                           ;doprnt.c: 1418: while(--width);
 11902  000C3A  0101               	movlb	1	; () banked
 11903  000C3C  0719               	decf	sprintf@width& (0+255),f,b
 11904  000C3E  A0D8               	btfss	status,0,c
 11905  000C40  071A               	decf	(sprintf@width+1)& (0+255),f,b
 11906  000C42  D7EE               	goto	L37
 11907  000C44                     l2762:
 11908                           
 11909                           ; BSR set to: 1
 11910                           ;doprnt.c: 1422: {
 11911                           ;doprnt.c: 1424: if(width
 11912                           ;doprnt.c: 1428: )
 11913                           
 11914                           ; BSR set to: 1
 11915  000C44  5119               	movf	sprintf@width& (0+255),w,b
 11916  000C46  111A               	iorwf	(sprintf@width+1)& (0+255),w,b
 11917  000C48  B4D8               	btfsc	status,2,c
 11918  000C4A  D011               	goto	u8620
 11919  000C4C                     u8610:
 11920                           
 11921                           ; BSR set to: 1
 11922                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 11923                           
 11924                           ; BSR set to: 1
 11925                           
 11926                           ;doprnt.c: 1429: do
 11927  000C4C  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 11928  000C50  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 11929  000C54  0E20               	movlw	32
 11930  000C56  6EDF               	movwf	indf2,c
 11931                           
 11932                           ; BSR set to: 1
 11933  000C58  0100               	movlb	0	; () banked
 11934  000C5A  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 11935  000C5C  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 11936                           
 11937                           ; BSR set to: 0
 11938                           ;doprnt.c: 1431: while(--width);
 11939  000C5E  0101               	movlb	1	; () banked
 11940  000C60  0719               	decf	sprintf@width& (0+255),f,b
 11941  000C62  A0D8               	btfss	status,0,c
 11942  000C64  071A               	decf	(sprintf@width+1)& (0+255),f,b
 11943  000C66  5119               	movf	sprintf@width& (0+255),w,b
 11944  000C68  111A               	iorwf	(sprintf@width+1)& (0+255),w,b
 11945  000C6A  A4D8               	btfss	status,2,c
 11946  000C6C  D7EF               	goto	u8610
 11947  000C6E                     u8620:
 11948                           
 11949                           ; BSR set to: 1
 11950                           ;doprnt.c: 1438: if(flag & 0x03)
 11951                           
 11952                           ; BSR set to: 1
 11953                           
 11954                           ; BSR set to: 1
 11955  000C6E  0E03               	movlw	3
 11956  000C70  151B               	andwf	sprintf@flag& (0+255),w,b
 11957  000C72  0100               	movlb	0	; () banked
 11958  000C74  6FEB               	movwf	??_sprintf& (0+255),b
 11959  000C76  0E00               	movlw	0
 11960  000C78  0101               	movlb	1	; () banked
 11961  000C7A  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
 11962  000C7C  0100               	movlb	0	; () banked
 11963  000C7E  6FEC               	movwf	(??_sprintf+1)& (0+255),b
 11964  000C80  51EB               	movf	??_sprintf& (0+255),w,b
 11965  000C82  11EC               	iorwf	(??_sprintf+1)& (0+255),w,b
 11966  000C84  B4D8               	btfsc	status,2,c
 11967  000C86  D0A5               	goto	l2772
 11968                           
 11969                           ; BSR set to: 0
 11970                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 11971  000C88  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 11972  000C8C  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 11973  000C90  0E2D               	movlw	45
 11974  000C92  6EDF               	movwf	indf2,c
 11975  000C94  D09C               	goto	L15
 11976  000C96                     
 11977                           ;doprnt.c: 1486: case 0xC0:
 11978                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 11979                           
 11980                           ; BSR set to: 0
 11981                           
 11982                           ; BSR set to: 0
 11983  000C96  C11D  F0EB         	movff	sprintf@prec,??_sprintf
 11984  000C9A  C11E  F0EC         	movff	sprintf@prec+1,??_sprintf+1
 11985  000C9E  0100               	movlb	0	; () banked
 11986  000CA0  90D8               	bcf	status,0,c
 11987  000CA2  37EB               	rlcf	??_sprintf& (0+255),f,b
 11988  000CA4  37EC               	rlcf	(??_sprintf+1)& (0+255),f,b
 11989  000CA6  90D8               	bcf	status,0,c
 11990  000CA8  37EB               	rlcf	??_sprintf& (0+255),f,b
 11991  000CAA  37EC               	rlcf	(??_sprintf+1)& (0+255),f,b
 11992  000CAC  0ED3               	movlw	low _dpowers
 11993  000CAE  25EB               	addwf	??_sprintf& (0+255),w,b
 11994  000CB0  6EF6               	movwf	tblptrl,c
 11995  000CB2  0E7B               	movlw	high _dpowers
 11996  000CB4  21EC               	addwfc	(??_sprintf+1)& (0+255),w,b
 11997  000CB6  6EF7               	movwf	tblptrh,c
 11998  000CB8                     	if	0	;There are less than 3 active tblptr bytes
 11999  000CB8                     	endif
 12000  000CB8  0009               	tblrd		*+
 12001  000CBA  CFF5 F064          	movff	tablat,___lldiv@divisor
 12002  000CBE  0009               	tblrd		*+
 12003  000CC0  CFF5 F065          	movff	tablat,___lldiv@divisor+1
 12004  000CC4  0009               	tblrd		*+
 12005  000CC6  CFF5 F066          	movff	tablat,___lldiv@divisor+2
 12006  000CCA  000A               	tblrd		*-
 12007  000CCC  CFF5 F067          	movff	tablat,___lldiv@divisor+3
 12008  000CD0  C112  F060         	movff	sprintf@val,___lldiv@dividend
 12009  000CD4  C113  F061         	movff	sprintf@val+1,___lldiv@dividend+1
 12010  000CD8  C114  F062         	movff	sprintf@val+2,___lldiv@dividend+2
 12011  000CDC  C115  F063         	movff	sprintf@val+3,___lldiv@dividend+3
 12012  000CE0  EC13  F025         	call	___lldiv	;wreg free
 12013  000CE4  C060  F06D         	movff	?___lldiv,___llmod@dividend
 12014  000CE8  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
 12015  000CEC  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
 12016  000CF0  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
 12017  000CF4  0E0A               	movlw	10
 12018  000CF6  0100               	movlb	0	; () banked
 12019  000CF8  6F71               	movwf	___llmod@divisor& (0+255),b
 12020  000CFA  0E00               	movlw	0
 12021  000CFC  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 12022  000CFE  0E00               	movlw	0
 12023  000D00  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 12024  000D02  0E00               	movlw	0
 12025  000D04  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 12026  000D06  ECB4  F026         	call	___llmod	;wreg free
 12027  000D0A  0100               	movlb	0	; () banked
 12028  000D0C  516D               	movf	?___llmod& (0+255),w,b
 12029  000D0E  0F30               	addlw	48
 12030  000D10  0101               	movlb	1	; () banked
 12031  000D12  6F1F               	movwf	sprintf@c& (0+255),b
 12032                           
 12033                           ;doprnt.c: 1491: break;
 12034  000D14  D055               	goto	l2777
 12035  000D16                     
 12036                           ; BSR set to: 1
 12037                           ;doprnt.c: 1499: {
 12038                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 12039                           
 12040                           ; BSR set to: 1
 12041  000D16  C112  F060         	movff	sprintf@val,___lldiv@dividend
 12042  000D1A  C113  F061         	movff	sprintf@val+1,___lldiv@dividend+1
 12043  000D1E  C114  F062         	movff	sprintf@val+2,___lldiv@dividend+2
 12044  000D22  C115  F063         	movff	sprintf@val+3,___lldiv@dividend+3
 12045  000D26  C11D  F0EB         	movff	sprintf@prec,??_sprintf
 12046  000D2A  C11E  F0EC         	movff	sprintf@prec+1,??_sprintf+1
 12047  000D2E  0100               	movlb	0	; () banked
 12048  000D30  90D8               	bcf	status,0,c
 12049  000D32  37EB               	rlcf	??_sprintf& (0+255),f,b
 12050  000D34  37EC               	rlcf	(??_sprintf+1)& (0+255),f,b
 12051  000D36  90D8               	bcf	status,0,c
 12052  000D38  37EB               	rlcf	??_sprintf& (0+255),f,b
 12053  000D3A  37EC               	rlcf	(??_sprintf+1)& (0+255),f,b
 12054  000D3C  0E49               	movlw	low _hexpowers
 12055  000D3E  25EB               	addwf	??_sprintf& (0+255),w,b
 12056  000D40  6EF6               	movwf	tblptrl,c
 12057  000D42  0E7C               	movlw	high _hexpowers
 12058  000D44  21EC               	addwfc	(??_sprintf+1)& (0+255),w,b
 12059  000D46  6EF7               	movwf	tblptrh,c
 12060  000D48                     	if	0	;There are less than 3 active tblptr bytes
 12061  000D48                     	endif
 12062  000D48  0009               	tblrd		*+
 12063  000D4A  CFF5 F064          	movff	tablat,___lldiv@divisor
 12064  000D4E  0009               	tblrd		*+
 12065  000D50  CFF5 F065          	movff	tablat,___lldiv@divisor+1
 12066  000D54  0009               	tblrd		*+
 12067  000D56  CFF5 F066          	movff	tablat,___lldiv@divisor+2
 12068  000D5A  000A               	tblrd		*-
 12069  000D5C  CFF5 F067          	movff	tablat,___lldiv@divisor+3
 12070  000D60  EC13  F025         	call	___lldiv	;wreg free
 12071  000D64  0100               	movlb	0	; () banked
 12072  000D66  5160               	movf	?___lldiv& (0+255),w,b
 12073  000D68  0B0F               	andlw	15
 12074  000D6A  0101               	movlb	1	; () banked
 12075  000D6C  6F05               	movwf	sprintf@idx& (0+255),b
 12076                           
 12077                           ; BSR set to: 1
 12078                           ;doprnt.c: 1502: c = (flag & 0x20 ? "0123456789ABCDEF" : "0123456789abcdef")[idx];
 12079  000D6E  BB1B               	btfsc	sprintf@flag& (0+255),5,b
 12080  000D70  D004               	goto	l2780
 12081                           
 12082                           ; BSR set to: 1
 12083  000D72  0EF4               	movlw	low STR_41
 12084  000D74  6F03               	movwf	_sprintf$5155& (0+255),b
 12085  000D76  0E7E               	movlw	high STR_41
 12086  000D78  D003               	goto	L16
 12087  000D7A                     l2780:
 12088                           
 12089                           ; BSR set to: 1
 12090                           
 12091                           ; BSR set to: 1
 12092  000D7A  0EE3               	movlw	low STR_40
 12093  000D7C  6F03               	movwf	_sprintf$5155& (0+255),b
 12094  000D7E  0E7E               	movlw	high STR_40
 12095  000D80                     L16:
 12096  000D80  6F04               	movwf	(_sprintf$5155+1)& (0+255),b
 12097                           
 12098                           ; BSR set to: 1
 12099                           
 12100                           ; BSR set to: 1
 12101  000D82  5105               	movf	sprintf@idx& (0+255),w,b
 12102  000D84  0D01               	mullw	1
 12103  000D86  C103  F0EB         	movff	_sprintf$5155,??_sprintf
 12104  000D8A  C104  F0EC         	movff	_sprintf$5155+1,??_sprintf+1
 12105  000D8E  50F3               	movf	prodl,w,c
 12106  000D90  0100               	movlb	0	; () banked
 12107  000D92  27EB               	addwf	??_sprintf& (0+255),f,b
 12108  000D94  50F4               	movf	prodh,w,c
 12109  000D96  23EC               	addwfc	(??_sprintf+1)& (0+255),f,b
 12110  000D98  C0EB  FFF6         	movff	??_sprintf,tblptrl
 12111  000D9C  C0EC  FFF7         	movff	??_sprintf+1,tblptrh
 12112  000DA0                     	if	0	;tblptru may be non-zero
 12113  000DA0                     	endif
 12114  000DA0                     	if	0	;tblptru may be non-zero
 12115  000DA0                     	endif
 12116  000DA0  0008               	tblrd		*
 12117  000DA2  CFF5 F11F          	movff	tablat,sprintf@c
 12118                           
 12119                           ; BSR set to: 0
 12120                           ;doprnt.c: 1523: }
 12121                           
 12122                           ;doprnt.c: 1508: }
 12123                           ;doprnt.c: 1510: break;
 12124  000DA6  D00C               	goto	l2777
 12125  000DA8                     l9390:
 12126  000DA8  0101               	movlb	1	; () banked
 12127  000DAA  511B               	movf	sprintf@flag& (0+255),w,b
 12128  000DAC  0BC0               	andlw	192
 12129                           
 12130                           ; Switch size 1, requested type "space"
 12131                           ; Number of cases is 3, Range of values is 0 to 192
 12132                           ; switch strategies available:
 12133                           ; Name         Instructions Cycles
 12134                           ; simple_byte           10     6 (average)
 12135                           ;	Chosen strategy is simple_byte
 12136  000DAE  0A00               	xorlw	0	; case 0
 12137  000DB0  B4D8               	btfsc	status,2,c
 12138  000DB2  D771               	goto	l2775
 12139  000DB4  0A80               	xorlw	128	; case 128
 12140  000DB6  B4D8               	btfsc	status,2,c
 12141  000DB8  D7AE               	goto	l2778
 12142  000DBA  0A40               	xorlw	64	; case 192
 12143  000DBC  B4D8               	btfsc	status,2,c
 12144  000DBE  D76B               	goto	l2775
 12145  000DC0                     l2777:
 12146                           
 12147                           ;doprnt.c: 1524: ((*sp++ = (c)));
 12148                           
 12149                           ; BSR set to: 1
 12150  000DC0  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 12151  000DC4  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 12152  000DC8  C11F  FFDF         	movff	sprintf@c,indf2
 12153  000DCC  0100               	movlb	0	; () banked
 12154  000DCE                     L15:
 12155  000DCE  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 12156  000DD0  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 12157  000DD2                     l2772:
 12158                           
 12159                           ; BSR set to: 0
 12160  000DD2  0101               	movlb	1	; () banked
 12161  000DD4  071D               	decf	sprintf@prec& (0+255),f,b
 12162  000DD6  A0D8               	btfss	status,0,c
 12163  000DD8  071E               	decf	(sprintf@prec+1)& (0+255),f,b
 12164  000DDA  291D               	incf	sprintf@prec& (0+255),w,b
 12165  000DDC  E1E5               	bnz	l9390
 12166  000DDE  291E               	incf	(sprintf@prec+1)& (0+255),w,b
 12167  000DE0  A4D8               	btfss	status,2,c
 12168  000DE2  D7E2               	goto	l2774
 12169  000DE4                     u8650:
 12170                           
 12171                           ; BSR set to: 1
 12172                           
 12173                           ; BSR set to: 1
 12174  000DE4  C0C1  FFF6         	movff	sprintf@f,tblptrl
 12175  000DE8  C0C2  FFF7         	movff	sprintf@f+1,tblptrh
 12176  000DEC  0100               	movlb	0	; () banked
 12177  000DEE  4BC1               	infsnz	sprintf@f& (0+255),f,b
 12178  000DF0  2BC2               	incf	(sprintf@f+1)& (0+255),f,b
 12179  000DF2                     	if	0	;tblptru may be non-zero
 12180  000DF2                     	endif
 12181  000DF2                     	if	0	;tblptru may be non-zero
 12182  000DF2                     	endif
 12183  000DF2  0008               	tblrd		*
 12184  000DF4  CFF5 F11F          	movff	tablat,sprintf@c
 12185  000DF8  0101               	movlb	1	; () banked
 12186  000DFA  511F               	movf	sprintf@c& (0+255),w,b
 12187  000DFC  A4D8               	btfss	status,2,c
 12188  000DFE  EF10  F000         	goto	l2642
 12189  000E02                     u8660:
 12190                           
 12191                           ; BSR set to: 1
 12192                           ;doprnt.c: 1538: *sp = 0;
 12193                           
 12194                           ; BSR set to: 1
 12195                           
 12196                           ;doprnt.c: 1525: }
 12197                           ;doprnt.c: 1533: }
 12198                           ;doprnt.c: 1535: alldone:
 12199                           
 12200                           ; BSR set to: 1
 12201  000E02  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 12202  000E06  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 12203  000E0A  0E00               	movlw	0
 12204  000E0C  6EDF               	movwf	indf2,c
 12205  000E0E  0012               	return	
 12206  000E10                     __end_of_sprintf:
 12207                           	opt stack 0
 12208                           tblptru	equ	0xFF8
 12209                           tblptrh	equ	0xFF7
 12210                           tblptrl	equ	0xFF6
 12211                           tablat	equ	0xFF5
 12212                           prodh	equ	0xFF4
 12213                           prodl	equ	0xFF3
 12214                           intcon	equ	0xFF2
 12215                           postinc0	equ	0xFEE
 12216                           wreg	equ	0xFE8
 12217                           indf1	equ	0xFE7
 12218                           postdec1	equ	0xFE5
 12219                           fsr1h	equ	0xFE2
 12220                           fsr1l	equ	0xFE1
 12221                           indf2	equ	0xFDF
 12222                           postinc2	equ	0xFDE
 12223                           postdec2	equ	0xFDD
 12224                           plusw2	equ	0xFDB
 12225                           fsr2h	equ	0xFDA
 12226                           fsr2l	equ	0xFD9
 12227                           status	equ	0xFD8
 12228                           
 12229 ;; *************** function _scale *****************
 12230 ;; Defined at:
 12231 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\doprnt.c"
 12232 ;; Parameters:    Size  Location     Type
 12233 ;;  scl             1    wreg     char 
 12234 ;; Auto vars:     Size  Location     Type
 12235 ;;  scl             1   53[BANK0 ] char 
 12236 ;; Return value:  Size  Location     Type
 12237 ;;                  3   47[BANK0 ] char 
 12238 ;; Registers used:
 12239 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12240 ;; Tracked objects:
 12241 ;;		On entry : 0/0
 12242 ;;		On exit  : 0/0
 12243 ;;		Unchanged: 0/0
 12244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12245 ;;      Params:         0       3       0       0       0       0       0       0       0
 12246 ;;      Locals:         0       4       0       0       0       0       0       0       0
 12247 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12248 ;;      Totals:         0       7       0       0       0       0       0       0       0
 12249 ;;Total ram usage:        7 bytes
 12250 ;; Hardware stack levels used:    1
 12251 ;; Hardware stack levels required when called:   12
 12252 ;; This function calls:
 12253 ;;		___awdiv
 12254 ;;		___awmod
 12255 ;;		___ftmul
 12256 ;;		___wmul
 12257 ;; This function is called by:
 12258 ;;		_sprintf
 12259 ;; This function uses a non-reentrant model
 12260 ;;
 12261                           
 12262                           	psect	text33
 12263  0017B0                     __ptext33:
 12264                           	opt stack 0
 12265  0017B0                     _scale:
 12266                           	opt stack 17
 12267                           
 12268                           ; BSR set to: 1
 12269                           ;incstack = 0
 12270                           ;scale@scl stored from wreg
 12271  0017B0  0100               	movlb	0	; () banked
 12272  0017B2  6F95               	movwf	scale@scl& (0+255),b
 12273                           
 12274                           ;doprnt.c: 428: if(scl < 0) {
 12275  0017B4  0100               	movlb	0	; () banked
 12276  0017B6  AF95               	btfss	scale@scl& (0+255),7,b
 12277  0017B8  D10C               	goto	l2631
 12278                           
 12279                           ; BSR set to: 0
 12280                           ;doprnt.c: 429: scl = -scl;
 12281  0017BA  6D95               	negf	scale@scl& (0+255),b
 12282                           
 12283                           ;doprnt.c: 430: if(scl>=110)
 12284  0017BC  5195               	movf	scale@scl& (0+255),w,b
 12285  0017BE  0A80               	xorlw	128
 12286  0017C0  0F12               	addlw	-238
 12287  0017C2  A0D8               	btfss	status,0,c
 12288  0017C4  D097               	goto	l2632
 12289                           
 12290                           ; BSR set to: 0
 12291                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 12292  0017C6  0E00               	movlw	0
 12293  0017C8  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12294  0017CA  0E03               	movlw	3
 12295  0017CC  6F70               	movwf	___wmul@multiplicand& (0+255),b
 12296  0017CE  0E00               	movlw	0
 12297  0017D0  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 12298  0017D2  0E0A               	movlw	10
 12299  0017D4  6F68               	movwf	___awdiv@divisor& (0+255),b
 12300  0017D6  0E00               	movlw	0
 12301  0017D8  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 12302  0017DA  0E64               	movlw	100
 12303  0017DC  6F62               	movwf	___awmod@divisor& (0+255),b
 12304  0017DE  5195               	movf	scale@scl& (0+255),w,b
 12305  0017E0  6F60               	movwf	___awmod@dividend& (0+255),b
 12306  0017E2  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 12307  0017E4  BF60               	btfsc	___awmod@dividend& (0+255),7,b
 12308  0017E6  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
 12309  0017E8  EC45  F026         	call	___awmod	;wreg free
 12310  0017EC  C060  F066         	movff	?___awmod,___awdiv@dividend
 12311  0017F0  C061  F067         	movff	?___awmod+1,___awdiv@dividend+1
 12312  0017F4  EC8D  F024         	call	___awdiv	;wreg free
 12313  0017F8  0E09               	movlw	9
 12314  0017FA  0100               	movlb	0	; () banked
 12315  0017FC  2566               	addwf	?___awdiv& (0+255),w,b
 12316  0017FE  6F6E               	movwf	___wmul@multiplier& (0+255),b
 12317  001800  0E00               	movlw	0
 12318  001802  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 12319  001804  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 12320  001806  ECC0  F02A         	call	___wmul	;wreg free
 12321  00180A  0E22               	movlw	low __npowers_
 12322  00180C  0100               	movlb	0	; () banked
 12323  00180E  256E               	addwf	?___wmul& (0+255),w,b
 12324  001810  6EF6               	movwf	tblptrl,c
 12325  001812  0E7C               	movlw	high __npowers_
 12326  001814  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 12327  001816  6EF7               	movwf	tblptrh,c
 12328  001818                     	if	0	;There are less than 3 active tblptr bytes
 12329  001818                     	endif
 12330  001818  0009               	tblrd		*+
 12331  00181A  CFF5 F083          	movff	tablat,___ftmul@f2
 12332  00181E  0009               	tblrd		*+
 12333  001820  CFF5 F084          	movff	tablat,___ftmul@f2+1
 12334  001824  000A               	tblrd		*-
 12335  001826  CFF5 F085          	movff	tablat,___ftmul@f2+2
 12336  00182A  0E00               	movlw	0
 12337  00182C  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 12338  00182E  0E64               	movlw	100
 12339  001830  6F68               	movwf	___awdiv@divisor& (0+255),b
 12340  001832  5195               	movf	scale@scl& (0+255),w,b
 12341  001834  6F66               	movwf	___awdiv@dividend& (0+255),b
 12342  001836  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
 12343  001838  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
 12344  00183A  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
 12345  00183C  EC8D  F024         	call	___awdiv	;wreg free
 12346  001840  0E12               	movlw	18
 12347  001842  0100               	movlb	0	; () banked
 12348  001844  2566               	addwf	?___awdiv& (0+255),w,b
 12349  001846  6F6E               	movwf	___wmul@multiplier& (0+255),b
 12350  001848  0E00               	movlw	0
 12351  00184A  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 12352  00184C  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 12353  00184E  0E00               	movlw	0
 12354  001850  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12355  001852  0E03               	movlw	3
 12356  001854  6F70               	movwf	___wmul@multiplicand& (0+255),b
 12357  001856  ECC0  F02A         	call	___wmul	;wreg free
 12358  00185A  0E22               	movlw	low __npowers_
 12359  00185C  0100               	movlb	0	; () banked
 12360  00185E  256E               	addwf	?___wmul& (0+255),w,b
 12361  001860  6EF6               	movwf	tblptrl,c
 12362  001862  0E7C               	movlw	high __npowers_
 12363  001864  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 12364  001866  6EF7               	movwf	tblptrh,c
 12365  001868                     	if	0	;There are less than 3 active tblptr bytes
 12366  001868                     	endif
 12367  001868  0009               	tblrd		*+
 12368  00186A  CFF5 F080          	movff	tablat,___ftmul@f1
 12369  00186E  0009               	tblrd		*+
 12370  001870  CFF5 F081          	movff	tablat,___ftmul@f1+1
 12371  001874  000A               	tblrd		*-
 12372  001876  CFF5 F082          	movff	tablat,___ftmul@f1+2
 12373  00187A  EC21  F01D         	call	___ftmul	;wreg free
 12374  00187E  C080  F092         	movff	?___ftmul,_scale$5960
 12375  001882  C081  F093         	movff	?___ftmul+1,_scale$5960+1
 12376  001886  C082  F094         	movff	?___ftmul+2,_scale$5960+2
 12377                           
 12378                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 12379  00188A  C092  F080         	movff	_scale$5960,___ftmul@f1
 12380  00188E  C093  F081         	movff	_scale$5960+1,___ftmul@f1+1
 12381  001892  C094  F082         	movff	_scale$5960+2,___ftmul@f1+2
 12382  001896  0E00               	movlw	0
 12383  001898  0100               	movlb	0	; () banked
 12384  00189A  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12385  00189C  0E03               	movlw	3
 12386  00189E  6F70               	movwf	___wmul@multiplicand& (0+255),b
 12387  0018A0  0E00               	movlw	0
 12388  0018A2  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 12389  0018A4  0E0A               	movlw	10
 12390  0018A6  6F62               	movwf	___awmod@divisor& (0+255),b
 12391  0018A8  5195               	movf	scale@scl& (0+255),w,b
 12392  0018AA  6F60               	movwf	___awmod@dividend& (0+255),b
 12393  0018AC  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 12394  0018AE  BF60               	btfsc	___awmod@dividend& (0+255),7,b
 12395  0018B0  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
 12396  0018B2  EC45  F026         	call	___awmod	;wreg free
 12397  0018B6  C060  F06E         	movff	?___awmod,___wmul@multiplier
 12398  0018BA  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
 12399  0018BE  ECC0  F02A         	call	___wmul	;wreg free
 12400  0018C2  0E22               	movlw	low __npowers_
 12401  0018C4  0100               	movlb	0	; () banked
 12402  0018C6  256E               	addwf	?___wmul& (0+255),w,b
 12403  0018C8  6EF6               	movwf	tblptrl,c
 12404  0018CA  0E7C               	movlw	high __npowers_
 12405  0018CC  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 12406  0018CE  6EF7               	movwf	tblptrh,c
 12407  0018D0                     	if	0	;There are less than 3 active tblptr bytes
 12408  0018D0                     	endif
 12409  0018D0  0009               	tblrd		*+
 12410  0018D2  CFF5 F083          	movff	tablat,___ftmul@f2
 12411  0018D6  0009               	tblrd		*+
 12412  0018D8  CFF5 F084          	movff	tablat,___ftmul@f2+1
 12413  0018DC  000A               	tblrd		*-
 12414  0018DE  CFF5 F085          	movff	tablat,___ftmul@f2+2
 12415  0018E2  EC21  F01D         	call	___ftmul	;wreg free
 12416  0018E6  C080  F08F         	movff	?___ftmul,?_scale
 12417  0018EA  C081  F090         	movff	?___ftmul+1,?_scale+1
 12418  0018EE  C082  F091         	movff	?___ftmul+2,?_scale+2
 12419  0018F2  0012               	return	
 12420  0018F4                     l2632:
 12421                           
 12422                           ;doprnt.c: 432: else if(scl > 10)
 12423  0018F4  0100               	movlb	0	; () banked
 12424  0018F6  5195               	movf	scale@scl& (0+255),w,b
 12425  0018F8  0A80               	xorlw	128
 12426  0018FA  0F75               	addlw	-139
 12427  0018FC  A0D8               	btfss	status,0,c
 12428  0018FE  D056               	goto	l2635
 12429                           
 12430                           ; BSR set to: 0
 12431                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 12432  001900  0E00               	movlw	0
 12433  001902  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 12434  001904  0E0A               	movlw	10
 12435  001906  6F68               	movwf	___awdiv@divisor& (0+255),b
 12436  001908  5195               	movf	scale@scl& (0+255),w,b
 12437  00190A  6F66               	movwf	___awdiv@dividend& (0+255),b
 12438  00190C  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
 12439  00190E  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
 12440  001910  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
 12441  001912  EC8D  F024         	call	___awdiv	;wreg free
 12442  001916  0E09               	movlw	9
 12443  001918  0100               	movlb	0	; () banked
 12444  00191A  2566               	addwf	?___awdiv& (0+255),w,b
 12445  00191C  6F6E               	movwf	___wmul@multiplier& (0+255),b
 12446  00191E  0E00               	movlw	0
 12447  001920  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 12448  001922  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 12449  001924  0E00               	movlw	0
 12450  001926  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12451  001928  0E03               	movlw	3
 12452  00192A  6F70               	movwf	___wmul@multiplicand& (0+255),b
 12453  00192C  ECC0  F02A         	call	___wmul	;wreg free
 12454  001930  0E22               	movlw	low __npowers_
 12455  001932  0100               	movlb	0	; () banked
 12456  001934  256E               	addwf	?___wmul& (0+255),w,b
 12457  001936  6EF6               	movwf	tblptrl,c
 12458  001938  0E7C               	movlw	high __npowers_
 12459  00193A  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 12460  00193C  6EF7               	movwf	tblptrh,c
 12461  00193E                     	if	0	;There are less than 3 active tblptr bytes
 12462  00193E                     	endif
 12463  00193E  0009               	tblrd		*+
 12464  001940  CFF5 F080          	movff	tablat,___ftmul@f1
 12465  001944  0009               	tblrd		*+
 12466  001946  CFF5 F081          	movff	tablat,___ftmul@f1+1
 12467  00194A  000A               	tblrd		*-
 12468  00194C  CFF5 F082          	movff	tablat,___ftmul@f1+2
 12469  001950  0E00               	movlw	0
 12470  001952  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12471  001954  0E03               	movlw	3
 12472  001956  6F70               	movwf	___wmul@multiplicand& (0+255),b
 12473  001958  0E00               	movlw	0
 12474  00195A  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 12475  00195C  0E0A               	movlw	10
 12476  00195E  6F62               	movwf	___awmod@divisor& (0+255),b
 12477  001960  5195               	movf	scale@scl& (0+255),w,b
 12478  001962  6F60               	movwf	___awmod@dividend& (0+255),b
 12479  001964  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 12480  001966  BF60               	btfsc	___awmod@dividend& (0+255),7,b
 12481  001968  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
 12482  00196A  EC45  F026         	call	___awmod	;wreg free
 12483  00196E  C060  F06E         	movff	?___awmod,___wmul@multiplier
 12484  001972  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
 12485  001976  ECC0  F02A         	call	___wmul	;wreg free
 12486  00197A  0E22               	movlw	low __npowers_
 12487  00197C  0100               	movlb	0	; () banked
 12488  00197E  256E               	addwf	?___wmul& (0+255),w,b
 12489  001980  6EF6               	movwf	tblptrl,c
 12490  001982  0E7C               	movlw	high __npowers_
 12491  001984  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 12492  001986  6EF7               	movwf	tblptrh,c
 12493  001988                     	if	0	;There are less than 3 active tblptr bytes
 12494  001988                     	endif
 12495  001988  0009               	tblrd		*+
 12496  00198A  CFF5 F083          	movff	tablat,___ftmul@f2
 12497  00198E  0009               	tblrd		*+
 12498  001990  CFF5 F084          	movff	tablat,___ftmul@f2+1
 12499  001994  000A               	tblrd		*-
 12500  001996  CFF5 F085          	movff	tablat,___ftmul@f2+2
 12501  00199A  EC21  F01D         	call	___ftmul	;wreg free
 12502  00199E  C080  F08F         	movff	?___ftmul,?_scale
 12503  0019A2  C081  F090         	movff	?___ftmul+1,?_scale+1
 12504  0019A6  C082  F091         	movff	?___ftmul+2,?_scale+2
 12505  0019AA  0012               	return	
 12506  0019AC                     l2635:
 12507                           
 12508                           ;doprnt.c: 434: return _npowers_[scl];
 12509  0019AC  0100               	movlb	0	; () banked
 12510  0019AE  5195               	movf	scale@scl& (0+255),w,b
 12511  0019B0  0D03               	mullw	3
 12512  0019B2  0E22               	movlw	low __npowers_
 12513  0019B4  24F3               	addwf	prodl,w,c
 12514  0019B6  6EF6               	movwf	tblptrl,c
 12515  0019B8  0E7C               	movlw	high __npowers_
 12516  0019BA  20F4               	addwfc	prodh,w,c
 12517  0019BC  6EF7               	movwf	tblptrh,c
 12518  0019BE                     	if	0	;There are less than 3 active tblptr bytes
 12519  0019BE                     	endif
 12520  0019BE  0009               	tblrd		*+
 12521  0019C0  CFF5 F08F          	movff	tablat,?_scale
 12522  0019C4  0009               	tblrd		*+
 12523  0019C6  CFF5 F090          	movff	tablat,?_scale+1
 12524  0019CA  000A               	tblrd		*-
 12525  0019CC  CFF5 F091          	movff	tablat,?_scale+2
 12526                           
 12527                           ; BSR set to: 0
 12528  0019D0  0012               	return	
 12529  0019D2                     l2631:
 12530                           
 12531                           ; BSR set to: 0
 12532                           ;doprnt.c: 435: }
 12533                           ;doprnt.c: 436: if(scl>=110)
 12534                           
 12535                           ; BSR set to: 0
 12536  0019D2  5195               	movf	scale@scl& (0+255),w,b
 12537  0019D4  0A80               	xorlw	128
 12538  0019D6  0F12               	addlw	-238
 12539  0019D8  A0D8               	btfss	status,0,c
 12540  0019DA  D097               	goto	l2636
 12541                           
 12542                           ; BSR set to: 0
 12543                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 12544  0019DC  0E00               	movlw	0
 12545  0019DE  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12546  0019E0  0E03               	movlw	3
 12547  0019E2  6F70               	movwf	___wmul@multiplicand& (0+255),b
 12548  0019E4  0E00               	movlw	0
 12549  0019E6  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 12550  0019E8  0E0A               	movlw	10
 12551  0019EA  6F68               	movwf	___awdiv@divisor& (0+255),b
 12552  0019EC  0E00               	movlw	0
 12553  0019EE  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 12554  0019F0  0E64               	movlw	100
 12555  0019F2  6F62               	movwf	___awmod@divisor& (0+255),b
 12556  0019F4  5195               	movf	scale@scl& (0+255),w,b
 12557  0019F6  6F60               	movwf	___awmod@dividend& (0+255),b
 12558  0019F8  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 12559  0019FA  BF60               	btfsc	___awmod@dividend& (0+255),7,b
 12560  0019FC  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
 12561  0019FE  EC45  F026         	call	___awmod	;wreg free
 12562  001A02  C060  F066         	movff	?___awmod,___awdiv@dividend
 12563  001A06  C061  F067         	movff	?___awmod+1,___awdiv@dividend+1
 12564  001A0A  EC8D  F024         	call	___awdiv	;wreg free
 12565  001A0E  0E09               	movlw	9
 12566  001A10  0100               	movlb	0	; () banked
 12567  001A12  2566               	addwf	?___awdiv& (0+255),w,b
 12568  001A14  6F6E               	movwf	___wmul@multiplier& (0+255),b
 12569  001A16  0E00               	movlw	0
 12570  001A18  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 12571  001A1A  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 12572  001A1C  ECC0  F02A         	call	___wmul	;wreg free
 12573  001A20  0EFB               	movlw	low __powers_
 12574  001A22  0100               	movlb	0	; () banked
 12575  001A24  256E               	addwf	?___wmul& (0+255),w,b
 12576  001A26  6EF6               	movwf	tblptrl,c
 12577  001A28  0E7B               	movlw	high __powers_
 12578  001A2A  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 12579  001A2C  6EF7               	movwf	tblptrh,c
 12580  001A2E                     	if	0	;There are less than 3 active tblptr bytes
 12581  001A2E                     	endif
 12582  001A2E  0009               	tblrd		*+
 12583  001A30  CFF5 F083          	movff	tablat,___ftmul@f2
 12584  001A34  0009               	tblrd		*+
 12585  001A36  CFF5 F084          	movff	tablat,___ftmul@f2+1
 12586  001A3A  000A               	tblrd		*-
 12587  001A3C  CFF5 F085          	movff	tablat,___ftmul@f2+2
 12588  001A40  0E00               	movlw	0
 12589  001A42  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 12590  001A44  0E64               	movlw	100
 12591  001A46  6F68               	movwf	___awdiv@divisor& (0+255),b
 12592  001A48  5195               	movf	scale@scl& (0+255),w,b
 12593  001A4A  6F66               	movwf	___awdiv@dividend& (0+255),b
 12594  001A4C  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
 12595  001A4E  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
 12596  001A50  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
 12597  001A52  EC8D  F024         	call	___awdiv	;wreg free
 12598  001A56  0E12               	movlw	18
 12599  001A58  0100               	movlb	0	; () banked
 12600  001A5A  2566               	addwf	?___awdiv& (0+255),w,b
 12601  001A5C  6F6E               	movwf	___wmul@multiplier& (0+255),b
 12602  001A5E  0E00               	movlw	0
 12603  001A60  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 12604  001A62  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 12605  001A64  0E00               	movlw	0
 12606  001A66  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12607  001A68  0E03               	movlw	3
 12608  001A6A  6F70               	movwf	___wmul@multiplicand& (0+255),b
 12609  001A6C  ECC0  F02A         	call	___wmul	;wreg free
 12610  001A70  0EFB               	movlw	low __powers_
 12611  001A72  0100               	movlb	0	; () banked
 12612  001A74  256E               	addwf	?___wmul& (0+255),w,b
 12613  001A76  6EF6               	movwf	tblptrl,c
 12614  001A78  0E7B               	movlw	high __powers_
 12615  001A7A  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 12616  001A7C  6EF7               	movwf	tblptrh,c
 12617  001A7E                     	if	0	;There are less than 3 active tblptr bytes
 12618  001A7E                     	endif
 12619  001A7E  0009               	tblrd		*+
 12620  001A80  CFF5 F080          	movff	tablat,___ftmul@f1
 12621  001A84  0009               	tblrd		*+
 12622  001A86  CFF5 F081          	movff	tablat,___ftmul@f1+1
 12623  001A8A  000A               	tblrd		*-
 12624  001A8C  CFF5 F082          	movff	tablat,___ftmul@f1+2
 12625  001A90  EC21  F01D         	call	___ftmul	;wreg free
 12626  001A94  C080  F092         	movff	?___ftmul,_scale$5960
 12627  001A98  C081  F093         	movff	?___ftmul+1,_scale$5960+1
 12628  001A9C  C082  F094         	movff	?___ftmul+2,_scale$5960+2
 12629                           
 12630                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 12631  001AA0  C092  F080         	movff	_scale$5960,___ftmul@f1
 12632  001AA4  C093  F081         	movff	_scale$5960+1,___ftmul@f1+1
 12633  001AA8  C094  F082         	movff	_scale$5960+2,___ftmul@f1+2
 12634  001AAC  0E00               	movlw	0
 12635  001AAE  0100               	movlb	0	; () banked
 12636  001AB0  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12637  001AB2  0E03               	movlw	3
 12638  001AB4  6F70               	movwf	___wmul@multiplicand& (0+255),b
 12639  001AB6  0E00               	movlw	0
 12640  001AB8  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 12641  001ABA  0E0A               	movlw	10
 12642  001ABC  6F62               	movwf	___awmod@divisor& (0+255),b
 12643  001ABE  5195               	movf	scale@scl& (0+255),w,b
 12644  001AC0  6F60               	movwf	___awmod@dividend& (0+255),b
 12645  001AC2  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 12646  001AC4  BF60               	btfsc	___awmod@dividend& (0+255),7,b
 12647  001AC6  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
 12648  001AC8  EC45  F026         	call	___awmod	;wreg free
 12649  001ACC  C060  F06E         	movff	?___awmod,___wmul@multiplier
 12650  001AD0  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
 12651  001AD4  ECC0  F02A         	call	___wmul	;wreg free
 12652  001AD8  0EFB               	movlw	low __powers_
 12653  001ADA  0100               	movlb	0	; () banked
 12654  001ADC  256E               	addwf	?___wmul& (0+255),w,b
 12655  001ADE  6EF6               	movwf	tblptrl,c
 12656  001AE0  0E7B               	movlw	high __powers_
 12657  001AE2  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 12658  001AE4  6EF7               	movwf	tblptrh,c
 12659  001AE6                     	if	0	;There are less than 3 active tblptr bytes
 12660  001AE6                     	endif
 12661  001AE6  0009               	tblrd		*+
 12662  001AE8  CFF5 F083          	movff	tablat,___ftmul@f2
 12663  001AEC  0009               	tblrd		*+
 12664  001AEE  CFF5 F084          	movff	tablat,___ftmul@f2+1
 12665  001AF2  000A               	tblrd		*-
 12666  001AF4  CFF5 F085          	movff	tablat,___ftmul@f2+2
 12667  001AF8  EC21  F01D         	call	___ftmul	;wreg free
 12668  001AFC  C080  F08F         	movff	?___ftmul,?_scale
 12669  001B00  C081  F090         	movff	?___ftmul+1,?_scale+1
 12670  001B04  C082  F091         	movff	?___ftmul+2,?_scale+2
 12671  001B08  0012               	return	
 12672  001B0A                     l2636:
 12673                           
 12674                           ;doprnt.c: 438: else if(scl > 10)
 12675  001B0A  0100               	movlb	0	; () banked
 12676  001B0C  5195               	movf	scale@scl& (0+255),w,b
 12677  001B0E  0A80               	xorlw	128
 12678  001B10  0F75               	addlw	-139
 12679  001B12  A0D8               	btfss	status,0,c
 12680  001B14  D056               	goto	l2638
 12681                           
 12682                           ; BSR set to: 0
 12683                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 12684  001B16  0E00               	movlw	0
 12685  001B18  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 12686  001B1A  0E0A               	movlw	10
 12687  001B1C  6F68               	movwf	___awdiv@divisor& (0+255),b
 12688  001B1E  5195               	movf	scale@scl& (0+255),w,b
 12689  001B20  6F66               	movwf	___awdiv@dividend& (0+255),b
 12690  001B22  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
 12691  001B24  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
 12692  001B26  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
 12693  001B28  EC8D  F024         	call	___awdiv	;wreg free
 12694  001B2C  0E09               	movlw	9
 12695  001B2E  0100               	movlb	0	; () banked
 12696  001B30  2566               	addwf	?___awdiv& (0+255),w,b
 12697  001B32  6F6E               	movwf	___wmul@multiplier& (0+255),b
 12698  001B34  0E00               	movlw	0
 12699  001B36  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 12700  001B38  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 12701  001B3A  0E00               	movlw	0
 12702  001B3C  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12703  001B3E  0E03               	movlw	3
 12704  001B40  6F70               	movwf	___wmul@multiplicand& (0+255),b
 12705  001B42  ECC0  F02A         	call	___wmul	;wreg free
 12706  001B46  0EFB               	movlw	low __powers_
 12707  001B48  0100               	movlb	0	; () banked
 12708  001B4A  256E               	addwf	?___wmul& (0+255),w,b
 12709  001B4C  6EF6               	movwf	tblptrl,c
 12710  001B4E  0E7B               	movlw	high __powers_
 12711  001B50  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 12712  001B52  6EF7               	movwf	tblptrh,c
 12713  001B54                     	if	0	;There are less than 3 active tblptr bytes
 12714  001B54                     	endif
 12715  001B54  0009               	tblrd		*+
 12716  001B56  CFF5 F080          	movff	tablat,___ftmul@f1
 12717  001B5A  0009               	tblrd		*+
 12718  001B5C  CFF5 F081          	movff	tablat,___ftmul@f1+1
 12719  001B60  000A               	tblrd		*-
 12720  001B62  CFF5 F082          	movff	tablat,___ftmul@f1+2
 12721  001B66  0E00               	movlw	0
 12722  001B68  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12723  001B6A  0E03               	movlw	3
 12724  001B6C  6F70               	movwf	___wmul@multiplicand& (0+255),b
 12725  001B6E  0E00               	movlw	0
 12726  001B70  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 12727  001B72  0E0A               	movlw	10
 12728  001B74  6F62               	movwf	___awmod@divisor& (0+255),b
 12729  001B76  5195               	movf	scale@scl& (0+255),w,b
 12730  001B78  6F60               	movwf	___awmod@dividend& (0+255),b
 12731  001B7A  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 12732  001B7C  BF60               	btfsc	___awmod@dividend& (0+255),7,b
 12733  001B7E  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
 12734  001B80  EC45  F026         	call	___awmod	;wreg free
 12735  001B84  C060  F06E         	movff	?___awmod,___wmul@multiplier
 12736  001B88  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
 12737  001B8C  ECC0  F02A         	call	___wmul	;wreg free
 12738  001B90  0EFB               	movlw	low __powers_
 12739  001B92  0100               	movlb	0	; () banked
 12740  001B94  256E               	addwf	?___wmul& (0+255),w,b
 12741  001B96  6EF6               	movwf	tblptrl,c
 12742  001B98  0E7B               	movlw	high __powers_
 12743  001B9A  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 12744  001B9C  6EF7               	movwf	tblptrh,c
 12745  001B9E                     	if	0	;There are less than 3 active tblptr bytes
 12746  001B9E                     	endif
 12747  001B9E  0009               	tblrd		*+
 12748  001BA0  CFF5 F083          	movff	tablat,___ftmul@f2
 12749  001BA4  0009               	tblrd		*+
 12750  001BA6  CFF5 F084          	movff	tablat,___ftmul@f2+1
 12751  001BAA  000A               	tblrd		*-
 12752  001BAC  CFF5 F085          	movff	tablat,___ftmul@f2+2
 12753  001BB0  EC21  F01D         	call	___ftmul	;wreg free
 12754  001BB4  C080  F08F         	movff	?___ftmul,?_scale
 12755  001BB8  C081  F090         	movff	?___ftmul+1,?_scale+1
 12756  001BBC  C082  F091         	movff	?___ftmul+2,?_scale+2
 12757  001BC0  0012               	return	
 12758  001BC2                     l2638:
 12759                           
 12760                           ;doprnt.c: 440: return _powers_[scl];
 12761  001BC2  0100               	movlb	0	; () banked
 12762  001BC4  5195               	movf	scale@scl& (0+255),w,b
 12763  001BC6  0D03               	mullw	3
 12764  001BC8  0EFB               	movlw	low __powers_
 12765  001BCA  24F3               	addwf	prodl,w,c
 12766  001BCC  6EF6               	movwf	tblptrl,c
 12767  001BCE  0E7B               	movlw	high __powers_
 12768  001BD0  20F4               	addwfc	prodh,w,c
 12769  001BD2  6EF7               	movwf	tblptrh,c
 12770  001BD4                     	if	0	;There are less than 3 active tblptr bytes
 12771  001BD4                     	endif
 12772  001BD4  0009               	tblrd		*+
 12773  001BD6  CFF5 F08F          	movff	tablat,?_scale
 12774  001BDA  0009               	tblrd		*+
 12775  001BDC  CFF5 F090          	movff	tablat,?_scale+1
 12776  001BE0  000A               	tblrd		*-
 12777  001BE2  CFF5 F091          	movff	tablat,?_scale+2
 12778  001BE6  0012               	return	
 12779  001BE8                     __end_of_scale:
 12780                           	opt stack 0
 12781                           tblptru	equ	0xFF8
 12782                           tblptrh	equ	0xFF7
 12783                           tblptrl	equ	0xFF6
 12784                           tablat	equ	0xFF5
 12785                           prodh	equ	0xFF4
 12786                           prodl	equ	0xFF3
 12787                           intcon	equ	0xFF2
 12788                           postinc0	equ	0xFEE
 12789                           wreg	equ	0xFE8
 12790                           indf1	equ	0xFE7
 12791                           postdec1	equ	0xFE5
 12792                           fsr1h	equ	0xFE2
 12793                           fsr1l	equ	0xFE1
 12794                           indf2	equ	0xFDF
 12795                           postinc2	equ	0xFDE
 12796                           postdec2	equ	0xFDD
 12797                           plusw2	equ	0xFDB
 12798                           fsr2h	equ	0xFDA
 12799                           fsr2l	equ	0xFD9
 12800                           status	equ	0xFD8
 12801                           
 12802 ;; *************** function _isdigit *****************
 12803 ;; Defined at:
 12804 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\isdigit.c"
 12805 ;; Parameters:    Size  Location     Type
 12806 ;;  c               1    wreg     unsigned char 
 12807 ;; Auto vars:     Size  Location     Type
 12808 ;;  c               1    2[BANK0 ] unsigned char 
 12809 ;; Return value:  Size  Location     Type
 12810 ;;		None               void
 12811 ;; Registers used:
 12812 ;;		wreg, status,2, status,0
 12813 ;; Tracked objects:
 12814 ;;		On entry : 0/0
 12815 ;;		On exit  : 0/0
 12816 ;;		Unchanged: 0/0
 12817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12818 ;;      Params:         0       0       0       0       0       0       0       0       0
 12819 ;;      Locals:         0       2       0       0       0       0       0       0       0
 12820 ;;      Temps:          0       1       0       0       0       0       0       0       0
 12821 ;;      Totals:         0       3       0       0       0       0       0       0       0
 12822 ;;Total ram usage:        3 bytes
 12823 ;; Hardware stack levels used:    1
 12824 ;; Hardware stack levels required when called:   10
 12825 ;; This function calls:
 12826 ;;		Nothing
 12827 ;; This function is called by:
 12828 ;;		_sprintf
 12829 ;; This function uses a non-reentrant model
 12830 ;;
 12831                           
 12832                           	psect	text34
 12833  005686                     __ptext34:
 12834                           	opt stack 0
 12835  005686                     _isdigit:
 12836                           	opt stack 19
 12837                           
 12838                           ;incstack = 0
 12839                           ;isdigit@c stored from wreg
 12840  005686  0100               	movlb	0	; () banked
 12841  005688  6F62               	movwf	isdigit@c& (0+255),b
 12842  00568A  0E00               	movlw	0
 12843  00568C  0100               	movlb	0	; () banked
 12844  00568E  6F61               	movwf	_isdigit$5381& (0+255),b
 12845                           
 12846                           ; BSR set to: 0
 12847  005690  0E3A               	movlw	58
 12848  005692  6162               	cpfslt	isdigit@c& (0+255),b
 12849  005694  D005               	goto	l3149
 12850                           
 12851                           ; BSR set to: 0
 12852  005696  0E2F               	movlw	47
 12853  005698  6562               	cpfsgt	isdigit@c& (0+255),b
 12854  00569A  D002               	goto	l3149
 12855                           
 12856                           ; BSR set to: 0
 12857  00569C  0E01               	movlw	1
 12858  00569E  6F61               	movwf	_isdigit$5381& (0+255),b
 12859  0056A0                     l3149:
 12860                           
 12861                           ; BSR set to: 0
 12862                           
 12863                           ; BSR set to: 0
 12864  0056A0  C061  F060         	movff	_isdigit$5381,??_isdigit
 12865  0056A4  3160               	rrcf	??_isdigit& (0+255),w,b
 12866  0056A6  0012               	return	
 12867  0056A8                     __end_of_isdigit:
 12868                           	opt stack 0
 12869                           tblptru	equ	0xFF8
 12870                           tblptrh	equ	0xFF7
 12871                           tblptrl	equ	0xFF6
 12872                           tablat	equ	0xFF5
 12873                           prodh	equ	0xFF4
 12874                           prodl	equ	0xFF3
 12875                           intcon	equ	0xFF2
 12876                           postinc0	equ	0xFEE
 12877                           wreg	equ	0xFE8
 12878                           indf1	equ	0xFE7
 12879                           postdec1	equ	0xFE5
 12880                           fsr1h	equ	0xFE2
 12881                           fsr1l	equ	0xFE1
 12882                           indf2	equ	0xFDF
 12883                           postinc2	equ	0xFDE
 12884                           postdec2	equ	0xFDD
 12885                           plusw2	equ	0xFDB
 12886                           fsr2h	equ	0xFDA
 12887                           fsr2l	equ	0xFD9
 12888                           status	equ	0xFD8
 12889                           
 12890 ;; *************** function _fround *****************
 12891 ;; Defined at:
 12892 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\doprnt.c"
 12893 ;; Parameters:    Size  Location     Type
 12894 ;;  prec            1    wreg     unsigned char 
 12895 ;; Auto vars:     Size  Location     Type
 12896 ;;  prec            1   56[BANK0 ] unsigned char 
 12897 ;; Return value:  Size  Location     Type
 12898 ;;                  3   47[BANK0 ] unsigned char 
 12899 ;; Registers used:
 12900 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12901 ;; Tracked objects:
 12902 ;;		On entry : 0/0
 12903 ;;		On exit  : 0/0
 12904 ;;		Unchanged: 0/0
 12905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12906 ;;      Params:         0       3       0       0       0       0       0       0       0
 12907 ;;      Locals:         0       7       0       0       0       0       0       0       0
 12908 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12909 ;;      Totals:         0      10       0       0       0       0       0       0       0
 12910 ;;Total ram usage:       10 bytes
 12911 ;; Hardware stack levels used:    1
 12912 ;; Hardware stack levels required when called:   12
 12913 ;; This function calls:
 12914 ;;		___awdiv
 12915 ;;		___awmod
 12916 ;;		___ftmul
 12917 ;;		___wmul
 12918 ;; This function is called by:
 12919 ;;		_sprintf
 12920 ;; This function uses a non-reentrant model
 12921 ;;
 12922                           
 12923                           	psect	text35
 12924  0024CA                     __ptext35:
 12925                           	opt stack 0
 12926  0024CA                     _fround:
 12927                           	opt stack 17
 12928                           
 12929                           ; BSR set to: 0
 12930                           ;incstack = 0
 12931                           ;fround@prec stored from wreg
 12932  0024CA  0100               	movlb	0	; () banked
 12933  0024CC  6F98               	movwf	fround@prec& (0+255),b
 12934                           
 12935                           ;doprnt.c: 413: if(prec>=110)
 12936  0024CE  0E6D               	movlw	109
 12937  0024D0  0100               	movlb	0	; () banked
 12938  0024D2  6598               	cpfsgt	fround@prec& (0+255),b
 12939  0024D4  D0A6               	goto	l2625
 12940                           
 12941                           ; BSR set to: 0
 12942                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 12943  0024D6  0E00               	movlw	0
 12944  0024D8  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12945  0024DA  0E03               	movlw	3
 12946  0024DC  6F70               	movwf	___wmul@multiplicand& (0+255),b
 12947  0024DE  0E00               	movlw	0
 12948  0024E0  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 12949  0024E2  0E0A               	movlw	10
 12950  0024E4  6F68               	movwf	___awdiv@divisor& (0+255),b
 12951  0024E6  0E00               	movlw	0
 12952  0024E8  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 12953  0024EA  0E64               	movlw	100
 12954  0024EC  6F62               	movwf	___awmod@divisor& (0+255),b
 12955  0024EE  C098  F060         	movff	fround@prec,___awmod@dividend
 12956  0024F2  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 12957  0024F4  EC45  F026         	call	___awmod	;wreg free
 12958  0024F8  C060  F066         	movff	?___awmod,___awdiv@dividend
 12959  0024FC  C061  F067         	movff	?___awmod+1,___awdiv@dividend+1
 12960  002500  EC8D  F024         	call	___awdiv	;wreg free
 12961  002504  0E09               	movlw	9
 12962  002506  0100               	movlb	0	; () banked
 12963  002508  2566               	addwf	?___awdiv& (0+255),w,b
 12964  00250A  6F6E               	movwf	___wmul@multiplier& (0+255),b
 12965  00250C  0E00               	movlw	0
 12966  00250E  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 12967  002510  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 12968  002512  ECC0  F02A         	call	___wmul	;wreg free
 12969  002516  0E22               	movlw	low __npowers_
 12970  002518  0100               	movlb	0	; () banked
 12971  00251A  256E               	addwf	?___wmul& (0+255),w,b
 12972  00251C  6EF6               	movwf	tblptrl,c
 12973  00251E  0E7C               	movlw	high __npowers_
 12974  002520  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 12975  002522  6EF7               	movwf	tblptrh,c
 12976  002524                     	if	0	;There are less than 3 active tblptr bytes
 12977  002524                     	endif
 12978  002524  0009               	tblrd		*+
 12979  002526  CFF5 F083          	movff	tablat,___ftmul@f2
 12980  00252A  0009               	tblrd		*+
 12981  00252C  CFF5 F084          	movff	tablat,___ftmul@f2+1
 12982  002530  000A               	tblrd		*-
 12983  002532  CFF5 F085          	movff	tablat,___ftmul@f2+2
 12984  002536  0E00               	movlw	0
 12985  002538  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 12986  00253A  0E64               	movlw	100
 12987  00253C  6F68               	movwf	___awdiv@divisor& (0+255),b
 12988  00253E  C098  F066         	movff	fround@prec,___awdiv@dividend
 12989  002542  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
 12990  002544  EC8D  F024         	call	___awdiv	;wreg free
 12991  002548  0E12               	movlw	18
 12992  00254A  0100               	movlb	0	; () banked
 12993  00254C  2566               	addwf	?___awdiv& (0+255),w,b
 12994  00254E  6F6E               	movwf	___wmul@multiplier& (0+255),b
 12995  002550  0E00               	movlw	0
 12996  002552  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 12997  002554  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 12998  002556  0E00               	movlw	0
 12999  002558  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 13000  00255A  0E03               	movlw	3
 13001  00255C  6F70               	movwf	___wmul@multiplicand& (0+255),b
 13002  00255E  ECC0  F02A         	call	___wmul	;wreg free
 13003  002562  0E22               	movlw	low __npowers_
 13004  002564  0100               	movlb	0	; () banked
 13005  002566  256E               	addwf	?___wmul& (0+255),w,b
 13006  002568  6EF6               	movwf	tblptrl,c
 13007  00256A  0E7C               	movlw	high __npowers_
 13008  00256C  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 13009  00256E  6EF7               	movwf	tblptrh,c
 13010  002570                     	if	0	;There are less than 3 active tblptr bytes
 13011  002570                     	endif
 13012  002570  0009               	tblrd		*+
 13013  002572  CFF5 F080          	movff	tablat,___ftmul@f1
 13014  002576  0009               	tblrd		*+
 13015  002578  CFF5 F081          	movff	tablat,___ftmul@f1+1
 13016  00257C  000A               	tblrd		*-
 13017  00257E  CFF5 F082          	movff	tablat,___ftmul@f1+2
 13018  002582  EC21  F01D         	call	___ftmul	;wreg free
 13019  002586  C080  F095         	movff	?___ftmul,_fround$5958
 13020  00258A  C081  F096         	movff	?___ftmul+1,_fround$5958+1
 13021  00258E  C082  F097         	movff	?___ftmul+2,_fround$5958+2
 13022                           
 13023                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 13024  002592  0E00               	movlw	0
 13025  002594  0100               	movlb	0	; () banked
 13026  002596  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 13027  002598  0E03               	movlw	3
 13028  00259A  6F70               	movwf	___wmul@multiplicand& (0+255),b
 13029  00259C  0E00               	movlw	0
 13030  00259E  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 13031  0025A0  0E0A               	movlw	10
 13032  0025A2  6F62               	movwf	___awmod@divisor& (0+255),b
 13033  0025A4  C098  F060         	movff	fround@prec,___awmod@dividend
 13034  0025A8  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 13035  0025AA  EC45  F026         	call	___awmod	;wreg free
 13036  0025AE  C060  F06E         	movff	?___awmod,___wmul@multiplier
 13037  0025B2  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
 13038  0025B6  ECC0  F02A         	call	___wmul	;wreg free
 13039  0025BA  0E22               	movlw	low __npowers_
 13040  0025BC  0100               	movlb	0	; () banked
 13041  0025BE  256E               	addwf	?___wmul& (0+255),w,b
 13042  0025C0  6EF6               	movwf	tblptrl,c
 13043  0025C2  0E7C               	movlw	high __npowers_
 13044  0025C4  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 13045  0025C6  6EF7               	movwf	tblptrh,c
 13046  0025C8                     	if	0	;There are less than 3 active tblptr bytes
 13047  0025C8                     	endif
 13048  0025C8  0009               	tblrd		*+
 13049  0025CA  CFF5 F083          	movff	tablat,___ftmul@f2
 13050  0025CE  0009               	tblrd		*+
 13051  0025D0  CFF5 F084          	movff	tablat,___ftmul@f2+1
 13052  0025D4  000A               	tblrd		*-
 13053  0025D6  CFF5 F085          	movff	tablat,___ftmul@f2+2
 13054  0025DA  C095  F080         	movff	_fround$5958,___ftmul@f1
 13055  0025DE  C096  F081         	movff	_fround$5958+1,___ftmul@f1+1
 13056  0025E2  C097  F082         	movff	_fround$5958+2,___ftmul@f1+2
 13057  0025E6  EC21  F01D         	call	___ftmul	;wreg free
 13058  0025EA  C080  F092         	movff	?___ftmul,_fround$5959
 13059  0025EE  C081  F093         	movff	?___ftmul+1,_fround$5959+1
 13060  0025F2  C082  F094         	movff	?___ftmul+2,_fround$5959+2
 13061                           
 13062                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 13063  0025F6  C092  F080         	movff	_fround$5959,___ftmul@f1
 13064  0025FA  C093  F081         	movff	_fround$5959+1,___ftmul@f1+1
 13065  0025FE  C094  F082         	movff	_fround$5959+2,___ftmul@f1+2
 13066  002602  0E00               	movlw	0
 13067  002604  0100               	movlb	0	; () banked
 13068  002606  6F83               	movwf	___ftmul@f2& (0+255),b
 13069  002608  0E00               	movlw	0
 13070  00260A  6F84               	movwf	(___ftmul@f2+1)& (0+255),b
 13071  00260C  0E3F               	movlw	63
 13072  00260E  6F85               	movwf	(___ftmul@f2+2)& (0+255),b
 13073  002610  EC21  F01D         	call	___ftmul	;wreg free
 13074  002614  C080  F08F         	movff	?___ftmul,?_fround
 13075  002618  C081  F090         	movff	?___ftmul+1,?_fround+1
 13076  00261C  C082  F091         	movff	?___ftmul+2,?_fround+2
 13077  002620  0012               	return	
 13078  002622                     l2625:
 13079                           
 13080                           ;doprnt.c: 415: else if(prec > 10)
 13081  002622  0E0A               	movlw	10
 13082  002624  0100               	movlb	0	; () banked
 13083  002626  6598               	cpfsgt	fround@prec& (0+255),b
 13084  002628  D067               	goto	l2628
 13085                           
 13086                           ; BSR set to: 0
 13087                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 13088  00262A  0E00               	movlw	0
 13089  00262C  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 13090  00262E  0E03               	movlw	3
 13091  002630  6F70               	movwf	___wmul@multiplicand& (0+255),b
 13092  002632  0E00               	movlw	0
 13093  002634  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 13094  002636  0E0A               	movlw	10
 13095  002638  6F62               	movwf	___awmod@divisor& (0+255),b
 13096  00263A  C098  F060         	movff	fround@prec,___awmod@dividend
 13097  00263E  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 13098  002640  EC45  F026         	call	___awmod	;wreg free
 13099  002644  C060  F06E         	movff	?___awmod,___wmul@multiplier
 13100  002648  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
 13101  00264C  ECC0  F02A         	call	___wmul	;wreg free
 13102  002650  0E22               	movlw	low __npowers_
 13103  002652  0100               	movlb	0	; () banked
 13104  002654  256E               	addwf	?___wmul& (0+255),w,b
 13105  002656  6EF6               	movwf	tblptrl,c
 13106  002658  0E7C               	movlw	high __npowers_
 13107  00265A  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 13108  00265C  6EF7               	movwf	tblptrh,c
 13109  00265E                     	if	0	;There are less than 3 active tblptr bytes
 13110  00265E                     	endif
 13111  00265E  0009               	tblrd		*+
 13112  002660  CFF5 F083          	movff	tablat,___ftmul@f2
 13113  002664  0009               	tblrd		*+
 13114  002666  CFF5 F084          	movff	tablat,___ftmul@f2+1
 13115  00266A  000A               	tblrd		*-
 13116  00266C  CFF5 F085          	movff	tablat,___ftmul@f2+2
 13117  002670  0E00               	movlw	0
 13118  002672  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 13119  002674  0E0A               	movlw	10
 13120  002676  6F68               	movwf	___awdiv@divisor& (0+255),b
 13121  002678  C098  F066         	movff	fround@prec,___awdiv@dividend
 13122  00267C  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
 13123  00267E  EC8D  F024         	call	___awdiv	;wreg free
 13124  002682  0E09               	movlw	9
 13125  002684  0100               	movlb	0	; () banked
 13126  002686  2566               	addwf	?___awdiv& (0+255),w,b
 13127  002688  6F6E               	movwf	___wmul@multiplier& (0+255),b
 13128  00268A  0E00               	movlw	0
 13129  00268C  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 13130  00268E  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 13131  002690  0E00               	movlw	0
 13132  002692  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 13133  002694  0E03               	movlw	3
 13134  002696  6F70               	movwf	___wmul@multiplicand& (0+255),b
 13135  002698  ECC0  F02A         	call	___wmul	;wreg free
 13136  00269C  0E22               	movlw	low __npowers_
 13137  00269E  0100               	movlb	0	; () banked
 13138  0026A0  256E               	addwf	?___wmul& (0+255),w,b
 13139  0026A2  6EF6               	movwf	tblptrl,c
 13140  0026A4  0E7C               	movlw	high __npowers_
 13141  0026A6  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 13142  0026A8  6EF7               	movwf	tblptrh,c
 13143  0026AA                     	if	0	;There are less than 3 active tblptr bytes
 13144  0026AA                     	endif
 13145  0026AA  0009               	tblrd		*+
 13146  0026AC  CFF5 F080          	movff	tablat,___ftmul@f1
 13147  0026B0  0009               	tblrd		*+
 13148  0026B2  CFF5 F081          	movff	tablat,___ftmul@f1+1
 13149  0026B6  000A               	tblrd		*-
 13150  0026B8  CFF5 F082          	movff	tablat,___ftmul@f1+2
 13151  0026BC  EC21  F01D         	call	___ftmul	;wreg free
 13152  0026C0  C080  F095         	movff	?___ftmul,_fround$5958
 13153  0026C4  C081  F096         	movff	?___ftmul+1,_fround$5958+1
 13154  0026C8  C082  F097         	movff	?___ftmul+2,_fround$5958+2
 13155                           
 13156                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 13157  0026CC  C095  F080         	movff	_fround$5958,___ftmul@f1
 13158  0026D0  C096  F081         	movff	_fround$5958+1,___ftmul@f1+1
 13159  0026D4  C097  F082         	movff	_fround$5958+2,___ftmul@f1+2
 13160  0026D8  0E00               	movlw	0
 13161  0026DA  0100               	movlb	0	; () banked
 13162  0026DC  6F83               	movwf	___ftmul@f2& (0+255),b
 13163  0026DE  0E00               	movlw	0
 13164  0026E0  6F84               	movwf	(___ftmul@f2+1)& (0+255),b
 13165  0026E2  0E3F               	movlw	63
 13166  0026E4  6F85               	movwf	(___ftmul@f2+2)& (0+255),b
 13167  0026E6  EC21  F01D         	call	___ftmul	;wreg free
 13168  0026EA  C080  F08F         	movff	?___ftmul,?_fround
 13169  0026EE  C081  F090         	movff	?___ftmul+1,?_fround+1
 13170  0026F2  C082  F091         	movff	?___ftmul+2,?_fround+2
 13171  0026F6  0012               	return	
 13172  0026F8                     l2628:
 13173                           
 13174                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 13175  0026F8  0100               	movlb	0	; () banked
 13176  0026FA  5198               	movf	fround@prec& (0+255),w,b
 13177  0026FC  0D03               	mullw	3
 13178  0026FE  0E22               	movlw	low __npowers_
 13179  002700  24F3               	addwf	prodl,w,c
 13180  002702  6EF6               	movwf	tblptrl,c
 13181  002704  0E7C               	movlw	high __npowers_
 13182  002706  20F4               	addwfc	prodh,w,c
 13183  002708  6EF7               	movwf	tblptrh,c
 13184  00270A                     	if	0	;There are less than 3 active tblptr bytes
 13185  00270A                     	endif
 13186  00270A  0009               	tblrd		*+
 13187  00270C  CFF5 F080          	movff	tablat,___ftmul@f1
 13188  002710  0009               	tblrd		*+
 13189  002712  CFF5 F081          	movff	tablat,___ftmul@f1+1
 13190  002716  000A               	tblrd		*-
 13191  002718  CFF5 F082          	movff	tablat,___ftmul@f1+2
 13192  00271C  0E00               	movlw	0
 13193  00271E  6F83               	movwf	___ftmul@f2& (0+255),b
 13194  002720  0E00               	movlw	0
 13195  002722  6F84               	movwf	(___ftmul@f2+1)& (0+255),b
 13196  002724  0E3F               	movlw	63
 13197  002726  6F85               	movwf	(___ftmul@f2+2)& (0+255),b
 13198  002728  EC21  F01D         	call	___ftmul	;wreg free
 13199  00272C  C080  F08F         	movff	?___ftmul,?_fround
 13200  002730  C081  F090         	movff	?___ftmul+1,?_fround+1
 13201  002734  C082  F091         	movff	?___ftmul+2,?_fround+2
 13202  002738  0012               	return	
 13203  00273A                     __end_of_fround:
 13204                           	opt stack 0
 13205                           tblptru	equ	0xFF8
 13206                           tblptrh	equ	0xFF7
 13207                           tblptrl	equ	0xFF6
 13208                           tablat	equ	0xFF5
 13209                           prodh	equ	0xFF4
 13210                           prodl	equ	0xFF3
 13211                           intcon	equ	0xFF2
 13212                           postinc0	equ	0xFEE
 13213                           wreg	equ	0xFE8
 13214                           indf1	equ	0xFE7
 13215                           postdec1	equ	0xFE5
 13216                           fsr1h	equ	0xFE2
 13217                           fsr1l	equ	0xFE1
 13218                           indf2	equ	0xFDF
 13219                           postinc2	equ	0xFDE
 13220                           postdec2	equ	0xFDD
 13221                           plusw2	equ	0xFDB
 13222                           fsr2h	equ	0xFDA
 13223                           fsr2l	equ	0xFD9
 13224                           status	equ	0xFD8
 13225                           
 13226 ;; *************** function ___wmul *****************
 13227 ;; Defined at:
 13228 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\Umul16.c"
 13229 ;; Parameters:    Size  Location     Type
 13230 ;;  multiplier      2   14[BANK0 ] unsigned int 
 13231 ;;  multiplicand    2   16[BANK0 ] unsigned int 
 13232 ;; Auto vars:     Size  Location     Type
 13233 ;;  product         2   18[BANK0 ] unsigned int 
 13234 ;; Return value:  Size  Location     Type
 13235 ;;                  2   14[BANK0 ] unsigned int 
 13236 ;; Registers used:
 13237 ;;		wreg, status,2, status,0, prodl, prodh
 13238 ;; Tracked objects:
 13239 ;;		On entry : 0/0
 13240 ;;		On exit  : 0/0
 13241 ;;		Unchanged: 0/0
 13242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13243 ;;      Params:         0       4       0       0       0       0       0       0       0
 13244 ;;      Locals:         0       2       0       0       0       0       0       0       0
 13245 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13246 ;;      Totals:         0       6       0       0       0       0       0       0       0
 13247 ;;Total ram usage:        6 bytes
 13248 ;; Hardware stack levels used:    1
 13249 ;; Hardware stack levels required when called:   10
 13250 ;; This function calls:
 13251 ;;		Nothing
 13252 ;; This function is called by:
 13253 ;;		_fround
 13254 ;;		_scale
 13255 ;;		_sprintf
 13256 ;; This function uses a non-reentrant model
 13257 ;;
 13258                           
 13259                           	psect	text36
 13260  005580                     __ptext36:
 13261                           	opt stack 0
 13262  005580                     ___wmul:
 13263                           	opt stack 18
 13264                           
 13265                           ;incstack = 0
 13266  005580  0100               	movlb	0	; () banked
 13267  005582  516E               	movf	___wmul@multiplier& (0+255),w,b
 13268  005584  0370               	mulwf	___wmul@multiplicand& (0+255),b
 13269  005586  CFF3 F072          	movff	prodl,___wmul@product
 13270  00558A  CFF4 F073          	movff	prodh,___wmul@product+1
 13271  00558E  516E               	movf	___wmul@multiplier& (0+255),w,b
 13272  005590  0371               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 13273  005592  50F3               	movf	prodl,w,c
 13274  005594  2773               	addwf	(___wmul@product+1)& (0+255),f,b
 13275  005596  516F               	movf	(___wmul@multiplier+1)& (0+255),w,b
 13276  005598  0370               	mulwf	___wmul@multiplicand& (0+255),b
 13277  00559A  50F3               	movf	prodl,w,c
 13278  00559C  2773               	addwf	(___wmul@product+1)& (0+255),f,b
 13279                           
 13280                           ; BSR set to: 0
 13281  00559E  C072  F06E         	movff	___wmul@product,?___wmul
 13282  0055A2  C073  F06F         	movff	___wmul@product+1,?___wmul+1
 13283  0055A6  0012               	return	
 13284  0055A8                     __end_of___wmul:
 13285                           	opt stack 0
 13286                           tblptru	equ	0xFF8
 13287                           tblptrh	equ	0xFF7
 13288                           tblptrl	equ	0xFF6
 13289                           tablat	equ	0xFF5
 13290                           prodh	equ	0xFF4
 13291                           prodl	equ	0xFF3
 13292                           intcon	equ	0xFF2
 13293                           postinc0	equ	0xFEE
 13294                           wreg	equ	0xFE8
 13295                           indf1	equ	0xFE7
 13296                           postdec1	equ	0xFE5
 13297                           fsr1h	equ	0xFE2
 13298                           fsr1l	equ	0xFE1
 13299                           indf2	equ	0xFDF
 13300                           postinc2	equ	0xFDE
 13301                           postdec2	equ	0xFDD
 13302                           plusw2	equ	0xFDB
 13303                           fsr2h	equ	0xFDA
 13304                           fsr2l	equ	0xFD9
 13305                           status	equ	0xFD8
 13306                           
 13307 ;; *************** function ___ftmul *****************
 13308 ;; Defined at:
 13309 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftmul.c"
 13310 ;; Parameters:    Size  Location     Type
 13311 ;;  f1              3   32[BANK0 ] float 
 13312 ;;  f2              3   35[BANK0 ] float 
 13313 ;; Auto vars:     Size  Location     Type
 13314 ;;  f3_as_produc    3   42[BANK0 ] unsigned um
 13315 ;;  sign            1   46[BANK0 ] unsigned char 
 13316 ;;  cntr            1   45[BANK0 ] unsigned char 
 13317 ;;  exp             1   41[BANK0 ] unsigned char 
 13318 ;; Return value:  Size  Location     Type
 13319 ;;                  3   32[BANK0 ] float 
 13320 ;; Registers used:
 13321 ;;		wreg, status,2, status,0, cstack
 13322 ;; Tracked objects:
 13323 ;;		On entry : 0/0
 13324 ;;		On exit  : 0/0
 13325 ;;		Unchanged: 0/0
 13326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13327 ;;      Params:         0       6       0       0       0       0       0       0       0
 13328 ;;      Locals:         0       6       0       0       0       0       0       0       0
 13329 ;;      Temps:          0       3       0       0       0       0       0       0       0
 13330 ;;      Totals:         0      15       0       0       0       0       0       0       0
 13331 ;;Total ram usage:       15 bytes
 13332 ;; Hardware stack levels used:    1
 13333 ;; Hardware stack levels required when called:   11
 13334 ;; This function calls:
 13335 ;;		___ftpack
 13336 ;; This function is called by:
 13337 ;;		_main
 13338 ;;		_le_AD
 13339 ;;		_fround
 13340 ;;		_scale
 13341 ;;		_sprintf
 13342 ;; This function uses a non-reentrant model
 13343 ;;
 13344                           
 13345                           	psect	text37
 13346  003A42                     __ptext37:
 13347                           	opt stack 0
 13348  003A42                     ___ftmul:
 13349                           	opt stack 17
 13350                           
 13351                           ; BSR set to: 0
 13352                           ;incstack = 0
 13353  003A42  C082  F086         	movff	___ftmul@f1+2,??___ftmul
 13354  003A46  0100               	movlb	0	; () banked
 13355  003A48  6B87               	clrf	(??___ftmul+1)& (0+255),b
 13356  003A4A  6B88               	clrf	(??___ftmul+2)& (0+255),b
 13357  003A4C  3581               	rlcf	(___ftmul@f1+1)& (0+255),w,b
 13358  003A4E  3786               	rlcf	??___ftmul& (0+255),f,b
 13359  003A50  E301               	bnc	u6851
 13360  003A52  8187               	bsf	(??___ftmul+1)& (0+255),0,b
 13361  003A54                     u6851:
 13362  003A54  5186               	movf	??___ftmul& (0+255),w,b
 13363  003A56  6F89               	movwf	___ftmul@exp& (0+255),b
 13364  003A58  5189               	movf	___ftmul@exp& (0+255),w,b
 13365  003A5A  A4D8               	btfss	status,2,c
 13366  003A5C  D007               	goto	l3113
 13367                           
 13368                           ; BSR set to: 0
 13369  003A5E  0E00               	movlw	0
 13370  003A60  6F80               	movwf	?___ftmul& (0+255),b
 13371  003A62  0E00               	movlw	0
 13372  003A64  6F81               	movwf	(?___ftmul+1)& (0+255),b
 13373  003A66  0E00               	movlw	0
 13374  003A68  6F82               	movwf	(?___ftmul+2)& (0+255),b
 13375                           
 13376                           ; BSR set to: 0
 13377  003A6A  0012               	return	
 13378  003A6C                     l3113:
 13379                           
 13380                           ; BSR set to: 0
 13381                           
 13382                           ; BSR set to: 0
 13383  003A6C  C085  F086         	movff	___ftmul@f2+2,??___ftmul
 13384  003A70  6B87               	clrf	(??___ftmul+1)& (0+255),b
 13385  003A72  6B88               	clrf	(??___ftmul+2)& (0+255),b
 13386  003A74  3584               	rlcf	(___ftmul@f2+1)& (0+255),w,b
 13387  003A76  3786               	rlcf	??___ftmul& (0+255),f,b
 13388  003A78  E301               	bnc	u6871
 13389  003A7A  8187               	bsf	(??___ftmul+1)& (0+255),0,b
 13390  003A7C                     u6871:
 13391  003A7C  5186               	movf	??___ftmul& (0+255),w,b
 13392  003A7E  6F8E               	movwf	___ftmul@sign& (0+255),b
 13393  003A80  518E               	movf	___ftmul@sign& (0+255),w,b
 13394  003A82  A4D8               	btfss	status,2,c
 13395  003A84  D007               	goto	l3115
 13396                           
 13397                           ; BSR set to: 0
 13398  003A86  0E00               	movlw	0
 13399  003A88  6F80               	movwf	?___ftmul& (0+255),b
 13400  003A8A  0E00               	movlw	0
 13401  003A8C  6F81               	movwf	(?___ftmul+1)& (0+255),b
 13402  003A8E  0E00               	movlw	0
 13403  003A90  6F82               	movwf	(?___ftmul+2)& (0+255),b
 13404                           
 13405                           ; BSR set to: 0
 13406  003A92  0012               	return	
 13407  003A94                     l3115:
 13408                           
 13409                           ; BSR set to: 0
 13410                           
 13411                           ; BSR set to: 0
 13412  003A94  518E               	movf	___ftmul@sign& (0+255),w,b
 13413  003A96  0F7B               	addlw	123
 13414  003A98  2789               	addwf	___ftmul@exp& (0+255),f,b
 13415                           
 13416                           ; BSR set to: 0
 13417  003A9A  C082  F08E         	movff	___ftmul@f1+2,___ftmul@sign
 13418  003A9E  5185               	movf	(___ftmul@f2+2)& (0+255),w,b
 13419  003AA0  1B8E               	xorwf	___ftmul@sign& (0+255),f,b
 13420  003AA2  0E80               	movlw	128
 13421  003AA4  178E               	andwf	___ftmul@sign& (0+255),f,b
 13422                           
 13423                           ; BSR set to: 0
 13424  003AA6  8F81               	bsf	(___ftmul@f1+1)& (0+255),7,b
 13425                           
 13426                           ; BSR set to: 0
 13427  003AA8  8F84               	bsf	(___ftmul@f2+1)& (0+255),7,b
 13428                           
 13429                           ; BSR set to: 0
 13430  003AAA  0EFF               	movlw	255
 13431  003AAC  1783               	andwf	___ftmul@f2& (0+255),f,b
 13432  003AAE  0EFF               	movlw	255
 13433  003AB0  1784               	andwf	(___ftmul@f2+1)& (0+255),f,b
 13434  003AB2  0E00               	movlw	0
 13435  003AB4  1785               	andwf	(___ftmul@f2+2)& (0+255),f,b
 13436                           
 13437                           ; BSR set to: 0
 13438  003AB6  0E00               	movlw	0
 13439  003AB8  6F8A               	movwf	___ftmul@f3_as_product& (0+255),b
 13440  003ABA  0E00               	movlw	0
 13441  003ABC  6F8B               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
 13442  003ABE  0E00               	movlw	0
 13443  003AC0  6F8C               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
 13444                           
 13445                           ; BSR set to: 0
 13446  003AC2  0E07               	movlw	7
 13447  003AC4  6F8D               	movwf	___ftmul@cntr& (0+255),b
 13448  003AC6                     
 13449                           ; BSR set to: 0
 13450                           
 13451                           ; BSR set to: 0
 13452  003AC6  A180               	btfss	___ftmul@f1& (0+255),0,b
 13453  003AC8  D006               	goto	l3117
 13454                           
 13455                           ; BSR set to: 0
 13456  003ACA  5183               	movf	___ftmul@f2& (0+255),w,b
 13457  003ACC  278A               	addwf	___ftmul@f3_as_product& (0+255),f,b
 13458  003ACE  5184               	movf	(___ftmul@f2+1)& (0+255),w,b
 13459  003AD0  238B               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 13460  003AD2  5185               	movf	(___ftmul@f2+2)& (0+255),w,b
 13461  003AD4  238C               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 13462  003AD6                     l3117:
 13463                           
 13464                           ; BSR set to: 0
 13465                           
 13466                           ; BSR set to: 0
 13467  003AD6  90D8               	bcf	status,0,c
 13468  003AD8  3382               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 13469  003ADA  3381               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 13470  003ADC  3380               	rrcf	___ftmul@f1& (0+255),f,b
 13471  003ADE  90D8               	bcf	status,0,c
 13472  003AE0  3783               	rlcf	___ftmul@f2& (0+255),f,b
 13473  003AE2  3784               	rlcf	(___ftmul@f2+1)& (0+255),f,b
 13474  003AE4  3785               	rlcf	(___ftmul@f2+2)& (0+255),f,b
 13475                           
 13476                           ; BSR set to: 0
 13477  003AE6  2F8D               	decfsz	___ftmul@cntr& (0+255),f,b
 13478  003AE8  D7EE               	goto	l3116
 13479                           
 13480                           ; BSR set to: 0
 13481                           
 13482                           ; BSR set to: 0
 13483  003AEA  0E09               	movlw	9
 13484  003AEC  6F8D               	movwf	___ftmul@cntr& (0+255),b
 13485  003AEE                     
 13486                           ; BSR set to: 0
 13487                           
 13488                           ; BSR set to: 0
 13489  003AEE  A180               	btfss	___ftmul@f1& (0+255),0,b
 13490  003AF0  D006               	goto	l3120
 13491                           
 13492                           ; BSR set to: 0
 13493  003AF2  5183               	movf	___ftmul@f2& (0+255),w,b
 13494  003AF4  278A               	addwf	___ftmul@f3_as_product& (0+255),f,b
 13495  003AF6  5184               	movf	(___ftmul@f2+1)& (0+255),w,b
 13496  003AF8  238B               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 13497  003AFA  5185               	movf	(___ftmul@f2+2)& (0+255),w,b
 13498  003AFC  238C               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 13499  003AFE                     l3120:
 13500                           
 13501                           ; BSR set to: 0
 13502                           
 13503                           ; BSR set to: 0
 13504  003AFE  90D8               	bcf	status,0,c
 13505  003B00  3382               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 13506  003B02  3381               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 13507  003B04  3380               	rrcf	___ftmul@f1& (0+255),f,b
 13508  003B06  90D8               	bcf	status,0,c
 13509  003B08  338C               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
 13510  003B0A  338B               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
 13511  003B0C  338A               	rrcf	___ftmul@f3_as_product& (0+255),f,b
 13512                           
 13513                           ; BSR set to: 0
 13514  003B0E  2F8D               	decfsz	___ftmul@cntr& (0+255),f,b
 13515  003B10  D7EE               	goto	l3119
 13516                           
 13517                           ; BSR set to: 0
 13518                           
 13519                           ; BSR set to: 0
 13520  003B12  C08A  F060         	movff	___ftmul@f3_as_product,___ftpack@arg
 13521  003B16  C08B  F061         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
 13522  003B1A  C08C  F062         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
 13523  003B1E  C089  F063         	movff	___ftmul@exp,___ftpack@exp
 13524  003B22  C08E  F064         	movff	___ftmul@sign,___ftpack@sign
 13525  003B26  ECDD  F020         	call	___ftpack	;wreg free
 13526  003B2A  C060  F080         	movff	?___ftpack,?___ftmul
 13527  003B2E  C061  F081         	movff	?___ftpack+1,?___ftmul+1
 13528  003B32  C062  F082         	movff	?___ftpack+2,?___ftmul+2
 13529  003B36  0012               	return	
 13530  003B38                     __end_of___ftmul:
 13531                           	opt stack 0
 13532                           tblptru	equ	0xFF8
 13533                           tblptrh	equ	0xFF7
 13534                           tblptrl	equ	0xFF6
 13535                           tablat	equ	0xFF5
 13536                           prodh	equ	0xFF4
 13537                           prodl	equ	0xFF3
 13538                           intcon	equ	0xFF2
 13539                           postinc0	equ	0xFEE
 13540                           wreg	equ	0xFE8
 13541                           indf1	equ	0xFE7
 13542                           postdec1	equ	0xFE5
 13543                           fsr1h	equ	0xFE2
 13544                           fsr1l	equ	0xFE1
 13545                           indf2	equ	0xFDF
 13546                           postinc2	equ	0xFDE
 13547                           postdec2	equ	0xFDD
 13548                           plusw2	equ	0xFDB
 13549                           fsr2h	equ	0xFDA
 13550                           fsr2l	equ	0xFD9
 13551                           status	equ	0xFD8
 13552                           
 13553 ;; *************** function ___awmod *****************
 13554 ;; Defined at:
 13555 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\awmod.c"
 13556 ;; Parameters:    Size  Location     Type
 13557 ;;  dividend        2    0[BANK0 ] int 
 13558 ;;  divisor         2    2[BANK0 ] int 
 13559 ;; Auto vars:     Size  Location     Type
 13560 ;;  sign            1    5[BANK0 ] unsigned char 
 13561 ;;  counter         1    4[BANK0 ] unsigned char 
 13562 ;; Return value:  Size  Location     Type
 13563 ;;                  2    0[BANK0 ] int 
 13564 ;; Registers used:
 13565 ;;		wreg, status,2, status,0
 13566 ;; Tracked objects:
 13567 ;;		On entry : 0/0
 13568 ;;		On exit  : 0/0
 13569 ;;		Unchanged: 0/0
 13570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13571 ;;      Params:         0       4       0       0       0       0       0       0       0
 13572 ;;      Locals:         0       2       0       0       0       0       0       0       0
 13573 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13574 ;;      Totals:         0       6       0       0       0       0       0       0       0
 13575 ;;Total ram usage:        6 bytes
 13576 ;; Hardware stack levels used:    1
 13577 ;; Hardware stack levels required when called:   10
 13578 ;; This function calls:
 13579 ;;		Nothing
 13580 ;; This function is called by:
 13581 ;;		_fround
 13582 ;;		_scale
 13583 ;; This function uses a non-reentrant model
 13584 ;;
 13585                           
 13586                           	psect	text38
 13587  004C8A                     __ptext38:
 13588                           	opt stack 0
 13589  004C8A                     ___awmod:
 13590                           	opt stack 18
 13591                           
 13592                           ;incstack = 0
 13593  004C8A  0E00               	movlw	0
 13594  004C8C  0100               	movlb	0	; () banked
 13595  004C8E  6F65               	movwf	___awmod@sign& (0+255),b
 13596                           
 13597                           ; BSR set to: 0
 13598  004C90  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
 13599  004C92  D006               	goto	l2966
 13600                           
 13601                           ; BSR set to: 0
 13602  004C94  6D60               	negf	___awmod@dividend& (0+255),b
 13603  004C96  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 13604  004C98  B0D8               	btfsc	status,0,c
 13605  004C9A  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 13606                           
 13607                           ; BSR set to: 0
 13608  004C9C  0E01               	movlw	1
 13609  004C9E  6F65               	movwf	___awmod@sign& (0+255),b
 13610  004CA0                     l2966:
 13611                           
 13612                           ; BSR set to: 0
 13613                           
 13614                           ; BSR set to: 0
 13615  004CA0  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 13616  004CA2  D004               	goto	l2967
 13617                           
 13618                           ; BSR set to: 0
 13619  004CA4  6D62               	negf	___awmod@divisor& (0+255),b
 13620  004CA6  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 13621  004CA8  B0D8               	btfsc	status,0,c
 13622  004CAA  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 13623  004CAC                     l2967:
 13624                           
 13625                           ; BSR set to: 0
 13626                           
 13627                           ; BSR set to: 0
 13628  004CAC  5162               	movf	___awmod@divisor& (0+255),w,b
 13629  004CAE  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 13630  004CB0  B4D8               	btfsc	status,2,c
 13631  004CB2  D018               	goto	l2974
 13632                           
 13633                           ; BSR set to: 0
 13634  004CB4  0E01               	movlw	1
 13635  004CB6  6F64               	movwf	___awmod@counter& (0+255),b
 13636  004CB8  D004               	goto	l2969
 13637  004CBA                     
 13638                           ; BSR set to: 0
 13639                           
 13640                           ; BSR set to: 0
 13641  004CBA  90D8               	bcf	status,0,c
 13642  004CBC  3762               	rlcf	___awmod@divisor& (0+255),f,b
 13643  004CBE  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 13644  004CC0  2B64               	incf	___awmod@counter& (0+255),f,b
 13645  004CC2                     l2969:
 13646                           
 13647                           ; BSR set to: 0
 13648                           
 13649                           ; BSR set to: 0
 13650  004CC2  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 13651  004CC4  D7FA               	goto	l2970
 13652  004CC6                     u7000:
 13653                           
 13654                           ; BSR set to: 0
 13655                           
 13656                           ; BSR set to: 0
 13657                           
 13658                           ; BSR set to: 0
 13659  004CC6  5162               	movf	___awmod@divisor& (0+255),w,b
 13660  004CC8  5D60               	subwf	___awmod@dividend& (0+255),w,b
 13661  004CCA  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 13662  004CCC  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 13663  004CCE  A0D8               	btfss	status,0,c
 13664  004CD0  D004               	goto	l2973
 13665                           
 13666                           ; BSR set to: 0
 13667  004CD2  5162               	movf	___awmod@divisor& (0+255),w,b
 13668  004CD4  5F60               	subwf	___awmod@dividend& (0+255),f,b
 13669  004CD6  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 13670  004CD8  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 13671  004CDA                     l2973:
 13672                           
 13673                           ; BSR set to: 0
 13674                           
 13675                           ; BSR set to: 0
 13676  004CDA  90D8               	bcf	status,0,c
 13677  004CDC  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 13678  004CDE  3362               	rrcf	___awmod@divisor& (0+255),f,b
 13679                           
 13680                           ; BSR set to: 0
 13681  004CE0  2F64               	decfsz	___awmod@counter& (0+255),f,b
 13682  004CE2  D7F1               	goto	u7000
 13683  004CE4                     l2974:
 13684                           
 13685                           ; BSR set to: 0
 13686                           
 13687                           ; BSR set to: 0
 13688                           
 13689                           ; BSR set to: 0
 13690  004CE4  5165               	movf	___awmod@sign& (0+255),w,b
 13691  004CE6  B4D8               	btfsc	status,2,c
 13692  004CE8  D004               	goto	l2975
 13693                           
 13694                           ; BSR set to: 0
 13695  004CEA  6D60               	negf	___awmod@dividend& (0+255),b
 13696  004CEC  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 13697  004CEE  B0D8               	btfsc	status,0,c
 13698  004CF0  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 13699  004CF2                     l2975:
 13700                           
 13701                           ; BSR set to: 0
 13702                           
 13703                           ; BSR set to: 0
 13704  004CF2  C060  F060         	movff	___awmod@dividend,?___awmod
 13705  004CF6  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 13706  004CFA  0012               	return	
 13707  004CFC                     __end_of___awmod:
 13708                           	opt stack 0
 13709                           tblptru	equ	0xFF8
 13710                           tblptrh	equ	0xFF7
 13711                           tblptrl	equ	0xFF6
 13712                           tablat	equ	0xFF5
 13713                           prodh	equ	0xFF4
 13714                           prodl	equ	0xFF3
 13715                           intcon	equ	0xFF2
 13716                           postinc0	equ	0xFEE
 13717                           wreg	equ	0xFE8
 13718                           indf1	equ	0xFE7
 13719                           postdec1	equ	0xFE5
 13720                           fsr1h	equ	0xFE2
 13721                           fsr1l	equ	0xFE1
 13722                           indf2	equ	0xFDF
 13723                           postinc2	equ	0xFDE
 13724                           postdec2	equ	0xFDD
 13725                           plusw2	equ	0xFDB
 13726                           fsr2h	equ	0xFDA
 13727                           fsr2l	equ	0xFD9
 13728                           status	equ	0xFD8
 13729                           
 13730 ;; *************** function ___awdiv *****************
 13731 ;; Defined at:
 13732 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\awdiv.c"
 13733 ;; Parameters:    Size  Location     Type
 13734 ;;  dividend        2    6[BANK0 ] int 
 13735 ;;  divisor         2    8[BANK0 ] int 
 13736 ;; Auto vars:     Size  Location     Type
 13737 ;;  quotient        2   12[BANK0 ] int 
 13738 ;;  sign            1   11[BANK0 ] unsigned char 
 13739 ;;  counter         1   10[BANK0 ] unsigned char 
 13740 ;; Return value:  Size  Location     Type
 13741 ;;                  2    6[BANK0 ] int 
 13742 ;; Registers used:
 13743 ;;		wreg, status,2, status,0
 13744 ;; Tracked objects:
 13745 ;;		On entry : 0/0
 13746 ;;		On exit  : 0/0
 13747 ;;		Unchanged: 0/0
 13748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13749 ;;      Params:         0       4       0       0       0       0       0       0       0
 13750 ;;      Locals:         0       4       0       0       0       0       0       0       0
 13751 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13752 ;;      Totals:         0       8       0       0       0       0       0       0       0
 13753 ;;Total ram usage:        8 bytes
 13754 ;; Hardware stack levels used:    1
 13755 ;; Hardware stack levels required when called:   10
 13756 ;; This function calls:
 13757 ;;		Nothing
 13758 ;; This function is called by:
 13759 ;;		_fround
 13760 ;;		_scale
 13761 ;;		_sprintf
 13762 ;; This function uses a non-reentrant model
 13763 ;;
 13764                           
 13765                           	psect	text39
 13766  00491A                     __ptext39:
 13767                           	opt stack 0
 13768  00491A                     ___awdiv:
 13769                           	opt stack 18
 13770                           
 13771                           ; BSR set to: 0
 13772                           ;incstack = 0
 13773  00491A  0E00               	movlw	0
 13774  00491C  0100               	movlb	0	; () banked
 13775  00491E  6F6B               	movwf	___awdiv@sign& (0+255),b
 13776                           
 13777                           ; BSR set to: 0
 13778  004920  AF69               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 13779  004922  D006               	goto	l2953
 13780                           
 13781                           ; BSR set to: 0
 13782  004924  6D68               	negf	___awdiv@divisor& (0+255),b
 13783  004926  1F69               	comf	(___awdiv@divisor+1)& (0+255),f,b
 13784  004928  B0D8               	btfsc	status,0,c
 13785  00492A  2B69               	incf	(___awdiv@divisor+1)& (0+255),f,b
 13786                           
 13787                           ; BSR set to: 0
 13788  00492C  0E01               	movlw	1
 13789  00492E  6F6B               	movwf	___awdiv@sign& (0+255),b
 13790  004930                     l2953:
 13791                           
 13792                           ; BSR set to: 0
 13793                           
 13794                           ; BSR set to: 0
 13795  004930  AF67               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 13796  004932  D006               	goto	l2954
 13797                           
 13798                           ; BSR set to: 0
 13799  004934  6D66               	negf	___awdiv@dividend& (0+255),b
 13800  004936  1F67               	comf	(___awdiv@dividend+1)& (0+255),f,b
 13801  004938  B0D8               	btfsc	status,0,c
 13802  00493A  2B67               	incf	(___awdiv@dividend+1)& (0+255),f,b
 13803                           
 13804                           ; BSR set to: 0
 13805  00493C  0E01               	movlw	1
 13806  00493E  1B6B               	xorwf	___awdiv@sign& (0+255),f,b
 13807  004940                     l2954:
 13808                           
 13809                           ; BSR set to: 0
 13810                           
 13811                           ; BSR set to: 0
 13812  004940  0E00               	movlw	0
 13813  004942  6F6D               	movwf	(___awdiv@quotient+1)& (0+255),b
 13814  004944  0E00               	movlw	0
 13815  004946  6F6C               	movwf	___awdiv@quotient& (0+255),b
 13816                           
 13817                           ; BSR set to: 0
 13818  004948  5168               	movf	___awdiv@divisor& (0+255),w,b
 13819  00494A  1169               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 13820  00494C  B4D8               	btfsc	status,2,c
 13821  00494E  D01C               	goto	l2961
 13822                           
 13823                           ; BSR set to: 0
 13824  004950  0E01               	movlw	1
 13825  004952  6F6A               	movwf	___awdiv@counter& (0+255),b
 13826  004954  D004               	goto	l2956
 13827  004956                     
 13828                           ; BSR set to: 0
 13829                           
 13830                           ; BSR set to: 0
 13831  004956  90D8               	bcf	status,0,c
 13832  004958  3768               	rlcf	___awdiv@divisor& (0+255),f,b
 13833  00495A  3769               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 13834  00495C  2B6A               	incf	___awdiv@counter& (0+255),f,b
 13835  00495E                     l2956:
 13836                           
 13837                           ; BSR set to: 0
 13838                           
 13839                           ; BSR set to: 0
 13840  00495E  AF69               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 13841  004960  D7FA               	goto	l2957
 13842  004962                     u6940:
 13843                           
 13844                           ; BSR set to: 0
 13845                           
 13846                           ; BSR set to: 0
 13847                           
 13848                           ; BSR set to: 0
 13849  004962  90D8               	bcf	status,0,c
 13850  004964  376C               	rlcf	___awdiv@quotient& (0+255),f,b
 13851  004966  376D               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 13852                           
 13853                           ; BSR set to: 0
 13854  004968  5168               	movf	___awdiv@divisor& (0+255),w,b
 13855  00496A  5D66               	subwf	___awdiv@dividend& (0+255),w,b
 13856  00496C  5169               	movf	(___awdiv@divisor+1)& (0+255),w,b
 13857  00496E  5967               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 13858  004970  A0D8               	btfss	status,0,c
 13859  004972  D005               	goto	l2960
 13860                           
 13861                           ; BSR set to: 0
 13862  004974  5168               	movf	___awdiv@divisor& (0+255),w,b
 13863  004976  5F66               	subwf	___awdiv@dividend& (0+255),f,b
 13864  004978  5169               	movf	(___awdiv@divisor+1)& (0+255),w,b
 13865  00497A  5B67               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 13866                           
 13867                           ; BSR set to: 0
 13868  00497C  816C               	bsf	___awdiv@quotient& (0+255),0,b
 13869  00497E                     l2960:
 13870                           
 13871                           ; BSR set to: 0
 13872                           
 13873                           ; BSR set to: 0
 13874  00497E  90D8               	bcf	status,0,c
 13875  004980  3369               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 13876  004982  3368               	rrcf	___awdiv@divisor& (0+255),f,b
 13877                           
 13878                           ; BSR set to: 0
 13879  004984  2F6A               	decfsz	___awdiv@counter& (0+255),f,b
 13880  004986  D7ED               	goto	u6940
 13881  004988                     l2961:
 13882                           
 13883                           ; BSR set to: 0
 13884                           
 13885                           ; BSR set to: 0
 13886                           
 13887                           ; BSR set to: 0
 13888  004988  516B               	movf	___awdiv@sign& (0+255),w,b
 13889  00498A  B4D8               	btfsc	status,2,c
 13890  00498C  D004               	goto	l2962
 13891                           
 13892                           ; BSR set to: 0
 13893  00498E  6D6C               	negf	___awdiv@quotient& (0+255),b
 13894  004990  1F6D               	comf	(___awdiv@quotient+1)& (0+255),f,b
 13895  004992  B0D8               	btfsc	status,0,c
 13896  004994  2B6D               	incf	(___awdiv@quotient+1)& (0+255),f,b
 13897  004996                     l2962:
 13898                           
 13899                           ; BSR set to: 0
 13900                           
 13901                           ; BSR set to: 0
 13902  004996  C06C  F066         	movff	___awdiv@quotient,?___awdiv
 13903  00499A  C06D  F067         	movff	___awdiv@quotient+1,?___awdiv+1
 13904  00499E  0012               	return	
 13905  0049A0                     __end_of___awdiv:
 13906                           	opt stack 0
 13907                           tblptru	equ	0xFF8
 13908                           tblptrh	equ	0xFF7
 13909                           tblptrl	equ	0xFF6
 13910                           tablat	equ	0xFF5
 13911                           prodh	equ	0xFF4
 13912                           prodl	equ	0xFF3
 13913                           intcon	equ	0xFF2
 13914                           postinc0	equ	0xFEE
 13915                           wreg	equ	0xFE8
 13916                           indf1	equ	0xFE7
 13917                           postdec1	equ	0xFE5
 13918                           fsr1h	equ	0xFE2
 13919                           fsr1l	equ	0xFE1
 13920                           indf2	equ	0xFDF
 13921                           postinc2	equ	0xFDE
 13922                           postdec2	equ	0xFDD
 13923                           plusw2	equ	0xFDB
 13924                           fsr2h	equ	0xFDA
 13925                           fsr2l	equ	0xFD9
 13926                           status	equ	0xFD8
 13927                           
 13928 ;; *************** function __tdiv_to_l_ *****************
 13929 ;; Defined at:
 13930 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftdivl.c"
 13931 ;; Parameters:    Size  Location     Type
 13932 ;;  f1              3    0[BANK0 ] float 
 13933 ;;  f2              3    3[BANK0 ] float 
 13934 ;; Auto vars:     Size  Location     Type
 13935 ;;  quot            4    9[BANK0 ] unsigned long 
 13936 ;;  exp1            1   14[BANK0 ] unsigned char 
 13937 ;;  cntr            1   13[BANK0 ] unsigned char 
 13938 ;; Return value:  Size  Location     Type
 13939 ;;                  4    0[BANK0 ] unsigned long 
 13940 ;; Registers used:
 13941 ;;		wreg, status,2, status,0
 13942 ;; Tracked objects:
 13943 ;;		On entry : 0/0
 13944 ;;		On exit  : 0/0
 13945 ;;		Unchanged: 0/0
 13946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13947 ;;      Params:         0       6       0       0       0       0       0       0       0
 13948 ;;      Locals:         0       6       0       0       0       0       0       0       0
 13949 ;;      Temps:          0       3       0       0       0       0       0       0       0
 13950 ;;      Totals:         0      15       0       0       0       0       0       0       0
 13951 ;;Total ram usage:       15 bytes
 13952 ;; Hardware stack levels used:    1
 13953 ;; Hardware stack levels required when called:   10
 13954 ;; This function calls:
 13955 ;;		Nothing
 13956 ;; This function is called by:
 13957 ;;		_sprintf
 13958 ;; This function uses a non-reentrant model
 13959 ;;
 13960                           
 13961                           	psect	text40
 13962  002D32                     __ptext40:
 13963                           	opt stack 0
 13964  002D32                     __tdiv_to_l_:
 13965                           	opt stack 19
 13966                           
 13967                           ; BSR set to: 0
 13968                           ;incstack = 0
 13969  002D32  C062  F066         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 13970  002D36  0100               	movlb	0	; () banked
 13971  002D38  6B67               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 13972  002D3A  6B68               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 13973  002D3C  3561               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 13974  002D3E  3766               	rlcf	??__tdiv_to_l_& (0+255),f,b
 13975  002D40  E301               	bnc	u7421
 13976  002D42  8167               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 13977  002D44                     u7421:
 13978  002D44  5166               	movf	??__tdiv_to_l_& (0+255),w,b
 13979  002D46  6F6E               	movwf	__tdiv_to_l_@exp1& (0+255),b
 13980  002D48  516E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 13981  002D4A  A4D8               	btfss	status,2,c
 13982  002D4C  D009               	goto	l3089
 13983                           
 13984                           ; BSR set to: 0
 13985  002D4E  0E00               	movlw	0
 13986  002D50  6F60               	movwf	?__tdiv_to_l_& (0+255),b
 13987  002D52  0E00               	movlw	0
 13988  002D54  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 13989  002D56  0E00               	movlw	0
 13990  002D58  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 13991  002D5A  0E00               	movlw	0
 13992  002D5C  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 13993                           
 13994                           ; BSR set to: 0
 13995  002D5E  0012               	return	
 13996  002D60                     l3089:
 13997                           
 13998                           ; BSR set to: 0
 13999                           
 14000                           ; BSR set to: 0
 14001  002D60  C065  F066         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 14002  002D64  6B67               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 14003  002D66  6B68               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 14004  002D68  3564               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 14005  002D6A  3766               	rlcf	??__tdiv_to_l_& (0+255),f,b
 14006  002D6C  E301               	bnc	u7441
 14007  002D6E  8167               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 14008  002D70                     u7441:
 14009  002D70  5166               	movf	??__tdiv_to_l_& (0+255),w,b
 14010  002D72  6F6D               	movwf	__tdiv_to_l_@cntr& (0+255),b
 14011  002D74  516D               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 14012  002D76  A4D8               	btfss	status,2,c
 14013  002D78  D009               	goto	l3091
 14014                           
 14015                           ; BSR set to: 0
 14016  002D7A  0E00               	movlw	0
 14017  002D7C  6F60               	movwf	?__tdiv_to_l_& (0+255),b
 14018  002D7E  0E00               	movlw	0
 14019  002D80  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 14020  002D82  0E00               	movlw	0
 14021  002D84  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 14022  002D86  0E00               	movlw	0
 14023  002D88  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 14024                           
 14025                           ; BSR set to: 0
 14026  002D8A  0012               	return	
 14027  002D8C                     l3091:
 14028                           
 14029                           ; BSR set to: 0
 14030                           
 14031                           ; BSR set to: 0
 14032  002D8C  8F61               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 14033                           
 14034                           ; BSR set to: 0
 14035  002D8E  0EFF               	movlw	255
 14036  002D90  1760               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 14037  002D92  0EFF               	movlw	255
 14038  002D94  1761               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 14039  002D96  0E00               	movlw	0
 14040  002D98  1762               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 14041  002D9A  8F64               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 14042                           
 14043                           ; BSR set to: 0
 14044  002D9C  0EFF               	movlw	255
 14045  002D9E  1763               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 14046  002DA0  0EFF               	movlw	255
 14047  002DA2  1764               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 14048  002DA4  0E00               	movlw	0
 14049  002DA6  1765               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 14050                           
 14051                           ; BSR set to: 0
 14052  002DA8  0E00               	movlw	0
 14053  002DAA  6F69               	movwf	__tdiv_to_l_@quot& (0+255),b
 14054  002DAC  0E00               	movlw	0
 14055  002DAE  6F6A               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 14056  002DB0  0E00               	movlw	0
 14057  002DB2  6F6B               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 14058  002DB4  0E00               	movlw	0
 14059  002DB6  6F6C               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 14060                           
 14061                           ; BSR set to: 0
 14062  002DB8  0E7F               	movlw	127
 14063  002DBA  5F6E               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 14064                           
 14065                           ; BSR set to: 0
 14066  002DBC  516D               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 14067  002DBE  0F98               	addlw	152
 14068  002DC0  5F6E               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 14069                           
 14070                           ; BSR set to: 0
 14071  002DC2  0E18               	movlw	24
 14072  002DC4  6F6D               	movwf	__tdiv_to_l_@cntr& (0+255),b
 14073  002DC6                     l3092:
 14074                           
 14075                           ; BSR set to: 0
 14076  002DC6  90D8               	bcf	status,0,c
 14077  002DC8  3769               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 14078  002DCA  376A               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 14079  002DCC  376B               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 14080  002DCE  376C               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 14081                           
 14082                           ; BSR set to: 0
 14083  002DD0  5163               	movf	__tdiv_to_l_@f2& (0+255),w,b
 14084  002DD2  5D60               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 14085  002DD4  5164               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 14086  002DD6  5961               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 14087  002DD8  5165               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 14088  002DDA  5962               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 14089  002DDC  A0D8               	btfss	status,0,c
 14090  002DDE  D007               	goto	l3093
 14091                           
 14092                           ; BSR set to: 0
 14093  002DE0  5163               	movf	__tdiv_to_l_@f2& (0+255),w,b
 14094  002DE2  5F60               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 14095  002DE4  5164               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 14096  002DE6  5B61               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 14097  002DE8  5165               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 14098  002DEA  5B62               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 14099                           
 14100                           ; BSR set to: 0
 14101  002DEC  8169               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 14102  002DEE                     l3093:
 14103                           
 14104                           ; BSR set to: 0
 14105  002DEE  90D8               	bcf	status,0,c
 14106  002DF0  3760               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 14107  002DF2  3761               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 14108  002DF4  3762               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 14109                           
 14110                           ; BSR set to: 0
 14111  002DF6  2F6D               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 14112  002DF8  D7E6               	goto	l3092
 14113                           
 14114                           ; BSR set to: 0
 14115                           
 14116                           ; BSR set to: 0
 14117  002DFA  AF6E               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 14118  002DFC  D016               	goto	l3095
 14119                           
 14120                           ; BSR set to: 0
 14121  002DFE  516E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 14122  002E00  0A80               	xorlw	128
 14123  002E02  0F97               	addlw	151
 14124  002E04  B0D8               	btfsc	status,0,c
 14125  002E06  D009               	goto	l3096
 14126                           
 14127                           ; BSR set to: 0
 14128  002E08  0E00               	movlw	0
 14129  002E0A  6F60               	movwf	?__tdiv_to_l_& (0+255),b
 14130  002E0C  0E00               	movlw	0
 14131  002E0E  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 14132  002E10  0E00               	movlw	0
 14133  002E12  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 14134  002E14  0E00               	movlw	0
 14135  002E16  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 14136                           
 14137                           ; BSR set to: 0
 14138  002E18  0012               	return	
 14139  002E1A                     l3096:
 14140                           
 14141                           ; BSR set to: 0
 14142                           
 14143                           ; BSR set to: 0
 14144                           
 14145                           ; BSR set to: 0
 14146  002E1A  90D8               	bcf	status,0,c
 14147  002E1C  336C               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 14148  002E1E  336B               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 14149  002E20  336A               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 14150  002E22  3369               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 14151                           
 14152                           ; BSR set to: 0
 14153  002E24  3F6E               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 14154  002E26  D7F9               	goto	l3096
 14155                           
 14156                           ; BSR set to: 0
 14157  002E28  D015               	goto	u7500
 14158  002E2A                     l3095:
 14159                           
 14160                           ; BSR set to: 0
 14161                           
 14162                           ; BSR set to: 0
 14163  002E2A  0E17               	movlw	23
 14164  002E2C  656E               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 14165  002E2E  D00F               	goto	l3101
 14166                           
 14167                           ; BSR set to: 0
 14168  002E30  0E00               	movlw	0
 14169  002E32  6F60               	movwf	?__tdiv_to_l_& (0+255),b
 14170  002E34  0E00               	movlw	0
 14171  002E36  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 14172  002E38  0E00               	movlw	0
 14173  002E3A  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 14174  002E3C  0E00               	movlw	0
 14175  002E3E  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 14176                           
 14177                           ; BSR set to: 0
 14178  002E40  0012               	return	
 14179  002E42                     
 14180                           ; BSR set to: 0
 14181                           
 14182                           ; BSR set to: 0
 14183  002E42  90D8               	bcf	status,0,c
 14184  002E44  3769               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 14185  002E46  376A               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 14186  002E48  376B               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 14187  002E4A  376C               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 14188  002E4C  076E               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 14189  002E4E                     l3101:
 14190                           
 14191                           ; BSR set to: 0
 14192                           
 14193                           ; BSR set to: 0
 14194  002E4E  516E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 14195  002E50  A4D8               	btfss	status,2,c
 14196  002E52  D7F7               	goto	l3102
 14197  002E54                     u7500:
 14198                           
 14199                           ; BSR set to: 0
 14200                           
 14201                           ; BSR set to: 0
 14202  002E54  C069  F060         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 14203  002E58  C06A  F061         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 14204  002E5C  C06B  F062         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 14205  002E60  C06C  F063         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 14206                           
 14207                           ; BSR set to: 0
 14208  002E64  0012               	return		;funcret
 14209  002E66                     __end_of__tdiv_to_l_:
 14210                           	opt stack 0
 14211                           tblptru	equ	0xFF8
 14212                           tblptrh	equ	0xFF7
 14213                           tblptrl	equ	0xFF6
 14214                           tablat	equ	0xFF5
 14215                           prodh	equ	0xFF4
 14216                           prodl	equ	0xFF3
 14217                           intcon	equ	0xFF2
 14218                           postinc0	equ	0xFEE
 14219                           wreg	equ	0xFE8
 14220                           indf1	equ	0xFE7
 14221                           postdec1	equ	0xFE5
 14222                           fsr1h	equ	0xFE2
 14223                           fsr1l	equ	0xFE1
 14224                           indf2	equ	0xFDF
 14225                           postinc2	equ	0xFDE
 14226                           postdec2	equ	0xFDD
 14227                           plusw2	equ	0xFDB
 14228                           fsr2h	equ	0xFDA
 14229                           fsr2l	equ	0xFD9
 14230                           status	equ	0xFD8
 14231                           
 14232 ;; *************** function __div_to_l_ *****************
 14233 ;; Defined at:
 14234 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\fldivl.c"
 14235 ;; Parameters:    Size  Location     Type
 14236 ;;  f1              3    0[BANK0 ] unsigned long 
 14237 ;;  f2              3    3[BANK0 ] unsigned long 
 14238 ;; Auto vars:     Size  Location     Type
 14239 ;;  quot            4    6[BANK0 ] unsigned long 
 14240 ;;  exp1            1   11[BANK0 ] unsigned char 
 14241 ;;  cntr            1   10[BANK0 ] unsigned char 
 14242 ;; Return value:  Size  Location     Type
 14243 ;;                  4    0[BANK0 ] unsigned long 
 14244 ;; Registers used:
 14245 ;;		wreg, status,2, status,0
 14246 ;; Tracked objects:
 14247 ;;		On entry : 0/0
 14248 ;;		On exit  : 0/0
 14249 ;;		Unchanged: 0/0
 14250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14251 ;;      Params:         0       6       0       0       0       0       0       0       0
 14252 ;;      Locals:         0       6       0       0       0       0       0       0       0
 14253 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14254 ;;      Totals:         0      12       0       0       0       0       0       0       0
 14255 ;;Total ram usage:       12 bytes
 14256 ;; Hardware stack levels used:    1
 14257 ;; Hardware stack levels required when called:   10
 14258 ;; This function calls:
 14259 ;;		Nothing
 14260 ;; This function is called by:
 14261 ;;		_sprintf
 14262 ;; This function uses a non-reentrant model
 14263 ;;
 14264                           
 14265                           	psect	text41
 14266  0031EE                     __ptext41:
 14267                           	opt stack 0
 14268  0031EE                     __div_to_l_:
 14269                           	opt stack 19
 14270                           
 14271                           ; BSR set to: 0
 14272                           ;incstack = 0
 14273  0031EE  0100               	movlb	0	; () banked
 14274  0031F0  3562               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 14275  0031F2  3563               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 14276  0031F4  6F6B               	movwf	__div_to_l_@exp1& (0+255),b
 14277  0031F6  516B               	movf	__div_to_l_@exp1& (0+255),w,b
 14278  0031F8  A4D8               	btfss	status,2,c
 14279  0031FA  D009               	goto	l2985
 14280                           
 14281                           ; BSR set to: 0
 14282  0031FC  0E00               	movlw	0
 14283  0031FE  6F60               	movwf	?__div_to_l_& (0+255),b
 14284  003200  0E00               	movlw	0
 14285  003202  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
 14286  003204  0E00               	movlw	0
 14287  003206  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
 14288  003208  0E00               	movlw	0
 14289  00320A  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
 14290                           
 14291                           ; BSR set to: 0
 14292  00320C  0012               	return	
 14293  00320E                     l2985:
 14294                           
 14295                           ; BSR set to: 0
 14296                           
 14297                           ; BSR set to: 0
 14298  00320E  3565               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 14299  003210  3566               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 14300  003212  6F6A               	movwf	__div_to_l_@cntr& (0+255),b
 14301  003214  516A               	movf	__div_to_l_@cntr& (0+255),w,b
 14302  003216  A4D8               	btfss	status,2,c
 14303  003218  D009               	goto	l2987
 14304                           
 14305                           ; BSR set to: 0
 14306  00321A  0E00               	movlw	0
 14307  00321C  6F60               	movwf	?__div_to_l_& (0+255),b
 14308  00321E  0E00               	movlw	0
 14309  003220  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
 14310  003222  0E00               	movlw	0
 14311  003224  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
 14312  003226  0E00               	movlw	0
 14313  003228  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
 14314                           
 14315                           ; BSR set to: 0
 14316  00322A  0012               	return	
 14317  00322C                     l2987:
 14318                           
 14319                           ; BSR set to: 0
 14320                           
 14321                           ; BSR set to: 0
 14322  00322C  8F62               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 14323                           
 14324                           ; BSR set to: 0
 14325  00322E  0EFF               	movlw	255
 14326  003230  1760               	andwf	__div_to_l_@f1& (0+255),f,b
 14327  003232  0EFF               	movlw	255
 14328  003234  1761               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 14329  003236  0EFF               	movlw	255
 14330  003238  1762               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 14331  00323A  0E00               	movlw	0
 14332  00323C  1763               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 14333                           
 14334                           ; BSR set to: 0
 14335  00323E  8F65               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 14336  003240  0EFF               	movlw	255
 14337  003242  1763               	andwf	__div_to_l_@f2& (0+255),f,b
 14338  003244  0EFF               	movlw	255
 14339  003246  1764               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 14340  003248  0EFF               	movlw	255
 14341  00324A  1765               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 14342  00324C  0E00               	movlw	0
 14343  00324E  1766               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 14344                           
 14345                           ; BSR set to: 0
 14346  003250  0E00               	movlw	0
 14347  003252  6F66               	movwf	__div_to_l_@quot& (0+255),b
 14348  003254  0E00               	movlw	0
 14349  003256  6F67               	movwf	(__div_to_l_@quot+1)& (0+255),b
 14350  003258  0E00               	movlw	0
 14351  00325A  6F68               	movwf	(__div_to_l_@quot+2)& (0+255),b
 14352  00325C  0E00               	movlw	0
 14353  00325E  6F69               	movwf	(__div_to_l_@quot+3)& (0+255),b
 14354                           
 14355                           ; BSR set to: 0
 14356  003260  0E7F               	movlw	127
 14357  003262  5F6B               	subwf	__div_to_l_@exp1& (0+255),f,b
 14358                           
 14359                           ; BSR set to: 0
 14360  003264  516A               	movf	__div_to_l_@cntr& (0+255),w,b
 14361  003266  0FA0               	addlw	160
 14362  003268  5F6B               	subwf	__div_to_l_@exp1& (0+255),f,b
 14363                           
 14364                           ; BSR set to: 0
 14365  00326A  0E20               	movlw	32
 14366  00326C  6F6A               	movwf	__div_to_l_@cntr& (0+255),b
 14367  00326E                     
 14368                           ; BSR set to: 0
 14369                           
 14370                           ; BSR set to: 0
 14371  00326E  90D8               	bcf	status,0,c
 14372  003270  3766               	rlcf	__div_to_l_@quot& (0+255),f,b
 14373  003272  3767               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 14374  003274  3768               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 14375  003276  3769               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 14376                           
 14377                           ; BSR set to: 0
 14378  003278  5163               	movf	__div_to_l_@f2& (0+255),w,b
 14379  00327A  5D60               	subwf	__div_to_l_@f1& (0+255),w,b
 14380  00327C  5164               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 14381  00327E  5961               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 14382  003280  5165               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 14383  003282  5962               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 14384  003284  5166               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 14385  003286  5963               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 14386  003288  A0D8               	btfss	status,0,c
 14387  00328A  D009               	goto	l2989
 14388                           
 14389                           ; BSR set to: 0
 14390  00328C  5163               	movf	__div_to_l_@f2& (0+255),w,b
 14391  00328E  5F60               	subwf	__div_to_l_@f1& (0+255),f,b
 14392  003290  5164               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 14393  003292  5B61               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 14394  003294  5165               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 14395  003296  5B62               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 14396  003298  5166               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 14397  00329A  5B63               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 14398                           
 14399                           ; BSR set to: 0
 14400  00329C  8166               	bsf	__div_to_l_@quot& (0+255),0,b
 14401  00329E                     l2989:
 14402                           
 14403                           ; BSR set to: 0
 14404                           
 14405                           ; BSR set to: 0
 14406  00329E  90D8               	bcf	status,0,c
 14407  0032A0  3760               	rlcf	__div_to_l_@f1& (0+255),f,b
 14408  0032A2  3761               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 14409  0032A4  3762               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 14410  0032A6  3763               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 14411                           
 14412                           ; BSR set to: 0
 14413  0032A8  2F6A               	decfsz	__div_to_l_@cntr& (0+255),f,b
 14414  0032AA  D7E1               	goto	l2988
 14415                           
 14416                           ; BSR set to: 0
 14417                           
 14418                           ; BSR set to: 0
 14419  0032AC  AF6B               	btfss	__div_to_l_@exp1& (0+255),7,b
 14420  0032AE  D016               	goto	l2991
 14421                           
 14422                           ; BSR set to: 0
 14423  0032B0  516B               	movf	__div_to_l_@exp1& (0+255),w,b
 14424  0032B2  0A80               	xorlw	128
 14425  0032B4  0F9F               	addlw	159
 14426  0032B6  B0D8               	btfsc	status,0,c
 14427  0032B8  D009               	goto	l2992
 14428                           
 14429                           ; BSR set to: 0
 14430  0032BA  0E00               	movlw	0
 14431  0032BC  6F60               	movwf	?__div_to_l_& (0+255),b
 14432  0032BE  0E00               	movlw	0
 14433  0032C0  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
 14434  0032C2  0E00               	movlw	0
 14435  0032C4  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
 14436  0032C6  0E00               	movlw	0
 14437  0032C8  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
 14438                           
 14439                           ; BSR set to: 0
 14440  0032CA  0012               	return	
 14441  0032CC                     l2992:
 14442                           
 14443                           ; BSR set to: 0
 14444                           
 14445                           ; BSR set to: 0
 14446                           
 14447                           ; BSR set to: 0
 14448  0032CC  90D8               	bcf	status,0,c
 14449  0032CE  3369               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 14450  0032D0  3368               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 14451  0032D2  3367               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 14452  0032D4  3366               	rrcf	__div_to_l_@quot& (0+255),f,b
 14453                           
 14454                           ; BSR set to: 0
 14455  0032D6  3F6B               	incfsz	__div_to_l_@exp1& (0+255),f,b
 14456  0032D8  D7F9               	goto	l2992
 14457                           
 14458                           ; BSR set to: 0
 14459  0032DA  D015               	goto	u7570
 14460  0032DC                     l2991:
 14461                           
 14462                           ; BSR set to: 0
 14463                           
 14464                           ; BSR set to: 0
 14465  0032DC  0E1F               	movlw	31
 14466  0032DE  656B               	cpfsgt	__div_to_l_@exp1& (0+255),b
 14467  0032E0  D00F               	goto	l2997
 14468                           
 14469                           ; BSR set to: 0
 14470  0032E2  0E00               	movlw	0
 14471  0032E4  6F60               	movwf	?__div_to_l_& (0+255),b
 14472  0032E6  0E00               	movlw	0
 14473  0032E8  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
 14474  0032EA  0E00               	movlw	0
 14475  0032EC  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
 14476  0032EE  0E00               	movlw	0
 14477  0032F0  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
 14478                           
 14479                           ; BSR set to: 0
 14480  0032F2  0012               	return	
 14481  0032F4                     
 14482                           ; BSR set to: 0
 14483                           
 14484                           ; BSR set to: 0
 14485  0032F4  90D8               	bcf	status,0,c
 14486  0032F6  3766               	rlcf	__div_to_l_@quot& (0+255),f,b
 14487  0032F8  3767               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 14488  0032FA  3768               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 14489  0032FC  3769               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 14490  0032FE  076B               	decf	__div_to_l_@exp1& (0+255),f,b
 14491  003300                     l2997:
 14492                           
 14493                           ; BSR set to: 0
 14494                           
 14495                           ; BSR set to: 0
 14496  003300  516B               	movf	__div_to_l_@exp1& (0+255),w,b
 14497  003302  A4D8               	btfss	status,2,c
 14498  003304  D7F7               	goto	l2998
 14499  003306                     u7570:
 14500                           
 14501                           ; BSR set to: 0
 14502                           
 14503                           ; BSR set to: 0
 14504  003306  C066  F060         	movff	__div_to_l_@quot,?__div_to_l_
 14505  00330A  C067  F061         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 14506  00330E  C068  F062         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 14507  003312  C069  F063         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 14508                           
 14509                           ; BSR set to: 0
 14510  003316  0012               	return		;funcret
 14511  003318                     __end_of__div_to_l_:
 14512                           	opt stack 0
 14513                           tblptru	equ	0xFF8
 14514                           tblptrh	equ	0xFF7
 14515                           tblptrl	equ	0xFF6
 14516                           tablat	equ	0xFF5
 14517                           prodh	equ	0xFF4
 14518                           prodl	equ	0xFF3
 14519                           intcon	equ	0xFF2
 14520                           postinc0	equ	0xFEE
 14521                           wreg	equ	0xFE8
 14522                           indf1	equ	0xFE7
 14523                           postdec1	equ	0xFE5
 14524                           fsr1h	equ	0xFE2
 14525                           fsr1l	equ	0xFE1
 14526                           indf2	equ	0xFDF
 14527                           postinc2	equ	0xFDE
 14528                           postdec2	equ	0xFDD
 14529                           plusw2	equ	0xFDB
 14530                           fsr2h	equ	0xFDA
 14531                           fsr2l	equ	0xFD9
 14532                           status	equ	0xFD8
 14533                           
 14534 ;; *************** function ___lltoft *****************
 14535 ;; Defined at:
 14536 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lltoft.c"
 14537 ;; Parameters:    Size  Location     Type
 14538 ;;  c               4    8[BANK0 ] unsigned long 
 14539 ;; Auto vars:     Size  Location     Type
 14540 ;;  exp             1   16[BANK0 ] unsigned char 
 14541 ;; Return value:  Size  Location     Type
 14542 ;;                  3    8[BANK0 ] float 
 14543 ;; Registers used:
 14544 ;;		wreg, status,2, status,0, cstack
 14545 ;; Tracked objects:
 14546 ;;		On entry : 0/0
 14547 ;;		On exit  : 0/0
 14548 ;;		Unchanged: 0/0
 14549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14550 ;;      Params:         0       4       0       0       0       0       0       0       0
 14551 ;;      Locals:         0       1       0       0       0       0       0       0       0
 14552 ;;      Temps:          0       4       0       0       0       0       0       0       0
 14553 ;;      Totals:         0       9       0       0       0       0       0       0       0
 14554 ;;Total ram usage:        9 bytes
 14555 ;; Hardware stack levels used:    1
 14556 ;; Hardware stack levels required when called:   11
 14557 ;; This function calls:
 14558 ;;		___ftpack
 14559 ;; This function is called by:
 14560 ;;		_sprintf
 14561 ;; This function uses a non-reentrant model
 14562 ;;
 14563                           
 14564                           	psect	text42
 14565  004E94                     __ptext42:
 14566                           	opt stack 0
 14567  004E94                     ___lltoft:
 14568                           	opt stack 18
 14569                           
 14570                           ; BSR set to: 0
 14571                           ;incstack = 0
 14572  004E94  0E8E               	movlw	142
 14573  004E96  0100               	movlb	0	; () banked
 14574  004E98  6F70               	movwf	___lltoft@exp& (0+255),b
 14575  004E9A  D006               	goto	l3196
 14576  004E9C                     
 14577                           ; BSR set to: 0
 14578                           
 14579                           ; BSR set to: 0
 14580  004E9C  90D8               	bcf	status,0,c
 14581  004E9E  336B               	rrcf	(___lltoft@c+3)& (0+255),f,b
 14582  004EA0  336A               	rrcf	(___lltoft@c+2)& (0+255),f,b
 14583  004EA2  3369               	rrcf	(___lltoft@c+1)& (0+255),f,b
 14584  004EA4  3368               	rrcf	___lltoft@c& (0+255),f,b
 14585  004EA6  2B70               	incf	___lltoft@exp& (0+255),f,b
 14586  004EA8                     l3196:
 14587                           
 14588                           ; BSR set to: 0
 14589                           
 14590                           ; BSR set to: 0
 14591  004EA8  0E00               	movlw	0
 14592  004EAA  1568               	andwf	___lltoft@c& (0+255),w,b
 14593  004EAC  6F6C               	movwf	??___lltoft& (0+255),b
 14594  004EAE  0E00               	movlw	0
 14595  004EB0  1569               	andwf	(___lltoft@c+1)& (0+255),w,b
 14596  004EB2  6F6D               	movwf	(??___lltoft+1)& (0+255),b
 14597  004EB4  0E00               	movlw	0
 14598  004EB6  156A               	andwf	(___lltoft@c+2)& (0+255),w,b
 14599  004EB8  6F6E               	movwf	(??___lltoft+2)& (0+255),b
 14600  004EBA  0EFF               	movlw	255
 14601  004EBC  156B               	andwf	(___lltoft@c+3)& (0+255),w,b
 14602  004EBE  6F6F               	movwf	(??___lltoft+3)& (0+255),b
 14603  004EC0  516C               	movf	??___lltoft& (0+255),w,b
 14604  004EC2  116D               	iorwf	(??___lltoft+1)& (0+255),w,b
 14605  004EC4  116E               	iorwf	(??___lltoft+2)& (0+255),w,b
 14606  004EC6  116F               	iorwf	(??___lltoft+3)& (0+255),w,b
 14607  004EC8  A4D8               	btfss	status,2,c
 14608  004ECA  D7E8               	goto	l3197
 14609                           
 14610                           ; BSR set to: 0
 14611                           
 14612                           ; BSR set to: 0
 14613  004ECC  C068  F060         	movff	___lltoft@c,___ftpack@arg
 14614  004ED0  C069  F061         	movff	___lltoft@c+1,___ftpack@arg+1
 14615  004ED4  C06A  F062         	movff	___lltoft@c+2,___ftpack@arg+2
 14616  004ED8  C070  F063         	movff	___lltoft@exp,___ftpack@exp
 14617  004EDC  0E00               	movlw	0
 14618  004EDE  6F64               	movwf	___ftpack@sign& (0+255),b
 14619  004EE0  ECDD  F020         	call	___ftpack	;wreg free
 14620  004EE4  C060  F068         	movff	?___ftpack,?___lltoft
 14621  004EE8  C061  F069         	movff	?___ftpack+1,?___lltoft+1
 14622  004EEC  C062  F06A         	movff	?___ftpack+2,?___lltoft+2
 14623  004EF0  0012               	return	
 14624  004EF2                     __end_of___lltoft:
 14625                           	opt stack 0
 14626                           tblptru	equ	0xFF8
 14627                           tblptrh	equ	0xFF7
 14628                           tblptrl	equ	0xFF6
 14629                           tablat	equ	0xFF5
 14630                           prodh	equ	0xFF4
 14631                           prodl	equ	0xFF3
 14632                           intcon	equ	0xFF2
 14633                           postinc0	equ	0xFEE
 14634                           wreg	equ	0xFE8
 14635                           indf1	equ	0xFE7
 14636                           postdec1	equ	0xFE5
 14637                           fsr1h	equ	0xFE2
 14638                           fsr1l	equ	0xFE1
 14639                           indf2	equ	0xFDF
 14640                           postinc2	equ	0xFDE
 14641                           postdec2	equ	0xFDD
 14642                           plusw2	equ	0xFDB
 14643                           fsr2h	equ	0xFDA
 14644                           fsr2l	equ	0xFD9
 14645                           status	equ	0xFD8
 14646                           
 14647 ;; *************** function ___llmod *****************
 14648 ;; Defined at:
 14649 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\llmod.c"
 14650 ;; Parameters:    Size  Location     Type
 14651 ;;  dividend        4   13[BANK0 ] unsigned long 
 14652 ;;  divisor         4   17[BANK0 ] unsigned long 
 14653 ;; Auto vars:     Size  Location     Type
 14654 ;;  counter         1   21[BANK0 ] unsigned char 
 14655 ;; Return value:  Size  Location     Type
 14656 ;;                  4   13[BANK0 ] unsigned long 
 14657 ;; Registers used:
 14658 ;;		wreg, status,2, status,0
 14659 ;; Tracked objects:
 14660 ;;		On entry : 0/0
 14661 ;;		On exit  : 0/0
 14662 ;;		Unchanged: 0/0
 14663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14664 ;;      Params:         0       8       0       0       0       0       0       0       0
 14665 ;;      Locals:         0       1       0       0       0       0       0       0       0
 14666 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14667 ;;      Totals:         0       9       0       0       0       0       0       0       0
 14668 ;;Total ram usage:        9 bytes
 14669 ;; Hardware stack levels used:    1
 14670 ;; Hardware stack levels required when called:   10
 14671 ;; This function calls:
 14672 ;;		Nothing
 14673 ;; This function is called by:
 14674 ;;		_sprintf
 14675 ;;		_send
 14676 ;; This function uses a non-reentrant model
 14677 ;;
 14678                           
 14679                           	psect	text43
 14680  004D68                     __ptext43:
 14681                           	opt stack 0
 14682  004D68                     ___llmod:
 14683                           	opt stack 19
 14684                           
 14685                           ;incstack = 0
 14686  004D68  0100               	movlb	0	; () banked
 14687  004D6A  5171               	movf	___llmod@divisor& (0+255),w,b
 14688  004D6C  1172               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 14689  004D6E  1173               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 14690  004D70  1174               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 14691  004D72  B4D8               	btfsc	status,2,c
 14692  004D74  D024               	goto	l3190
 14693                           
 14694                           ; BSR set to: 0
 14695  004D76  0E01               	movlw	1
 14696  004D78  6F75               	movwf	___llmod@counter& (0+255),b
 14697  004D7A  D006               	goto	l3185
 14698  004D7C                     
 14699                           ; BSR set to: 0
 14700                           
 14701                           ; BSR set to: 0
 14702  004D7C  90D8               	bcf	status,0,c
 14703  004D7E  3771               	rlcf	___llmod@divisor& (0+255),f,b
 14704  004D80  3772               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 14705  004D82  3773               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 14706  004D84  3774               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 14707  004D86  2B75               	incf	___llmod@counter& (0+255),f,b
 14708  004D88                     l3185:
 14709                           
 14710                           ; BSR set to: 0
 14711                           
 14712                           ; BSR set to: 0
 14713  004D88  AF74               	btfss	(___llmod@divisor+3)& (0+255),7,b
 14714  004D8A  D7F8               	goto	l3186
 14715  004D8C                     u7750:
 14716                           
 14717                           ; BSR set to: 0
 14718                           
 14719                           ; BSR set to: 0
 14720                           
 14721                           ; BSR set to: 0
 14722  004D8C  5171               	movf	___llmod@divisor& (0+255),w,b
 14723  004D8E  5D6D               	subwf	___llmod@dividend& (0+255),w,b
 14724  004D90  5172               	movf	(___llmod@divisor+1)& (0+255),w,b
 14725  004D92  596E               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 14726  004D94  5173               	movf	(___llmod@divisor+2)& (0+255),w,b
 14727  004D96  596F               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 14728  004D98  5174               	movf	(___llmod@divisor+3)& (0+255),w,b
 14729  004D9A  5970               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 14730  004D9C  A0D8               	btfss	status,0,c
 14731  004D9E  D008               	goto	l3189
 14732                           
 14733                           ; BSR set to: 0
 14734  004DA0  5171               	movf	___llmod@divisor& (0+255),w,b
 14735  004DA2  5F6D               	subwf	___llmod@dividend& (0+255),f,b
 14736  004DA4  5172               	movf	(___llmod@divisor+1)& (0+255),w,b
 14737  004DA6  5B6E               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 14738  004DA8  5173               	movf	(___llmod@divisor+2)& (0+255),w,b
 14739  004DAA  5B6F               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 14740  004DAC  5174               	movf	(___llmod@divisor+3)& (0+255),w,b
 14741  004DAE  5B70               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 14742  004DB0                     l3189:
 14743                           
 14744                           ; BSR set to: 0
 14745                           
 14746                           ; BSR set to: 0
 14747  004DB0  90D8               	bcf	status,0,c
 14748  004DB2  3374               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 14749  004DB4  3373               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 14750  004DB6  3372               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 14751  004DB8  3371               	rrcf	___llmod@divisor& (0+255),f,b
 14752                           
 14753                           ; BSR set to: 0
 14754  004DBA  2F75               	decfsz	___llmod@counter& (0+255),f,b
 14755  004DBC  D7E7               	goto	u7750
 14756  004DBE                     l3190:
 14757                           
 14758                           ; BSR set to: 0
 14759                           
 14760                           ; BSR set to: 0
 14761  004DBE  C06D  F06D         	movff	___llmod@dividend,?___llmod
 14762  004DC2  C06E  F06E         	movff	___llmod@dividend+1,?___llmod+1
 14763  004DC6  C06F  F06F         	movff	___llmod@dividend+2,?___llmod+2
 14764  004DCA  C070  F070         	movff	___llmod@dividend+3,?___llmod+3
 14765                           
 14766                           ; BSR set to: 0
 14767  004DCE  0012               	return		;funcret
 14768  004DD0                     __end_of___llmod:
 14769                           	opt stack 0
 14770                           tblptru	equ	0xFF8
 14771                           tblptrh	equ	0xFF7
 14772                           tblptrl	equ	0xFF6
 14773                           tablat	equ	0xFF5
 14774                           prodh	equ	0xFF4
 14775                           prodl	equ	0xFF3
 14776                           intcon	equ	0xFF2
 14777                           postinc0	equ	0xFEE
 14778                           wreg	equ	0xFE8
 14779                           indf1	equ	0xFE7
 14780                           postdec1	equ	0xFE5
 14781                           fsr1h	equ	0xFE2
 14782                           fsr1l	equ	0xFE1
 14783                           indf2	equ	0xFDF
 14784                           postinc2	equ	0xFDE
 14785                           postdec2	equ	0xFDD
 14786                           plusw2	equ	0xFDB
 14787                           fsr2h	equ	0xFDA
 14788                           fsr2l	equ	0xFD9
 14789                           status	equ	0xFD8
 14790                           
 14791 ;; *************** function ___lldiv *****************
 14792 ;; Defined at:
 14793 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lldiv.c"
 14794 ;; Parameters:    Size  Location     Type
 14795 ;;  dividend        4    0[BANK0 ] unsigned long 
 14796 ;;  divisor         4    4[BANK0 ] unsigned long 
 14797 ;; Auto vars:     Size  Location     Type
 14798 ;;  quotient        4    8[BANK0 ] unsigned long 
 14799 ;;  counter         1   12[BANK0 ] unsigned char 
 14800 ;; Return value:  Size  Location     Type
 14801 ;;                  4    0[BANK0 ] unsigned long 
 14802 ;; Registers used:
 14803 ;;		wreg, status,2, status,0
 14804 ;; Tracked objects:
 14805 ;;		On entry : 0/0
 14806 ;;		On exit  : 0/0
 14807 ;;		Unchanged: 0/0
 14808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14809 ;;      Params:         0       8       0       0       0       0       0       0       0
 14810 ;;      Locals:         0       5       0       0       0       0       0       0       0
 14811 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14812 ;;      Totals:         0      13       0       0       0       0       0       0       0
 14813 ;;Total ram usage:       13 bytes
 14814 ;; Hardware stack levels used:    1
 14815 ;; Hardware stack levels required when called:   10
 14816 ;; This function calls:
 14817 ;;		Nothing
 14818 ;; This function is called by:
 14819 ;;		_setup_uart
 14820 ;;		_sprintf
 14821 ;; This function uses a non-reentrant model
 14822 ;;
 14823                           
 14824                           	psect	text44
 14825  004A26                     __ptext44:
 14826                           	opt stack 0
 14827  004A26                     ___lldiv:
 14828                           	opt stack 19
 14829                           
 14830                           ; BSR set to: 0
 14831                           ;incstack = 0
 14832  004A26  0E00               	movlw	0
 14833  004A28  0100               	movlb	0	; () banked
 14834  004A2A  6F68               	movwf	___lldiv@quotient& (0+255),b
 14835  004A2C  0E00               	movlw	0
 14836  004A2E  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 14837  004A30  0E00               	movlw	0
 14838  004A32  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 14839  004A34  0E00               	movlw	0
 14840  004A36  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 14841                           
 14842                           ; BSR set to: 0
 14843  004A38  5164               	movf	___lldiv@divisor& (0+255),w,b
 14844  004A3A  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 14845  004A3C  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 14846  004A3E  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 14847  004A40  B4D8               	btfsc	status,2,c
 14848  004A42  D02A               	goto	l3180
 14849                           
 14850                           ; BSR set to: 0
 14851  004A44  0E01               	movlw	1
 14852  004A46  6F6C               	movwf	___lldiv@counter& (0+255),b
 14853  004A48  D006               	goto	l3175
 14854  004A4A                     
 14855                           ; BSR set to: 0
 14856                           
 14857                           ; BSR set to: 0
 14858  004A4A  90D8               	bcf	status,0,c
 14859  004A4C  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 14860  004A4E  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 14861  004A50  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 14862  004A52  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 14863  004A54  2B6C               	incf	___lldiv@counter& (0+255),f,b
 14864  004A56                     l3175:
 14865                           
 14866                           ; BSR set to: 0
 14867                           
 14868                           ; BSR set to: 0
 14869  004A56  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 14870  004A58  D7F8               	goto	l3176
 14871  004A5A                     u7720:
 14872                           
 14873                           ; BSR set to: 0
 14874                           
 14875                           ; BSR set to: 0
 14876                           
 14877                           ; BSR set to: 0
 14878  004A5A  90D8               	bcf	status,0,c
 14879  004A5C  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 14880  004A5E  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 14881  004A60  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 14882  004A62  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 14883                           
 14884                           ; BSR set to: 0
 14885  004A64  5164               	movf	___lldiv@divisor& (0+255),w,b
 14886  004A66  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 14887  004A68  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 14888  004A6A  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 14889  004A6C  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 14890  004A6E  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 14891  004A70  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 14892  004A72  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 14893  004A74  A0D8               	btfss	status,0,c
 14894  004A76  D009               	goto	l3179
 14895                           
 14896                           ; BSR set to: 0
 14897  004A78  5164               	movf	___lldiv@divisor& (0+255),w,b
 14898  004A7A  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 14899  004A7C  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 14900  004A7E  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 14901  004A80  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 14902  004A82  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 14903  004A84  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 14904  004A86  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 14905                           
 14906                           ; BSR set to: 0
 14907  004A88  8168               	bsf	___lldiv@quotient& (0+255),0,b
 14908  004A8A                     l3179:
 14909                           
 14910                           ; BSR set to: 0
 14911                           
 14912                           ; BSR set to: 0
 14913  004A8A  90D8               	bcf	status,0,c
 14914  004A8C  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 14915  004A8E  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 14916  004A90  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 14917  004A92  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 14918                           
 14919                           ; BSR set to: 0
 14920  004A94  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 14921  004A96  D7E1               	goto	u7720
 14922  004A98                     l3180:
 14923                           
 14924                           ; BSR set to: 0
 14925                           
 14926                           ; BSR set to: 0
 14927  004A98  C068  F060         	movff	___lldiv@quotient,?___lldiv
 14928  004A9C  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 14929  004AA0  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 14930  004AA4  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 14931                           
 14932                           ; BSR set to: 0
 14933  004AA8  0012               	return		;funcret
 14934  004AAA                     __end_of___lldiv:
 14935                           	opt stack 0
 14936                           tblptru	equ	0xFF8
 14937                           tblptrh	equ	0xFF7
 14938                           tblptrl	equ	0xFF6
 14939                           tablat	equ	0xFF5
 14940                           prodh	equ	0xFF4
 14941                           prodl	equ	0xFF3
 14942                           intcon	equ	0xFF2
 14943                           postinc0	equ	0xFEE
 14944                           wreg	equ	0xFE8
 14945                           indf1	equ	0xFE7
 14946                           postdec1	equ	0xFE5
 14947                           fsr1h	equ	0xFE2
 14948                           fsr1l	equ	0xFE1
 14949                           indf2	equ	0xFDF
 14950                           postinc2	equ	0xFDE
 14951                           postdec2	equ	0xFDD
 14952                           plusw2	equ	0xFDB
 14953                           fsr2h	equ	0xFDA
 14954                           fsr2l	equ	0xFD9
 14955                           status	equ	0xFD8
 14956                           
 14957 ;; *************** function ___fttol *****************
 14958 ;; Defined at:
 14959 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\fttol.c"
 14960 ;; Parameters:    Size  Location     Type
 14961 ;;  f1              3   80[BANK0 ] float 
 14962 ;; Auto vars:     Size  Location     Type
 14963 ;;  lval            4   90[BANK0 ] unsigned long 
 14964 ;;  exp1            1   94[BANK0 ] unsigned char 
 14965 ;;  sign1           1   89[BANK0 ] unsigned char 
 14966 ;; Return value:  Size  Location     Type
 14967 ;;                  4   80[BANK0 ] long 
 14968 ;; Registers used:
 14969 ;;		wreg, status,2, status,0
 14970 ;; Tracked objects:
 14971 ;;		On entry : 0/0
 14972 ;;		On exit  : 0/0
 14973 ;;		Unchanged: 0/0
 14974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14975 ;;      Params:         0       4       0       0       0       0       0       0       0
 14976 ;;      Locals:         0       6       0       0       0       0       0       0       0
 14977 ;;      Temps:          0       5       0       0       0       0       0       0       0
 14978 ;;      Totals:         0      15       0       0       0       0       0       0       0
 14979 ;;Total ram usage:       15 bytes
 14980 ;; Hardware stack levels used:    1
 14981 ;; Hardware stack levels required when called:   10
 14982 ;; This function calls:
 14983 ;;		Nothing
 14984 ;; This function is called by:
 14985 ;;		_main
 14986 ;;		_sprintf
 14987 ;; This function uses a non-reentrant model
 14988 ;;
 14989                           
 14990                           	psect	text45
 14991  00394A                     __ptext45:
 14992                           	opt stack 0
 14993  00394A                     ___fttol:
 14994                           	opt stack 19
 14995                           
 14996                           ; BSR set to: 0
 14997                           ;incstack = 0
 14998  00394A  C0B2  F0B4         	movff	___fttol@f1+2,??___fttol
 14999  00394E  0100               	movlb	0	; () banked
 15000  003950  6BB5               	clrf	(??___fttol+1)& (0+255),b
 15001  003952  6BB6               	clrf	(??___fttol+2)& (0+255),b
 15002  003954  35B1               	rlcf	(___fttol@f1+1)& (0+255),w,b
 15003  003956  37B4               	rlcf	??___fttol& (0+255),f,b
 15004  003958  E301               	bnc	u7631
 15005  00395A  81B5               	bsf	(??___fttol+1)& (0+255),0,b
 15006  00395C                     u7631:
 15007  00395C  51B4               	movf	??___fttol& (0+255),w,b
 15008  00395E  6FBE               	movwf	___fttol@exp1& (0+255),b
 15009  003960  51BE               	movf	___fttol@exp1& (0+255),w,b
 15010  003962  A4D8               	btfss	status,2,c
 15011  003964  D009               	goto	l3134
 15012                           
 15013                           ; BSR set to: 0
 15014  003966  0E00               	movlw	0
 15015  003968  6FB0               	movwf	?___fttol& (0+255),b
 15016  00396A  0E00               	movlw	0
 15017  00396C  6FB1               	movwf	(?___fttol+1)& (0+255),b
 15018  00396E  0E00               	movlw	0
 15019  003970  6FB2               	movwf	(?___fttol+2)& (0+255),b
 15020  003972  0E00               	movlw	0
 15021  003974  6FB3               	movwf	(?___fttol+3)& (0+255),b
 15022                           
 15023                           ; BSR set to: 0
 15024  003976  0012               	return	
 15025  003978                     l3134:
 15026                           
 15027                           ; BSR set to: 0
 15028                           
 15029                           ; BSR set to: 0
 15030  003978  0E17               	movlw	23
 15031  00397A  6FB4               	movwf	??___fttol& (0+255),b
 15032  00397C  C0B0  F0B5         	movff	___fttol@f1,??___fttol+1
 15033  003980  C0B1  F0B6         	movff	___fttol@f1+1,??___fttol+2
 15034  003984  C0B2  F0B7         	movff	___fttol@f1+2,??___fttol+3
 15035  003988  29B4               	incf	??___fttol& (0+255),w,b
 15036  00398A  6FB8               	movwf	(??___fttol+4)& (0+255),b
 15037  00398C  D004               	goto	u7650
 15038  00398E                     u7655:
 15039  00398E  90D8               	bcf	status,0,c
 15040  003990  33B7               	rrcf	(??___fttol+3)& (0+255),f,b
 15041  003992  33B6               	rrcf	(??___fttol+2)& (0+255),f,b
 15042  003994  33B5               	rrcf	(??___fttol+1)& (0+255),f,b
 15043  003996                     u7650:
 15044  003996  2FB8               	decfsz	(??___fttol+4)& (0+255),f,b
 15045  003998  D7FA               	goto	u7655
 15046  00399A  0100               	movlb	0	; () banked
 15047  00399C  51B5               	movf	(??___fttol+1)& (0+255),w,b
 15048  00399E  6FB9               	movwf	___fttol@sign1& (0+255),b
 15049                           
 15050                           ; BSR set to: 0
 15051  0039A0  8FB1               	bsf	(___fttol@f1+1)& (0+255),7,b
 15052                           
 15053                           ; BSR set to: 0
 15054  0039A2  0EFF               	movlw	255
 15055  0039A4  17B0               	andwf	___fttol@f1& (0+255),f,b
 15056  0039A6  0EFF               	movlw	255
 15057  0039A8  17B1               	andwf	(___fttol@f1+1)& (0+255),f,b
 15058  0039AA  0E00               	movlw	0
 15059  0039AC  17B2               	andwf	(___fttol@f1+2)& (0+255),f,b
 15060                           
 15061                           ; BSR set to: 0
 15062  0039AE  51B0               	movf	___fttol@f1& (0+255),w,b
 15063  0039B0  6FBA               	movwf	___fttol@lval& (0+255),b
 15064  0039B2  51B1               	movf	(___fttol@f1+1)& (0+255),w,b
 15065  0039B4  6FBB               	movwf	(___fttol@lval+1)& (0+255),b
 15066  0039B6  51B2               	movf	(___fttol@f1+2)& (0+255),w,b
 15067  0039B8  6FBC               	movwf	(___fttol@lval+2)& (0+255),b
 15068  0039BA  6BBD               	clrf	(___fttol@lval+3)& (0+255),b
 15069                           
 15070                           ; BSR set to: 0
 15071  0039BC  0E8E               	movlw	142
 15072  0039BE  5FBE               	subwf	___fttol@exp1& (0+255),f,b
 15073                           
 15074                           ; BSR set to: 0
 15075  0039C0  AFBE               	btfss	___fttol@exp1& (0+255),7,b
 15076  0039C2  D016               	goto	l3136
 15077                           
 15078                           ; BSR set to: 0
 15079  0039C4  51BE               	movf	___fttol@exp1& (0+255),w,b
 15080  0039C6  0A80               	xorlw	128
 15081  0039C8  0F8F               	addlw	143
 15082  0039CA  B0D8               	btfsc	status,0,c
 15083  0039CC  D009               	goto	l3137
 15084                           
 15085                           ; BSR set to: 0
 15086  0039CE  0E00               	movlw	0
 15087  0039D0  6FB0               	movwf	?___fttol& (0+255),b
 15088  0039D2  0E00               	movlw	0
 15089  0039D4  6FB1               	movwf	(?___fttol+1)& (0+255),b
 15090  0039D6  0E00               	movlw	0
 15091  0039D8  6FB2               	movwf	(?___fttol+2)& (0+255),b
 15092  0039DA  0E00               	movlw	0
 15093  0039DC  6FB3               	movwf	(?___fttol+3)& (0+255),b
 15094                           
 15095                           ; BSR set to: 0
 15096  0039DE  0012               	return	
 15097  0039E0                     l3137:
 15098                           
 15099                           ; BSR set to: 0
 15100                           
 15101                           ; BSR set to: 0
 15102                           
 15103                           ; BSR set to: 0
 15104  0039E0  90D8               	bcf	status,0,c
 15105  0039E2  33BD               	rrcf	(___fttol@lval+3)& (0+255),f,b
 15106  0039E4  33BC               	rrcf	(___fttol@lval+2)& (0+255),f,b
 15107  0039E6  33BB               	rrcf	(___fttol@lval+1)& (0+255),f,b
 15108  0039E8  33BA               	rrcf	___fttol@lval& (0+255),f,b
 15109                           
 15110                           ; BSR set to: 0
 15111  0039EA  3FBE               	incfsz	___fttol@exp1& (0+255),f,b
 15112  0039EC  D7F9               	goto	l3137
 15113                           
 15114                           ; BSR set to: 0
 15115  0039EE  D015               	goto	u7690
 15116  0039F0                     l3136:
 15117                           
 15118                           ; BSR set to: 0
 15119                           
 15120                           ; BSR set to: 0
 15121  0039F0  0E17               	movlw	23
 15122  0039F2  65BE               	cpfsgt	___fttol@exp1& (0+255),b
 15123  0039F4  D00F               	goto	l3142
 15124                           
 15125                           ; BSR set to: 0
 15126  0039F6  0E00               	movlw	0
 15127  0039F8  6FB0               	movwf	?___fttol& (0+255),b
 15128  0039FA  0E00               	movlw	0
 15129  0039FC  6FB1               	movwf	(?___fttol+1)& (0+255),b
 15130  0039FE  0E00               	movlw	0
 15131  003A00  6FB2               	movwf	(?___fttol+2)& (0+255),b
 15132  003A02  0E00               	movlw	0
 15133  003A04  6FB3               	movwf	(?___fttol+3)& (0+255),b
 15134                           
 15135                           ; BSR set to: 0
 15136  003A06  0012               	return	
 15137  003A08                     
 15138                           ; BSR set to: 0
 15139                           
 15140                           ; BSR set to: 0
 15141  003A08  90D8               	bcf	status,0,c
 15142  003A0A  37BA               	rlcf	___fttol@lval& (0+255),f,b
 15143  003A0C  37BB               	rlcf	(___fttol@lval+1)& (0+255),f,b
 15144  003A0E  37BC               	rlcf	(___fttol@lval+2)& (0+255),f,b
 15145  003A10  37BD               	rlcf	(___fttol@lval+3)& (0+255),f,b
 15146  003A12  07BE               	decf	___fttol@exp1& (0+255),f,b
 15147  003A14                     l3142:
 15148                           
 15149                           ; BSR set to: 0
 15150                           
 15151                           ; BSR set to: 0
 15152  003A14  51BE               	movf	___fttol@exp1& (0+255),w,b
 15153  003A16  A4D8               	btfss	status,2,c
 15154  003A18  D7F7               	goto	l3143
 15155  003A1A                     u7690:
 15156                           
 15157                           ; BSR set to: 0
 15158                           
 15159                           ; BSR set to: 0
 15160                           
 15161                           ; BSR set to: 0
 15162  003A1A  51B9               	movf	___fttol@sign1& (0+255),w,b
 15163  003A1C  B4D8               	btfsc	status,2,c
 15164  003A1E  D008               	goto	l3145
 15165                           
 15166                           ; BSR set to: 0
 15167  003A20  1FBD               	comf	(___fttol@lval+3)& (0+255),f,b
 15168  003A22  1FBC               	comf	(___fttol@lval+2)& (0+255),f,b
 15169  003A24  1FBB               	comf	(___fttol@lval+1)& (0+255),f,b
 15170  003A26  6DBA               	negf	___fttol@lval& (0+255),b
 15171  003A28  0E00               	movlw	0
 15172  003A2A  23BB               	addwfc	(___fttol@lval+1)& (0+255),f,b
 15173  003A2C  23BC               	addwfc	(___fttol@lval+2)& (0+255),f,b
 15174  003A2E  23BD               	addwfc	(___fttol@lval+3)& (0+255),f,b
 15175  003A30                     l3145:
 15176                           
 15177                           ; BSR set to: 0
 15178                           
 15179                           ; BSR set to: 0
 15180  003A30  C0BA  F0B0         	movff	___fttol@lval,?___fttol
 15181  003A34  C0BB  F0B1         	movff	___fttol@lval+1,?___fttol+1
 15182  003A38  C0BC  F0B2         	movff	___fttol@lval+2,?___fttol+2
 15183  003A3C  C0BD  F0B3         	movff	___fttol@lval+3,?___fttol+3
 15184  003A40  0012               	return	
 15185  003A42                     __end_of___fttol:
 15186                           	opt stack 0
 15187                           tblptru	equ	0xFF8
 15188                           tblptrh	equ	0xFF7
 15189                           tblptrl	equ	0xFF6
 15190                           tablat	equ	0xFF5
 15191                           prodh	equ	0xFF4
 15192                           prodl	equ	0xFF3
 15193                           intcon	equ	0xFF2
 15194                           postinc0	equ	0xFEE
 15195                           wreg	equ	0xFE8
 15196                           indf1	equ	0xFE7
 15197                           postdec1	equ	0xFE5
 15198                           fsr1h	equ	0xFE2
 15199                           fsr1l	equ	0xFE1
 15200                           indf2	equ	0xFDF
 15201                           postinc2	equ	0xFDE
 15202                           postdec2	equ	0xFDD
 15203                           plusw2	equ	0xFDB
 15204                           fsr2h	equ	0xFDA
 15205                           fsr2l	equ	0xFD9
 15206                           status	equ	0xFD8
 15207                           
 15208 ;; *************** function ___ftsub *****************
 15209 ;; Defined at:
 15210 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftsub.c"
 15211 ;; Parameters:    Size  Location     Type
 15212 ;;  f1              3   32[BANK0 ] float 
 15213 ;;  f2              3   35[BANK0 ] float 
 15214 ;; Auto vars:     Size  Location     Type
 15215 ;;		None
 15216 ;; Return value:  Size  Location     Type
 15217 ;;                  3   32[BANK0 ] float 
 15218 ;; Registers used:
 15219 ;;		wreg, status,2, status,0, cstack
 15220 ;; Tracked objects:
 15221 ;;		On entry : 0/0
 15222 ;;		On exit  : 0/0
 15223 ;;		Unchanged: 0/0
 15224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15225 ;;      Params:         0       6       0       0       0       0       0       0       0
 15226 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15227 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15228 ;;      Totals:         0       6       0       0       0       0       0       0       0
 15229 ;;Total ram usage:        6 bytes
 15230 ;; Hardware stack levels used:    1
 15231 ;; Hardware stack levels required when called:   12
 15232 ;; This function calls:
 15233 ;;		___ftadd
 15234 ;; This function is called by:
 15235 ;;		_sprintf
 15236 ;; This function uses a non-reentrant model
 15237 ;;
 15238                           
 15239                           	psect	text46
 15240  005244                     __ptext46:
 15241                           	opt stack 0
 15242  005244                     ___ftsub:
 15243                           	opt stack 17
 15244                           
 15245                           ; BSR set to: 0
 15246                           ;incstack = 0
 15247  005244  0100               	movlb	0	; () banked
 15248  005246  5183               	movf	___ftsub@f2& (0+255),w,b
 15249  005248  1184               	iorwf	(___ftsub@f2+1)& (0+255),w,b
 15250  00524A  1185               	iorwf	(___ftsub@f2+2)& (0+255),w,b
 15251  00524C  B4D8               	btfsc	status,2,c
 15252  00524E  D006               	goto	l3130
 15253                           
 15254                           ; BSR set to: 0
 15255  005250  0E00               	movlw	0
 15256  005252  1B83               	xorwf	___ftsub@f2& (0+255),f,b
 15257  005254  0E00               	movlw	0
 15258  005256  1B84               	xorwf	(___ftsub@f2+1)& (0+255),f,b
 15259  005258  0E80               	movlw	128
 15260  00525A  1B85               	xorwf	(___ftsub@f2+2)& (0+255),f,b
 15261  00525C                     l3130:
 15262                           
 15263                           ; BSR set to: 0
 15264                           
 15265                           ; BSR set to: 0
 15266  00525C  C080  F074         	movff	___ftsub@f1,___ftadd@f1
 15267  005260  C081  F075         	movff	___ftsub@f1+1,___ftadd@f1+1
 15268  005264  C082  F076         	movff	___ftsub@f1+2,___ftadd@f1+2
 15269  005268  C083  F077         	movff	___ftsub@f2,___ftadd@f2
 15270  00526C  C084  F078         	movff	___ftsub@f2+1,___ftadd@f2+1
 15271  005270  C085  F079         	movff	___ftsub@f2+2,___ftadd@f2+2
 15272  005274  EC7F  F014         	call	___ftadd	;wreg free
 15273  005278  C074  F080         	movff	?___ftadd,?___ftsub
 15274  00527C  C075  F081         	movff	?___ftadd+1,?___ftsub+1
 15275  005280  C076  F082         	movff	?___ftadd+2,?___ftsub+2
 15276  005284  0012               	return	
 15277  005286                     __end_of___ftsub:
 15278                           	opt stack 0
 15279                           tblptru	equ	0xFF8
 15280                           tblptrh	equ	0xFF7
 15281                           tblptrl	equ	0xFF6
 15282                           tablat	equ	0xFF5
 15283                           prodh	equ	0xFF4
 15284                           prodl	equ	0xFF3
 15285                           intcon	equ	0xFF2
 15286                           postinc0	equ	0xFEE
 15287                           wreg	equ	0xFE8
 15288                           indf1	equ	0xFE7
 15289                           postdec1	equ	0xFE5
 15290                           fsr1h	equ	0xFE2
 15291                           fsr1l	equ	0xFE1
 15292                           indf2	equ	0xFDF
 15293                           postinc2	equ	0xFDE
 15294                           postdec2	equ	0xFDD
 15295                           plusw2	equ	0xFDB
 15296                           fsr2h	equ	0xFDA
 15297                           fsr2l	equ	0xFD9
 15298                           status	equ	0xFD8
 15299                           
 15300 ;; *************** function ___ftadd *****************
 15301 ;; Defined at:
 15302 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftadd.c"
 15303 ;; Parameters:    Size  Location     Type
 15304 ;;  f1              3   20[BANK0 ] float 
 15305 ;;  f2              3   23[BANK0 ] float 
 15306 ;; Auto vars:     Size  Location     Type
 15307 ;;  exp1            1   31[BANK0 ] unsigned char 
 15308 ;;  exp2            1   30[BANK0 ] unsigned char 
 15309 ;;  sign            1   29[BANK0 ] unsigned char 
 15310 ;; Return value:  Size  Location     Type
 15311 ;;                  3   20[BANK0 ] float 
 15312 ;; Registers used:
 15313 ;;		wreg, status,2, status,0, cstack
 15314 ;; Tracked objects:
 15315 ;;		On entry : 0/0
 15316 ;;		On exit  : 0/0
 15317 ;;		Unchanged: 0/0
 15318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15319 ;;      Params:         0       6       0       0       0       0       0       0       0
 15320 ;;      Locals:         0       3       0       0       0       0       0       0       0
 15321 ;;      Temps:          0       3       0       0       0       0       0       0       0
 15322 ;;      Totals:         0      12       0       0       0       0       0       0       0
 15323 ;;Total ram usage:       12 bytes
 15324 ;; Hardware stack levels used:    1
 15325 ;; Hardware stack levels required when called:   11
 15326 ;; This function calls:
 15327 ;;		___ftpack
 15328 ;; This function is called by:
 15329 ;;		_le_AD
 15330 ;;		_sprintf
 15331 ;;		___ftsub
 15332 ;; This function uses a non-reentrant model
 15333 ;;
 15334                           
 15335                           	psect	text47
 15336  0028FE                     __ptext47:
 15337                           	opt stack 0
 15338  0028FE                     ___ftadd:
 15339                           	opt stack 17
 15340                           
 15341                           ;incstack = 0
 15342  0028FE  C076  F07A         	movff	___ftadd@f1+2,??___ftadd
 15343  002902  0100               	movlb	0	; () banked
 15344  002904  6B7B               	clrf	(??___ftadd+1)& (0+255),b
 15345  002906  6B7C               	clrf	(??___ftadd+2)& (0+255),b
 15346  002908  3575               	rlcf	(___ftadd@f1+1)& (0+255),w,b
 15347  00290A  377A               	rlcf	??___ftadd& (0+255),f,b
 15348  00290C  E301               	bnc	u6641
 15349  00290E  817B               	bsf	(??___ftadd+1)& (0+255),0,b
 15350  002910                     u6641:
 15351  002910  517A               	movf	??___ftadd& (0+255),w,b
 15352  002912  6F7F               	movwf	___ftadd@exp1& (0+255),b
 15353  002914  C079  F07A         	movff	___ftadd@f2+2,??___ftadd
 15354  002918  6B7B               	clrf	(??___ftadd+1)& (0+255),b
 15355  00291A  6B7C               	clrf	(??___ftadd+2)& (0+255),b
 15356  00291C  3578               	rlcf	(___ftadd@f2+1)& (0+255),w,b
 15357  00291E  377A               	rlcf	??___ftadd& (0+255),f,b
 15358  002920  E301               	bnc	u6651
 15359  002922  817B               	bsf	(??___ftadd+1)& (0+255),0,b
 15360  002924                     u6651:
 15361  002924  517A               	movf	??___ftadd& (0+255),w,b
 15362  002926  6F7E               	movwf	___ftadd@exp2& (0+255),b
 15363                           
 15364                           ; BSR set to: 0
 15365  002928  517F               	movf	___ftadd@exp1& (0+255),w,b
 15366  00292A  B4D8               	btfsc	status,2,c
 15367  00292C  D00B               	goto	u6680
 15368                           
 15369                           ; BSR set to: 0
 15370  00292E  517E               	movf	___ftadd@exp2& (0+255),w,b
 15371  002930  5D7F               	subwf	___ftadd@exp1& (0+255),w,b
 15372  002932  B0D8               	btfsc	status,0,c
 15373  002934  D00E               	goto	l3048
 15374                           
 15375                           ; BSR set to: 0
 15376  002936  517F               	movf	___ftadd@exp1& (0+255),w,b
 15377  002938  0800               	sublw	0
 15378  00293A  257E               	addwf	___ftadd@exp2& (0+255),w,b
 15379  00293C  6F7A               	movwf	??___ftadd& (0+255),b
 15380  00293E  0E18               	movlw	24
 15381  002940  657A               	cpfsgt	??___ftadd& (0+255),b
 15382  002942  D007               	goto	l3048
 15383  002944                     u6680:
 15384                           
 15385                           ; BSR set to: 0
 15386  002944  C077  F074         	movff	___ftadd@f2,?___ftadd
 15387  002948  C078  F075         	movff	___ftadd@f2+1,?___ftadd+1
 15388  00294C  C079  F076         	movff	___ftadd@f2+2,?___ftadd+2
 15389  002950  0012               	return	
 15390  002952                     l3048:
 15391                           
 15392                           ; BSR set to: 0
 15393                           
 15394                           ; BSR set to: 0
 15395  002952  517E               	movf	___ftadd@exp2& (0+255),w,b
 15396  002954  B4D8               	btfsc	status,2,c
 15397  002956  D00B               	goto	u6710
 15398                           
 15399                           ; BSR set to: 0
 15400  002958  517F               	movf	___ftadd@exp1& (0+255),w,b
 15401  00295A  5D7E               	subwf	___ftadd@exp2& (0+255),w,b
 15402  00295C  B0D8               	btfsc	status,0,c
 15403  00295E  D00E               	goto	l3052
 15404                           
 15405                           ; BSR set to: 0
 15406  002960  517E               	movf	___ftadd@exp2& (0+255),w,b
 15407  002962  0800               	sublw	0
 15408  002964  257F               	addwf	___ftadd@exp1& (0+255),w,b
 15409  002966  6F7A               	movwf	??___ftadd& (0+255),b
 15410  002968  0E18               	movlw	24
 15411  00296A  657A               	cpfsgt	??___ftadd& (0+255),b
 15412  00296C  D007               	goto	l3052
 15413  00296E                     u6710:
 15414                           
 15415                           ; BSR set to: 0
 15416  00296E  C074  F074         	movff	___ftadd@f1,?___ftadd
 15417  002972  C075  F075         	movff	___ftadd@f1+1,?___ftadd+1
 15418  002976  C076  F076         	movff	___ftadd@f1+2,?___ftadd+2
 15419  00297A  0012               	return	
 15420  00297C                     l3052:
 15421                           
 15422                           ; BSR set to: 0
 15423                           
 15424                           ; BSR set to: 0
 15425  00297C  0E06               	movlw	6
 15426  00297E  6F7D               	movwf	___ftadd@sign& (0+255),b
 15427                           
 15428                           ; BSR set to: 0
 15429  002980  BF76               	btfsc	(___ftadd@f1+2)& (0+255),7,b
 15430                           
 15431                           ; BSR set to: 0
 15432  002982  8F7D               	bsf	___ftadd@sign& (0+255),7,b
 15433                           
 15434                           ; BSR set to: 0
 15435                           
 15436                           ; BSR set to: 0
 15437  002984  BF79               	btfsc	(___ftadd@f2+2)& (0+255),7,b
 15438                           
 15439                           ; BSR set to: 0
 15440  002986  8D7D               	bsf	___ftadd@sign& (0+255),6,b
 15441                           
 15442                           ; BSR set to: 0
 15443  002988  8F75               	bsf	(___ftadd@f1+1)& (0+255),7,b
 15444                           
 15445                           ; BSR set to: 0
 15446  00298A  0EFF               	movlw	255
 15447  00298C  1774               	andwf	___ftadd@f1& (0+255),f,b
 15448  00298E  0EFF               	movlw	255
 15449  002990  1775               	andwf	(___ftadd@f1+1)& (0+255),f,b
 15450  002992  0E00               	movlw	0
 15451  002994  1776               	andwf	(___ftadd@f1+2)& (0+255),f,b
 15452  002996  8F78               	bsf	(___ftadd@f2+1)& (0+255),7,b
 15453                           
 15454                           ; BSR set to: 0
 15455  002998  0EFF               	movlw	255
 15456  00299A  1777               	andwf	___ftadd@f2& (0+255),f,b
 15457  00299C  0EFF               	movlw	255
 15458  00299E  1778               	andwf	(___ftadd@f2+1)& (0+255),f,b
 15459  0029A0  0E00               	movlw	0
 15460  0029A2  1779               	andwf	(___ftadd@f2+2)& (0+255),f,b
 15461                           
 15462                           ; BSR set to: 0
 15463  0029A4  517E               	movf	___ftadd@exp2& (0+255),w,b
 15464  0029A6  5D7F               	subwf	___ftadd@exp1& (0+255),w,b
 15465  0029A8  B0D8               	btfsc	status,0,c
 15466  0029AA  D01B               	goto	l3057
 15467  0029AC                     u6740:
 15468                           
 15469                           ; BSR set to: 0
 15470                           
 15471                           ; BSR set to: 0
 15472  0029AC  90D8               	bcf	status,0,c
 15473  0029AE  3777               	rlcf	___ftadd@f2& (0+255),f,b
 15474  0029B0  3778               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 15475  0029B2  3779               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 15476  0029B4  077E               	decf	___ftadd@exp2& (0+255),f,b
 15477                           
 15478                           ; BSR set to: 0
 15479  0029B6  517F               	movf	___ftadd@exp1& (0+255),w,b
 15480  0029B8  197E               	xorwf	___ftadd@exp2& (0+255),w,b
 15481  0029BA  B4D8               	btfsc	status,2,c
 15482  0029BC  D00D               	goto	l3062
 15483                           
 15484                           ; BSR set to: 0
 15485  0029BE  077D               	decf	___ftadd@sign& (0+255),f,b
 15486  0029C0  C07D  F07A         	movff	___ftadd@sign,??___ftadd
 15487  0029C4  0E07               	movlw	7
 15488  0029C6  177A               	andwf	??___ftadd& (0+255),f,b
 15489  0029C8  B4D8               	btfsc	status,2,c
 15490  0029CA  D006               	goto	l3062
 15491  0029CC  D7EF               	goto	u6740
 15492  0029CE                     
 15493                           ; BSR set to: 0
 15494                           
 15495                           ; BSR set to: 0
 15496  0029CE  90D8               	bcf	status,0,c
 15497  0029D0  3376               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 15498  0029D2  3375               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 15499  0029D4  3374               	rrcf	___ftadd@f1& (0+255),f,b
 15500  0029D6  2B7F               	incf	___ftadd@exp1& (0+255),f,b
 15501  0029D8                     l3062:
 15502                           
 15503                           ; BSR set to: 0
 15504                           
 15505                           ; BSR set to: 0
 15506  0029D8  517E               	movf	___ftadd@exp2& (0+255),w,b
 15507  0029DA  197F               	xorwf	___ftadd@exp1& (0+255),w,b
 15508  0029DC  B4D8               	btfsc	status,2,c
 15509  0029DE  D01F               	goto	u6810
 15510  0029E0  D7F6               	goto	l3063
 15511  0029E2                     l3057:
 15512                           
 15513                           ; BSR set to: 0
 15514                           
 15515                           ; BSR set to: 0
 15516  0029E2  517F               	movf	___ftadd@exp1& (0+255),w,b
 15517  0029E4  5D7E               	subwf	___ftadd@exp2& (0+255),w,b
 15518  0029E6  B0D8               	btfsc	status,0,c
 15519  0029E8  D01A               	goto	u6810
 15520  0029EA                     u6780:
 15521                           
 15522                           ; BSR set to: 0
 15523                           
 15524                           ; BSR set to: 0
 15525  0029EA  90D8               	bcf	status,0,c
 15526  0029EC  3774               	rlcf	___ftadd@f1& (0+255),f,b
 15527  0029EE  3775               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 15528  0029F0  3776               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 15529  0029F2  077F               	decf	___ftadd@exp1& (0+255),f,b
 15530                           
 15531                           ; BSR set to: 0
 15532  0029F4  517F               	movf	___ftadd@exp1& (0+255),w,b
 15533  0029F6  197E               	xorwf	___ftadd@exp2& (0+255),w,b
 15534  0029F8  B4D8               	btfsc	status,2,c
 15535  0029FA  D00D               	goto	l3071
 15536                           
 15537                           ; BSR set to: 0
 15538  0029FC  077D               	decf	___ftadd@sign& (0+255),f,b
 15539  0029FE  C07D  F07A         	movff	___ftadd@sign,??___ftadd
 15540  002A02  0E07               	movlw	7
 15541  002A04  177A               	andwf	??___ftadd& (0+255),f,b
 15542  002A06  B4D8               	btfsc	status,2,c
 15543  002A08  D006               	goto	l3071
 15544  002A0A  D7EF               	goto	u6780
 15545  002A0C                     
 15546                           ; BSR set to: 0
 15547                           
 15548                           ; BSR set to: 0
 15549  002A0C  90D8               	bcf	status,0,c
 15550  002A0E  3379               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 15551  002A10  3378               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 15552  002A12  3377               	rrcf	___ftadd@f2& (0+255),f,b
 15553  002A14  2B7E               	incf	___ftadd@exp2& (0+255),f,b
 15554  002A16                     l3071:
 15555                           
 15556                           ; BSR set to: 0
 15557                           
 15558                           ; BSR set to: 0
 15559  002A16  517E               	movf	___ftadd@exp2& (0+255),w,b
 15560  002A18  197F               	xorwf	___ftadd@exp1& (0+255),w,b
 15561  002A1A  A4D8               	btfss	status,2,c
 15562  002A1C  D7F7               	goto	l3072
 15563  002A1E                     u6810:
 15564                           
 15565                           ; BSR set to: 0
 15566                           
 15567                           ; BSR set to: 0
 15568                           
 15569                           ; BSR set to: 0
 15570  002A1E  AF7D               	btfss	___ftadd@sign& (0+255),7,b
 15571  002A20  D00C               	goto	l3074
 15572                           
 15573                           ; BSR set to: 0
 15574  002A22  0EFF               	movlw	255
 15575  002A24  1B74               	xorwf	___ftadd@f1& (0+255),f,b
 15576  002A26  0EFF               	movlw	255
 15577  002A28  1B75               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 15578  002A2A  0EFF               	movlw	255
 15579  002A2C  1B76               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 15580  002A2E  0E01               	movlw	1
 15581  002A30  2774               	addwf	___ftadd@f1& (0+255),f,b
 15582  002A32  0E00               	movlw	0
 15583  002A34  2375               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 15584  002A36  0E00               	movlw	0
 15585  002A38  2376               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 15586  002A3A                     l3074:
 15587                           
 15588                           ; BSR set to: 0
 15589  002A3A  AD7D               	btfss	___ftadd@sign& (0+255),6,b
 15590  002A3C  D00C               	goto	l3075
 15591                           
 15592                           ; BSR set to: 0
 15593  002A3E  0EFF               	movlw	255
 15594  002A40  1B77               	xorwf	___ftadd@f2& (0+255),f,b
 15595  002A42  0EFF               	movlw	255
 15596  002A44  1B78               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 15597  002A46  0EFF               	movlw	255
 15598  002A48  1B79               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 15599  002A4A  0E01               	movlw	1
 15600  002A4C  2777               	addwf	___ftadd@f2& (0+255),f,b
 15601  002A4E  0E00               	movlw	0
 15602  002A50  2378               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 15603  002A52  0E00               	movlw	0
 15604  002A54  2379               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 15605  002A56                     l3075:
 15606                           
 15607                           ; BSR set to: 0
 15608                           
 15609                           ; BSR set to: 0
 15610  002A56  0E00               	movlw	0
 15611  002A58  6F7D               	movwf	___ftadd@sign& (0+255),b
 15612                           
 15613                           ; BSR set to: 0
 15614  002A5A  5174               	movf	___ftadd@f1& (0+255),w,b
 15615  002A5C  2777               	addwf	___ftadd@f2& (0+255),f,b
 15616  002A5E  5175               	movf	(___ftadd@f1+1)& (0+255),w,b
 15617  002A60  2378               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 15618  002A62  5176               	movf	(___ftadd@f1+2)& (0+255),w,b
 15619  002A64  2379               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 15620                           
 15621                           ; BSR set to: 0
 15622  002A66  AF79               	btfss	(___ftadd@f2+2)& (0+255),7,b
 15623  002A68  D00E               	goto	l3076
 15624                           
 15625                           ; BSR set to: 0
 15626  002A6A  0EFF               	movlw	255
 15627  002A6C  1B77               	xorwf	___ftadd@f2& (0+255),f,b
 15628  002A6E  0EFF               	movlw	255
 15629  002A70  1B78               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 15630  002A72  0EFF               	movlw	255
 15631  002A74  1B79               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 15632  002A76  0E01               	movlw	1
 15633  002A78  2777               	addwf	___ftadd@f2& (0+255),f,b
 15634  002A7A  0E00               	movlw	0
 15635  002A7C  2378               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 15636  002A7E  0E00               	movlw	0
 15637  002A80  2379               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 15638                           
 15639                           ; BSR set to: 0
 15640  002A82  0E01               	movlw	1
 15641  002A84  6F7D               	movwf	___ftadd@sign& (0+255),b
 15642  002A86                     l3076:
 15643                           
 15644                           ; BSR set to: 0
 15645                           
 15646                           ; BSR set to: 0
 15647  002A86  C077  F060         	movff	___ftadd@f2,___ftpack@arg
 15648  002A8A  C078  F061         	movff	___ftadd@f2+1,___ftpack@arg+1
 15649  002A8E  C079  F062         	movff	___ftadd@f2+2,___ftpack@arg+2
 15650  002A92  C07F  F063         	movff	___ftadd@exp1,___ftpack@exp
 15651  002A96  C07D  F064         	movff	___ftadd@sign,___ftpack@sign
 15652  002A9A  ECDD  F020         	call	___ftpack	;wreg free
 15653  002A9E  C060  F074         	movff	?___ftpack,?___ftadd
 15654  002AA2  C061  F075         	movff	?___ftpack+1,?___ftadd+1
 15655  002AA6  C062  F076         	movff	?___ftpack+2,?___ftadd+2
 15656  002AAA  0012               	return	
 15657  002AAC                     __end_of___ftadd:
 15658                           	opt stack 0
 15659                           tblptru	equ	0xFF8
 15660                           tblptrh	equ	0xFF7
 15661                           tblptrl	equ	0xFF6
 15662                           tablat	equ	0xFF5
 15663                           prodh	equ	0xFF4
 15664                           prodl	equ	0xFF3
 15665                           intcon	equ	0xFF2
 15666                           postinc0	equ	0xFEE
 15667                           wreg	equ	0xFE8
 15668                           indf1	equ	0xFE7
 15669                           postdec1	equ	0xFE5
 15670                           fsr1h	equ	0xFE2
 15671                           fsr1l	equ	0xFE1
 15672                           indf2	equ	0xFDF
 15673                           postinc2	equ	0xFDE
 15674                           postdec2	equ	0xFDD
 15675                           plusw2	equ	0xFDB
 15676                           fsr2h	equ	0xFDA
 15677                           fsr2l	equ	0xFD9
 15678                           status	equ	0xFD8
 15679                           
 15680 ;; *************** function ___ftpack *****************
 15681 ;; Defined at:
 15682 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\float.c"
 15683 ;; Parameters:    Size  Location     Type
 15684 ;;  arg             3    0[BANK0 ] unsigned um
 15685 ;;  exp             1    3[BANK0 ] unsigned char 
 15686 ;;  sign            1    4[BANK0 ] unsigned char 
 15687 ;; Auto vars:     Size  Location     Type
 15688 ;;		None
 15689 ;; Return value:  Size  Location     Type
 15690 ;;                  3    0[BANK0 ] float 
 15691 ;; Registers used:
 15692 ;;		wreg, status,2, status,0
 15693 ;; Tracked objects:
 15694 ;;		On entry : 0/0
 15695 ;;		On exit  : 0/0
 15696 ;;		Unchanged: 0/0
 15697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15698 ;;      Params:         0       5       0       0       0       0       0       0       0
 15699 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15700 ;;      Temps:          0       3       0       0       0       0       0       0       0
 15701 ;;      Totals:         0       8       0       0       0       0       0       0       0
 15702 ;;Total ram usage:        8 bytes
 15703 ;; Hardware stack levels used:    1
 15704 ;; Hardware stack levels required when called:   10
 15705 ;; This function calls:
 15706 ;;		Nothing
 15707 ;; This function is called by:
 15708 ;;		___awtoft
 15709 ;;		___ftadd
 15710 ;;		___ftdiv
 15711 ;;		___ftmul
 15712 ;;		___lltoft
 15713 ;; This function uses a non-reentrant model
 15714 ;;
 15715                           
 15716                           	psect	text48
 15717  0041BA                     __ptext48:
 15718                           	opt stack 0
 15719  0041BA                     ___ftpack:
 15720                           	opt stack 17
 15721                           
 15722                           ;incstack = 0
 15723  0041BA  0100               	movlb	0	; () banked
 15724  0041BC  5163               	movf	___ftpack@exp& (0+255),w,b
 15725  0041BE  B4D8               	btfsc	status,2,c
 15726  0041C0  D005               	goto	u6340
 15727                           
 15728                           ; BSR set to: 0
 15729  0041C2  5160               	movf	___ftpack@arg& (0+255),w,b
 15730  0041C4  1161               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 15731  0041C6  1162               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 15732  0041C8  A4D8               	btfss	status,2,c
 15733  0041CA  D00C               	goto	l3017
 15734  0041CC                     u6340:
 15735                           
 15736                           ; BSR set to: 0
 15737                           
 15738                           ; BSR set to: 0
 15739  0041CC  0E00               	movlw	0
 15740  0041CE  6F60               	movwf	?___ftpack& (0+255),b
 15741  0041D0  0E00               	movlw	0
 15742  0041D2  6F61               	movwf	(?___ftpack+1)& (0+255),b
 15743  0041D4  0E00               	movlw	0
 15744  0041D6  6F62               	movwf	(?___ftpack+2)& (0+255),b
 15745                           
 15746                           ; BSR set to: 0
 15747  0041D8  0012               	return	
 15748  0041DA                     
 15749                           ; BSR set to: 0
 15750                           
 15751                           ; BSR set to: 0
 15752  0041DA  2B63               	incf	___ftpack@exp& (0+255),f,b
 15753  0041DC  90D8               	bcf	status,0,c
 15754  0041DE  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 15755  0041E0  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 15756  0041E2  3360               	rrcf	___ftpack@arg& (0+255),f,b
 15757  0041E4                     l3017:
 15758                           
 15759                           ; BSR set to: 0
 15760                           
 15761                           ; BSR set to: 0
 15762  0041E4  0E00               	movlw	0
 15763  0041E6  1560               	andwf	___ftpack@arg& (0+255),w,b
 15764  0041E8  6F65               	movwf	??___ftpack& (0+255),b
 15765  0041EA  0E00               	movlw	0
 15766  0041EC  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
 15767  0041EE  6F66               	movwf	(??___ftpack+1)& (0+255),b
 15768  0041F0  0EFE               	movlw	254
 15769  0041F2  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
 15770  0041F4  6F67               	movwf	(??___ftpack+2)& (0+255),b
 15771  0041F6  5165               	movf	??___ftpack& (0+255),w,b
 15772  0041F8  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
 15773  0041FA  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
 15774  0041FC  B4D8               	btfsc	status,2,c
 15775  0041FE  D00C               	goto	l3020
 15776  004200  D7EC               	goto	l3018
 15777  004202                     
 15778                           ; BSR set to: 0
 15779                           
 15780                           ; BSR set to: 0
 15781  004202  2B63               	incf	___ftpack@exp& (0+255),f,b
 15782                           
 15783                           ; BSR set to: 0
 15784  004204  0E01               	movlw	1
 15785  004206  2760               	addwf	___ftpack@arg& (0+255),f,b
 15786  004208  0E00               	movlw	0
 15787  00420A  2361               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 15788  00420C  0E00               	movlw	0
 15789  00420E  2362               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 15790  004210  90D8               	bcf	status,0,c
 15791  004212  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 15792  004214  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 15793  004216  3360               	rrcf	___ftpack@arg& (0+255),f,b
 15794  004218                     l3020:
 15795                           
 15796                           ; BSR set to: 0
 15797                           
 15798                           ; BSR set to: 0
 15799  004218  0E00               	movlw	0
 15800  00421A  1560               	andwf	___ftpack@arg& (0+255),w,b
 15801  00421C  6F65               	movwf	??___ftpack& (0+255),b
 15802  00421E  0E00               	movlw	0
 15803  004220  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
 15804  004222  6F66               	movwf	(??___ftpack+1)& (0+255),b
 15805  004224  0EFF               	movlw	255
 15806  004226  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
 15807  004228  6F67               	movwf	(??___ftpack+2)& (0+255),b
 15808  00422A  5165               	movf	??___ftpack& (0+255),w,b
 15809  00422C  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
 15810  00422E  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
 15811  004230  B4D8               	btfsc	status,2,c
 15812  004232  D006               	goto	l3023
 15813  004234  D7E6               	goto	l3021
 15814  004236                     
 15815                           ; BSR set to: 0
 15816                           
 15817                           ; BSR set to: 0
 15818  004236  0763               	decf	___ftpack@exp& (0+255),f,b
 15819  004238  90D8               	bcf	status,0,c
 15820  00423A  3760               	rlcf	___ftpack@arg& (0+255),f,b
 15821  00423C  3761               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 15822  00423E  3762               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 15823  004240                     l3023:
 15824                           
 15825                           ; BSR set to: 0
 15826                           
 15827                           ; BSR set to: 0
 15828  004240  BF61               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 15829  004242  D003               	goto	u6380
 15830                           
 15831                           ; BSR set to: 0
 15832  004244  0E02               	movlw	2
 15833  004246  6163               	cpfslt	___ftpack@exp& (0+255),b
 15834  004248  D7F6               	goto	l3024
 15835  00424A                     u6380:
 15836                           
 15837                           ; BSR set to: 0
 15838                           
 15839                           ; BSR set to: 0
 15840  00424A  A163               	btfss	___ftpack@exp& (0+255),0,b
 15841                           
 15842                           ; BSR set to: 0
 15843  00424C  9F61               	bcf	(___ftpack@arg+1)& (0+255),7,b
 15844                           
 15845                           ; BSR set to: 0
 15846                           
 15847                           ; BSR set to: 0
 15848  00424E  90D8               	bcf	status,0,c
 15849  004250  3363               	rrcf	___ftpack@exp& (0+255),f,b
 15850  004252  5163               	movf	___ftpack@exp& (0+255),w,b
 15851  004254  1362               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 15852                           
 15853                           ; BSR set to: 0
 15854  004256  5164               	movf	___ftpack@sign& (0+255),w,b
 15855  004258  A4D8               	btfss	status,2,c
 15856                           
 15857                           ; BSR set to: 0
 15858  00425A  8F62               	bsf	(___ftpack@arg+2)& (0+255),7,b
 15859                           
 15860                           ; BSR set to: 0
 15861                           
 15862                           ; BSR set to: 0
 15863  00425C  C060  F060         	movff	___ftpack@arg,?___ftpack
 15864  004260  C061  F061         	movff	___ftpack@arg+1,?___ftpack+1
 15865  004264  C062  F062         	movff	___ftpack@arg+2,?___ftpack+2
 15866  004268  0012               	return	
 15867  00426A                     __end_of___ftpack:
 15868                           	opt stack 0
 15869                           tblptru	equ	0xFF8
 15870                           tblptrh	equ	0xFF7
 15871                           tblptrl	equ	0xFF6
 15872                           tablat	equ	0xFF5
 15873                           prodh	equ	0xFF4
 15874                           prodl	equ	0xFF3
 15875                           intcon	equ	0xFF2
 15876                           postinc0	equ	0xFEE
 15877                           wreg	equ	0xFE8
 15878                           indf1	equ	0xFE7
 15879                           postdec1	equ	0xFE5
 15880                           fsr1h	equ	0xFE2
 15881                           fsr1l	equ	0xFE1
 15882                           indf2	equ	0xFDF
 15883                           postinc2	equ	0xFDE
 15884                           postdec2	equ	0xFDD
 15885                           plusw2	equ	0xFDB
 15886                           fsr2h	equ	0xFDA
 15887                           fsr2l	equ	0xFD9
 15888                           status	equ	0xFD8
 15889                           
 15890 ;; *************** function ___ftneg *****************
 15891 ;; Defined at:
 15892 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftneg.c"
 15893 ;; Parameters:    Size  Location     Type
 15894 ;;  f1              3    0[BANK0 ] float 
 15895 ;; Auto vars:     Size  Location     Type
 15896 ;;		None
 15897 ;; Return value:  Size  Location     Type
 15898 ;;                  3    0[BANK0 ] float 
 15899 ;; Registers used:
 15900 ;;		wreg, status,2, status,0
 15901 ;; Tracked objects:
 15902 ;;		On entry : 0/0
 15903 ;;		On exit  : 0/0
 15904 ;;		Unchanged: 0/0
 15905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15906 ;;      Params:         0       3       0       0       0       0       0       0       0
 15907 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15908 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15909 ;;      Totals:         0       3       0       0       0       0       0       0       0
 15910 ;;Total ram usage:        3 bytes
 15911 ;; Hardware stack levels used:    1
 15912 ;; Hardware stack levels required when called:   10
 15913 ;; This function calls:
 15914 ;;		Nothing
 15915 ;; This function is called by:
 15916 ;;		_sprintf
 15917 ;; This function uses a non-reentrant model
 15918 ;;
 15919                           
 15920                           	psect	text49
 15921  0055CE                     __ptext49:
 15922                           	opt stack 0
 15923  0055CE                     ___ftneg:
 15924                           	opt stack 19
 15925                           
 15926                           ; BSR set to: 0
 15927                           ;incstack = 0
 15928  0055CE  0100               	movlb	0	; () banked
 15929  0055D0  5160               	movf	___ftneg@f1& (0+255),w,b
 15930  0055D2  1161               	iorwf	(___ftneg@f1+1)& (0+255),w,b
 15931  0055D4  1162               	iorwf	(___ftneg@f1+2)& (0+255),w,b
 15932  0055D6  B4D8               	btfsc	status,2,c
 15933  0055D8  D006               	goto	l3124
 15934                           
 15935                           ; BSR set to: 0
 15936  0055DA  0E00               	movlw	0
 15937  0055DC  1B60               	xorwf	___ftneg@f1& (0+255),f,b
 15938  0055DE  0E00               	movlw	0
 15939  0055E0  1B61               	xorwf	(___ftneg@f1+1)& (0+255),f,b
 15940  0055E2  0E80               	movlw	128
 15941  0055E4  1B62               	xorwf	(___ftneg@f1+2)& (0+255),f,b
 15942  0055E6                     l3124:
 15943                           
 15944                           ; BSR set to: 0
 15945  0055E6  C060  F060         	movff	___ftneg@f1,?___ftneg
 15946  0055EA  C061  F061         	movff	___ftneg@f1+1,?___ftneg+1
 15947  0055EE  C062  F062         	movff	___ftneg@f1+2,?___ftneg+2
 15948                           
 15949                           ; BSR set to: 0
 15950  0055F2  0012               	return		;funcret
 15951  0055F4                     __end_of___ftneg:
 15952                           	opt stack 0
 15953                           tblptru	equ	0xFF8
 15954                           tblptrh	equ	0xFF7
 15955                           tblptrl	equ	0xFF6
 15956                           tablat	equ	0xFF5
 15957                           prodh	equ	0xFF4
 15958                           prodl	equ	0xFF3
 15959                           intcon	equ	0xFF2
 15960                           postinc0	equ	0xFEE
 15961                           wreg	equ	0xFE8
 15962                           indf1	equ	0xFE7
 15963                           postdec1	equ	0xFE5
 15964                           fsr1h	equ	0xFE2
 15965                           fsr1l	equ	0xFE1
 15966                           indf2	equ	0xFDF
 15967                           postinc2	equ	0xFDE
 15968                           postdec2	equ	0xFDD
 15969                           plusw2	equ	0xFDB
 15970                           fsr2h	equ	0xFDA
 15971                           fsr2l	equ	0xFD9
 15972                           status	equ	0xFD8
 15973                           
 15974 ;; *************** function ___ftge *****************
 15975 ;; Defined at:
 15976 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftge.c"
 15977 ;; Parameters:    Size  Location     Type
 15978 ;;  ff1             3    0[BANK0 ] float 
 15979 ;;  ff2             3    3[BANK0 ] float 
 15980 ;; Auto vars:     Size  Location     Type
 15981 ;;		None
 15982 ;; Return value:  Size  Location     Type
 15983 ;;		None               void
 15984 ;; Registers used:
 15985 ;;		wreg, status,2, status,0
 15986 ;; Tracked objects:
 15987 ;;		On entry : 0/0
 15988 ;;		On exit  : 0/0
 15989 ;;		Unchanged: 0/0
 15990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15991 ;;      Params:         0       6       0       0       0       0       0       0       0
 15992 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15993 ;;      Temps:          0       3       0       0       0       0       0       0       0
 15994 ;;      Totals:         0       9       0       0       0       0       0       0       0
 15995 ;;Total ram usage:        9 bytes
 15996 ;; Hardware stack levels used:    1
 15997 ;; Hardware stack levels required when called:   10
 15998 ;; This function calls:
 15999 ;;		Nothing
 16000 ;; This function is called by:
 16001 ;;		_sprintf
 16002 ;; This function uses a non-reentrant model
 16003 ;;
 16004                           
 16005                           	psect	text50
 16006  004768                     __ptext50:
 16007                           	opt stack 0
 16008  004768                     ___ftge:
 16009                           	opt stack 19
 16010                           
 16011                           ; BSR set to: 0
 16012                           ;incstack = 0
 16013  004768  0100               	movlb	0	; () banked
 16014  00476A  AF62               	btfss	(___ftge@ff1+2)& (0+255),7,b
 16015  00476C  D016               	goto	l3106
 16016                           
 16017                           ; BSR set to: 0
 16018  00476E  C060  F066         	movff	___ftge@ff1,??___ftge
 16019  004772  C061  F067         	movff	___ftge@ff1+1,??___ftge+1
 16020  004776  C062  F068         	movff	___ftge@ff1+2,??___ftge+2
 16021  00477A  1F66               	comf	??___ftge& (0+255),f,b
 16022  00477C  1F67               	comf	(??___ftge+1)& (0+255),f,b
 16023  00477E  1F68               	comf	(??___ftge+2)& (0+255),f,b
 16024  004780  2B66               	incf	??___ftge& (0+255),f,b
 16025  004782  0E00               	movlw	0
 16026  004784  2367               	addwfc	(??___ftge+1)& (0+255),f,b
 16027  004786  2368               	addwfc	(??___ftge+2)& (0+255),f,b
 16028  004788  0E00               	movlw	0
 16029  00478A  2566               	addwf	??___ftge& (0+255),w,b
 16030  00478C  6F60               	movwf	___ftge@ff1& (0+255),b
 16031  00478E  0E00               	movlw	0
 16032  004790  2167               	addwfc	(??___ftge+1)& (0+255),w,b
 16033  004792  6F61               	movwf	(___ftge@ff1+1)& (0+255),b
 16034  004794  0E80               	movlw	128
 16035  004796  2168               	addwfc	(??___ftge+2)& (0+255),w,b
 16036  004798  6F62               	movwf	(___ftge@ff1+2)& (0+255),b
 16037  00479A                     l3106:
 16038                           
 16039                           ; BSR set to: 0
 16040                           
 16041                           ; BSR set to: 0
 16042  00479A  AF65               	btfss	(___ftge@ff2+2)& (0+255),7,b
 16043  00479C  D016               	goto	l3107
 16044                           
 16045                           ; BSR set to: 0
 16046  00479E  C063  F066         	movff	___ftge@ff2,??___ftge
 16047  0047A2  C064  F067         	movff	___ftge@ff2+1,??___ftge+1
 16048  0047A6  C065  F068         	movff	___ftge@ff2+2,??___ftge+2
 16049  0047AA  1F66               	comf	??___ftge& (0+255),f,b
 16050  0047AC  1F67               	comf	(??___ftge+1)& (0+255),f,b
 16051  0047AE  1F68               	comf	(??___ftge+2)& (0+255),f,b
 16052  0047B0  2B66               	incf	??___ftge& (0+255),f,b
 16053  0047B2  0E00               	movlw	0
 16054  0047B4  2367               	addwfc	(??___ftge+1)& (0+255),f,b
 16055  0047B6  2368               	addwfc	(??___ftge+2)& (0+255),f,b
 16056  0047B8  0E00               	movlw	0
 16057  0047BA  2566               	addwf	??___ftge& (0+255),w,b
 16058  0047BC  6F63               	movwf	___ftge@ff2& (0+255),b
 16059  0047BE  0E00               	movlw	0
 16060  0047C0  2167               	addwfc	(??___ftge+1)& (0+255),w,b
 16061  0047C2  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
 16062  0047C4  0E80               	movlw	128
 16063  0047C6  2168               	addwfc	(??___ftge+2)& (0+255),w,b
 16064  0047C8  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
 16065  0047CA                     l3107:
 16066                           
 16067                           ; BSR set to: 0
 16068                           
 16069                           ; BSR set to: 0
 16070  0047CA  0E00               	movlw	0
 16071  0047CC  1B60               	xorwf	___ftge@ff1& (0+255),f,b
 16072  0047CE  0E00               	movlw	0
 16073  0047D0  1B61               	xorwf	(___ftge@ff1+1)& (0+255),f,b
 16074  0047D2  0E80               	movlw	128
 16075  0047D4  1B62               	xorwf	(___ftge@ff1+2)& (0+255),f,b
 16076                           
 16077                           ; BSR set to: 0
 16078  0047D6  0E00               	movlw	0
 16079  0047D8  1B63               	xorwf	___ftge@ff2& (0+255),f,b
 16080  0047DA  0E00               	movlw	0
 16081  0047DC  1B64               	xorwf	(___ftge@ff2+1)& (0+255),f,b
 16082  0047DE  0E80               	movlw	128
 16083  0047E0  1B65               	xorwf	(___ftge@ff2+2)& (0+255),f,b
 16084  0047E2  5163               	movf	___ftge@ff2& (0+255),w,b
 16085  0047E4  5D60               	subwf	___ftge@ff1& (0+255),w,b
 16086  0047E6  5164               	movf	(___ftge@ff2+1)& (0+255),w,b
 16087  0047E8  5961               	subwfb	(___ftge@ff1+1)& (0+255),w,b
 16088  0047EA  5165               	movf	(___ftge@ff2+2)& (0+255),w,b
 16089  0047EC  5962               	subwfb	(___ftge@ff1+2)& (0+255),w,b
 16090  0047EE  B0D8               	btfsc	status,0,c
 16091  0047F0  D002               	goto	l7458
 16092                           
 16093                           ; BSR set to: 0
 16094  0047F2  90D8               	bcf	status,0,c
 16095  0047F4  0012               	return	
 16096  0047F6                     l7458:
 16097                           
 16098                           ; BSR set to: 0
 16099                           
 16100                           ; BSR set to: 0
 16101  0047F6  80D8               	bsf	status,0,c
 16102                           
 16103                           ; BSR set to: 0
 16104  0047F8  0012               	return	
 16105  0047FA                     __end_of___ftge:
 16106                           	opt stack 0
 16107                           tblptru	equ	0xFF8
 16108                           tblptrh	equ	0xFF7
 16109                           tblptrl	equ	0xFF6
 16110                           tablat	equ	0xFF5
 16111                           prodh	equ	0xFF4
 16112                           prodl	equ	0xFF3
 16113                           intcon	equ	0xFF2
 16114                           postinc0	equ	0xFEE
 16115                           wreg	equ	0xFE8
 16116                           indf1	equ	0xFE7
 16117                           postdec1	equ	0xFE5
 16118                           fsr1h	equ	0xFE2
 16119                           fsr1l	equ	0xFE1
 16120                           indf2	equ	0xFDF
 16121                           postinc2	equ	0xFDE
 16122                           postdec2	equ	0xFDD
 16123                           plusw2	equ	0xFDB
 16124                           fsr2h	equ	0xFDA
 16125                           fsr2l	equ	0xFD9
 16126                           status	equ	0xFD8
 16127                           
 16128 ;; *************** function _enviaComando *****************
 16129 ;; Defined at:
 16130 ;;		line 278 in file "LoRaWanCore.c"
 16131 ;; Parameters:    Size  Location     Type
 16132 ;;  cmd             2   28[BANK0 ] PTR const unsigned char 
 16133 ;;		 -> TxLoRaWan@comando(200), DataRate@comando(200), SetBandWidth@comando(200), SetSpreadingFactor@comando(200), 
 16134 ;;		 -> MacSave@comando(200), GetAdr@comando(200), SetAdr@comando(200), SetChannelLoRaWan@comando(200), 
 16135 ;;		 -> MAC_JOIN_OTAA(10), SYS_RESET(6), SetAppKey@comando(200), SetAppEUI@comando(200), 
 16136 ;;		 -> SetDevEUI@comando(200), GetDnctr@comando(200), 
 16137 ;;  tipoComando     1   30[BANK0 ] unsigned char 
 16138 ;; Auto vars:     Size  Location     Type
 16139 ;;  i               2   35[BANK0 ] unsigned int 
 16140 ;;  i               2   33[BANK0 ] unsigned int 
 16141 ;;  i               2   37[BANK0 ] unsigned int 
 16142 ;; Return value:  Size  Location     Type
 16143 ;;                  1    wreg      unsigned char 
 16144 ;; Registers used:
 16145 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16146 ;; Tracked objects:
 16147 ;;		On entry : 0/0
 16148 ;;		On exit  : 0/0
 16149 ;;		Unchanged: 0/0
 16150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16151 ;;      Params:         0       3       0       0       0       0       0       0       0
 16152 ;;      Locals:         0       6       0       0       0       0       0       0       0
 16153 ;;      Temps:          0       2       0       0       0       0       0       0       0
 16154 ;;      Totals:         0      11       0       0       0       0       0       0       0
 16155 ;;Total ram usage:       11 bytes
 16156 ;; Hardware stack levels used:    1
 16157 ;; Hardware stack levels required when called:   12
 16158 ;; This function calls:
 16159 ;;		_initRecebeDados
 16160 ;;		_parseLoRaWan
 16161 ;;		_putch
 16162 ;;		_strlen
 16163 ;; This function is called by:
 16164 ;;		_SetDevEUI
 16165 ;;		_SetAppEUI
 16166 ;;		_SetAppKey
 16167 ;;		_ResetModuloLoRaWan
 16168 ;;		_JoinLoRaWan
 16169 ;;		_SetChannelLoRaWan
 16170 ;;		_SetAdr
 16171 ;;		_MacSave
 16172 ;;		_SetSpreadingFactor
 16173 ;;		_SetBandWidth
 16174 ;;		_DataRate
 16175 ;;		_TxLoRaWan
 16176 ;;		_GetDnctr
 16177 ;;		_GetAdr
 16178 ;; This function uses a non-reentrant model
 16179 ;;
 16180                           
 16181                           	psect	text51
 16182  003644                     __ptext51:
 16183                           	opt stack 0
 16184  003644                     _enviaComando:
 16185                           	opt stack 17
 16186                           
 16187                           ;LoRaWanCore.c: 280: initRecebeDados();
 16188                           
 16189                           ; BSR set to: 0
 16190                           ;incstack = 0
 16191  003644  EC54  F02B         	call	_initRecebeDados	;wreg free
 16192                           
 16193                           ;LoRaWanCore.c: 282: switch (tipoComando)
 16194  003648  D041               	goto	l2434
 16195  00364A                     
 16196                           ;LoRaWanCore.c: 285: {
 16197                           ;LoRaWanCore.c: 286: for (uint16_t i = 0; i < strlen(MAC); i++)
 16198  00364A  0E00               	movlw	0
 16199  00364C  0100               	movlb	0	; () banked
 16200  00364E  6F82               	movwf	(enviaComando@i+1)& (0+255),b
 16201  003650  0E00               	movlw	0
 16202  003652  6F81               	movwf	enviaComando@i& (0+255),b
 16203  003654  D00D               	goto	l2436
 16204  003656                     
 16205                           ; BSR set to: 0
 16206                           ;LoRaWanCore.c: 287: {
 16207                           ;LoRaWanCore.c: 288: putch((char)MAC[i]);
 16208                           
 16209                           ; BSR set to: 0
 16210  003656  0EC5               	movlw	low _MAC
 16211  003658  2581               	addwf	enviaComando@i& (0+255),w,b
 16212  00365A  6EF6               	movwf	tblptrl,c
 16213  00365C  0E7D               	movlw	high _MAC
 16214  00365E  2182               	addwfc	(enviaComando@i+1)& (0+255),w,b
 16215  003660  6EF7               	movwf	tblptrh,c
 16216  003662                     	if	0	;There are less than 3 active tblptr bytes
 16217  003662                     	endif
 16218  003662  0008               	tblrd		*
 16219  003664  50F5               	movf	tablat,w,c
 16220  003666  EC78  F02B         	call	_putch
 16221  00366A  0100               	movlb	0	; () banked
 16222  00366C  4B81               	infsnz	enviaComando@i& (0+255),f,b
 16223  00366E  2B82               	incf	(enviaComando@i+1)& (0+255),f,b
 16224  003670                     l2436:
 16225                           
 16226                           ; BSR set to: 0
 16227                           
 16228                           ; BSR set to: 0
 16229  003670  0EC5               	movlw	low _MAC
 16230  003672  6F60               	movwf	strlen@s& (0+255),b
 16231  003674  0E7D               	movlw	high _MAC
 16232  003676  6F61               	movwf	(strlen@s+1)& (0+255),b
 16233  003678  ECD6  F027         	call	_strlen	;wreg free
 16234  00367C  0100               	movlb	0	; () banked
 16235  00367E  5160               	movf	?_strlen& (0+255),w,b
 16236  003680  5D81               	subwf	enviaComando@i& (0+255),w,b
 16237  003682  5161               	movf	(?_strlen+1)& (0+255),w,b
 16238  003684  5982               	subwfb	(enviaComando@i+1)& (0+255),w,b
 16239  003686  B0D8               	btfsc	status,0,c
 16240  003688  D029               	goto	l2439
 16241  00368A  D7E5               	goto	l2437
 16242  00368C                     
 16243                           ; BSR set to: 0
 16244                           ;LoRaWanCore.c: 292: {
 16245                           ;LoRaWanCore.c: 293: for (uint16_t i = 0; i < strlen(SYS); i++)
 16246                           
 16247                           ; BSR set to: 0
 16248  00368C  0E00               	movlw	0
 16249  00368E  6F84               	movwf	(enviaComando@i_4906+1)& (0+255),b
 16250  003690  0E00               	movlw	0
 16251  003692  6F83               	movwf	enviaComando@i_4906& (0+255),b
 16252  003694  D00D               	goto	l2441
 16253  003696                     
 16254                           ; BSR set to: 0
 16255                           ;LoRaWanCore.c: 294: {
 16256                           ;LoRaWanCore.c: 295: putch((char)SYS[i]);
 16257                           
 16258                           ; BSR set to: 0
 16259  003696  0EBB               	movlw	low _SYS
 16260  003698  2583               	addwf	enviaComando@i_4906& (0+255),w,b
 16261  00369A  6EF6               	movwf	tblptrl,c
 16262  00369C  0E7D               	movlw	high _SYS
 16263  00369E  2184               	addwfc	(enviaComando@i_4906+1)& (0+255),w,b
 16264  0036A0  6EF7               	movwf	tblptrh,c
 16265  0036A2                     	if	0	;There are less than 3 active tblptr bytes
 16266  0036A2                     	endif
 16267  0036A2  0008               	tblrd		*
 16268  0036A4  50F5               	movf	tablat,w,c
 16269  0036A6  EC78  F02B         	call	_putch
 16270  0036AA  0100               	movlb	0	; () banked
 16271  0036AC  4B83               	infsnz	enviaComando@i_4906& (0+255),f,b
 16272  0036AE  2B84               	incf	(enviaComando@i_4906+1)& (0+255),f,b
 16273  0036B0                     l2441:
 16274                           
 16275                           ; BSR set to: 0
 16276                           
 16277                           ; BSR set to: 0
 16278  0036B0  0EBB               	movlw	low _SYS
 16279  0036B2  6F60               	movwf	strlen@s& (0+255),b
 16280  0036B4  0E7D               	movlw	high _SYS
 16281  0036B6  6F61               	movwf	(strlen@s+1)& (0+255),b
 16282  0036B8  ECD6  F027         	call	_strlen	;wreg free
 16283  0036BC  0100               	movlb	0	; () banked
 16284  0036BE  5160               	movf	?_strlen& (0+255),w,b
 16285  0036C0  5D83               	subwf	enviaComando@i_4906& (0+255),w,b
 16286  0036C2  5161               	movf	(?_strlen+1)& (0+255),w,b
 16287  0036C4  5984               	subwfb	(enviaComando@i_4906+1)& (0+255),w,b
 16288  0036C6  B0D8               	btfsc	status,0,c
 16289  0036C8  D009               	goto	l2439
 16290  0036CA  D7E5               	goto	l2442
 16291  0036CC                     l2434:
 16292                           
 16293                           ; BSR set to: 0
 16294  0036CC  0100               	movlb	0	; () banked
 16295  0036CE  517E               	movf	enviaComando@tipoComando& (0+255),w,b
 16296                           
 16297                           ; Switch size 1, requested type "space"
 16298                           ; Number of cases is 2, Range of values is 0 to 1
 16299                           ; switch strategies available:
 16300                           ; Name         Instructions Cycles
 16301                           ; simple_byte            7     4 (average)
 16302                           ;	Chosen strategy is simple_byte
 16303  0036D0  0A00               	xorlw	0	; case 0
 16304  0036D2  B4D8               	btfsc	status,2,c
 16305  0036D4  D7BA               	goto	l2435
 16306  0036D6  0A01               	xorlw	1	; case 1
 16307  0036D8  B4D8               	btfsc	status,2,c
 16308  0036DA  D7D8               	goto	l2440
 16309  0036DC                     l2439:
 16310                           
 16311                           ; BSR set to: 0
 16312                           ;LoRaWanCore.c: 301: for (uint16_t i = 0; i < strlen(cmd); i++)
 16313                           
 16314                           ; BSR set to: 0
 16315  0036DC  0E00               	movlw	0
 16316  0036DE  6F86               	movwf	(enviaComando@i_4907+1)& (0+255),b
 16317  0036E0  0E00               	movlw	0
 16318  0036E2  6F85               	movwf	enviaComando@i_4907& (0+255),b
 16319  0036E4  D01B               	goto	l2444
 16320  0036E6                     
 16321                           ; BSR set to: 0
 16322                           ;LoRaWanCore.c: 302: {
 16323                           ;LoRaWanCore.c: 303: putch((char)cmd[i]);
 16324                           
 16325                           ; BSR set to: 0
 16326  0036E6  5185               	movf	enviaComando@i_4907& (0+255),w,b
 16327  0036E8  257C               	addwf	enviaComando@cmd& (0+255),w,b
 16328  0036EA  6F7F               	movwf	??_enviaComando& (0+255),b
 16329  0036EC  5186               	movf	(enviaComando@i_4907+1)& (0+255),w,b
 16330  0036EE  217D               	addwfc	(enviaComando@cmd+1)& (0+255),w,b
 16331  0036F0  6F80               	movwf	(??_enviaComando+1)& (0+255),b
 16332  0036F2  C07F  FFF6         	movff	??_enviaComando,tblptrl
 16333  0036F6  C080  FFF7         	movff	??_enviaComando+1,tblptrh
 16334  0036FA  6AF8               	clrf	tblptru,c
 16335  0036FC  0E07               	movlw	(high __ramtop+-1)
 16336  0036FE  64F7               	cpfsgt	tblptrh,c
 16337  003700  D003               	bra	u7317
 16338  003702  0008               	tblrd		*
 16339  003704  50F5               	movf	tablat,w,c
 16340  003706  D005               	bra	u7310
 16341  003708                     u7317:
 16342  003708  CFF6 FFE9          	movff	tblptrl,fsr0l
 16343  00370C  CFF7 FFEA          	movff	tblptrh,fsr0h
 16344  003710  50EF               	movf	indf0,w,c
 16345  003712                     u7310:
 16346  003712  EC78  F02B         	call	_putch
 16347  003716  0100               	movlb	0	; () banked
 16348  003718  4B85               	infsnz	enviaComando@i_4907& (0+255),f,b
 16349  00371A  2B86               	incf	(enviaComando@i_4907+1)& (0+255),f,b
 16350  00371C                     l2444:
 16351                           
 16352                           ; BSR set to: 0
 16353                           
 16354                           ; BSR set to: 0
 16355  00371C  C07C  F060         	movff	enviaComando@cmd,strlen@s
 16356  003720  C07D  F061         	movff	enviaComando@cmd+1,strlen@s+1
 16357  003724  ECD6  F027         	call	_strlen	;wreg free
 16358  003728  0100               	movlb	0	; () banked
 16359  00372A  5160               	movf	?_strlen& (0+255),w,b
 16360  00372C  5D85               	subwf	enviaComando@i_4907& (0+255),w,b
 16361  00372E  5161               	movf	(?_strlen+1)& (0+255),w,b
 16362  003730  5986               	subwfb	(enviaComando@i_4907+1)& (0+255),w,b
 16363  003732  A0D8               	btfss	status,0,c
 16364  003734  D7D8               	goto	l2445
 16365                           
 16366                           ; BSR set to: 0
 16367                           ;LoRaWanCore.c: 304: }
 16368                           ;LoRaWanCore.c: 306: putch(0x0D);
 16369                           
 16370                           ; BSR set to: 0
 16371  003736  0E0D               	movlw	13
 16372  003738  EC78  F02B         	call	_putch
 16373                           
 16374                           ;LoRaWanCore.c: 307: putch(0x0A);
 16375  00373C  0E0A               	movlw	10
 16376  00373E  EC78  F02B         	call	_putch
 16377                           
 16378                           ;LoRaWanCore.c: 309: return parseLoRaWan();
 16379  003742  EC8B  F021         	call	_parseLoRaWan	;wreg free
 16380  003746  0012               	return	
 16381  003748                     __end_of_enviaComando:
 16382                           	opt stack 0
 16383                           tblptru	equ	0xFF8
 16384                           tblptrh	equ	0xFF7
 16385                           tblptrl	equ	0xFF6
 16386                           tablat	equ	0xFF5
 16387                           prodh	equ	0xFF4
 16388                           prodl	equ	0xFF3
 16389                           intcon	equ	0xFF2
 16390                           indf0	equ	0xFEF
 16391                           postinc0	equ	0xFEE
 16392                           fsr0h	equ	0xFEA
 16393                           fsr0l	equ	0xFE9
 16394                           wreg	equ	0xFE8
 16395                           indf1	equ	0xFE7
 16396                           postdec1	equ	0xFE5
 16397                           fsr1h	equ	0xFE2
 16398                           fsr1l	equ	0xFE1
 16399                           indf2	equ	0xFDF
 16400                           postinc2	equ	0xFDE
 16401                           postdec2	equ	0xFDD
 16402                           plusw2	equ	0xFDB
 16403                           fsr2h	equ	0xFDA
 16404                           fsr2l	equ	0xFD9
 16405                           status	equ	0xFD8
 16406                           
 16407 ;; *************** function _strlen *****************
 16408 ;; Defined at:
 16409 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strlen.c"
 16410 ;; Parameters:    Size  Location     Type
 16411 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 16412 ;;		 -> recebeByteLoRaWan@frameData(100), SYS(5), MAC(5), TxLoRaWan@comando(200), 
 16413 ;;		 -> DataRate@comando(200), SetBandWidth@comando(200), SetSpreadingFactor@comando(200), MacSave@comando(200), 
 16414 ;;		 -> GetAdr@comando(200), SetAdr@comando(200), SetChannelLoRaWan@comando(200), MAC_JOIN_OTAA(10), 
 16415 ;;		 -> SYS_RESET(6), SetAppKey@comando(200), SetAppEUI@comando(200), SetDevEUI@comando(200), 
 16416 ;;		 -> GetDnctr@comando(200), STR_23(16), STR_22(7), STR_21(14), 
 16417 ;;		 -> STR_20(8), STR_19(8), STR_18(10), STR_17(17), 
 16418 ;;		 -> STR_16(11), STR_15(5), STR_14(32), STR_13(7), 
 16419 ;;		 -> STR_12(11), STR_11(11), STR_10(14), STR_9(3), 
 16420 ;; Auto vars:     Size  Location     Type
 16421 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
 16422 ;;		 -> recebeByteLoRaWan@frameData(100), SYS(5), MAC(5), TxLoRaWan@comando(200), 
 16423 ;;		 -> DataRate@comando(200), SetBandWidth@comando(200), SetSpreadingFactor@comando(200), MacSave@comando(200), 
 16424 ;;		 -> GetAdr@comando(200), SetAdr@comando(200), SetChannelLoRaWan@comando(200), MAC_JOIN_OTAA(10), 
 16425 ;;		 -> SYS_RESET(6), SetAppKey@comando(200), SetAppEUI@comando(200), SetDevEUI@comando(200), 
 16426 ;;		 -> GetDnctr@comando(200), STR_23(16), STR_22(7), STR_21(14), 
 16427 ;;		 -> STR_20(8), STR_19(8), STR_18(10), STR_17(17), 
 16428 ;;		 -> STR_16(11), STR_15(5), STR_14(32), STR_13(7), 
 16429 ;;		 -> STR_12(11), STR_11(11), STR_10(14), STR_9(3), 
 16430 ;; Return value:  Size  Location     Type
 16431 ;;                  2    0[BANK0 ] unsigned int 
 16432 ;; Registers used:
 16433 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 16434 ;; Tracked objects:
 16435 ;;		On entry : 0/0
 16436 ;;		On exit  : 0/0
 16437 ;;		Unchanged: 0/0
 16438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16439 ;;      Params:         0       2       0       0       0       0       0       0       0
 16440 ;;      Locals:         0       2       0       0       0       0       0       0       0
 16441 ;;      Temps:          0       2       0       0       0       0       0       0       0
 16442 ;;      Totals:         0       6       0       0       0       0       0       0       0
 16443 ;;Total ram usage:        6 bytes
 16444 ;; Hardware stack levels used:    1
 16445 ;; Hardware stack levels required when called:   10
 16446 ;; This function calls:
 16447 ;;		Nothing
 16448 ;; This function is called by:
 16449 ;;		_enviaComando
 16450 ;; This function uses a non-reentrant model
 16451 ;;
 16452                           
 16453                           	psect	text52
 16454  004FAC                     __ptext52:
 16455                           	opt stack 0
 16456  004FAC                     _strlen:
 16457                           	opt stack 18
 16458                           
 16459                           ;incstack = 0
 16460  004FAC  C060  F064         	movff	strlen@s,strlen@cp
 16461  004FB0  C061  F065         	movff	strlen@s+1,strlen@cp+1
 16462  004FB4  D003               	goto	l3419
 16463  004FB6  0100               	movlb	0	; () banked
 16464  004FB8  4B64               	infsnz	strlen@cp& (0+255),f,b
 16465  004FBA  2B65               	incf	(strlen@cp+1)& (0+255),f,b
 16466  004FBC                     l3419:
 16467                           
 16468                           ; BSR set to: 0
 16469  004FBC  C064  FFF6         	movff	strlen@cp,tblptrl
 16470  004FC0  C065  FFF7         	movff	strlen@cp+1,tblptrh
 16471  004FC4  6AF8               	clrf	tblptru,c
 16472  004FC6  0E07               	movlw	(high __ramtop+-1)
 16473  004FC8  64F7               	cpfsgt	tblptrh,c
 16474  004FCA  D003               	bra	u6627
 16475  004FCC  0008               	tblrd		*
 16476  004FCE  50F5               	movf	tablat,w,c
 16477  004FD0  D005               	bra	u6620
 16478  004FD2                     u6627:
 16479  004FD2  CFF6 FFE9          	movff	tblptrl,fsr0l
 16480  004FD6  CFF7 FFEA          	movff	tblptrh,fsr0h
 16481  004FDA  50EF               	movf	indf0,w,c
 16482  004FDC                     u6620:
 16483  004FDC  0900               	iorlw	0
 16484  004FDE  A4D8               	btfss	status,2,c
 16485  004FE0  D7EA               	goto	l3420
 16486  004FE2  C060  F062         	movff	strlen@s,??_strlen
 16487  004FE6  C061  F063         	movff	strlen@s+1,??_strlen+1
 16488  004FEA  0100               	movlb	0	; () banked
 16489  004FEC  1F62               	comf	??_strlen& (0+255),f,b
 16490  004FEE  1F63               	comf	(??_strlen+1)& (0+255),f,b
 16491  004FF0  4B62               	infsnz	??_strlen& (0+255),f,b
 16492  004FF2  2B63               	incf	(??_strlen+1)& (0+255),f,b
 16493  004FF4  5164               	movf	strlen@cp& (0+255),w,b
 16494  004FF6  2562               	addwf	??_strlen& (0+255),w,b
 16495  004FF8  6F60               	movwf	?_strlen& (0+255),b
 16496  004FFA  5165               	movf	(strlen@cp+1)& (0+255),w,b
 16497  004FFC  2163               	addwfc	(??_strlen+1)& (0+255),w,b
 16498  004FFE  6F61               	movwf	(?_strlen+1)& (0+255),b
 16499  005000  0012               	return	
 16500  005002                     __end_of_strlen:
 16501                           	opt stack 0
 16502                           tblptru	equ	0xFF8
 16503                           tblptrh	equ	0xFF7
 16504                           tblptrl	equ	0xFF6
 16505                           tablat	equ	0xFF5
 16506                           prodh	equ	0xFF4
 16507                           prodl	equ	0xFF3
 16508                           intcon	equ	0xFF2
 16509                           indf0	equ	0xFEF
 16510                           postinc0	equ	0xFEE
 16511                           fsr0h	equ	0xFEA
 16512                           fsr0l	equ	0xFE9
 16513                           wreg	equ	0xFE8
 16514                           indf1	equ	0xFE7
 16515                           postdec1	equ	0xFE5
 16516                           fsr1h	equ	0xFE2
 16517                           fsr1l	equ	0xFE1
 16518                           indf2	equ	0xFDF
 16519                           postinc2	equ	0xFDE
 16520                           postdec2	equ	0xFDD
 16521                           plusw2	equ	0xFDB
 16522                           fsr2h	equ	0xFDA
 16523                           fsr2l	equ	0xFD9
 16524                           status	equ	0xFD8
 16525                           
 16526 ;; *************** function _putch *****************
 16527 ;; Defined at:
 16528 ;;		line 46 in file "uart/uart.c"
 16529 ;; Parameters:    Size  Location     Type
 16530 ;;  data            1    wreg     unsigned char 
 16531 ;; Auto vars:     Size  Location     Type
 16532 ;;  data            1    0[BANK0 ] unsigned char 
 16533 ;; Return value:  Size  Location     Type
 16534 ;;                  1    wreg      void 
 16535 ;; Registers used:
 16536 ;;		wreg
 16537 ;; Tracked objects:
 16538 ;;		On entry : 0/0
 16539 ;;		On exit  : 0/0
 16540 ;;		Unchanged: 0/0
 16541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16542 ;;      Params:         0       0       0       0       0       0       0       0       0
 16543 ;;      Locals:         0       1       0       0       0       0       0       0       0
 16544 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16545 ;;      Totals:         0       1       0       0       0       0       0       0       0
 16546 ;;Total ram usage:        1 bytes
 16547 ;; Hardware stack levels used:    1
 16548 ;; Hardware stack levels required when called:   10
 16549 ;; This function calls:
 16550 ;;		Nothing
 16551 ;; This function is called by:
 16552 ;;		_main
 16553 ;;		_enviaComando
 16554 ;;		_gen_send
 16555 ;;		_sendXBeePriv
 16556 ;; This function uses a non-reentrant model
 16557 ;;
 16558                           
 16559                           	psect	text53
 16560  0056F0                     __ptext53:
 16561                           	opt stack 0
 16562  0056F0                     _putch:
 16563                           	opt stack 20
 16564                           
 16565                           ; BSR set to: 0
 16566                           ;incstack = 0
 16567                           ;putch@data stored from wreg
 16568  0056F0  0100               	movlb	0	; () banked
 16569  0056F2  6F60               	movwf	putch@data& (0+255),b
 16570  0056F4                     
 16571                           ;uart.c: 48: while (!TXIF);
 16572  0056F4  A89E               	btfss	3998,4,c	;volatile
 16573  0056F6  D7FE               	goto	l8084
 16574                           
 16575                           ;uart.c: 49: TXREG=data;
 16576  0056F8  C060  FFAD         	movff	putch@data,4013	;volatile
 16577  0056FC  0012               	return		;funcret
 16578  0056FE                     __end_of_putch:
 16579                           	opt stack 0
 16580                           tblptru	equ	0xFF8
 16581                           tblptrh	equ	0xFF7
 16582                           tblptrl	equ	0xFF6
 16583                           tablat	equ	0xFF5
 16584                           prodh	equ	0xFF4
 16585                           prodl	equ	0xFF3
 16586                           intcon	equ	0xFF2
 16587                           indf0	equ	0xFEF
 16588                           postinc0	equ	0xFEE
 16589                           fsr0h	equ	0xFEA
 16590                           fsr0l	equ	0xFE9
 16591                           wreg	equ	0xFE8
 16592                           indf1	equ	0xFE7
 16593                           postdec1	equ	0xFE5
 16594                           fsr1h	equ	0xFE2
 16595                           fsr1l	equ	0xFE1
 16596                           indf2	equ	0xFDF
 16597                           postinc2	equ	0xFDE
 16598                           postdec2	equ	0xFDD
 16599                           plusw2	equ	0xFDB
 16600                           fsr2h	equ	0xFDA
 16601                           fsr2l	equ	0xFD9
 16602                           status	equ	0xFD8
 16603                           
 16604 ;; *************** function _parseLoRaWan *****************
 16605 ;; Defined at:
 16606 ;;		line 312 in file "LoRaWanCore.c"
 16607 ;; Parameters:    Size  Location     Type
 16608 ;;		None
 16609 ;; Auto vars:     Size  Location     Type
 16610 ;;  previous        4   20[BANK0 ] unsigned long 
 16611 ;;  intervalMAX     2   24[BANK0 ] unsigned int 
 16612 ;;  timeout         1   27[BANK0 ] unsigned char 
 16613 ;;  status          1   26[BANK0 ] unsigned char 
 16614 ;; Return value:  Size  Location     Type
 16615 ;;                  1    wreg      unsigned char 
 16616 ;; Registers used:
 16617 ;;		wreg, status,2, status,0, cstack
 16618 ;; Tracked objects:
 16619 ;;		On entry : 0/0
 16620 ;;		On exit  : 0/0
 16621 ;;		Unchanged: 0/0
 16622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16623 ;;      Params:         0       0       0       0       0       0       0       0       0
 16624 ;;      Locals:         0       8       0       0       0       0       0       0       0
 16625 ;;      Temps:          0      12       0       0       0       0       0       0       0
 16626 ;;      Totals:         0      20       0       0       0       0       0       0       0
 16627 ;;Total ram usage:       20 bytes
 16628 ;; Hardware stack levels used:    1
 16629 ;; Hardware stack levels required when called:   11
 16630 ;; This function calls:
 16631 ;;		_millis
 16632 ;; This function is called by:
 16633 ;;		_JoinLoRaWan
 16634 ;;		_TxLoRaWan
 16635 ;;		_enviaComando
 16636 ;; This function uses a non-reentrant model
 16637 ;;
 16638                           
 16639                           	psect	text54
 16640  004316                     __ptext54:
 16641                           	opt stack 0
 16642  004316                     _parseLoRaWan:
 16643                           	opt stack 18
 16644                           
 16645                           ;LoRaWanCore.c: 314: uint8_t status=0xFF;
 16646                           
 16647                           ;incstack = 0
 16648  004316  0100               	movlb	0	; () banked
 16649  004318  697A               	setf	parseLoRaWan@status& (0+255),b
 16650                           
 16651                           ; BSR set to: 0
 16652                           ;LoRaWanCore.c: 315: uint16_t intervalMAX=60000;
 16653  00431A  0EEA               	movlw	234
 16654  00431C  6F79               	movwf	(parseLoRaWan@intervalMAX+1)& (0+255),b
 16655  00431E  0E60               	movlw	96
 16656  004320  6F78               	movwf	parseLoRaWan@intervalMAX& (0+255),b
 16657                           
 16658                           ;LoRaWanCore.c: 316: bool timeout=0;
 16659  004322  0E00               	movlw	0
 16660  004324  6F7B               	movwf	parseLoRaWan@timeout& (0+255),b
 16661                           
 16662                           ; BSR set to: 0
 16663                           ;LoRaWanCore.c: 317: uint32_t previous=millis();
 16664  004326  ECFA  F02A         	call	_millis	;wreg free
 16665  00432A  C060  F074         	movff	?_millis,parseLoRaWan@previous
 16666  00432E  C061  F075         	movff	?_millis+1,parseLoRaWan@previous+1
 16667  004332  C062  F076         	movff	?_millis+2,parseLoRaWan@previous+2
 16668  004336  C063  F077         	movff	?_millis+3,parseLoRaWan@previous+3
 16669                           
 16670                           ;LoRaWanCore.c: 319: while ((!timeout) && (!novaMsgLoRaWan))
 16671  00433A  D033               	goto	l2452
 16672  00433C                     
 16673                           ;LoRaWanCore.c: 320: {
 16674                           ;LoRaWanCore.c: 321: if ((millis()-previous) > intervalMAX)
 16675  00433C  C074  F068         	movff	parseLoRaWan@previous,??_parseLoRaWan
 16676  004340  C075  F069         	movff	parseLoRaWan@previous+1,??_parseLoRaWan+1
 16677  004344  C076  F06A         	movff	parseLoRaWan@previous+2,??_parseLoRaWan+2
 16678  004348  C077  F06B         	movff	parseLoRaWan@previous+3,??_parseLoRaWan+3
 16679  00434C  0100               	movlb	0	; () banked
 16680  00434E  1F68               	comf	??_parseLoRaWan& (0+255),f,b
 16681  004350  1F69               	comf	(??_parseLoRaWan+1)& (0+255),f,b
 16682  004352  1F6A               	comf	(??_parseLoRaWan+2)& (0+255),f,b
 16683  004354  1F6B               	comf	(??_parseLoRaWan+3)& (0+255),f,b
 16684  004356  2B68               	incf	??_parseLoRaWan& (0+255),f,b
 16685  004358  0E00               	movlw	0
 16686  00435A  2369               	addwfc	(??_parseLoRaWan+1)& (0+255),f,b
 16687  00435C  236A               	addwfc	(??_parseLoRaWan+2)& (0+255),f,b
 16688  00435E  236B               	addwfc	(??_parseLoRaWan+3)& (0+255),f,b
 16689  004360  ECFA  F02A         	call	_millis	;wreg free
 16690  004364  0100               	movlb	0	; () banked
 16691  004366  5168               	movf	??_parseLoRaWan& (0+255),w,b
 16692  004368  2560               	addwf	?_millis& (0+255),w,b
 16693  00436A  6F6C               	movwf	(??_parseLoRaWan+4)& (0+255),b
 16694  00436C  5169               	movf	(??_parseLoRaWan+1)& (0+255),w,b
 16695  00436E  2161               	addwfc	(?_millis+1)& (0+255),w,b
 16696  004370  6F6D               	movwf	(??_parseLoRaWan+5)& (0+255),b
 16697  004372  516A               	movf	(??_parseLoRaWan+2)& (0+255),w,b
 16698  004374  2162               	addwfc	(?_millis+2)& (0+255),w,b
 16699  004376  6F6E               	movwf	(??_parseLoRaWan+6)& (0+255),b
 16700  004378  516B               	movf	(??_parseLoRaWan+3)& (0+255),w,b
 16701  00437A  2163               	addwfc	(?_millis+3)& (0+255),w,b
 16702  00437C  6F6F               	movwf	(??_parseLoRaWan+7)& (0+255),b
 16703  00437E  5178               	movf	parseLoRaWan@intervalMAX& (0+255),w,b
 16704  004380  6F70               	movwf	(??_parseLoRaWan+8)& (0+255),b
 16705  004382  5179               	movf	(parseLoRaWan@intervalMAX+1)& (0+255),w,b
 16706  004384  6F71               	movwf	(??_parseLoRaWan+9)& (0+255),b
 16707  004386  6B72               	clrf	(??_parseLoRaWan+10)& (0+255),b
 16708  004388  6B73               	clrf	(??_parseLoRaWan+11)& (0+255),b
 16709  00438A  516C               	movf	(??_parseLoRaWan+4)& (0+255),w,b
 16710  00438C  5D70               	subwf	(??_parseLoRaWan+8)& (0+255),w,b
 16711  00438E  516D               	movf	(??_parseLoRaWan+5)& (0+255),w,b
 16712  004390  5971               	subwfb	(??_parseLoRaWan+9)& (0+255),w,b
 16713  004392  516E               	movf	(??_parseLoRaWan+6)& (0+255),w,b
 16714  004394  5972               	subwfb	(??_parseLoRaWan+10)& (0+255),w,b
 16715  004396  516F               	movf	(??_parseLoRaWan+7)& (0+255),w,b
 16716  004398  5973               	subwfb	(??_parseLoRaWan+11)& (0+255),w,b
 16717  00439A  B0D8               	btfsc	status,0,c
 16718  00439C  D002               	goto	l2452
 16719                           
 16720                           ; BSR set to: 0
 16721                           ;LoRaWanCore.c: 322: {
 16722                           ;LoRaWanCore.c: 323: timeout=1;
 16723  00439E  0E01               	movlw	1
 16724  0043A0  6F7B               	movwf	parseLoRaWan@timeout& (0+255),b
 16725  0043A2                     l2452:
 16726                           
 16727                           ; BSR set to: 0
 16728  0043A2  0100               	movlb	0	; () banked
 16729  0043A4  517B               	movf	parseLoRaWan@timeout& (0+255),w,b
 16730  0043A6  A4D8               	btfss	status,2,c
 16731  0043A8  D003               	goto	u6600
 16732                           
 16733                           ; BSR set to: 0
 16734  0043AA  505A               	movf	_novaMsgLoRaWan,w,c	;volatile
 16735  0043AC  B4D8               	btfsc	status,2,c
 16736  0043AE  D7C6               	goto	l2451
 16737  0043B0                     u6600:
 16738                           
 16739                           ; BSR set to: 0
 16740                           ;LoRaWanCore.c: 324: }
 16741                           ;LoRaWanCore.c: 325: }
 16742                           ;LoRaWanCore.c: 327: if (novaMsgLoRaWan)
 16743                           
 16744                           ; BSR set to: 0
 16745                           
 16746                           ; BSR set to: 0
 16747  0043B0  505A               	movf	_novaMsgLoRaWan,w,c	;volatile
 16748  0043B2  B4D8               	btfsc	status,2,c
 16749  0043B4  D004               	goto	l2456
 16750                           
 16751                           ; BSR set to: 0
 16752                           ;LoRaWanCore.c: 328: {
 16753                           ;LoRaWanCore.c: 329: status=responseLoRaWan;
 16754  0043B6  C1FE  F07A         	movff	_responseLoRaWan,parseLoRaWan@status	;volatile
 16755                           
 16756                           ; BSR set to: 0
 16757                           ;LoRaWanCore.c: 330: novaMsgLoRaWan=0;
 16758  0043BA  0E00               	movlw	0
 16759  0043BC  6E5A               	movwf	_novaMsgLoRaWan,c	;volatile
 16760  0043BE                     l2456:
 16761                           
 16762                           ; BSR set to: 0
 16763                           ;LoRaWanCore.c: 331: }
 16764                           ;LoRaWanCore.c: 333: return status;
 16765  0043BE  517A               	movf	parseLoRaWan@status& (0+255),w,b
 16766  0043C0  0012               	return	
 16767  0043C2                     __end_of_parseLoRaWan:
 16768                           	opt stack 0
 16769                           tblptru	equ	0xFF8
 16770                           tblptrh	equ	0xFF7
 16771                           tblptrl	equ	0xFF6
 16772                           tablat	equ	0xFF5
 16773                           prodh	equ	0xFF4
 16774                           prodl	equ	0xFF3
 16775                           intcon	equ	0xFF2
 16776                           indf0	equ	0xFEF
 16777                           postinc0	equ	0xFEE
 16778                           fsr0h	equ	0xFEA
 16779                           fsr0l	equ	0xFE9
 16780                           wreg	equ	0xFE8
 16781                           indf1	equ	0xFE7
 16782                           postdec1	equ	0xFE5
 16783                           fsr1h	equ	0xFE2
 16784                           fsr1l	equ	0xFE1
 16785                           indf2	equ	0xFDF
 16786                           postinc2	equ	0xFDE
 16787                           postdec2	equ	0xFDD
 16788                           plusw2	equ	0xFDB
 16789                           fsr2h	equ	0xFDA
 16790                           fsr2l	equ	0xFD9
 16791                           status	equ	0xFD8
 16792                           
 16793 ;; *************** function _millis *****************
 16794 ;; Defined at:
 16795 ;;		line 48 in file "Timer.c"
 16796 ;; Parameters:    Size  Location     Type
 16797 ;;		None
 16798 ;; Auto vars:     Size  Location     Type
 16799 ;;  m               4    4[BANK0 ] unsigned long 
 16800 ;; Return value:  Size  Location     Type
 16801 ;;                  4    0[BANK0 ] unsigned long 
 16802 ;; Registers used:
 16803 ;;		None
 16804 ;; Tracked objects:
 16805 ;;		On entry : 0/0
 16806 ;;		On exit  : 0/0
 16807 ;;		Unchanged: 0/0
 16808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16809 ;;      Params:         0       4       0       0       0       0       0       0       0
 16810 ;;      Locals:         0       4       0       0       0       0       0       0       0
 16811 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16812 ;;      Totals:         0       8       0       0       0       0       0       0       0
 16813 ;;Total ram usage:        8 bytes
 16814 ;; Hardware stack levels used:    1
 16815 ;; Hardware stack levels required when called:   10
 16816 ;; This function calls:
 16817 ;;		Nothing
 16818 ;; This function is called by:
 16819 ;;		_delay
 16820 ;;		_main
 16821 ;;		_parseLoRaWan
 16822 ;;		_parse_message
 16823 ;;		_txZBStatusResponse
 16824 ;; This function uses a non-reentrant model
 16825 ;;
 16826                           
 16827                           	psect	text55
 16828  0055F4                     __ptext55:
 16829                           	opt stack 0
 16830  0055F4                     _millis:
 16831                           	opt stack 20
 16832                           
 16833                           ;Timer.c: 50: CCP1IE=0;
 16834                           
 16835                           ; BSR set to: 0
 16836                           ;incstack = 0
 16837  0055F4  949D               	bcf	3997,2,c	;volatile
 16838                           
 16839                           ;Timer.c: 51: uint32_t m=ticks;
 16840  0055F6  C32A  F064         	movff	_ticks,millis@m	;volatile
 16841  0055FA  C32B  F065         	movff	_ticks+1,millis@m+1	;volatile
 16842  0055FE  C32C  F066         	movff	_ticks+2,millis@m+2	;volatile
 16843  005602  C32D  F067         	movff	_ticks+3,millis@m+3	;volatile
 16844                           
 16845                           ;Timer.c: 52: CCP1IE=1;
 16846  005606  849D               	bsf	3997,2,c	;volatile
 16847                           
 16848                           ;Timer.c: 54: return m;
 16849  005608  C064  F060         	movff	millis@m,?_millis
 16850  00560C  C065  F061         	movff	millis@m+1,?_millis+1
 16851  005610  C066  F062         	movff	millis@m+2,?_millis+2
 16852  005614  C067  F063         	movff	millis@m+3,?_millis+3
 16853  005618  0012               	return		;funcret
 16854  00561A                     __end_of_millis:
 16855                           	opt stack 0
 16856                           tblptru	equ	0xFF8
 16857                           tblptrh	equ	0xFF7
 16858                           tblptrl	equ	0xFF6
 16859                           tablat	equ	0xFF5
 16860                           prodh	equ	0xFF4
 16861                           prodl	equ	0xFF3
 16862                           intcon	equ	0xFF2
 16863                           indf0	equ	0xFEF
 16864                           postinc0	equ	0xFEE
 16865                           fsr0h	equ	0xFEA
 16866                           fsr0l	equ	0xFE9
 16867                           wreg	equ	0xFE8
 16868                           indf1	equ	0xFE7
 16869                           postdec1	equ	0xFE5
 16870                           fsr1h	equ	0xFE2
 16871                           fsr1l	equ	0xFE1
 16872                           indf2	equ	0xFDF
 16873                           postinc2	equ	0xFDE
 16874                           postdec2	equ	0xFDD
 16875                           plusw2	equ	0xFDB
 16876                           fsr2h	equ	0xFDA
 16877                           fsr2l	equ	0xFD9
 16878                           status	equ	0xFD8
 16879                           
 16880 ;; *************** function _initRecebeDados *****************
 16881 ;; Defined at:
 16882 ;;		line 336 in file "LoRaWanCore.c"
 16883 ;; Parameters:    Size  Location     Type
 16884 ;;		None
 16885 ;; Auto vars:     Size  Location     Type
 16886 ;;		None
 16887 ;; Return value:  Size  Location     Type
 16888 ;;                  1    wreg      void 
 16889 ;; Registers used:
 16890 ;;		wreg, status,2
 16891 ;; Tracked objects:
 16892 ;;		On entry : 0/0
 16893 ;;		On exit  : 0/0
 16894 ;;		Unchanged: 0/0
 16895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16896 ;;      Params:         0       0       0       0       0       0       0       0       0
 16897 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16898 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16899 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16900 ;;Total ram usage:        0 bytes
 16901 ;; Hardware stack levels used:    1
 16902 ;; Hardware stack levels required when called:   10
 16903 ;; This function calls:
 16904 ;;		Nothing
 16905 ;; This function is called by:
 16906 ;;		_enviaComando
 16907 ;; This function uses a non-reentrant model
 16908 ;;
 16909                           
 16910                           	psect	text56
 16911  0056A8                     __ptext56:
 16912                           	opt stack 0
 16913  0056A8                     _initRecebeDados:
 16914                           	opt stack 18
 16915                           
 16916                           ;LoRaWanCore.c: 338: RCIE=0;
 16917                           
 16918                           ;incstack = 0
 16919  0056A8  9A9D               	bcf	3997,5,c	;volatile
 16920                           
 16921                           ;LoRaWanCore.c: 339: responseLoRaWan=0xFF;
 16922  0056AA  0101               	movlb	1	; () banked
 16923  0056AC  69FE               	setf	_responseLoRaWan& (0+255),b	;volatile
 16924                           
 16925                           ; BSR set to: 1
 16926                           ;LoRaWanCore.c: 340: tamFrame=0;
 16927  0056AE  0E00               	movlw	0
 16928  0056B0  6E5B               	movwf	_tamFrame,c	;volatile
 16929                           
 16930                           ;LoRaWanCore.c: 341: tamDadosRecebidos=0;
 16931  0056B2  0E00               	movlw	0
 16932  0056B4  6E5C               	movwf	_tamDadosRecebidos,c	;volatile
 16933                           
 16934                           ;LoRaWanCore.c: 342: novaMsgLoRaWan=0;
 16935  0056B6  0E00               	movlw	0
 16936  0056B8  6E5A               	movwf	_novaMsgLoRaWan,c	;volatile
 16937                           
 16938                           ; BSR set to: 1
 16939                           ;LoRaWanCore.c: 343: RCIE=1;
 16940  0056BA  8A9D               	bsf	3997,5,c	;volatile
 16941                           
 16942                           ; BSR set to: 1
 16943  0056BC  0012               	return		;funcret
 16944  0056BE                     __end_of_initRecebeDados:
 16945                           	opt stack 0
 16946                           tblptru	equ	0xFF8
 16947                           tblptrh	equ	0xFF7
 16948                           tblptrl	equ	0xFF6
 16949                           tablat	equ	0xFF5
 16950                           prodh	equ	0xFF4
 16951                           prodl	equ	0xFF3
 16952                           intcon	equ	0xFF2
 16953                           indf0	equ	0xFEF
 16954                           postinc0	equ	0xFEE
 16955                           fsr0h	equ	0xFEA
 16956                           fsr0l	equ	0xFE9
 16957                           wreg	equ	0xFE8
 16958                           indf1	equ	0xFE7
 16959                           postdec1	equ	0xFE5
 16960                           fsr1h	equ	0xFE2
 16961                           fsr1l	equ	0xFE1
 16962                           indf2	equ	0xFDF
 16963                           postinc2	equ	0xFDE
 16964                           postdec2	equ	0xFDD
 16965                           plusw2	equ	0xFDB
 16966                           fsr2h	equ	0xFDA
 16967                           fsr2l	equ	0xFD9
 16968                           status	equ	0xFD8
 16969                           
 16970 ;; *************** function _SYS_InterruptHigh *****************
 16971 ;; Defined at:
 16972 ;;		line 59 in file "usb/system.c"
 16973 ;; Parameters:    Size  Location     Type
 16974 ;;		None
 16975 ;; Auto vars:     Size  Location     Type
 16976 ;;  dig4            2   53[COMRAM] int 
 16977 ;;  dig3            2   51[COMRAM] int 
 16978 ;;  dig2            2   49[COMRAM] int 
 16979 ;;  dig1            2   47[COMRAM] int 
 16980 ;; Return value:  Size  Location     Type
 16981 ;;                  1    wreg      void 
 16982 ;; Registers used:
 16983 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16984 ;; Tracked objects:
 16985 ;;		On entry : 0/0
 16986 ;;		On exit  : 0/0
 16987 ;;		Unchanged: 0/0
 16988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16989 ;;      Params:         0       0       0       0       0       0       0       0       0
 16990 ;;      Locals:         8       0       0       0       0       0       0       0       0
 16991 ;;      Temps:         19       0       0       0       0       0       0       0       0
 16992 ;;      Totals:        27       0       0       0       0       0       0       0       0
 16993 ;;Total ram usage:       27 bytes
 16994 ;; Hardware stack levels used:    1
 16995 ;; Hardware stack levels required when called:    9
 16996 ;; This function calls:
 16997 ;;		_USBDeviceTasks
 16998 ;;		_getch
 16999 ;;		_recebeByteLoRaWan
 17000 ;; This function is called by:
 17001 ;;		Interrupt level 2
 17002 ;; This function uses a non-reentrant model
 17003 ;;
 17004                           
 17005                           	psect	intcode
 17006  000008                     __pintcode:
 17007                           	opt stack 0
 17008  000008                     _SYS_InterruptHigh:
 17009                           	opt stack 16
 17010                           
 17011                           ; BSR set to: 1
 17012                           ;incstack = 0
 17013  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 17014  00000A  ED9D  F013         	call	int_func,f	;refresh shadow registers
 17015                           tblptru	equ	0xFF8
 17016                           tblptrh	equ	0xFF7
 17017                           tblptrl	equ	0xFF6
 17018                           tablat	equ	0xFF5
 17019                           prodh	equ	0xFF4
 17020                           prodl	equ	0xFF3
 17021                           intcon	equ	0xFF2
 17022                           indf0	equ	0xFEF
 17023                           postinc0	equ	0xFEE
 17024                           fsr0h	equ	0xFEA
 17025                           fsr0l	equ	0xFE9
 17026                           wreg	equ	0xFE8
 17027                           indf1	equ	0xFE7
 17028                           postdec1	equ	0xFE5
 17029                           fsr1h	equ	0xFE2
 17030                           fsr1l	equ	0xFE1
 17031                           indf2	equ	0xFDF
 17032                           postinc2	equ	0xFDE
 17033                           postdec2	equ	0xFDD
 17034                           plusw2	equ	0xFDB
 17035                           fsr2h	equ	0xFDA
 17036                           fsr2l	equ	0xFD9
 17037                           status	equ	0xFD8
 17038                           
 17039                           	psect	intcode_body
 17040  00273A                     __pintcode_body:
 17041                           	opt stack 16
 17042  00273A                     int_func:
 17043                           	opt stack 16
 17044  00273A  0006               	pop		; remove dummy address from shadow register refresh
 17045  00273C  CFFA F01E          	movff	pclath,??_SYS_InterruptHigh+1
 17046  002740  CFFB F01F          	movff	pclatu,??_SYS_InterruptHigh+2
 17047  002744  CFE9 F020          	movff	fsr0l,??_SYS_InterruptHigh+3
 17048  002748  CFEA F021          	movff	fsr0h,??_SYS_InterruptHigh+4
 17049  00274C  CFE1 F022          	movff	fsr1l,??_SYS_InterruptHigh+5
 17050  002750  CFE2 F023          	movff	fsr1h,??_SYS_InterruptHigh+6
 17051  002754  CFD9 F024          	movff	fsr2l,??_SYS_InterruptHigh+7
 17052  002758  CFDA F025          	movff	fsr2h,??_SYS_InterruptHigh+8
 17053  00275C  CFF3 F026          	movff	prodl,??_SYS_InterruptHigh+9
 17054  002760  CFF4 F027          	movff	prodh,??_SYS_InterruptHigh+10
 17055  002764  CFF6 F028          	movff	tblptrl,??_SYS_InterruptHigh+11
 17056  002768  CFF7 F029          	movff	tblptrh,??_SYS_InterruptHigh+12
 17057  00276C  CFF8 F02A          	movff	tblptru,??_SYS_InterruptHigh+13
 17058  002770  CFF5 F02B          	movff	tablat,??_SYS_InterruptHigh+14
 17059  002774  C05F  F02C         	movff	btemp,??_SYS_InterruptHigh+15
 17060  002778  C060  F02D         	movff	btemp+1,??_SYS_InterruptHigh+16
 17061  00277C  C061  F02E         	movff	btemp+2,??_SYS_InterruptHigh+17
 17062  002780  C062  F02F         	movff	btemp+3,??_SYS_InterruptHigh+18
 17063                           
 17064                           ;system.c: 64: if (CCP1IF && CCP1IE)
 17065  002784  B49E               	btfsc	3998,2,c	;volatile
 17066  002786  A49D               	btfss	3997,2,c	;volatile
 17067  002788  D089               	goto	i2l119
 17068                           
 17069                           ;system.c: 65: {
 17070                           ;system.c: 66: CCP1IF=0;
 17071  00278A  949E               	bcf	3998,2,c	;volatile
 17072                           
 17073                           ;system.c: 67: ticks++;
 17074  00278C  0E01               	movlw	1
 17075  00278E  0103               	movlb	3	; () banked
 17076  002790  272A               	addwf	_ticks& (0+255),f,b	;volatile
 17077  002792  0E00               	movlw	0
 17078  002794  232B               	addwfc	(_ticks+1)& (0+255),f,b	;volatile
 17079  002796  232C               	addwfc	(_ticks+2)& (0+255),f,b	;volatile
 17080  002798  232D               	addwfc	(_ticks+3)& (0+255),f,b	;volatile
 17081                           
 17082                           ; BSR set to: 3
 17083                           ;system.c: 69: int dig1=PORTDbits.RD0;
 17084  00279A  A083               	btfss	3971,0,c	;volatile
 17085  00279C  D003               	goto	i2u1064_40
 17086  00279E  6A1D               	clrf	??_SYS_InterruptHigh& (0+255),c
 17087  0027A0  2A1D               	incf	??_SYS_InterruptHigh& (0+255),f,c
 17088  0027A2  D001               	goto	i2u1064_48
 17089  0027A4                     i2u1064_40:
 17090  0027A4  6A1D               	clrf	??_SYS_InterruptHigh& (0+255),c
 17091  0027A6                     i2u1064_48:
 17092  0027A6  501D               	movf	??_SYS_InterruptHigh,w,c
 17093  0027A8  6E30               	movwf	SYS_InterruptHigh@dig1,c
 17094  0027AA  6A31               	clrf	SYS_InterruptHigh@dig1+1,c
 17095                           
 17096                           ;system.c: 70: int dig2=PORTDbits.RD1;
 17097  0027AC  A283               	btfss	3971,1,c	;volatile
 17098  0027AE  D003               	goto	i2u1065_40
 17099  0027B0  6A1D               	clrf	??_SYS_InterruptHigh& (0+255),c
 17100  0027B2  2A1D               	incf	??_SYS_InterruptHigh& (0+255),f,c
 17101  0027B4  D001               	goto	i2u1065_48
 17102  0027B6                     i2u1065_40:
 17103  0027B6  6A1D               	clrf	??_SYS_InterruptHigh& (0+255),c
 17104  0027B8                     i2u1065_48:
 17105  0027B8  501D               	movf	??_SYS_InterruptHigh,w,c
 17106  0027BA  6E32               	movwf	SYS_InterruptHigh@dig2,c
 17107  0027BC  6A33               	clrf	SYS_InterruptHigh@dig2+1,c
 17108                           
 17109                           ;system.c: 71: int dig3=PORTDbits.RD2;
 17110  0027BE  A483               	btfss	3971,2,c	;volatile
 17111  0027C0  D003               	goto	i2u1066_40
 17112  0027C2  6A1D               	clrf	??_SYS_InterruptHigh& (0+255),c
 17113  0027C4  2A1D               	incf	??_SYS_InterruptHigh& (0+255),f,c
 17114  0027C6  D001               	goto	i2u1066_48
 17115  0027C8                     i2u1066_40:
 17116  0027C8  6A1D               	clrf	??_SYS_InterruptHigh& (0+255),c
 17117  0027CA                     i2u1066_48:
 17118  0027CA  501D               	movf	??_SYS_InterruptHigh,w,c
 17119  0027CC  6E34               	movwf	SYS_InterruptHigh@dig3,c
 17120  0027CE  6A35               	clrf	SYS_InterruptHigh@dig3+1,c
 17121                           
 17122                           ;system.c: 72: int dig4=PORTDbits.RD3;
 17123  0027D0  A683               	btfss	3971,3,c	;volatile
 17124  0027D2  D003               	goto	i2u1067_40
 17125  0027D4  6A1D               	clrf	??_SYS_InterruptHigh& (0+255),c
 17126  0027D6  2A1D               	incf	??_SYS_InterruptHigh& (0+255),f,c
 17127  0027D8  D001               	goto	i2u1067_48
 17128  0027DA                     i2u1067_40:
 17129  0027DA  6A1D               	clrf	??_SYS_InterruptHigh& (0+255),c
 17130  0027DC                     i2u1067_48:
 17131  0027DC  501D               	movf	??_SYS_InterruptHigh,w,c
 17132  0027DE  6E36               	movwf	SYS_InterruptHigh@dig4,c
 17133  0027E0  6A37               	clrf	SYS_InterruptHigh@dig4+1,c
 17134                           
 17135                           ;system.c: 74: if ((dig_1!=dig1) && (dig1==1))
 17136  0027E2  5030               	movf	SYS_InterruptHigh@dig1,w,c
 17137  0027E4  0102               	movlb	2	; () banked
 17138  0027E6  19E0               	xorwf	_dig_1& (0+255),w,b	;volatile
 17139  0027E8  E104               	bnz	i2u1068_40
 17140  0027EA  5031               	movf	SYS_InterruptHigh@dig1+1,w,c
 17141  0027EC  19E1               	xorwf	(_dig_1+1)& (0+255),w,b	;volatile
 17142  0027EE  B4D8               	btfsc	status,2,c
 17143  0027F0  D00B               	goto	i2l120
 17144  0027F2                     i2u1068_40:
 17145                           
 17146                           ; BSR set to: 2
 17147  0027F2  0430               	decf	SYS_InterruptHigh@dig1,w,c
 17148  0027F4  1031               	iorwf	SYS_InterruptHigh@dig1+1,w,c
 17149  0027F6  A4D8               	btfss	status,2,c
 17150  0027F8  D007               	goto	i2l120
 17151                           
 17152                           ; BSR set to: 2
 17153                           ;system.c: 75: freqPulses1++;
 17154  0027FA  0E01               	movlw	1
 17155  0027FC  0103               	movlb	3	; () banked
 17156  0027FE  273A               	addwf	_freqPulses1& (0+255),f,b	;volatile
 17157  002800  0E00               	movlw	0
 17158  002802  233B               	addwfc	(_freqPulses1+1)& (0+255),f,b	;volatile
 17159  002804  233C               	addwfc	(_freqPulses1+2)& (0+255),f,b	;volatile
 17160  002806  233D               	addwfc	(_freqPulses1+3)& (0+255),f,b	;volatile
 17161  002808                     i2l120:
 17162                           
 17163                           ;system.c: 76: dig_1=dig1;
 17164                           
 17165                           ; BSR set to: 3
 17166  002808  C030  F2E0         	movff	SYS_InterruptHigh@dig1,_dig_1	;volatile
 17167  00280C  C031  F2E1         	movff	SYS_InterruptHigh@dig1+1,_dig_1+1	;volatile
 17168                           
 17169                           ;system.c: 77: if ((dig_2!=dig2) && (dig2==1))
 17170  002810  5032               	movf	SYS_InterruptHigh@dig2,w,c
 17171  002812  0102               	movlb	2	; () banked
 17172  002814  19DE               	xorwf	_dig_2& (0+255),w,b	;volatile
 17173  002816  E104               	bnz	i2u1070_40
 17174  002818  5033               	movf	SYS_InterruptHigh@dig2+1,w,c
 17175  00281A  19DF               	xorwf	(_dig_2+1)& (0+255),w,b	;volatile
 17176  00281C  B4D8               	btfsc	status,2,c
 17177  00281E  D00B               	goto	i2l121
 17178  002820                     i2u1070_40:
 17179                           
 17180                           ; BSR set to: 2
 17181  002820  0432               	decf	SYS_InterruptHigh@dig2,w,c
 17182  002822  1033               	iorwf	SYS_InterruptHigh@dig2+1,w,c
 17183  002824  A4D8               	btfss	status,2,c
 17184  002826  D007               	goto	i2l121
 17185                           
 17186                           ; BSR set to: 2
 17187                           ;system.c: 78: freqPulses2++;
 17188  002828  0E01               	movlw	1
 17189  00282A  0103               	movlb	3	; () banked
 17190  00282C  2736               	addwf	_freqPulses2& (0+255),f,b	;volatile
 17191  00282E  0E00               	movlw	0
 17192  002830  2337               	addwfc	(_freqPulses2+1)& (0+255),f,b	;volatile
 17193  002832  2338               	addwfc	(_freqPulses2+2)& (0+255),f,b	;volatile
 17194  002834  2339               	addwfc	(_freqPulses2+3)& (0+255),f,b	;volatile
 17195  002836                     i2l121:
 17196                           
 17197                           ;system.c: 79: dig_2=dig2;
 17198                           
 17199                           ; BSR set to: 3
 17200  002836  C032  F2DE         	movff	SYS_InterruptHigh@dig2,_dig_2	;volatile
 17201  00283A  C033  F2DF         	movff	SYS_InterruptHigh@dig2+1,_dig_2+1	;volatile
 17202                           
 17203                           ;system.c: 80: if ((dig_3!=dig3) && (dig3==1))
 17204  00283E  5034               	movf	SYS_InterruptHigh@dig3,w,c
 17205  002840  0102               	movlb	2	; () banked
 17206  002842  19DC               	xorwf	_dig_3& (0+255),w,b	;volatile
 17207  002844  E104               	bnz	i2u1072_40
 17208  002846  5035               	movf	SYS_InterruptHigh@dig3+1,w,c
 17209  002848  19DD               	xorwf	(_dig_3+1)& (0+255),w,b	;volatile
 17210  00284A  B4D8               	btfsc	status,2,c
 17211  00284C  D00B               	goto	i2l122
 17212  00284E                     i2u1072_40:
 17213                           
 17214                           ; BSR set to: 2
 17215  00284E  0434               	decf	SYS_InterruptHigh@dig3,w,c
 17216  002850  1035               	iorwf	SYS_InterruptHigh@dig3+1,w,c
 17217  002852  A4D8               	btfss	status,2,c
 17218  002854  D007               	goto	i2l122
 17219                           
 17220                           ; BSR set to: 2
 17221                           ;system.c: 81: freqPulses3++;
 17222  002856  0E01               	movlw	1
 17223  002858  0103               	movlb	3	; () banked
 17224  00285A  2732               	addwf	_freqPulses3& (0+255),f,b	;volatile
 17225  00285C  0E00               	movlw	0
 17226  00285E  2333               	addwfc	(_freqPulses3+1)& (0+255),f,b	;volatile
 17227  002860  2334               	addwfc	(_freqPulses3+2)& (0+255),f,b	;volatile
 17228  002862  2335               	addwfc	(_freqPulses3+3)& (0+255),f,b	;volatile
 17229  002864                     i2l122:
 17230                           
 17231                           ;system.c: 82: dig_3=dig3;
 17232                           
 17233                           ; BSR set to: 3
 17234  002864  C034  F2DC         	movff	SYS_InterruptHigh@dig3,_dig_3	;volatile
 17235  002868  C035  F2DD         	movff	SYS_InterruptHigh@dig3+1,_dig_3+1	;volatile
 17236                           
 17237                           ;system.c: 83: if ((dig_4!=dig4) && (dig4==1))
 17238  00286C  5036               	movf	SYS_InterruptHigh@dig4,w,c
 17239  00286E  0102               	movlb	2	; () banked
 17240  002870  19DA               	xorwf	_dig_4& (0+255),w,b	;volatile
 17241  002872  E104               	bnz	i2u1074_40
 17242  002874  5037               	movf	SYS_InterruptHigh@dig4+1,w,c
 17243  002876  19DB               	xorwf	(_dig_4+1)& (0+255),w,b	;volatile
 17244  002878  B4D8               	btfsc	status,2,c
 17245  00287A  D00B               	goto	i2l123
 17246  00287C                     i2u1074_40:
 17247                           
 17248                           ; BSR set to: 2
 17249  00287C  0436               	decf	SYS_InterruptHigh@dig4,w,c
 17250  00287E  1037               	iorwf	SYS_InterruptHigh@dig4+1,w,c
 17251  002880  A4D8               	btfss	status,2,c
 17252  002882  D007               	goto	i2l123
 17253                           
 17254                           ; BSR set to: 2
 17255                           ;system.c: 84: freqPulses4++;
 17256  002884  0E01               	movlw	1
 17257  002886  0103               	movlb	3	; () banked
 17258  002888  272E               	addwf	_freqPulses4& (0+255),f,b	;volatile
 17259  00288A  0E00               	movlw	0
 17260  00288C  232F               	addwfc	(_freqPulses4+1)& (0+255),f,b	;volatile
 17261  00288E  2330               	addwfc	(_freqPulses4+2)& (0+255),f,b	;volatile
 17262  002890  2331               	addwfc	(_freqPulses4+3)& (0+255),f,b	;volatile
 17263  002892                     i2l123:
 17264                           
 17265                           ;system.c: 85: dig_4=dig4;
 17266                           
 17267                           ; BSR set to: 3
 17268  002892  C036  F2DA         	movff	SYS_InterruptHigh@dig4,_dig_4	;volatile
 17269  002896  C037  F2DB         	movff	SYS_InterruptHigh@dig4+1,_dig_4+1	;volatile
 17270                           
 17271                           ;system.c: 86: }
 17272  00289A  D00B               	goto	i2l127
 17273  00289C                     i2l119:
 17274                           
 17275                           ;system.c: 87: else if (RCIE && RCIF)
 17276  00289C  BA9D               	btfsc	3997,5,c	;volatile
 17277  00289E  AA9E               	btfss	3998,5,c	;volatile
 17278  0028A0  D005               	goto	i2l125
 17279                           
 17280                           ;system.c: 88: {
 17281                           ;system.c: 90: recebeByteLoRaWan(getch());
 17282  0028A2  EC0D  F02B         	call	_getch	;wreg free
 17283  0028A6  ECDC  F00F         	call	_recebeByteLoRaWan
 17284                           
 17285                           ;system.c: 92: }
 17286  0028AA  D003               	goto	i2l127
 17287  0028AC                     i2l125:
 17288                           
 17289                           ;system.c: 93: else if (USBIE)
 17290  0028AC  BAA0               	btfsc	4000,5,c	;volatile
 17291                           
 17292                           ;system.c: 94: {
 17293                           ;system.c: 96: USBDeviceTasks();
 17294  0028AE  ECCA  F017         	call	_USBDeviceTasks	;wreg free
 17295  0028B2                     i2l127:
 17296  0028B2  C02F  F062         	movff	??_SYS_InterruptHigh+18,btemp+3
 17297  0028B6  C02E  F061         	movff	??_SYS_InterruptHigh+17,btemp+2
 17298  0028BA  C02D  F060         	movff	??_SYS_InterruptHigh+16,btemp+1
 17299  0028BE  C02C  F05F         	movff	??_SYS_InterruptHigh+15,btemp
 17300  0028C2  C02B  FFF5         	movff	??_SYS_InterruptHigh+14,tablat
 17301  0028C6  C02A  FFF8         	movff	??_SYS_InterruptHigh+13,tblptru
 17302  0028CA  C029  FFF7         	movff	??_SYS_InterruptHigh+12,tblptrh
 17303  0028CE  C028  FFF6         	movff	??_SYS_InterruptHigh+11,tblptrl
 17304  0028D2  C027  FFF4         	movff	??_SYS_InterruptHigh+10,prodh
 17305  0028D6  C026  FFF3         	movff	??_SYS_InterruptHigh+9,prodl
 17306  0028DA  C025  FFDA         	movff	??_SYS_InterruptHigh+8,fsr2h
 17307  0028DE  C024  FFD9         	movff	??_SYS_InterruptHigh+7,fsr2l
 17308  0028E2  C023  FFE2         	movff	??_SYS_InterruptHigh+6,fsr1h
 17309  0028E6  C022  FFE1         	movff	??_SYS_InterruptHigh+5,fsr1l
 17310  0028EA  C021  FFEA         	movff	??_SYS_InterruptHigh+4,fsr0h
 17311  0028EE  C020  FFE9         	movff	??_SYS_InterruptHigh+3,fsr0l
 17312  0028F2  C01F  FFFB         	movff	??_SYS_InterruptHigh+2,pclatu
 17313  0028F6  C01E  FFFA         	movff	??_SYS_InterruptHigh+1,pclath
 17314  0028FA  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 17315  0028FC  0011               	retfie		f
 17316  0028FE                     __end_of_SYS_InterruptHigh:
 17317                           	opt stack 0
 17318                           pclatu	equ	0xFFB
 17319                           pclath	equ	0xFFA
 17320                           tblptru	equ	0xFF8
 17321                           tblptrh	equ	0xFF7
 17322                           tblptrl	equ	0xFF6
 17323                           tablat	equ	0xFF5
 17324                           prodh	equ	0xFF4
 17325                           prodl	equ	0xFF3
 17326                           intcon	equ	0xFF2
 17327                           indf0	equ	0xFEF
 17328                           postinc0	equ	0xFEE
 17329                           fsr0h	equ	0xFEA
 17330                           fsr0l	equ	0xFE9
 17331                           wreg	equ	0xFE8
 17332                           indf1	equ	0xFE7
 17333                           postdec1	equ	0xFE5
 17334                           fsr1h	equ	0xFE2
 17335                           fsr1l	equ	0xFE1
 17336                           indf2	equ	0xFDF
 17337                           postinc2	equ	0xFDE
 17338                           postdec2	equ	0xFDD
 17339                           plusw2	equ	0xFDB
 17340                           fsr2h	equ	0xFDA
 17341                           fsr2l	equ	0xFD9
 17342                           status	equ	0xFD8
 17343                           
 17344 ;; *************** function _recebeByteLoRaWan *****************
 17345 ;; Defined at:
 17346 ;;		line 346 in file "LoRaWanCore.c"
 17347 ;; Parameters:    Size  Location     Type
 17348 ;;  b               1    wreg     char 
 17349 ;; Auto vars:     Size  Location     Type
 17350 ;;  b               1   15[COMRAM] char 
 17351 ;;  i               1   18[COMRAM] unsigned char 
 17352 ;;  port            1   14[COMRAM] unsigned char 
 17353 ;;  i               1   16[COMRAM] unsigned char 
 17354 ;;  tamMsgRx        1   17[COMRAM] unsigned char 
 17355 ;;  len             1   13[COMRAM] unsigned char 
 17356 ;; Return value:  Size  Location     Type
 17357 ;;                  1    wreg      void 
 17358 ;; Registers used:
 17359 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17360 ;; Tracked objects:
 17361 ;;		On entry : 0/0
 17362 ;;		On exit  : 0/0
 17363 ;;		Unchanged: 0/0
 17364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17365 ;;      Params:         0       0       0       0       0       0       0       0       0
 17366 ;;      Locals:         6       0       0       0       0       0       0       0       0
 17367 ;;      Temps:          4       0       0       0       0       0       0       0       0
 17368 ;;      Totals:        10       0       0       0       0       0       0       0       0
 17369 ;;Total ram usage:       10 bytes
 17370 ;; Hardware stack levels used:    1
 17371 ;; Hardware stack levels required when called:    2
 17372 ;; This function calls:
 17373 ;;		_converter
 17374 ;;		_strcmp
 17375 ;;		_strcpy
 17376 ;;		_strncmp
 17377 ;;		i2_strlen
 17378 ;; This function is called by:
 17379 ;;		_SYS_InterruptHigh
 17380 ;; This function uses a non-reentrant model
 17381 ;;
 17382                           
 17383                           	psect	text58
 17384  001FB8                     __ptext58:
 17385                           	opt stack 0
 17386  001FB8                     _recebeByteLoRaWan:
 17387                           	opt stack 22
 17388                           
 17389                           ;incstack = 0
 17390                           ;recebeByteLoRaWan@b stored from wreg
 17391  001FB8  6E10               	movwf	recebeByteLoRaWan@b,c
 17392                           
 17393                           ;LoRaWanCore.c: 348: static uint8_t frameData[100];
 17394                           ;LoRaWanCore.c: 349: frameData[tamFrame++]=b;
 17395  001FBA  505B               	movf	_tamFrame,w,c	;volatile
 17396  001FBC  0D01               	mullw	1
 17397  001FBE  0E40               	movlw	low recebeByteLoRaWan@frameData
 17398  001FC0  24F3               	addwf	prodl,w,c
 17399  001FC2  6ED9               	movwf	fsr2l,c
 17400  001FC4  0E04               	movlw	high recebeByteLoRaWan@frameData
 17401  001FC6  20F4               	addwfc	prodh,w,c
 17402  001FC8  6EDA               	movwf	fsr2h,c
 17403  001FCA  C010  FFDF         	movff	recebeByteLoRaWan@b,indf2
 17404  001FCE  2A5B               	incf	_tamFrame,f,c	;volatile
 17405                           
 17406                           ;LoRaWanCore.c: 350: if ((b==0x0A) && (tamFrame>2))
 17407  001FD0  0E0A               	movlw	10
 17408  001FD2  1810               	xorwf	recebeByteLoRaWan@b,w,c
 17409  001FD4  A4D8               	btfss	status,2,c
 17410  001FD6  D131               	goto	i2u921_40
 17411  001FD8  0E02               	movlw	2
 17412  001FDA  645B               	cpfsgt	_tamFrame,c	;volatile
 17413  001FDC  D12E               	goto	i2u921_40
 17414                           
 17415                           ;LoRaWanCore.c: 351: {
 17416                           ;LoRaWanCore.c: 352: frameData[tamFrame]=0x00;
 17417  001FDE  505B               	movf	_tamFrame,w,c	;volatile
 17418  001FE0  0D01               	mullw	1
 17419  001FE2  0E40               	movlw	low recebeByteLoRaWan@frameData
 17420  001FE4  24F3               	addwf	prodl,w,c
 17421  001FE6  6ED9               	movwf	fsr2l,c
 17422  001FE8  0E04               	movlw	high recebeByteLoRaWan@frameData
 17423  001FEA  20F4               	addwfc	prodh,w,c
 17424  001FEC  6EDA               	movwf	fsr2h,c
 17425  001FEE  0E00               	movlw	0
 17426  001FF0  6EDF               	movwf	indf2,c
 17427                           
 17428                           ;LoRaWanCore.c: 353: strcpy(frameBuffer,frameData);
 17429  001FF2  0E64               	movlw	low _frameBuffer
 17430  001FF4  6E01               	movwf	strcpy@to,c
 17431  001FF6  0E06               	movlw	high _frameBuffer
 17432  001FF8  6E02               	movwf	strcpy@to+1,c
 17433  001FFA  0E40               	movlw	low recebeByteLoRaWan@frameData
 17434  001FFC  6E03               	movwf	strcpy@from,c
 17435  001FFE  0E04               	movlw	high recebeByteLoRaWan@frameData
 17436  002000  6E04               	movwf	strcpy@from+1,c
 17437  002002  EC93  F02A         	call	_strcpy	;wreg free
 17438                           
 17439                           ;LoRaWanCore.c: 355: frameData[tamFrame-2]=0x00;
 17440  002006  0EFE               	movlw	254
 17441  002008  6E0A               	movwf	??_recebeByteLoRaWan& (0+255),c
 17442  00200A  0EFF               	movlw	255
 17443  00200C  6E0B               	movwf	(??_recebeByteLoRaWan+1)& (0+255),c
 17444  00200E  505B               	movf	_tamFrame,w,c	;volatile
 17445  002010  6E0C               	movwf	(??_recebeByteLoRaWan+2)& (0+255),c
 17446  002012  6A0D               	clrf	(??_recebeByteLoRaWan+3)& (0+255),c
 17447  002014  500A               	movf	??_recebeByteLoRaWan,w,c
 17448  002016  260C               	addwf	??_recebeByteLoRaWan+2,f,c
 17449  002018  500B               	movf	??_recebeByteLoRaWan+1,w,c
 17450  00201A  220D               	addwfc	??_recebeByteLoRaWan+3,f,c
 17451  00201C  0E40               	movlw	low recebeByteLoRaWan@frameData
 17452  00201E  240C               	addwf	??_recebeByteLoRaWan+2,w,c
 17453  002020  6ED9               	movwf	fsr2l,c
 17454  002022  0E04               	movlw	high recebeByteLoRaWan@frameData
 17455  002024  200D               	addwfc	??_recebeByteLoRaWan+3,w,c
 17456  002026  6EDA               	movwf	fsr2h,c
 17457  002028  0E00               	movlw	0
 17458  00202A  6EDF               	movwf	indf2,c
 17459                           
 17460                           ;LoRaWanCore.c: 356: tamFrame=0;
 17461  00202C  0E00               	movlw	0
 17462  00202E  6E5B               	movwf	_tamFrame,c	;volatile
 17463                           
 17464                           ;LoRaWanCore.c: 357: uint8_t len = (sizeof(MSG_LORAWAN) / sizeof((MSG_LORAWAN)[0]));
 17465  002030  0E0F               	movlw	15
 17466  002032  6E0E               	movwf	recebeByteLoRaWan@len,c
 17467                           
 17468                           ;LoRaWanCore.c: 358: responseLoRaWan=0xFF;
 17469  002034  0101               	movlb	1	; () banked
 17470  002036  69FE               	setf	_responseLoRaWan& (0+255),b	;volatile
 17471                           
 17472                           ; BSR set to: 1
 17473                           ;LoRaWanCore.c: 359: for (uint8_t i=0;i<len;i++)
 17474  002038  0E00               	movlw	0
 17475  00203A  6E11               	movwf	recebeByteLoRaWan@i,c
 17476  00203C  D01C               	goto	i2l2466
 17477  00203E                     
 17478                           ;LoRaWanCore.c: 360: {
 17479                           ;LoRaWanCore.c: 361: if (strcmp(frameData,MSG_LORAWAN[i])==0)
 17480                           
 17481                           ; BSR set to: 1
 17482  00203E  0E40               	movlw	low recebeByteLoRaWan@frameData
 17483  002040  6E01               	movwf	strcmp@s1,c
 17484  002042  0E04               	movlw	high recebeByteLoRaWan@frameData
 17485  002044  6E02               	movwf	strcmp@s1+1,c
 17486  002046  5011               	movf	recebeByteLoRaWan@i,w,c
 17487  002048  0D02               	mullw	2
 17488  00204A  0EC3               	movlw	low _MSG_LORAWAN
 17489  00204C  24F3               	addwf	prodl,w,c
 17490  00204E  6ED9               	movwf	fsr2l,c
 17491  002050  0E03               	movlw	high _MSG_LORAWAN
 17492  002052  20F4               	addwfc	prodh,w,c
 17493  002054  6EDA               	movwf	fsr2h,c
 17494  002056  CFDE F003          	movff	postinc2,strcmp@s2
 17495  00205A  CFDD F004          	movff	postdec2,strcmp@s2+1
 17496  00205E  EC52  F028         	call	_strcmp	;wreg free
 17497  002062  5001               	movf	?_strcmp,w,c
 17498  002064  1002               	iorwf	?_strcmp+1,w,c
 17499  002066  A4D8               	btfss	status,2,c
 17500  002068  D005               	goto	i2l2468
 17501                           
 17502                           ;LoRaWanCore.c: 362: {
 17503                           ;LoRaWanCore.c: 363: responseLoRaWan=i;
 17504  00206A  C011  F1FE         	movff	recebeByteLoRaWan@i,_responseLoRaWan	;volatile
 17505                           
 17506                           ;LoRaWanCore.c: 364: novaMsgLoRaWan=1;
 17507  00206E  0E01               	movlw	1
 17508  002070  6E5A               	movwf	_novaMsgLoRaWan,c	;volatile
 17509                           
 17510                           ;LoRaWanCore.c: 365: return;
 17511  002072  0012               	return	
 17512  002074                     i2l2468:
 17513  002074  2A11               	incf	recebeByteLoRaWan@i,f,c
 17514  002076                     i2l2466:
 17515  002076  500E               	movf	recebeByteLoRaWan@len,w,c
 17516  002078  5C11               	subwf	recebeByteLoRaWan@i,w,c
 17517  00207A  A0D8               	btfss	status,0,c
 17518  00207C  D7E0               	goto	i2l2467
 17519                           
 17520                           ;LoRaWanCore.c: 366: }
 17521                           ;LoRaWanCore.c: 367: }
 17522                           ;LoRaWanCore.c: 368: uint8_t tamMsgRx=strlen(MSG_LORAWAN[15]);
 17523  00207E  C3E1  F001         	movff	_MSG_LORAWAN+30,i2strlen@s
 17524  002082  C3E2  F002         	movff	_MSG_LORAWAN+31,i2strlen@s+1
 17525  002086  EC01  F028         	call	i2_strlen	;wreg free
 17526  00208A  5001               	movf	?i2_strlen,w,c
 17527  00208C  6E12               	movwf	recebeByteLoRaWan@tamMsgRx,c
 17528                           
 17529                           ;LoRaWanCore.c: 369: if (strncmp(frameData,MSG_LORAWAN[15],tamMsgRx)==0)
 17530  00208E  0E40               	movlw	low recebeByteLoRaWan@frameData
 17531  002090  6E01               	movwf	strncmp@s1,c
 17532  002092  0E04               	movlw	high recebeByteLoRaWan@frameData
 17533  002094  6E02               	movwf	strncmp@s1+1,c
 17534  002096  C3E1  F003         	movff	_MSG_LORAWAN+30,strncmp@s2
 17535  00209A  C3E2  F004         	movff	_MSG_LORAWAN+31,strncmp@s2+1
 17536  00209E  C012  F005         	movff	recebeByteLoRaWan@tamMsgRx,strncmp@len
 17537  0020A2  6A06               	clrf	strncmp@len+1,c
 17538  0020A4  EC55  F025         	call	_strncmp	;wreg free
 17539  0020A8  5001               	movf	?_strncmp,w,c
 17540  0020AA  1002               	iorwf	?_strncmp+1,w,c
 17541  0020AC  A4D8               	btfss	status,2,c
 17542  0020AE  D006               	goto	i2l2471
 17543                           
 17544                           ;LoRaWanCore.c: 370: {
 17545                           ;LoRaWanCore.c: 371: responseLoRaWan=15;
 17546  0020B0  0E0F               	movlw	15
 17547  0020B2  0101               	movlb	1	; () banked
 17548  0020B4  6FFE               	movwf	_responseLoRaWan& (0+255),b	;volatile
 17549                           
 17550                           ;LoRaWanCore.c: 372: novaMsgLoRaWan=1;
 17551  0020B6  0E01               	movlw	1
 17552  0020B8  6E5A               	movwf	_novaMsgLoRaWan,c	;volatile
 17553                           
 17554                           ; BSR set to: 1
 17555                           ;LoRaWanCore.c: 373: return;
 17556  0020BA  0012               	return	
 17557  0020BC                     i2l2471:
 17558                           
 17559                           ;LoRaWanCore.c: 374: }
 17560                           ;LoRaWanCore.c: 377: tamMsgRx=strlen(MSG_LORAWAN[10]);
 17561                           
 17562                           ; BSR set to: 1
 17563  0020BC  C3D7  F001         	movff	_MSG_LORAWAN+20,i2strlen@s
 17564  0020C0  C3D8  F002         	movff	_MSG_LORAWAN+21,i2strlen@s+1
 17565  0020C4  EC01  F028         	call	i2_strlen	;wreg free
 17566  0020C8  5001               	movf	?i2_strlen,w,c
 17567  0020CA  6E12               	movwf	recebeByteLoRaWan@tamMsgRx,c
 17568                           
 17569                           ;LoRaWanCore.c: 379: if (strncmp(frameData,MSG_LORAWAN[10],tamMsgRx)==0)
 17570  0020CC  0E40               	movlw	low recebeByteLoRaWan@frameData
 17571  0020CE  6E01               	movwf	strncmp@s1,c
 17572  0020D0  0E04               	movlw	high recebeByteLoRaWan@frameData
 17573  0020D2  6E02               	movwf	strncmp@s1+1,c
 17574  0020D4  C3D7  F003         	movff	_MSG_LORAWAN+20,strncmp@s2
 17575  0020D8  C3D8  F004         	movff	_MSG_LORAWAN+21,strncmp@s2+1
 17576  0020DC  C012  F005         	movff	recebeByteLoRaWan@tamMsgRx,strncmp@len
 17577  0020E0  6A06               	clrf	strncmp@len+1,c
 17578  0020E2  EC55  F025         	call	_strncmp	;wreg free
 17579  0020E6  5001               	movf	?_strncmp,w,c
 17580  0020E8  1002               	iorwf	?_strncmp+1,w,c
 17581  0020EA  A4D8               	btfss	status,2,c
 17582  0020EC  D0A6               	goto	i2u921_40
 17583                           
 17584                           ;LoRaWanCore.c: 380: {
 17585                           ;LoRaWanCore.c: 383: uint8_t i=tamMsgRx;
 17586  0020EE  C012  F013         	movff	recebeByteLoRaWan@tamMsgRx,recebeByteLoRaWan@i_4920
 17587                           
 17588                           ;LoRaWanCore.c: 384: uint8_t port=0;
 17589  0020F2  0E00               	movlw	0
 17590  0020F4  6E0F               	movwf	recebeByteLoRaWan@port,c
 17591                           
 17592                           ;LoRaWanCore.c: 386: for (;i<strlen(frameData);i++)
 17593  0020F6  D027               	goto	i2l2473
 17594  0020F8                     
 17595                           ;LoRaWanCore.c: 387: {
 17596                           ;LoRaWanCore.c: 388: if ((frameData[i]<'0') || (frameData[i]>'9'))
 17597  0020F8  5013               	movf	recebeByteLoRaWan@i_4920,w,c
 17598  0020FA  0D01               	mullw	1
 17599  0020FC  0E40               	movlw	low recebeByteLoRaWan@frameData
 17600  0020FE  24F3               	addwf	prodl,w,c
 17601  002100  6ED9               	movwf	fsr2l,c
 17602  002102  0E04               	movlw	high recebeByteLoRaWan@frameData
 17603  002104  20F4               	addwfc	prodh,w,c
 17604  002106  6EDA               	movwf	fsr2h,c
 17605  002108  0E2F               	movlw	47
 17606  00210A  64DF               	cpfsgt	indf2,c
 17607  00210C  D02B               	goto	i2u917_40
 17608  00210E  5013               	movf	recebeByteLoRaWan@i_4920,w,c
 17609  002110  0D01               	mullw	1
 17610  002112  0E40               	movlw	low recebeByteLoRaWan@frameData
 17611  002114  24F3               	addwf	prodl,w,c
 17612  002116  6ED9               	movwf	fsr2l,c
 17613  002118  0E04               	movlw	high recebeByteLoRaWan@frameData
 17614  00211A  20F4               	addwfc	prodh,w,c
 17615  00211C  6EDA               	movwf	fsr2h,c
 17616  00211E  0E39               	movlw	57
 17617  002120  64DF               	cpfsgt	indf2,c
 17618  002122  D001               	goto	i2l2475
 17619  002124  D01F               	goto	i2u917_40
 17620  002126                     i2l2475:
 17621                           
 17622                           ;LoRaWanCore.c: 391: port*=10;
 17623  002126  0E0A               	movlw	10
 17624  002128  020F               	mulwf	recebeByteLoRaWan@port,c
 17625  00212A  50F3               	movf	prodl,w,c
 17626  00212C  6E0F               	movwf	recebeByteLoRaWan@port,c
 17627                           
 17628                           ;LoRaWanCore.c: 392: port+=frameData[i]-'0';
 17629  00212E  5013               	movf	recebeByteLoRaWan@i_4920,w,c
 17630  002130  0D01               	mullw	1
 17631  002132  0E40               	movlw	low recebeByteLoRaWan@frameData
 17632  002134  24F3               	addwf	prodl,w,c
 17633  002136  6ED9               	movwf	fsr2l,c
 17634  002138  0E04               	movlw	high recebeByteLoRaWan@frameData
 17635  00213A  20F4               	addwfc	prodh,w,c
 17636  00213C  6EDA               	movwf	fsr2h,c
 17637  00213E  50DF               	movf	indf2,w,c
 17638  002140  0FD0               	addlw	208
 17639  002142  260F               	addwf	recebeByteLoRaWan@port,f,c
 17640  002144  2A13               	incf	recebeByteLoRaWan@i_4920,f,c
 17641  002146                     i2l2473:
 17642  002146  0E40               	movlw	low recebeByteLoRaWan@frameData
 17643  002148  6E01               	movwf	i2strlen@s,c
 17644  00214A  0E04               	movlw	high recebeByteLoRaWan@frameData
 17645  00214C  6E02               	movwf	i2strlen@s+1,c
 17646  00214E  EC01  F028         	call	i2_strlen	;wreg free
 17647  002152  5013               	movf	recebeByteLoRaWan@i_4920,w,c
 17648  002154  6E0A               	movwf	??_recebeByteLoRaWan& (0+255),c
 17649  002156  6A0B               	clrf	(??_recebeByteLoRaWan+1)& (0+255),c
 17650  002158  5001               	movf	?i2_strlen,w,c
 17651  00215A  5C0A               	subwf	??_recebeByteLoRaWan,w,c
 17652  00215C  5002               	movf	?i2_strlen+1,w,c
 17653  00215E  580B               	subwfb	??_recebeByteLoRaWan+1,w,c
 17654  002160  A0D8               	btfss	status,0,c
 17655  002162  D7CA               	goto	i2l2474
 17656  002164                     i2u917_40:
 17657                           
 17658                           ;LoRaWanCore.c: 393: }
 17659                           ;LoRaWanCore.c: 394: i++;
 17660  002164  2A13               	incf	recebeByteLoRaWan@i_4920,f,c
 17661                           
 17662                           ;LoRaWanCore.c: 396: for (;i<strlen(frameData);i+=2)
 17663  002166  D038               	goto	i2l2479
 17664  002168                     
 17665                           ;LoRaWanCore.c: 397: {
 17666                           ;LoRaWanCore.c: 398: dadosRecebidos[tamDadosRecebidos].port=port;
 17667  002168  505C               	movf	_tamDadosRecebidos,w,c	;volatile
 17668  00216A  0D02               	mullw	2
 17669  00216C  0E00               	movlw	low _dadosRecebidos
 17670  00216E  24F3               	addwf	prodl,w,c
 17671  002170  6ED9               	movwf	fsr2l,c
 17672  002172  0E03               	movlw	high _dadosRecebidos
 17673  002174  20F4               	addwfc	prodh,w,c
 17674  002176  6EDA               	movwf	fsr2h,c
 17675  002178  C00F  FFDF         	movff	recebeByteLoRaWan@port,indf2
 17676                           
 17677                           ;LoRaWanCore.c: 399: dadosRecebidos[tamDadosRecebidos++].data=converter(frameData[i],fra
      +                          meData[i+1]);
 17678  00217C  505C               	movf	_tamDadosRecebidos,w,c	;volatile
 17679  00217E  0D02               	mullw	2
 17680  002180  0E01               	movlw	1
 17681  002182  26F3               	addwf	prodl,f,c
 17682  002184  0E00               	movlw	0
 17683  002186  22F4               	addwfc	prodh,f,c
 17684  002188  0E00               	movlw	low _dadosRecebidos
 17685  00218A  24F3               	addwf	prodl,w,c
 17686  00218C  6ED9               	movwf	fsr2l,c
 17687  00218E  0E03               	movlw	high _dadosRecebidos
 17688  002190  20F4               	addwfc	prodh,w,c
 17689  002192  6EDA               	movwf	fsr2h,c
 17690  002194  5013               	movf	recebeByteLoRaWan@i_4920,w,c
 17691  002196  6E0A               	movwf	??_recebeByteLoRaWan& (0+255),c
 17692  002198  6A0B               	clrf	(??_recebeByteLoRaWan+1)& (0+255),c
 17693  00219A  0E01               	movlw	1
 17694  00219C  260A               	addwf	??_recebeByteLoRaWan,f,c
 17695  00219E  0E00               	movlw	0
 17696  0021A0  220B               	addwfc	??_recebeByteLoRaWan+1,f,c
 17697  0021A2  0E40               	movlw	low recebeByteLoRaWan@frameData
 17698  0021A4  240A               	addwf	??_recebeByteLoRaWan,w,c
 17699  0021A6  6EE1               	movwf	fsr1l,c
 17700  0021A8  0E04               	movlw	high recebeByteLoRaWan@frameData
 17701  0021AA  200B               	addwfc	??_recebeByteLoRaWan+1,w,c
 17702  0021AC  6EE2               	movwf	fsr1h,c
 17703  0021AE  50E7               	movf	indf1,w,c
 17704  0021B0  6E02               	movwf	converter@conv2,c
 17705  0021B2  5013               	movf	recebeByteLoRaWan@i_4920,w,c
 17706  0021B4  0D01               	mullw	1
 17707  0021B6  0E40               	movlw	low recebeByteLoRaWan@frameData
 17708  0021B8  24F3               	addwf	prodl,w,c
 17709  0021BA  6EE1               	movwf	fsr1l,c
 17710  0021BC  0E04               	movlw	high recebeByteLoRaWan@frameData
 17711  0021BE  20F4               	addwfc	prodh,w,c
 17712  0021C0  6EE2               	movwf	fsr1h,c
 17713  0021C2  50E7               	movf	indf1,w,c
 17714  0021C4  ECD0  F024         	call	_converter
 17715  0021C8  6EDF               	movwf	indf2,c
 17716  0021CA  2A5C               	incf	_tamDadosRecebidos,f,c	;volatile
 17717                           
 17718                           ;LoRaWanCore.c: 400: if (tamDadosRecebidos>=10)
 17719  0021CC  0E09               	movlw	9
 17720  0021CE  645C               	cpfsgt	_tamDadosRecebidos,c	;volatile
 17721  0021D0  D001               	goto	i2l2481
 17722  0021D2  0012               	return	
 17723  0021D4                     i2l2481:
 17724  0021D4  0E02               	movlw	2
 17725  0021D6  2613               	addwf	recebeByteLoRaWan@i_4920,f,c
 17726  0021D8                     i2l2479:
 17727  0021D8  0E40               	movlw	low recebeByteLoRaWan@frameData
 17728  0021DA  6E01               	movwf	i2strlen@s,c
 17729  0021DC  0E04               	movlw	high recebeByteLoRaWan@frameData
 17730  0021DE  6E02               	movwf	i2strlen@s+1,c
 17731  0021E0  EC01  F028         	call	i2_strlen	;wreg free
 17732  0021E4  5013               	movf	recebeByteLoRaWan@i_4920,w,c
 17733  0021E6  6E0A               	movwf	??_recebeByteLoRaWan& (0+255),c
 17734  0021E8  6A0B               	clrf	(??_recebeByteLoRaWan+1)& (0+255),c
 17735  0021EA  5001               	movf	?i2_strlen,w,c
 17736  0021EC  5C0A               	subwf	??_recebeByteLoRaWan,w,c
 17737  0021EE  5002               	movf	?i2_strlen+1,w,c
 17738  0021F0  580B               	subwfb	??_recebeByteLoRaWan+1,w,c
 17739  0021F2  A0D8               	btfss	status,0,c
 17740  0021F4  D7B9               	goto	i2l2480
 17741                           
 17742                           ;LoRaWanCore.c: 402: }
 17743                           ;LoRaWanCore.c: 404: if (i>=strlen(frameData)){
 17744  0021F6  0E40               	movlw	low recebeByteLoRaWan@frameData
 17745  0021F8  6E01               	movwf	i2strlen@s,c
 17746  0021FA  0E04               	movlw	high recebeByteLoRaWan@frameData
 17747  0021FC  6E02               	movwf	i2strlen@s+1,c
 17748  0021FE  EC01  F028         	call	i2_strlen	;wreg free
 17749  002202  5013               	movf	recebeByteLoRaWan@i_4920,w,c
 17750  002204  6E0A               	movwf	??_recebeByteLoRaWan& (0+255),c
 17751  002206  6A0B               	clrf	(??_recebeByteLoRaWan+1)& (0+255),c
 17752  002208  5001               	movf	?i2_strlen,w,c
 17753  00220A  5C0A               	subwf	??_recebeByteLoRaWan,w,c
 17754  00220C  5002               	movf	?i2_strlen+1,w,c
 17755  00220E  580B               	subwfb	??_recebeByteLoRaWan+1,w,c
 17756  002210  B0D8               	btfsc	status,0,c
 17757  002212  D010               	goto	i2l2484
 17758  002214  D012               	goto	i2u921_40
 17759  002216                     
 17760                           ;LoRaWanCore.c: 406: dadosRecebidos[tamDadosRecebidos].data = 0;
 17761  002216  505C               	movf	_tamDadosRecebidos,w,c	;volatile
 17762  002218  0D02               	mullw	2
 17763  00221A  0E01               	movlw	1
 17764  00221C  26F3               	addwf	prodl,f,c
 17765  00221E  0E00               	movlw	0
 17766  002220  22F4               	addwfc	prodh,f,c
 17767  002222  0E00               	movlw	low _dadosRecebidos
 17768  002224  24F3               	addwf	prodl,w,c
 17769  002226  6ED9               	movwf	fsr2l,c
 17770  002228  0E03               	movlw	high _dadosRecebidos
 17771  00222A  20F4               	addwfc	prodh,w,c
 17772  00222C  6EDA               	movwf	fsr2h,c
 17773  00222E  0E00               	movlw	0
 17774  002230  6EDF               	movwf	indf2,c
 17775  002232  2A5C               	incf	_tamDadosRecebidos,f,c	;volatile
 17776  002234                     i2l2484:
 17777  002234  0E0A               	movlw	10
 17778  002236  645C               	cpfsgt	_tamDadosRecebidos,c	;volatile
 17779  002238  D7EE               	goto	i2l2485
 17780  00223A                     i2u921_40:
 17781                           
 17782                           ;LoRaWanCore.c: 407: }
 17783                           ;LoRaWanCore.c: 408: }
 17784                           ;LoRaWanCore.c: 410: }
 17785                           ;LoRaWanCore.c: 411: }
 17786                           ;LoRaWanCore.c: 412: if ((tamFrame>=100) || (b==0x0A))
 17787  00223A  0E64               	movlw	100
 17788  00223C  605B               	cpfslt	_tamFrame,c	;volatile
 17789  00223E  D004               	goto	i2u923_40
 17790  002240  0E0A               	movlw	10
 17791  002242  1810               	xorwf	recebeByteLoRaWan@b,w,c
 17792  002244  A4D8               	btfss	status,2,c
 17793  002246  0012               	return	
 17794  002248                     i2u923_40:
 17795                           
 17796                           ;LoRaWanCore.c: 413: {
 17797                           ;LoRaWanCore.c: 414: tamFrame=0;
 17798  002248  0E00               	movlw	0
 17799  00224A  6E5B               	movwf	_tamFrame,c	;volatile
 17800  00224C  0012               	return	
 17801  00224E                     __end_of_recebeByteLoRaWan:
 17802                           	opt stack 0
 17803                           pclatu	equ	0xFFB
 17804                           pclath	equ	0xFFA
 17805                           tblptru	equ	0xFF8
 17806                           tblptrh	equ	0xFF7
 17807                           tblptrl	equ	0xFF6
 17808                           tablat	equ	0xFF5
 17809                           prodh	equ	0xFF4
 17810                           prodl	equ	0xFF3
 17811                           intcon	equ	0xFF2
 17812                           indf0	equ	0xFEF
 17813                           postinc0	equ	0xFEE
 17814                           fsr0h	equ	0xFEA
 17815                           fsr0l	equ	0xFE9
 17816                           wreg	equ	0xFE8
 17817                           indf1	equ	0xFE7
 17818                           postdec1	equ	0xFE5
 17819                           fsr1h	equ	0xFE2
 17820                           fsr1l	equ	0xFE1
 17821                           indf2	equ	0xFDF
 17822                           postinc2	equ	0xFDE
 17823                           postdec2	equ	0xFDD
 17824                           plusw2	equ	0xFDB
 17825                           fsr2h	equ	0xFDA
 17826                           fsr2l	equ	0xFD9
 17827                           status	equ	0xFD8
 17828                           
 17829 ;; *************** function i2_strlen *****************
 17830 ;; Defined at:
 17831 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strlen.c"
 17832 ;; Parameters:    Size  Location     Type
 17833 ;;  s               2    0[COMRAM] PTR const unsigned char 
 17834 ;;		 -> recebeByteLoRaWan@frameData(100), SYS(5), MAC(5), TxLoRaWan@comando(200), 
 17835 ;;		 -> DataRate@comando(200), SetBandWidth@comando(200), SetSpreadingFactor@comando(200), MacSave@comando(200), 
 17836 ;;		 -> GetAdr@comando(200), SetAdr@comando(200), SetChannelLoRaWan@comando(200), MAC_JOIN_OTAA(10), 
 17837 ;;		 -> SYS_RESET(6), SetAppKey@comando(200), SetAppEUI@comando(200), SetDevEUI@comando(200), 
 17838 ;;		 -> GetDnctr@comando(200), STR_23(16), STR_22(7), STR_21(14), 
 17839 ;;		 -> STR_20(8), STR_19(8), STR_18(10), STR_17(17), 
 17840 ;;		 -> STR_16(11), STR_15(5), STR_14(32), STR_13(7), 
 17841 ;;		 -> STR_12(11), STR_11(11), STR_10(14), STR_9(3), 
 17842 ;; Auto vars:     Size  Location     Type
 17843 ;;  strlen          2    4[COMRAM] PTR const unsigned char 
 17844 ;;		 -> recebeByteLoRaWan@frameData(100), SYS(5), MAC(5), TxLoRaWan@comando(200), 
 17845 ;;		 -> DataRate@comando(200), SetBandWidth@comando(200), SetSpreadingFactor@comando(200), MacSave@comando(200), 
 17846 ;;		 -> GetAdr@comando(200), SetAdr@comando(200), SetChannelLoRaWan@comando(200), MAC_JOIN_OTAA(10), 
 17847 ;;		 -> SYS_RESET(6), SetAppKey@comando(200), SetAppEUI@comando(200), SetDevEUI@comando(200), 
 17848 ;;		 -> GetDnctr@comando(200), STR_23(16), STR_22(7), STR_21(14), 
 17849 ;;		 -> STR_20(8), STR_19(8), STR_18(10), STR_17(17), 
 17850 ;;		 -> STR_16(11), STR_15(5), STR_14(32), STR_13(7), 
 17851 ;;		 -> STR_12(11), STR_11(11), STR_10(14), STR_9(3), 
 17852 ;; Return value:  Size  Location     Type
 17853 ;;                  2    0[COMRAM] unsigned int 
 17854 ;; Registers used:
 17855 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 17856 ;; Tracked objects:
 17857 ;;		On entry : 0/0
 17858 ;;		On exit  : 0/0
 17859 ;;		Unchanged: 0/0
 17860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17861 ;;      Params:         2       0       0       0       0       0       0       0       0
 17862 ;;      Locals:         2       0       0       0       0       0       0       0       0
 17863 ;;      Temps:          2       0       0       0       0       0       0       0       0
 17864 ;;      Totals:         6       0       0       0       0       0       0       0       0
 17865 ;;Total ram usage:        6 bytes
 17866 ;; Hardware stack levels used:    1
 17867 ;; This function calls:
 17868 ;;		Nothing
 17869 ;; This function is called by:
 17870 ;;		_recebeByteLoRaWan
 17871 ;; This function uses a non-reentrant model
 17872 ;;
 17873                           
 17874                           	psect	text59
 17875  005002                     __ptext59:
 17876                           	opt stack 0
 17877  005002                     i2_strlen:
 17878                           	opt stack 23
 17879                           
 17880                           ;incstack = 0
 17881  005002  C001  F005         	movff	i2strlen@s,i2strlen@cp
 17882  005006  C002  F006         	movff	i2strlen@s+1,i2strlen@cp+1
 17883  00500A  D002               	goto	i2l3419
 17884  00500C  4A05               	infsnz	i2strlen@cp,f,c
 17885  00500E  2A06               	incf	i2strlen@cp+1,f,c
 17886  005010                     i2l3419:
 17887  005010  C005  FFF6         	movff	i2strlen@cp,tblptrl
 17888  005014  C006  FFF7         	movff	i2strlen@cp+1,tblptrh
 17889  005018  6AF8               	clrf	tblptru,c
 17890  00501A  0E07               	movlw	(high __ramtop+-1)
 17891  00501C  64F7               	cpfsgt	tblptrh,c
 17892  00501E  D003               	bra	i2u905_47
 17893  005020  0008               	tblrd		*
 17894  005022  50F5               	movf	tablat,w,c
 17895  005024  D005               	bra	i2u905_40
 17896  005026                     i2u905_47:
 17897  005026  CFF6 FFE9          	movff	tblptrl,fsr0l
 17898  00502A  CFF7 FFEA          	movff	tblptrh,fsr0h
 17899  00502E  50EF               	movf	indf0,w,c
 17900  005030                     i2u905_40:
 17901  005030  0900               	iorlw	0
 17902  005032  A4D8               	btfss	status,2,c
 17903  005034  D7EB               	goto	i2l3420
 17904  005036  C001  F003         	movff	i2strlen@s,??i2_strlen
 17905  00503A  C002  F004         	movff	i2strlen@s+1,??i2_strlen+1
 17906  00503E  1E03               	comf	??i2_strlen,f,c
 17907  005040  1E04               	comf	??i2_strlen+1,f,c
 17908  005042  4A03               	infsnz	??i2_strlen,f,c
 17909  005044  2A04               	incf	??i2_strlen+1,f,c
 17910  005046  5005               	movf	i2strlen@cp,w,c
 17911  005048  2403               	addwf	??i2_strlen,w,c
 17912  00504A  6E01               	movwf	?i2_strlen,c
 17913  00504C  5006               	movf	i2strlen@cp+1,w,c
 17914  00504E  2004               	addwfc	??i2_strlen+1,w,c
 17915  005050  6E02               	movwf	?i2_strlen+1,c
 17916  005052  0012               	return	
 17917  005054                     __end_ofi2_strlen:
 17918                           	opt stack 0
 17919                           pclatu	equ	0xFFB
 17920                           pclath	equ	0xFFA
 17921                           tblptru	equ	0xFF8
 17922                           tblptrh	equ	0xFF7
 17923                           tblptrl	equ	0xFF6
 17924                           tablat	equ	0xFF5
 17925                           prodh	equ	0xFF4
 17926                           prodl	equ	0xFF3
 17927                           intcon	equ	0xFF2
 17928                           indf0	equ	0xFEF
 17929                           postinc0	equ	0xFEE
 17930                           fsr0h	equ	0xFEA
 17931                           fsr0l	equ	0xFE9
 17932                           wreg	equ	0xFE8
 17933                           indf1	equ	0xFE7
 17934                           postdec1	equ	0xFE5
 17935                           fsr1h	equ	0xFE2
 17936                           fsr1l	equ	0xFE1
 17937                           indf2	equ	0xFDF
 17938                           postinc2	equ	0xFDE
 17939                           postdec2	equ	0xFDD
 17940                           plusw2	equ	0xFDB
 17941                           fsr2h	equ	0xFDA
 17942                           fsr2l	equ	0xFD9
 17943                           status	equ	0xFD8
 17944                           
 17945 ;; *************** function _strncmp *****************
 17946 ;; Defined at:
 17947 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strncmp.c"
 17948 ;; Parameters:    Size  Location     Type
 17949 ;;  s1              2    0[COMRAM] PTR const unsigned char 
 17950 ;;		 -> recebeByteLoRaWan@frameData(100), 
 17951 ;;  s2              2    2[COMRAM] PTR const unsigned char 
 17952 ;;		 -> STR_23(16), STR_22(7), STR_21(14), STR_20(8), 
 17953 ;;		 -> STR_19(8), STR_18(10), STR_17(17), STR_16(11), 
 17954 ;;		 -> STR_15(5), STR_14(32), STR_13(7), STR_12(11), 
 17955 ;;		 -> STR_11(11), STR_10(14), STR_9(3), 
 17956 ;;  len             2    4[COMRAM] unsigned int 
 17957 ;; Auto vars:     Size  Location     Type
 17958 ;;		None
 17959 ;; Return value:  Size  Location     Type
 17960 ;;                  2    0[COMRAM] int 
 17961 ;; Registers used:
 17962 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17963 ;; Tracked objects:
 17964 ;;		On entry : 0/0
 17965 ;;		On exit  : 0/0
 17966 ;;		Unchanged: 0/0
 17967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17968 ;;      Params:         6       0       0       0       0       0       0       0       0
 17969 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17970 ;;      Temps:          3       0       0       0       0       0       0       0       0
 17971 ;;      Totals:         9       0       0       0       0       0       0       0       0
 17972 ;;Total ram usage:        9 bytes
 17973 ;; Hardware stack levels used:    1
 17974 ;; This function calls:
 17975 ;;		Nothing
 17976 ;; This function is called by:
 17977 ;;		_recebeByteLoRaWan
 17978 ;; This function uses a non-reentrant model
 17979 ;;
 17980                           
 17981                           	psect	text60
 17982  004AAA                     __ptext60:
 17983                           	opt stack 0
 17984  004AAA                     _strncmp:
 17985                           	opt stack 23
 17986                           
 17987                           ;incstack = 0
 17988  004AAA  D033               	goto	i2l3425
 17989  004AAC                     i2l9530:
 17990  004AAC  C001  FFD9         	movff	strncmp@s1,fsr2l
 17991  004AB0  C002  FFDA         	movff	strncmp@s1+1,fsr2h
 17992  004AB4  50DF               	movf	indf2,w,c
 17993  004AB6  B4D8               	btfsc	status,2,c
 17994  004AB8  D00F               	goto	i2u892_40
 17995  004ABA  C001  FFD9         	movff	strncmp@s1,fsr2l
 17996  004ABE  C002  FFDA         	movff	strncmp@s1+1,fsr2h
 17997  004AC2  50DF               	movf	indf2,w,c
 17998  004AC4  6E07               	movwf	??_strncmp& (0+255),c
 17999  004AC6  C003  FFF6         	movff	strncmp@s2,tblptrl
 18000  004ACA  C004  FFF7         	movff	strncmp@s2+1,tblptrh
 18001  004ACE                     	if	0	;tblptru may be non-zero
 18002  004ACE                     	endif
 18003  004ACE                     	if	0	;tblptru may be non-zero
 18004  004ACE                     	endif
 18005  004ACE  0008               	tblrd		*
 18006  004AD0  50F5               	movf	tablat,w,c
 18007  004AD2  1807               	xorwf	??_strncmp,w,c
 18008  004AD4  B4D8               	btfsc	status,2,c
 18009  004AD6  D019               	goto	i2l3427
 18010  004AD8                     i2u892_40:
 18011  004AD8  C003  FFF6         	movff	strncmp@s2,tblptrl
 18012  004ADC  C004  FFF7         	movff	strncmp@s2+1,tblptrh
 18013  004AE0                     	if	0	;tblptru may be non-zero
 18014  004AE0                     	endif
 18015  004AE0                     	if	0	;tblptru may be non-zero
 18016  004AE0                     	endif
 18017  004AE0  0008               	tblrd		*
 18018  004AE2  50F5               	movf	tablat,w,c
 18019  004AE4  6E07               	movwf	??_strncmp& (0+255),c
 18020  004AE6  6A08               	clrf	(??_strncmp+1)& (0+255),c
 18021  004AE8  1E07               	comf	??_strncmp,f,c
 18022  004AEA  1E08               	comf	??_strncmp+1,f,c
 18023  004AEC  4A07               	infsnz	??_strncmp,f,c
 18024  004AEE  2A08               	incf	??_strncmp+1,f,c
 18025  004AF0  C001  FFD9         	movff	strncmp@s1,fsr2l
 18026  004AF4  C002  FFDA         	movff	strncmp@s1+1,fsr2h
 18027  004AF8  50DF               	movf	indf2,w,c
 18028  004AFA  6E09               	movwf	(??_strncmp+2)& (0+255),c
 18029  004AFC  5009               	movf	??_strncmp+2,w,c
 18030  004AFE  2407               	addwf	??_strncmp,w,c
 18031  004B00  6E01               	movwf	?_strncmp,c
 18032  004B02  0E00               	movlw	0
 18033  004B04  2008               	addwfc	??_strncmp+1,w,c
 18034  004B06  6E02               	movwf	?_strncmp+1,c
 18035  004B08  0012               	return	
 18036  004B0A                     i2l3427:
 18037  004B0A  4A01               	infsnz	strncmp@s1,f,c
 18038  004B0C  2A02               	incf	strncmp@s1+1,f,c
 18039  004B0E  4A03               	infsnz	strncmp@s2,f,c
 18040  004B10  2A04               	incf	strncmp@s2+1,f,c
 18041  004B12                     i2l3425:
 18042  004B12  0605               	decf	strncmp@len,f,c
 18043  004B14  A0D8               	btfss	status,0,c
 18044  004B16  0606               	decf	strncmp@len+1,f,c
 18045  004B18  2805               	incf	strncmp@len,w,c
 18046  004B1A  E1C8               	bnz	i2l9530
 18047  004B1C  2806               	incf	strncmp@len+1,w,c
 18048  004B1E  A4D8               	btfss	status,2,c
 18049  004B20  D7C5               	goto	i2l3426
 18050  004B22  0E00               	movlw	0
 18051  004B24  6E02               	movwf	?_strncmp+1,c
 18052  004B26  0E00               	movlw	0
 18053  004B28  6E01               	movwf	?_strncmp,c
 18054  004B2A  0012               	return	
 18055  004B2C                     __end_of_strncmp:
 18056                           	opt stack 0
 18057                           pclatu	equ	0xFFB
 18058                           pclath	equ	0xFFA
 18059                           tblptru	equ	0xFF8
 18060                           tblptrh	equ	0xFF7
 18061                           tblptrl	equ	0xFF6
 18062                           tablat	equ	0xFF5
 18063                           prodh	equ	0xFF4
 18064                           prodl	equ	0xFF3
 18065                           intcon	equ	0xFF2
 18066                           indf0	equ	0xFEF
 18067                           postinc0	equ	0xFEE
 18068                           fsr0h	equ	0xFEA
 18069                           fsr0l	equ	0xFE9
 18070                           wreg	equ	0xFE8
 18071                           indf1	equ	0xFE7
 18072                           postdec1	equ	0xFE5
 18073                           fsr1h	equ	0xFE2
 18074                           fsr1l	equ	0xFE1
 18075                           indf2	equ	0xFDF
 18076                           postinc2	equ	0xFDE
 18077                           postdec2	equ	0xFDD
 18078                           plusw2	equ	0xFDB
 18079                           fsr2h	equ	0xFDA
 18080                           fsr2l	equ	0xFD9
 18081                           status	equ	0xFD8
 18082                           
 18083 ;; *************** function _strcpy *****************
 18084 ;; Defined at:
 18085 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strcpy.c"
 18086 ;; Parameters:    Size  Location     Type
 18087 ;;  to              2    0[COMRAM] PTR unsigned char 
 18088 ;;		 -> frameBuffer(150), 
 18089 ;;  from            2    2[COMRAM] PTR const unsigned char 
 18090 ;;		 -> recebeByteLoRaWan@frameData(100), 
 18091 ;; Auto vars:     Size  Location     Type
 18092 ;;  cp              2    4[COMRAM] PTR unsigned char 
 18093 ;;		 -> frameBuffer(150), 
 18094 ;; Return value:  Size  Location     Type
 18095 ;;                  2    0[COMRAM] PTR unsigned char 
 18096 ;; Registers used:
 18097 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 18098 ;; Tracked objects:
 18099 ;;		On entry : 0/0
 18100 ;;		On exit  : 0/0
 18101 ;;		Unchanged: 0/0
 18102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18103 ;;      Params:         4       0       0       0       0       0       0       0       0
 18104 ;;      Locals:         2       0       0       0       0       0       0       0       0
 18105 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18106 ;;      Totals:         6       0       0       0       0       0       0       0       0
 18107 ;;Total ram usage:        6 bytes
 18108 ;; Hardware stack levels used:    1
 18109 ;; This function calls:
 18110 ;;		Nothing
 18111 ;; This function is called by:
 18112 ;;		_recebeByteLoRaWan
 18113 ;; This function uses a non-reentrant model
 18114 ;;
 18115                           
 18116                           	psect	text61
 18117  005526                     __ptext61:
 18118                           	opt stack 0
 18119  005526                     _strcpy:
 18120                           	opt stack 23
 18121                           
 18122                           ;incstack = 0
 18123  005526  C001  F005         	movff	strcpy@to,strcpy@cp
 18124  00552A  C002  F006         	movff	strcpy@to+1,strcpy@cp+1
 18125  00552E  D004               	goto	i2l3413
 18126  005530  4A05               	infsnz	strcpy@cp,f,c
 18127  005532  2A06               	incf	strcpy@cp+1,f,c
 18128  005534  4A03               	infsnz	strcpy@from,f,c
 18129  005536  2A04               	incf	strcpy@from+1,f,c
 18130  005538                     i2l3413:
 18131  005538  C003  FFD9         	movff	strcpy@from,fsr2l
 18132  00553C  C004  FFDA         	movff	strcpy@from+1,fsr2h
 18133  005540  C005  FFE1         	movff	strcpy@cp,fsr1l
 18134  005544  C006  FFE2         	movff	strcpy@cp+1,fsr1h
 18135  005548  CFDF FFE7          	movff	indf2,indf1
 18136  00554C  50E7               	movf	indf1,w,c
 18137  00554E  B4D8               	btfsc	status,2,c
 18138  005550  0012               	return	
 18139  005552  D7EE               	goto	i2l3414
 18140  005554                     __end_of_strcpy:
 18141                           	opt stack 0
 18142                           pclatu	equ	0xFFB
 18143                           pclath	equ	0xFFA
 18144                           tblptru	equ	0xFF8
 18145                           tblptrh	equ	0xFF7
 18146                           tblptrl	equ	0xFF6
 18147                           tablat	equ	0xFF5
 18148                           prodh	equ	0xFF4
 18149                           prodl	equ	0xFF3
 18150                           intcon	equ	0xFF2
 18151                           indf0	equ	0xFEF
 18152                           postinc0	equ	0xFEE
 18153                           fsr0h	equ	0xFEA
 18154                           fsr0l	equ	0xFE9
 18155                           wreg	equ	0xFE8
 18156                           indf1	equ	0xFE7
 18157                           postdec1	equ	0xFE5
 18158                           fsr1h	equ	0xFE2
 18159                           fsr1l	equ	0xFE1
 18160                           indf2	equ	0xFDF
 18161                           postinc2	equ	0xFDE
 18162                           postdec2	equ	0xFDD
 18163                           plusw2	equ	0xFDB
 18164                           fsr2h	equ	0xFDA
 18165                           fsr2l	equ	0xFD9
 18166                           status	equ	0xFD8
 18167                           
 18168 ;; *************** function _strcmp *****************
 18169 ;; Defined at:
 18170 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strcmp.c"
 18171 ;; Parameters:    Size  Location     Type
 18172 ;;  s1              2    0[COMRAM] PTR const unsigned char 
 18173 ;;		 -> recebeByteLoRaWan@frameData(100), 
 18174 ;;  s2              2    2[COMRAM] PTR const unsigned char 
 18175 ;;		 -> STR_23(16), STR_22(7), STR_21(14), STR_20(8), 
 18176 ;;		 -> STR_19(8), STR_18(10), STR_17(17), STR_16(11), 
 18177 ;;		 -> STR_15(5), STR_14(32), STR_13(7), STR_12(11), 
 18178 ;;		 -> STR_11(11), STR_10(14), STR_9(3), 
 18179 ;; Auto vars:     Size  Location     Type
 18180 ;;  r               1    5[COMRAM] char 
 18181 ;; Return value:  Size  Location     Type
 18182 ;;                  2    0[COMRAM] int 
 18183 ;; Registers used:
 18184 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 18185 ;; Tracked objects:
 18186 ;;		On entry : 0/0
 18187 ;;		On exit  : 0/0
 18188 ;;		Unchanged: 0/0
 18189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18190 ;;      Params:         4       0       0       0       0       0       0       0       0
 18191 ;;      Locals:         1       0       0       0       0       0       0       0       0
 18192 ;;      Temps:          1       0       0       0       0       0       0       0       0
 18193 ;;      Totals:         6       0       0       0       0       0       0       0       0
 18194 ;;Total ram usage:        6 bytes
 18195 ;; Hardware stack levels used:    1
 18196 ;; This function calls:
 18197 ;;		Nothing
 18198 ;; This function is called by:
 18199 ;;		_recebeByteLoRaWan
 18200 ;; This function uses a non-reentrant model
 18201 ;;
 18202                           
 18203                           	psect	text62
 18204  0050A4                     __ptext62:
 18205                           	opt stack 0
 18206  0050A4                     _strcmp:
 18207                           	opt stack 23
 18208                           
 18209                           ;incstack = 0
 18210  0050A4  D004               	goto	i2l3405
 18211  0050A6  4A01               	infsnz	strcmp@s1,f,c
 18212  0050A8  2A02               	incf	strcmp@s1+1,f,c
 18213  0050AA  4A03               	infsnz	strcmp@s2,f,c
 18214  0050AC  2A04               	incf	strcmp@s2+1,f,c
 18215  0050AE                     i2l3405:
 18216  0050AE  C001  FFD9         	movff	strcmp@s1,fsr2l
 18217  0050B2  C002  FFDA         	movff	strcmp@s1+1,fsr2h
 18218  0050B6  50DF               	movf	indf2,w,c
 18219  0050B8  6E05               	movwf	??_strcmp& (0+255),c
 18220  0050BA  C003  FFF6         	movff	strcmp@s2,tblptrl
 18221  0050BE  C004  FFF7         	movff	strcmp@s2+1,tblptrh
 18222  0050C2                     	if	0	;tblptru may be non-zero
 18223  0050C2                     	endif
 18224  0050C2                     	if	0	;tblptru may be non-zero
 18225  0050C2                     	endif
 18226  0050C2  0008               	tblrd		*
 18227  0050C4  50F5               	movf	tablat,w,c
 18228  0050C6  0800               	sublw	0
 18229  0050C8  2405               	addwf	??_strcmp,w,c
 18230  0050CA  6E06               	movwf	strcmp@r,c
 18231  0050CC  5006               	movf	strcmp@r,w,c
 18232  0050CE  A4D8               	btfss	status,2,c
 18233  0050D0  D007               	goto	i2u890_40
 18234  0050D2  C001  FFD9         	movff	strcmp@s1,fsr2l
 18235  0050D6  C002  FFDA         	movff	strcmp@s1+1,fsr2h
 18236  0050DA  50DF               	movf	indf2,w,c
 18237  0050DC  A4D8               	btfss	status,2,c
 18238  0050DE  D7E3               	goto	i2l3406
 18239  0050E0                     i2u890_40:
 18240  0050E0  5006               	movf	strcmp@r,w,c
 18241  0050E2  6E01               	movwf	?_strcmp,c
 18242  0050E4  6A02               	clrf	?_strcmp+1,c
 18243  0050E6  BE01               	btfsc	?_strcmp,7,c
 18244  0050E8  0602               	decf	?_strcmp+1,f,c
 18245  0050EA  0012               	return	
 18246  0050EC                     __end_of_strcmp:
 18247                           	opt stack 0
 18248                           pclatu	equ	0xFFB
 18249                           pclath	equ	0xFFA
 18250                           tblptru	equ	0xFF8
 18251                           tblptrh	equ	0xFF7
 18252                           tblptrl	equ	0xFF6
 18253                           tablat	equ	0xFF5
 18254                           prodh	equ	0xFF4
 18255                           prodl	equ	0xFF3
 18256                           intcon	equ	0xFF2
 18257                           indf0	equ	0xFEF
 18258                           postinc0	equ	0xFEE
 18259                           fsr0h	equ	0xFEA
 18260                           fsr0l	equ	0xFE9
 18261                           wreg	equ	0xFE8
 18262                           indf1	equ	0xFE7
 18263                           postdec1	equ	0xFE5
 18264                           fsr1h	equ	0xFE2
 18265                           fsr1l	equ	0xFE1
 18266                           indf2	equ	0xFDF
 18267                           postinc2	equ	0xFDE
 18268                           postdec2	equ	0xFDD
 18269                           plusw2	equ	0xFDB
 18270                           fsr2h	equ	0xFDA
 18271                           fsr2l	equ	0xFD9
 18272                           status	equ	0xFD8
 18273                           
 18274 ;; *************** function _converter *****************
 18275 ;; Defined at:
 18276 ;;		line 361 in file "XBeeCore.c"
 18277 ;; Parameters:    Size  Location     Type
 18278 ;;  conv1           1    wreg     unsigned char 
 18279 ;;  conv2           1    1[COMRAM] unsigned char 
 18280 ;; Auto vars:     Size  Location     Type
 18281 ;;  conv1           1    5[COMRAM] unsigned char 
 18282 ;;  aux2            1    4[COMRAM] unsigned char 
 18283 ;;  aux             1    3[COMRAM] unsigned char 
 18284 ;;  resul           1    2[COMRAM] unsigned char 
 18285 ;; Return value:  Size  Location     Type
 18286 ;;                  1    wreg      unsigned char 
 18287 ;; Registers used:
 18288 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 18289 ;; Tracked objects:
 18290 ;;		On entry : 0/0
 18291 ;;		On exit  : 0/0
 18292 ;;		Unchanged: 0/0
 18293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18294 ;;      Params:         1       0       0       0       0       0       0       0       0
 18295 ;;      Locals:         4       0       0       0       0       0       0       0       0
 18296 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18297 ;;      Totals:         5       0       0       0       0       0       0       0       0
 18298 ;;Total ram usage:        5 bytes
 18299 ;; Hardware stack levels used:    1
 18300 ;; Hardware stack levels required when called:    1
 18301 ;; This function calls:
 18302 ;;		_toupper
 18303 ;; This function is called by:
 18304 ;;		_recebeByteLoRaWan
 18305 ;;		_send
 18306 ;; This function uses a non-reentrant model
 18307 ;;
 18308                           
 18309                           	psect	text63
 18310  0049A0                     __ptext63:
 18311                           	opt stack 0
 18312  0049A0                     _converter:
 18313                           	opt stack 22
 18314                           
 18315                           ;incstack = 0
 18316                           ;converter@conv1 stored from wreg
 18317  0049A0  6E06               	movwf	converter@conv1,c
 18318                           
 18319                           ;XBeeCore.c: 363: uint8_t aux=0;
 18320  0049A2  0E00               	movlw	0
 18321  0049A4  6E04               	movwf	converter@aux,c
 18322                           
 18323                           ;XBeeCore.c: 364: uint8_t aux2=0;
 18324  0049A6  0E00               	movlw	0
 18325  0049A8  6E05               	movwf	converter@aux2,c
 18326                           
 18327                           ;XBeeCore.c: 365: uint8_t resul=0;
 18328  0049AA  0E00               	movlw	0
 18329  0049AC  6E03               	movwf	converter@resul,c
 18330                           
 18331                           ;XBeeCore.c: 368: conv1=toupper(conv1);
 18332  0049AE  5006               	movf	converter@conv1,w,c
 18333  0049B0  EC5F  F02B         	call	_toupper
 18334  0049B4  6E06               	movwf	converter@conv1,c
 18335                           
 18336                           ;XBeeCore.c: 369: conv2=toupper(conv2);
 18337  0049B6  5002               	movf	converter@conv2,w,c
 18338  0049B8  EC5F  F02B         	call	_toupper
 18339  0049BC  6E02               	movwf	converter@conv2,c
 18340                           
 18341                           ;XBeeCore.c: 371: if ((conv1>='0') && (conv1<='9'))
 18342  0049BE  0E2F               	movlw	47
 18343  0049C0  6406               	cpfsgt	converter@conv1,c
 18344  0049C2  D006               	goto	i2l1476
 18345  0049C4  0E3A               	movlw	58
 18346  0049C6  6006               	cpfslt	converter@conv1,c
 18347  0049C8  D003               	goto	i2l1476
 18348                           
 18349                           ;XBeeCore.c: 372: {
 18350                           ;XBeeCore.c: 373: aux=conv1-'0';
 18351  0049CA  5006               	movf	converter@conv1,w,c
 18352  0049CC  0FD0               	addlw	208
 18353  0049CE  D008               	goto	L17
 18354  0049D0                     i2l1476:
 18355                           
 18356                           ;XBeeCore.c: 375: else if ((conv1>='A') && (conv1<='F'))
 18357  0049D0  0E40               	movlw	64
 18358  0049D2  6406               	cpfsgt	converter@conv1,c
 18359  0049D4  D006               	goto	i2l1478
 18360  0049D6  0E47               	movlw	71
 18361  0049D8  6006               	cpfslt	converter@conv1,c
 18362  0049DA  D003               	goto	i2l1478
 18363                           
 18364                           ;XBeeCore.c: 376: {
 18365                           ;XBeeCore.c: 377: aux=conv1-'A'+10;
 18366  0049DC  5006               	movf	converter@conv1,w,c
 18367  0049DE  0FC9               	addlw	201
 18368  0049E0                     L17:
 18369  0049E0  6E04               	movwf	converter@aux,c
 18370  0049E2                     i2l1478:
 18371                           
 18372                           ;XBeeCore.c: 378: }
 18373                           ;XBeeCore.c: 380: if ((conv2>='0') && (conv2<='9'))
 18374  0049E2  0E2F               	movlw	47
 18375  0049E4  6402               	cpfsgt	converter@conv2,c
 18376  0049E6  D006               	goto	i2l1479
 18377  0049E8  0E3A               	movlw	58
 18378  0049EA  6002               	cpfslt	converter@conv2,c
 18379  0049EC  D003               	goto	i2l1479
 18380                           
 18381                           ;XBeeCore.c: 381: {
 18382                           ;XBeeCore.c: 382: aux2=conv2-'0';
 18383  0049EE  5002               	movf	converter@conv2,w,c
 18384  0049F0  0FD0               	addlw	208
 18385  0049F2  D00A               	goto	L19
 18386  0049F4                     i2l1479:
 18387                           
 18388                           ;XBeeCore.c: 384: else if ((conv2>='A') && (conv2<='F'))
 18389  0049F4  0E40               	movlw	64
 18390  0049F6  6402               	cpfsgt	converter@conv2,c
 18391  0049F8  D006               	goto	i2l1481
 18392  0049FA  0E47               	movlw	71
 18393  0049FC  6002               	cpfslt	converter@conv2,c
 18394  0049FE  D003               	goto	i2l1481
 18395                           
 18396                           ;XBeeCore.c: 385: {
 18397                           ;XBeeCore.c: 386: aux2=conv2-'A'+10;
 18398  004A00  5002               	movf	converter@conv2,w,c
 18399  004A02  0FC9               	addlw	201
 18400  004A04  D001               	goto	L19
 18401  004A06                     i2l1481:
 18402                           
 18403                           ;XBeeCore.c: 388: else
 18404                           ;XBeeCore.c: 389: {
 18405                           ;XBeeCore.c: 390: aux2=100;
 18406  004A06  0E64               	movlw	100
 18407  004A08                     L19:
 18408  004A08  6E05               	movwf	converter@aux2,c
 18409                           
 18410                           ;XBeeCore.c: 391: }
 18411                           ;XBeeCore.c: 393: if(aux2==100)
 18412  004A0A  0E64               	movlw	100
 18413  004A0C  1805               	xorwf	converter@aux2,w,c
 18414  004A0E  A4D8               	btfss	status,2,c
 18415  004A10  D003               	goto	i2l1483
 18416                           
 18417                           ;XBeeCore.c: 394: {
 18418                           ;XBeeCore.c: 395: resul=aux;
 18419  004A12  C004  F003         	movff	converter@aux,converter@resul
 18420                           
 18421                           ;XBeeCore.c: 396: }
 18422  004A16  D005               	goto	i2l1484
 18423  004A18                     i2l1483:
 18424                           
 18425                           ;XBeeCore.c: 397: else
 18426                           ;XBeeCore.c: 398: {
 18427                           ;XBeeCore.c: 399: resul=(uint8_t)((aux*16)+aux2);
 18428  004A18  5004               	movf	converter@aux,w,c
 18429  004A1A  0D10               	mullw	16
 18430  004A1C  50F3               	movf	prodl,w,c
 18431  004A1E  2405               	addwf	converter@aux2,w,c
 18432  004A20  6E03               	movwf	converter@resul,c
 18433  004A22                     i2l1484:
 18434                           
 18435                           ;XBeeCore.c: 400: }
 18436                           ;XBeeCore.c: 401: return resul;
 18437  004A22  5003               	movf	converter@resul,w,c
 18438  004A24  0012               	return	
 18439  004A26                     __end_of_converter:
 18440                           	opt stack 0
 18441                           pclatu	equ	0xFFB
 18442                           pclath	equ	0xFFA
 18443                           tblptru	equ	0xFF8
 18444                           tblptrh	equ	0xFF7
 18445                           tblptrl	equ	0xFF6
 18446                           tablat	equ	0xFF5
 18447                           prodh	equ	0xFF4
 18448                           prodl	equ	0xFF3
 18449                           intcon	equ	0xFF2
 18450                           indf0	equ	0xFEF
 18451                           postinc0	equ	0xFEE
 18452                           fsr0h	equ	0xFEA
 18453                           fsr0l	equ	0xFE9
 18454                           wreg	equ	0xFE8
 18455                           indf1	equ	0xFE7
 18456                           postdec1	equ	0xFE5
 18457                           fsr1h	equ	0xFE2
 18458                           fsr1l	equ	0xFE1
 18459                           indf2	equ	0xFDF
 18460                           postinc2	equ	0xFDE
 18461                           postdec2	equ	0xFDD
 18462                           plusw2	equ	0xFDB
 18463                           fsr2h	equ	0xFDA
 18464                           fsr2l	equ	0xFD9
 18465                           status	equ	0xFD8
 18466                           
 18467 ;; *************** function _toupper *****************
 18468 ;; Defined at:
 18469 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\toupper.c"
 18470 ;; Parameters:    Size  Location     Type
 18471 ;;  c               1    wreg     unsigned char 
 18472 ;; Auto vars:     Size  Location     Type
 18473 ;;  c               1    0[COMRAM] unsigned char 
 18474 ;; Return value:  Size  Location     Type
 18475 ;;                  1    wreg      unsigned char 
 18476 ;; Registers used:
 18477 ;;		wreg, status,2, status,0
 18478 ;; Tracked objects:
 18479 ;;		On entry : 0/0
 18480 ;;		On exit  : 0/0
 18481 ;;		Unchanged: 0/0
 18482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18483 ;;      Params:         0       0       0       0       0       0       0       0       0
 18484 ;;      Locals:         1       0       0       0       0       0       0       0       0
 18485 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18486 ;;      Totals:         1       0       0       0       0       0       0       0       0
 18487 ;;Total ram usage:        1 bytes
 18488 ;; Hardware stack levels used:    1
 18489 ;; This function calls:
 18490 ;;		Nothing
 18491 ;; This function is called by:
 18492 ;;		_converter
 18493 ;; This function uses a non-reentrant model
 18494 ;;
 18495                           
 18496                           	psect	text64
 18497  0056BE                     __ptext64:
 18498                           	opt stack 0
 18499  0056BE                     _toupper:
 18500                           	opt stack 22
 18501                           
 18502                           ;incstack = 0
 18503                           ;toupper@c stored from wreg
 18504  0056BE  6E01               	movwf	toupper@c,c
 18505  0056C0  0E7B               	movlw	123
 18506  0056C2  6001               	cpfslt	toupper@c,c
 18507  0056C4  D004               	goto	i2l3434
 18508  0056C6  0E60               	movlw	96
 18509  0056C8  6401               	cpfsgt	toupper@c,c
 18510  0056CA  D001               	goto	i2l3434
 18511  0056CC  9A01               	bcf	toupper@c,5,c
 18512  0056CE                     i2l3434:
 18513  0056CE  5001               	movf	toupper@c,w,c
 18514  0056D0  0012               	return	
 18515  0056D2                     __end_of_toupper:
 18516                           	opt stack 0
 18517                           pclatu	equ	0xFFB
 18518                           pclath	equ	0xFFA
 18519                           tblptru	equ	0xFF8
 18520                           tblptrh	equ	0xFF7
 18521                           tblptrl	equ	0xFF6
 18522                           tablat	equ	0xFF5
 18523                           prodh	equ	0xFF4
 18524                           prodl	equ	0xFF3
 18525                           intcon	equ	0xFF2
 18526                           indf0	equ	0xFEF
 18527                           postinc0	equ	0xFEE
 18528                           fsr0h	equ	0xFEA
 18529                           fsr0l	equ	0xFE9
 18530                           wreg	equ	0xFE8
 18531                           indf1	equ	0xFE7
 18532                           postdec1	equ	0xFE5
 18533                           fsr1h	equ	0xFE2
 18534                           fsr1l	equ	0xFE1
 18535                           indf2	equ	0xFDF
 18536                           postinc2	equ	0xFDE
 18537                           postdec2	equ	0xFDD
 18538                           plusw2	equ	0xFDB
 18539                           fsr2h	equ	0xFDA
 18540                           fsr2l	equ	0xFD9
 18541                           status	equ	0xFD8
 18542                           
 18543 ;; *************** function _getch *****************
 18544 ;; Defined at:
 18545 ;;		line 52 in file "uart/uart.c"
 18546 ;; Parameters:    Size  Location     Type
 18547 ;;		None
 18548 ;; Auto vars:     Size  Location     Type
 18549 ;;  data            1    2[COMRAM] unsigned char 
 18550 ;;  RC              1    1[COMRAM] unsigned char 
 18551 ;; Return value:  Size  Location     Type
 18552 ;;                  1    wreg      unsigned char 
 18553 ;; Registers used:
 18554 ;;		wreg, status,2, status,0
 18555 ;; Tracked objects:
 18556 ;;		On entry : 0/0
 18557 ;;		On exit  : 0/0
 18558 ;;		Unchanged: 0/0
 18559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18560 ;;      Params:         0       0       0       0       0       0       0       0       0
 18561 ;;      Locals:         2       0       0       0       0       0       0       0       0
 18562 ;;      Temps:          1       0       0       0       0       0       0       0       0
 18563 ;;      Totals:         3       0       0       0       0       0       0       0       0
 18564 ;;Total ram usage:        3 bytes
 18565 ;; Hardware stack levels used:    1
 18566 ;; This function calls:
 18567 ;;		Nothing
 18568 ;; This function is called by:
 18569 ;;		_SYS_InterruptHigh
 18570 ;;		_flush
 18571 ;;		_parse_message
 18572 ;; This function uses a non-reentrant model
 18573 ;;
 18574                           
 18575                           	psect	text65
 18576  00561A                     __ptext65:
 18577                           	opt stack 0
 18578  00561A                     _getch:
 18579                           	opt stack 24
 18580                           
 18581                           ;uart.c: 54: uint8_t RC;
 18582                           ;uart.c: 55: char data;
 18583                           ;uart.c: 57: if (!RCIF)
 18584                           
 18585                           ;incstack = 0
 18586  00561A  BA9E               	btfsc	3998,5,c	;volatile
 18587  00561C  D002               	goto	i2l1221
 18588                           
 18589                           ;uart.c: 58: return 0;
 18590  00561E  0E00               	movlw	0
 18591  005620  0012               	return	
 18592  005622                     i2l1221:
 18593                           
 18594                           ;uart.c: 60: RC=RCSTA;
 18595  005622  CFAB F002          	movff	4011,getch@RC	;volatile
 18596                           
 18597                           ;uart.c: 61: data=RCREG;
 18598  005626  CFAE F003          	movff	4014,getch@data	;volatile
 18599                           
 18600                           ;uart.c: 64: if ((RC & 0x06)!=0)
 18601  00562A  C002  F001         	movff	getch@RC,??_getch
 18602  00562E  0E06               	movlw	6
 18603  005630  1601               	andwf	??_getch,f,c
 18604  005632  B4D8               	btfsc	status,2,c
 18605  005634  D003               	goto	i2l1223
 18606                           
 18607                           ;uart.c: 65: {
 18608                           ;uart.c: 66: RCSTAbits.CREN=0;
 18609  005636  98AB               	bcf	4011,4,c	;volatile
 18610                           
 18611                           ;uart.c: 67: __nop();
 18612  005638  F000               	nop	
 18613                           
 18614                           ;uart.c: 68: RCSTAbits.CREN=1;
 18615  00563A  88AB               	bsf	4011,4,c	;volatile
 18616  00563C                     i2l1223:
 18617                           
 18618                           ;uart.c: 69: }
 18619                           ;uart.c: 71: return data;
 18620  00563C  5003               	movf	getch@data,w,c
 18621  00563E  0012               	return	
 18622  005640                     __end_of_getch:
 18623                           	opt stack 0
 18624                           pclatu	equ	0xFFB
 18625                           pclath	equ	0xFFA
 18626                           tblptru	equ	0xFF8
 18627                           tblptrh	equ	0xFF7
 18628                           tblptrl	equ	0xFF6
 18629                           tablat	equ	0xFF5
 18630                           prodh	equ	0xFF4
 18631                           prodl	equ	0xFF3
 18632                           intcon	equ	0xFF2
 18633                           indf0	equ	0xFEF
 18634                           postinc0	equ	0xFEE
 18635                           fsr0h	equ	0xFEA
 18636                           fsr0l	equ	0xFE9
 18637                           wreg	equ	0xFE8
 18638                           indf1	equ	0xFE7
 18639                           postdec1	equ	0xFE5
 18640                           fsr1h	equ	0xFE2
 18641                           fsr1l	equ	0xFE1
 18642                           indf2	equ	0xFDF
 18643                           postinc2	equ	0xFDE
 18644                           postdec2	equ	0xFDD
 18645                           plusw2	equ	0xFDB
 18646                           fsr2h	equ	0xFDA
 18647                           fsr2l	equ	0xFD9
 18648                           status	equ	0xFD8
 18649                           
 18650 ;; *************** function _USBDeviceTasks *****************
 18651 ;; Defined at:
 18652 ;;		line 477 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 18653 ;; Parameters:    Size  Location     Type
 18654 ;;		None
 18655 ;; Auto vars:     Size  Location     Type
 18656 ;;  i               1   27[COMRAM] unsigned char 
 18657 ;; Return value:  Size  Location     Type
 18658 ;;                  1    wreg      void 
 18659 ;; Registers used:
 18660 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18661 ;; Tracked objects:
 18662 ;;		On entry : 0/0
 18663 ;;		On exit  : 0/0
 18664 ;;		Unchanged: 0/0
 18665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18666 ;;      Params:         0       0       0       0       0       0       0       0       0
 18667 ;;      Locals:         1       0       0       0       0       0       0       0       0
 18668 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18669 ;;      Totals:         1       0       0       0       0       0       0       0       0
 18670 ;;Total ram usage:        1 bytes
 18671 ;; Hardware stack levels used:    1
 18672 ;; Hardware stack levels required when called:    8
 18673 ;; This function calls:
 18674 ;;		_USBCtrlEPAllowStatusStage
 18675 ;;		_USBCtrlEPService
 18676 ;;		_USBIncrement1msInternalTimers
 18677 ;;		_USBStallHandler
 18678 ;;		_USBSuspend
 18679 ;;		_USBWakeFromSuspend
 18680 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 18681 ;;		i2_USBDeviceInit
 18682 ;; This function is called by:
 18683 ;;		_SYS_InterruptHigh
 18684 ;; This function uses a non-reentrant model
 18685 ;;
 18686                           
 18687                           	psect	text66
 18688  002F94                     __ptext66:
 18689                           	opt stack 0
 18690  002F94                     _USBDeviceTasks:
 18691                           	opt stack 16
 18692                           
 18693                           ;usb_device.c: 479: uint8_t i;
 18694                           ;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
 18695                           
 18696                           ;incstack = 0
 18697  002F94  0459               	decf	_USBDeviceState,w,c	;volatile
 18698  002F96  B4D8               	btfsc	status,2,c
 18699                           
 18700                           ;usb_device.c: 591: {
 18701                           ;usb_device.c: 601: if(!UCONbits.SE0)
 18702  002F98  BA6D               	btfsc	3949,5,c	;volatile
 18703  002F9A  D006               	goto	i2l408
 18704                           
 18705                           ;usb_device.c: 602: {
 18706                           ;usb_device.c: 608: {UIR = 0;};
 18707  002F9C  0E00               	movlw	0
 18708  002F9E  6E68               	movwf	3944,c	;volatile
 18709                           
 18710                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
 18711  002FA0  8069               	bsf	3945,0,c	;volatile
 18712                           
 18713                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
 18714  002FA2  8869               	bsf	3945,4,c	;volatile
 18715                           
 18716                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
 18717  002FA4  0E02               	movlw	2
 18718  002FA6  6E59               	movwf	_USBDeviceState,c	;volatile
 18719  002FA8                     i2l408:
 18720                           
 18721                           ;usb_device.c: 617: }
 18722                           ;usb_device.c: 618: }
 18723                           ;usb_device.c: 634: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 18724  002FA8  B468               	btfsc	3944,2,c	;volatile
 18725  002FAA  A469               	btfss	3945,2,c	;volatile
 18726  002FAC  D003               	goto	i2l409
 18727                           
 18728                           ;usb_device.c: 635: {
 18729                           ;usb_device.c: 636: (UIR &= 0xFB);
 18730  002FAE  9468               	bcf	3944,2,c	;volatile
 18731                           
 18732                           ;usb_device.c: 640: USBWakeFromSuspend();
 18733  002FB0  EC16  F02A         	call	_USBWakeFromSuspend	;wreg free
 18734  002FB4                     i2l409:
 18735                           
 18736                           ;usb_device.c: 642: }
 18737                           ;usb_device.c: 647: if(UCONbits.SUSPND==1)
 18738  002FB4  A26D               	btfss	3949,1,c	;volatile
 18739  002FB6  D002               	goto	i2l410
 18740                           
 18741                           ;usb_device.c: 648: {
 18742                           ;usb_device.c: 649: {PIR2bits.USBIF = 0;};
 18743  002FB8  9AA1               	bcf	4001,5,c	;volatile
 18744                           
 18745                           ;usb_device.c: 650: return;
 18746  002FBA  0012               	return	
 18747  002FBC                     i2l410:
 18748                           
 18749                           ;usb_device.c: 651: }
 18750                           ;usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
 18751  002FBC  B068               	btfsc	3944,0,c	;volatile
 18752  002FBE  A069               	btfss	3945,0,c	;volatile
 18753  002FC0  D006               	goto	i2l412
 18754                           
 18755                           ;usb_device.c: 664: {
 18756                           ;usb_device.c: 665: USBDeviceInit();
 18757  002FC2  ECF9  F015         	call	i2_USBDeviceInit	;wreg free
 18758                           
 18759                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
 18760  002FC6  8AA0               	bsf	4000,5,c	;volatile
 18761                           
 18762                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
 18763  002FC8  0E04               	movlw	4
 18764  002FCA  6E59               	movwf	_USBDeviceState,c	;volatile
 18765                           
 18766                           ;usb_device.c: 681: (UIR &= 0xFE);
 18767  002FCC  9068               	bcf	3944,0,c	;volatile
 18768  002FCE                     i2l412:
 18769                           
 18770                           ;usb_device.c: 682: }
 18771                           ;usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 18772  002FCE  B868               	btfsc	3944,4,c	;volatile
 18773  002FD0  A869               	btfss	3945,4,c	;volatile
 18774  002FD2  D002               	goto	i2l413
 18775                           
 18776                           ;usb_device.c: 688: {
 18777                           ;usb_device.c: 694: USBSuspend();
 18778  002FD4  EC7B  F02A         	call	_USBSuspend	;wreg free
 18779  002FD8                     i2l413:
 18780                           
 18781                           ;usb_device.c: 696: }
 18782                           ;usb_device.c: 708: if(UIRbits.SOFIF)
 18783  002FD8  AC68               	btfss	3944,6,c	;volatile
 18784  002FDA  D01A               	goto	i2l417
 18785                           
 18786                           ;usb_device.c: 709: {
 18787                           ;usb_device.c: 711: if(UIEbits.SOFIE)
 18788  002FDC  AC69               	btfss	3945,6,c	;volatile
 18789  002FDE  D00E               	goto	i2l415
 18790                           
 18791                           ;usb_device.c: 712: {
 18792                           ;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 18793  002FE0  0E00               	movlw	0
 18794  002FE2  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 18795  002FE4  0E73               	movlw	115
 18796  002FE6  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 18797  002FE8  0E00               	movlw	0
 18798  002FEA  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 18799  002FEC  0E00               	movlw	0
 18800  002FEE  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 18801  002FF0  0E00               	movlw	0
 18802  002FF2  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 18803  002FF4  0E01               	movlw	1
 18804  002FF6  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 18805  002FF8  ECA8  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 18806  002FFC                     i2l415:
 18807                           
 18808                           ;usb_device.c: 714: }
 18809                           ;usb_device.c: 715: (UIR &= 0xBF);
 18810  002FFC  9C68               	bcf	3944,6,c	;volatile
 18811                           
 18812                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
 18813  002FFE  EC20  F02B         	call	_USBIncrement1msInternalTimers	;wreg free
 18814                           
 18815                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 18816  003002  5055               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 18817  003004  A4D8               	btfss	status,2,c
 18818                           
 18819                           ;usb_device.c: 736: {
 18820                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 18821  003006  0655               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 18822                           
 18823                           ;usb_device.c: 738: }
 18824                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 18825  003008  5055               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 18826  00300A  B4D8               	btfsc	status,2,c
 18827                           
 18828                           ;usb_device.c: 745: {
 18829                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 18830  00300C  ECC0  F01F         	call	_USBCtrlEPAllowStatusStage	;wreg free
 18831  003010                     i2l417:
 18832                           
 18833                           ;usb_device.c: 747: }
 18834                           ;usb_device.c: 749: }
 18835                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
 18836  003010  BA68               	btfsc	3944,5,c	;volatile
 18837  003012  AA69               	btfss	3945,5,c	;volatile
 18838  003014  D002               	goto	i2l418
 18839                           
 18840                           ;usb_device.c: 752: {
 18841                           ;usb_device.c: 753: USBStallHandler();
 18842  003016  EC43  F029         	call	_USBStallHandler	;wreg free
 18843  00301A                     i2l418:
 18844                           
 18845                           ;usb_device.c: 754: }
 18846                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 18847  00301A  B268               	btfsc	3944,1,c	;volatile
 18848  00301C  A269               	btfss	3945,1,c	;volatile
 18849  00301E  D00F               	goto	i2l419
 18850                           
 18851                           ;usb_device.c: 757: {
 18852                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 18853  003020  0E7F               	movlw	127
 18854  003022  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 18855  003024  680D               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 18856  003026  0E00               	movlw	0
 18857  003028  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 18858  00302A  0E00               	movlw	0
 18859  00302C  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 18860  00302E  0E00               	movlw	0
 18861  003030  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 18862  003032  0E01               	movlw	1
 18863  003034  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 18864  003036  ECA8  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 18865                           
 18866                           ;usb_device.c: 759: {UEIR = 0;};
 18867  00303A  0E00               	movlw	0
 18868  00303C  6E6A               	movwf	3946,c	;volatile
 18869  00303E                     i2l419:
 18870                           
 18871                           ;usb_device.c: 767: }
 18872                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 18873  00303E  0E04               	movlw	4
 18874  003040  6059               	cpfslt	_USBDeviceState,c	;volatile
 18875  003042  D002               	goto	i2l420
 18876                           
 18877                           ;usb_device.c: 775: {
 18878                           ;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 18879  003044  9AA1               	bcf	4001,5,c	;volatile
 18880                           
 18881                           ;usb_device.c: 777: return;
 18882  003046  0012               	return	
 18883  003048                     i2l420:
 18884                           
 18885                           ;usb_device.c: 778: }
 18886                           ;usb_device.c: 783: if(UIEbits.TRNIE)
 18887  003048  A669               	btfss	3945,3,c	;volatile
 18888  00304A  D039               	goto	i2u947_40
 18889                           
 18890                           ;usb_device.c: 784: {
 18891                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
 18892  00304C  0E00               	movlw	0
 18893  00304E  6E1C               	movwf	USBDeviceTasks@i,c
 18894  003050                     i2l9870:
 18895  003050  0E03               	movlw	3
 18896  003052  641C               	cpfsgt	USBDeviceTasks@i,c
 18897  003054  D001               	goto	i2l422
 18898  003056  D033               	goto	i2u947_40
 18899  003058                     i2l422:
 18900                           
 18901                           ;usb_device.c: 786: {
 18902                           ;usb_device.c: 787: if(UIRbits.TRNIF)
 18903  003058  A668               	btfss	3944,3,c	;volatile
 18904  00305A  D031               	goto	i2u947_40
 18905                           
 18906                           ;usb_device.c: 788: {
 18907                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
 18908  00305C  CF6C F05D          	movff	3948,_USTATcopy	;volatile
 18909                           
 18910                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 18911  003060  305D               	rrcf	_USTATcopy,w,c	;volatile
 18912  003062  32E8               	rrcf	wreg,f,c
 18913  003064  32E8               	rrcf	wreg,f,c
 18914  003066  0B0F               	andlw	15
 18915  003068  6E56               	movwf	_endpoint_number,c	;volatile
 18916                           
 18917                           ;usb_device.c: 793: (UIR &= 0xF7);
 18918  00306A  9668               	bcf	3944,3,c	;volatile
 18919                           
 18920                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 18921  00306C  B45D               	btfsc	_USTATcopy,2,c	;volatile
 18922  00306E  D007               	goto	i2l425
 18923                           
 18924                           ;usb_device.c: 799: {
 18925                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 18926  003070  5056               	movf	_endpoint_number,w,c	;volatile
 18927  003072  0D01               	mullw	1
 18928  003074  0ED2               	movlw	low _ep_data_out
 18929  003076  24F3               	addwf	prodl,w,c
 18930  003078  6ED9               	movwf	fsr2l,c
 18931  00307A  0E02               	movlw	high _ep_data_out
 18932  00307C  D006               	goto	L20
 18933  00307E                     i2l425:
 18934                           
 18935                           ;usb_device.c: 802: else
 18936                           ;usb_device.c: 803: {
 18937                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 18938                           
 18939                           ; BSR set to: 2
 18940  00307E  5056               	movf	_endpoint_number,w,c	;volatile
 18941  003080  0D01               	mullw	1
 18942  003082  0ED5               	movlw	low _ep_data_in
 18943  003084  24F3               	addwf	prodl,w,c
 18944  003086  6ED9               	movwf	fsr2l,c
 18945  003088  0E02               	movlw	high _ep_data_in
 18946  00308A                     L20:
 18947  00308A  20F4               	addwfc	prodh,w,c
 18948  00308C  6EDA               	movwf	fsr2h,c
 18949  00308E  0102               	movlb	2	; () banked
 18950  003090  70DF               	btg	indf2,0,c
 18951                           
 18952                           ; BSR set to: 2
 18953                           ;usb_device.c: 805: }
 18954                           ;usb_device.c: 810: if(endpoint_number == 0)
 18955                           
 18956                           ; BSR set to: 2
 18957  003092  5056               	movf	_endpoint_number,w,c	;volatile
 18958  003094  A4D8               	btfss	status,2,c
 18959  003096  D003               	goto	i2l427
 18960                           
 18961                           ; BSR set to: 2
 18962                           ;usb_device.c: 811: {
 18963                           ;usb_device.c: 812: USBCtrlEPService();
 18964  003098  EC1F  F023         	call	_USBCtrlEPService	;wreg free
 18965                           
 18966                           ;usb_device.c: 813: }
 18967  00309C  D00E               	goto	i2l429
 18968  00309E                     i2l427:
 18969                           
 18970                           ;usb_device.c: 814: else
 18971                           ;usb_device.c: 815: {
 18972                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 18973  00309E  0E00               	movlw	0
 18974  0030A0  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 18975  0030A2  0E72               	movlw	114
 18976  0030A4  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 18977  0030A6  0E5D               	movlw	low _USTATcopy
 18978  0030A8  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 18979  0030AA  0E00               	movlw	high _USTATcopy
 18980  0030AC  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 18981  0030AE  0E00               	movlw	0
 18982  0030B0  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 18983  0030B2  0E00               	movlw	0
 18984  0030B4  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 18985  0030B6  ECA8  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 18986  0030BA                     i2l429:
 18987  0030BA  2A1C               	incf	USBDeviceTasks@i,f,c
 18988  0030BC  D7C9               	goto	i2l9870
 18989  0030BE                     i2u947_40:
 18990                           
 18991                           ;usb_device.c: 822: }
 18992                           ;usb_device.c: 823: }
 18993                           ;usb_device.c: 824: }
 18994                           ;usb_device.c: 826: {PIR2bits.USBIF = 0;};
 18995  0030BE  9AA1               	bcf	4001,5,c	;volatile
 18996  0030C0  0012               	return		;funcret
 18997  0030C2                     __end_of_USBDeviceTasks:
 18998                           	opt stack 0
 18999                           pclatu	equ	0xFFB
 19000                           pclath	equ	0xFFA
 19001                           tblptru	equ	0xFF8
 19002                           tblptrh	equ	0xFF7
 19003                           tblptrl	equ	0xFF6
 19004                           tablat	equ	0xFF5
 19005                           prodh	equ	0xFF4
 19006                           prodl	equ	0xFF3
 19007                           intcon	equ	0xFF2
 19008                           indf0	equ	0xFEF
 19009                           postinc0	equ	0xFEE
 19010                           fsr0h	equ	0xFEA
 19011                           fsr0l	equ	0xFE9
 19012                           wreg	equ	0xFE8
 19013                           indf1	equ	0xFE7
 19014                           postdec1	equ	0xFE5
 19015                           fsr1h	equ	0xFE2
 19016                           fsr1l	equ	0xFE1
 19017                           indf2	equ	0xFDF
 19018                           postinc2	equ	0xFDE
 19019                           postdec2	equ	0xFDD
 19020                           plusw2	equ	0xFDB
 19021                           fsr2h	equ	0xFDA
 19022                           fsr2l	equ	0xFD9
 19023                           status	equ	0xFD8
 19024                           
 19025 ;; *************** function i2_USBDeviceInit *****************
 19026 ;; Defined at:
 19027 ;;		line 277 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 19028 ;; Parameters:    Size  Location     Type
 19029 ;;		None
 19030 ;; Auto vars:     Size  Location     Type
 19031 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 19032 ;; Return value:  Size  Location     Type
 19033 ;;                  1    wreg      void 
 19034 ;; Registers used:
 19035 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19036 ;; Tracked objects:
 19037 ;;		On entry : 0/0
 19038 ;;		On exit  : 0/0
 19039 ;;		Unchanged: 0/0
 19040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19041 ;;      Params:         0       0       0       0       0       0       0       0       0
 19042 ;;      Locals:         1       0       0       0       0       0       0       0       0
 19043 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19044 ;;      Totals:         1       0       0       0       0       0       0       0       0
 19045 ;;Total ram usage:        1 bytes
 19046 ;; Hardware stack levels used:    1
 19047 ;; Hardware stack levels required when called:    1
 19048 ;; This function calls:
 19049 ;;		i2_memset
 19050 ;; This function is called by:
 19051 ;;		_USBDeviceTasks
 19052 ;; This function uses a non-reentrant model
 19053 ;;
 19054                           
 19055                           	psect	text67
 19056  002BF2                     __ptext67:
 19057                           	opt stack 0
 19058  002BF2                     i2_USBDeviceInit:
 19059                           	opt stack 22
 19060                           
 19061                           ;usb_device.c: 279: uint8_t i;
 19062                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 19063                           
 19064                           ;incstack = 0
 19065  002BF2  9AA0               	bcf	4000,5,c	;volatile
 19066                           
 19067                           ;usb_device.c: 285: ;
 19068                           ;usb_device.c: 288: {UEIR = 0;};
 19069  002BF4  0E00               	movlw	0
 19070  002BF6  6E6A               	movwf	3946,c	;volatile
 19071                           
 19072                           ;usb_device.c: 291: {UIR = 0;};
 19073  002BF8  0E00               	movlw	0
 19074  002BFA  6E68               	movwf	3944,c	;volatile
 19075                           
 19076                           ;usb_device.c: 294: UEP0 = 0;
 19077  002BFC  0E00               	movlw	0
 19078  002BFE  6E70               	movwf	3952,c	;volatile
 19079                           
 19080                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 19081  002C00  0E71               	movlw	113
 19082  002C02  6E01               	movwf	i2memset@p1,c
 19083  002C04  0E0F               	movlw	15
 19084  002C06  6E02               	movwf	i2memset@p1+1,c
 19085  002C08  0E00               	movlw	0
 19086  002C0A  6E04               	movwf	i2memset@c+1,c
 19087  002C0C  0E00               	movlw	0
 19088  002C0E  6E03               	movwf	i2memset@c,c
 19089  002C10  0E00               	movlw	0
 19090  002C12  6E06               	movwf	i2memset@n+1,c
 19091  002C14  0E02               	movlw	2
 19092  002C16  6E05               	movwf	i2memset@n,c
 19093  002C18  ECAA  F02A         	call	i2_memset	;wreg free
 19094                           
 19095                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 19096  002C1C  0E16               	movlw	22
 19097  002C1E  6E6F               	movwf	3951,c	;volatile
 19098  002C20  0E9F               	movlw	159
 19099  002C22  6E6B               	movwf	3947,c	;volatile
 19100  002C24  0E7B               	movlw	123
 19101  002C26  6E69               	movwf	3945,c	;volatile
 19102                           
 19103                           ;usb_device.c: 301: ;
 19104                           ;usb_device.c: 304: ;
 19105                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
 19106  002C28  0E00               	movlw	0
 19107  002C2A  6E09               	movwf	i2USBDeviceInit@i,c
 19108  002C2C                     i2l9618:
 19109  002C2C  0E0B               	movlw	11
 19110  002C2E  6409               	cpfsgt	i2USBDeviceInit@i,c
 19111  002C30  D001               	goto	i2l398
 19112  002C32  D00E               	goto	i2u901_40
 19113  002C34                     i2l398:
 19114                           
 19115                           ;usb_device.c: 308: {
 19116                           ;usb_device.c: 309: BDT[i].Val = 0x00;
 19117  002C34  5009               	movf	i2USBDeviceInit@i,w,c
 19118  002C36  0D04               	mullw	4
 19119  002C38  0E00               	movlw	0
 19120  002C3A  24F3               	addwf	prodl,w,c
 19121  002C3C  6ED9               	movwf	fsr2l,c
 19122  002C3E  0E04               	movlw	4
 19123  002C40  20F4               	addwfc	prodh,w,c
 19124  002C42  6EDA               	movwf	fsr2h,c
 19125  002C44  6ADE               	clrf	postinc2,c
 19126  002C46  6ADE               	clrf	postinc2,c
 19127  002C48  6ADE               	clrf	postinc2,c
 19128  002C4A  6ADD               	clrf	postdec2,c
 19129  002C4C  2A09               	incf	i2USBDeviceInit@i,f,c
 19130  002C4E  D7EE               	goto	i2l9618
 19131  002C50                     i2u901_40:
 19132                           
 19133                           ;usb_device.c: 310: }
 19134                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
 19135  002C50  8C6D               	bsf	3949,6,c	;volatile
 19136                           
 19137                           ;usb_device.c: 316: UADDR = 0x00;
 19138  002C52  0E00               	movlw	0
 19139  002C54  6E6E               	movwf	3950,c	;volatile
 19140                           
 19141                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 19142  002C56  986D               	bcf	3949,4,c	;volatile
 19143                           
 19144                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 19145  002C58  9C6D               	bcf	3949,6,c	;volatile
 19146  002C5A                     
 19147                           ;usb_device.c: 326: {
 19148                           ;usb_device.c: 327: (UIR &= 0xF7);
 19149  002C5A  9668               	bcf	3944,3,c	;volatile
 19150                           
 19151                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 19152  002C5C  0E00               	movlw	0
 19153  002C5E  6E43               	movwf	_inPipes+3,c	;volatile
 19154                           
 19155                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 19156  002C60  0E00               	movlw	0
 19157  002C62  6E3B               	movwf	_outPipes+3,c	;volatile
 19158                           
 19159                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 19160  002C64  0E00               	movlw	0
 19161  002C66  6E3D               	movwf	_outPipes+5,c	;volatile
 19162  002C68  0E00               	movlw	0
 19163  002C6A  6E3C               	movwf	_outPipes+4,c	;volatile
 19164                           
 19165                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 19166  002C6C  B668               	btfsc	3944,3,c	;volatile
 19167  002C6E  D7F5               	goto	i2l400
 19168                           
 19169                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 19170  002C70  0E01               	movlw	1
 19171  002C72  0101               	movlb	1	; () banked
 19172  002C74  6FF6               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 19173                           
 19174                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 19175  002C76  0E01               	movlw	1
 19176  002C78  0102               	movlb	2	; () banked
 19177  002C7A  6FEB               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 19178                           
 19179                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 19180  002C7C  0E00               	movlw	0
 19181  002C7E  6FEA               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 19182                           
 19183                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 19184  002C80  0E00               	movlw	0
 19185  002C82  6FE9               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 19186                           
 19187                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 19188  002C84  0E00               	movlw	0
 19189  002C86  0101               	movlb	1	; () banked
 19190  002C88  6FF8               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 19191                           
 19192                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 19193  002C8A  0E00               	movlw	0
 19194  002C8C  6E09               	movwf	i2USBDeviceInit@i,c
 19195  002C8E                     i2l9646:
 19196                           
 19197                           ; BSR set to: 1
 19198  002C8E  0E02               	movlw	2
 19199  002C90  6409               	cpfsgt	i2USBDeviceInit@i,c
 19200  002C92  D001               	goto	i2l402
 19201  002C94  D02E               	goto	i2u904_40
 19202  002C96                     i2l402:
 19203                           
 19204                           ;usb_device.c: 346: {
 19205                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 19206                           
 19207                           ; BSR set to: 1
 19208  002C96  5009               	movf	i2USBDeviceInit@i,w,c
 19209  002C98  0D02               	mullw	2
 19210  002C9A  0E46               	movlw	low _pBDTEntryIn
 19211  002C9C  24F3               	addwf	prodl,w,c
 19212  002C9E  6ED9               	movwf	fsr2l,c
 19213  002CA0  0E00               	movlw	high _pBDTEntryIn
 19214  002CA2  20F4               	addwfc	prodh,w,c
 19215  002CA4  6EDA               	movwf	fsr2h,c
 19216  002CA6  0E00               	movlw	0
 19217  002CA8  6EDE               	movwf	postinc2,c
 19218  002CAA  0E00               	movlw	0
 19219  002CAC  6EDD               	movwf	postdec2,c
 19220                           
 19221                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 19222  002CAE  5009               	movf	i2USBDeviceInit@i,w,c
 19223  002CB0  0D02               	mullw	2
 19224  002CB2  0EC8               	movlw	low _pBDTEntryOut
 19225  002CB4  24F3               	addwf	prodl,w,c
 19226  002CB6  6ED9               	movwf	fsr2l,c
 19227  002CB8  0E02               	movlw	high _pBDTEntryOut
 19228  002CBA  20F4               	addwfc	prodh,w,c
 19229  002CBC  6EDA               	movwf	fsr2h,c
 19230  002CBE  0E00               	movlw	0
 19231  002CC0  6EDE               	movwf	postinc2,c
 19232  002CC2  0E00               	movlw	0
 19233  002CC4  6EDD               	movwf	postdec2,c
 19234                           
 19235                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 19236  002CC6  5009               	movf	i2USBDeviceInit@i,w,c
 19237  002CC8  0D01               	mullw	1
 19238  002CCA  0ED5               	movlw	low _ep_data_in
 19239  002CCC  24F3               	addwf	prodl,w,c
 19240  002CCE  6ED9               	movwf	fsr2l,c
 19241  002CD0  0E02               	movlw	high _ep_data_in
 19242  002CD2  20F4               	addwfc	prodh,w,c
 19243  002CD4  6EDA               	movwf	fsr2h,c
 19244  002CD6  0E00               	movlw	0
 19245  002CD8  6EDF               	movwf	indf2,c
 19246                           
 19247                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 19248  002CDA  5009               	movf	i2USBDeviceInit@i,w,c
 19249  002CDC  0D01               	mullw	1
 19250  002CDE  0ED2               	movlw	low _ep_data_out
 19251  002CE0  24F3               	addwf	prodl,w,c
 19252  002CE2  6ED9               	movwf	fsr2l,c
 19253  002CE4  0E02               	movlw	high _ep_data_out
 19254  002CE6  20F4               	addwfc	prodh,w,c
 19255  002CE8  6EDA               	movwf	fsr2h,c
 19256  002CEA  0E00               	movlw	0
 19257  002CEC  6EDF               	movwf	indf2,c
 19258  002CEE  2A09               	incf	i2USBDeviceInit@i,f,c
 19259  002CF0  D7CE               	goto	i2l9646
 19260  002CF2                     i2u904_40:
 19261                           
 19262                           ;usb_device.c: 351: }
 19263                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 19264  002CF2  0E08               	movlw	8
 19265  002CF4  6E46               	movwf	_pBDTEntryIn,c
 19266  002CF6  0E04               	movlw	4
 19267  002CF8  6E47               	movwf	_pBDTEntryIn+1,c
 19268                           
 19269                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 19270  002CFA  0E16               	movlw	22
 19271  002CFC  6E70               	movwf	3952,c	;volatile
 19272                           
 19273                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 19274  002CFE  0E04               	movlw	4
 19275  002D00  0104               	movlb	4	; () banked
 19276  002D02  6F03               	movwf	3,b	;volatile
 19277  002D04  0E30               	movlw	48
 19278  002D06  6F02               	movwf	2,b	;volatile
 19279                           
 19280                           ; BSR set to: 4
 19281                           ;usb_device.c: 359: BDT[0].CNT = 8;
 19282  002D08  0E08               	movlw	8
 19283  002D0A  6F01               	movwf	1,b	;volatile
 19284                           
 19285                           ; BSR set to: 4
 19286                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 19287  002D0C  0E04               	movlw	4
 19288  002D0E  6F00               	movwf	0,b	;volatile
 19289                           
 19290                           ; BSR set to: 4
 19291                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 19292  002D10  8F00               	bsf	0,7,b	;volatile
 19293                           
 19294                           ; BSR set to: 4
 19295                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 19296  002D12  0E00               	movlw	0
 19297  002D14  6E5E               	movwf	_USBActiveConfiguration,c	;volatile
 19298                           
 19299                           ; BSR set to: 4
 19300                           ;usb_device.c: 366: USB1msTickCount = 0;
 19301  002D16  0E00               	movlw	0
 19302  002D18  0102               	movlb	2	; () banked
 19303  002D1A  6FCE               	movwf	_USB1msTickCount& (0+255),b	;volatile
 19304  002D1C  0E00               	movlw	0
 19305  002D1E  6FCF               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
 19306  002D20  0E00               	movlw	0
 19307  002D22  6FD0               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
 19308  002D24  0E00               	movlw	0
 19309  002D26  6FD1               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
 19310                           
 19311                           ; BSR set to: 2
 19312                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 19313  002D28  0E00               	movlw	0
 19314  002D2A  6FE8               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 19315                           
 19316                           ; BSR set to: 2
 19317                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 19318  002D2C  0E00               	movlw	0
 19319  002D2E  6E59               	movwf	_USBDeviceState,c	;volatile
 19320                           
 19321                           ; BSR set to: 2
 19322  002D30  0012               	return		;funcret
 19323  002D32                     __end_ofi2_USBDeviceInit:
 19324                           	opt stack 0
 19325                           pclatu	equ	0xFFB
 19326                           pclath	equ	0xFFA
 19327                           tblptru	equ	0xFF8
 19328                           tblptrh	equ	0xFF7
 19329                           tblptrl	equ	0xFF6
 19330                           tablat	equ	0xFF5
 19331                           prodh	equ	0xFF4
 19332                           prodl	equ	0xFF3
 19333                           intcon	equ	0xFF2
 19334                           indf0	equ	0xFEF
 19335                           postinc0	equ	0xFEE
 19336                           fsr0h	equ	0xFEA
 19337                           fsr0l	equ	0xFE9
 19338                           wreg	equ	0xFE8
 19339                           indf1	equ	0xFE7
 19340                           postdec1	equ	0xFE5
 19341                           fsr1h	equ	0xFE2
 19342                           fsr1l	equ	0xFE1
 19343                           indf2	equ	0xFDF
 19344                           postinc2	equ	0xFDE
 19345                           postdec2	equ	0xFDD
 19346                           plusw2	equ	0xFDB
 19347                           fsr2h	equ	0xFDA
 19348                           fsr2l	equ	0xFD9
 19349                           status	equ	0xFD8
 19350                           
 19351 ;; *************** function _USBWakeFromSuspend *****************
 19352 ;; Defined at:
 19353 ;;		line 2303 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 19354 ;; Parameters:    Size  Location     Type
 19355 ;;		None
 19356 ;; Auto vars:     Size  Location     Type
 19357 ;;		None
 19358 ;; Return value:  Size  Location     Type
 19359 ;;                  1    wreg      void 
 19360 ;; Registers used:
 19361 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19362 ;; Tracked objects:
 19363 ;;		On entry : 0/0
 19364 ;;		On exit  : 0/0
 19365 ;;		Unchanged: 0/0
 19366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19367 ;;      Params:         0       0       0       0       0       0       0       0       0
 19368 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19369 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19370 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19371 ;;Total ram usage:        0 bytes
 19372 ;; Hardware stack levels used:    1
 19373 ;; Hardware stack levels required when called:    4
 19374 ;; This function calls:
 19375 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 19376 ;; This function is called by:
 19377 ;;		_USBDeviceTasks
 19378 ;; This function uses a non-reentrant model
 19379 ;;
 19380                           
 19381                           	psect	text68
 19382  00542C                     __ptext68:
 19383                           	opt stack 0
 19384  00542C                     _USBWakeFromSuspend:
 19385                           	opt stack 19
 19386                           
 19387                           ;usb_device.c: 2305: USBBusIsSuspended = 0;
 19388                           
 19389                           ; BSR set to: 2
 19390                           ;incstack = 0
 19391  00542C  0E00               	movlw	0
 19392  00542E  0101               	movlb	1	; () banked
 19393  005430  6FF8               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 19394                           
 19395                           ; BSR set to: 1
 19396                           ;usb_device.c: 2311: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 19397  005432  0E00               	movlw	0
 19398  005434  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 19399  005436  0E74               	movlw	116
 19400  005438  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 19401  00543A  0E00               	movlw	0
 19402  00543C  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 19403  00543E  0E00               	movlw	0
 19404  005440  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 19405  005442  0E00               	movlw	0
 19406  005444  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 19407  005446  0E00               	movlw	0
 19408  005448  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 19409  00544A  ECA8  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 19410                           
 19411                           ;usb_device.c: 2318: UCONbits.SUSPND = 0;
 19412  00544E  926D               	bcf	3949,1,c	;volatile
 19413                           
 19414                           ;usb_device.c: 2323: UIEbits.ACTVIE = 0;
 19415  005450  9469               	bcf	3945,2,c	;volatile
 19416                           
 19417                           ;usb_device.c: 2341: while(UIRbits.ACTVIF)
 19418  005452  D001               	goto	i2l568
 19419  005454                     
 19420                           ;usb_device.c: 2343: {
 19421                           ;usb_device.c: 2344: (UIR &= 0xFB);
 19422  005454  9468               	bcf	3944,2,c	;volatile
 19423  005456                     i2l568:
 19424  005456  B468               	btfsc	3944,2,c	;volatile
 19425  005458  D7FD               	goto	i2l569
 19426                           
 19427                           ;usb_device.c: 2345: }
 19428                           ;usb_device.c: 2347: USBTicksSinceSuspendEnd = 0;
 19429  00545A  0E00               	movlw	0
 19430  00545C  0102               	movlb	2	; () banked
 19431  00545E  6FE8               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 19432                           
 19433                           ; BSR set to: 2
 19434  005460  0012               	return		;funcret
 19435  005462                     __end_of_USBWakeFromSuspend:
 19436                           	opt stack 0
 19437                           pclatu	equ	0xFFB
 19438                           pclath	equ	0xFFA
 19439                           tblptru	equ	0xFF8
 19440                           tblptrh	equ	0xFF7
 19441                           tblptrl	equ	0xFF6
 19442                           tablat	equ	0xFF5
 19443                           prodh	equ	0xFF4
 19444                           prodl	equ	0xFF3
 19445                           intcon	equ	0xFF2
 19446                           indf0	equ	0xFEF
 19447                           postinc0	equ	0xFEE
 19448                           fsr0h	equ	0xFEA
 19449                           fsr0l	equ	0xFE9
 19450                           wreg	equ	0xFE8
 19451                           indf1	equ	0xFE7
 19452                           postdec1	equ	0xFE5
 19453                           fsr1h	equ	0xFE2
 19454                           fsr1l	equ	0xFE1
 19455                           indf2	equ	0xFDF
 19456                           postinc2	equ	0xFDE
 19457                           postdec2	equ	0xFDD
 19458                           plusw2	equ	0xFDB
 19459                           fsr2h	equ	0xFDA
 19460                           fsr2l	equ	0xFD9
 19461                           status	equ	0xFD8
 19462                           
 19463 ;; *************** function _USBSuspend *****************
 19464 ;; Defined at:
 19465 ;;		line 2245 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 19466 ;; Parameters:    Size  Location     Type
 19467 ;;		None
 19468 ;; Auto vars:     Size  Location     Type
 19469 ;;		None
 19470 ;; Return value:  Size  Location     Type
 19471 ;;                  1    wreg      void 
 19472 ;; Registers used:
 19473 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19474 ;; Tracked objects:
 19475 ;;		On entry : 0/0
 19476 ;;		On exit  : 0/0
 19477 ;;		Unchanged: 0/0
 19478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19479 ;;      Params:         0       0       0       0       0       0       0       0       0
 19480 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19481 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19482 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19483 ;;Total ram usage:        0 bytes
 19484 ;; Hardware stack levels used:    1
 19485 ;; Hardware stack levels required when called:    4
 19486 ;; This function calls:
 19487 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 19488 ;; This function is called by:
 19489 ;;		_USBDeviceTasks
 19490 ;; This function uses a non-reentrant model
 19491 ;;
 19492                           
 19493                           	psect	text69
 19494  0054F6                     __ptext69:
 19495                           	opt stack 0
 19496  0054F6                     _USBSuspend:
 19497                           	opt stack 19
 19498                           
 19499                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
 19500                           
 19501                           ; BSR set to: 2
 19502                           ;incstack = 0
 19503  0054F6  8469               	bsf	3945,2,c	;volatile
 19504                           
 19505                           ;usb_device.c: 2271: (UIR &= 0xEF);
 19506  0054F8  9868               	bcf	3944,4,c	;volatile
 19507                           
 19508                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
 19509  0054FA  826D               	bsf	3949,1,c	;volatile
 19510                           
 19511                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
 19512  0054FC  0E01               	movlw	1
 19513  0054FE  0101               	movlb	1	; () banked
 19514  005500  6FF8               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 19515                           
 19516                           ; BSR set to: 1
 19517                           ;usb_device.c: 2278: USBTicksSinceSuspendEnd = 0;
 19518  005502  0E00               	movlw	0
 19519  005504  0102               	movlb	2	; () banked
 19520  005506  6FE8               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 19521                           
 19522                           ; BSR set to: 2
 19523                           ;usb_device.c: 2285: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 19524  005508  0E00               	movlw	0
 19525  00550A  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 19526  00550C  0E75               	movlw	117
 19527  00550E  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 19528  005510  0E00               	movlw	0
 19529  005512  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 19530  005514  0E00               	movlw	0
 19531  005516  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 19532  005518  0E00               	movlw	0
 19533  00551A  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 19534  00551C  0E00               	movlw	0
 19535  00551E  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 19536  005520  ECA8  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 19537  005524  0012               	return		;funcret
 19538  005526                     __end_of_USBSuspend:
 19539                           	opt stack 0
 19540                           pclatu	equ	0xFFB
 19541                           pclath	equ	0xFFA
 19542                           tblptru	equ	0xFF8
 19543                           tblptrh	equ	0xFF7
 19544                           tblptrl	equ	0xFF6
 19545                           tablat	equ	0xFF5
 19546                           prodh	equ	0xFF4
 19547                           prodl	equ	0xFF3
 19548                           intcon	equ	0xFF2
 19549                           indf0	equ	0xFEF
 19550                           postinc0	equ	0xFEE
 19551                           fsr0h	equ	0xFEA
 19552                           fsr0l	equ	0xFE9
 19553                           wreg	equ	0xFE8
 19554                           indf1	equ	0xFE7
 19555                           postdec1	equ	0xFE5
 19556                           fsr1h	equ	0xFE2
 19557                           fsr1l	equ	0xFE1
 19558                           indf2	equ	0xFDF
 19559                           postinc2	equ	0xFDE
 19560                           postdec2	equ	0xFDD
 19561                           plusw2	equ	0xFDB
 19562                           fsr2h	equ	0xFDA
 19563                           fsr2l	equ	0xFD9
 19564                           status	equ	0xFD8
 19565                           
 19566 ;; *************** function _USBStallHandler *****************
 19567 ;; Defined at:
 19568 ;;		line 2202 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 19569 ;; Parameters:    Size  Location     Type
 19570 ;;		None
 19571 ;; Auto vars:     Size  Location     Type
 19572 ;;		None
 19573 ;; Return value:  Size  Location     Type
 19574 ;;                  1    wreg      void 
 19575 ;; Registers used:
 19576 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19577 ;; Tracked objects:
 19578 ;;		On entry : 0/0
 19579 ;;		On exit  : 0/0
 19580 ;;		Unchanged: 0/0
 19581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19582 ;;      Params:         0       0       0       0       0       0       0       0       0
 19583 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19584 ;;      Temps:          1       0       0       0       0       0       0       0       0
 19585 ;;      Totals:         1       0       0       0       0       0       0       0       0
 19586 ;;Total ram usage:        1 bytes
 19587 ;; Hardware stack levels used:    1
 19588 ;; This function calls:
 19589 ;;		Nothing
 19590 ;; This function is called by:
 19591 ;;		_USBDeviceTasks
 19592 ;; This function uses a non-reentrant model
 19593 ;;
 19594                           
 19595                           	psect	text70
 19596  005286                     __ptext70:
 19597                           	opt stack 0
 19598  005286                     _USBStallHandler:
 19599                           	opt stack 23
 19600                           
 19601                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
 19602                           
 19603                           ;incstack = 0
 19604  005286  A070               	btfss	3952,0,c	;volatile
 19605  005288  D01D               	goto	i2l560
 19606                           
 19607                           ;usb_device.c: 2215: {
 19608                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 19609  00528A  C050  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19610  00528E  C051  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19611  005292  0E80               	movlw	128
 19612  005294  18DE               	xorwf	postinc2,w,c
 19613  005296  A4D8               	btfss	status,2,c
 19614  005298  D014               	goto	i2l561
 19615  00529A  C046  FFD9         	movff	_pBDTEntryIn,fsr2l
 19616  00529E  C047  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19617  0052A2  0E84               	movlw	132
 19618  0052A4  18DE               	xorwf	postinc2,w,c
 19619  0052A6  A4D8               	btfss	status,2,c
 19620  0052A8  D00C               	goto	i2l561
 19621                           
 19622                           ;usb_device.c: 2218: {
 19623                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 19624  0052AA  C050  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19625  0052AE  C051  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19626  0052B2  0E0C               	movlw	12
 19627  0052B4  6EDF               	movwf	indf2,c
 19628                           
 19629                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 19630  0052B6  C050  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19631  0052BA  C051  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19632  0052BE  0E00               	movlw	0
 19633  0052C0  8EDB               	bsf	plusw2,7,c
 19634  0052C2                     i2l561:
 19635                           
 19636                           ;usb_device.c: 2222: }
 19637                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
 19638  0052C2  9070               	bcf	3952,0,c	;volatile
 19639  0052C4                     i2l560:
 19640                           
 19641                           ;usb_device.c: 2224: }
 19642                           ;usb_device.c: 2226: (UIR &= 0xDF);
 19643  0052C4  9A68               	bcf	3944,5,c	;volatile
 19644  0052C6  0012               	return		;funcret
 19645  0052C8                     __end_of_USBStallHandler:
 19646                           	opt stack 0
 19647                           pclatu	equ	0xFFB
 19648                           pclath	equ	0xFFA
 19649                           tblptru	equ	0xFF8
 19650                           tblptrh	equ	0xFF7
 19651                           tblptrl	equ	0xFF6
 19652                           tablat	equ	0xFF5
 19653                           prodh	equ	0xFF4
 19654                           prodl	equ	0xFF3
 19655                           intcon	equ	0xFF2
 19656                           indf0	equ	0xFEF
 19657                           postinc0	equ	0xFEE
 19658                           fsr0h	equ	0xFEA
 19659                           fsr0l	equ	0xFE9
 19660                           wreg	equ	0xFE8
 19661                           indf1	equ	0xFE7
 19662                           postdec1	equ	0xFE5
 19663                           fsr1h	equ	0xFE2
 19664                           fsr1l	equ	0xFE1
 19665                           indf2	equ	0xFDF
 19666                           postinc2	equ	0xFDE
 19667                           postdec2	equ	0xFDD
 19668                           plusw2	equ	0xFDB
 19669                           fsr2h	equ	0xFDA
 19670                           fsr2l	equ	0xFD9
 19671                           status	equ	0xFD8
 19672                           
 19673 ;; *************** function _USBIncrement1msInternalTimers *****************
 19674 ;; Defined at:
 19675 ;;		line 3025 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 19676 ;; Parameters:    Size  Location     Type
 19677 ;;		None
 19678 ;; Auto vars:     Size  Location     Type
 19679 ;;		None
 19680 ;; Return value:  Size  Location     Type
 19681 ;;                  1    wreg      void 
 19682 ;; Registers used:
 19683 ;;		wreg, status,2, status,0
 19684 ;; Tracked objects:
 19685 ;;		On entry : 0/0
 19686 ;;		On exit  : 0/0
 19687 ;;		Unchanged: 0/0
 19688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19689 ;;      Params:         0       0       0       0       0       0       0       0       0
 19690 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19691 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19692 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19693 ;;Total ram usage:        0 bytes
 19694 ;; Hardware stack levels used:    1
 19695 ;; This function calls:
 19696 ;;		Nothing
 19697 ;; This function is called by:
 19698 ;;		_USBDeviceTasks
 19699 ;; This function uses a non-reentrant model
 19700 ;;
 19701                           
 19702                           	psect	text71
 19703  005640                     __ptext71:
 19704                           	opt stack 0
 19705  005640                     _USBIncrement1msInternalTimers:
 19706                           	opt stack 23
 19707                           
 19708                           ;usb_device.c: 3033: USB1msTickCount++;
 19709                           
 19710                           ;incstack = 0
 19711  005640  0E01               	movlw	1
 19712  005642  0102               	movlb	2	; () banked
 19713  005644  27CE               	addwf	_USB1msTickCount& (0+255),f,b	;volatile
 19714  005646  0E00               	movlw	0
 19715  005648  23CF               	addwfc	(_USB1msTickCount+1)& (0+255),f,b	;volatile
 19716  00564A  23D0               	addwfc	(_USB1msTickCount+2)& (0+255),f,b	;volatile
 19717  00564C  23D1               	addwfc	(_USB1msTickCount+3)& (0+255),f,b	;volatile
 19718                           
 19719                           ; BSR set to: 2
 19720                           ;usb_device.c: 3034: if(USBBusIsSuspended == 0)
 19721  00564E  0101               	movlb	1	; () banked
 19722  005650  51F8               	movf	_USBBusIsSuspended& (0+255),w,b	;volatile
 19723  005652  A4D8               	btfss	status,2,c
 19724  005654  0012               	return	
 19725                           
 19726                           ; BSR set to: 1
 19727                           ;usb_device.c: 3035: {
 19728                           ;usb_device.c: 3036: USBTicksSinceSuspendEnd++;
 19729  005656  0102               	movlb	2	; () banked
 19730  005658  2BE8               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b	;volatile
 19731                           
 19732                           ; BSR set to: 2
 19733                           ;usb_device.c: 3038: if(USBTicksSinceSuspendEnd == 0)
 19734  00565A  51E8               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b	;volatile
 19735  00565C  A4D8               	btfss	status,2,c
 19736  00565E  0012               	return	
 19737                           
 19738                           ; BSR set to: 2
 19739                           ;usb_device.c: 3039: {
 19740                           ;usb_device.c: 3040: USBTicksSinceSuspendEnd = 255;
 19741  005660  69E8               	setf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 19742                           
 19743                           ; BSR set to: 2
 19744  005662  0012               	return	
 19745  005664                     __end_of_USBIncrement1msInternalTimers:
 19746                           	opt stack 0
 19747                           pclatu	equ	0xFFB
 19748                           pclath	equ	0xFFA
 19749                           tblptru	equ	0xFF8
 19750                           tblptrh	equ	0xFF7
 19751                           tblptrl	equ	0xFF6
 19752                           tablat	equ	0xFF5
 19753                           prodh	equ	0xFF4
 19754                           prodl	equ	0xFF3
 19755                           intcon	equ	0xFF2
 19756                           indf0	equ	0xFEF
 19757                           postinc0	equ	0xFEE
 19758                           fsr0h	equ	0xFEA
 19759                           fsr0l	equ	0xFE9
 19760                           wreg	equ	0xFE8
 19761                           indf1	equ	0xFE7
 19762                           postdec1	equ	0xFE5
 19763                           fsr1h	equ	0xFE2
 19764                           fsr1l	equ	0xFE1
 19765                           indf2	equ	0xFDF
 19766                           postinc2	equ	0xFDE
 19767                           postdec2	equ	0xFDD
 19768                           plusw2	equ	0xFDB
 19769                           fsr2h	equ	0xFDA
 19770                           fsr2l	equ	0xFD9
 19771                           status	equ	0xFD8
 19772                           
 19773 ;; *************** function _USBCtrlEPService *****************
 19774 ;; Defined at:
 19775 ;;		line 2372 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 19776 ;; Parameters:    Size  Location     Type
 19777 ;;		None
 19778 ;; Auto vars:     Size  Location     Type
 19779 ;;		None
 19780 ;; Return value:  Size  Location     Type
 19781 ;;                  1    wreg      void 
 19782 ;; Registers used:
 19783 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19784 ;; Tracked objects:
 19785 ;;		On entry : 0/0
 19786 ;;		On exit  : 0/0
 19787 ;;		Unchanged: 0/0
 19788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19789 ;;      Params:         0       0       0       0       0       0       0       0       0
 19790 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19791 ;;      Temps:          1       0       0       0       0       0       0       0       0
 19792 ;;      Totals:         1       0       0       0       0       0       0       0       0
 19793 ;;Total ram usage:        1 bytes
 19794 ;; Hardware stack levels used:    1
 19795 ;; Hardware stack levels required when called:    7
 19796 ;; This function calls:
 19797 ;;		_USBCtrlTrfInHandler
 19798 ;;		_USBCtrlTrfOutHandler
 19799 ;;		_USBCtrlTrfSetupHandler
 19800 ;;		_memcpy
 19801 ;; This function is called by:
 19802 ;;		_USBDeviceTasks
 19803 ;; This function uses a non-reentrant model
 19804 ;;
 19805                           
 19806                           	psect	text72
 19807  00463E                     __ptext72:
 19808                           	opt stack 0
 19809  00463E                     _USBCtrlEPService:
 19810                           	opt stack 16
 19811                           
 19812                           ;usb_device.c: 2378: USBStatusStageTimeoutCounter = (uint8_t)45;
 19813                           
 19814                           ;incstack = 0
 19815  00463E  0E2D               	movlw	45
 19816  004640  6E55               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 19817                           
 19818                           ;usb_device.c: 2382: if((USTATcopy.Val & ~0x02) == 0x00)
 19819  004642  C05D  F01B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 19820  004646  0EFD               	movlw	253
 19821  004648  161B               	andwf	??_USBCtrlEPService,f,c
 19822  00464A  A4D8               	btfss	status,2,c
 19823  00464C  D03B               	goto	i2l574
 19824                           
 19825                           ;usb_device.c: 2383: {
 19826                           ;usb_device.c: 2386: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 19827  00464E  C05D  F01B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 19828  004652  90D8               	bcf	status,0,c
 19829  004654  321B               	rrcf	??_USBCtrlEPService,f,c
 19830  004656  0E3F               	movlw	63
 19831  004658  161B               	andwf	??_USBCtrlEPService,f,c
 19832  00465A  501B               	movf	??_USBCtrlEPService,w,c
 19833  00465C  0D04               	mullw	4
 19834  00465E  0E00               	movlw	0
 19835  004660  24F3               	addwf	prodl,w,c
 19836  004662  6E50               	movwf	_pBDTEntryEP0OutCurrent,c
 19837  004664  0E04               	movlw	4
 19838  004666  20F4               	addwfc	prodh,w,c
 19839  004668  6E51               	movwf	_pBDTEntryEP0OutCurrent+1,c
 19840                           
 19841                           ;usb_device.c: 2394: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 19842  00466A  C050  F04E         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 19843  00466E  C051  F04F         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 19844                           
 19845                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 19846  004672  0E04               	movlw	4
 19847  004674  184E               	xorwf	_pBDTEntryEP0OutNext,w,c
 19848  004676  6E4E               	movwf	_pBDTEntryEP0OutNext,c
 19849  004678  504F               	movf	_pBDTEntryEP0OutNext+1,w,c
 19850  00467A  6E4F               	movwf	_pBDTEntryEP0OutNext+1,c
 19851                           
 19852                           ;usb_device.c: 2399: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 19853  00467C  C050  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19854  004680  C051  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19855  004684  30DF               	rrcf	indf2,w,c
 19856  004686  32E8               	rrcf	wreg,f,c
 19857  004688  0B0F               	andlw	15
 19858  00468A  0A0D               	xorlw	13
 19859  00468C  A4D8               	btfss	status,2,c
 19860  00468E  D017               	goto	i2l575
 19861                           
 19862                           ;usb_device.c: 2400: {
 19863                           ;usb_device.c: 2405: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void *)(pBDTEntryEP0OutCurr
      +                          ent->ADR)), 8);
 19864  004690  0E30               	movlw	48
 19865  004692  6E01               	movwf	memcpy@d1,c
 19866  004694  0E04               	movlw	4
 19867  004696  6E02               	movwf	memcpy@d1+1,c
 19868  004698  EE20 F002          	lfsr	2,2
 19869  00469C  5050               	movf	_pBDTEntryEP0OutCurrent,w,c
 19870  00469E  26D9               	addwf	fsr2l,f,c
 19871  0046A0  5051               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 19872  0046A2  22DA               	addwfc	fsr2h,f,c
 19873  0046A4  CFDE F003          	movff	postinc2,memcpy@s1
 19874  0046A8  CFDD F004          	movff	postdec2,memcpy@s1+1
 19875  0046AC  0E00               	movlw	0
 19876  0046AE  6E06               	movwf	memcpy@n+1,c
 19877  0046B0  0E08               	movlw	8
 19878  0046B2  6E05               	movwf	memcpy@n,c
 19879  0046B4  ECDF  F028         	call	_memcpy	;wreg free
 19880                           
 19881                           ;usb_device.c: 2408: USBCtrlTrfSetupHandler();
 19882  0046B8  ECFD  F023         	call	_USBCtrlTrfSetupHandler	;wreg free
 19883                           
 19884                           ;usb_device.c: 2409: }
 19885  0046BC  0012               	return	
 19886  0046BE                     i2l575:
 19887                           
 19888                           ;usb_device.c: 2410: else
 19889                           ;usb_device.c: 2411: {
 19890                           ;usb_device.c: 2413: USBCtrlTrfOutHandler();
 19891  0046BE  EC79  F027         	call	_USBCtrlTrfOutHandler	;wreg free
 19892                           
 19893                           ;usb_device.c: 2414: }
 19894                           ;usb_device.c: 2415: }
 19895  0046C2  0012               	return	
 19896  0046C4                     i2l574:
 19897                           
 19898                           ;usb_device.c: 2416: else if((USTATcopy.Val & ~0x02) == 0x04)
 19899  0046C4  505D               	movf	_USTATcopy,w,c	;volatile
 19900  0046C6  0BFD               	andlw	253
 19901  0046C8  0A04               	xorlw	4
 19902  0046CA  A4D8               	btfss	status,2,c
 19903  0046CC  0012               	return	
 19904                           
 19905                           ;usb_device.c: 2417: {
 19906                           ;usb_device.c: 2420: USBCtrlTrfInHandler();
 19907  0046CE  EC24  F020         	call	_USBCtrlTrfInHandler	;wreg free
 19908  0046D2  0012               	return	
 19909  0046D4                     __end_of_USBCtrlEPService:
 19910                           	opt stack 0
 19911                           pclatu	equ	0xFFB
 19912                           pclath	equ	0xFFA
 19913                           tblptru	equ	0xFF8
 19914                           tblptrh	equ	0xFF7
 19915                           tblptrl	equ	0xFF6
 19916                           tablat	equ	0xFF5
 19917                           prodh	equ	0xFF4
 19918                           prodl	equ	0xFF3
 19919                           intcon	equ	0xFF2
 19920                           indf0	equ	0xFEF
 19921                           postinc0	equ	0xFEE
 19922                           fsr0h	equ	0xFEA
 19923                           fsr0l	equ	0xFE9
 19924                           wreg	equ	0xFE8
 19925                           indf1	equ	0xFE7
 19926                           postdec1	equ	0xFE5
 19927                           fsr1h	equ	0xFE2
 19928                           fsr1l	equ	0xFE1
 19929                           indf2	equ	0xFDF
 19930                           postinc2	equ	0xFDE
 19931                           postdec2	equ	0xFDD
 19932                           plusw2	equ	0xFDB
 19933                           fsr2h	equ	0xFDA
 19934                           fsr2l	equ	0xFD9
 19935                           status	equ	0xFD8
 19936                           
 19937 ;; *************** function _memcpy *****************
 19938 ;; Defined at:
 19939 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\memcpy.c"
 19940 ;; Parameters:    Size  Location     Type
 19941 ;;  d1              2    0[COMRAM] PTR void 
 19942 ;;		 -> receivePacket(100), response(100), SetupPkt(8), 
 19943 ;;  s1              2    2[COMRAM] PTR const void 
 19944 ;;		 -> recebeByte@frameData(100), CtrlTrfData(8), RAM(2047), SetupPkt(8), 
 19945 ;;  n               2    4[COMRAM] unsigned int 
 19946 ;; Auto vars:     Size  Location     Type
 19947 ;;  s               2    8[COMRAM] PTR const unsigned char 
 19948 ;;		 -> recebeByte@frameData(100), CtrlTrfData(8), RAM(2047), SetupPkt(8), 
 19949 ;;  d               2    6[COMRAM] PTR unsigned char 
 19950 ;;		 -> receivePacket(100), response(100), SetupPkt(8), 
 19951 ;;  tmp             1   10[COMRAM] unsigned char 
 19952 ;; Return value:  Size  Location     Type
 19953 ;;                  2    0[COMRAM] PTR void 
 19954 ;; Registers used:
 19955 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19956 ;; Tracked objects:
 19957 ;;		On entry : 0/0
 19958 ;;		On exit  : 0/0
 19959 ;;		Unchanged: 0/0
 19960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19961 ;;      Params:         6       0       0       0       0       0       0       0       0
 19962 ;;      Locals:         5       0       0       0       0       0       0       0       0
 19963 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19964 ;;      Totals:        11       0       0       0       0       0       0       0       0
 19965 ;;Total ram usage:       11 bytes
 19966 ;; Hardware stack levels used:    1
 19967 ;; This function calls:
 19968 ;;		Nothing
 19969 ;; This function is called by:
 19970 ;;		_USBCtrlEPService
 19971 ;;		_recebeByte
 19972 ;; This function uses a non-reentrant model
 19973 ;;
 19974                           
 19975                           	psect	text73
 19976  0051BE                     __ptext73:
 19977                           	opt stack 0
 19978  0051BE                     _memcpy:
 19979                           	opt stack 22
 19980                           
 19981                           ;incstack = 0
 19982  0051BE  C003  F009         	movff	memcpy@s1,memcpy@s
 19983  0051C2  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
 19984  0051C6  C001  F007         	movff	memcpy@d1,memcpy@d
 19985  0051CA  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
 19986  0051CE  D010               	goto	i2l3252
 19987  0051D0                     i2l8350:
 19988  0051D0  C009  FFD9         	movff	memcpy@s,fsr2l
 19989  0051D4  C00A  FFDA         	movff	memcpy@s+1,fsr2h
 19990  0051D8  50DF               	movf	indf2,w,c
 19991  0051DA  6E0B               	movwf	memcpy@tmp,c
 19992  0051DC  4A09               	infsnz	memcpy@s,f,c
 19993  0051DE  2A0A               	incf	memcpy@s+1,f,c
 19994  0051E0  C007  FFD9         	movff	memcpy@d,fsr2l
 19995  0051E4  C008  FFDA         	movff	memcpy@d+1,fsr2h
 19996  0051E8  C00B  FFDF         	movff	memcpy@tmp,indf2
 19997  0051EC  4A07               	infsnz	memcpy@d,f,c
 19998  0051EE  2A08               	incf	memcpy@d+1,f,c
 19999  0051F0                     i2l3252:
 20000  0051F0  0605               	decf	memcpy@n,f,c
 20001  0051F2  A0D8               	btfss	status,0,c
 20002  0051F4  0606               	decf	memcpy@n+1,f,c
 20003  0051F6  2805               	incf	memcpy@n,w,c
 20004  0051F8  E1EB               	bnz	i2l8350
 20005  0051FA  2806               	incf	memcpy@n+1,w,c
 20006  0051FC  B4D8               	btfsc	status,2,c
 20007  0051FE  0012               	return	
 20008  005200  D7E7               	goto	i2l3253
 20009  005202                     __end_of_memcpy:
 20010                           	opt stack 0
 20011                           pclatu	equ	0xFFB
 20012                           pclath	equ	0xFFA
 20013                           tblptru	equ	0xFF8
 20014                           tblptrh	equ	0xFF7
 20015                           tblptrl	equ	0xFF6
 20016                           tablat	equ	0xFF5
 20017                           prodh	equ	0xFF4
 20018                           prodl	equ	0xFF3
 20019                           intcon	equ	0xFF2
 20020                           indf0	equ	0xFEF
 20021                           postinc0	equ	0xFEE
 20022                           fsr0h	equ	0xFEA
 20023                           fsr0l	equ	0xFE9
 20024                           wreg	equ	0xFE8
 20025                           indf1	equ	0xFE7
 20026                           postdec1	equ	0xFE5
 20027                           fsr1h	equ	0xFE2
 20028                           fsr1l	equ	0xFE1
 20029                           indf2	equ	0xFDF
 20030                           postinc2	equ	0xFDE
 20031                           postdec2	equ	0xFDD
 20032                           plusw2	equ	0xFDB
 20033                           fsr2h	equ	0xFDA
 20034                           fsr2l	equ	0xFD9
 20035                           status	equ	0xFD8
 20036                           
 20037 ;; *************** function _USBCtrlTrfSetupHandler *****************
 20038 ;; Defined at:
 20039 ;;		line 2465 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 20040 ;; Parameters:    Size  Location     Type
 20041 ;;		None
 20042 ;; Auto vars:     Size  Location     Type
 20043 ;;		None
 20044 ;; Return value:  Size  Location     Type
 20045 ;;                  1    wreg      void 
 20046 ;; Registers used:
 20047 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20048 ;; Tracked objects:
 20049 ;;		On entry : 0/0
 20050 ;;		On exit  : 0/0
 20051 ;;		Unchanged: 0/0
 20052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20053 ;;      Params:         0       0       0       0       0       0       0       0       0
 20054 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20055 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20056 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20057 ;;Total ram usage:        0 bytes
 20058 ;; Hardware stack levels used:    1
 20059 ;; Hardware stack levels required when called:    6
 20060 ;; This function calls:
 20061 ;;		_USBCheckStdRequest
 20062 ;;		_USBCtrlEPServiceComplete
 20063 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 20064 ;; This function is called by:
 20065 ;;		_USBCtrlEPService
 20066 ;; This function uses a non-reentrant model
 20067 ;;
 20068                           
 20069                           	psect	text74
 20070  0047FA                     __ptext74:
 20071                           	opt stack 0
 20072  0047FA                     _USBCtrlTrfSetupHandler:
 20073                           	opt stack 16
 20074                           
 20075                           ;usb_device.c: 2470: shortPacketStatus = 0;
 20076                           
 20077                           ;incstack = 0
 20078  0047FA  0E00               	movlw	0
 20079  0047FC  6E58               	movwf	_shortPacketStatus,c	;volatile
 20080                           
 20081                           ;usb_device.c: 2471: USBDeferStatusStagePacket = 0;
 20082  0047FE  0E00               	movlw	0
 20083  004800  6E54               	movwf	_USBDeferStatusStagePacket,c	;volatile
 20084                           
 20085                           ;usb_device.c: 2472: USBDeferINDataStagePackets = 0;
 20086  004802  0E00               	movlw	0
 20087  004804  0102               	movlb	2	; () banked
 20088  004806  6FEA               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 20089                           
 20090                           ;usb_device.c: 2473: USBDeferOUTDataStagePackets = 0;
 20091  004808  0E00               	movlw	0
 20092  00480A  6FE9               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 20093                           
 20094                           ;usb_device.c: 2474: BothEP0OutUOWNsSet = 0;
 20095  00480C  0E00               	movlw	0
 20096  00480E  0101               	movlb	1	; () banked
 20097  004810  6FF7               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 20098                           
 20099                           ;usb_device.c: 2475: controlTransferState = 0;
 20100  004812  0E00               	movlw	0
 20101  004814  6E57               	movwf	_controlTransferState,c	;volatile
 20102                           
 20103                           ; BSR set to: 1
 20104                           ;usb_device.c: 2484: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 20105  004816  C046  FFD9         	movff	_pBDTEntryIn,fsr2l
 20106  00481A  C047  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20107  00481E  0E7F               	movlw	127
 20108  004820  16DF               	andwf	indf2,f,c
 20109                           
 20110                           ; BSR set to: 1
 20111                           ;usb_device.c: 2486: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 20112  004822  0E04               	movlw	4
 20113  004824  1846               	xorwf	_pBDTEntryIn,w,c
 20114  004826  6E46               	movwf	_pBDTEntryIn,c
 20115  004828  5047               	movf	_pBDTEntryIn+1,w,c
 20116  00482A  6E47               	movwf	_pBDTEntryIn+1,c
 20117                           
 20118                           ; BSR set to: 1
 20119                           ;usb_device.c: 2487: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 20120  00482C  C046  FFD9         	movff	_pBDTEntryIn,fsr2l
 20121  004830  C047  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20122  004834  0E7F               	movlw	127
 20123  004836  16DF               	andwf	indf2,f,c
 20124                           
 20125                           ; BSR set to: 1
 20126                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 20127  004838  0E04               	movlw	4
 20128  00483A  1846               	xorwf	_pBDTEntryIn,w,c
 20129  00483C  6E46               	movwf	_pBDTEntryIn,c
 20130  00483E  5047               	movf	_pBDTEntryIn+1,w,c
 20131  004840  6E47               	movwf	_pBDTEntryIn+1,c
 20132                           
 20133                           ; BSR set to: 1
 20134                           ;usb_device.c: 2489: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 20135  004842  C04E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20136  004846  C04F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20137  00484A  0E7F               	movlw	127
 20138  00484C  16DF               	andwf	indf2,f,c
 20139                           
 20140                           ; BSR set to: 1
 20141                           ;usb_device.c: 2491: inPipes[0].info.Val = 0;
 20142  00484E  0E00               	movlw	0
 20143  004850  6E43               	movwf	_inPipes+3,c	;volatile
 20144                           
 20145                           ; BSR set to: 1
 20146                           ;usb_device.c: 2492: inPipes[0].wCount.Val = 0;
 20147  004852  0E00               	movlw	0
 20148  004854  6E45               	movwf	_inPipes+5,c	;volatile
 20149  004856  0E00               	movlw	0
 20150  004858  6E44               	movwf	_inPipes+4,c	;volatile
 20151                           
 20152                           ; BSR set to: 1
 20153                           ;usb_device.c: 2493: outPipes[0].info.Val = 0;
 20154  00485A  0E00               	movlw	0
 20155  00485C  6E3B               	movwf	_outPipes+3,c	;volatile
 20156                           
 20157                           ; BSR set to: 1
 20158                           ;usb_device.c: 2494: outPipes[0].wCount.Val = 0;
 20159  00485E  0E00               	movlw	0
 20160  004860  6E3D               	movwf	_outPipes+5,c	;volatile
 20161  004862  0E00               	movlw	0
 20162  004864  6E3C               	movwf	_outPipes+4,c	;volatile
 20163                           
 20164                           ; BSR set to: 1
 20165                           ;usb_device.c: 2500: USBCheckStdRequest();
 20166  004866  ECEE  F01E         	call	_USBCheckStdRequest	;wreg free
 20167                           
 20168                           ;usb_device.c: 2501: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 20169  00486A  0E00               	movlw	0
 20170  00486C  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 20171  00486E  0E03               	movlw	3
 20172  004870  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 20173  004872  0E00               	movlw	0
 20174  004874  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 20175  004876  0E00               	movlw	0
 20176  004878  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 20177  00487A  0E00               	movlw	0
 20178  00487C  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 20179  00487E  0E00               	movlw	0
 20180  004880  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 20181  004882  ECA8  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 20182                           
 20183                           ;usb_device.c: 2514: USBCtrlEPServiceComplete();
 20184  004886  EC25  F01C         	call	_USBCtrlEPServiceComplete	;wreg free
 20185  00488A  0012               	return		;funcret
 20186  00488C                     __end_of_USBCtrlTrfSetupHandler:
 20187                           	opt stack 0
 20188                           pclatu	equ	0xFFB
 20189                           pclath	equ	0xFFA
 20190                           tblptru	equ	0xFF8
 20191                           tblptrh	equ	0xFF7
 20192                           tblptrl	equ	0xFF6
 20193                           tablat	equ	0xFF5
 20194                           prodh	equ	0xFF4
 20195                           prodl	equ	0xFF3
 20196                           intcon	equ	0xFF2
 20197                           indf0	equ	0xFEF
 20198                           postinc0	equ	0xFEE
 20199                           fsr0h	equ	0xFEA
 20200                           fsr0l	equ	0xFE9
 20201                           wreg	equ	0xFE8
 20202                           indf1	equ	0xFE7
 20203                           postdec1	equ	0xFE5
 20204                           fsr1h	equ	0xFE2
 20205                           fsr1l	equ	0xFE1
 20206                           indf2	equ	0xFDF
 20207                           postinc2	equ	0xFDE
 20208                           postdec2	equ	0xFDD
 20209                           plusw2	equ	0xFDB
 20210                           fsr2h	equ	0xFDA
 20211                           fsr2l	equ	0xFD9
 20212                           status	equ	0xFD8
 20213                           
 20214 ;; *************** function _USBCtrlEPServiceComplete *****************
 20215 ;; Defined at:
 20216 ;;		line 1616 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 20217 ;; Parameters:    Size  Location     Type
 20218 ;;		None
 20219 ;; Auto vars:     Size  Location     Type
 20220 ;;		None
 20221 ;; Return value:  Size  Location     Type
 20222 ;;                  1    wreg      void 
 20223 ;; Registers used:
 20224 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20225 ;; Tracked objects:
 20226 ;;		On entry : 0/0
 20227 ;;		On exit  : 0/0
 20228 ;;		Unchanged: 0/0
 20229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20230 ;;      Params:         0       0       0       0       0       0       0       0       0
 20231 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20232 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20233 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20234 ;;Total ram usage:        0 bytes
 20235 ;; Hardware stack levels used:    1
 20236 ;; Hardware stack levels required when called:    2
 20237 ;; This function calls:
 20238 ;;		_USBCtrlEPAllowDataStage
 20239 ;;		_USBCtrlEPAllowStatusStage
 20240 ;; This function is called by:
 20241 ;;		_USBCtrlTrfSetupHandler
 20242 ;; This function uses a non-reentrant model
 20243 ;;
 20244                           
 20245                           	psect	text75
 20246  00384A                     __ptext75:
 20247                           	opt stack 0
 20248  00384A                     _USBCtrlEPServiceComplete:
 20249                           	opt stack 19
 20250                           
 20251                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
 20252                           
 20253                           ;incstack = 0
 20254  00384A  986D               	bcf	3949,4,c	;volatile
 20255                           
 20256                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
 20257  00384C  BE43               	btfsc	_inPipes+3,7,c	;volatile
 20258  00384E  D03B               	goto	i2l484
 20259                           
 20260                           ;usb_device.c: 1629: {
 20261                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
 20262  003850  AE3B               	btfss	_outPipes+3,7,c	;volatile
 20263  003852  D00E               	goto	i2l485
 20264                           
 20265                           ;usb_device.c: 1631: {
 20266                           ;usb_device.c: 1632: controlTransferState = 2;
 20267  003854  0E02               	movlw	2
 20268  003856  6E57               	movwf	_controlTransferState,c	;volatile
 20269                           
 20270                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
 20271  003858  0102               	movlb	2	; () banked
 20272  00385A  51E9               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 20273  00385C  B4D8               	btfsc	status,2,c
 20274                           
 20275                           ; BSR set to: 2
 20276                           ;usb_device.c: 1644: {
 20277                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
 20278  00385E  ECD3  F022         	call	_USBCtrlEPAllowDataStage	;wreg free
 20279                           
 20280                           ;usb_device.c: 1646: }
 20281                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
 20282  003862  0E00               	movlw	0
 20283  003864  0102               	movlb	2	; () banked
 20284  003866  6FEB               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 20285                           
 20286                           ; BSR set to: 2
 20287                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
 20288  003868  0E00               	movlw	0
 20289  00386A  0101               	movlb	1	; () banked
 20290  00386C  6FF6               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 20291                           
 20292                           ;usb_device.c: 1652: }
 20293  00386E  0012               	return	
 20294  003870                     i2l485:
 20295                           
 20296                           ;usb_device.c: 1653: else
 20297                           ;usb_device.c: 1654: {
 20298                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
 20299                           
 20300                           ; BSR set to: 1
 20301  003870  EE20 F001          	lfsr	2,1
 20302  003874  504E               	movf	_pBDTEntryEP0OutNext,w,c
 20303  003876  26D9               	addwf	fsr2l,f,c
 20304  003878  504F               	movf	_pBDTEntryEP0OutNext+1,w,c
 20305  00387A  22DA               	addwfc	fsr2h,f,c
 20306  00387C  0E08               	movlw	8
 20307  00387E  6EDF               	movwf	indf2,c
 20308                           
 20309                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 20310  003880  EE20 F002          	lfsr	2,2
 20311  003884  504E               	movf	_pBDTEntryEP0OutNext,w,c
 20312  003886  26D9               	addwf	fsr2l,f,c
 20313  003888  504F               	movf	_pBDTEntryEP0OutNext+1,w,c
 20314  00388A  22DA               	addwfc	fsr2h,f,c
 20315  00388C  0E30               	movlw	48
 20316  00388E  6EDE               	movwf	postinc2,c
 20317  003890  0E04               	movlw	4
 20318  003892  6EDD               	movwf	postdec2,c
 20319                           
 20320                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 20321  003894  C04E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20322  003898  C04F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20323  00389C  0E0C               	movlw	12
 20324  00389E  6EDF               	movwf	indf2,c
 20325                           
 20326                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 20327  0038A0  C04E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20328  0038A4  C04F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20329  0038A8  0E00               	movlw	0
 20330  0038AA  8EDB               	bsf	plusw2,7,c
 20331                           
 20332                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
 20333  0038AC  C046  FFD9         	movff	_pBDTEntryIn,fsr2l
 20334  0038B0  C047  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20335  0038B4  0E04               	movlw	4
 20336  0038B6  6EDF               	movwf	indf2,c
 20337                           
 20338                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
 20339  0038B8  C046  FFD9         	movff	_pBDTEntryIn,fsr2l
 20340  0038BC  C047  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20341  0038C0  0E00               	movlw	0
 20342  0038C2  8EDB               	bsf	plusw2,7,c
 20343                           
 20344                           ;usb_device.c: 1665: }
 20345                           ;usb_device.c: 1666: }
 20346  0038C4  0012               	return	
 20347  0038C6                     i2l484:
 20348                           
 20349                           ;usb_device.c: 1667: else
 20350                           ;usb_device.c: 1668: {
 20351                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
 20352  0038C6  0104               	movlb	4	; () banked
 20353  0038C8  AF30               	btfss	48,7,b	;volatile
 20354  0038CA  D013               	goto	i2l489
 20355                           
 20356                           ; BSR set to: 4
 20357                           ;usb_device.c: 1670: {
 20358                           ;usb_device.c: 1671: controlTransferState = 1;
 20359  0038CC  0E01               	movlw	1
 20360  0038CE  6E57               	movwf	_controlTransferState,c	;volatile
 20361                           
 20362                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
 20363  0038D0  0102               	movlb	2	; () banked
 20364  0038D2  51EA               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 20365  0038D4  B4D8               	btfsc	status,2,c
 20366                           
 20367                           ; BSR set to: 2
 20368                           ;usb_device.c: 1686: {
 20369                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
 20370  0038D6  ECD3  F022         	call	_USBCtrlEPAllowDataStage	;wreg free
 20371                           
 20372                           ;usb_device.c: 1688: }
 20373                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
 20374  0038DA  0E00               	movlw	0
 20375  0038DC  0102               	movlb	2	; () banked
 20376  0038DE  6FEB               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 20377                           
 20378                           ; BSR set to: 2
 20379                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
 20380  0038E0  0E00               	movlw	0
 20381  0038E2  0101               	movlb	1	; () banked
 20382  0038E4  6FF6               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 20383                           
 20384                           ; BSR set to: 1
 20385                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
 20386  0038E6  5054               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 20387  0038E8  A4D8               	btfss	status,2,c
 20388  0038EA  0012               	return	
 20389                           
 20390                           ; BSR set to: 1
 20391                           ;usb_device.c: 1713: {
 20392                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
 20393  0038EC  ECC0  F01F         	call	_USBCtrlEPAllowStatusStage	;wreg free
 20394                           
 20395                           ;usb_device.c: 1715: }
 20396                           ;usb_device.c: 1716: }
 20397  0038F0  0012               	return	
 20398  0038F2                     i2l489:
 20399                           
 20400                           ;usb_device.c: 1717: else
 20401                           ;usb_device.c: 1718: {
 20402                           ;usb_device.c: 1729: controlTransferState = 2;
 20403  0038F2  0E02               	movlw	2
 20404  0038F4  6E57               	movwf	_controlTransferState,c	;volatile
 20405                           
 20406                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
 20407  0038F6  EE20 F001          	lfsr	2,1
 20408  0038FA  504E               	movf	_pBDTEntryEP0OutNext,w,c
 20409  0038FC  26D9               	addwf	fsr2l,f,c
 20410  0038FE  504F               	movf	_pBDTEntryEP0OutNext+1,w,c
 20411  003900  22DA               	addwfc	fsr2h,f,c
 20412  003902  0E08               	movlw	8
 20413  003904  6EDF               	movwf	indf2,c
 20414                           
 20415                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 20416  003906  EE20 F002          	lfsr	2,2
 20417  00390A  504E               	movf	_pBDTEntryEP0OutNext,w,c
 20418  00390C  26D9               	addwf	fsr2l,f,c
 20419  00390E  504F               	movf	_pBDTEntryEP0OutNext+1,w,c
 20420  003910  22DA               	addwfc	fsr2h,f,c
 20421  003912  0E30               	movlw	48
 20422  003914  6EDE               	movwf	postinc2,c
 20423  003916  0E04               	movlw	4
 20424  003918  6EDD               	movwf	postdec2,c
 20425                           
 20426                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 20427  00391A  C04E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20428  00391E  C04F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20429  003922  0E04               	movlw	4
 20430  003924  6EDF               	movwf	indf2,c
 20431                           
 20432                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 20433  003926  C04E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20434  00392A  C04F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20435  00392E  0E00               	movlw	0
 20436  003930  8EDB               	bsf	plusw2,7,c
 20437                           
 20438                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
 20439  003932  0E00               	movlw	0
 20440  003934  0102               	movlb	2	; () banked
 20441  003936  6FEB               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 20442                           
 20443                           ; BSR set to: 2
 20444                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
 20445  003938  0E00               	movlw	0
 20446  00393A  0101               	movlb	1	; () banked
 20447  00393C  6FF6               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 20448                           
 20449                           ; BSR set to: 1
 20450                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
 20451  00393E  5054               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 20452  003940  A4D8               	btfss	status,2,c
 20453  003942  0012               	return	
 20454                           
 20455                           ; BSR set to: 1
 20456                           ;usb_device.c: 1741: {
 20457                           ;usb_device.c: 1742: USBCtrlEPAllowStatusStage();
 20458  003944  ECC0  F01F         	call	_USBCtrlEPAllowStatusStage	;wreg free
 20459  003948  0012               	return	
 20460  00394A                     __end_of_USBCtrlEPServiceComplete:
 20461                           	opt stack 0
 20462                           pclatu	equ	0xFFB
 20463                           pclath	equ	0xFFA
 20464                           tblptru	equ	0xFF8
 20465                           tblptrh	equ	0xFF7
 20466                           tblptrl	equ	0xFF6
 20467                           tablat	equ	0xFF5
 20468                           prodh	equ	0xFF4
 20469                           prodl	equ	0xFF3
 20470                           intcon	equ	0xFF2
 20471                           indf0	equ	0xFEF
 20472                           postinc0	equ	0xFEE
 20473                           fsr0h	equ	0xFEA
 20474                           fsr0l	equ	0xFE9
 20475                           wreg	equ	0xFE8
 20476                           indf1	equ	0xFE7
 20477                           postdec1	equ	0xFE5
 20478                           fsr1h	equ	0xFE2
 20479                           fsr1l	equ	0xFE1
 20480                           indf2	equ	0xFDF
 20481                           postinc2	equ	0xFDE
 20482                           postdec2	equ	0xFDD
 20483                           plusw2	equ	0xFDB
 20484                           fsr2h	equ	0xFDA
 20485                           fsr2l	equ	0xFD9
 20486                           status	equ	0xFD8
 20487                           
 20488 ;; *************** function _USBCtrlEPAllowDataStage *****************
 20489 ;; Defined at:
 20490 ;;		line 1488 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 20491 ;; Parameters:    Size  Location     Type
 20492 ;;		None
 20493 ;; Auto vars:     Size  Location     Type
 20494 ;;		None
 20495 ;; Return value:  Size  Location     Type
 20496 ;;                  1    wreg      void 
 20497 ;; Registers used:
 20498 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20499 ;; Tracked objects:
 20500 ;;		On entry : 0/0
 20501 ;;		On exit  : 0/0
 20502 ;;		Unchanged: 0/0
 20503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20504 ;;      Params:         0       0       0       0       0       0       0       0       0
 20505 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20506 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20507 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20508 ;;Total ram usage:        0 bytes
 20509 ;; Hardware stack levels used:    1
 20510 ;; Hardware stack levels required when called:    1
 20511 ;; This function calls:
 20512 ;;		_USBCtrlTrfTxService
 20513 ;; This function is called by:
 20514 ;;		_USBCtrlEPServiceComplete
 20515 ;; This function uses a non-reentrant model
 20516 ;;
 20517                           
 20518                           	psect	text76
 20519  0045A6                     __ptext76:
 20520                           	opt stack 0
 20521  0045A6                     _USBCtrlEPAllowDataStage:
 20522                           	opt stack 19
 20523                           
 20524                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
 20525                           
 20526                           ;incstack = 0
 20527  0045A6  0E00               	movlw	0
 20528  0045A8  0102               	movlb	2	; () banked
 20529  0045AA  6FEA               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 20530                           
 20531                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
 20532  0045AC  0E00               	movlw	0
 20533  0045AE  6FE9               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 20534                           
 20535                           ; BSR set to: 2
 20536                           ;usb_device.c: 1493: if(controlTransferState == 2)
 20537  0045B0  0E02               	movlw	2
 20538  0045B2  1857               	xorwf	_controlTransferState,w,c	;volatile
 20539  0045B4  A4D8               	btfss	status,2,c
 20540  0045B6  D01F               	goto	i2l473
 20541                           
 20542                           ; BSR set to: 2
 20543                           ;usb_device.c: 1494: {
 20544                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
 20545  0045B8  EE20 F001          	lfsr	2,1
 20546  0045BC  504E               	movf	_pBDTEntryEP0OutNext,w,c
 20547  0045BE  26D9               	addwf	fsr2l,f,c
 20548  0045C0  504F               	movf	_pBDTEntryEP0OutNext+1,w,c
 20549  0045C2  22DA               	addwfc	fsr2h,f,c
 20550  0045C4  0E08               	movlw	8
 20551  0045C6  6EDF               	movwf	indf2,c
 20552                           
 20553                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 20554  0045C8  EE20 F002          	lfsr	2,2
 20555  0045CC  504E               	movf	_pBDTEntryEP0OutNext,w,c
 20556  0045CE  26D9               	addwf	fsr2l,f,c
 20557  0045D0  504F               	movf	_pBDTEntryEP0OutNext+1,w,c
 20558  0045D2  22DA               	addwfc	fsr2h,f,c
 20559  0045D4  0E38               	movlw	56
 20560  0045D6  6EDE               	movwf	postinc2,c
 20561  0045D8  0E04               	movlw	4
 20562  0045DA  6EDD               	movwf	postdec2,c
 20563                           
 20564                           ; BSR set to: 2
 20565                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 20566  0045DC  C04E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20567  0045E0  C04F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20568  0045E4  0E48               	movlw	72
 20569  0045E6  6EDF               	movwf	indf2,c
 20570                           
 20571                           ; BSR set to: 2
 20572                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 20573  0045E8  C04E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20574  0045EC  C04F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20575  0045F0  0E00               	movlw	0
 20576  0045F2  8EDB               	bsf	plusw2,7,c
 20577                           
 20578                           ;usb_device.c: 1500: }
 20579  0045F4  0012               	return	
 20580  0045F6                     i2l473:
 20581                           
 20582                           ; BSR set to: 2
 20583                           ;usb_device.c: 1501: else
 20584                           ;usb_device.c: 1502: {
 20585                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 20586                           
 20587                           ; BSR set to: 2
 20588  0045F6  5044               	movf	_inPipes+4,w,c	;volatile
 20589  0045F8  0104               	movlb	4	; () banked
 20590  0045FA  5D36               	subwf	54,w,b	;volatile
 20591  0045FC  5045               	movf	_inPipes+5,w,c	;volatile
 20592  0045FE  5937               	subwfb	55,w,b	;volatile
 20593  004600  B0D8               	btfsc	status,0,c
 20594  004602  D004               	goto	i2l475
 20595                           
 20596                           ; BSR set to: 4
 20597                           ;usb_device.c: 1506: {
 20598                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
 20599  004604  C436 F044          	movff	1078,_inPipes+4	;volatile
 20600  004608  C437 F045          	movff	1079,_inPipes+5	;volatile
 20601  00460C                     i2l475:
 20602                           
 20603                           ; BSR set to: 4
 20604                           ;usb_device.c: 1508: }
 20605                           ;usb_device.c: 1509: USBCtrlTrfTxService();
 20606                           
 20607                           ; BSR set to: 4
 20608  00460C  EC5A  F01F         	call	_USBCtrlTrfTxService	;wreg free
 20609                           
 20610                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 20611  004610  EE20 F002          	lfsr	2,2
 20612  004614  5046               	movf	_pBDTEntryIn,w,c
 20613  004616  26D9               	addwf	fsr2l,f,c
 20614  004618  5047               	movf	_pBDTEntryIn+1,w,c
 20615  00461A  22DA               	addwfc	fsr2h,f,c
 20616  00461C  0E38               	movlw	56
 20617  00461E  6EDE               	movwf	postinc2,c
 20618  004620  0E04               	movlw	4
 20619  004622  6EDD               	movwf	postdec2,c
 20620                           
 20621                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 20622  004624  C046  FFD9         	movff	_pBDTEntryIn,fsr2l
 20623  004628  C047  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20624  00462C  0E48               	movlw	72
 20625  00462E  6EDF               	movwf	indf2,c
 20626                           
 20627                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
 20628  004630  C046  FFD9         	movff	_pBDTEntryIn,fsr2l
 20629  004634  C047  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20630  004638  0E00               	movlw	0
 20631  00463A  8EDB               	bsf	plusw2,7,c
 20632  00463C  0012               	return	
 20633  00463E                     __end_of_USBCtrlEPAllowDataStage:
 20634                           	opt stack 0
 20635                           pclatu	equ	0xFFB
 20636                           pclath	equ	0xFFA
 20637                           tblptru	equ	0xFF8
 20638                           tblptrh	equ	0xFF7
 20639                           tblptrl	equ	0xFF6
 20640                           tablat	equ	0xFF5
 20641                           prodh	equ	0xFF4
 20642                           prodl	equ	0xFF3
 20643                           intcon	equ	0xFF2
 20644                           indf0	equ	0xFEF
 20645                           postinc0	equ	0xFEE
 20646                           fsr0h	equ	0xFEA
 20647                           fsr0l	equ	0xFE9
 20648                           wreg	equ	0xFE8
 20649                           indf1	equ	0xFE7
 20650                           postdec1	equ	0xFE5
 20651                           fsr1h	equ	0xFE2
 20652                           fsr1l	equ	0xFE1
 20653                           indf2	equ	0xFDF
 20654                           postinc2	equ	0xFDE
 20655                           postdec2	equ	0xFDD
 20656                           plusw2	equ	0xFDB
 20657                           fsr2h	equ	0xFDA
 20658                           fsr2l	equ	0xFD9
 20659                           status	equ	0xFD8
 20660                           
 20661 ;; *************** function _USBCheckStdRequest *****************
 20662 ;; Defined at:
 20663 ;;		line 2686 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 20664 ;; Parameters:    Size  Location     Type
 20665 ;;		None
 20666 ;; Auto vars:     Size  Location     Type
 20667 ;;		None
 20668 ;; Return value:  Size  Location     Type
 20669 ;;                  1    wreg      void 
 20670 ;; Registers used:
 20671 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20672 ;; Tracked objects:
 20673 ;;		On entry : 0/0
 20674 ;;		On exit  : 0/0
 20675 ;;		Unchanged: 0/0
 20676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20677 ;;      Params:         0       0       0       0       0       0       0       0       0
 20678 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20679 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20680 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20681 ;;Total ram usage:        0 bytes
 20682 ;; Hardware stack levels used:    1
 20683 ;; Hardware stack levels required when called:    5
 20684 ;; This function calls:
 20685 ;;		_USBStdFeatureReqHandler
 20686 ;;		_USBStdGetDscHandler
 20687 ;;		_USBStdGetStatusHandler
 20688 ;;		_USBStdSetCfgHandler
 20689 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 20690 ;; This function is called by:
 20691 ;;		_USBCtrlTrfSetupHandler
 20692 ;; This function uses a non-reentrant model
 20693 ;;
 20694                           
 20695                           	psect	text77
 20696  003DDC                     __ptext77:
 20697                           	opt stack 0
 20698  003DDC                     _USBCheckStdRequest:
 20699                           	opt stack 16
 20700                           
 20701                           ;usb_device.c: 2688: if(SetupPkt.RequestType != (0x00>>5)) return;
 20702                           
 20703                           ;incstack = 0
 20704  003DDC  0104               	movlb	4	; () banked
 20705  003DDE  3930               	swapf	48,w,b	;volatile
 20706  003DE0  32E8               	rrcf	wreg,f,c
 20707  003DE2  0B03               	andlw	3
 20708  003DE4  0900               	iorlw	0
 20709  003DE6  A4D8               	btfss	status,2,c
 20710  003DE8  0012               	return	
 20711  003DEA  D042               	goto	i2l608
 20712  003DEC                     i2l609:
 20713                           
 20714                           ; BSR set to: 4
 20715                           ;usb_device.c: 2693: inPipes[0].info.bits.busy = 1;
 20716  003DEC  8E43               	bsf	_inPipes+3,7,c	;volatile
 20717                           
 20718                           ; BSR set to: 4
 20719                           ;usb_device.c: 2694: USBDeviceState = ADR_PENDING_STATE;
 20720  003DEE  0E08               	movlw	8
 20721  003DF0  6E59               	movwf	_USBDeviceState,c	;volatile
 20722                           
 20723                           ;usb_device.c: 2696: break;
 20724  003DF2  0012               	return	
 20725  003DF4                     
 20726                           ; BSR set to: 4
 20727                           ;usb_device.c: 2698: USBStdGetDscHandler();
 20728                           
 20729                           ; BSR set to: 4
 20730  003DF4  EC8C  F019         	call	_USBStdGetDscHandler	;wreg free
 20731                           
 20732                           ;usb_device.c: 2699: break;
 20733  003DF8  0012               	return	
 20734  003DFA                     
 20735                           ;usb_device.c: 2701: USBStdSetCfgHandler();
 20736  003DFA  EC80  F01E         	call	_USBStdSetCfgHandler	;wreg free
 20737                           
 20738                           ;usb_device.c: 2702: break;
 20739  003DFE  0012               	return	
 20740  003E00                     
 20741                           ;usb_device.c: 2704: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 20742  003E00  0E5E               	movlw	low _USBActiveConfiguration
 20743  003E02  6E40               	movwf	_inPipes,c	;volatile
 20744  003E04  0E00               	movlw	high _USBActiveConfiguration
 20745  003E06  6E41               	movwf	_inPipes+1,c	;volatile
 20746                           
 20747                           ;usb_device.c: 2705: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 20748  003E08  8043               	bsf	_inPipes+3,0,c	;volatile
 20749                           
 20750                           ;usb_device.c: 2706: inPipes[0].wCount.v[0] = 1;
 20751  003E0A  0E01               	movlw	1
 20752  003E0C  6E44               	movwf	_inPipes+4,c	;volatile
 20753                           
 20754                           ;usb_device.c: 2707: inPipes[0].info.bits.busy = 1;
 20755  003E0E  8E43               	bsf	_inPipes+3,7,c	;volatile
 20756                           
 20757                           ;usb_device.c: 2708: break;
 20758  003E10  0012               	return	
 20759  003E12                     
 20760                           ;usb_device.c: 2710: USBStdGetStatusHandler();
 20761  003E12  EC83  F022         	call	_USBStdGetStatusHandler	;wreg free
 20762                           
 20763                           ;usb_device.c: 2711: break;
 20764  003E16  0012               	return	
 20765  003E18                     
 20766                           ;usb_device.c: 2713: case 3:
 20767                           ;usb_device.c: 2714: USBStdFeatureReqHandler();
 20768  003E18  EC27  F011         	call	_USBStdFeatureReqHandler	;wreg free
 20769                           
 20770                           ;usb_device.c: 2715: break;
 20771  003E1C  0012               	return	
 20772  003E1E                     
 20773                           ;usb_device.c: 2717: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 20774  003E1E  0104               	movlb	4	; () banked
 20775  003E20  5134               	movf	52,w,b	;volatile
 20776  003E22  0D01               	mullw	1
 20777  003E24  0EFE               	movlw	low _USBAlternateInterface
 20778  003E26  24F3               	addwf	prodl,w,c
 20779  003E28  6E40               	movwf	_inPipes,c	;volatile
 20780  003E2A  0E02               	movlw	high _USBAlternateInterface
 20781  003E2C  20F4               	addwfc	prodh,w,c
 20782  003E2E  6E41               	movwf	_inPipes+1,c	;volatile
 20783                           
 20784                           ; BSR set to: 4
 20785                           ;usb_device.c: 2718: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 20786  003E30  8043               	bsf	_inPipes+3,0,c	;volatile
 20787                           
 20788                           ; BSR set to: 4
 20789                           ;usb_device.c: 2719: inPipes[0].wCount.v[0] = 1;
 20790  003E32  0E01               	movlw	1
 20791  003E34  6E44               	movwf	_inPipes+4,c	;volatile
 20792                           
 20793                           ; BSR set to: 4
 20794                           ;usb_device.c: 2720: inPipes[0].info.bits.busy = 1;
 20795  003E36  8E43               	bsf	_inPipes+3,7,c	;volatile
 20796                           
 20797                           ;usb_device.c: 2721: break;
 20798  003E38  0012               	return	
 20799  003E3A                     i2l618:
 20800                           
 20801                           ; BSR set to: 4
 20802                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
 20803  003E3A  8E43               	bsf	_inPipes+3,7,c	;volatile
 20804                           
 20805                           ; BSR set to: 4
 20806                           ;usb_device.c: 2724: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 20807  003E3C  5134               	movf	52,w,b	;volatile
 20808  003E3E  0D01               	mullw	1
 20809  003E40  0EFE               	movlw	low _USBAlternateInterface
 20810  003E42  24F3               	addwf	prodl,w,c
 20811  003E44  6ED9               	movwf	fsr2l,c
 20812  003E46  0E02               	movlw	high _USBAlternateInterface
 20813  003E48  20F4               	addwfc	prodh,w,c
 20814  003E4A  6EDA               	movwf	fsr2h,c
 20815  003E4C  C432 FFDF          	movff	1074,indf2	;volatile
 20816                           
 20817                           ;usb_device.c: 2725: break;
 20818  003E50  0012               	return	
 20819  003E52                     
 20820                           ; BSR set to: 4
 20821                           ;usb_device.c: 2727: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 20822                           
 20823                           ; BSR set to: 4
 20824  003E52  0E00               	movlw	0
 20825  003E54  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 20826  003E56  0E02               	movlw	2
 20827  003E58  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 20828  003E5A  0E00               	movlw	0
 20829  003E5C  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 20830  003E5E  0E00               	movlw	0
 20831  003E60  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 20832  003E62  0E00               	movlw	0
 20833  003E64  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 20834  003E66  0E00               	movlw	0
 20835  003E68  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 20836  003E6A  ECA8  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 20837                           
 20838                           ;usb_device.c: 2732: }
 20839                           
 20840                           ;usb_device.c: 2731: break;
 20841                           
 20842                           ;usb_device.c: 2730: default:
 20843                           
 20844                           ;usb_device.c: 2729: case 12:
 20845                           
 20846                           ;usb_device.c: 2728: break;
 20847  003E6E  0012               	return	
 20848  003E70                     i2l608:
 20849  003E70  0104               	movlb	4	; () banked
 20850  003E72  5131               	movf	49,w,b	;volatile
 20851                           
 20852                           ; Switch size 1, requested type "space"
 20853                           ; Number of cases is 11, Range of values is 0 to 12
 20854                           ; switch strategies available:
 20855                           ; Name         Instructions Cycles
 20856                           ; simple_byte           34    18 (average)
 20857                           ;	Chosen strategy is simple_byte
 20858  003E74  0A00               	xorlw	0	; case 0
 20859  003E76  B4D8               	btfsc	status,2,c
 20860  003E78  D7CC               	goto	i2l614
 20861  003E7A  0A01               	xorlw	1	; case 1
 20862  003E7C  B4D8               	btfsc	status,2,c
 20863  003E7E  D7CC               	goto	i2l615
 20864  003E80  0A02               	xorlw	2	; case 3
 20865  003E82  B4D8               	btfsc	status,2,c
 20866  003E84  D7C9               	goto	i2l615
 20867  003E86  0A06               	xorlw	6	; case 5
 20868  003E88  B4D8               	btfsc	status,2,c
 20869  003E8A  D7B0               	goto	i2l609
 20870  003E8C  0A03               	xorlw	3	; case 6
 20871  003E8E  B4D8               	btfsc	status,2,c
 20872  003E90  D7B1               	goto	i2l611
 20873  003E92  0A01               	xorlw	1	; case 7
 20874  003E94  B4D8               	btfsc	status,2,c
 20875  003E96  D7DD               	goto	i2l619
 20876  003E98  0A0F               	xorlw	15	; case 8
 20877  003E9A  B4D8               	btfsc	status,2,c
 20878  003E9C  D7B1               	goto	i2l613
 20879  003E9E  0A01               	xorlw	1	; case 9
 20880  003EA0  B4D8               	btfsc	status,2,c
 20881  003EA2  D7AB               	goto	i2l612
 20882  003EA4  0A03               	xorlw	3	; case 10
 20883  003EA6  B4D8               	btfsc	status,2,c
 20884  003EA8  D7BA               	goto	i2l617
 20885  003EAA  0A01               	xorlw	1	; case 11
 20886  003EAC  B4D8               	btfsc	status,2,c
 20887  003EAE  D7C5               	goto	i2l618
 20888  003EB0  0A07               	xorlw	7	; case 12
 20889  003EB2  0012               	return	
 20890  003EB4                     __end_of_USBCheckStdRequest:
 20891                           	opt stack 0
 20892                           pclatu	equ	0xFFB
 20893                           pclath	equ	0xFFA
 20894                           tblptru	equ	0xFF8
 20895                           tblptrh	equ	0xFF7
 20896                           tblptrl	equ	0xFF6
 20897                           tablat	equ	0xFF5
 20898                           prodh	equ	0xFF4
 20899                           prodl	equ	0xFF3
 20900                           intcon	equ	0xFF2
 20901                           indf0	equ	0xFEF
 20902                           postinc0	equ	0xFEE
 20903                           fsr0h	equ	0xFEA
 20904                           fsr0l	equ	0xFE9
 20905                           wreg	equ	0xFE8
 20906                           indf1	equ	0xFE7
 20907                           postdec1	equ	0xFE5
 20908                           fsr1h	equ	0xFE2
 20909                           fsr1l	equ	0xFE1
 20910                           indf2	equ	0xFDF
 20911                           postinc2	equ	0xFDE
 20912                           postdec2	equ	0xFDD
 20913                           plusw2	equ	0xFDB
 20914                           fsr2h	equ	0xFDA
 20915                           fsr2l	equ	0xFD9
 20916                           status	equ	0xFD8
 20917                           
 20918 ;; *************** function _USBStdSetCfgHandler *****************
 20919 ;; Defined at:
 20920 ;;		line 1968 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 20921 ;; Parameters:    Size  Location     Type
 20922 ;;		None
 20923 ;; Auto vars:     Size  Location     Type
 20924 ;;  i               1   20[COMRAM] unsigned char 
 20925 ;; Return value:  Size  Location     Type
 20926 ;;                  1    wreg      void 
 20927 ;; Registers used:
 20928 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20929 ;; Tracked objects:
 20930 ;;		On entry : 0/0
 20931 ;;		On exit  : 0/0
 20932 ;;		Unchanged: 0/0
 20933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20934 ;;      Params:         0       0       0       0       0       0       0       0       0
 20935 ;;      Locals:         1       0       0       0       0       0       0       0       0
 20936 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20937 ;;      Totals:         1       0       0       0       0       0       0       0       0
 20938 ;;Total ram usage:        1 bytes
 20939 ;; Hardware stack levels used:    1
 20940 ;; Hardware stack levels required when called:    4
 20941 ;; This function calls:
 20942 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 20943 ;;		i2_memset
 20944 ;; This function is called by:
 20945 ;;		_USBCheckStdRequest
 20946 ;; This function uses a non-reentrant model
 20947 ;;
 20948                           
 20949                           	psect	text78
 20950  003D00                     __ptext78:
 20951                           	opt stack 0
 20952  003D00                     _USBStdSetCfgHandler:
 20953                           	opt stack 16
 20954                           
 20955                           ;usb_device.c: 1970: uint8_t i;
 20956                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
 20957                           
 20958                           ;incstack = 0
 20959  003D00  8E43               	bsf	_inPipes+3,7,c	;volatile
 20960                           
 20961                           ;usb_device.c: 1976: memset((void*)&UEP1,0x00,(2));;
 20962  003D02  0E71               	movlw	113
 20963  003D04  6E01               	movwf	i2memset@p1,c
 20964  003D06  0E0F               	movlw	15
 20965  003D08  6E02               	movwf	i2memset@p1+1,c
 20966  003D0A  0E00               	movlw	0
 20967  003D0C  6E04               	movwf	i2memset@c+1,c
 20968  003D0E  0E00               	movlw	0
 20969  003D10  6E03               	movwf	i2memset@c,c
 20970  003D12  0E00               	movlw	0
 20971  003D14  6E06               	movwf	i2memset@n+1,c
 20972  003D16  0E02               	movlw	2
 20973  003D18  6E05               	movwf	i2memset@n,c
 20974  003D1A  ECAA  F02A         	call	i2_memset	;wreg free
 20975                           
 20976                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 20977  003D1E  0E00               	movlw	0
 20978  003D20  6E01               	movwf	i2memset@p1,c
 20979  003D22  0E04               	movlw	4
 20980  003D24  6E02               	movwf	i2memset@p1+1,c
 20981  003D26  0E00               	movlw	0
 20982  003D28  6E04               	movwf	i2memset@c+1,c
 20983  003D2A  0E00               	movlw	0
 20984  003D2C  6E03               	movwf	i2memset@c,c
 20985  003D2E  0E00               	movlw	0
 20986  003D30  6E06               	movwf	i2memset@n+1,c
 20987  003D32  0E30               	movlw	48
 20988  003D34  6E05               	movwf	i2memset@n,c
 20989  003D36  ECAA  F02A         	call	i2_memset	;wreg free
 20990                           
 20991                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
 20992  003D3A  8C6D               	bsf	3949,6,c	;volatile
 20993                           
 20994                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
 20995  003D3C  0E00               	movlw	0
 20996  003D3E  6E15               	movwf	USBStdSetCfgHandler@i,c
 20997  003D40                     i2l7710:
 20998  003D40  0E02               	movlw	2
 20999  003D42  6415               	cpfsgt	USBStdSetCfgHandler@i,c
 21000  003D44  D001               	goto	i2l525
 21001  003D46  D016               	goto	i2u602_40
 21002  003D48                     i2l525:
 21003                           
 21004                           ;usb_device.c: 1988: {
 21005                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
 21006  003D48  5015               	movf	USBStdSetCfgHandler@i,w,c
 21007  003D4A  0D01               	mullw	1
 21008  003D4C  0ED5               	movlw	low _ep_data_in
 21009  003D4E  24F3               	addwf	prodl,w,c
 21010  003D50  6ED9               	movwf	fsr2l,c
 21011  003D52  0E02               	movlw	high _ep_data_in
 21012  003D54  20F4               	addwfc	prodh,w,c
 21013  003D56  6EDA               	movwf	fsr2h,c
 21014  003D58  0E00               	movlw	0
 21015  003D5A  6EDF               	movwf	indf2,c
 21016                           
 21017                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
 21018  003D5C  5015               	movf	USBStdSetCfgHandler@i,w,c
 21019  003D5E  0D01               	mullw	1
 21020  003D60  0ED2               	movlw	low _ep_data_out
 21021  003D62  24F3               	addwf	prodl,w,c
 21022  003D64  6ED9               	movwf	fsr2l,c
 21023  003D66  0E02               	movlw	high _ep_data_out
 21024  003D68  20F4               	addwfc	prodh,w,c
 21025  003D6A  6EDA               	movwf	fsr2h,c
 21026  003D6C  0E00               	movlw	0
 21027  003D6E  6EDF               	movwf	indf2,c
 21028  003D70  2A15               	incf	USBStdSetCfgHandler@i,f,c
 21029  003D72  D7E6               	goto	i2l7710
 21030  003D74                     i2u602_40:
 21031                           
 21032                           ;usb_device.c: 1991: }
 21033                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
 21034  003D74  0EFE               	movlw	low _USBAlternateInterface
 21035  003D76  6E01               	movwf	i2memset@p1,c
 21036  003D78  0E02               	movlw	high _USBAlternateInterface
 21037  003D7A  6E02               	movwf	i2memset@p1+1,c
 21038  003D7C  0E00               	movlw	0
 21039  003D7E  6E04               	movwf	i2memset@c+1,c
 21040  003D80  0E00               	movlw	0
 21041  003D82  6E03               	movwf	i2memset@c,c
 21042  003D84  0E00               	movlw	0
 21043  003D86  6E06               	movwf	i2memset@n+1,c
 21044  003D88  0E02               	movlw	2
 21045  003D8A  6E05               	movwf	i2memset@n,c
 21046  003D8C  ECAA  F02A         	call	i2_memset	;wreg free
 21047                           
 21048                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
 21049  003D90  9C6D               	bcf	3949,6,c	;volatile
 21050                           
 21051                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 21052  003D92  0E08               	movlw	8
 21053  003D94  6E46               	movwf	_pBDTEntryIn,c
 21054  003D96  0E04               	movlw	4
 21055  003D98  6E47               	movwf	_pBDTEntryIn+1,c
 21056                           
 21057                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 21058  003D9A  0E00               	movlw	0
 21059  003D9C  6E50               	movwf	_pBDTEntryEP0OutCurrent,c
 21060  003D9E  0E04               	movlw	4
 21061  003DA0  6E51               	movwf	_pBDTEntryEP0OutCurrent+1,c
 21062                           
 21063                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 21064  003DA2  C050  F04E         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 21065  003DA6  C051  F04F         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 21066                           
 21067                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 21068  003DAA  C432 F05E          	movff	1074,_USBActiveConfiguration	;volatile
 21069                           
 21070                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
 21071  003DAE  505E               	movf	_USBActiveConfiguration,w,c	;volatile
 21072  003DB0  A4D8               	btfss	status,2,c
 21073  003DB2  D003               	goto	i2l527
 21074                           
 21075                           ;usb_device.c: 2010: {
 21076                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
 21077  003DB4  0E10               	movlw	16
 21078  003DB6  6E59               	movwf	_USBDeviceState,c	;volatile
 21079                           
 21080                           ;usb_device.c: 2013: }
 21081  003DB8  0012               	return	
 21082  003DBA                     i2l527:
 21083                           
 21084                           ;usb_device.c: 2014: else
 21085                           ;usb_device.c: 2015: {
 21086                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 21087  003DBA  0E00               	movlw	0
 21088  003DBC  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 21089  003DBE  0E01               	movlw	1
 21090  003DC0  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 21091  003DC2  0E5E               	movlw	low _USBActiveConfiguration
 21092  003DC4  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 21093  003DC6  0E00               	movlw	high _USBActiveConfiguration
 21094  003DC8  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 21095  003DCA  0E00               	movlw	0
 21096  003DCC  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 21097  003DCE  0E01               	movlw	1
 21098  003DD0  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 21099  003DD2  ECA8  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 21100                           
 21101                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
 21102  003DD6  0E20               	movlw	32
 21103  003DD8  6E59               	movwf	_USBDeviceState,c	;volatile
 21104  003DDA  0012               	return	
 21105  003DDC                     __end_of_USBStdSetCfgHandler:
 21106                           	opt stack 0
 21107                           pclatu	equ	0xFFB
 21108                           pclath	equ	0xFFA
 21109                           tblptru	equ	0xFF8
 21110                           tblptrh	equ	0xFF7
 21111                           tblptrl	equ	0xFF6
 21112                           tablat	equ	0xFF5
 21113                           prodh	equ	0xFF4
 21114                           prodl	equ	0xFF3
 21115                           intcon	equ	0xFF2
 21116                           indf0	equ	0xFEF
 21117                           postinc0	equ	0xFEE
 21118                           fsr0h	equ	0xFEA
 21119                           fsr0l	equ	0xFE9
 21120                           wreg	equ	0xFE8
 21121                           indf1	equ	0xFE7
 21122                           postdec1	equ	0xFE5
 21123                           fsr1h	equ	0xFE2
 21124                           fsr1l	equ	0xFE1
 21125                           indf2	equ	0xFDF
 21126                           postinc2	equ	0xFDE
 21127                           postdec2	equ	0xFDD
 21128                           plusw2	equ	0xFDB
 21129                           fsr2h	equ	0xFDA
 21130                           fsr2l	equ	0xFD9
 21131                           status	equ	0xFD8
 21132                           
 21133 ;; *************** function i2_memset *****************
 21134 ;; Defined at:
 21135 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\memset.c"
 21136 ;; Parameters:    Size  Location     Type
 21137 ;;  p1              2    0[COMRAM] PTR void 
 21138 ;;		 -> frameBuffer(150), USBAlternateInterface(2), BDT(48), UEP1(1), 
 21139 ;;  c               2    2[COMRAM] int 
 21140 ;;  n               2    4[COMRAM] unsigned int 
 21141 ;; Auto vars:     Size  Location     Type
 21142 ;;  memset          2    6[COMRAM] PTR unsigned char 
 21143 ;;		 -> frameBuffer(150), USBAlternateInterface(2), BDT(48), UEP1(1), 
 21144 ;; Return value:  Size  Location     Type
 21145 ;;                  2    0[COMRAM] PTR void 
 21146 ;; Registers used:
 21147 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21148 ;; Tracked objects:
 21149 ;;		On entry : 0/0
 21150 ;;		On exit  : 0/0
 21151 ;;		Unchanged: 0/0
 21152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21153 ;;      Params:         6       0       0       0       0       0       0       0       0
 21154 ;;      Locals:         2       0       0       0       0       0       0       0       0
 21155 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21156 ;;      Totals:         8       0       0       0       0       0       0       0       0
 21157 ;;Total ram usage:        8 bytes
 21158 ;; Hardware stack levels used:    1
 21159 ;; This function calls:
 21160 ;;		Nothing
 21161 ;; This function is called by:
 21162 ;;		_USBStdSetCfgHandler
 21163 ;;		i2_USBDeviceInit
 21164 ;; This function uses a non-reentrant model
 21165 ;;
 21166                           
 21167                           	psect	text79
 21168  005554                     __ptext79:
 21169                           	opt stack 0
 21170  005554                     i2_memset:
 21171                           	opt stack 22
 21172                           
 21173                           ;incstack = 0
 21174  005554  C001  F007         	movff	i2memset@p1,i2memset@p
 21175  005558  C002  F008         	movff	i2memset@p1+1,i2memset@p+1
 21176  00555C  D008               	goto	i2l3258
 21177  00555E                     i2l7640:
 21178  00555E  C007  FFD9         	movff	i2memset@p,fsr2l
 21179  005562  C008  FFDA         	movff	i2memset@p+1,fsr2h
 21180  005566  C003  FFDF         	movff	i2memset@c,indf2
 21181  00556A  4A07               	infsnz	i2memset@p,f,c
 21182  00556C  2A08               	incf	i2memset@p+1,f,c
 21183  00556E                     i2l3258:
 21184  00556E  0605               	decf	i2memset@n,f,c
 21185  005570  A0D8               	btfss	status,0,c
 21186  005572  0606               	decf	i2memset@n+1,f,c
 21187  005574  2805               	incf	i2memset@n,w,c
 21188  005576  E1F3               	bnz	i2l7640
 21189  005578  2806               	incf	i2memset@n+1,w,c
 21190  00557A  B4D8               	btfsc	status,2,c
 21191  00557C  0012               	return	
 21192  00557E  D7EF               	goto	i2l3259
 21193  005580                     __end_ofi2_memset:
 21194                           	opt stack 0
 21195                           pclatu	equ	0xFFB
 21196                           pclath	equ	0xFFA
 21197                           tblptru	equ	0xFF8
 21198                           tblptrh	equ	0xFF7
 21199                           tblptrl	equ	0xFF6
 21200                           tablat	equ	0xFF5
 21201                           prodh	equ	0xFF4
 21202                           prodl	equ	0xFF3
 21203                           intcon	equ	0xFF2
 21204                           indf0	equ	0xFEF
 21205                           postinc0	equ	0xFEE
 21206                           fsr0h	equ	0xFEA
 21207                           fsr0l	equ	0xFE9
 21208                           wreg	equ	0xFE8
 21209                           indf1	equ	0xFE7
 21210                           postdec1	equ	0xFE5
 21211                           fsr1h	equ	0xFE2
 21212                           fsr1l	equ	0xFE1
 21213                           indf2	equ	0xFDF
 21214                           postinc2	equ	0xFDE
 21215                           postdec2	equ	0xFDD
 21216                           plusw2	equ	0xFDB
 21217                           fsr2h	equ	0xFDA
 21218                           fsr2l	equ	0xFD9
 21219                           status	equ	0xFD8
 21220                           
 21221 ;; *************** function _USBStdGetStatusHandler *****************
 21222 ;; Defined at:
 21223 ;;		line 2129 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 21224 ;; Parameters:    Size  Location     Type
 21225 ;;		None
 21226 ;; Auto vars:     Size  Location     Type
 21227 ;;  p               2    1[COMRAM] PTR struct __BDT
 21228 ;;		 -> RAM(2047), NULL(0), BDT(48), 
 21229 ;; Return value:  Size  Location     Type
 21230 ;;                  1    wreg      void 
 21231 ;; Registers used:
 21232 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21233 ;; Tracked objects:
 21234 ;;		On entry : 0/0
 21235 ;;		On exit  : 0/0
 21236 ;;		Unchanged: 0/0
 21237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21238 ;;      Params:         0       0       0       0       0       0       0       0       0
 21239 ;;      Locals:         2       0       0       0       0       0       0       0       0
 21240 ;;      Temps:          1       0       0       0       0       0       0       0       0
 21241 ;;      Totals:         3       0       0       0       0       0       0       0       0
 21242 ;;Total ram usage:        3 bytes
 21243 ;; Hardware stack levels used:    1
 21244 ;; This function calls:
 21245 ;;		Nothing
 21246 ;; This function is called by:
 21247 ;;		_USBCheckStdRequest
 21248 ;; This function uses a non-reentrant model
 21249 ;;
 21250                           
 21251                           	psect	text80
 21252  004506                     __ptext80:
 21253                           	opt stack 0
 21254  004506                     _USBStdGetStatusHandler:
 21255                           	opt stack 20
 21256                           
 21257                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
 21258                           
 21259                           ;incstack = 0
 21260  004506  0E00               	movlw	0
 21261  004508  0104               	movlb	4	; () banked
 21262  00450A  6F38               	movwf	56,b	;volatile
 21263                           
 21264                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
 21265  00450C  0E00               	movlw	0
 21266  00450E  6F39               	movwf	57,b	;volatile
 21267                           
 21268                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
 21269  004510  D035               	goto	i2l546
 21270  004512                     i2l547:
 21271                           
 21272                           ; BSR set to: 4
 21273                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
 21274  004512  8E43               	bsf	_inPipes+3,7,c	;volatile
 21275                           
 21276                           ; BSR set to: 4
 21277                           ;usb_device.c: 2145: }
 21278                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
 21279                           
 21280                           ; BSR set to: 4
 21281                           
 21282                           ; BSR set to: 4
 21283                           ;usb_device.c: 2143: {
 21284                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
 21285                           
 21286                           ;usb_device.c: 2142: if(0 == 1)
 21287  004514  0101               	movlb	1	; () banked
 21288  004516  05F9               	decf	_RemoteWakeup& (0+255),w,b	;volatile
 21289  004518  A4D8               	btfss	status,2,c
 21290  00451A  D03B               	goto	i2l550
 21291                           
 21292                           ; BSR set to: 1
 21293                           ;usb_device.c: 2148: {
 21294                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
 21295  00451C  0104               	movlb	4	; () banked
 21296  00451E  8338               	bsf	56,1,b	;volatile
 21297                           
 21298                           ; BSR set to: 4
 21299                           ;usb_device.c: 2150: }
 21300                           ;usb_device.c: 2151: break;
 21301  004520  D038               	goto	i2l550
 21302  004522                     i2l551:
 21303                           
 21304                           ; BSR set to: 4
 21305                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
 21306  004522  8E43               	bsf	_inPipes+3,7,c	;volatile
 21307                           
 21308                           ;usb_device.c: 2154: break;
 21309  004524  D036               	goto	i2l550
 21310  004526                     i2l552:
 21311                           
 21312                           ; BSR set to: 4
 21313                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
 21314  004526  8E43               	bsf	_inPipes+3,7,c	;volatile
 21315                           
 21316                           ;usb_device.c: 2160: {
 21317                           ;usb_device.c: 2161: BDT_ENTRY *p;
 21318                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
 21319  004528  BF34               	btfsc	52,7,b	;volatile
 21320  00452A  D00A               	goto	i2l553
 21321                           
 21322                           ; BSR set to: 4
 21323                           ;usb_device.c: 2164: {
 21324                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 21325  00452C  5134               	movf	52,w,b	;volatile
 21326  00452E  0B0F               	andlw	15
 21327  004530  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 21328  004532  5001               	movf	??_USBStdGetStatusHandler,w,c
 21329  004534  0D02               	mullw	2
 21330  004536  0EC8               	movlw	low _pBDTEntryOut
 21331  004538  24F3               	addwf	prodl,w,c
 21332  00453A  6ED9               	movwf	fsr2l,c
 21333  00453C  0E02               	movlw	high _pBDTEntryOut
 21334  00453E  D009               	goto	L21
 21335  004540                     i2l553:
 21336                           
 21337                           ; BSR set to: 4
 21338                           ;usb_device.c: 2167: else
 21339                           ;usb_device.c: 2168: {
 21340                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 21341                           
 21342                           ; BSR set to: 4
 21343  004540  5134               	movf	52,w,b	;volatile
 21344  004542  0B0F               	andlw	15
 21345  004544  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 21346  004546  5001               	movf	??_USBStdGetStatusHandler,w,c
 21347  004548  0D02               	mullw	2
 21348  00454A  0E46               	movlw	low _pBDTEntryIn
 21349  00454C  24F3               	addwf	prodl,w,c
 21350  00454E  6ED9               	movwf	fsr2l,c
 21351  004550  0E00               	movlw	high _pBDTEntryIn
 21352  004552                     L21:
 21353  004552  20F4               	addwfc	prodh,w,c
 21354  004554  6EDA               	movwf	fsr2h,c
 21355  004556  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 21356  00455A  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 21357                           
 21358                           ; BSR set to: 4
 21359                           ;usb_device.c: 2170: }
 21360                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 21361                           
 21362                           ; BSR set to: 4
 21363  00455E  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 21364  004562  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 21365  004566  AEDF               	btfss	indf2,7,c
 21366  004568  D014               	goto	i2l550
 21367                           
 21368                           ; BSR set to: 4
 21369  00456A  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 21370  00456E  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 21371  004572  A4DF               	btfss	indf2,2,c
 21372  004574  D00E               	goto	i2l550
 21373                           
 21374                           ; BSR set to: 4
 21375                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
 21376  004576  0E01               	movlw	1
 21377  004578  6F38               	movwf	56,b	;volatile
 21378                           
 21379                           ; BSR set to: 4
 21380                           ;usb_device.c: 2175: }
 21381                           ;usb_device.c: 2176: }
 21382                           
 21383                           ; BSR set to: 4
 21384                           ;usb_device.c: 2174: break;
 21385  00457A  D00B               	goto	i2l550
 21386  00457C                     i2l546:
 21387                           
 21388                           ; BSR set to: 4
 21389                           
 21390                           ; BSR set to: 4
 21391  00457C  5130               	movf	48,w,b	;volatile
 21392  00457E  0B1F               	andlw	31
 21393                           
 21394                           ; Switch size 1, requested type "space"
 21395                           ; Number of cases is 3, Range of values is 0 to 2
 21396                           ; switch strategies available:
 21397                           ; Name         Instructions Cycles
 21398                           ; simple_byte           10     6 (average)
 21399                           ;	Chosen strategy is simple_byte
 21400  004580  0A00               	xorlw	0	; case 0
 21401  004582  B4D8               	btfsc	status,2,c
 21402  004584  D7C6               	goto	i2l547
 21403  004586  0A01               	xorlw	1	; case 1
 21404  004588  B4D8               	btfsc	status,2,c
 21405  00458A  D7CB               	goto	i2l551
 21406  00458C  0A03               	xorlw	3	; case 2
 21407  00458E  B4D8               	btfsc	status,2,c
 21408  004590  D7CA               	goto	i2l552
 21409  004592                     i2l550:
 21410                           
 21411                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
 21412  004592  AE43               	btfss	_inPipes+3,7,c	;volatile
 21413  004594  0012               	return	
 21414                           
 21415                           ;usb_device.c: 2179: {
 21416                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 21417  004596  0E38               	movlw	56
 21418  004598  6E40               	movwf	_inPipes,c	;volatile
 21419  00459A  0E04               	movlw	4
 21420  00459C  6E41               	movwf	_inPipes+1,c	;volatile
 21421                           
 21422                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 21423  00459E  8043               	bsf	_inPipes+3,0,c	;volatile
 21424                           
 21425                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
 21426  0045A0  0E02               	movlw	2
 21427  0045A2  6E44               	movwf	_inPipes+4,c	;volatile
 21428  0045A4  0012               	return	
 21429  0045A6                     __end_of_USBStdGetStatusHandler:
 21430                           	opt stack 0
 21431                           pclatu	equ	0xFFB
 21432                           pclath	equ	0xFFA
 21433                           tblptru	equ	0xFF8
 21434                           tblptrh	equ	0xFF7
 21435                           tblptrl	equ	0xFF6
 21436                           tablat	equ	0xFF5
 21437                           prodh	equ	0xFF4
 21438                           prodl	equ	0xFF3
 21439                           intcon	equ	0xFF2
 21440                           indf0	equ	0xFEF
 21441                           postinc0	equ	0xFEE
 21442                           fsr0h	equ	0xFEA
 21443                           fsr0l	equ	0xFE9
 21444                           wreg	equ	0xFE8
 21445                           indf1	equ	0xFE7
 21446                           postdec1	equ	0xFE5
 21447                           fsr1h	equ	0xFE2
 21448                           fsr1l	equ	0xFE1
 21449                           indf2	equ	0xFDF
 21450                           postinc2	equ	0xFDE
 21451                           postdec2	equ	0xFDD
 21452                           plusw2	equ	0xFDB
 21453                           fsr2h	equ	0xFDA
 21454                           fsr2l	equ	0xFD9
 21455                           status	equ	0xFD8
 21456                           
 21457 ;; *************** function _USBStdGetDscHandler *****************
 21458 ;; Defined at:
 21459 ;;		line 2043 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 21460 ;; Parameters:    Size  Location     Type
 21461 ;;		None
 21462 ;; Auto vars:     Size  Location     Type
 21463 ;;		None
 21464 ;; Return value:  Size  Location     Type
 21465 ;;                  1    wreg      void 
 21466 ;; Registers used:
 21467 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 21468 ;; Tracked objects:
 21469 ;;		On entry : 0/0
 21470 ;;		On exit  : 0/0
 21471 ;;		Unchanged: 0/0
 21472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21473 ;;      Params:         0       0       0       0       0       0       0       0       0
 21474 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21475 ;;      Temps:          2       0       0       0       0       0       0       0       0
 21476 ;;      Totals:         2       0       0       0       0       0       0       0       0
 21477 ;;Total ram usage:        2 bytes
 21478 ;; Hardware stack levels used:    1
 21479 ;; This function calls:
 21480 ;;		Nothing
 21481 ;; This function is called by:
 21482 ;;		_USBCheckStdRequest
 21483 ;; This function uses a non-reentrant model
 21484 ;;
 21485                           
 21486                           	psect	text81
 21487  003318                     __ptext81:
 21488                           	opt stack 0
 21489  003318                     _USBStdGetDscHandler:
 21490                           	opt stack 20
 21491                           
 21492                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
 21493                           
 21494                           ;incstack = 0
 21495  003318  0E80               	movlw	128
 21496  00331A  0104               	movlb	4	; () banked
 21497  00331C  1930               	xorwf	48,w,b	;volatile
 21498  00331E  A4D8               	btfss	status,2,c
 21499  003320  0012               	return	
 21500                           
 21501                           ; BSR set to: 4
 21502                           ;usb_device.c: 2046: {
 21503                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 21504  003322  0EC0               	movlw	192
 21505  003324  6E43               	movwf	_inPipes+3,c	;volatile
 21506                           
 21507                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
 21508  003326  D079               	goto	i2l533
 21509  003328                     
 21510                           ; BSR set to: 4
 21511                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 21512                           
 21513                           ; BSR set to: 4
 21514  003328  0E1C               	movlw	low _device_dsc
 21515  00332A  6E40               	movwf	_inPipes,c	;volatile
 21516  00332C  0E7D               	movlw	high _device_dsc
 21517  00332E  6E41               	movwf	_inPipes+1,c	;volatile
 21518                           
 21519                           ; BSR set to: 4
 21520                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
 21521  003330  0E00               	movlw	0
 21522  003332  6E45               	movwf	_inPipes+5,c	;volatile
 21523  003334  0E12               	movlw	18
 21524  003336  6E44               	movwf	_inPipes+4,c	;volatile
 21525                           
 21526                           ;usb_device.c: 2058: break;
 21527  003338  0012               	return	
 21528  00333A                     
 21529                           ; BSR set to: 4
 21530                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
 21531                           
 21532                           ; BSR set to: 4
 21533  00333A  5132               	movf	50,w,b	;volatile
 21534  00333C  A4D8               	btfss	status,2,c
 21535  00333E  D03D               	goto	i2l537
 21536                           
 21537                           ; BSR set to: 4
 21538                           ;usb_device.c: 2064: {
 21539                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 21540  003340  5132               	movf	50,w,b	;volatile
 21541  003342  0D02               	mullw	2
 21542  003344  0E6F               	movlw	low _USB_CD_Ptr
 21543  003346  24F3               	addwf	prodl,w,c
 21544  003348  6EF6               	movwf	tblptrl,c
 21545  00334A  0E7C               	movlw	high _USB_CD_Ptr
 21546  00334C  20F4               	addwfc	prodh,w,c
 21547  00334E  6EF7               	movwf	tblptrh,c
 21548  003350                     	if	0	;There are less than 3 active tblptr bytes
 21549  003350                     	endif
 21550  003350  0009               	tblrd		*+
 21551  003352  CFF5 F040          	movff	tablat,_inPipes	;volatile
 21552  003356  000A               	tblrd		*-
 21553  003358  CFF5 F041          	movff	tablat,_inPipes+1	;volatile
 21554                           
 21555                           ; BSR set to: 4
 21556                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 21557  00335C  0E02               	movlw	2
 21558  00335E  2440               	addwf	_inPipes,w,c	;volatile
 21559  003360  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 21560  003362  0E00               	movlw	0
 21561  003364  2041               	addwfc	_inPipes+1,w,c	;volatile
 21562  003366  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 21563  003368  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 21564  00336C  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 21565  003370  6AF8               	clrf	tblptru,c
 21566  003372  0E07               	movlw	(high __ramtop+-1)
 21567  003374  64F7               	cpfsgt	tblptrh,c
 21568  003376  D003               	bra	i2u606_47
 21569  003378  0008               	tblrd		*
 21570  00337A  50F5               	movf	tablat,w,c
 21571  00337C  D005               	bra	i2u606_40
 21572  00337E                     i2u606_47:
 21573  00337E  CFF6 FFE9          	movff	tblptrl,fsr0l
 21574  003382  CFF7 FFEA          	movff	tblptrh,fsr0h
 21575  003386  50EF               	movf	indf0,w,c
 21576  003388                     i2u606_40:
 21577  003388  6E44               	movwf	_inPipes+4,c	;volatile
 21578                           
 21579                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 21580  00338A  0E03               	movlw	3
 21581  00338C  2440               	addwf	_inPipes,w,c	;volatile
 21582  00338E  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 21583  003390  0E00               	movlw	0
 21584  003392  2041               	addwfc	_inPipes+1,w,c	;volatile
 21585  003394  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 21586  003396  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 21587  00339A  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 21588  00339E  6AF8               	clrf	tblptru,c
 21589  0033A0  0E07               	movlw	(high __ramtop+-1)
 21590  0033A2  64F7               	cpfsgt	tblptrh,c
 21591  0033A4  D003               	bra	i2u607_47
 21592  0033A6  0008               	tblrd		*
 21593  0033A8  50F5               	movf	tablat,w,c
 21594  0033AA  D005               	bra	i2u607_40
 21595  0033AC                     i2u607_47:
 21596  0033AC  CFF6 FFE9          	movff	tblptrl,fsr0l
 21597  0033B0  CFF7 FFEA          	movff	tblptrh,fsr0h
 21598  0033B4  50EF               	movf	indf0,w,c
 21599  0033B6                     i2u607_40:
 21600  0033B6  6E45               	movwf	_inPipes+5,c	;volatile
 21601                           
 21602                           ;usb_device.c: 2076: }
 21603  0033B8  0012               	return	
 21604  0033BA                     i2l537:
 21605                           
 21606                           ;usb_device.c: 2077: else
 21607                           ;usb_device.c: 2078: {
 21608                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
 21609  0033BA  0E00               	movlw	0
 21610  0033BC  6E43               	movwf	_inPipes+3,c	;volatile
 21611                           
 21612                           ;usb_device.c: 2080: }
 21613                           ;usb_device.c: 2081: break;
 21614  0033BE  0012               	return	
 21615  0033C0                     
 21616                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
 21617  0033C0  0E03               	movlw	3
 21618  0033C2  0104               	movlb	4	; () banked
 21619  0033C4  6132               	cpfslt	50,b	;volatile
 21620  0033C6  D023               	goto	i2l540
 21621                           
 21622                           ; BSR set to: 4
 21623                           ;usb_device.c: 2087: {
 21624                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 21625  0033C8  5132               	movf	50,w,b	;volatile
 21626  0033CA  0D02               	mullw	2
 21627  0033CC  0E69               	movlw	low _USB_SD_Ptr
 21628  0033CE  24F3               	addwf	prodl,w,c
 21629  0033D0  6EF6               	movwf	tblptrl,c
 21630  0033D2  0E7C               	movlw	high _USB_SD_Ptr
 21631  0033D4  20F4               	addwfc	prodh,w,c
 21632  0033D6  6EF7               	movwf	tblptrh,c
 21633  0033D8                     	if	0	;There are less than 3 active tblptr bytes
 21634  0033D8                     	endif
 21635  0033D8  0009               	tblrd		*+
 21636  0033DA  CFF5 F040          	movff	tablat,_inPipes	;volatile
 21637  0033DE  000A               	tblrd		*-
 21638  0033E0  CFF5 F041          	movff	tablat,_inPipes+1	;volatile
 21639                           
 21640                           ; BSR set to: 4
 21641                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 21642  0033E4  C040  FFF6         	movff	_inPipes,tblptrl	;volatile
 21643  0033E8  C041  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 21644  0033EC  6AF8               	clrf	tblptru,c
 21645  0033EE  0E07               	movlw	(high __ramtop+-1)
 21646  0033F0  64F7               	cpfsgt	tblptrh,c
 21647  0033F2  D003               	bra	i2u609_47
 21648  0033F4  0008               	tblrd		*
 21649  0033F6  50F5               	movf	tablat,w,c
 21650  0033F8  D005               	bra	i2u609_40
 21651  0033FA                     i2u609_47:
 21652  0033FA  CFF6 FFE9          	movff	tblptrl,fsr0l
 21653  0033FE  CFF7 FFEA          	movff	tblptrh,fsr0h
 21654  003402  50EF               	movf	indf0,w,c
 21655  003404                     i2u609_40:
 21656  003404  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 21657  003406  5001               	movf	??_USBStdGetDscHandler,w,c
 21658  003408  6E44               	movwf	_inPipes+4,c	;volatile
 21659  00340A  6A45               	clrf	_inPipes+5,c	;volatile
 21660                           
 21661                           ;usb_device.c: 2092: }
 21662  00340C  0012               	return	
 21663  00340E                     i2l540:
 21664                           
 21665                           ;usb_device.c: 2102: else
 21666                           ;usb_device.c: 2103: {
 21667                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
 21668  00340E  0E00               	movlw	0
 21669  003410  6E43               	movwf	_inPipes+3,c	;volatile
 21670                           
 21671                           ;usb_device.c: 2105: }
 21672                           ;usb_device.c: 2106: break;
 21673  003412  0012               	return	
 21674  003414                     
 21675                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
 21676  003414  0E00               	movlw	0
 21677  003416  6E43               	movwf	_inPipes+3,c	;volatile
 21678                           
 21679                           ;usb_device.c: 2110: }
 21680                           
 21681                           ;usb_device.c: 2109: break;
 21682  003418  0012               	return	
 21683  00341A                     i2l533:
 21684  00341A  0104               	movlb	4	; () banked
 21685  00341C  5133               	movf	51,w,b	;volatile
 21686                           
 21687                           ; Switch size 1, requested type "space"
 21688                           ; Number of cases is 3, Range of values is 1 to 3
 21689                           ; switch strategies available:
 21690                           ; Name         Instructions Cycles
 21691                           ; simple_byte           10     6 (average)
 21692                           ;	Chosen strategy is simple_byte
 21693  00341E  0A01               	xorlw	1	; case 1
 21694  003420  B4D8               	btfsc	status,2,c
 21695  003422  D782               	goto	i2l534
 21696  003424  0A03               	xorlw	3	; case 2
 21697  003426  B4D8               	btfsc	status,2,c
 21698  003428  D788               	goto	i2l536
 21699  00342A  0A01               	xorlw	1	; case 3
 21700  00342C  B4D8               	btfsc	status,2,c
 21701  00342E  D7C8               	goto	i2l539
 21702  003430  D7F1               	goto	i2l542
 21703  003432                     __end_of_USBStdGetDscHandler:
 21704                           	opt stack 0
 21705                           pclatu	equ	0xFFB
 21706                           pclath	equ	0xFFA
 21707                           tblptru	equ	0xFF8
 21708                           tblptrh	equ	0xFF7
 21709                           tblptrl	equ	0xFF6
 21710                           tablat	equ	0xFF5
 21711                           prodh	equ	0xFF4
 21712                           prodl	equ	0xFF3
 21713                           intcon	equ	0xFF2
 21714                           indf0	equ	0xFEF
 21715                           postinc0	equ	0xFEE
 21716                           fsr0h	equ	0xFEA
 21717                           fsr0l	equ	0xFE9
 21718                           wreg	equ	0xFE8
 21719                           indf1	equ	0xFE7
 21720                           postdec1	equ	0xFE5
 21721                           fsr1h	equ	0xFE2
 21722                           fsr1l	equ	0xFE1
 21723                           indf2	equ	0xFDF
 21724                           postinc2	equ	0xFDE
 21725                           postdec2	equ	0xFDD
 21726                           plusw2	equ	0xFDB
 21727                           fsr2h	equ	0xFDA
 21728                           fsr2l	equ	0xFD9
 21729                           status	equ	0xFD8
 21730                           
 21731 ;; *************** function _USBStdFeatureReqHandler *****************
 21732 ;; Defined at:
 21733 ;;		line 2754 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 21734 ;; Parameters:    Size  Location     Type
 21735 ;;		None
 21736 ;; Auto vars:     Size  Location     Type
 21737 ;;  p               2   24[COMRAM] PTR struct __BDT
 21738 ;;		 -> RAM(2047), NULL(0), BDT(48), 
 21739 ;;  pUEP            2   21[COMRAM] PTR unsigned char 
 21740 ;;		 -> UEP0(1), 
 21741 ;;  current_ep_d    1   23[COMRAM] struct .
 21742 ;; Return value:  Size  Location     Type
 21743 ;;                  1    wreg      void 
 21744 ;; Registers used:
 21745 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21746 ;; Tracked objects:
 21747 ;;		On entry : 0/0
 21748 ;;		On exit  : 0/0
 21749 ;;		Unchanged: 0/0
 21750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21751 ;;      Params:         0       0       0       0       0       0       0       0       0
 21752 ;;      Locals:         5       0       0       0       0       0       0       0       0
 21753 ;;      Temps:          1       0       0       0       0       0       0       0       0
 21754 ;;      Totals:         6       0       0       0       0       0       0       0       0
 21755 ;;Total ram usage:        6 bytes
 21756 ;; Hardware stack levels used:    1
 21757 ;; Hardware stack levels required when called:    4
 21758 ;; This function calls:
 21759 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 21760 ;; This function is called by:
 21761 ;;		_USBCheckStdRequest
 21762 ;; This function uses a non-reentrant model
 21763 ;;
 21764                           
 21765                           	psect	text82
 21766  00224E                     __ptext82:
 21767                           	opt stack 0
 21768  00224E                     _USBStdFeatureReqHandler:
 21769                           	opt stack 16
 21770                           
 21771                           ;usb_device.c: 2756: BDT_ENTRY *p;
 21772                           ;usb_device.c: 2757: EP_STATUS current_ep_data;
 21773                           ;usb_device.c: 2761: unsigned char* pUEP;
 21774                           ;usb_device.c: 2799: if((SetupPkt.bFeature == 1)&&
 21775                           ;usb_device.c: 2800: (SetupPkt.Recipient == (0x00)))
 21776                           
 21777                           ;incstack = 0
 21778  00224E  0104               	movlb	4	; () banked
 21779  002250  0532               	decf	50,w,b	;volatile
 21780  002252  A4D8               	btfss	status,2,c
 21781  002254  D00F               	goto	i2l626
 21782                           
 21783                           ; BSR set to: 4
 21784  002256  5130               	movf	48,w,b	;volatile
 21785  002258  0B1F               	andlw	31
 21786  00225A  0900               	iorlw	0
 21787  00225C  A4D8               	btfss	status,2,c
 21788  00225E  D00A               	goto	i2l626
 21789                           
 21790                           ; BSR set to: 4
 21791                           ;usb_device.c: 2801: {
 21792                           ;usb_device.c: 2802: inPipes[0].info.bits.busy = 1;
 21793  002260  8E43               	bsf	_inPipes+3,7,c	;volatile
 21794                           
 21795                           ; BSR set to: 4
 21796                           ;usb_device.c: 2803: if(SetupPkt.bRequest == 3)
 21797  002262  0E03               	movlw	3
 21798  002264  1931               	xorwf	49,w,b	;volatile
 21799  002266  A4D8               	btfss	status,2,c
 21800  002268  D002               	goto	i2l625
 21801                           
 21802                           ; BSR set to: 4
 21803                           ;usb_device.c: 2804: RemoteWakeup = 1;
 21804  00226A  0E01               	movlw	1
 21805  00226C  D001               	goto	L22
 21806  00226E                     i2l625:
 21807                           
 21808                           ;usb_device.c: 2805: else
 21809                           ;usb_device.c: 2806: RemoteWakeup = 0;
 21810                           
 21811                           ; BSR set to: 1
 21812  00226E  0E00               	movlw	0
 21813  002270                     L22:
 21814  002270  0101               	movlb	1	; () banked
 21815  002272  6FF9               	movwf	_RemoteWakeup& (0+255),b	;volatile
 21816  002274                     i2l626:
 21817                           
 21818                           ;usb_device.c: 2807: }
 21819                           ;usb_device.c: 2810: if((SetupPkt.bFeature == 0)&&
 21820                           ;usb_device.c: 2811: (SetupPkt.Recipient == (0x02))&&
 21821                           ;usb_device.c: 2812: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 21822                           ;usb_device.c: 2813: (USBDeviceState == CONFIGURED_STATE))
 21823                           
 21824                           ; BSR set to: 1
 21825  002274  0104               	movlb	4	; () banked
 21826  002276  5132               	movf	50,w,b	;volatile
 21827  002278  A4D8               	btfss	status,2,c
 21828  00227A  0012               	return	
 21829                           
 21830                           ; BSR set to: 4
 21831  00227C  5130               	movf	48,w,b	;volatile
 21832  00227E  0B1F               	andlw	31
 21833  002280  0A02               	xorlw	2
 21834  002282  A4D8               	btfss	status,2,c
 21835  002284  0012               	return	
 21836                           
 21837                           ; BSR set to: 4
 21838  002286  5134               	movf	52,w,b	;volatile
 21839  002288  0B0F               	andlw	15
 21840  00228A  0900               	iorlw	0
 21841  00228C  B4D8               	btfsc	status,2,c
 21842  00228E  0012               	return	
 21843                           
 21844                           ; BSR set to: 4
 21845  002290  5134               	movf	52,w,b	;volatile
 21846  002292  0B0F               	andlw	15
 21847  002294  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21848  002296  0E03               	movlw	3
 21849  002298  6015               	cpfslt	??_USBStdFeatureReqHandler,c
 21850  00229A  0012               	return	
 21851                           
 21852                           ; BSR set to: 4
 21853  00229C  0E20               	movlw	32
 21854  00229E  1859               	xorwf	_USBDeviceState,w,c	;volatile
 21855  0022A0  A4D8               	btfss	status,2,c
 21856  0022A2  0012               	return	
 21857                           
 21858                           ; BSR set to: 4
 21859                           ;usb_device.c: 2814: {
 21860                           ;usb_device.c: 2817: inPipes[0].info.bits.busy = 1;
 21861  0022A4  8E43               	bsf	_inPipes+3,7,c	;volatile
 21862                           
 21863                           ;usb_device.c: 2820: if(SetupPkt.EPDir == 0)
 21864  0022A6  BF34               	btfsc	52,7,b	;volatile
 21865  0022A8  D019               	goto	i2l628
 21866                           
 21867                           ; BSR set to: 4
 21868                           ;usb_device.c: 2821: {
 21869                           ;usb_device.c: 2822: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 21870  0022AA  5134               	movf	52,w,b	;volatile
 21871  0022AC  0B0F               	andlw	15
 21872  0022AE  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21873  0022B0  5015               	movf	??_USBStdFeatureReqHandler,w,c
 21874  0022B2  0D02               	mullw	2
 21875  0022B4  0EC8               	movlw	low _pBDTEntryOut
 21876  0022B6  24F3               	addwf	prodl,w,c
 21877  0022B8  6ED9               	movwf	fsr2l,c
 21878  0022BA  0E02               	movlw	high _pBDTEntryOut
 21879  0022BC  20F4               	addwfc	prodh,w,c
 21880  0022BE  6EDA               	movwf	fsr2h,c
 21881  0022C0  CFDE F019          	movff	postinc2,USBStdFeatureReqHandler@p
 21882  0022C4  CFDD F01A          	movff	postdec2,USBStdFeatureReqHandler@p+1
 21883                           
 21884                           ;usb_device.c: 2823: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 21885  0022C8  5134               	movf	52,w,b	;volatile
 21886  0022CA  0B0F               	andlw	15
 21887  0022CC  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21888  0022CE  5015               	movf	??_USBStdFeatureReqHandler,w,c
 21889  0022D0  0D01               	mullw	1
 21890  0022D2  0ED2               	movlw	low _ep_data_out
 21891  0022D4  24F3               	addwf	prodl,w,c
 21892  0022D6  6ED9               	movwf	fsr2l,c
 21893  0022D8  0E02               	movlw	high _ep_data_out
 21894  0022DA  D018               	goto	L23
 21895  0022DC                     i2l628:
 21896                           
 21897                           ; BSR set to: 4
 21898                           ;usb_device.c: 2825: else
 21899                           ;usb_device.c: 2826: {
 21900                           ;usb_device.c: 2827: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 21901                           
 21902                           ; BSR set to: 4
 21903  0022DC  5134               	movf	52,w,b	;volatile
 21904  0022DE  0B0F               	andlw	15
 21905  0022E0  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21906  0022E2  5015               	movf	??_USBStdFeatureReqHandler,w,c
 21907  0022E4  0D02               	mullw	2
 21908  0022E6  0E46               	movlw	low _pBDTEntryIn
 21909  0022E8  24F3               	addwf	prodl,w,c
 21910  0022EA  6ED9               	movwf	fsr2l,c
 21911  0022EC  0E00               	movlw	high _pBDTEntryIn
 21912  0022EE  20F4               	addwfc	prodh,w,c
 21913  0022F0  6EDA               	movwf	fsr2h,c
 21914  0022F2  CFDE F019          	movff	postinc2,USBStdFeatureReqHandler@p
 21915  0022F6  CFDD F01A          	movff	postdec2,USBStdFeatureReqHandler@p+1
 21916                           
 21917                           ;usb_device.c: 2828: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 21918  0022FA  5134               	movf	52,w,b	;volatile
 21919  0022FC  0B0F               	andlw	15
 21920  0022FE  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21921  002300  5015               	movf	??_USBStdFeatureReqHandler,w,c
 21922  002302  0D01               	mullw	1
 21923  002304  0ED5               	movlw	low _ep_data_in
 21924  002306  24F3               	addwf	prodl,w,c
 21925  002308  6ED9               	movwf	fsr2l,c
 21926  00230A  0E02               	movlw	high _ep_data_in
 21927  00230C                     L23:
 21928  00230C  20F4               	addwfc	prodh,w,c
 21929  00230E  6EDA               	movwf	fsr2h,c
 21930  002310  50DF               	movf	indf2,w,c
 21931  002312  6E18               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 21932                           
 21933                           ; BSR set to: 4
 21934                           ;usb_device.c: 2829: }
 21935                           ;usb_device.c: 2835: if(current_ep_data.bits.ping_pong_state == 0)
 21936                           
 21937                           ; BSR set to: 4
 21938  002314  B018               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 21939  002316  D006               	goto	i2l630
 21940                           
 21941                           ; BSR set to: 4
 21942                           ;usb_device.c: 2836: {
 21943                           ;usb_device.c: 2837: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 21944  002318  0EFB               	movlw	251
 21945  00231A  1419               	andwf	USBStdFeatureReqHandler@p,w,c
 21946  00231C  6E19               	movwf	USBStdFeatureReqHandler@p,c
 21947  00231E  0EFF               	movlw	255
 21948  002320  141A               	andwf	USBStdFeatureReqHandler@p+1,w,c
 21949  002322  D004               	goto	L24
 21950  002324                     i2l630:
 21951                           
 21952                           ; BSR set to: 4
 21953                           ;usb_device.c: 2839: else
 21954                           ;usb_device.c: 2840: {
 21955                           ;usb_device.c: 2841: p = (BDT_ENTRY*)(((uintptr_t)p) | 0x0004);
 21956                           
 21957                           ; BSR set to: 4
 21958  002324  0E04               	movlw	4
 21959  002326  1019               	iorwf	USBStdFeatureReqHandler@p,w,c
 21960  002328  6E19               	movwf	USBStdFeatureReqHandler@p,c
 21961  00232A  501A               	movf	USBStdFeatureReqHandler@p+1,w,c
 21962  00232C                     L24:
 21963  00232C  6E1A               	movwf	USBStdFeatureReqHandler@p+1,c
 21964                           
 21965                           ; BSR set to: 4
 21966                           ;usb_device.c: 2842: }
 21967                           ;usb_device.c: 2847: if(SetupPkt.EPDir == 0)
 21968                           
 21969                           ; BSR set to: 4
 21970  00232E  BF34               	btfsc	52,7,b	;volatile
 21971  002330  D00A               	goto	i2l632
 21972                           
 21973                           ; BSR set to: 4
 21974                           ;usb_device.c: 2848: {
 21975                           ;usb_device.c: 2849: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 21976  002332  5134               	movf	52,w,b	;volatile
 21977  002334  0B0F               	andlw	15
 21978  002336  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21979  002338  5015               	movf	??_USBStdFeatureReqHandler,w,c
 21980  00233A  0D02               	mullw	2
 21981  00233C  0EC8               	movlw	low _pBDTEntryOut
 21982  00233E  24F3               	addwf	prodl,w,c
 21983  002340  6ED9               	movwf	fsr2l,c
 21984  002342  0E02               	movlw	high _pBDTEntryOut
 21985  002344  D009               	goto	L25
 21986  002346                     i2l632:
 21987                           
 21988                           ; BSR set to: 4
 21989                           ;usb_device.c: 2851: else
 21990                           ;usb_device.c: 2852: {
 21991                           ;usb_device.c: 2853: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 21992                           
 21993                           ; BSR set to: 4
 21994  002346  5134               	movf	52,w,b	;volatile
 21995  002348  0B0F               	andlw	15
 21996  00234A  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21997  00234C  5015               	movf	??_USBStdFeatureReqHandler,w,c
 21998  00234E  0D02               	mullw	2
 21999  002350  0E46               	movlw	low _pBDTEntryIn
 22000  002352  24F3               	addwf	prodl,w,c
 22001  002354  6ED9               	movwf	fsr2l,c
 22002  002356  0E00               	movlw	high _pBDTEntryIn
 22003  002358                     L25:
 22004  002358  20F4               	addwfc	prodh,w,c
 22005  00235A  6EDA               	movwf	fsr2h,c
 22006  00235C  C019  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 22007  002360  C01A  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 22008                           
 22009                           ; BSR set to: 4
 22010                           ;usb_device.c: 2854: }
 22011                           ;usb_device.c: 2857: if(SetupPkt.bRequest == 3)
 22012                           
 22013                           ; BSR set to: 4
 22014  002364  0E03               	movlw	3
 22015  002366  1931               	xorwf	49,w,b	;volatile
 22016  002368  A4D8               	btfss	status,2,c
 22017  00236A  D02D               	goto	i2l634
 22018                           
 22019                           ; BSR set to: 4
 22020                           ;usb_device.c: 2858: {
 22021                           ;usb_device.c: 2859: if(p->STAT.UOWN == 1)
 22022  00236C  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 22023  002370  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 22024  002374  AEDF               	btfss	indf2,7,c
 22025  002376  D01A               	goto	i2l637
 22026                           
 22027                           ; BSR set to: 4
 22028                           ;usb_device.c: 2860: {
 22029                           ;usb_device.c: 2863: if(SetupPkt.EPDir == 0)
 22030  002378  BF34               	btfsc	52,7,b	;volatile
 22031  00237A  D00A               	goto	i2l636
 22032                           
 22033                           ; BSR set to: 4
 22034                           ;usb_device.c: 2864: {
 22035                           ;usb_device.c: 2865: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 22036  00237C  5134               	movf	52,w,b	;volatile
 22037  00237E  0B0F               	andlw	15
 22038  002380  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 22039  002382  5015               	movf	??_USBStdFeatureReqHandler,w,c
 22040  002384  0D01               	mullw	1
 22041  002386  0ED2               	movlw	low _ep_data_out
 22042  002388  24F3               	addwf	prodl,w,c
 22043  00238A  6ED9               	movwf	fsr2l,c
 22044  00238C  0E02               	movlw	high _ep_data_out
 22045  00238E  D00A               	goto	L26
 22046  002390                     i2l636:
 22047                           
 22048                           ;usb_device.c: 2867: else
 22049                           ;usb_device.c: 2868: {
 22050                           ;usb_device.c: 2869: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 22051                           
 22052                           ; BSR set to: 2
 22053  002390  0104               	movlb	4	; () banked
 22054  002392  5134               	movf	52,w,b	;volatile
 22055  002394  0B0F               	andlw	15
 22056  002396  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 22057  002398  5015               	movf	??_USBStdFeatureReqHandler,w,c
 22058  00239A  0D01               	mullw	1
 22059  00239C  0ED5               	movlw	low _ep_data_in
 22060  00239E  24F3               	addwf	prodl,w,c
 22061  0023A0  6ED9               	movwf	fsr2l,c
 22062  0023A2  0E02               	movlw	high _ep_data_in
 22063  0023A4                     L26:
 22064  0023A4  20F4               	addwfc	prodh,w,c
 22065  0023A6  6EDA               	movwf	fsr2h,c
 22066  0023A8  0102               	movlb	2	; () banked
 22067  0023AA  82DF               	bsf	indf2,1,c
 22068  0023AC                     i2l637:
 22069                           
 22070                           ;usb_device.c: 2870: }
 22071                           ;usb_device.c: 2871: }
 22072                           ;usb_device.c: 2874: p->STAT.Val |= 0x04;
 22073                           
 22074                           ; BSR set to: 2
 22075                           
 22076                           ; BSR set to: 2
 22077  0023AC  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 22078  0023B0  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 22079  0023B4  0E00               	movlw	0
 22080  0023B6  84DB               	bsf	plusw2,2,c
 22081                           
 22082                           ;usb_device.c: 2875: p->STAT.Val |= 0x80;
 22083  0023B8  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 22084  0023BC  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 22085  0023C0  0E00               	movlw	0
 22086  0023C2  8EDB               	bsf	plusw2,7,c
 22087                           
 22088                           ;usb_device.c: 2876: }
 22089  0023C4  0012               	return	
 22090  0023C6                     i2l634:
 22091                           
 22092                           ;usb_device.c: 2877: else
 22093                           ;usb_device.c: 2878: {
 22094                           ;usb_device.c: 2882: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 22095  0023C6  0E04               	movlw	4
 22096  0023C8  1819               	xorwf	USBStdFeatureReqHandler@p,w,c
 22097  0023CA  6E19               	movwf	USBStdFeatureReqHandler@p,c
 22098  0023CC  501A               	movf	USBStdFeatureReqHandler@p+1,w,c
 22099  0023CE  6E1A               	movwf	USBStdFeatureReqHandler@p+1,c
 22100                           
 22101                           ;usb_device.c: 2884: if(p->STAT.UOWN == 1)
 22102  0023D0  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 22103  0023D4  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 22104  0023D8  AEDF               	btfss	indf2,7,c
 22105  0023DA  D01B               	goto	i2l639
 22106                           
 22107                           ;usb_device.c: 2885: {
 22108                           ;usb_device.c: 2888: p->STAT.Val &= (~0x80);
 22109  0023DC  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 22110  0023E0  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 22111  0023E4  0E7F               	movlw	127
 22112  0023E6  16DF               	andwf	indf2,f,c
 22113                           
 22114                           ;usb_device.c: 2889: p->STAT.Val |= 0x40;
 22115  0023E8  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 22116  0023EC  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 22117  0023F0  0E00               	movlw	0
 22118  0023F2  8CDB               	bsf	plusw2,6,c
 22119                           
 22120                           ;usb_device.c: 2890: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 22121  0023F4  0E00               	movlw	0
 22122  0023F6  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 22123  0023F8  0E05               	movlw	5
 22124  0023FA  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 22125  0023FC  C019  F00F         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 22126  002400  C01A  F010         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 22127  002404  0E00               	movlw	0
 22128  002406  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 22129  002408  0E02               	movlw	2
 22130  00240A  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 22131  00240C  ECA8  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 22132                           
 22133                           ;usb_device.c: 2891: }
 22134  002410  D006               	goto	i2l640
 22135  002412                     i2l639:
 22136                           
 22137                           ;usb_device.c: 2892: else
 22138                           ;usb_device.c: 2893: {
 22139                           ;usb_device.c: 2895: p->STAT.Val |= 0x40;
 22140  002412  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 22141  002416  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 22142  00241A  0E00               	movlw	0
 22143  00241C  8CDB               	bsf	plusw2,6,c
 22144  00241E                     i2l640:
 22145                           
 22146                           ;usb_device.c: 2896: }
 22147                           ;usb_device.c: 2900: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 22148  00241E  0E04               	movlw	4
 22149  002420  1819               	xorwf	USBStdFeatureReqHandler@p,w,c
 22150  002422  6E19               	movwf	USBStdFeatureReqHandler@p,c
 22151  002424  501A               	movf	USBStdFeatureReqHandler@p+1,w,c
 22152  002426  6E1A               	movwf	USBStdFeatureReqHandler@p+1,c
 22153                           
 22154                           ;usb_device.c: 2906: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 22155  002428  B218               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 22156  00242A  D006               	goto	i2u631_40
 22157  00242C  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 22158  002430  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 22159  002434  AEDF               	btfss	indf2,7,c
 22160  002436  D030               	goto	i2l641
 22161  002438                     i2u631_40:
 22162                           
 22163                           ;usb_device.c: 2907: {
 22164                           ;usb_device.c: 2908: if(SetupPkt.EPDir == 0)
 22165  002438  0104               	movlb	4	; () banked
 22166  00243A  BF34               	btfsc	52,7,b	;volatile
 22167  00243C  D00A               	goto	i2l644
 22168                           
 22169                           ; BSR set to: 4
 22170                           ;usb_device.c: 2909: {
 22171                           ;usb_device.c: 2910: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 22172  00243E  5134               	movf	52,w,b	;volatile
 22173  002440  0B0F               	andlw	15
 22174  002442  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 22175  002444  5015               	movf	??_USBStdFeatureReqHandler,w,c
 22176  002446  0D01               	mullw	1
 22177  002448  0ED2               	movlw	low _ep_data_out
 22178  00244A  24F3               	addwf	prodl,w,c
 22179  00244C  6ED9               	movwf	fsr2l,c
 22180  00244E  0E02               	movlw	high _ep_data_out
 22181  002450  D00A               	goto	L27
 22182  002452                     i2l644:
 22183                           
 22184                           ;usb_device.c: 2912: else
 22185                           ;usb_device.c: 2913: {
 22186                           ;usb_device.c: 2914: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 22187                           
 22188                           ; BSR set to: 2
 22189  002452  0104               	movlb	4	; () banked
 22190  002454  5134               	movf	52,w,b	;volatile
 22191  002456  0B0F               	andlw	15
 22192  002458  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 22193  00245A  5015               	movf	??_USBStdFeatureReqHandler,w,c
 22194  00245C  0D01               	mullw	1
 22195  00245E  0ED5               	movlw	low _ep_data_in
 22196  002460  24F3               	addwf	prodl,w,c
 22197  002462  6ED9               	movwf	fsr2l,c
 22198  002464  0E02               	movlw	high _ep_data_in
 22199  002466                     L27:
 22200  002466  20F4               	addwfc	prodh,w,c
 22201  002468  6EDA               	movwf	fsr2h,c
 22202  00246A  0102               	movlb	2	; () banked
 22203  00246C  92DF               	bcf	indf2,1,c
 22204                           
 22205                           ; BSR set to: 2
 22206                           ;usb_device.c: 2915: }
 22207                           ;usb_device.c: 2917: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 22208                           
 22209                           ; BSR set to: 2
 22210  00246E  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 22211  002472  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 22212  002476  0E3B               	movlw	59
 22213  002478  16DF               	andwf	indf2,f,c
 22214                           
 22215                           ; BSR set to: 2
 22216                           ;usb_device.c: 2920: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 22217  00247A  0E00               	movlw	0
 22218  00247C  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 22219  00247E  0E05               	movlw	5
 22220  002480  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 22221  002482  C019  F00F         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 22222  002486  C01A  F010         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 22223  00248A  0E00               	movlw	0
 22224  00248C  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 22225  00248E  0E02               	movlw	2
 22226  002490  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 22227  002492  ECA8  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 22228                           
 22229                           ;usb_device.c: 2921: }
 22230  002496  D006               	goto	i2l646
 22231  002498                     i2l641:
 22232                           
 22233                           ;usb_device.c: 2922: else
 22234                           ;usb_device.c: 2923: {
 22235                           ;usb_device.c: 2925: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 22236  002498  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 22237  00249C  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 22238  0024A0  0E3B               	movlw	59
 22239  0024A2  16DF               	andwf	indf2,f,c
 22240  0024A4                     i2l646:
 22241                           
 22242                           ;usb_device.c: 2926: }
 22243                           ;usb_device.c: 2973: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 22244  0024A4  0104               	movlb	4	; () banked
 22245  0024A6  5134               	movf	52,w,b	;volatile
 22246  0024A8  0B0F               	andlw	15
 22247  0024AA  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 22248  0024AC  5015               	movf	??_USBStdFeatureReqHandler,w,c
 22249  0024AE  0D01               	mullw	1
 22250  0024B0  0E70               	movlw	112
 22251  0024B2  24F3               	addwf	prodl,w,c
 22252  0024B4  6E16               	movwf	USBStdFeatureReqHandler@pUEP,c
 22253  0024B6  0E0F               	movlw	15
 22254  0024B8  20F4               	addwfc	prodh,w,c
 22255  0024BA  6E17               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 22256                           
 22257                           ; BSR set to: 4
 22258                           ;usb_device.c: 2977: *pUEP &= ~0x0001;
 22259  0024BC  C016  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 22260  0024C0  C017  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 22261  0024C4  0EFE               	movlw	254
 22262  0024C6  16DF               	andwf	indf2,f,c
 22263                           
 22264                           ; BSR set to: 4
 22265  0024C8  0012               	return	
 22266  0024CA                     __end_of_USBStdFeatureReqHandler:
 22267                           	opt stack 0
 22268                           pclatu	equ	0xFFB
 22269                           pclath	equ	0xFFA
 22270                           tblptru	equ	0xFF8
 22271                           tblptrh	equ	0xFF7
 22272                           tblptrl	equ	0xFF6
 22273                           tablat	equ	0xFF5
 22274                           prodh	equ	0xFF4
 22275                           prodl	equ	0xFF3
 22276                           intcon	equ	0xFF2
 22277                           indf0	equ	0xFEF
 22278                           postinc0	equ	0xFEE
 22279                           fsr0h	equ	0xFEA
 22280                           fsr0l	equ	0xFE9
 22281                           wreg	equ	0xFE8
 22282                           indf1	equ	0xFE7
 22283                           postdec1	equ	0xFE5
 22284                           fsr1h	equ	0xFE2
 22285                           fsr1l	equ	0xFE1
 22286                           indf2	equ	0xFDF
 22287                           postinc2	equ	0xFDE
 22288                           postdec2	equ	0xFDD
 22289                           plusw2	equ	0xFDB
 22290                           fsr2h	equ	0xFDA
 22291                           fsr2l	equ	0xFD9
 22292                           status	equ	0xFD8
 22293                           
 22294 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 22295 ;; Defined at:
 22296 ;;		line 29 in file "usb/usb_events.c"
 22297 ;; Parameters:    Size  Location     Type
 22298 ;;  event           2   12[COMRAM] enum E4179
 22299 ;;  pdata           2   14[COMRAM] PTR void 
 22300 ;;		 -> RAM(2047), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 22301 ;;		 -> BDT(48), 
 22302 ;;  size            2   16[COMRAM] unsigned int 
 22303 ;; Auto vars:     Size  Location     Type
 22304 ;;		None
 22305 ;; Return value:  Size  Location     Type
 22306 ;;                  1    wreg      unsigned char 
 22307 ;; Registers used:
 22308 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22309 ;; Tracked objects:
 22310 ;;		On entry : 0/0
 22311 ;;		On exit  : 0/0
 22312 ;;		Unchanged: 0/0
 22313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22314 ;;      Params:         6       0       0       0       0       0       0       0       0
 22315 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22316 ;;      Temps:          2       0       0       0       0       0       0       0       0
 22317 ;;      Totals:         8       0       0       0       0       0       0       0       0
 22318 ;;Total ram usage:        8 bytes
 22319 ;; Hardware stack levels used:    1
 22320 ;; Hardware stack levels required when called:    3
 22321 ;; This function calls:
 22322 ;;		_CDCInitEP
 22323 ;;		_USBCheckCDCRequest
 22324 ;; This function is called by:
 22325 ;;		_USBDeviceTasks
 22326 ;;		_USBStdSetCfgHandler
 22327 ;;		_USBSuspend
 22328 ;;		_USBWakeFromSuspend
 22329 ;;		_USBCtrlTrfSetupHandler
 22330 ;;		_USBCheckStdRequest
 22331 ;;		_USBStdFeatureReqHandler
 22332 ;; This function uses a non-reentrant model
 22333 ;;
 22334                           
 22335                           	psect	text83
 22336  004F50                     __ptext83:
 22337                           	opt stack 0
 22338  004F50                     _USER_USB_CALLBACK_EVENT_HANDLER:
 22339                           	opt stack 20
 22340                           
 22341                           ;usb_events.c: 31: switch( (int) event )
 22342                           
 22343                           ;incstack = 0
 22344  004F50  D006               	goto	i2l245
 22345  004F52                     
 22346                           ;usb_events.c: 56: CDCInitEP();
 22347  004F52  ECE8  F026         	call	_CDCInitEP	;wreg free
 22348                           
 22349                           ;usb_events.c: 60: break;
 22350                           
 22351                           ;usb_events.c: 59: case EVENT_SET_DESCRIPTOR:
 22352                           
 22353                           ;usb_events.c: 57: break;
 22354  004F56  0012               	return	
 22355  004F58                     
 22356                           ;usb_events.c: 65: USBCheckCDCRequest();
 22357  004F58  ECE1  F021         	call	_USBCheckCDCRequest	;wreg free
 22358                           
 22359                           ;usb_events.c: 76: }
 22360                           
 22361                           ;usb_events.c: 75: break;
 22362                           
 22363                           ;usb_events.c: 74: default:
 22364                           
 22365                           ;usb_events.c: 72: break;
 22366                           
 22367                           ;usb_events.c: 71: case EVENT_TRANSFER_TERMINATED:
 22368                           
 22369                           ;usb_events.c: 69: break;
 22370                           
 22371                           ;usb_events.c: 68: case EVENT_BUS_ERROR:
 22372                           
 22373                           ;usb_events.c: 66: break;
 22374  004F5C  0012               	return	
 22375  004F5E                     i2l245:
 22376  004F5E  C00D  F013         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 22377  004F62  C00E  F014         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 22378                           
 22379                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 22380                           ; Switch size 1, requested type "space"
 22381                           ; Number of cases is 2, Range of values is 0 to 127
 22382                           ; switch strategies available:
 22383                           ; Name         Instructions Cycles
 22384                           ; simple_byte            7     4 (average)
 22385                           ;	Chosen strategy is simple_byte
 22386  004F66  5014               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 22387  004F68  0A00               	xorlw	0	; case 0
 22388  004F6A  B4D8               	btfsc	status,2,c
 22389  004F6C  D004               	goto	i2l11314
 22390  004F6E  0A7F               	xorlw	127	; case 127
 22391  004F70  A4D8               	btfss	status,2,c
 22392  004F72  0012               	return	
 22393  004F74  D018               	goto	i2l11316
 22394  004F76                     i2l11314:
 22395                           
 22396                           ; Switch size 1, requested type "space"
 22397                           ; Number of cases is 8, Range of values is 1 to 117
 22398                           ; switch strategies available:
 22399                           ; Name         Instructions Cycles
 22400                           ; simple_byte           25    13 (average)
 22401                           ;	Chosen strategy is simple_byte
 22402  004F76  5013               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 22403  004F78  0A01               	xorlw	1	; case 1
 22404  004F7A  B4D8               	btfsc	status,2,c
 22405  004F7C  D7EA               	goto	i2l251
 22406  004F7E  0A03               	xorlw	3	; case 2
 22407  004F80  B4D8               	btfsc	status,2,c
 22408  004F82  0012               	return	
 22409  004F84  0A01               	xorlw	1	; case 3
 22410  004F86  B4D8               	btfsc	status,2,c
 22411  004F88  D7E7               	goto	i2l253
 22412  004F8A  0A06               	xorlw	6	; case 5
 22413  004F8C  B4D8               	btfsc	status,2,c
 22414  004F8E  0012               	return	
 22415  004F90  0A77               	xorlw	119	; case 114
 22416  004F92  B4D8               	btfsc	status,2,c
 22417  004F94  0012               	return	
 22418  004F96  0A01               	xorlw	1	; case 115
 22419  004F98  B4D8               	btfsc	status,2,c
 22420  004F9A  0012               	return	
 22421  004F9C  0A07               	xorlw	7	; case 116
 22422  004F9E  B4D8               	btfsc	status,2,c
 22423  004FA0  0012               	return	
 22424  004FA2  0A01               	xorlw	1	; case 117
 22425  004FA4  0012               	return	
 22426  004FA6                     i2l11316:
 22427                           
 22428                           ; Switch size 1, requested type "space"
 22429                           ; Number of cases is 1, Range of values is 255 to 255
 22430                           ; switch strategies available:
 22431                           ; Name         Instructions Cycles
 22432                           ; simple_byte            4     3 (average)
 22433                           ;	Chosen strategy is simple_byte
 22434  004FA6  5013               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 22435  004FA8  0AFF               	xorlw	255	; case 255
 22436  004FAA  0012               	return	
 22437  004FAC                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 22438                           	opt stack 0
 22439                           pclatu	equ	0xFFB
 22440                           pclath	equ	0xFFA
 22441                           tblptru	equ	0xFF8
 22442                           tblptrh	equ	0xFF7
 22443                           tblptrl	equ	0xFF6
 22444                           tablat	equ	0xFF5
 22445                           prodh	equ	0xFF4
 22446                           prodl	equ	0xFF3
 22447                           intcon	equ	0xFF2
 22448                           indf0	equ	0xFEF
 22449                           postinc0	equ	0xFEE
 22450                           fsr0h	equ	0xFEA
 22451                           fsr0l	equ	0xFE9
 22452                           wreg	equ	0xFE8
 22453                           indf1	equ	0xFE7
 22454                           postdec1	equ	0xFE5
 22455                           fsr1h	equ	0xFE2
 22456                           fsr1l	equ	0xFE1
 22457                           indf2	equ	0xFDF
 22458                           postinc2	equ	0xFDE
 22459                           postdec2	equ	0xFDD
 22460                           plusw2	equ	0xFDB
 22461                           fsr2h	equ	0xFDA
 22462                           fsr2l	equ	0xFD9
 22463                           status	equ	0xFD8
 22464                           
 22465 ;; *************** function _USBCheckCDCRequest *****************
 22466 ;; Defined at:
 22467 ;;		line 147 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device_cdc.c"
 22468 ;; Parameters:    Size  Location     Type
 22469 ;;		None
 22470 ;; Auto vars:     Size  Location     Type
 22471 ;;		None
 22472 ;; Return value:  Size  Location     Type
 22473 ;;                  1    wreg      void 
 22474 ;; Registers used:
 22475 ;;		wreg, status,2, status,0
 22476 ;; Tracked objects:
 22477 ;;		On entry : 0/0
 22478 ;;		On exit  : 0/0
 22479 ;;		Unchanged: 0/0
 22480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22481 ;;      Params:         0       0       0       0       0       0       0       0       0
 22482 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22483 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22484 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22485 ;;Total ram usage:        0 bytes
 22486 ;; Hardware stack levels used:    1
 22487 ;; This function calls:
 22488 ;;		Nothing
 22489 ;; This function is called by:
 22490 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 22491 ;; This function uses a non-reentrant model
 22492 ;;
 22493                           
 22494                           	psect	text84
 22495  0043C2                     __ptext84:
 22496                           	opt stack 0
 22497  0043C2                     _USBCheckCDCRequest:
 22498                           	opt stack 22
 22499                           
 22500                           ;usb_device_cdc.c: 152: if(SetupPkt.Recipient != (0x01)) return;
 22501                           
 22502                           ;incstack = 0
 22503  0043C2  0104               	movlb	4	; () banked
 22504  0043C4  5130               	movf	48,w,b	;volatile
 22505  0043C6  0B1F               	andlw	31
 22506  0043C8  06E8               	decf	wreg,f,c
 22507  0043CA  A4D8               	btfss	status,2,c
 22508  0043CC  0012               	return	
 22509                           
 22510                           ; BSR set to: 4
 22511                           ;usb_device_cdc.c: 157: if(SetupPkt.RequestType != (0x20>>5)) return;
 22512                           
 22513                           ; BSR set to: 4
 22514                           
 22515                           ; BSR set to: 4
 22516  0043CE  3930               	swapf	48,w,b	;volatile
 22517  0043D0  32E8               	rrcf	wreg,f,c
 22518  0043D2  0B03               	andlw	3
 22519  0043D4  06E8               	decf	wreg,f,c
 22520  0043D6  A4D8               	btfss	status,2,c
 22521  0043D8  0012               	return	
 22522                           
 22523                           ; BSR set to: 4
 22524                           ;usb_device_cdc.c: 163: if((SetupPkt.bIntfID != 0x0)&&
 22525                           ;usb_device_cdc.c: 164: (SetupPkt.bIntfID != 0x01)) return;
 22526                           
 22527                           ; BSR set to: 4
 22528                           
 22529                           ; BSR set to: 4
 22530  0043DA  5134               	movf	52,w,b	;volatile
 22531  0043DC  B4D8               	btfsc	status,2,c
 22532  0043DE  D032               	goto	i2l802
 22533                           
 22534                           ; BSR set to: 4
 22535  0043E0  0534               	decf	52,w,b	;volatile
 22536  0043E2  A4D8               	btfss	status,2,c
 22537  0043E4  0012               	return	
 22538  0043E6  D02E               	goto	i2l802
 22539  0043E8                     
 22540                           ; BSR set to: 4
 22541                           ;usb_device_cdc.c: 171: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 22542                           
 22543                           ; BSR set to: 4
 22544  0043E8  0EB4               	movlw	low _dummy_encapsulated_cmd_response
 22545  0043EA  6E40               	movwf	_inPipes,c	;volatile
 22546  0043EC  0E03               	movlw	high _dummy_encapsulated_cmd_response
 22547  0043EE  6E41               	movwf	_inPipes+1,c	;volatile
 22548                           
 22549                           ; BSR set to: 4
 22550                           ;usb_device_cdc.c: 172: inPipes[0].wCount.Val = 0x08;
 22551  0043F0  0E00               	movlw	0
 22552  0043F2  6E45               	movwf	_inPipes+5,c	;volatile
 22553  0043F4  0E08               	movlw	8
 22554  0043F6  6E44               	movwf	_inPipes+4,c	;volatile
 22555                           
 22556                           ; BSR set to: 4
 22557                           ;usb_device_cdc.c: 173: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 22558  0043F8  8043               	bsf	_inPipes+3,0,c	;volatile
 22559                           
 22560                           ; BSR set to: 4
 22561                           ;usb_device_cdc.c: 174: inPipes[0].info.bits.busy = 1;
 22562  0043FA  8E43               	bsf	_inPipes+3,7,c	;volatile
 22563                           
 22564                           ;usb_device_cdc.c: 175: break;
 22565  0043FC  0012               	return	
 22566  0043FE                     
 22567                           ; BSR set to: 4
 22568                           ;usb_device_cdc.c: 178: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 22569                           
 22570                           ; BSR set to: 4
 22571  0043FE  0EB4               	movlw	low _dummy_encapsulated_cmd_response
 22572  004400  6E40               	movwf	_inPipes,c	;volatile
 22573  004402  0E03               	movlw	high _dummy_encapsulated_cmd_response
 22574  004404  6E41               	movwf	_inPipes+1,c	;volatile
 22575                           
 22576                           ; BSR set to: 4
 22577                           ;usb_device_cdc.c: 179: inPipes[0].info.bits.busy = 1;
 22578  004406  8E43               	bsf	_inPipes+3,7,c	;volatile
 22579                           
 22580                           ;usb_device_cdc.c: 180: break;
 22581  004408  0012               	return	
 22582  00440A                     i2l806:
 22583                           
 22584                           ; BSR set to: 4
 22585                           ;usb_device_cdc.c: 185: outPipes[0].wCount.Val = SetupPkt.wLength;
 22586  00440A  C436 F03C          	movff	1078,_outPipes+4	;volatile
 22587  00440E  C437 F03D          	movff	1079,_outPipes+5	;volatile
 22588                           
 22589                           ; BSR set to: 4
 22590                           ;usb_device_cdc.c: 186: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 22591  004412  0EBC               	movlw	low _line_coding
 22592  004414  6E38               	movwf	_outPipes,c	;volatile
 22593  004416  0E03               	movlw	high _line_coding
 22594  004418  6E39               	movwf	_outPipes+1,c	;volatile
 22595                           
 22596                           ;usb_device_cdc.c: 187: outPipes[0].pFunc = (0);
 22597  00441A  0E00               	movlw	0
 22598  00441C  6E3E               	movwf	_outPipes+6,c	;volatile
 22599  00441E  0E00               	movlw	0
 22600  004420  6E3F               	movwf	_outPipes+7,c	;volatile
 22601                           
 22602                           ; BSR set to: 4
 22603                           ;usb_device_cdc.c: 188: outPipes[0].info.bits.busy = 1;
 22604  004422  8E3B               	bsf	_outPipes+3,7,c	;volatile
 22605                           
 22606                           ;usb_device_cdc.c: 189: break;
 22607  004424  0012               	return	
 22608  004426                     
 22609                           ; BSR set to: 4
 22610                           ;usb_device_cdc.c: 192: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 22611                           
 22612                           ; BSR set to: 4
 22613  004426  0EBC               	movlw	low _line_coding
 22614  004428  6E40               	movwf	_inPipes,c	;volatile
 22615  00442A  0E03               	movlw	high _line_coding
 22616  00442C  6E41               	movwf	_inPipes+1,c	;volatile
 22617                           
 22618                           ; BSR set to: 4
 22619  00442E  0E00               	movlw	0
 22620  004430  6E45               	movwf	_inPipes+5,c	;volatile
 22621  004432  0E07               	movlw	7
 22622  004434  6E44               	movwf	_inPipes+4,c	;volatile
 22623                           
 22624                           ; BSR set to: 4
 22625  004436  0EC1               	movlw	193
 22626  004438  6E43               	movwf	_inPipes+3,c	;volatile
 22627                           
 22628                           ;usb_device_cdc.c: 196: break;
 22629  00443A  0012               	return	
 22630  00443C                     i2l808:
 22631                           
 22632                           ; BSR set to: 4
 22633                           ;usb_device_cdc.c: 199: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 22634  00443C  C432 F2E5          	movff	1074,_control_signal_bitmap	;volatile
 22635                           
 22636                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
 22637  004440  8E43               	bsf	_inPipes+3,7,c	;volatile
 22638                           
 22639                           ; BSR set to: 4
 22640                           ;usb_device_cdc.c: 258: }
 22641                           
 22642                           ; BSR set to: 4
 22643                           ;usb_device_cdc.c: 257: break;
 22644                           
 22645                           ;usb_device_cdc.c: 256: default:
 22646                           
 22647                           ;usb_device_cdc.c: 232: break;
 22648  004442  0012               	return	
 22649  004444                     i2l802:
 22650                           
 22651                           ; BSR set to: 4
 22652                           
 22653                           ; BSR set to: 4
 22654  004444  5131               	movf	49,w,b	;volatile
 22655                           
 22656                           ; Switch size 1, requested type "space"
 22657                           ; Number of cases is 5, Range of values is 0 to 34
 22658                           ; switch strategies available:
 22659                           ; Name         Instructions Cycles
 22660                           ; simple_byte           16     9 (average)
 22661                           ;	Chosen strategy is simple_byte
 22662  004446  0A00               	xorlw	0	; case 0
 22663  004448  B4D8               	btfsc	status,2,c
 22664  00444A  D7CE               	goto	i2l803
 22665  00444C  0A01               	xorlw	1	; case 1
 22666  00444E  B4D8               	btfsc	status,2,c
 22667  004450  D7D6               	goto	i2l805
 22668  004452  0A21               	xorlw	33	; case 32
 22669  004454  B4D8               	btfsc	status,2,c
 22670  004456  D7D9               	goto	i2l806
 22671  004458  0A01               	xorlw	1	; case 33
 22672  00445A  B4D8               	btfsc	status,2,c
 22673  00445C  D7E4               	goto	i2l807
 22674  00445E  0A03               	xorlw	3	; case 34
 22675  004460  A4D8               	btfss	status,2,c
 22676  004462  0012               	return	
 22677  004464  D7EB               	goto	i2l808
 22678  004466                     __end_of_USBCheckCDCRequest:
 22679                           	opt stack 0
 22680                           pclatu	equ	0xFFB
 22681                           pclath	equ	0xFFA
 22682                           tblptru	equ	0xFF8
 22683                           tblptrh	equ	0xFF7
 22684                           tblptrl	equ	0xFF6
 22685                           tablat	equ	0xFF5
 22686                           prodh	equ	0xFF4
 22687                           prodl	equ	0xFF3
 22688                           intcon	equ	0xFF2
 22689                           indf0	equ	0xFEF
 22690                           postinc0	equ	0xFEE
 22691                           fsr0h	equ	0xFEA
 22692                           fsr0l	equ	0xFE9
 22693                           wreg	equ	0xFE8
 22694                           indf1	equ	0xFE7
 22695                           postdec1	equ	0xFE5
 22696                           fsr1h	equ	0xFE2
 22697                           fsr1l	equ	0xFE1
 22698                           indf2	equ	0xFDF
 22699                           postinc2	equ	0xFDE
 22700                           postdec2	equ	0xFDD
 22701                           plusw2	equ	0xFDB
 22702                           fsr2h	equ	0xFDA
 22703                           fsr2l	equ	0xFD9
 22704                           status	equ	0xFD8
 22705                           
 22706 ;; *************** function _CDCInitEP *****************
 22707 ;; Defined at:
 22708 ;;		line 294 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device_cdc.c"
 22709 ;; Parameters:    Size  Location     Type
 22710 ;;		None
 22711 ;; Auto vars:     Size  Location     Type
 22712 ;;		None
 22713 ;; Return value:  Size  Location     Type
 22714 ;;                  1    wreg      void 
 22715 ;; Registers used:
 22716 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22717 ;; Tracked objects:
 22718 ;;		On entry : 0/0
 22719 ;;		On exit  : 0/0
 22720 ;;		Unchanged: 0/0
 22721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22722 ;;      Params:         0       0       0       0       0       0       0       0       0
 22723 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22724 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22725 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22726 ;;Total ram usage:        0 bytes
 22727 ;; Hardware stack levels used:    1
 22728 ;; Hardware stack levels required when called:    2
 22729 ;; This function calls:
 22730 ;;		_USBEnableEndpoint
 22731 ;;		i2_USBTransferOnePacket
 22732 ;; This function is called by:
 22733 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 22734 ;; This function uses a non-reentrant model
 22735 ;;
 22736                           
 22737                           	psect	text85
 22738  004DD0                     __ptext85:
 22739                           	opt stack 0
 22740  004DD0                     _CDCInitEP:
 22741                           	opt stack 20
 22742                           
 22743                           ;usb_device_cdc.c: 297: line_coding.dwDTERate = 19200;
 22744                           
 22745                           ; BSR set to: 4
 22746                           ;incstack = 0
 22747  004DD0  0E00               	movlw	0
 22748  004DD2  0103               	movlb	3	; () banked
 22749  004DD4  6FBC               	movwf	_line_coding& (0+255),b
 22750  004DD6  0E4B               	movlw	75
 22751  004DD8  6FBD               	movwf	(_line_coding+1)& (0+255),b
 22752  004DDA  0E00               	movlw	0
 22753  004DDC  6FBE               	movwf	(_line_coding+2)& (0+255),b
 22754  004DDE  0E00               	movlw	0
 22755  004DE0  6FBF               	movwf	(_line_coding+3)& (0+255),b
 22756                           
 22757                           ;usb_device_cdc.c: 298: line_coding.bCharFormat = 0x00;
 22758  004DE2  0E00               	movlw	0
 22759  004DE4  6FC0               	movwf	(_line_coding+4)& (0+255),b
 22760                           
 22761                           ;usb_device_cdc.c: 299: line_coding.bParityType = 0x00;
 22762  004DE6  0E00               	movlw	0
 22763  004DE8  6FC1               	movwf	(_line_coding+5)& (0+255),b
 22764                           
 22765                           ;usb_device_cdc.c: 300: line_coding.bDataBits = 0x08;
 22766  004DEA  0E08               	movlw	8
 22767  004DEC  6FC2               	movwf	(_line_coding+6)& (0+255),b
 22768                           
 22769                           ;usb_device_cdc.c: 302: cdc_rx_len = 0;
 22770  004DEE  0E00               	movlw	0
 22771  004DF0  6E53               	movwf	_cdc_rx_len,c
 22772                           
 22773                           ; BSR set to: 3
 22774                           ;usb_device_cdc.c: 315: USBEnableEndpoint(1,0x02|0x10|0x08);
 22775  004DF2  0E1A               	movlw	26
 22776  004DF4  6E09               	movwf	USBEnableEndpoint@options,c
 22777  004DF6  0E01               	movlw	1
 22778  004DF8  ECA3  F029         	call	_USBEnableEndpoint
 22779                           
 22780                           ;usb_device_cdc.c: 316: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 22781  004DFC  0E1E               	movlw	30
 22782  004DFE  6E09               	movwf	USBEnableEndpoint@options,c
 22783  004E00  0E02               	movlw	2
 22784  004E02  ECA3  F029         	call	_USBEnableEndpoint
 22785                           
 22786                           ;usb_device_cdc.c: 318: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 22787  004E06  0E00               	movlw	0
 22788  004E08  6E01               	movwf	i2USBTransferOnePacket@dir,c
 22789  004E0A  0E40               	movlw	64
 22790  004E0C  6E02               	movwf	i2USBTransferOnePacket@data,c
 22791  004E0E  0E05               	movlw	5
 22792  004E10  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 22793  004E12  0E40               	movlw	64
 22794  004E14  6E04               	movwf	i2USBTransferOnePacket@len,c
 22795  004E16  0E02               	movlw	2
 22796  004E18  ECA4  F01B         	call	i2_USBTransferOnePacket
 22797  004E1C  C001  F1F3         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 22798  004E20  C002  F1F4         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 22799                           
 22800                           ;usb_device_cdc.c: 319: CDCDataInHandle = (0);
 22801  004E24  0E00               	movlw	0
 22802  004E26  0102               	movlb	2	; () banked
 22803  004E28  6FD8               	movwf	_CDCDataInHandle& (0+255),b
 22804  004E2A  0E00               	movlw	0
 22805  004E2C  6FD9               	movwf	(_CDCDataInHandle+1)& (0+255),b
 22806                           
 22807                           ; BSR set to: 2
 22808                           ;usb_device_cdc.c: 346: cdc_trf_state = 0;
 22809  004E2E  0E00               	movlw	0
 22810  004E30  6FE7               	movwf	_cdc_trf_state& (0+255),b
 22811                           
 22812                           ; BSR set to: 2
 22813  004E32  0012               	return		;funcret
 22814  004E34                     __end_of_CDCInitEP:
 22815                           	opt stack 0
 22816                           pclatu	equ	0xFFB
 22817                           pclath	equ	0xFFA
 22818                           tblptru	equ	0xFF8
 22819                           tblptrh	equ	0xFF7
 22820                           tblptrl	equ	0xFF6
 22821                           tablat	equ	0xFF5
 22822                           prodh	equ	0xFF4
 22823                           prodl	equ	0xFF3
 22824                           intcon	equ	0xFF2
 22825                           indf0	equ	0xFEF
 22826                           postinc0	equ	0xFEE
 22827                           fsr0h	equ	0xFEA
 22828                           fsr0l	equ	0xFE9
 22829                           wreg	equ	0xFE8
 22830                           indf1	equ	0xFE7
 22831                           postdec1	equ	0xFE5
 22832                           fsr1h	equ	0xFE2
 22833                           fsr1l	equ	0xFE1
 22834                           indf2	equ	0xFDF
 22835                           postinc2	equ	0xFDE
 22836                           postdec2	equ	0xFDD
 22837                           plusw2	equ	0xFDB
 22838                           fsr2h	equ	0xFDA
 22839                           fsr2l	equ	0xFD9
 22840                           status	equ	0xFD8
 22841                           
 22842 ;; *************** function i2_USBTransferOnePacket *****************
 22843 ;; Defined at:
 22844 ;;		line 995 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 22845 ;; Parameters:    Size  Location     Type
 22846 ;;  ep              1    wreg     unsigned char 
 22847 ;;  dir             1    0[COMRAM] unsigned char 
 22848 ;;  data            2    1[COMRAM] PTR unsigned char 
 22849 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 22850 ;;  len             1    3[COMRAM] unsigned char 
 22851 ;; Auto vars:     Size  Location     Type
 22852 ;;  ep              1    8[COMRAM] unsigned char 
 22853 ;;  USBTransferO    2    9[COMRAM] PTR volatile struct __BD
 22854 ;;		 -> RAM(2047), NULL(0), BDT(48), 
 22855 ;; Return value:  Size  Location     Type
 22856 ;;                  2    0[COMRAM] PTR void 
 22857 ;; Registers used:
 22858 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22859 ;; Tracked objects:
 22860 ;;		On entry : 0/0
 22861 ;;		On exit  : 0/0
 22862 ;;		Unchanged: 0/0
 22863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22864 ;;      Params:         4       0       0       0       0       0       0       0       0
 22865 ;;      Locals:         3       0       0       0       0       0       0       0       0
 22866 ;;      Temps:          4       0       0       0       0       0       0       0       0
 22867 ;;      Totals:        11       0       0       0       0       0       0       0       0
 22868 ;;Total ram usage:       11 bytes
 22869 ;; Hardware stack levels used:    1
 22870 ;; This function calls:
 22871 ;;		Nothing
 22872 ;; This function is called by:
 22873 ;;		_CDCInitEP
 22874 ;; This function uses a non-reentrant model
 22875 ;;
 22876                           
 22877                           	psect	text86
 22878  003748                     __ptext86:
 22879                           	opt stack 0
 22880  003748                     i2_USBTransferOnePacket:
 22881                           	opt stack 21
 22882                           
 22883                           ; BSR set to: 2
 22884                           ;incstack = 0
 22885                           ;i2USBTransferOnePacket@ep stored from wreg
 22886  003748  6E09               	movwf	i2USBTransferOnePacket@ep,c
 22887                           
 22888                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 22889                           ;usb_device.c: 1000: if(dir != 0)
 22890  00374A  5001               	movf	i2USBTransferOnePacket@dir,w,c
 22891  00374C  B4D8               	btfsc	status,2,c
 22892  00374E  D007               	goto	i2l437
 22893                           
 22894                           ;usb_device.c: 1001: {
 22895                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 22896  003750  5009               	movf	i2USBTransferOnePacket@ep,w,c
 22897  003752  0D02               	mullw	2
 22898  003754  0E46               	movlw	low _pBDTEntryIn
 22899  003756  24F3               	addwf	prodl,w,c
 22900  003758  6ED9               	movwf	fsr2l,c
 22901  00375A  0E00               	movlw	high _pBDTEntryIn
 22902  00375C  D006               	goto	L28
 22903  00375E                     i2l437:
 22904                           
 22905                           ;usb_device.c: 1005: else
 22906                           ;usb_device.c: 1006: {
 22907                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 22908  00375E  5009               	movf	i2USBTransferOnePacket@ep,w,c
 22909  003760  0D02               	mullw	2
 22910  003762  0EC8               	movlw	low _pBDTEntryOut
 22911  003764  24F3               	addwf	prodl,w,c
 22912  003766  6ED9               	movwf	fsr2l,c
 22913  003768  0E02               	movlw	high _pBDTEntryOut
 22914  00376A                     L28:
 22915  00376A  20F4               	addwfc	prodh,w,c
 22916  00376C  6EDA               	movwf	fsr2h,c
 22917  00376E  CFDE F00A          	movff	postinc2,i2USBTransferOnePacket@handle
 22918  003772  CFDD F00B          	movff	postdec2,i2USBTransferOnePacket@handle+1
 22919                           
 22920                           ;usb_device.c: 1009: }
 22921                           ;usb_device.c: 1013: if(handle == 0)
 22922  003776  500A               	movf	i2USBTransferOnePacket@handle,w,c
 22923  003778  100B               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 22924  00377A  A4D8               	btfss	status,2,c
 22925  00377C  D005               	goto	i2l439
 22926                           
 22927                           ;usb_device.c: 1014: {
 22928                           ;usb_device.c: 1015: return 0;
 22929  00377E  0E00               	movlw	0
 22930  003780  6E01               	movwf	?i2_USBTransferOnePacket,c
 22931  003782  0E00               	movlw	0
 22932  003784  6E02               	movwf	?i2_USBTransferOnePacket+1,c
 22933  003786  0012               	return	
 22934  003788                     i2l439:
 22935                           
 22936                           ;usb_device.c: 1016: }
 22937                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 22938  003788  EE20 F002          	lfsr	2,2
 22939  00378C  500A               	movf	i2USBTransferOnePacket@handle,w,c
 22940  00378E  26D9               	addwf	fsr2l,f,c
 22941  003790  500B               	movf	i2USBTransferOnePacket@handle+1,w,c
 22942  003792  22DA               	addwfc	fsr2h,f,c
 22943  003794  C002  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 22944  003798  C003  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 22945                           
 22946                           ;usb_device.c: 1030: handle->CNT = len;
 22947  00379C  EE20 F001          	lfsr	2,1
 22948  0037A0  500A               	movf	i2USBTransferOnePacket@handle,w,c
 22949  0037A2  26D9               	addwf	fsr2l,f,c
 22950  0037A4  500B               	movf	i2USBTransferOnePacket@handle+1,w,c
 22951  0037A6  22DA               	addwfc	fsr2h,f,c
 22952  0037A8  C004  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 22953                           
 22954                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 22955  0037AC  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 22956  0037B0  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 22957  0037B4  0E40               	movlw	64
 22958  0037B6  16DF               	andwf	indf2,f,c
 22959                           
 22960                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 22961  0037B8  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 22962  0037BC  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 22963  0037C0  0E00               	movlw	0
 22964  0037C2  86DB               	bsf	plusw2,3,c
 22965                           
 22966                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 22967  0037C4  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 22968  0037C8  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 22969  0037CC  0E00               	movlw	0
 22970  0037CE  8EDB               	bsf	plusw2,7,c
 22971                           
 22972                           ;usb_device.c: 1036: if(dir != 0)
 22973  0037D0  5001               	movf	i2USBTransferOnePacket@dir,w,c
 22974  0037D2  B4D8               	btfsc	status,2,c
 22975  0037D4  D018               	goto	i2l441
 22976                           
 22977                           ;usb_device.c: 1037: {
 22978                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
 22979  0037D6  5009               	movf	i2USBTransferOnePacket@ep,w,c
 22980  0037D8  0D02               	mullw	2
 22981  0037DA  0E46               	movlw	low _pBDTEntryIn
 22982  0037DC  24F3               	addwf	prodl,w,c
 22983  0037DE  6ED9               	movwf	fsr2l,c
 22984  0037E0  0E00               	movlw	high _pBDTEntryIn
 22985  0037E2  20F4               	addwfc	prodh,w,c
 22986  0037E4  6EDA               	movwf	fsr2h,c
 22987  0037E6  CFDE F005          	movff	postinc2,??i2_USBTransferOnePacket
 22988  0037EA  CFDD F006          	movff	postdec2,??i2_USBTransferOnePacket+1
 22989  0037EE  0E04               	movlw	4
 22990  0037F0  1805               	xorwf	??i2_USBTransferOnePacket,w,c
 22991  0037F2  6E07               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 22992  0037F4  5006               	movf	??i2_USBTransferOnePacket+1,w,c
 22993  0037F6  6E08               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 22994  0037F8  5009               	movf	i2USBTransferOnePacket@ep,w,c
 22995  0037FA  0D02               	mullw	2
 22996  0037FC  0E46               	movlw	low _pBDTEntryIn
 22997  0037FE  24F3               	addwf	prodl,w,c
 22998  003800  6ED9               	movwf	fsr2l,c
 22999  003802  0E00               	movlw	high _pBDTEntryIn
 23000  003804  D017               	goto	L29
 23001  003806                     i2l441:
 23002                           
 23003                           ;usb_device.c: 1041: else
 23004                           ;usb_device.c: 1042: {
 23005                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
 23006  003806  5009               	movf	i2USBTransferOnePacket@ep,w,c
 23007  003808  0D02               	mullw	2
 23008  00380A  0EC8               	movlw	low _pBDTEntryOut
 23009  00380C  24F3               	addwf	prodl,w,c
 23010  00380E  6ED9               	movwf	fsr2l,c
 23011  003810  0E02               	movlw	high _pBDTEntryOut
 23012  003812  20F4               	addwfc	prodh,w,c
 23013  003814  6EDA               	movwf	fsr2h,c
 23014  003816  CFDE F005          	movff	postinc2,??i2_USBTransferOnePacket
 23015  00381A  CFDD F006          	movff	postdec2,??i2_USBTransferOnePacket+1
 23016  00381E  0E04               	movlw	4
 23017  003820  1805               	xorwf	??i2_USBTransferOnePacket,w,c
 23018  003822  6E07               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 23019  003824  5006               	movf	??i2_USBTransferOnePacket+1,w,c
 23020  003826  6E08               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 23021  003828  5009               	movf	i2USBTransferOnePacket@ep,w,c
 23022  00382A  0D02               	mullw	2
 23023  00382C  0EC8               	movlw	low _pBDTEntryOut
 23024  00382E  24F3               	addwf	prodl,w,c
 23025  003830  6ED9               	movwf	fsr2l,c
 23026  003832  0E02               	movlw	high _pBDTEntryOut
 23027  003834                     L29:
 23028  003834  20F4               	addwfc	prodh,w,c
 23029  003836  6EDA               	movwf	fsr2h,c
 23030  003838  C007  FFDE         	movff	??i2_USBTransferOnePacket+2,postinc2
 23031  00383C  C008  FFDD         	movff	??i2_USBTransferOnePacket+3,postdec2
 23032                           
 23033                           ;usb_device.c: 1045: }
 23034                           ;usb_device.c: 1046: return (void*)handle;
 23035  003840  C00A  F001         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 23036  003844  C00B  F002         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 23037  003848  0012               	return	
 23038  00384A                     __end_ofi2_USBTransferOnePacket:
 23039                           	opt stack 0
 23040                           pclatu	equ	0xFFB
 23041                           pclath	equ	0xFFA
 23042                           tblptru	equ	0xFF8
 23043                           tblptrh	equ	0xFF7
 23044                           tblptrl	equ	0xFF6
 23045                           tablat	equ	0xFF5
 23046                           prodh	equ	0xFF4
 23047                           prodl	equ	0xFF3
 23048                           intcon	equ	0xFF2
 23049                           indf0	equ	0xFEF
 23050                           postinc0	equ	0xFEE
 23051                           fsr0h	equ	0xFEA
 23052                           fsr0l	equ	0xFE9
 23053                           wreg	equ	0xFE8
 23054                           indf1	equ	0xFE7
 23055                           postdec1	equ	0xFE5
 23056                           fsr1h	equ	0xFE2
 23057                           fsr1l	equ	0xFE1
 23058                           indf2	equ	0xFDF
 23059                           postinc2	equ	0xFDE
 23060                           postdec2	equ	0xFDD
 23061                           plusw2	equ	0xFDB
 23062                           fsr2h	equ	0xFDA
 23063                           fsr2l	equ	0xFD9
 23064                           status	equ	0xFD8
 23065                           
 23066 ;; *************** function _USBEnableEndpoint *****************
 23067 ;; Defined at:
 23068 ;;		line 878 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 23069 ;; Parameters:    Size  Location     Type
 23070 ;;  ep              1    wreg     unsigned char 
 23071 ;;  options         1    8[COMRAM] unsigned char 
 23072 ;; Auto vars:     Size  Location     Type
 23073 ;;  ep              1   11[COMRAM] unsigned char 
 23074 ;;  p               2    9[COMRAM] PTR unsigned char 
 23075 ;;		 -> UEP0(1), 
 23076 ;; Return value:  Size  Location     Type
 23077 ;;                  1    wreg      void 
 23078 ;; Registers used:
 23079 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23080 ;; Tracked objects:
 23081 ;;		On entry : 0/0
 23082 ;;		On exit  : 0/0
 23083 ;;		Unchanged: 0/0
 23084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23085 ;;      Params:         1       0       0       0       0       0       0       0       0
 23086 ;;      Locals:         3       0       0       0       0       0       0       0       0
 23087 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23088 ;;      Totals:         4       0       0       0       0       0       0       0       0
 23089 ;;Total ram usage:        4 bytes
 23090 ;; Hardware stack levels used:    1
 23091 ;; Hardware stack levels required when called:    1
 23092 ;; This function calls:
 23093 ;;		_USBConfigureEndpoint
 23094 ;; This function is called by:
 23095 ;;		_CDCInitEP
 23096 ;; This function uses a non-reentrant model
 23097 ;;
 23098                           
 23099                           	psect	text87
 23100  005346                     __ptext87:
 23101                           	opt stack 0
 23102  005346                     _USBEnableEndpoint:
 23103                           	opt stack 20
 23104                           
 23105                           ;incstack = 0
 23106                           ;USBEnableEndpoint@ep stored from wreg
 23107  005346  6E0C               	movwf	USBEnableEndpoint@ep,c
 23108                           
 23109                           ;usb_device.c: 880: unsigned char* p;
 23110                           ;usb_device.c: 884: if(options & 0x04)
 23111  005348  A409               	btfss	USBEnableEndpoint@options,2,c
 23112  00534A  D005               	goto	i2l432
 23113                           
 23114                           ;usb_device.c: 885: {
 23115                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 23116  00534C  0E00               	movlw	0
 23117  00534E  6E01               	movwf	USBConfigureEndpoint@direction,c
 23118  005350  500C               	movf	USBEnableEndpoint@ep,w,c
 23119  005352  EC6A  F023         	call	_USBConfigureEndpoint
 23120  005356                     i2l432:
 23121                           
 23122                           ;usb_device.c: 887: }
 23123                           ;usb_device.c: 888: if(options & 0x02)
 23124  005356  A209               	btfss	USBEnableEndpoint@options,1,c
 23125  005358  D005               	goto	i2l433
 23126                           
 23127                           ;usb_device.c: 889: {
 23128                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 23129  00535A  0E01               	movlw	1
 23130  00535C  6E01               	movwf	USBConfigureEndpoint@direction,c
 23131  00535E  500C               	movf	USBEnableEndpoint@ep,w,c
 23132  005360  EC6A  F023         	call	_USBConfigureEndpoint
 23133  005364                     i2l433:
 23134                           
 23135                           ;usb_device.c: 891: }
 23136                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 23137  005364  500C               	movf	USBEnableEndpoint@ep,w,c
 23138  005366  0D01               	mullw	1
 23139  005368  0E70               	movlw	112
 23140  00536A  24F3               	addwf	prodl,w,c
 23141  00536C  6E0A               	movwf	USBEnableEndpoint@p,c
 23142  00536E  0E0F               	movlw	15
 23143  005370  20F4               	addwfc	prodh,w,c
 23144  005372  6E0B               	movwf	USBEnableEndpoint@p+1,c
 23145                           
 23146                           ;usb_device.c: 901: *p = options;
 23147  005374  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 23148  005378  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 23149  00537C  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 23150  005380  0012               	return		;funcret
 23151  005382                     __end_of_USBEnableEndpoint:
 23152                           	opt stack 0
 23153                           pclatu	equ	0xFFB
 23154                           pclath	equ	0xFFA
 23155                           tblptru	equ	0xFF8
 23156                           tblptrh	equ	0xFF7
 23157                           tblptrl	equ	0xFF6
 23158                           tablat	equ	0xFF5
 23159                           prodh	equ	0xFF4
 23160                           prodl	equ	0xFF3
 23161                           intcon	equ	0xFF2
 23162                           indf0	equ	0xFEF
 23163                           postinc0	equ	0xFEE
 23164                           fsr0h	equ	0xFEA
 23165                           fsr0l	equ	0xFE9
 23166                           wreg	equ	0xFE8
 23167                           indf1	equ	0xFE7
 23168                           postdec1	equ	0xFE5
 23169                           fsr1h	equ	0xFE2
 23170                           fsr1l	equ	0xFE1
 23171                           indf2	equ	0xFDF
 23172                           postinc2	equ	0xFDE
 23173                           postdec2	equ	0xFDD
 23174                           plusw2	equ	0xFDB
 23175                           fsr2h	equ	0xFDA
 23176                           fsr2l	equ	0xFD9
 23177                           status	equ	0xFD8
 23178                           
 23179 ;; *************** function _USBConfigureEndpoint *****************
 23180 ;; Defined at:
 23181 ;;		line 1543 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 23182 ;; Parameters:    Size  Location     Type
 23183 ;;  EPNum           1    wreg     unsigned char 
 23184 ;;  direction       1    0[COMRAM] unsigned char 
 23185 ;; Auto vars:     Size  Location     Type
 23186 ;;  EPNum           1    5[COMRAM] unsigned char 
 23187 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 23188 ;;		 -> BDT(48), 
 23189 ;; Return value:  Size  Location     Type
 23190 ;;                  1    wreg      void 
 23191 ;; Registers used:
 23192 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 23193 ;; Tracked objects:
 23194 ;;		On entry : 0/0
 23195 ;;		On exit  : 0/0
 23196 ;;		Unchanged: 0/0
 23197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23198 ;;      Params:         1       0       0       0       0       0       0       0       0
 23199 ;;      Locals:         3       0       0       0       0       0       0       0       0
 23200 ;;      Temps:          4       0       0       0       0       0       0       0       0
 23201 ;;      Totals:         8       0       0       0       0       0       0       0       0
 23202 ;;Total ram usage:        8 bytes
 23203 ;; Hardware stack levels used:    1
 23204 ;; This function calls:
 23205 ;;		Nothing
 23206 ;; This function is called by:
 23207 ;;		_USBEnableEndpoint
 23208 ;; This function uses a non-reentrant model
 23209 ;;
 23210                           
 23211                           	psect	text88
 23212  0046D4                     __ptext88:
 23213                           	opt stack 0
 23214  0046D4                     _USBConfigureEndpoint:
 23215                           	opt stack 20
 23216                           
 23217                           ;incstack = 0
 23218                           ;USBConfigureEndpoint@EPNum stored from wreg
 23219  0046D4  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 23220                           
 23221                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
 23222                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
 23223  0046D6  0E00               	movlw	0
 23224  0046D8  6E07               	movwf	USBConfigureEndpoint@handle,c
 23225  0046DA  0E04               	movlw	4
 23226  0046DC  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 23227                           
 23228                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
 23229  0046DE  5001               	movf	USBConfigureEndpoint@direction,w,c
 23230  0046E0  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 23231  0046E2  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 23232  0046E4  90D8               	bcf	status,0,c
 23233  0046E6  3602               	rlcf	??_USBConfigureEndpoint,f,c
 23234  0046E8  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 23235  0046EA  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 23236  0046EC  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 23237  0046EE  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 23238  0046F0  90D8               	bcf	status,0,c
 23239  0046F2  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 23240  0046F4  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 23241  0046F6  90D8               	bcf	status,0,c
 23242  0046F8  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 23243  0046FA  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 23244  0046FC  5002               	movf	??_USBConfigureEndpoint,w,c
 23245  0046FE  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 23246  004700  5003               	movf	??_USBConfigureEndpoint+1,w,c
 23247  004702  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 23248  004704  90D8               	bcf	status,0,c
 23249  004706  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 23250  004708  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 23251  00470A  90D8               	bcf	status,0,c
 23252  00470C  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 23253  00470E  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 23254  004710  5004               	movf	??_USBConfigureEndpoint+2,w,c
 23255  004712  2607               	addwf	USBConfigureEndpoint@handle,f,c
 23256  004714  5005               	movf	??_USBConfigureEndpoint+3,w,c
 23257  004716  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 23258                           
 23259                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
 23260  004718  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 23261  00471C  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 23262  004720  9EDF               	bcf	indf2,7,c
 23263                           
 23264                           ;usb_device.c: 1557: if(direction == 0)
 23265  004722  5001               	movf	USBConfigureEndpoint@direction,w,c
 23266  004724  A4D8               	btfss	status,2,c
 23267  004726  D007               	goto	i2l479
 23268                           
 23269                           ;usb_device.c: 1558: {
 23270                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
 23271  004728  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 23272  00472A  0D02               	mullw	2
 23273  00472C  0EC8               	movlw	low _pBDTEntryOut
 23274  00472E  24F3               	addwf	prodl,w,c
 23275  004730  6ED9               	movwf	fsr2l,c
 23276  004732  0E02               	movlw	high _pBDTEntryOut
 23277  004734  D006               	goto	L30
 23278  004736                     i2l479:
 23279                           
 23280                           ;usb_device.c: 1561: else
 23281                           ;usb_device.c: 1562: {
 23282                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
 23283  004736  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 23284  004738  0D02               	mullw	2
 23285  00473A  0E46               	movlw	low _pBDTEntryIn
 23286  00473C  24F3               	addwf	prodl,w,c
 23287  00473E  6ED9               	movwf	fsr2l,c
 23288  004740  0E00               	movlw	high _pBDTEntryIn
 23289  004742                     L30:
 23290  004742  20F4               	addwfc	prodh,w,c
 23291  004744  6EDA               	movwf	fsr2h,c
 23292  004746  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 23293  00474A  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 23294                           
 23295                           ;usb_device.c: 1564: }
 23296                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
 23297  00474E  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 23298  004752  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 23299  004756  9CDF               	bcf	indf2,6,c
 23300                           
 23301                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
 23302  004758  EE20 F004          	lfsr	2,4
 23303  00475C  5007               	movf	USBConfigureEndpoint@handle,w,c
 23304  00475E  26D9               	addwf	fsr2l,f,c
 23305  004760  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 23306  004762  22DA               	addwfc	fsr2h,f,c
 23307  004764  8CDF               	bsf	indf2,6,c
 23308  004766  0012               	return		;funcret
 23309  004768                     __end_of_USBConfigureEndpoint:
 23310                           	opt stack 0
 23311                           pclatu	equ	0xFFB
 23312                           pclath	equ	0xFFA
 23313                           tblptru	equ	0xFF8
 23314                           tblptrh	equ	0xFF7
 23315                           tblptrl	equ	0xFF6
 23316                           tablat	equ	0xFF5
 23317                           prodh	equ	0xFF4
 23318                           prodl	equ	0xFF3
 23319                           intcon	equ	0xFF2
 23320                           indf0	equ	0xFEF
 23321                           postinc0	equ	0xFEE
 23322                           fsr0h	equ	0xFEA
 23323                           fsr0l	equ	0xFE9
 23324                           wreg	equ	0xFE8
 23325                           indf1	equ	0xFE7
 23326                           postdec1	equ	0xFE5
 23327                           fsr1h	equ	0xFE2
 23328                           fsr1l	equ	0xFE1
 23329                           indf2	equ	0xFDF
 23330                           postinc2	equ	0xFDE
 23331                           postdec2	equ	0xFDD
 23332                           plusw2	equ	0xFDB
 23333                           fsr2h	equ	0xFDA
 23334                           fsr2l	equ	0xFD9
 23335                           status	equ	0xFD8
 23336                           
 23337 ;; *************** function _USBCtrlTrfOutHandler *****************
 23338 ;; Defined at:
 23339 ;;		line 2538 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 23340 ;; Parameters:    Size  Location     Type
 23341 ;;		None
 23342 ;; Auto vars:     Size  Location     Type
 23343 ;;		None
 23344 ;; Return value:  Size  Location     Type
 23345 ;;                  1    wreg      void 
 23346 ;; Registers used:
 23347 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23348 ;; Tracked objects:
 23349 ;;		On entry : 0/0
 23350 ;;		On exit  : 0/0
 23351 ;;		Unchanged: 0/0
 23352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23353 ;;      Params:         0       0       0       0       0       0       0       0       0
 23354 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23355 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23356 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23357 ;;Total ram usage:        0 bytes
 23358 ;; Hardware stack levels used:    1
 23359 ;; Hardware stack levels required when called:    2
 23360 ;; This function calls:
 23361 ;;		_USBCtrlTrfRxService
 23362 ;; This function is called by:
 23363 ;;		_USBCtrlEPService
 23364 ;; This function uses a non-reentrant model
 23365 ;;
 23366                           
 23367                           	psect	text89
 23368  004EF2                     __ptext89:
 23369                           	opt stack 0
 23370  004EF2                     _USBCtrlTrfOutHandler:
 23371                           	opt stack 20
 23372                           
 23373                           ;usb_device.c: 2540: if(controlTransferState == 2)
 23374                           
 23375                           ;incstack = 0
 23376  004EF2  0E02               	movlw	2
 23377  004EF4  1857               	xorwf	_controlTransferState,w,c	;volatile
 23378  004EF6  A4D8               	btfss	status,2,c
 23379  004EF8  D003               	goto	i2l585
 23380                           
 23381                           ;usb_device.c: 2541: {
 23382                           ;usb_device.c: 2542: USBCtrlTrfRxService();
 23383  004EFA  EC19  F01A         	call	_USBCtrlTrfRxService	;wreg free
 23384                           
 23385                           ;usb_device.c: 2543: }
 23386  004EFE  0012               	return	
 23387  004F00                     i2l585:
 23388                           
 23389                           ;usb_device.c: 2544: else
 23390                           ;usb_device.c: 2545: {
 23391                           ;usb_device.c: 2548: controlTransferState = 0;
 23392  004F00  0E00               	movlw	0
 23393  004F02  6E57               	movwf	_controlTransferState,c	;volatile
 23394                           
 23395                           ;usb_device.c: 2555: if(BothEP0OutUOWNsSet == 0)
 23396  004F04  0101               	movlb	1	; () banked
 23397  004F06  51F7               	movf	_BothEP0OutUOWNsSet& (0+255),w,b	;volatile
 23398  004F08  A4D8               	btfss	status,2,c
 23399  004F0A  D01F               	goto	i2l587
 23400                           
 23401                           ; BSR set to: 1
 23402                           ;usb_device.c: 2556: {
 23403                           ;usb_device.c: 2557: pBDTEntryEP0OutNext->CNT = 8;
 23404  004F0C  EE20 F001          	lfsr	2,1
 23405  004F10  504E               	movf	_pBDTEntryEP0OutNext,w,c
 23406  004F12  26D9               	addwf	fsr2l,f,c
 23407  004F14  504F               	movf	_pBDTEntryEP0OutNext+1,w,c
 23408  004F16  22DA               	addwfc	fsr2h,f,c
 23409  004F18  0E08               	movlw	8
 23410  004F1A  6EDF               	movwf	indf2,c
 23411                           
 23412                           ;usb_device.c: 2558: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 23413  004F1C  EE20 F002          	lfsr	2,2
 23414  004F20  504E               	movf	_pBDTEntryEP0OutNext,w,c
 23415  004F22  26D9               	addwf	fsr2l,f,c
 23416  004F24  504F               	movf	_pBDTEntryEP0OutNext+1,w,c
 23417  004F26  22DA               	addwfc	fsr2h,f,c
 23418  004F28  0E30               	movlw	48
 23419  004F2A  6EDE               	movwf	postinc2,c
 23420  004F2C  0E04               	movlw	4
 23421  004F2E  6EDD               	movwf	postdec2,c
 23422                           
 23423                           ; BSR set to: 1
 23424                           ;usb_device.c: 2559: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 23425  004F30  C04E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23426  004F34  C04F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23427  004F38  0E0C               	movlw	12
 23428  004F3A  6EDF               	movwf	indf2,c
 23429                           
 23430                           ; BSR set to: 1
 23431                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 23432  004F3C  C04E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23433  004F40  C04F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23434  004F44  0E00               	movlw	0
 23435  004F46  8EDB               	bsf	plusw2,7,c
 23436                           
 23437                           ;usb_device.c: 2561: }
 23438  004F48  0012               	return	
 23439  004F4A                     i2l587:
 23440                           
 23441                           ; BSR set to: 1
 23442                           ;usb_device.c: 2562: else
 23443                           ;usb_device.c: 2563: {
 23444                           ;usb_device.c: 2564: BothEP0OutUOWNsSet = 0;
 23445                           
 23446                           ; BSR set to: 1
 23447  004F4A  0E00               	movlw	0
 23448  004F4C  6FF7               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 23449                           
 23450                           ; BSR set to: 1
 23451  004F4E  0012               	return	
 23452  004F50                     __end_of_USBCtrlTrfOutHandler:
 23453                           	opt stack 0
 23454                           pclatu	equ	0xFFB
 23455                           pclath	equ	0xFFA
 23456                           tblptru	equ	0xFF8
 23457                           tblptrh	equ	0xFF7
 23458                           tblptrl	equ	0xFF6
 23459                           tablat	equ	0xFF5
 23460                           prodh	equ	0xFF4
 23461                           prodl	equ	0xFF3
 23462                           intcon	equ	0xFF2
 23463                           indf0	equ	0xFEF
 23464                           postinc0	equ	0xFEE
 23465                           fsr0h	equ	0xFEA
 23466                           fsr0l	equ	0xFE9
 23467                           wreg	equ	0xFE8
 23468                           indf1	equ	0xFE7
 23469                           postdec1	equ	0xFE5
 23470                           fsr1h	equ	0xFE2
 23471                           fsr1l	equ	0xFE1
 23472                           indf2	equ	0xFDF
 23473                           postinc2	equ	0xFDE
 23474                           postdec2	equ	0xFDD
 23475                           plusw2	equ	0xFDB
 23476                           fsr2h	equ	0xFDA
 23477                           fsr2l	equ	0xFD9
 23478                           status	equ	0xFD8
 23479                           
 23480 ;; *************** function _USBCtrlTrfRxService *****************
 23481 ;; Defined at:
 23482 ;;		line 1852 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 23483 ;; Parameters:    Size  Location     Type
 23484 ;;		None
 23485 ;; Auto vars:     Size  Location     Type
 23486 ;;  byteToRead      1    1[COMRAM] unsigned char 
 23487 ;;  i               1    0[COMRAM] unsigned char 
 23488 ;; Return value:  Size  Location     Type
 23489 ;;                  1    wreg      void 
 23490 ;; Registers used:
 23491 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23492 ;; Tracked objects:
 23493 ;;		On entry : 0/0
 23494 ;;		On exit  : 0/0
 23495 ;;		Unchanged: 0/0
 23496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23497 ;;      Params:         0       0       0       0       0       0       0       0       0
 23498 ;;      Locals:         2       0       0       0       0       0       0       0       0
 23499 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23500 ;;      Totals:         2       0       0       0       0       0       0       0       0
 23501 ;;Total ram usage:        2 bytes
 23502 ;; Hardware stack levels used:    1
 23503 ;; Hardware stack levels required when called:    1
 23504 ;; This function calls:
 23505 ;;		_USBCtrlEPAllowStatusStage
 23506 ;; This function is called by:
 23507 ;;		_USBCtrlTrfOutHandler
 23508 ;; This function uses a non-reentrant model
 23509 ;;
 23510                           
 23511                           	psect	text90
 23512  003432                     __ptext90:
 23513                           	opt stack 0
 23514  003432                     _USBCtrlTrfRxService:
 23515                           	opt stack 20
 23516                           
 23517                           ;usb_device.c: 1854: uint8_t byteToRead;
 23518                           ;usb_device.c: 1855: uint8_t i;
 23519                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 23520                           
 23521                           ;incstack = 0
 23522  003432  EE20 F001          	lfsr	2,1
 23523  003436  5050               	movf	_pBDTEntryEP0OutCurrent,w,c
 23524  003438  26D9               	addwf	fsr2l,f,c
 23525  00343A  5051               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 23526  00343C  22DA               	addwfc	fsr2h,f,c
 23527  00343E  50DF               	movf	indf2,w,c
 23528  003440  6E02               	movwf	USBCtrlTrfRxService@byteToRead,c
 23529                           
 23530                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
 23531  003442  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 23532  003444  5C3C               	subwf	_outPipes+4,w,c	;volatile
 23533  003446  0E00               	movlw	0
 23534  003448  583D               	subwfb	_outPipes+5,w,c	;volatile
 23535  00344A  A0D8               	btfss	status,0,c
 23536                           
 23537                           ;usb_device.c: 1866: {
 23538                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
 23539  00344C  C03C  F002         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 23540                           
 23541                           ;usb_device.c: 1868: }
 23542                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
 23543  003450  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 23544  003452  5E3C               	subwf	_outPipes+4,f,c	;volatile
 23545  003454  0E00               	movlw	0
 23546  003456  5A3D               	subwfb	_outPipes+5,f,c	;volatile
 23547                           
 23548                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
 23549  003458  0E00               	movlw	0
 23550  00345A  6E01               	movwf	USBCtrlTrfRxService@i,c
 23551  00345C  D011               	goto	i2l513
 23552  00345E                     
 23553                           ;usb_device.c: 1875: {
 23554                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 23555  00345E  5001               	movf	USBCtrlTrfRxService@i,w,c
 23556  003460  0D01               	mullw	1
 23557  003462  0E38               	movlw	56
 23558  003464  24F3               	addwf	prodl,w,c
 23559  003466  6ED9               	movwf	fsr2l,c
 23560  003468  0E04               	movlw	4
 23561  00346A  20F4               	addwfc	prodh,w,c
 23562  00346C  6EDA               	movwf	fsr2h,c
 23563  00346E  C038  FFE1         	movff	_outPipes,fsr1l	;volatile
 23564  003472  C039  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 23565  003476  CFDF FFE7          	movff	indf2,indf1
 23566  00347A  4A38               	infsnz	_outPipes,f,c	;volatile
 23567  00347C  2A39               	incf	_outPipes+1,f,c	;volatile
 23568  00347E  2A01               	incf	USBCtrlTrfRxService@i,f,c
 23569  003480                     i2l513:
 23570  003480  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 23571  003482  5C01               	subwf	USBCtrlTrfRxService@i,w,c
 23572  003484  A0D8               	btfss	status,0,c
 23573  003486  D7EB               	goto	i2l514
 23574                           
 23575                           ;usb_device.c: 1877: }
 23576                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
 23577  003488  503C               	movf	_outPipes+4,w,c	;volatile
 23578  00348A  103D               	iorwf	_outPipes+5,w,c	;volatile
 23579  00348C  B4D8               	btfsc	status,2,c
 23580  00348E  D032               	goto	i2l516
 23581                           
 23582                           ;usb_device.c: 1882: {
 23583                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
 23584  003490  EE20 F001          	lfsr	2,1
 23585  003494  504E               	movf	_pBDTEntryEP0OutNext,w,c
 23586  003496  26D9               	addwf	fsr2l,f,c
 23587  003498  504F               	movf	_pBDTEntryEP0OutNext+1,w,c
 23588  00349A  22DA               	addwfc	fsr2h,f,c
 23589  00349C  0E08               	movlw	8
 23590  00349E  6EDF               	movwf	indf2,c
 23591                           
 23592                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 23593  0034A0  EE20 F002          	lfsr	2,2
 23594  0034A4  504E               	movf	_pBDTEntryEP0OutNext,w,c
 23595  0034A6  26D9               	addwf	fsr2l,f,c
 23596  0034A8  504F               	movf	_pBDTEntryEP0OutNext+1,w,c
 23597  0034AA  22DA               	addwfc	fsr2h,f,c
 23598  0034AC  0E38               	movlw	56
 23599  0034AE  6EDE               	movwf	postinc2,c
 23600  0034B0  0E04               	movlw	4
 23601  0034B2  6EDD               	movwf	postdec2,c
 23602                           
 23603                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 23604  0034B4  C050  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 23605  0034B8  C051  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 23606  0034BC  BCDF               	btfsc	indf2,6,c
 23607  0034BE  D00D               	goto	i2l517
 23608                           
 23609                           ;usb_device.c: 1886: {
 23610                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 23611  0034C0  C04E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23612  0034C4  C04F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23613  0034C8  0E48               	movlw	72
 23614  0034CA  6EDF               	movwf	indf2,c
 23615                           
 23616                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 23617  0034CC  C04E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23618  0034D0  C04F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23619  0034D4  0E00               	movlw	0
 23620  0034D6  8EDB               	bsf	plusw2,7,c
 23621                           
 23622                           ;usb_device.c: 1889: }
 23623  0034D8  0012               	return	
 23624  0034DA                     i2l517:
 23625                           
 23626                           ;usb_device.c: 1890: else
 23627                           ;usb_device.c: 1891: {
 23628                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 23629  0034DA  C04E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23630  0034DE  C04F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23631  0034E2  0E08               	movlw	8
 23632  0034E4  6EDF               	movwf	indf2,c
 23633                           
 23634                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 23635  0034E6  C04E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23636  0034EA  C04F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23637  0034EE  0E00               	movlw	0
 23638  0034F0  8EDB               	bsf	plusw2,7,c
 23639                           
 23640                           ;usb_device.c: 1894: }
 23641                           ;usb_device.c: 1895: }
 23642  0034F2  0012               	return	
 23643  0034F4                     i2l516:
 23644                           
 23645                           ;usb_device.c: 1896: else
 23646                           ;usb_device.c: 1897: {
 23647                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 23648  0034F4  EE20 F001          	lfsr	2,1
 23649  0034F8  504E               	movf	_pBDTEntryEP0OutNext,w,c
 23650  0034FA  26D9               	addwf	fsr2l,f,c
 23651  0034FC  504F               	movf	_pBDTEntryEP0OutNext+1,w,c
 23652  0034FE  22DA               	addwfc	fsr2h,f,c
 23653  003500  0E08               	movlw	8
 23654  003502  6EDF               	movwf	indf2,c
 23655                           
 23656                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 23657  003504  EE20 F002          	lfsr	2,2
 23658  003508  504E               	movf	_pBDTEntryEP0OutNext,w,c
 23659  00350A  26D9               	addwf	fsr2l,f,c
 23660  00350C  504F               	movf	_pBDTEntryEP0OutNext+1,w,c
 23661  00350E  22DA               	addwfc	fsr2h,f,c
 23662  003510  0E30               	movlw	48
 23663  003512  6EDE               	movwf	postinc2,c
 23664  003514  0E04               	movlw	4
 23665  003516  6EDD               	movwf	postdec2,c
 23666                           
 23667                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 23668  003518  C04E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23669  00351C  C04F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23670  003520  0E04               	movlw	4
 23671  003522  6EDF               	movwf	indf2,c
 23672                           
 23673                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 23674  003524  C04E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23675  003528  C04F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23676  00352C  0E00               	movlw	0
 23677  00352E  8EDB               	bsf	plusw2,7,c
 23678                           
 23679                           ;usb_device.c: 1926: }
 23680                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
 23681                           
 23682                           ;usb_device.c: 1915: {
 23683                           ;usb_device.c: 1921: outPipes[0].pFunc();
 23684  003530  9E3B               	bcf	_outPipes+3,7,c	;volatile
 23685                           
 23686                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
 23687  003532  5054               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 23688  003534  A4D8               	btfss	status,2,c
 23689  003536  0012               	return	
 23690                           
 23691                           ;usb_device.c: 1942: {
 23692                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
 23693  003538  ECC0  F01F         	call	_USBCtrlEPAllowStatusStage	;wreg free
 23694  00353C  0012               	return	
 23695  00353E                     __end_of_USBCtrlTrfRxService:
 23696                           	opt stack 0
 23697                           pclatu	equ	0xFFB
 23698                           pclath	equ	0xFFA
 23699                           tblptru	equ	0xFF8
 23700                           tblptrh	equ	0xFF7
 23701                           tblptrl	equ	0xFF6
 23702                           tablat	equ	0xFF5
 23703                           prodh	equ	0xFF4
 23704                           prodl	equ	0xFF3
 23705                           intcon	equ	0xFF2
 23706                           indf0	equ	0xFEF
 23707                           postinc0	equ	0xFEE
 23708                           fsr0h	equ	0xFEA
 23709                           fsr0l	equ	0xFE9
 23710                           wreg	equ	0xFE8
 23711                           indf1	equ	0xFE7
 23712                           postdec1	equ	0xFE5
 23713                           fsr1h	equ	0xFE2
 23714                           fsr1l	equ	0xFE1
 23715                           indf2	equ	0xFDF
 23716                           postinc2	equ	0xFDE
 23717                           postdec2	equ	0xFDD
 23718                           plusw2	equ	0xFDB
 23719                           fsr2h	equ	0xFDA
 23720                           fsr2l	equ	0xFD9
 23721                           status	equ	0xFD8
 23722                           
 23723 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 23724 ;; Defined at:
 23725 ;;		line 1416 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 23726 ;; Parameters:    Size  Location     Type
 23727 ;;		None
 23728 ;; Auto vars:     Size  Location     Type
 23729 ;;		None
 23730 ;; Return value:  Size  Location     Type
 23731 ;;                  1    wreg      void 
 23732 ;; Registers used:
 23733 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23734 ;; Tracked objects:
 23735 ;;		On entry : 0/0
 23736 ;;		On exit  : 0/0
 23737 ;;		Unchanged: 0/0
 23738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23739 ;;      Params:         0       0       0       0       0       0       0       0       0
 23740 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23741 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23742 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23743 ;;Total ram usage:        0 bytes
 23744 ;; Hardware stack levels used:    1
 23745 ;; This function calls:
 23746 ;;		Nothing
 23747 ;; This function is called by:
 23748 ;;		_USBDeviceTasks
 23749 ;;		_USBCtrlEPServiceComplete
 23750 ;;		_USBCtrlTrfRxService
 23751 ;; This function uses a non-reentrant model
 23752 ;;
 23753                           
 23754                           	psect	text91
 23755  003F80                     __ptext91:
 23756                           	opt stack 0
 23757  003F80                     _USBCtrlEPAllowStatusStage:
 23758                           	opt stack 20
 23759                           
 23760                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
 23761                           
 23762                           ;incstack = 0
 23763  003F80  0101               	movlb	1	; () banked
 23764  003F82  51F6               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 23765  003F84  A4D8               	btfss	status,2,c
 23766  003F86  0012               	return	
 23767                           
 23768                           ; BSR set to: 1
 23769                           ;usb_device.c: 1424: {
 23770                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
 23771  003F88  0E01               	movlw	1
 23772  003F8A  6FF6               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 23773                           
 23774                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
 23775  003F8C  0102               	movlb	2	; () banked
 23776  003F8E  51EB               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 23777  003F90  A4D8               	btfss	status,2,c
 23778  003F92  0012               	return	
 23779                           
 23780                           ; BSR set to: 2
 23781                           ;usb_device.c: 1427: {
 23782                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
 23783  003F94  0E01               	movlw	1
 23784  003F96  6FEB               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 23785                           
 23786                           ; BSR set to: 2
 23787                           ;usb_device.c: 1432: if(controlTransferState == 2)
 23788  003F98  0E02               	movlw	2
 23789  003F9A  1857               	xorwf	_controlTransferState,w,c	;volatile
 23790  003F9C  A4D8               	btfss	status,2,c
 23791  003F9E  D015               	goto	i2l467
 23792                           
 23793                           ; BSR set to: 2
 23794                           ;usb_device.c: 1433: {
 23795                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
 23796  003FA0  EE20 F001          	lfsr	2,1
 23797  003FA4  5046               	movf	_pBDTEntryIn,w,c
 23798  003FA6  26D9               	addwf	fsr2l,f,c
 23799  003FA8  5047               	movf	_pBDTEntryIn+1,w,c
 23800  003FAA  22DA               	addwfc	fsr2h,f,c
 23801  003FAC  0E00               	movlw	0
 23802  003FAE  6EDF               	movwf	indf2,c
 23803                           
 23804                           ; BSR set to: 2
 23805                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 23806  003FB0  C046  FFD9         	movff	_pBDTEntryIn,fsr2l
 23807  003FB4  C047  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23808  003FB8  0E48               	movlw	72
 23809  003FBA  6EDF               	movwf	indf2,c
 23810                           
 23811                           ; BSR set to: 2
 23812                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
 23813  003FBC  C046  FFD9         	movff	_pBDTEntryIn,fsr2l
 23814  003FC0  C047  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23815  003FC4  0E00               	movlw	0
 23816  003FC6  8EDB               	bsf	plusw2,7,c
 23817                           
 23818                           ;usb_device.c: 1437: }
 23819  003FC8  0012               	return	
 23820  003FCA                     i2l467:
 23821                           
 23822                           ; BSR set to: 2
 23823                           ;usb_device.c: 1438: else if(controlTransferState == 1)
 23824                           
 23825                           ; BSR set to: 2
 23826  003FCA  0457               	decf	_controlTransferState,w,c	;volatile
 23827  003FCC  A4D8               	btfss	status,2,c
 23828  003FCE  0012               	return	
 23829                           
 23830                           ; BSR set to: 2
 23831                           ;usb_device.c: 1439: {
 23832                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
 23833  003FD0  0E00               	movlw	0
 23834  003FD2  0101               	movlb	1	; () banked
 23835  003FD4  6FF7               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 23836                           
 23837                           ; BSR set to: 1
 23838                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
 23839  003FD6  EE20 F001          	lfsr	2,1
 23840  003FDA  5050               	movf	_pBDTEntryEP0OutCurrent,w,c
 23841  003FDC  26D9               	addwf	fsr2l,f,c
 23842  003FDE  5051               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 23843  003FE0  22DA               	addwfc	fsr2h,f,c
 23844  003FE2  0E08               	movlw	8
 23845  003FE4  6EDF               	movwf	indf2,c
 23846                           
 23847                           ; BSR set to: 1
 23848                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 23849  003FE6  EE20 F002          	lfsr	2,2
 23850  003FEA  5050               	movf	_pBDTEntryEP0OutCurrent,w,c
 23851  003FEC  26D9               	addwf	fsr2l,f,c
 23852  003FEE  5051               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 23853  003FF0  22DA               	addwfc	fsr2h,f,c
 23854  003FF2  0E30               	movlw	48
 23855  003FF4  6EDE               	movwf	postinc2,c
 23856  003FF6  0E04               	movlw	4
 23857  003FF8  6EDD               	movwf	postdec2,c
 23858                           
 23859                           ; BSR set to: 1
 23860                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 23861  003FFA  C050  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 23862  003FFE  C051  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 23863  004002  0E04               	movlw	4
 23864  004004  6EDF               	movwf	indf2,c
 23865                           
 23866                           ; BSR set to: 1
 23867                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 23868  004006  C050  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 23869  00400A  C051  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 23870  00400E  0E00               	movlw	0
 23871  004010  8EDB               	bsf	plusw2,7,c
 23872                           
 23873                           ; BSR set to: 1
 23874                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
 23875  004012  0E01               	movlw	1
 23876  004014  6FF7               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 23877                           
 23878                           ; BSR set to: 1
 23879                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
 23880  004016  EE20 F001          	lfsr	2,1
 23881  00401A  504E               	movf	_pBDTEntryEP0OutNext,w,c
 23882  00401C  26D9               	addwf	fsr2l,f,c
 23883  00401E  504F               	movf	_pBDTEntryEP0OutNext+1,w,c
 23884  004020  22DA               	addwfc	fsr2h,f,c
 23885  004022  0E08               	movlw	8
 23886  004024  6EDF               	movwf	indf2,c
 23887                           
 23888                           ; BSR set to: 1
 23889                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 23890  004026  EE20 F002          	lfsr	2,2
 23891  00402A  504E               	movf	_pBDTEntryEP0OutNext,w,c
 23892  00402C  26D9               	addwf	fsr2l,f,c
 23893  00402E  504F               	movf	_pBDTEntryEP0OutNext+1,w,c
 23894  004030  22DA               	addwfc	fsr2h,f,c
 23895  004032  0E30               	movlw	48
 23896  004034  6EDE               	movwf	postinc2,c
 23897  004036  0E04               	movlw	4
 23898  004038  6EDD               	movwf	postdec2,c
 23899                           
 23900                           ; BSR set to: 1
 23901                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 23902  00403A  C04E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23903  00403E  C04F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23904  004042  0E80               	movlw	128
 23905  004044  6EDF               	movwf	indf2,c
 23906                           
 23907                           ; BSR set to: 1
 23908                           
 23909                           ; BSR set to: 1
 23910                           
 23911                           ; BSR set to: 1
 23912  004046  0012               	return	
 23913  004048                     __end_of_USBCtrlEPAllowStatusStage:
 23914                           	opt stack 0
 23915                           pclatu	equ	0xFFB
 23916                           pclath	equ	0xFFA
 23917                           tblptru	equ	0xFF8
 23918                           tblptrh	equ	0xFF7
 23919                           tblptrl	equ	0xFF6
 23920                           tablat	equ	0xFF5
 23921                           prodh	equ	0xFF4
 23922                           prodl	equ	0xFF3
 23923                           intcon	equ	0xFF2
 23924                           indf0	equ	0xFEF
 23925                           postinc0	equ	0xFEE
 23926                           fsr0h	equ	0xFEA
 23927                           fsr0l	equ	0xFE9
 23928                           wreg	equ	0xFE8
 23929                           indf1	equ	0xFE7
 23930                           postdec1	equ	0xFE5
 23931                           fsr1h	equ	0xFE2
 23932                           fsr1l	equ	0xFE1
 23933                           indf2	equ	0xFDF
 23934                           postinc2	equ	0xFDE
 23935                           postdec2	equ	0xFDD
 23936                           plusw2	equ	0xFDB
 23937                           fsr2h	equ	0xFDA
 23938                           fsr2l	equ	0xFD9
 23939                           status	equ	0xFD8
 23940                           
 23941 ;; *************** function _USBCtrlTrfInHandler *****************
 23942 ;; Defined at:
 23943 ;;		line 2592 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 23944 ;; Parameters:    Size  Location     Type
 23945 ;;		None
 23946 ;; Auto vars:     Size  Location     Type
 23947 ;;  lastDTS         1    1[COMRAM] unsigned char 
 23948 ;; Return value:  Size  Location     Type
 23949 ;;                  1    wreg      void 
 23950 ;; Registers used:
 23951 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23952 ;; Tracked objects:
 23953 ;;		On entry : 0/0
 23954 ;;		On exit  : 0/0
 23955 ;;		Unchanged: 0/0
 23956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23957 ;;      Params:         0       0       0       0       0       0       0       0       0
 23958 ;;      Locals:         1       0       0       0       0       0       0       0       0
 23959 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23960 ;;      Totals:         1       0       0       0       0       0       0       0       0
 23961 ;;Total ram usage:        1 bytes
 23962 ;; Hardware stack levels used:    1
 23963 ;; Hardware stack levels required when called:    1
 23964 ;; This function calls:
 23965 ;;		_USBCtrlTrfTxService
 23966 ;; This function is called by:
 23967 ;;		_USBCtrlEPService
 23968 ;; This function uses a non-reentrant model
 23969 ;;
 23970                           
 23971                           	psect	text92
 23972  004048                     __ptext92:
 23973                           	opt stack 0
 23974  004048                     _USBCtrlTrfInHandler:
 23975                           	opt stack 21
 23976                           
 23977                           ;usb_device.c: 2594: uint8_t lastDTS;
 23978                           ;usb_device.c: 2596: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 23979                           
 23980                           ;incstack = 0
 23981  004048  C046  FFD9         	movff	_pBDTEntryIn,fsr2l
 23982  00404C  C047  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23983  004050  0E00               	movlw	0
 23984  004052  BCDF               	btfsc	indf2,6,c
 23985  004054  0E01               	movlw	1
 23986  004056  6E02               	movwf	USBCtrlTrfInHandler@lastDTS,c
 23987                           
 23988                           ;usb_device.c: 2599: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 23989  004058  0E04               	movlw	4
 23990  00405A  1846               	xorwf	_pBDTEntryIn,w,c
 23991  00405C  6E46               	movwf	_pBDTEntryIn,c
 23992  00405E  5047               	movf	_pBDTEntryIn+1,w,c
 23993  004060  6E47               	movwf	_pBDTEntryIn+1,c
 23994                           
 23995                           ;usb_device.c: 2604: if(USBDeviceState == ADR_PENDING_STATE)
 23996  004062  0E08               	movlw	8
 23997  004064  1859               	xorwf	_USBDeviceState,w,c	;volatile
 23998  004066  A4D8               	btfss	status,2,c
 23999  004068  D00B               	goto	i2l594
 24000                           
 24001                           ;usb_device.c: 2605: {
 24002                           ;usb_device.c: 2606: UADDR = (SetupPkt.bDevADR & 0x7F);
 24003  00406A  0104               	movlb	4	; () banked
 24004  00406C  5132               	movf	50,w,b	;volatile
 24005  00406E  0B7F               	andlw	127
 24006  004070  6E6E               	movwf	3950,c	;volatile
 24007                           
 24008                           ; BSR set to: 4
 24009                           ;usb_device.c: 2607: if(UADDR != 0u)
 24010  004072  506E               	movf	3950,w,c	;volatile
 24011  004074  B4D8               	btfsc	status,2,c
 24012  004076  D002               	goto	i2l593
 24013                           
 24014                           ; BSR set to: 4
 24015                           ;usb_device.c: 2608: {
 24016                           ;usb_device.c: 2609: USBDeviceState=ADDRESS_STATE;
 24017  004078  0E10               	movlw	16
 24018  00407A  D001               	goto	L31
 24019  00407C                     i2l593:
 24020                           
 24021                           ; BSR set to: 4
 24022                           ;usb_device.c: 2611: else
 24023                           ;usb_device.c: 2612: {
 24024                           ;usb_device.c: 2613: USBDeviceState=DEFAULT_STATE;
 24025                           
 24026                           ; BSR set to: 4
 24027  00407C  0E04               	movlw	4
 24028  00407E                     L31:
 24029  00407E  6E59               	movwf	_USBDeviceState,c	;volatile
 24030  004080                     i2l594:
 24031                           
 24032                           ;usb_device.c: 2614: }
 24033                           ;usb_device.c: 2615: }
 24034                           ;usb_device.c: 2618: if(controlTransferState == 1)
 24035                           
 24036                           ; BSR set to: 4
 24037                           
 24038                           ; BSR set to: 4
 24039  004080  0457               	decf	_controlTransferState,w,c	;volatile
 24040  004082  A4D8               	btfss	status,2,c
 24041  004084  D03A               	goto	i2l595
 24042                           
 24043                           ;usb_device.c: 2619: {
 24044                           ;usb_device.c: 2620: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 24045  004086  EE20 F002          	lfsr	2,2
 24046  00408A  5046               	movf	_pBDTEntryIn,w,c
 24047  00408C  26D9               	addwf	fsr2l,f,c
 24048  00408E  5047               	movf	_pBDTEntryIn+1,w,c
 24049  004090  22DA               	addwfc	fsr2h,f,c
 24050  004092  0E38               	movlw	56
 24051  004094  6EDE               	movwf	postinc2,c
 24052  004096  0E04               	movlw	4
 24053  004098  6EDD               	movwf	postdec2,c
 24054                           
 24055                           ;usb_device.c: 2621: USBCtrlTrfTxService();
 24056  00409A  EC5A  F01F         	call	_USBCtrlTrfTxService	;wreg free
 24057                           
 24058                           ;usb_device.c: 2627: if(shortPacketStatus == 2)
 24059  00409E  0E02               	movlw	2
 24060  0040A0  1858               	xorwf	_shortPacketStatus,w,c	;volatile
 24061  0040A2  A4D8               	btfss	status,2,c
 24062  0040A4  D00D               	goto	i2l596
 24063                           
 24064                           ;usb_device.c: 2628: {
 24065                           ;usb_device.c: 2631: pBDTEntryIn[0]->STAT.Val = 0x04;
 24066  0040A6  C046  FFD9         	movff	_pBDTEntryIn,fsr2l
 24067  0040AA  C047  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 24068  0040AE  0E04               	movlw	4
 24069  0040B0  6EDF               	movwf	indf2,c
 24070                           
 24071                           ;usb_device.c: 2632: pBDTEntryIn[0]->STAT.Val |= 0x80;
 24072  0040B2  C046  FFD9         	movff	_pBDTEntryIn,fsr2l
 24073  0040B6  C047  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 24074  0040BA  0E00               	movlw	0
 24075  0040BC  8EDB               	bsf	plusw2,7,c
 24076                           
 24077                           ;usb_device.c: 2633: }
 24078  0040BE  0012               	return	
 24079  0040C0                     i2l596:
 24080                           
 24081                           ;usb_device.c: 2634: else
 24082                           ;usb_device.c: 2635: {
 24083                           ;usb_device.c: 2636: if(lastDTS == 0)
 24084  0040C0  5002               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 24085  0040C2  A4D8               	btfss	status,2,c
 24086  0040C4  D00D               	goto	i2l598
 24087                           
 24088                           ;usb_device.c: 2637: {
 24089                           ;usb_device.c: 2638: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 24090  0040C6  C046  FFD9         	movff	_pBDTEntryIn,fsr2l
 24091  0040CA  C047  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 24092  0040CE  0E48               	movlw	72
 24093  0040D0  6EDF               	movwf	indf2,c
 24094                           
 24095                           ;usb_device.c: 2639: pBDTEntryIn[0]->STAT.Val |= 0x80;
 24096  0040D2  C046  FFD9         	movff	_pBDTEntryIn,fsr2l
 24097  0040D6  C047  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 24098  0040DA  0E00               	movlw	0
 24099  0040DC  8EDB               	bsf	plusw2,7,c
 24100                           
 24101                           ;usb_device.c: 2640: }
 24102  0040DE  0012               	return	
 24103  0040E0                     i2l598:
 24104                           
 24105                           ;usb_device.c: 2641: else
 24106                           ;usb_device.c: 2642: {
 24107                           ;usb_device.c: 2643: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 24108  0040E0  C046  FFD9         	movff	_pBDTEntryIn,fsr2l
 24109  0040E4  C047  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 24110  0040E8  0E08               	movlw	8
 24111  0040EA  6EDF               	movwf	indf2,c
 24112                           
 24113                           ;usb_device.c: 2644: pBDTEntryIn[0]->STAT.Val |= 0x80;
 24114  0040EC  C046  FFD9         	movff	_pBDTEntryIn,fsr2l
 24115  0040F0  C047  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 24116  0040F4  0E00               	movlw	0
 24117  0040F6  8EDB               	bsf	plusw2,7,c
 24118                           
 24119                           ;usb_device.c: 2645: }
 24120                           ;usb_device.c: 2646: }
 24121                           ;usb_device.c: 2647: }
 24122  0040F8  0012               	return	
 24123  0040FA                     i2l595:
 24124                           
 24125                           ;usb_device.c: 2648: else
 24126                           ;usb_device.c: 2649: {
 24127                           ;usb_device.c: 2653: if(outPipes[0].info.bits.busy == 1)
 24128  0040FA  BE3B               	btfsc	_outPipes+3,7,c	;volatile
 24129                           
 24130                           ;usb_device.c: 2658: }
 24131                           ;usb_device.c: 2659: outPipes[0].info.bits.busy = 0;
 24132                           
 24133                           ;usb_device.c: 2656: {
 24134                           ;usb_device.c: 2657: outPipes[0].pFunc();
 24135  0040FC  9E3B               	bcf	_outPipes+3,7,c	;volatile
 24136                           
 24137                           ;usb_device.c: 2660: }
 24138                           ;usb_device.c: 2662: controlTransferState = 0;
 24139  0040FE  0E00               	movlw	0
 24140  004100  6E57               	movwf	_controlTransferState,c	;volatile
 24141  004102  0012               	return	
 24142  004104                     __end_of_USBCtrlTrfInHandler:
 24143                           	opt stack 0
 24144                           pclatu	equ	0xFFB
 24145                           pclath	equ	0xFFA
 24146                           tblptru	equ	0xFF8
 24147                           tblptrh	equ	0xFF7
 24148                           tblptrl	equ	0xFF6
 24149                           tablat	equ	0xFF5
 24150                           prodh	equ	0xFF4
 24151                           prodl	equ	0xFF3
 24152                           intcon	equ	0xFF2
 24153                           indf0	equ	0xFEF
 24154                           postinc0	equ	0xFEE
 24155                           fsr0h	equ	0xFEA
 24156                           fsr0l	equ	0xFE9
 24157                           wreg	equ	0xFE8
 24158                           indf1	equ	0xFE7
 24159                           postdec1	equ	0xFE5
 24160                           fsr1h	equ	0xFE2
 24161                           fsr1l	equ	0xFE1
 24162                           indf2	equ	0xFDF
 24163                           postinc2	equ	0xFDE
 24164                           postdec2	equ	0xFDD
 24165                           plusw2	equ	0xFDB
 24166                           fsr2h	equ	0xFDA
 24167                           fsr2l	equ	0xFD9
 24168                           status	equ	0xFD8
 24169                           
 24170 ;; *************** function _USBCtrlTrfTxService *****************
 24171 ;; Defined at:
 24172 ;;		line 1771 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 24173 ;; Parameters:    Size  Location     Type
 24174 ;;		None
 24175 ;; Auto vars:     Size  Location     Type
 24176 ;;  byteToSend      1    0[COMRAM] unsigned char 
 24177 ;; Return value:  Size  Location     Type
 24178 ;;                  1    wreg      void 
 24179 ;; Registers used:
 24180 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 24181 ;; Tracked objects:
 24182 ;;		On entry : 0/0
 24183 ;;		On exit  : 0/0
 24184 ;;		Unchanged: 0/0
 24185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24186 ;;      Params:         0       0       0       0       0       0       0       0       0
 24187 ;;      Locals:         1       0       0       0       0       0       0       0       0
 24188 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24189 ;;      Totals:         1       0       0       0       0       0       0       0       0
 24190 ;;Total ram usage:        1 bytes
 24191 ;; Hardware stack levels used:    1
 24192 ;; This function calls:
 24193 ;;		Nothing
 24194 ;; This function is called by:
 24195 ;;		_USBCtrlEPAllowDataStage
 24196 ;;		_USBCtrlTrfInHandler
 24197 ;; This function uses a non-reentrant model
 24198 ;;
 24199                           
 24200                           	psect	text93
 24201  003EB4                     __ptext93:
 24202                           	opt stack 0
 24203  003EB4                     _USBCtrlTrfTxService:
 24204                           	opt stack 19
 24205                           
 24206                           ;usb_device.c: 1773: uint8_t byteToSend;
 24207                           ;usb_device.c: 1777: byteToSend = 8;
 24208                           
 24209                           ;incstack = 0
 24210  003EB4  0E08               	movlw	8
 24211  003EB6  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 24212                           
 24213                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
 24214  003EB8  5045               	movf	_inPipes+5,w,c	;volatile
 24215  003EBA  E110               	bnz	i2l7608
 24216  003EBC  0E08               	movlw	8
 24217  003EBE  5C44               	subwf	_inPipes+4,w,c	;volatile
 24218  003EC0  B0D8               	btfsc	status,0,c
 24219  003EC2  D00C               	goto	i2l500
 24220                           
 24221                           ;usb_device.c: 1779: {
 24222                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
 24223  003EC4  C044  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 24224                           
 24225                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
 24226  003EC8  5058               	movf	_shortPacketStatus,w,c	;volatile
 24227  003ECA  A4D8               	btfss	status,2,c
 24228  003ECC  D002               	goto	i2l498
 24229                           
 24230                           ;usb_device.c: 1788: {
 24231                           ;usb_device.c: 1789: shortPacketStatus = 1;
 24232  003ECE  0E01               	movlw	1
 24233  003ED0  D004               	goto	L32
 24234  003ED2                     i2l498:
 24235                           
 24236                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
 24237  003ED2  0458               	decf	_shortPacketStatus,w,c	;volatile
 24238  003ED4  A4D8               	btfss	status,2,c
 24239  003ED6  D002               	goto	i2l500
 24240                           
 24241                           ;usb_device.c: 1792: {
 24242                           ;usb_device.c: 1793: shortPacketStatus = 2;
 24243  003ED8  0E02               	movlw	2
 24244  003EDA                     L32:
 24245  003EDA  6E58               	movwf	_shortPacketStatus,c	;volatile
 24246  003EDC                     i2l500:
 24247  003EDC                     i2l7608:
 24248                           
 24249                           ;usb_device.c: 1794: }
 24250                           ;usb_device.c: 1795: }
 24251                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
 24252  003EDC  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 24253  003EDE  5E44               	subwf	_inPipes+4,f,c	;volatile
 24254  003EE0  0E00               	movlw	0
 24255  003EE2  5A45               	subwfb	_inPipes+5,f,c	;volatile
 24256                           
 24257                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
 24258  003EE4  EE20 F001          	lfsr	2,1
 24259  003EE8  5046               	movf	_pBDTEntryIn,w,c
 24260  003EEA  26D9               	addwf	fsr2l,f,c
 24261  003EEC  5047               	movf	_pBDTEntryIn+1,w,c
 24262  003EEE  22DA               	addwfc	fsr2h,f,c
 24263  003EF0  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 24264                           
 24265                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
 24266  003EF4  0E38               	movlw	56
 24267  003EF6  0103               	movlb	3	; () banked
 24268  003EF8  6F4C               	movwf	_pDst& (0+255),b
 24269  003EFA  0E04               	movlw	4
 24270  003EFC  6F4D               	movwf	(_pDst+1)& (0+255),b
 24271                           
 24272                           ; BSR set to: 3
 24273                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 24274  003EFE  A043               	btfss	_inPipes+3,0,c	;volatile
 24275  003F00  D01C               	goto	i2l502
 24276  003F02  D03A               	goto	i2l506
 24277  003F04                     
 24278                           ; BSR set to: 3
 24279                           ;usb_device.c: 1812: {
 24280                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
 24281                           
 24282                           ; BSR set to: 3
 24283  003F04  C040  FFF6         	movff	_inPipes,tblptrl	;volatile
 24284  003F08  C041  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 24285  003F0C  6AF8               	clrf	tblptru,c
 24286  003F0E  C34C  FFD9         	movff	_pDst,fsr2l
 24287  003F12  C34D  FFDA         	movff	_pDst+1,fsr2h
 24288  003F16  0E07               	movlw	(high __ramtop+-1)
 24289  003F18  64F7               	cpfsgt	tblptrh,c
 24290  003F1A  D003               	bra	i2u590_47
 24291  003F1C  0008               	tblrd		*
 24292  003F1E  50F5               	movf	tablat,w,c
 24293  003F20  D005               	bra	i2u590_40
 24294  003F22                     i2u590_47:
 24295  003F22  CFF6 FFE9          	movff	tblptrl,fsr0l
 24296  003F26  CFF7 FFEA          	movff	tblptrh,fsr0h
 24297  003F2A  50EF               	movf	indf0,w,c
 24298  003F2C                     i2u590_40:
 24299  003F2C  6EDF               	movwf	indf2,c
 24300  003F2E  4A40               	infsnz	_inPipes,f,c	;volatile
 24301  003F30  2A41               	incf	_inPipes+1,f,c	;volatile
 24302  003F32  0103               	movlb	3	; () banked
 24303  003F34  4B4C               	infsnz	_pDst& (0+255),f,b
 24304  003F36  2B4D               	incf	(_pDst+1)& (0+255),f,b
 24305                           
 24306                           ; BSR set to: 3
 24307                           ;usb_device.c: 1814: byteToSend--;
 24308  003F38  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 24309  003F3A                     i2l502:
 24310                           
 24311                           ; BSR set to: 3
 24312                           
 24313                           ; BSR set to: 3
 24314  003F3A  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 24315  003F3C  B4D8               	btfsc	status,2,c
 24316  003F3E  0012               	return	
 24317  003F40  D7E1               	goto	i2l503
 24318  003F42                     
 24319                           ; BSR set to: 3
 24320                           ;usb_device.c: 1820: {
 24321                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
 24322                           
 24323                           ; BSR set to: 3
 24324  003F42  C040  FFF6         	movff	_inPipes,tblptrl	;volatile
 24325  003F46  C041  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 24326  003F4A  6AF8               	clrf	tblptru,c
 24327  003F4C  C34C  FFD9         	movff	_pDst,fsr2l
 24328  003F50  C34D  FFDA         	movff	_pDst+1,fsr2h
 24329  003F54  0E07               	movlw	(high __ramtop+-1)
 24330  003F56  64F7               	cpfsgt	tblptrh,c
 24331  003F58  D003               	bra	i2u592_47
 24332  003F5A  0008               	tblrd		*
 24333  003F5C  50F5               	movf	tablat,w,c
 24334  003F5E  D005               	bra	i2u592_40
 24335  003F60                     i2u592_47:
 24336  003F60  CFF6 FFE9          	movff	tblptrl,fsr0l
 24337  003F64  CFF7 FFEA          	movff	tblptrh,fsr0h
 24338  003F68  50EF               	movf	indf0,w,c
 24339  003F6A                     i2u592_40:
 24340  003F6A  6EDF               	movwf	indf2,c
 24341  003F6C  4A40               	infsnz	_inPipes,f,c	;volatile
 24342  003F6E  2A41               	incf	_inPipes+1,f,c	;volatile
 24343  003F70  0103               	movlb	3	; () banked
 24344  003F72  4B4C               	infsnz	_pDst& (0+255),f,b
 24345  003F74  2B4D               	incf	(_pDst+1)& (0+255),f,b
 24346                           
 24347                           ; BSR set to: 3
 24348                           ;usb_device.c: 1822: byteToSend--;
 24349  003F76  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 24350  003F78                     i2l506:
 24351                           
 24352                           ; BSR set to: 3
 24353                           
 24354                           ; BSR set to: 3
 24355  003F78  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 24356  003F7A  B4D8               	btfsc	status,2,c
 24357  003F7C  0012               	return	
 24358  003F7E  D7E1               	goto	i2l507
 24359  003F80                     __end_of_USBCtrlTrfTxService:
 24360                           	opt stack 0
 24361                           pclatu	equ	0xFFB
 24362                           pclath	equ	0xFFA
 24363                           tblptru	equ	0xFF8
 24364                           tblptrh	equ	0xFF7
 24365                           tblptrl	equ	0xFF6
 24366                           tablat	equ	0xFF5
 24367                           prodh	equ	0xFF4
 24368                           prodl	equ	0xFF3
 24369                           intcon	equ	0xFF2
 24370                           indf0	equ	0xFEF
 24371                           postinc0	equ	0xFEE
 24372                           fsr0h	equ	0xFEA
 24373                           fsr0l	equ	0xFE9
 24374                           wreg	equ	0xFE8
 24375                           indf1	equ	0xFE7
 24376                           postdec1	equ	0xFE5
 24377                           fsr1h	equ	0xFE2
 24378                           fsr1l	equ	0xFE1
 24379                           indf2	equ	0xFDF
 24380                           postinc2	equ	0xFDE
 24381                           postdec2	equ	0xFDD
 24382                           plusw2	equ	0xFDB
 24383                           fsr2h	equ	0xFDA
 24384                           fsr2l	equ	0xFD9
 24385                           status	equ	0xFD8
 24386                           pclatu	equ	0xFFB
 24387                           pclath	equ	0xFFA
 24388                           tblptru	equ	0xFF8
 24389                           tblptrh	equ	0xFF7
 24390                           tblptrl	equ	0xFF6
 24391                           tablat	equ	0xFF5
 24392                           prodh	equ	0xFF4
 24393                           prodl	equ	0xFF3
 24394                           intcon	equ	0xFF2
 24395                           indf0	equ	0xFEF
 24396                           postinc0	equ	0xFEE
 24397                           fsr0h	equ	0xFEA
 24398                           fsr0l	equ	0xFE9
 24399                           wreg	equ	0xFE8
 24400                           indf1	equ	0xFE7
 24401                           postdec1	equ	0xFE5
 24402                           fsr1h	equ	0xFE2
 24403                           fsr1l	equ	0xFE1
 24404                           indf2	equ	0xFDF
 24405                           postinc2	equ	0xFDE
 24406                           postdec2	equ	0xFDD
 24407                           plusw2	equ	0xFDB
 24408                           fsr2h	equ	0xFDA
 24409                           fsr2l	equ	0xFD9
 24410                           status	equ	0xFD8
 24411                           
 24412                           	psect	rparam
 24413  0000                     pclatu	equ	0xFFB
 24414                           pclath	equ	0xFFA
 24415                           tblptru	equ	0xFF8
 24416                           tblptrh	equ	0xFF7
 24417                           tblptrl	equ	0xFF6
 24418                           tablat	equ	0xFF5
 24419                           prodh	equ	0xFF4
 24420                           prodl	equ	0xFF3
 24421                           intcon	equ	0xFF2
 24422                           indf0	equ	0xFEF
 24423                           postinc0	equ	0xFEE
 24424                           fsr0h	equ	0xFEA
 24425                           fsr0l	equ	0xFE9
 24426                           wreg	equ	0xFE8
 24427                           indf1	equ	0xFE7
 24428                           postdec1	equ	0xFE5
 24429                           fsr1h	equ	0xFE2
 24430                           fsr1l	equ	0xFE1
 24431                           indf2	equ	0xFDF
 24432                           postinc2	equ	0xFDE
 24433                           postdec2	equ	0xFDD
 24434                           plusw2	equ	0xFDB
 24435                           fsr2h	equ	0xFDA
 24436                           fsr2l	equ	0xFD9
 24437                           status	equ	0xFD8
 24438                           
 24439                           	psect	temp
 24440  00005F                     btemp:
 24441                           	opt stack 0
 24442  00005F                     	ds	1
 24443  0000                     int$flags	set	btemp
 24444  0000                     wtemp6	set	btemp+1
 24445                           pclatu	equ	0xFFB
 24446                           pclath	equ	0xFFA
 24447                           tblptru	equ	0xFF8
 24448                           tblptrh	equ	0xFF7
 24449                           tblptrl	equ	0xFF6
 24450                           tablat	equ	0xFF5
 24451                           prodh	equ	0xFF4
 24452                           prodl	equ	0xFF3
 24453                           intcon	equ	0xFF2
 24454                           indf0	equ	0xFEF
 24455                           postinc0	equ	0xFEE
 24456                           fsr0h	equ	0xFEA
 24457                           fsr0l	equ	0xFE9
 24458                           wreg	equ	0xFE8
 24459                           indf1	equ	0xFE7
 24460                           postdec1	equ	0xFE5
 24461                           fsr1h	equ	0xFE2
 24462                           fsr1l	equ	0xFE1
 24463                           indf2	equ	0xFDF
 24464                           postinc2	equ	0xFDE
 24465                           postdec2	equ	0xFDD
 24466                           plusw2	equ	0xFDB
 24467                           fsr2h	equ	0xFDA
 24468                           fsr2l	equ	0xFD9
 24469                           status	equ	0xFD8


Data Sizes:
    Strings     532
    Constant    536
    Data        34
    BSS         1007
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     55      94
    BANK0           160    160     160
    BANK1           256    239     256
    BANK2           256    200     256
    BANK3           256      0     229
    BANK4           192      0     100
    BANK5           128      0     100
    BANK6           256      0     250
    BANK7           256      0     250

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMl[48]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_23(CODE[16]), STR_22(CODE[7]), STR_21(CODE[14]), STR_20(CODE[8]), 
		 -> STR_19(CODE[8]), STR_18(CODE[10]), STR_17(CODE[17]), STR_16(CODE[11]), 
		 -> STR_15(CODE[5]), STR_14(CODE[32]), STR_13(CODE[7]), STR_12(CODE[11]), 
		 -> STR_11(CODE[11]), STR_10(CODE[14]), STR_9(CODE[3]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 100
		 -> recebeByteLoRaWan@frameData(BANK4[100]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 200
		 -> recebeByteLoRaWan@frameData(BANK4[100]), SYS(CODE[5]), MAC(CODE[5]), TxLoRaWan@comando(BANK1[200]), 
		 -> DataRate@comando(BANK1[200]), SetBandWidth@comando(BANK1[200]), SetSpreadingFactor@comando(BANK1[200]), MacSave@comando(BANK1[200]), 
		 -> GetAdr@comando(BANK1[200]), SetAdr@comando(BANK1[200]), SetChannelLoRaWan@comando(BANK1[200]), MAC_JOIN_OTAA(CODE[10]), 
		 -> SYS_RESET(CODE[6]), SetAppKey@comando(BANK1[200]), SetAppEUI@comando(BANK1[200]), SetDevEUI@comando(BANK1[200]), 
		 -> GetDnctr@comando(BANK1[200]), STR_23(CODE[16]), STR_22(CODE[7]), STR_21(CODE[14]), 
		 -> STR_20(CODE[8]), STR_19(CODE[8]), STR_18(CODE[10]), STR_17(CODE[17]), 
		 -> STR_16(CODE[11]), STR_15(CODE[5]), STR_14(CODE[32]), STR_13(CODE[7]), 
		 -> STR_12(CODE[11]), STR_11(CODE[11]), STR_10(CODE[14]), STR_9(CODE[3]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 200
		 -> recebeByteLoRaWan@frameData(BANK4[100]), SYS(CODE[5]), MAC(CODE[5]), TxLoRaWan@comando(BANK1[200]), 
		 -> DataRate@comando(BANK1[200]), SetBandWidth@comando(BANK1[200]), SetSpreadingFactor@comando(BANK1[200]), MacSave@comando(BANK1[200]), 
		 -> GetAdr@comando(BANK1[200]), SetAdr@comando(BANK1[200]), SetChannelLoRaWan@comando(BANK1[200]), MAC_JOIN_OTAA(CODE[10]), 
		 -> SYS_RESET(CODE[6]), SetAppKey@comando(BANK1[200]), SetAppEUI@comando(BANK1[200]), SetDevEUI@comando(BANK1[200]), 
		 -> GetDnctr@comando(BANK1[200]), STR_23(CODE[16]), STR_22(CODE[7]), STR_21(CODE[14]), 
		 -> STR_20(CODE[8]), STR_19(CODE[8]), STR_18(CODE[10]), STR_17(CODE[17]), 
		 -> STR_16(CODE[11]), STR_15(CODE[5]), STR_14(CODE[32]), STR_13(CODE[7]), 
		 -> STR_12(CODE[11]), STR_11(CODE[11]), STR_10(CODE[14]), STR_9(CODE[3]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 100
		 -> recebeByteLoRaWan@frameData(BANK4[100]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 150
		 -> frameBuffer(BANK6[150]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 150
		 -> frameBuffer(BANK6[150]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_23(CODE[16]), STR_22(CODE[7]), STR_21(CODE[14]), STR_20(CODE[8]), 
		 -> STR_19(CODE[8]), STR_18(CODE[10]), STR_17(CODE[17]), STR_16(CODE[11]), 
		 -> STR_15(CODE[5]), STR_14(CODE[32]), STR_13(CODE[7]), STR_12(CODE[11]), 
		 -> STR_11(CODE[11]), STR_10(CODE[14]), STR_9(CODE[3]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 100
		 -> recebeByteLoRaWan@frameData(BANK4[100]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 50
		 -> TxLoRaWan@hex(BANK1[4]), sendError@f(COMRAM[30]), addSensorInt@f(COMRAM[30]), addSensorStr@f(COMRAM[30]), 
		 -> addSensorPulso@f(COMRAM[50]), addSensorNivel@f(COMRAM[18]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 200
		 -> TxLoRaWan@comando(BANK1[200]), frameBuffer(BANK6[150]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 200
		 -> TxLoRaWan@comando(BANK1[200]), frameBuffer(BANK6[150]), 

    memset@p1	PTR void  size(2) Largest target is 150
		 -> frameBuffer(BANK6[150]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 150
		 -> frameBuffer(BANK6[150]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 100
		 -> receivePacket(BANK5[100]), response(BANK3[100]), SetupPkt(BIGRAMhl[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 100
		 -> receivePacket(BANK5[100]), response(BANK3[100]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 2047
		 -> recebeByte@frameData(BANK7[100]), CtrlTrfData(BIGRAMhl[8]), RAM(DATA[2047]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 2047
		 -> recebeByte@frameData(BANK7[100]), CtrlTrfData(BIGRAMhl[8]), RAM(DATA[2047]), SetupPkt(BIGRAMhl[8]), 

    sprintf$5155	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_41(CODE[17]), STR_40(CODE[17]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_39(CODE[7]), MAC_TX_UNCNF(CODE[9]), MAC_TX_CNF(CODE[7]), MAC_SET_DR(CODE[7]), 
		 -> MAC_SET_BW(CODE[13]), MAC_SET_SF(CODE[16]), MAC_SAVE(CODE[5]), MAC_GET_ADR(CODE[8]), 
		 -> MAC_SET_ADR(CODE[8]), MAC_SET_CH_STATUS(CODE[14]), MAC_SET_APPKEY(CODE[11]), MAC_SET_APPEUI(CODE[11]), 
		 -> MAC_SET_DEVEUI(CODE[11]), MAC_GET_DNCTR(CODE[10]), STATE_ON(CODE[3]), STATE_OFF(CODE[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 92
		 -> STR_38(CODE[5]), STR_37(CODE[7]), STR_36(CODE[7]), STR_35(CODE[6]), 
		 -> STR_34(CODE[6]), STR_33(CODE[5]), STR_32(CODE[3]), STR_31(CODE[3]), 
		 -> STR_30(CODE[6]), STR_29(CODE[10]), STR_28(CODE[9]), STR_27(CODE[68]), 
		 -> STR_26(CODE[36]), STR_25(CODE[36]), STR_24(CODE[3]), STR_8(CODE[7]), 
		 -> STR_7(CODE[7]), STR_6(CODE[8]), STR_5(CODE[7]), STR_4(CODE[20]), 
		 -> STR_3(CODE[10]), STR_2(CODE[17]), STR_1(CODE[92]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 200
		 -> TxLoRaWan@hex(BANK1[4]), TxLoRaWan@comando(BANK1[200]), DataRate@comando(BANK1[200]), SetBandWidth@comando(BANK1[200]), 
		 -> SetSpreadingFactor@comando(BANK1[200]), MacSave@comando(BANK1[200]), GetAdr@comando(BANK1[200]), SetAdr@comando(BANK1[200]), 
		 -> SetChannelLoRaWan@comando(BANK1[200]), SetAppKey@comando(BANK1[200]), SetAppEUI@comando(BANK1[200]), SetDevEUI@comando(BANK1[200]), 
		 -> GetDnctr@comando(BANK1[200]), sendError@f(COMRAM[30]), addSensorFloat@f(COMRAM[30]), addSensorInt@f(COMRAM[30]), 
		 -> addSensorStr@f(COMRAM[30]), addSensorPulso@f(COMRAM[50]), addSensorNivel@f(COMRAM[18]), frameBuffer(BANK6[150]), 
		 -> main@data(BANK2[150]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 150
		 -> frameBuffer(BANK6[150]), 

    enviaComando@cmd	PTR const unsigned char  size(2) Largest target is 200
		 -> TxLoRaWan@comando(BANK1[200]), DataRate@comando(BANK1[200]), SetBandWidth@comando(BANK1[200]), SetSpreadingFactor@comando(BANK1[200]), 
		 -> MacSave@comando(BANK1[200]), GetAdr@comando(BANK1[200]), SetAdr@comando(BANK1[200]), SetChannelLoRaWan@comando(BANK1[200]), 
		 -> MAC_JOIN_OTAA(CODE[10]), SYS_RESET(CODE[6]), SetAppKey@comando(BANK1[200]), SetAppEUI@comando(BANK1[200]), 
		 -> SetDevEUI@comando(BANK1[200]), GetDnctr@comando(BANK1[200]), 

    TxLoRaWan@data	PTR const unsigned char  size(2) Largest target is 22
		 -> main@dadoPoco(BANK2[22]), 

    SetAdr@state	PTR const unsigned char  size(2) Largest target is 4
		 -> STATE_ON(CODE[3]), STATE_OFF(CODE[4]), 

    MSG_LORAWAN	PTR const unsigned char [15] size(2) Largest target is 32
		 -> STR_23(CODE[16]), STR_22(CODE[7]), STR_21(CODE[14]), STR_20(CODE[8]), 
		 -> STR_19(CODE[8]), STR_18(CODE[10]), STR_17(CODE[17]), STR_16(CODE[11]), 
		 -> STR_15(CODE[5]), STR_14(CODE[32]), STR_13(CODE[7]), STR_12(CODE[11]), 
		 -> STR_11(CODE[11]), STR_10(CODE[14]), STR_9(CODE[3]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 200
		 -> TxLoRaWan@comando(BANK1[200]), frameBuffer(BANK6[150]), 

    putsUSBUSART@data	PTR unsigned char  size(2) Largest target is 150
		 -> main@data(BANK2[150]), 

    putsUSBUSART@pData	PTR unsigned char  size(2) Largest target is 150
		 -> main@data(BANK2[150]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S2362_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S2362_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S2362_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S2362_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 100
		 -> receivePacket(BANK5[100]), response(BANK3[100]), SetupPkt(BIGRAMhl[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BIGRAMhl[64]), cdc_data_rx(BIGRAMhh[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S541$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S531$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S531$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S507$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S507$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S507$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S507$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 150
		 -> frameBuffer(BANK6[150]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _SYS_InterruptHigh in COMRAM

    _SYS_InterruptHigh->_USBDeviceTasks
    _recebeByteLoRaWan->_strncmp
    _converter->_toupper
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    _main->_TxLoRaWan
    _setup_uart->___lldiv
    _le_pulsos->_retornaDado
    _le_AD->___ftdiv
    ___ftdiv->___ftmul
    ___awtoft->___ftpack
    _verificaUSB->_CDCTxService
    _CDCTxService->_USBTransferOnePacket
    _USBDeviceInit->_memset
    _TxLoRaWan->_sprintf
    _ResetModuloLoRaWan->_enviaComando
    _JoinLoRaWan->_enviaComando
    _SetSpreadingFactor->_sprintf
    _SetDevEUI->_sprintf
    _SetChannelLoRaWan->_sprintf
    _SetBandWidth->_sprintf
    _SetAppKey->_sprintf
    _SetAppEUI->_sprintf
    _SetAdr->_sprintf
    _MacSave->_sprintf
    _DataRate->_sprintf
    _sprintf->___fttol
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___ftadd
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->_le_AD
    ___ftsub->___ftadd
    ___ftadd->___wmul
    _enviaComando->_parseLoRaWan
    _parseLoRaWan->_millis

Critical Paths under _SYS_InterruptHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_TxLoRaWan
    _TxLoRaWan->_sprintf
    _SetSpreadingFactor->_sprintf
    _SetDevEUI->_sprintf
    _SetChannelLoRaWan->_sprintf
    _SetBandWidth->_sprintf
    _SetAppKey->_sprintf
    _SetAppEUI->_sprintf
    _SetAdr->_sprintf
    _MacSave->_sprintf
    _DataRate->_sprintf

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _SYS_InterruptHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _SYS_InterruptHigh in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               211   211      0 1065862
                                            150 BANK0     10    10      0
                                              0 BANK2    200   200      0
                           _DataRate
                            _MacSave
                             _SetAdr
                          _SetAppEUI
                          _SetAppKey
                       _SetBandWidth
                  _SetChannelLoRaWan
                          _SetDevEUI
                 _SetSpreadingFactor
                          _TxLoRaWan
                      _USBDeviceInit
                            ___ftmul
                            ___fttol
                              _delay
                              _le_AD
                          _le_pulsos
                             _millis
                              _putch
                       _putsUSBUSART
                        _retornaDado
                           _setup_AD
                         _setup_ccp1
                       _setup_pulsos
                         _setup_uart
                            _sprintf
                        _verificaUSB
 ---------------------------------------------------------------------------------
 (1) _setup_uart                                           8     4      4    1409
                                             13 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (1) _setup_pulsos                                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup_ccp1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup_AD                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _putsUSBUSART                                         5     3      2     202
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _le_pulsos                                            9     5      4     492
                                              5 BANK0      9     5      4
                        _retornaDado (ARG)
 ---------------------------------------------------------------------------------
 (1) _le_AD                                               18    15      3   17964
                                             62 BANK0     18    15      3
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    3544
                                             47 BANK0     15     9      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             4     1      3    3114
                                              8 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _delay                                               16    12      4    1927
                                             13 BANK0     16    12      4
                             _millis
                        _verificaUSB
 ---------------------------------------------------------------------------------
 (1) _verificaUSB                                          0     0      0    1770
                       _CDCTxService
                    _USBDeviceAttach
                    _USBDeviceDetach
 ---------------------------------------------------------------------------------
 (2) _USBDeviceDetach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CDCTxService                                         2     2      0    1770
                                             11 BANK0      2     2      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBTransferOnePacket                                11     7      4    1633
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1399
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6    1197
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _TxLoRaWan                                          212   208      4  108444
                                            145 BANK0      5     1      4
                                             32 BANK1    207   207      0
                        _JoinLoRaWan
                 _ResetModuloLoRaWan
                       _enviaComando
                       _parseLoRaWan
                        _retornaDado
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (2) _strcat                                               6     2      4    1166
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _retornaDado                                          5     4      1    7054
                                              0 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (2) _ResetModuloLoRaWan                                   1     1      0    3530
                                             39 BANK0      1     1      0
                       _enviaComando
 ---------------------------------------------------------------------------------
 (2) _JoinLoRaWan                                          1     1      0    3647
                                             39 BANK0      1     1      0
                       _enviaComando
                       _parseLoRaWan
 ---------------------------------------------------------------------------------
 (1) _SetSpreadingFactor                                 202   202      0   91945
                                             32 BANK1    202   202      0
                       _enviaComando
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _SetDevEUI                                          201   201      0   91923
                                             32 BANK1    201   201      0
                       _enviaComando
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _SetChannelLoRaWan                                  203   202      1   92367
                                            145 BANK0      1     0      1
                                             32 BANK1    202   202      0
                       _enviaComando
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _SetBandWidth                                       205   203      2   92123
                                            145 BANK0      3     1      2
                                             32 BANK1    202   202      0
                       _enviaComando
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _SetAppKey                                          201   201      0   91923
                                             32 BANK1    201   201      0
                       _enviaComando
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _SetAppEUI                                          201   201      0   91923
                                             32 BANK1    201   201      0
                       _enviaComando
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _SetAdr                                             203   201      2   92301
                                            145 BANK0      2     0      2
                                             32 BANK1    201   201      0
                       _enviaComando
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _MacSave                                            201   201      0   91923
                                             32 BANK1    201   201      0
                       _enviaComando
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _DataRate                                           205   203      2   92212
                                            145 BANK0      3     1      2
                                             32 BANK1    202   202      0
                       _enviaComando
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             83    39     44   88326
                                             95 BANK0     50     6     44
                                              0 BANK1     32    32      0
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                                7     4      3   21782
                                             47 BANK0      7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              10     7      3   21584
                                             47 BANK0     10     7      3
                            ___awdiv
                            ___awmod
                            ___ftadd (ARG)
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4   10923
                                             14 BANK0      6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    6438
                                             32 BANK0     15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1898
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    2080
                                              6 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         15     9      6     481
                                              0 BANK0     15     9      6
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          12     6      6     624
                                              0 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             9     5      4    3092
                                              8 BANK0      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8    1049
                                             13 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8    1230
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     697
                                             80 BANK0     15    11      4
                            ___ftmul (ARG)
                              _le_AD (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    5035
                                             32 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    4638
                                             20 BANK0     12     6      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2934
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     134
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     670
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (2) _enviaComando                                        11     8      3    3507
                                             28 BANK0     11     8      3
                    _initRecebeDados
                       _parseLoRaWan
                              _putch
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               6     4      2     672
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _putch                                                1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _parseLoRaWan                                        20    20      0     117
                                              8 BANK0     20    20      0
                             _millis
 ---------------------------------------------------------------------------------
 (1) _millis                                               8     4      4      23
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _initRecebeDados                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _SYS_InterruptHigh                                   27    27      0   33452
                                             28 COMRAM    27    27      0
                     _USBDeviceTasks
                              _getch
                  _recebeByteLoRaWan
 ---------------------------------------------------------------------------------
 (7) _recebeByteLoRaWan                                   10    10      0    2515
                                              9 COMRAM    10    10      0
                          _converter
                             _strcmp
                             _strcpy
                            _strncmp
                           i2_strlen
 ---------------------------------------------------------------------------------
 (8) i2_strlen                                             6     4      2     220
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) _strncmp                                              9     3      6     668
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (8) _strcpy                                               6     2      4     253
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) _strcmp                                               6     2      4     269
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) _converter                                            5     4      1     675
                                              1 COMRAM     5     4      1
                            _toupper
 ---------------------------------------------------------------------------------
 (9) _toupper                                              1     1      0      67
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _getch                                                3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (7) _USBDeviceTasks                                       1     1      0   30623
                                             27 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (8) i2_USBDeviceInit                                      1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (8) _USBWakeFromSuspend                                   0     0      0    3879
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBSuspend                                           0     0      0    3879
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBStallHandler                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPService                                     1     1      0   18330
                                             26 COMRAM     1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (9) _memcpy                                              11     5      6    1478
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfSetupHandler                               0     0      0   16623
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (10) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (11) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (10) _USBCheckStdRequest                                  0     0      0   12652
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (11) _USBStdSetCfgHandler                                 1     1      0    4377
                                             20 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (9) i2_memset                                             8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (11) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (11) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (11) _USBStdFeatureReqHandler                             6     6      0    4350
                                             20 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6    3879
                                             12 COMRAM     8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (9) _USBCheckCDCRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _CDCInitEP                                            0     0      0    1187
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (10) i2_USBTransferOnePacket                             11     7      4     454
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (10) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (11) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfOutHandler                                 0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (10) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (11) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfInHandler                                  1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (12) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DataRate
     _enviaComando
       _initRecebeDados
       _parseLoRaWan
         _millis
       _putch
       _strlen
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _le_AD (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _MacSave
     _enviaComando
       _initRecebeDados
       _parseLoRaWan
         _millis
       _putch
       _strlen
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _le_AD (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _SetAdr
     _enviaComando
       _initRecebeDados
       _parseLoRaWan
         _millis
       _putch
       _strlen
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _le_AD (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _SetAppEUI
     _enviaComando
       _initRecebeDados
       _parseLoRaWan
         _millis
       _putch
       _strlen
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _le_AD (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _SetAppKey
     _enviaComando
       _initRecebeDados
       _parseLoRaWan
         _millis
       _putch
       _strlen
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _le_AD (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _SetBandWidth
     _enviaComando
       _initRecebeDados
       _parseLoRaWan
         _millis
       _putch
       _strlen
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _le_AD (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _SetChannelLoRaWan
     _enviaComando
       _initRecebeDados
       _parseLoRaWan
         _millis
       _putch
       _strlen
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _le_AD (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _SetDevEUI
     _enviaComando
       _initRecebeDados
       _parseLoRaWan
         _millis
       _putch
       _strlen
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _le_AD (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _SetSpreadingFactor
     _enviaComando
       _initRecebeDados
       _parseLoRaWan
         _millis
       _putch
       _strlen
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _le_AD (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _TxLoRaWan
     _JoinLoRaWan
       _enviaComando
         _initRecebeDados
         _parseLoRaWan
           _millis
         _putch
         _strlen
       _parseLoRaWan
         _millis
     _ResetModuloLoRaWan
       _enviaComando
         _initRecebeDados
         _parseLoRaWan
           _millis
         _putch
         _strlen
     _enviaComando
       _initRecebeDados
       _parseLoRaWan
         _millis
       _putch
       _strlen
     _parseLoRaWan
       _millis
     _retornaDado
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _le_AD (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     _strcat
   _USBDeviceInit
     _memset
   ___ftmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftpack (ARG)
     ___wmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
   ___fttol
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _le_AD (ARG)
       ___awtoft
         ___ftpack
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   _delay
     _millis
     _verificaUSB
       _CDCTxService
         _USBTransferOnePacket
       _USBDeviceAttach
       _USBDeviceDetach
   _le_AD
     ___awtoft
       ___ftpack
     ___ftadd
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   _le_pulsos
     _retornaDado (ARG)
   _millis
   _putch
   _putsUSBUSART
   _retornaDado
   _setup_AD
   _setup_ccp1
   _setup_pulsos
   _setup_uart
     ___lldiv
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftneg
     ___ftsub
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _le_AD (ARG)
         ___awtoft
           ___ftpack
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___lltoft
       ___ftpack
     ___wmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftadd (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   _verificaUSB
     _CDCTxService
       _USBTransferOnePacket
     _USBDeviceAttach
     _USBDeviceDetach

 _SYS_InterruptHigh (ROOT)
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _USBCheckCDCRequest
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _USBCheckCDCRequest
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _USBCheckCDCRequest
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _memcpy
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _USBCheckCDCRequest
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _USBCheckCDCRequest
     _USER_USB_CALLBACK_EVENT_HANDLER
       _CDCInitEP
         _USBEnableEndpoint
           _USBConfigureEndpoint
         i2_USBTransferOnePacket
       _USBCheckCDCRequest
     i2_USBDeviceInit
       i2_memset
   _getch
   _recebeByteLoRaWan
     _converter
       _toupper
     _strcmp
     _strcpy
     _strncmp
     i2_strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            3FF      0       0      23        0.0%
BIGRAMhh           280      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0      FA      20       97.7%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0      FA      18       97.7%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      E5      11       89.5%
BITBANK2           100      0       0       8        0.0%
BANK2              100     C8     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     EF     100       7      100.0%
BIGRAMhl            C0      0       0      22        0.0%
BITBANK4            C0      0       0      12        0.0%
BANK4               C0      0      64      13       52.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     A0      A0       5      100.0%
BITBANK5            80      0       0      14        0.0%
BANK5               80      0      64      15       78.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     37      5E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     69F      16        0.0%
DATA                 0      0     69F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Wed Mar 27 11:57:10 2019

                              _USB_SD_Ptr 7C69                              ___awdiv@sign 006B  
                             __CFG_BOR$ON 000000                                        _cs 02E2  
                recebeByte@estadoRecepcao 02E4                             _USBDeviceInit 2AAC  
                     ___wmul@multiplicand 0070                               __CFG_BORV$0 000000  
                      __size_of_CDCInitEP 0064                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                              _putsUSBUSART 5054  
                            ___ftadd@exp1 007F                              ___ftadd@exp2 007E  
    USER_USB_CALLBACK_EVENT_HANDLER@event 000D      USER_USB_CALLBACK_EVENT_HANDLER@pdata 000F  
                            ___ftadd@sign 007D                                       l400 2B18  
                                     l402 2B56               __end_of_USBStdGetDscHandler 3432  
                                     l441 3600                                       l460 548A  
                                     l437 3558                                       l439 3582  
                                     l459 548C                                       l398 2AF2  
                                     l840 5070                                       l860 2EE0  
                                     l852 2E82                                       _BDT 000400  
                                     l870 2F6A                                       l862 2F24  
                                     l854 2E8E                                       l838 5062  
                                     l871 2F70                                       l863 2F02  
                                     l855 2E98                                       l856 2EC8  
                                     l858 2F90                                       l866 2F50  
                                     l867 2F2E                                       l859 2EDC  
                                     _MAC 7DC5                              __CFG_CPB$OFF 000000  
                            __CFG_CPD$OFF 000000                                       _UIE 000F69  
                                     _UIR 000F68                                       _SYS 7DBB  
                                     _aaa 02F3                   __end_of_initRecebeDados 56BE  
                              _USBSuspend 54F6                              ___awmod@sign 0065  
                    USBStdSetCfgHandler@i 0015                                       prod 000FF3  
                                     wreg 000FE8                            _USBDeviceTasks 2F94  
                          _USBDeviceState 0059                     ??_USBCtrlTrfRxService 0001  
                __size_ofi2_USBDeviceInit 0140                  USBEnableEndpoint@options 0009  
                            __CFG_LVP$OFF 000000                              ___ftdiv@cntr 0098  
                            ___ftdiv@sign 009D                              __CFG_WDT$OFF 000000  
                                    l1042 54A4                                      l1051 4C32  
                                    l1044 54B0                                      l1052 4C2E  
                                    l1045 54BE                                      l1061 0EAE  
                                    l1070 1498                                      l1071 1486  
                                    l1063 0ECE                                      l1080 163C  
                                    l1081 16EA                                      l1073 15D2  
                                    l1065 0F0E                                      l1066 15E4  
                                    l1067 1478                                      l1059 0E40  
                                    l3020 4218                                      l1076 15C2  
                                    l1068 1466                                      l3021 4202  
                                    l3101 2E4E                                      l3102 2E42  
                                    l1078 15E0                                      l3023 4240  
                                    l3024 4236                                      l3120 3AFE  
                                    l2312 1C1A                                      l3017 41E4  
                                    l3113 3A6C                                      l2313 1C3E  
                                    l3106 479A                                      l3018 41DA  
                                    l3130 525C                                      l2314 1F4C  
                                    l2322 1F48                                      l2402 1EB6  
                                    l3107 47CA                                      l3115 3A94  
                                    l2331 1CC6                                      l2315 1C46  
                                    l2091 3CD0                                      l3124 55E6  
                                    l3052 297C                                      l3116 3AC6  
                                    l2420 1F9A                                      l2324 1C9C  
                                    l2316 1C72                                      l2092 3C28  
                                    l3117 3AD6                                      l2421 1F70  
                                    l2413 1EFE                                      l2341 1D04  
                                    l3062 29D8                                      l3142 3A14  
                                    l3134 3978                                      l2262 4E72  
                                    l2094 3CEC                                      l3071 2A16  
                                    l3063 29CE                                      l3143 3A08  
                                    l3119 3AEE                                      l2423 1F82  
                                    l2407 1ECC                                      l2095 3C52  
                                    l2440 368C                                      l3072 2A0C  
                                    l3048 2952                                      l3136 39F0  
                                    l3400 510C                                      l2336 1CEE  
                                    l2441 36B0                                      l3057 29E2  
                                    l3145 3A30                                      l3137 39E0  
                                    l2353 1D5E                                      l3081 3B62  
                                    l2097 3C7C                                      l2434 36CC  
                                    l2442 3696                                      l3074 2A3A  
                                    l2290 4D50                                      l2282 53EA  
                                    l2346 1D36                                      l2451 433C  
                                    l2435 364A                                      l3075 2A56  
                                    l3091 2D8C                                      l2283 53D4  
                                    l2427 1F88                                      l2363 1D9C  
                                    l3083 3B8A                                      l2099 3CA6  
                                    l2452 43A2                                      l3420 4FB6  
                                    l2444 371C                                      l2436 3670  
                                    l3076 2A86                                      l3180 4A98  
                                    l3092 2DC6                                      l2380 1E1E  
                                    l3084 3BC8                USBConfigureEndpoint@handle 0007  
                                    l2445 36E6                                      l2437 3656  
                                    l3093 2DEE                                      l3149 56A0  
                                    l2285 53E6                                      l2429 1F96  
                                    l3085 3BEE                                      l3190 4DBE  
                                    l2390 1E66                                      l2358 1D86  
                                    l2439 36DC                                      l3175 4A56  
                                    l3095 2E2A                                      l2631 19D2  
                                    l2711 06CE                                      l2703 05DC  
                                    l2375 1DF6                                      l2456 43BE  
                                    l3176 4A4A                                      l3096 2E1A  
                                    l2632 18F4                                      l2720 0730  
                                    l2712 06B4                                      l2368 1DCE  
                                    l3185 4D88                                      l3089 2D60  
                                    l2625 2622                                      l2289 4D2C  
                                    l2385 1E34                                      l3186 4D7C  
                                    l2722 07F0                                      l2642 0020  
                                    l3258 54E2                                      l3419 4FBC  
                                    l3179 4A8A                                      l2635 19AC  
                                    l2731 099C                                      l2723 07D6  
                                    l2715 06FA                                      l2707 0660  
                                    l2651 008C                                      l2643 003E  
                                    l3259 54D0                                      l3196 4EA8  
                                    l2628 26F8                                      l2636 1B0A  
                                    l2740 0A64                                      l2732 0982  
                                    l2716 06E0                                      l2708 0682  
                                    l3189 4DB0                                      l3197 4E9C  
                                    l2725 0814                                      l2653 0174  
                                    l2645 005C                                      l2397 1E8E  
                                    l2638 1BC2                                      l2742 0AF6  
                                    l2734 0A1E                                      l2726 0818  
                                    l2670 01B8                                      l2662 0182  
                                    l2654 015E                                      l2646 0052  
                                    l2743 0A7E                                      l2735 09E2  
                                    l2727 083C                                      l2719 07CA  
                                    l2671 01C8                                      l2663 0186  
                                    l2655 011C                                      l2760 0BE6  
                                    l2728 0976                                      l2664 02E0  
                                    l2680 0270                                      l2672 01C2  
                                    l2761 0BF0                                      l2753 0B2E  
                                    l2729 088E                                      l2681 0250  
                                    l2762 0C44                                      l2690 043E  
                                    l2674 020A                                      l2763 0C1E  
                                    l2755 0B58                                      l2739 0A40  
                                    l2659 028C                                      l2675 0220  
                                    l2667 018A                                      l2772 0DD2  
                                    l2780 0D7A                                      l2756 0B84  
                                    l2748 0B0C                                      l2692 0468  
                                    l2684 0286                                      l2668 018C  
                                    l3396 50FC                                      l2749 0ABA  
                                    l2685 09A6                                      l2693 04A8  
                                    l2677 023C                                      l2669 0190  
                                    l3397 50F6                                      l1981 314A  
                                    l2774 0DA8                                      l2758 0BB0  
                                    l2694 0576                                      l2686 02F4  
                                    l2678 022A                                      l1982 31E0  
                                    l1974 30D2                                      l2775 0C96  
                                    l2759 0BBA                                      l2687 0336  
                                    l3399 5116                                      l1975 30DC  
                                    l2960 497E                                      l1976 30FC  
                                    l2961 4988                                      l2953 4930  
                                    l2777 0DC0                                      l2697 051E  
                                    l2689 03D4                                      l2962 4996  
                                    l2954 4940                                      l2970 4CBA  
                                    l2778 0D16                                      l1979 3100  
                                    l2956 495E                                      l2957 4956  
                                    l2973 4CDA                                      l2981 5398  
                                    l2974 4CE4                                      l2966 4CA0  
                                    l2991 32DC                                      l2975 4CF2  
                                    l2967 4CAC                                      l2992 32CC  
                                    l2985 320E                                      l2969 4CC2  
                                    l2987 322C                                      l2988 326E  
                                    l2997 3300                                      l2989 329E  
                                    l2998 32F4                                      _ADIE 007CEE  
                                    _ADIF 007CF6                                      l9210 07D6  
                                    l9130 04F4                                      l9122 04A8  
                                    l8084 56F4                                      l9060 0250  
                                    l9302 0ABE                                      l9150 05E0  
                                    l9054 022A               __size_of_ResetModuloLoRaWan 0026  
                                    l7458 47F6                                      l9186 06E0  
                                    l9178 06B4                                      _ADON 007E10  
                                    l9390 0DA8                                      l9288 0A82  
                                    l9910 2AEA                                      l8866 54D0  
                                    STR_1 7DEB                                      STR_2 7F16  
                                    STR_3 7F88                                      l9938 2B4E  
                                    STR_4 7ECF                                      STR_5 7FDD  
                                    STR_6 7FAB                                      STR_7 7FD6  
                                    STR_8 7FCF                                      STR_9 7F85  
                                    _GIEH 007F97                                      u7000 4CC6  
                                    _RCIE 007CED                                      u6340 41CC  
                                    _RCIF 007CF5                                      u7310 3712  
                                    u6600 43B0                                      u8200 04F4  
                                    u8120 0370                                      u7240 2F58  
                                    u6620 4FDC                                      u6380 424A  
                                    u7500 2E54                                      u8300 0708  
                                    u7317 3708                                      u7421 2D44  
                                    u8125 0366                                      u6710 296E  
                   ??_USBCtrlTrfTxService 0001                                      u8240 0618  
                                    u8160 047A                                      u6641 2910  
                                    u7441 2D70                                      u6810 2A1E  
                                    u8330 07FE                                      u8170 04BA  
                                    u6627 4FD2                                      u6651 2924  
                                    u6740 29AC                                      u8340 080E  
                                    u7631 395C                                      _UCFG 000F6F  
                                    u6680 2944                                      u7720 4A5A  
                                    u7650 3996                                      u7570 3306  
                                    u8610 0C4C                                      u6851 3A54  
                                    u6780 29EA                                      u6940 4962  
                                    u8620 0C6E                                      _UEP0 000F70  
                                    _UEP1 000F71                                      u7750 4D8C  
                                    u7655 398E                                      u6871 3A7C  
                                    u9520 2BB2                                      u9600 42C6  
                                    u7690 3A1A                                      u8650 0DE4  
                                    u7930 54BA                                      _UEIE 000F6B  
                                    u8660 0E02                                      u9550 508A  
                                    u8840 55CA                                      u9608 42CA  
                                    u7954 4E68                                      u9490 2B0E  
                                    u9570 4278                                      u7955 4E64  
                                    u7980 00F4                                      u8860 53E2  
                                    u9660 3126                                      u9580 4292  
                                    u8941 3B4A                                      u9750 1C56  
                                    u9590 42AC                                      _UEIR 000F6A  
                                    _UCON 000F6D                                      u8961 3B72  
                                    u9578 427C                                      u9675 312A  
                                    u9588 4296                                      u9950 1D30  
                                    u9790 1C84                                      u9598 42B0  
                                    _TXIF 007CF4                              __CFG_PWRT$ON 000000  
                         _CDCDataInHandle 02D8    USBStdFeatureReqHandler@current_ep_data 0018  
                                    _pDst 034C                                      _data 0600  
                         _USBDeviceDetach 56E2                                      _main 0E10  
                            ___ftpack@arg 0060                         JoinLoRaWan@status 0087  
                ??i2_USBTransferOnePacket 0005                              ___ftpack@exp 0063  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    indf0 000FEF                                      fsr2h 000FDA  
                                    fsr0l 000FE9                                      indf1 000FE7  
                             _BaudRateGen 0326                                      indf2 000FDF  
                                    fsr1l 000FE1                                      fsr2l 000FD9  
                         _USBDeviceAttach 5462                                      btemp 005F  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 000E                             __CFG_IESO$OFF 000000  
                            _sprintf$5155 0103                __end_of_USBCheckStdRequest 3EB4  
                         __end_of_MacSave 542C                              main@dadoPoco 02B2  
                  ??_USBCtrlTrfOutHandler 0003                              _sprintf$5961 0100  
                           __CFG_MCLRE$ON 000000                              ___ftmul@cntr 008D  
                            ___param_bank 000000                              ___ftmul@sign 008E  
               ??_USBStdFeatureReqHandler 0015                             ??_JoinLoRaWan 0087  
                            __channelMask 031E                             le_AD@corrente 00A6  
                ??_USBStdGetStatusHandler 0001                              ___fttol@exp1 00BE  
                        __end_of_MAC_SAVE 7DC5                              ___fttol@lval 00BA  
                          ?_USBDeviceInit 0001                             ?_enviaComando 007C  
                           __CFG_PLLDIV$5 000000                                     l10130 3126  
                                   l10118 30EC                                     l10722 0EA6  
                                   l10706 0E70                                     l10734 0EC6  
                                   l10694 0E30                              _sourceMacLow 0342  
                            main@contador 02A1                                     ?_main 0001  
                         __end_of___awdiv 49A0                                     _EEADR 000FA9  
                         __end_of___ftadd 2AAC                                     STR_10 7F37  
                                   STR_11 7F53                                     STR_20 7FA3  
                                   STR_12 7F69                                     STR_21 7F45  
                                   STR_13 7FC8                                     STR_30 7FEA  
                                   STR_22 7FC1                                     STR_14 7EAF  
                                   STR_23 7F27                                     STR_15 7FFA  
                                   STR_32 7FED                                     STR_40 7EE3  
                                   STR_16 7F5E                                     STR_33 7FF5  
                                   STR_41 7EF4                                     STR_25 7E8B  
                                   STR_17 7F05                                     STR_26 7E8B  
                                   STR_34 7FE4                                     STR_18 7F7E  
                                   STR_35 7FE4                                     STR_27 7E47  
                                   STR_19 7F9B                                     STR_36 7FBA  
                                   STR_28 7F92                           __end_of___awmod 4CFC  
                                   STR_37 7FBA                                     STR_29 7F74  
                                   STR_38 7FF0                                     STR_39 7FB3  
       __size_of_USBCtrlEPServiceComplete 0100                           __end_of___ftdiv 3C20  
                         __end_of___ftneg 55F4                           __end_of___lldiv 4AAA  
                                   u10100 1DC8                                     u11005 12B6  
                                   u10400 1EF8                                     u11025 137E  
                                   u10250 1E60                                     u11035 1398  
                                   u10420 1F58                           __end_of___ftmul 3B38  
                                   u11045 142C                                     u10430 1F7E  
                                   u11055 1446                                     _T0CON 000FD5  
                                   u11161 174A                           ___awdiv@divisor 0068  
                                   _T1CON 000FCD                           __end_of___llmod 4DD0  
                  __end_of_USBDeviceTasks 30C2                           __end_of___ftsub 5286  
                                   u11507 0E5A                           __end_of___fttol 3A42  
                                   u10920 0E70                                     u10915 0E4C  
                                   u10940 0EC2                                     u10916 0E4E  
                                   u10960 0EE2                                     _T3CON 000FB1  
                                   u10975 0F30                                     u10976 0F32  
                                   u10985 11AC                 ?_USBCtrlEPServiceComplete 0001  
                                   u10995 128C                            __CFG_DEBUG$OFF 000000  
                                   i2l120 2808                                     i2l121 2836  
                                   i2l122 2864                                     i2l123 2892  
                                   i2l125 28AC                                     i2l127 28B2  
                                   i2l119 289C                                     i2l400 2C5A  
                                   i2l402 2C96                                     i2l410 2FBC  
                                   i2l251 4F52                                     i2l500 3EDC  
                                   i2l420 3048                                     i2l412 2FCE  
                                   i2l245 4F5E                                     i2l253 4F58  
                                   i2l413 2FD8                                     i2l502 3F3A  
                                   i2l422 3058                                     i2l503 3F04  
                                   i2l415 2FFC                                     i2l432 5356  
                                   i2l408 2FA8                                     i2l513 3480  
                                   i2l433 5364                                     i2l441 3806  
                                   i2l425 307E                                     i2l417 3010  
                                   i2l409 2FB4                                     i2l506 3F78  
                                   i2l514 345E                                     i2l418 301A  
                                   i2l507 3F42                                     i2l611 3DF4  
                                   i2l427 309E                                     i2l419 303E  
                                   i2l516 34F4                                     i2l540 340E  
                                   i2l612 3DFA                                     i2l517 34DA  
                                   i2l437 375E                                     i2l533 341A  
                                   i2l525 3D48                                     i2l613 3E00  
                                   i2l429 30BA                                     i2l630 2324  
                                   i2l542 3414                                     i2l534 3328  
                                   i2l550 4592                                     i2l614 3E12  
                                   i2l439 3788                                     i2l551 4522  
                                   i2l527 3DBA                                     i2l615 3E18  
                                   i2l640 241E                                     i2l632 2346  
                                   i2l536 333A                                     i2l552 4526  
                                   i2l608 3E70                                     i2l560 52C4  
                                   i2l641 2498                                     i2l625 226E  
                                   i2l537 33BA                                     i2l553 4540  
                                   i2l617 3E1E                                     i2l609 3DEC  
                                   i2l473 45F6                                     i2l561 52C2  
                                   i2l802 4444                                     i2l634 23C6  
                                   i2l626 2274                                     i2l546 457C  
                                   i2l618 3E3A                                     i2l467 3FCA  
                                   i2l803 43E8                                     i2l539 33C0  
                                   i2l547 4512                                     i2l619 3E52  
                                   i2l475 460C                                     i2l644 2452  
                                   i2l636 2390                                     i2l628 22DC  
                                   i2l484 38C6                                     i2l805 43FE  
                                   i2l637 23AC                                     i2l485 3870  
                                   i2l806 440A                                     i2l646 24A4  
                                   i2l574 46C4                                     i2l398 2C34  
                                   i2l479 4736                                     i2l807 4426  
                                   i2l639 2412                                     i2l575 46BE  
                                   i2l808 443C                                     i2l568 5456  
                                   i2l593 407C                                     i2l585 4F00  
                                   i2l489 38F2                                     i2l569 5454  
                                   i2l498 3ED2                                     i2l594 4080  
                                   i2l595 40FA                                     i2l587 4F4A  
                                   i2l596 40C0                                     i2l598 40E0  
                                   _UADDR 000F6E                           ___awdiv@counter 006A  
                                   _RCREG 000FAE                                     _RCSTA 000FAB  
                                   _TMR1H 000FCF                                     _TMR1L 000FCE  
                                   _SPBRG 000FAF                             __CFG_USBDIV$2 000000  
                                   _USBIE 007D05                                     _USTAT 000F6C  
                                   _TXREG 000FAD        __size_of_USBCtrlEPAllowStatusStage 00C8  
                            ___lltoft@exp 0070                            __CFG_FCMEN$OFF 000000  
         __end_of_USBCtrlEPAllowDataStage 463E                                     _sd000 7DCA  
                                   _sd001 7CE8                                     _sd002 7CB4  
          ?_USBIncrement1msInternalTimers 0001                                     _dig_1 02E0  
                                   _dig_2 02DE                                     _dig_3 02DC  
                                   _dig_4 02DA                                     _le_AD 30C2  
                           ___awtoft@sign 006B                                     _delay 4C18  
                              i2memset@p1 0001                          __end_of_STATE_ON 7DD5  
                                   _getch 561A                           __end_of_dpowers 7BFB  
                                   _scale 17B0                           __end_of_isdigit 56A8  
                                   _randx 03E1                                     _ticks 032A  
                           ___ftpack@sign 0064                                     _putch 56F0  
                                   main@i 02A9                __size_of_SetChannelLoRaWan 006C  
                                   pclath 000FFA                                     tablat 000FF5  
                           _gs_encryption 7DDD                                     plusw2 000FDB  
                       __end_of_CDCInitEP 4E34                                     status 000FD8  
                        __end_of_DataRate 51BE                                     wtemp6 0060  
                         __end_of_sprintf 0E10                           __end_of_strncmp 4B2C  
                         __end_of_toupper 56D2                          __end_ofi2_memset 5580  
                          _tamanhoCommand 01EF              __size_of_USBStdSetCfgHandler 00DC  
                        __end_ofi2_strlen 5054                             setup_uart@brg 0071  
                         __initialization 488C                              __end_of_main 17B0  
                   _control_signal_bitmap 02E5                            ??_enviaComando 007F  
               __size_of_USBCtrlEPService 0096                                    ??_main 00F6  
                           ___fttol@sign1 00B9                       __end_of_JoinLoRaWan 53F6  
                           __activetblptr 000002                           ?_USBDeviceTasks 0001  
                  SetChannelLoRaWan@canal 01E9                               ?_USBSuspend 0001  
                      recebeByte@sizeData 004C                      __size_of__tdiv_to_l_ 0134  
                        ?_initRecebeDados 0001                                i2strlen@cp 0005  
                      recebeByteLoRaWan@b 0010                        recebeByteLoRaWan@i 0011  
                            _cdc_mem_type 02E6                   __end_of_USBDeviceDetach 56F0  
                           _sourceMacHigh 033E                             ?_SetBandWidth 00F1  
                                  ?_le_AD 009E                                    ?_delay 006D  
                                  ?_getch 0001                   __end_of_USBDeviceAttach 5496  
                                  _ADCON0 000FC2                                    _ADCON1 000FC1  
                                  _ADCON2 000FC0                          _CDCDataOutHandle 01F3  
                                  _CCP1IE 007CEA                                    _CCP1IF 007CF2  
                        ___llmod@dividend 006D                                    ?_scale 008F  
                                  _ADRESH 000FC4                                    _ADRESL 000FC3  
                                  _EEDATA 000FA8                                    _CCPR1H 000FBF  
                                  _CCPR1L 000FBE                                    _EECON2 000FA7  
                        ___awdiv@dividend 0066                          __end_of___awtoft 53BC  
                                  ?_putch 0001                          __end_of___ftpack 426A  
                        __end_of___lltoft 4EF2                     __size_of_CDCTxService 012E  
                                  i2l1221 5622                                    i2l1223 563C  
                                  i2l1481 4A06                                    i2l1483 4A18  
                                  i2l3252 51F0                                    i2l1484 4A22  
                                  i2l1476 49D0                                    i2l3420 500C  
                                  i2l3253 51D0                                    i2l3405 50AE  
                                  i2l3413 5538                                    i2l1478 49E2  
                                  i2l3406 50A6                                    i2l3414 5530  
                                  i2l1479 49F4                                    i2l2471 20BC  
                                  i2l2480 2168                                    i2l3425 4B12  
                                  i2l2481 21D4                                    i2l2473 2146  
                                  i2l3258 556E                                    i2l3434 56CE  
                                  i2l3426 4AAC                                    i2l2474 20F8  
                                  i2l2466 2076                                    i2l3259 555E  
                                  i2l3427 4B0A                                    i2l3419 5010  
                                  i2l2475 2126                                    i2l2467 203E  
                                  i2l2484 2234                                    i2l2468 2074  
                                  i2l2485 2216                                    i2l2479 21D8  
                              TxLoRaWan@i 01EE                                    i2l7710 3D40  
                                  i2l8350 51D0                                    i2l7608 3EDC  
                                  i2l7640 555E                                    i2l9530 4AAC  
                                  i2l9618 2C2C                                    i2l9646 2C8E  
                                  i2l9870 3050                                    _PAN_ID 034E  
                           CDCTxService@i 006B                                 ??_MacSave 00F1  
                                  _TMR0IE 007F95                                    _TMR1IE 007CE8  
                                  _SPBRGH 000FB0                  i2USBTransferOnePacket@ep 0009  
                       ??i2_USBDeviceInit 0009           __size_ofi2_USBTransferOnePacket 0102  
                          __CFG_VREGEN$ON 000000                       retornaDado@dadoByte 0064  
                       _shortPacketStatus 0058                                    _SetAdr 5308  
                          __CFG_XINST$OFF 000000                        __size_of_SetDevEUI 0076  
                      __size_of_SetAppEUI 0076                          __end_of__powers_ 7C22  
                         USBDeviceTasks@i 001C                        __size_of_SetAppKey 00B6  
                            _write_values 7DE1                               SetAdr@state 00F1  
             USBStdFeatureReqHandler@pUEP 0016                  USBTransferOnePacket@data 0061  
              USBCtrlTrfInHandler@lastDTS 0002                           ??_USBDeviceInit 0068  
                                  ___ftge 4768                                    ___wmul 5580  
                               ??___awdiv 006A                  SetSpreadingFactor@status 01E8  
                               ??___ftadd 007A                            __CFG_STVREN$ON 000000  
                               ??___awmod 0064                                 ??___ftdiv 0095  
                               ??___ftneg 0063                         __end_of_STATE_OFF 7DD2  
                               ??___lldiv 0068                                 ??___ftmul 0086  
                               ??___llmod 0075                                 ??___ftsub 0086  
                               ??___fttol 00B4                         _USBEnableEndpoint 5346  
         __size_of_USBStdGetStatusHandler 00A0                                    le_AD@i 00AC  
                                  _gs_pan 7DE5                                    _memcpy 51BE  
                                  _memset 54C6                                    _fround 24CA  
                                  _millis 55F4                                    clear_0 48B2  
                                  clear_1 48BE                                    clear_2 48CA  
                                  clear_3 48D6                                    clear_4 48E2  
                                  clear_5 48EE                                    clear_6 48FA  
                                  clear_7 4906                                    _nivel1 02EE  
                                  _nivel2 02ED                          ___awdiv@quotient 006C  
                        SetAppKey@comando 0120                           ___awmod@divisor 0062  
                                  _teste0 02F0                                    _teste1 02EF  
                         ___awmod@counter 0064                        __size_of_TxLoRaWan 03D0  
                      ?_USBEnableEndpoint 0009                              ?_retornaDado 0060  
                            converter@aux 0004                                    main@dr 02AE  
                                  main@sf 029F                                    _strcat 50EC  
                                  _strcmp 50A4                                    _strcpy 5526  
                                  _strlen 4FAC                     ___ftmul@f3_as_product 008A  
           __size_of_USBTransferOnePacket 0106                                 ??_isdigit 0060  
                            _CDCTxService 2E66                          __end_of_setup_AD 56E2  
                            __mediumconst 7BD2                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                          ??_SetBandWidth 00F3                       ??_USBEnableEndpoint 000A  
                    __end_of_MAC_TX_UNCNF 7D97                   recebeByteLoRaWan@i_4920 0013  
                               ??_sprintf 00EB                               _CtrlTrfData 000438  
                               ??_strncmp 0007                                 ??_toupper 0001  
                       __end_of_SYS_RESET 7DBB                        setup_uart@baudRate 006D  
                    _controlTransferState 0057                             ?_parseLoRaWan 0001  
                              __accesstop 0060                   __end_of__initialization 490C  
                            ?_verificaUSB 0001                           __CFG_PBADEN$OFF 000000  
                              ___ftadd@f1 0074                                ___ftadd@f2 0077  
                              ___ftge@ff1 0060                                ___ftge@ff2 0063  
                           ___rparam_used 000001                                ___ftdiv@f1 008F  
                              ___ftdiv@f2 0092                                ___ftdiv@f3 0099  
                __size_of_USBStallHandler 0042                                ___ftneg@f1 0060  
                              ___awtoft@c 0068                       __size_of_USBSuspend 0030  
                              ___ftmul@f1 0080                                ___ftmul@f2 0083  
                     recebeByte@frameData 0796                __end_of_get_preambleid_900 7DD7  
              __end_of_set_preambleid_900 7DD9                                ___ftsub@f1 0080  
                              ___ftsub@f2 0083                                ___fttol@f1 00B0  
                          __pcstackCOMRAM 0001                 __end_of_USBEnableEndpoint 5382  
                           __end_of_sd000 7DCE                             __end_of_sd001 7D1C  
                           __end_of_sd002 7CE8                               _JoinLoRaWan 53BC  
                            __pidataBANK3 5664                             __end_of_le_AD 31EE  
                           __end_of_delay 4C8A                                ___lltoft@c 0068  
        __size_of_USBCtrlEPAllowDataStage 0098                             __end_of_getch 5640  
                           __end_of_scale 1BE8             __size_of_USBConfigureEndpoint 0094  
                         _retries_sending 02F5                             __end_of_putch 56FE  
                              _le_AD$5957 00A3               __end_of_USBCtrlTrfInHandler 4104  
                       _MAC_SET_CH_STATUS 7D3E                    i2_USBTransferOnePacket 3748  
                         _responseLoRaWan 01FE                                __div_to_l_ 31EE  
                               ?_DataRate 00F1                                _cdc_notice 0314  
                               ?i2_memset 0001                                _cdc_rx_len 0053  
                              _cdc_tx_len 0052                         __end_of_SetDevEUI 4BA2  
                          main@deltaTempo 02A2                         __end_of_SetAppEUI 4C18  
                       __end_of_SetAppKey 41BA                        __end_of_MAC_SET_DR 7DAE  
                      __end_of_MAC_SET_BW 7D59                                   ??_le_AD 00A1  
                      __end_of_MAC_SET_SF 7D3E                                   ??_delay 0071  
                               ?i2_strlen 0001                  ??_USBCtrlTrfSetupHandler 001B  
                        ?_USBDeviceDetach 0001                   _USBTicksSinceSuspendEnd 02E8  
                                 ??_getch 0001                           __div_to_l_@exp1 006B  
             __size_of_SetSpreadingFactor 0040                           __div_to_l_@cntr 006A  
                        ?_USBDeviceAttach 0001                                   ??_scale 0092  
                         __div_to_l_@quot 0066                        __end_of_MAC_TX_CNF 7DB5  
                  _USBStdGetStatusHandler 4506                              sprintf@width 0119  
                                 ??_putch 0060                           le_AD@leituraAux 00AA  
                      __size_of_converter 0086                            ??_parseLoRaWan 0068  
                    __end_of_enviaComando 3748                                __pbssBANK1 01EF  
                              __pbssBANK2 02C8                                __pbssBANK3 0300  
                              __pbssBANK4 0440                                __pbssBANK5 0580  
                              __pbssBANK6 0600                                __pbssBANK7 0700  
                      __size_of_le_pulsos 00E0                     recebeByteLoRaWan@port 000F  
                       __end_of_TxLoRaWan 1FB8                   SetChannelLoRaWan@ligado 00F1  
                          _novaMsgLoRaWan 005A                             __div_to_l_@f1 0060  
                           __div_to_l_@f2 0063               __size_of_USBWakeFromSuspend 0036  
                             _pBDTEntryIn 0046                   SetChannelLoRaWan@status 01E8  
        __end_of_USBCtrlEPServiceComplete 394A                           SetDevEUI@status 01E8  
                                 ?_SetAdr 00F1               __size_of_USBCheckCDCRequest 00A4  
                    USBCtrlTrfRxService@i 0001                                   ?___ftge 0060  
                                 ?___wmul 006E                 __end_of_MAC_SET_CH_STATUS 7D4C  
                      SetBandWidth@status 01E8                                   _CCP1CON 000FBD  
                                 ?_memcpy 0001                                   ?_memset 0060  
                                 ?_fround 008F                                   ?_millis 0060  
                              _device_dsc 7D1C                                 ?___awtoft 0068  
                               ?___ftpack 0060                          _USBCtrlEPService 463E  
                              _ep_data_in 02D5                                 ?___lltoft 0068  
                                 ?_strcat 0060                                   ?_strcmp 0001  
                                 ?_strcpy 0001                                   ?_strlen 0060  
             __end_of_USBCtrlTrfRxService 353E                        _USBCheckStdRequest 3DDC  
                     le_pulsos@freqPulses 0069                         _configDescriptor1 7C71  
                                 i2l11314 4F76                                   i2l11316 4FA6  
                              ??_DataRate 00F3                         _tamDadosRecebidos 005C  
                                 _GO_DONE 007E11                                ??i2_memset 0007  
             __end_of_USBCtrlTrfTxService 3F80                       _USBStdSetCfgHandler 3D00  
              __end_of_ResetModuloLoRaWan 55CE                     __end_of_MAC_GET_DNCTR 7D84  
                              ??i2_strlen 0003                          _discovery_status 02F6  
                     ?_USBCheckStdRequest 0001              __size_of_USBStdGetDscHandler 011A  
                                 _UIEbits 000F69                                   _UIRbits 000F68  
                              _gs_channel 7DE3                             _cdc_trf_state 02E7  
                                 _MacSave 53F6                           putsUSBUSART@len 0064  
                   __end_of_MAC_JOIN_OTAA 7D8E                                   _pCDCDst 0346  
                                 _pCDCSrc 0349                         __end_of__npowers_ 7C49  
                                 __Hparam 0000           ??_USBIncrement1msInternalTimers 0001  
                    ?_USBStdSetCfgHandler 0001                                 _CDCInitEP 4DD0  
                         SetAppEUI@status 01E8                                _scale$5960 0092  
                                 __Lparam 0000                           __size_of_SetAdr 003E  
              __size_of_USBEnableEndpoint 003C                      __end_of_SetBandWidth 5178  
                               ?_setup_AD 0001                              SetAdr@status 01E8  
                    ??_USBCheckStdRequest 001B                   enviaComando@tipoComando 007E  
                         __size_of___ftge 0092             __size_of_USBCtrlTrfOutHandler 005E  
                                 ___awdiv 491A                                   ___ftadd 28FE  
                                 ___awmod 4C8A                                   ___ftdiv 3B38  
                                 ___ftneg 55CE                                   ___lldiv 4A26  
                        ??_USBDeviceTasks 001C                           __size_of___wmul 0028  
                                 ___ftmul 3A42                                   ___llmod 4D68  
                                 ___ftsub 5244                                   ___fttol 394A  
                       ??_USBStallHandler 0001                         __end_of_converter 4A26  
                                 _channel 02F9                                   __pcinit 488C  
                       __end_of_le_pulsos 3D00                           __size_of_memcpy 0044  
                              ??___awtoft 006B                                ??___ftpack 0065  
                         __size_of_memset 0030                           __size_of_fround 0270  
               __end_of_configDescriptor1 7CB4                           __size_of_millis 0026  
                                 __ramtop 0800                                ??___lltoft 006C  
                                 __ptext0 0E10                                   __ptext1 4466  
                                 __ptext2 426A                                   __ptext3 5202  
                                 __ptext4 56D2                                   __ptext5 5054  
                                 __ptext6 3C20                                   __ptext7 30C2  
                                 __ptext8 3B38                                   __ptext9 5382  
                                 _inPipes 0040                                   _command 0700  
             _USBDeferOUTDataStagePackets 02E9                           __size_of_strcat 0046  
                         __size_of_strcmp 0048                           __size_of_strcpy 002E  
                         __size_of_strlen 0056                     SYS_InterruptHigh@dig1 0030  
                   SYS_InterruptHigh@dig2 0032                     SYS_InterruptHigh@dig3 0034  
                   SYS_InterruptHigh@dig4 0036                         __end_of_hexpowers 7C69  
                             ?__div_to_l_ 0060                                   _dpowers 7BD3  
                            ??_USBSuspend 0015                                   _isdigit 5686  
                    __size_of_retornaDado 0060                                   delay@to 0079  
                        ___awmod@dividend 0060                             _receivePacket 0580  
                         i2_USBDeviceInit 2BF2                          i2USBDeviceInit@i 0009  
                                 getch@RC 0002                             converter@aux2 0005  
                      __end_of_USB_CD_Ptr 7C71                                   _pulsos1 01FD  
                                 _pulsos2 01FC                                   _pulsos3 01FB  
                                 _pulsos4 01FA                                   _sprintf 0012  
         __size_of_USBCtrlTrfSetupHandler 0092                                   _strncmp 4AAA  
                          __pintcode_body 273A                                   _toupper 56BE  
                    end_of_initialization 490C                             TxLoRaWan@data 00F2  
                           TxLoRaWan@conf 01E8                        __end_of_USB_SD_Ptr 7C6F  
                                 memcpy@d 0007                                   memcpy@n 0005  
                                 memcpy@s 0009                       _pBDTEntryEP0OutNext 004E  
                                 memset@c 0062                                   memset@n 0064  
                                 memset@p 0066                             __Lmediumconst 7BD2  
                                 int_func 273A                           _USB1msTickCount 02CE  
         _dummy_encapsulated_cmd_response 03B4                                   millis@m 0064  
                               i2u1070_40 2820                  ?_USBStdFeatureReqHandler 0001  
                               i2u1072_40 284E                                 i2u1064_40 27A4  
                               i2u1065_40 27B6                                 i2u1064_48 27A6  
                               i2u1074_40 287C                                 i2u1066_40 27C8  
                               i2u1065_48 27B8                                 i2u1067_40 27DA  
                               i2u1066_48 27CA                                 i2u1068_40 27F2  
                               i2u1067_48 27DC                             enviaComando@i 0081  
                   ??_USBStdSetCfgHandler 0015                           ___lldiv@divisor 0064  
                    __size_of_verificaUSB 0030                                ?_CDCInitEP 0001  
                         ___lldiv@counter 006C                        parseLoRaWan@status 007A  
                recebeByte@escapeCaracter 01F5                        __end_of_USBSuspend 5526  
                 _USBCtrlEPAllowDataStage 45A6                                 _RCSTAbits 000FAB  
                              ??_setup_AD 0060                                   postdec1 000FE5  
                                 postdec2 000FDD                              _MAC_TX_UNCNF 7D8E  
                                 postinc0 000FEE                                   postinc2 000FDE  
                           MacSave@status 01E8                  _USBCtrlEPServiceComplete 384A  
                          __tdiv_to_l_@f1 0060                            __tdiv_to_l_@f2 0063  
                     _get_channelmask_900 7DD9                                   strcmp@r 0006  
                     _set_channelmask_900 7DDB                                   strlen@s 0060  
                    __end_of_parseLoRaWan 43C2                             ??__tdiv_to_l_ 0066  
              _USBStatusStageEnabledFlag1 01F6                _USBStatusStageEnabledFlag2 02EB  
                      USBEnableEndpoint@p 000A                                 _PORTCbits 000F82  
                               _PORTDbits 000F83                                 _PORTEbits 000F84  
                               _STATE_OFF 7DCE                                _setup_ccp1 5202  
                           le_pulsos@freq 006A                             le_pulsos@modo 0065  
                              _setup_uart 4466                     __size_of_enviaComando 0104  
                               _TRISCbits 000F94                                 _TRISDbits 000F95  
                               _TRISEbits 000F96                             ?_setup_pulsos 0001  
                              main@Fcanal 02AB                        _BothEP0OutUOWNsSet 01F7  
                              main@Icanal 029E                                main@i_3332 02B0  
                              main@i_3333 02B1                                main@i_3350 02AD  
                              main@i_3349 02AC                 USBConfigureEndpoint@EPNum 0006  
              ?_USBCtrlEPAllowStatusStage 0001       USER_USB_CALLBACK_EVENT_HANDLER@size 0011  
                               _USTATcopy 005D                  __size_of_initRecebeDados 0016  
            __end_of_USBTransferOnePacket 3644                               ___ftdiv@exp 009C  
                               _TXSTAbits 000FAC                                 _SYS_RESET 7DB5  
                     __size_of__div_to_l_ 012A                               ___ftmul@exp 0089  
                            ?_JoinLoRaWan 0001                            __end_of_SetAdr 5346  
                  _USBCtrlTrfSetupHandler 47FA                              le_AD@leitura 00AE  
                       putsUSBUSART@pData 0062                   ?i2_USBTransferOnePacket 0001  
                   __end_of_USBDeviceInit 2BF2                            __end_of___ftge 47FA  
   __end_of_USBIncrement1msInternalTimers 5664    __size_of_USBIncrement1msInternalTimers 0024  
           _USBIncrement1msInternalTimers 5640                            __end_of___wmul 55A8  
                            _enviaComando 3644                               _BAUDCONbits 000FB8  
                 __end_ofi2_USBDeviceInit 2D32                             ?_putsUSBUSART 0060  
                          __end_of_gs_pan 7DE7                                 i2memset@c 0003  
                               i2memset@n 0005                                 i2memset@p 0007  
                          __end_of_memcpy 5202                            __end_of_memset 54F6  
                          __end_of_fround 273A                            __end_of_millis 561A  
                       _USBBusIsSuspended 01F8                        _get_preambleid_900 7DD5  
                      _set_preambleid_900 7DD7                            __end_of_strcat 5132  
                          __end_of_strcmp 50EC                            __end_of_strcpy 5554  
                          __end_of_strlen 5002                       start_initialization 488C  
                          ??_setup_pulsos 0060                   ?_USBStdGetStatusHandler 0001  
                         DataRate@comando 0120                               __end_of_MAC 7DCA  
           USBCtrlTrfRxService@byteToRead 0002                               __end_of_SYS 7DC0  
                     __end_of__tdiv_to_l_ 2E66                         __size_of_DataRate 0046  
                        TxLoRaWan@comando 0120                               _cdc_data_rx 000540  
                             _cdc_data_tx 000500                         __size_ofi2_memset 002C  
            __end_of_USBConfigureEndpoint 4768                          TxLoRaWan@tamData 00F4  
         __end_of_USBStdFeatureReqHandler 24CA                                 _SetDevEUI 4B2C  
       __end_of_USBCtrlEPAllowStatusStage 4048                         __size_ofi2_strlen 0052  
                               _SetAppEUI 4BA2                                 i2strlen@s 0001  
                               _SetAppKey 4104                  __end_of_USBCtrlEPService 46D4  
                         ___llmod@divisor 0071                     __size_of_SetBandWidth 0046  
                         ___llmod@counter 0075                 ??_USBCtrlEPAllowDataStage 0002  
                     __end_of_MAC_GET_ADR 7D9F                               ??_CDCInitEP 000D  
                          USBDeviceInit@i 0068                        retornaDado@dadoBit 0060  
                                ??_SetAdr 00F3                                 _TxLoRaWan 1BE8  
                  _pBDTEntryEP0OutCurrent 0050                   USBTransferOnePacket@dir 0060  
                 USBTransferOnePacket@len 0063            __end_ofi2_USBTransferOnePacket 384A  
                                ??___ftge 0066                       __end_of_MAC_SET_ADR 7DA7  
                                ??___wmul 0072                       _USBStdGetDscHandler 3318  
                             __pdataBANK3 03C3                          __CFG_LPT1OSC$OFF 000000  
                                ??_memcpy 0007                                  ??_memset 0066  
                          ??_putsUSBUSART 0062                                  ??_fround 0092  
                                ??_millis 0064                           SetAppKey@status 01E8  
                           sprintf@tmpval 010C                                  ??_strcat 0064  
                ResetModuloLoRaWan@status 0087                                  ??_strcmp 0005  
                                ??_strcpy 0005                                  ??_strlen 0062  
                             ?_setup_ccp1 0001                 recebeByteLoRaWan@tamMsgRx 0012  
                  _USBActiveConfiguration 005E                                fround@prec 0098  
          __end_of_USBStdGetStatusHandler 45A6                               ?_setup_uart 006D  
                       __size_of___awtoft 003A                         __size_of___ftpack 00B0  
                       __size_of___lltoft 005E                               __pbssCOMRAM 0038  
              __end_of_SetSpreadingFactor 5308                         _recebeByteLoRaWan 1FB8  
                           __pcstackBANK0 0060                             __pcstackBANK1 0100  
                           __pcstackBANK2 0200              __size_of_USBCtrlTrfInHandler 00BC  
                    __end_of_set_link_key 7DE1                  SetChannelLoRaWan@comando 0120  
                            _SetBandWidth 5132                        ?_recebeByteLoRaWan 0001  
                            _isdigit$5381 0061                      ?_USBStdGetDscHandler 0001  
                        SetDevEUI@comando 0120                     __end_of_gs_encryption 7DDF  
                          SetBandWidth@bw 00F1                                ?_SetDevEUI 0001  
                              ?_SetAppEUI 0001                                ?_SetAppKey 0001  
              __end_of_USBWakeFromSuspend 5462                                  ?_MacSave 0001  
                             sprintf@flag 011B                               sprintf@fval 0116  
                             sprintf@prec 011D                           _USBStallHandler 5286  
                     ??_recebeByteLoRaWan 000A                              _pBDTEntryOut 02C8  
              __end_of_USBCheckCDCRequest 4466                      recebeByteLoRaWan@len 000E  
                __size_of_USBDeviceDetach 000E                  __size_of_USBDeviceAttach 0034  
                      _ResetModuloLoRaWan 55A8                                 _feedback1 02F2  
                               _feedback2 02F1                                 _main$5956 02A6  
                       ??_initRecebeDados 0060                                ?_TxLoRaWan 00F1  
                   __size_of_parseLoRaWan 00AC                       SetBandWidth@comando 0120  
                               __pintcode 0008                             __pmediumconst 7BD2  
                                ?___awdiv 0066                                  ?___ftadd 0074  
                                ?___awmod 0060                                  ?___ftdiv 008F  
                                ?___ftneg 0060                                  ?___lldiv 0060  
                                ?___ftmul 0080                                  ?___llmod 006D  
                                ?___ftsub 0080                                 __npowers_ 7C22  
                                ?___fttol 00B0                       ?_ResetModuloLoRaWan 0001  
                      enviaComando@i_4906 0083                        enviaComando@i_4907 0085  
                       __size_of_setup_AD 0010                               __preambleID 02FD  
                        ?i2_USBDeviceInit 0001                               __tdiv_to_l_ 2D32  
               __end_of_recebeByteLoRaWan 224E                             __send_retries 02F8  
                            ??__div_to_l_ 0066                      _USBTransferOnePacket 353E  
                               _converter 49A0                                  ?_isdigit 0001  
                               _le_pulsos 3C20              __end_of_USBCtrlTrfOutHandler 4F50  
                               _hexpowers 7C49                     ??_USBStdGetDscHandler 0001  
                             _ep_data_out 02D2                            __size_of_le_AD 012C  
                          __size_of_delay 0072                            __size_of_getch 0026  
                 parseLoRaWan@intervalMAX 0078                                  ?_sprintf 00BF  
            __size_of_USBCtrlTrfRxService 010C                      ??_ResetModuloLoRaWan 0087  
                          __size_of_scale 0438             USBConfigureEndpoint@direction 0001  
                                ?_strncmp 0001                                  ?_toupper 0001  
                             _MAC_GET_ADR 7D97                            __size_of_putch 000E  
                               delay@time 006D                                  _MAC_SAVE 7DC0  
            __size_of_USBCtrlTrfTxService 00CC                              _parseLoRaWan 4316  
                          ___wmul@product 0072                                  _LATDbits 000F8C  
                                _LATEbits 000F8D                               _MAC_SET_ADR 7D9F  
                            TxLoRaWan@hex 01EA                ??_USBCtrlEPServiceComplete 0002  
                                _IPR1bits 000F9F                                  _IPR2bits 000FA2  
                                _PIE2bits 000FA0                       __size_of_setup_ccp1 0042  
                     __size_of_setup_uart 00A0                        __end_of__div_to_l_ 3318  
                                i2u602_40 3D74                                  _PIR2bits 000FA1  
                                i2u606_40 3388                                  i2u606_47 337E  
                                i2u631_40 2438                                  i2u607_40 33B6  
                                i2u607_47 33AC                                  i2u609_40 3404  
                                i2u609_47 33FA                                  i2u901_40 2C50  
                                i2u590_40 3F2C                      __end_of_setup_pulsos 4316  
                                i2u590_47 3F22                                  i2u592_40 3F6A  
                                i2u904_40 2CF2                                  i2u592_47 3F60  
                                i2u905_40 5030                                  i2u921_40 223A  
                                i2u905_47 5026                                  i2u923_40 2248  
                                i2u917_40 2164                                  i2u890_40 50E0  
                                i2u947_40 30BE                                  i2u892_40 4AD8  
                                _RCONbits 000FD0                          __CFG_WDTPS$32768 000000  
                                _UEP0bits 000F70                _USBDeferINDataStagePackets 02EA  
             __size_of_USBCheckStdRequest 00D8                                  _UCONbits 000F6D  
                                _STATE_ON 7DD2                      _USBConfigureEndpoint 46D4  
                    __size_of_JoinLoRaWan 003A                                 getch@data 0003  
                             _frameBuffer 0664                             ??_retornaDado 0061  
        __size_of_USBStdFeatureReqHandler 027C                          _get_own_mac_high 7DE7  
                       ___wmul@multiplier 006E                     ?_USBTransferOnePacket 0060  
                       _SYS_InterruptHigh 0008                               _encryptMode 02F4  
                              ?_converter 0002                                  _DataRate 5178  
                           ?_CDCTxService 0001                                ?_le_pulsos 0065  
                            _RemoteWakeup 01F9                                 main@pisca 02AF  
                               main@tempo 0296                                  i2_memset 5554  
                        main@tempoTimeOut 029A                        ?_SYS_InterruptHigh 0001  
                        putsUSBUSART@data 0060                   __end_of_USBStallHandler 52C8  
                                i2_strlen 5002                          SetAppEUI@comando 0120  
                               copy_data0 48A0                               _freqPulses1 033A  
                             _freqPulses2 0336                               _freqPulses3 0332  
                             _freqPulses4 032E               ??_USBCtrlEPAllowStatusStage 0001  
             __end_of_USBStdSetCfgHandler 3DDC                               ??_SetDevEUI 00F1  
                             ??_SetAppEUI 00F1                               ??_SetAppKey 00F1  
                     ??_SYS_InterruptHigh 001D                            _MAC_SET_DEVEUI 7D6F  
                    __end_of_putsUSBUSART 50A4                             ??_verificaUSB 006D  
                          _MAC_SET_APPEUI 7D64                            _MAC_SET_APPKEY 7D59  
                      __end_of_device_dsc 7D2E                          __size_of_MacSave 0036  
                           SetAdr@comando 0120                                _EECON1bits 000FA6  
                          DataRate@status 01E8                   ?_USBCtrlTrfSetupHandler 0001  
                         TxLoRaWan@status 01E9                   USBStdGetStatusHandler@p 0002  
                                __Hrparam 0000                               ??_TxLoRaWan 00F5  
                               memcpy@tmp 000B                                  __Lrparam 0000  
                  USBTransferOnePacket@ep 0068                                  _Sequence 02EC  
                                _SetupPkt 000430                recebeByteLoRaWan@frameData 0440  
                       ??_USBDeviceDetach 0060                     ?_USBConfigureEndpoint 0001  
                       ??_USBDeviceAttach 0060                          __size_of___awdiv 0086  
                        __size_of___ftadd 01AE                          __size_of___awmod 0072  
                        __size_of___ftdiv 00E8                          __size_of___ftneg 0026  
                        __size_of___lldiv 0084                          __size_of___ftmul 00F6  
                        __size_of___llmod 0068                          __size_of___ftsub 0042  
                        __size_of___fttol 00F8                                  ___awtoft 5382  
                                ___ftpack 41BA                 __end_of_SYS_InterruptHigh 28FE  
                                ___lltoft 4E94                               _fround$5958 0095  
                             _fround$5959 0092                               _line_coding 03BC  
              __size_of_recebeByteLoRaWan 0296                        __end_of_gs_channel 7DE5  
                          ??_CDCTxService 006B                                sprintf@idx 0105  
                              sprintf@len 0108                                sprintf@exp 0110  
                              sprintf@val 0112                                strcat@from 0062  
                        __size_of_isdigit 0022                   __size_of_USBDeviceTasks 012E  
                     __end_of_retornaDado 4E94                           enviaComando@cmd 007C  
                                __ptext10 4C18                                  __ptext11 5496  
                                __ptext20 4E34                                  __ptext12 56E2  
                                __ptext21 55A8                                  __ptext13 5462  
                                __ptext30 53F6                                  __ptext22 53BC  
                                __ptext14 2E66                                  __ptext31 5178  
                                __ptext23 52C8                                  __ptext15 353E  
                                __ptext40 2D32                                  __ptext32 0012  
                                __ptext24 4B2C                                  __ptext16 2AAC  
                                __ptext41 31EE                                  __ptext33 17B0  
                                __ptext25 4CFC                                  __ptext17 54C6  
                                __ptext50 4768                                  __ptext42 4E94  
                                __ptext34 5686                                  __ptext26 5132  
                                __ptext18 1BE8                                  __ptext51 3644  
                                __ptext43 4D68                                  __ptext35 24CA  
                                __ptext27 4104                                  __ptext19 50EC  
                                __ptext60 4AAA                                  __ptext52 4FAC  
                                __ptext44 4A26                                  __ptext36 5580  
                                __ptext28 4BA2                                  __ptext61 5526  
                                __ptext53 56F0                                  __ptext45 394A  
                                __ptext37 3A42                                  __ptext29 5308  
                                __ptext70 5286                                  __ptext62 50A4  
                                __ptext54 4316                                  __ptext46 5244  
                                __ptext38 4C8A                                  __ptext71 5640  
                                __ptext63 49A0                                  __ptext55 55F4  
                                __ptext47 28FE                                  __ptext39 491A  
                                __ptext80 4506                                  __ptext72 463E  
                                __ptext64 56BE                                  __ptext56 56A8  
                                __ptext48 41BA                                  __ptext81 3318  
                                __ptext73 51BE                                  __ptext65 561A  
                                __ptext49 55CE                                  __ptext90 3432  
                                __ptext82 224E                                  __ptext74 47FA  
                                __ptext66 2F94                                  __ptext58 1FB8  
                                __ptext91 3F80                                  __ptext83 4F50  
                                __ptext75 384A                                  __ptext67 2BF2  
                                __ptext59 5002                                  __ptext92 4048  
                                __ptext84 43C2                                  __ptext76 45A6  
                                __ptext68 542C                                  __ptext93 3EB4  
                                __ptext85 4DD0                                  __ptext77 3DDC  
                                __ptext69 54F6                                  __ptext86 3748  
                                __ptext78 3D00                                  __ptext87 5346  
                                __ptext79 5554                                  __ptext88 46D4  
                                __ptext89 4EF2                                  __powers_ 7BFB  
           recebeByte@checksumRecebimento 02E3                             _MAC_GET_DNCTR 7D7A  
                  __end_of_MAC_SET_DEVEUI 7D7A                    __end_of_MAC_SET_APPEUI 7D6F  
                  __end_of_MAC_SET_APPKEY 7D64                          __size_of_sprintf 0DFE  
                        __size_of_strncmp 0082                          __size_of_toupper 0014  
                              strcpy@from 0003                            _dadosRecebidos 0300  
                                _error_AT 02FC                                  _error_RX 02FA  
                                _error_TX 01FF                      parseLoRaWan@previous 0074  
          __end_of_USBCtrlTrfSetupHandler 488C                             __size_of_main 09A0  
                       ?_USBCtrlEPService 0001                                  _tamFrame 005B  
                              strncmp@len 0005                                DataRate@dr 00F1  
                      ??_USBCtrlEPService 001B                                _MAC_SET_DR 7DA7  
                              _MAC_SET_BW 7D4C                             _MAC_JOIN_OTAA 7D84  
                              _MAC_SET_SF 7D2E                       _USBCtrlTrfInHandler 4048  
                              _MAC_TX_CNF 7DAE                       __end_of_verificaUSB 54C6  
                                _response 0350                                  _setup_AD 56D2  
                                _outPipes 0038                              _set_link_key 7DDF  
                    _USBCtrlTrfOutHandler 4EF2                                  int$flags 005F  
               _USBCtrlEPAllowStatusStage 3F80                            converter@conv1 0006  
                          converter@conv2 0002                           _get_own_mac_low 7DE9  
                                _protocol 02FB                                  main@data 0200  
                          converter@resul 0003                                  main@resp 02A0  
                  ??_USBTransferOnePacket 0064                              ??_setup_ccp1 0060  
                             _MSG_LORAWAN 03C3                     __CFG_CPUDIV$OSC1_PLL2 000000  
                            ??_setup_uart 0071                 _USBDeferStatusStagePacket 0054  
                CDCTxService@byte_to_send 006C                                 putch@data 0060  
                             ??_converter 0003               __end_of_get_channelmask_900 7DDB  
                             ??_le_pulsos 0069                                _INTCONbits 000FF2  
             __end_of_set_channelmask_900 7DDD                            TxLoRaWan@porta 00F1  
                    ?_USBCtrlTrfInHandler 0001                                  memcpy@d1 0001  
                                memcpy@s1 0003                           _delivery_status 02F7  
           USBCtrlTrfTxService@byteToSend 0001                                  isdigit@c 0062  
                                memset@p1 0060                                  scale@scl 0095  
                        ?_USBStallHandler 0001                  USBStdFeatureReqHandler@p 0019  
                         _initRecebeDados 56A8                                  intlevel2 0000  
                               sprintf@ap 010A                                 sprintf@cp 0106  
                        __tdiv_to_l_@exp1 006E                                 sprintf@sp 00BF  
                        __tdiv_to_l_@cntr 006D                    __size_of_USBDeviceInit 0146  
                        __tdiv_to_l_@quot 0069   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 4FAC  
__size_of_USER_USB_CALLBACK_EVENT_HANDLER 005C         ??_USER_USB_CALLBACK_EVENT_HANDLER 0013  
        ?_USER_USB_CALLBACK_EVENT_HANDLER 000D           _USER_USB_CALLBACK_EVENT_HANDLER 4F50  
            i2USBTransferOnePacket@handle 000A                          ___lldiv@dividend 0060  
                   __size_of_setup_pulsos 00AC                         _SetChannelLoRaWan 4CFC  
                      _SetSpreadingFactor 52C8                       parseLoRaWan@timeout 007B  
                          MacSave@comando 0120                        ?_SetChannelLoRaWan 00F1  
                               strncmp@s1 0001                                 strncmp@s2 0003  
                      __end_of_setup_ccp1 5244                        __end_of_setup_uart 4506  
              i2USBTransferOnePacket@data 0002                    ??_USBConfigureEndpoint 0002  
                   ?_USBCtrlTrfOutHandler 0001                     retornaDado@selectDado 0063  
                     ?_SetSpreadingFactor 0001                       _USBCtrlTrfRxService 3432  
                      _USBWakeFromSuspend 542C                       ??_SetChannelLoRaWan 00F2  
                 _USBStdFeatureReqHandler 224E                        _USBCheckCDCRequest 43C2  
                     _USBCtrlTrfTxService 3EB4                      SetSpreadingFactor@sf 01E9  
              __size_of_SYS_InterruptHigh 28F6                              ?__tdiv_to_l_ 0060  
                             _retornaDado 4E34                           le_AD@AnalogPort 00A9  
                                sprintf@c 011F                                  sprintf@f 00C1  
                                strcat@cp 0064                 recebeByte@tamanhoMensagem 01F1  
                                strcat@to 0060                       ?_USBWakeFromSuspend 0001  
                                strcmp@s1 0001                                  strcmp@s2 0003  
                        ___lldiv@quotient 0068                     ??_USBCtrlTrfInHandler 0002  
                                strcpy@cp 0005                                  strlen@cp 0064  
                                strcpy@to 0001                     _USBAlternateInterface 02FE  
                                toupper@c 0001                       ?_USBCheckCDCRequest 0001  
                    __end_of_write_values 7DE3                 i2USBTransferOnePacket@dir 0001  
               i2USBTransferOnePacket@len 0004                              _setup_pulsos 426A  
                     USBEnableEndpoint@ep 000C                           _endpoint_number 0056  
                   __size_of_putsUSBUSART 0050                      ??_SetSpreadingFactor 00F1  
                    ?_USBCtrlTrfRxService 0001                 __end_of_SetChannelLoRaWan 4D68  
                      __CFG_FOSC$HSPLL_HS 000000                  ?_USBCtrlEPAllowDataStage 0001  
                    ?_USBCtrlTrfTxService 0001                 SetSpreadingFactor@comando 0120  
                             _verificaUSB 5496                  __end_of_get_own_mac_high 7DE9  
            _USBStatusStageTimeoutCounter 0055                      ??_USBWakeFromSuspend 0015  
              USBTransferOnePacket@handle 0069                      __end_of_CDCTxService 2F94  
                 __end_of_get_own_mac_low 7DEB                      ??_USBCheckCDCRequest 0001  
                              _USB_CD_Ptr 7C6F  
