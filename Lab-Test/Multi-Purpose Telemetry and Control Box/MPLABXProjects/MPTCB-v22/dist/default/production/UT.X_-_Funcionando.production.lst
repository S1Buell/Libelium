

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Wed Feb 13 12:16:15 2019

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    22                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	text0,global,reloc=2,class=CODE,delta=1
    24                           	psect	text1,global,reloc=2,class=CODE,delta=1
    25                           	psect	text2,global,reloc=2,class=CODE,delta=1
    26                           	psect	text3,global,reloc=2,class=CODE,delta=1
    27                           	psect	text4,global,reloc=2,class=CODE,delta=1
    28                           	psect	text5,global,reloc=2,class=CODE,delta=1
    29                           	psect	text6,global,reloc=2,class=CODE,delta=1
    30                           	psect	text7,global,reloc=2,class=CODE,delta=1
    31                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text10,global,reloc=2,class=CODE,delta=1
    34                           	psect	text11,global,reloc=2,class=CODE,delta=1
    35                           	psect	text12,global,reloc=2,class=CODE,delta=1
    36                           	psect	text13,global,reloc=2,class=CODE,delta=1
    37                           	psect	text14,global,reloc=2,class=CODE,delta=1
    38                           	psect	text15,global,reloc=2,class=CODE,delta=1
    39                           	psect	text16,global,reloc=2,class=CODE,delta=1
    40                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text18,global,reloc=2,class=CODE,delta=1
    42                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text20,global,reloc=2,class=CODE,delta=1
    44                           	psect	text21,global,reloc=2,class=CODE,delta=1
    45                           	psect	text22,global,reloc=2,class=CODE,delta=1
    46                           	psect	text23,global,reloc=2,class=CODE,delta=1
    47                           	psect	text24,global,reloc=2,class=CODE,delta=1
    48                           	psect	text25,global,reloc=2,class=CODE,delta=1
    49                           	psect	text26,global,reloc=2,class=CODE,delta=1
    50                           	psect	text27,global,reloc=2,class=CODE,delta=1
    51                           	psect	text28,global,reloc=2,class=CODE,delta=1
    52                           	psect	text29,global,reloc=2,class=CODE,delta=1
    53                           	psect	text30,global,reloc=2,class=CODE,delta=1
    54                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text32,global,reloc=2,class=CODE,delta=1
    56                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text48,global,reloc=2,class=CODE,delta=1
    72                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text50,global,reloc=2,class=CODE,delta=1
    74                           	psect	text51,global,reloc=2,class=CODE,delta=1
    75                           	psect	text52,global,reloc=2,class=CODE,delta=1
    76                           	psect	text53,global,reloc=2,class=CODE,delta=1
    77                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    78                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,delta=1
   107                           	psect	text83,global,reloc=2,class=CODE,delta=1
   108                           	psect	text84,global,reloc=2,class=CODE,delta=1
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1
   110                           	psect	text86,global,reloc=2,class=CODE,delta=1
   111                           	psect	text87,global,reloc=2,class=CODE,delta=1
   112                           	psect	text88,global,reloc=2,class=CODE,delta=1
   113                           	psect	text89,global,reloc=2,class=CODE,delta=1
   114                           	psect	text90,global,reloc=2,class=CODE,delta=1
   115                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   116                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   117                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   118                           	dabs	1,0x400,48,_BDT
   119                           	dabs	1,0x500,64,_cdc_data_tx
   120                           	dabs	1,0x438,8,_CtrlTrfData
   121                           	dabs	1,0x430,8,_SetupPkt
   122                           	dabs	1,0x540,64,_cdc_data_rx
   123  0000                     
   124                           ; Version 1.44
   125                           ; Generated 14/09/2017 GMT
   126                           ; 
   127                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   128                           ; All rights reserved.
   129                           ; 
   130                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   131                           ; 
   132                           ; Redistribution and use in source and binary forms, with or without modification, are
   133                           ; permitted provided that the following conditions are met:
   134                           ; 
   135                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   136                           ;        conditions and the following disclaimer.
   137                           ; 
   138                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   139                           ;        of conditions and the following disclaimer in the documentation and/or other
   140                           ;        materials provided with the distribution.
   141                           ; 
   142                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   143                           ;        software without specific prior written permission.
   144                           ; 
   145                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   146                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   147                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   148                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   149                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   150                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   151                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   152                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   153                           ; 
   154                           ; 
   155                           ; Code-generator required, PIC18F4550 Definitions
   156                           ; 
   157                           ; SFR Addresses
   158  0000                     
   159                           	psect	idataBANK2
   160  0051AC                     __pidataBANK2:
   161                           	opt stack 0
   162                           
   163                           ;initializer for __send_retries
   164  0051AC  03                 	db	3
   165                           
   166                           	psect	idataBANK3
   167  005138                     __pidataBANK3:
   168                           	opt stack 0
   169                           
   170                           ;initializer for _MSG_LORAWAN
   171  005138  96                 	db	low (STR_15+7)
   172  005139  7F                 	db	high (STR_15+7)
   173  00513A  48                 	db	low STR_7
   174  00513B  7F                 	db	high STR_7
   175  00513C  64                 	db	low STR_8
   176  00513D  7F                 	db	high STR_8
   177  00513E  7A                 	db	low STR_9
   178  00513F  7F                 	db	high STR_9
   179  005140  CF                 	db	low STR_10
   180  005141  7F                 	db	high STR_10
   181  005142  E5                 	db	low STR_11
   182  005143  7E                 	db	high STR_11
   183  005144  FA                 	db	low STR_12
   184  005145  7F                 	db	high STR_12
   185  005146  6F                 	db	low STR_13
   186  005147  7F                 	db	high STR_13
   187  005148  16                 	db	low STR_14
   188  005149  7F                 	db	high STR_14
   189  00514A  8F                 	db	low STR_15
   190  00514B  7F                 	db	high STR_15
   191  00514C  A2                 	db	low STR_16
   192  00514D  7F                 	db	high STR_16
   193  00514E  AA                 	db	low STR_17
   194  00514F  7F                 	db	high STR_17
   195  005150  56                 	db	low STR_18
   196  005151  7F                 	db	high STR_18
   197  005152  C8                 	db	low STR_19
   198  005153  7F                 	db	high STR_19
   199  005154  38                 	db	low STR_20
   200  005155  7F                 	db	high STR_20
   201                           
   202                           	psect	mediumconst
   203  007CA2                     __pmediumconst:
   204                           	opt stack 0
   205  007CA2  00                 	db	0
   206  007CA3                     _dpowers:
   207                           	opt stack 0
   208  007CA3  0001               	dw	1
   209  007CA5  0000               	dw	0
   210  007CA7  000A               	dw	10
   211  007CA9  0000               	dw	0
   212  007CAB  0064               	dw	100
   213  007CAD  0000               	dw	0
   214  007CAF  03E8               	dw	1000
   215  007CB1  0000               	dw	0
   216  007CB3  2710               	dw	10000
   217  007CB5  0000               	dw	0
   218  007CB7  86A0               	dw	34464
   219  007CB9  0001               	dw	1
   220  007CBB  4240               	dw	16960
   221  007CBD  000F               	dw	15
   222  007CBF  9680               	dw	38528
   223  007CC1  0098               	dw	152
   224  007CC3  E100               	dw	57600
   225  007CC5  05F5               	dw	1525
   226  007CC7  CA00               	dw	51712
   227  007CC9  3B9A               	dw	15258
   228  007CCB                     __end_of_dpowers:
   229                           	opt stack 0
   230  007CCB                     __powers_:
   231                           	opt stack 0
   232  007CCB  00                 	db	0
   233  007CCC  80                 	db	128
   234  007CCD  3F                 	db	63
   235  007CCE  00                 	db	0
   236  007CCF  20                 	db	32
   237  007CD0  41                 	db	65
   238  007CD1  00                 	db	0
   239  007CD2  C8                 	db	200
   240  007CD3  42                 	db	66
   241  007CD4  00                 	db	0
   242  007CD5  7A                 	db	122
   243  007CD6  44                 	db	68
   244  007CD7  40                 	db	64
   245  007CD8  1C                 	db	28
   246  007CD9  46                 	db	70
   247  007CDA  50                 	db	80
   248  007CDB  C3                 	db	195
   249  007CDC  47                 	db	71
   250  007CDD  24                 	db	36
   251  007CDE  74                 	db	116
   252  007CDF  49                 	db	73
   253  007CE0  97                 	db	151
   254  007CE1  18                 	db	24
   255  007CE2  4B                 	db	75
   256  007CE3  BC                 	db	188
   257  007CE4  BE                 	db	190
   258  007CE5  4C                 	db	76
   259  007CE6  6B                 	db	107
   260  007CE7  6E                 	db	110
   261  007CE8  4E                 	db	78
   262  007CE9  03                 	db	3
   263  007CEA  15                 	db	21
   264  007CEB  50                 	db	80
   265  007CEC  79                 	db	121
   266  007CED  AD                 	db	173
   267  007CEE  60                 	db	96
   268  007CEF  F3                 	db	243
   269  007CF0  49                 	db	73
   270  007CF1  71                 	db	113
   271  007CF2                     __end_of__powers_:
   272                           	opt stack 0
   273  007CF2                     __npowers_:
   274                           	opt stack 0
   275  007CF2  00                 	db	0
   276  007CF3  80                 	db	128
   277  007CF4  3F                 	db	63
   278  007CF5  CD                 	db	205
   279  007CF6  CC                 	db	204
   280  007CF7  3D                 	db	61
   281  007CF8  D7                 	db	215
   282  007CF9  23                 	db	35
   283  007CFA  3C                 	db	60
   284  007CFB  12                 	db	18
   285  007CFC  83                 	db	131
   286  007CFD  3A                 	db	58
   287  007CFE  B7                 	db	183
   288  007CFF  D1                 	db	209
   289  007D00  38                 	db	56
   290  007D01  C6                 	db	198
   291  007D02  27                 	db	39
   292  007D03  37                 	db	55
   293  007D04  38                 	db	56
   294  007D05  86                 	db	134
   295  007D06  35                 	db	53
   296  007D07  C0                 	db	192
   297  007D08  D6                 	db	214
   298  007D09  33                 	db	51
   299  007D0A  CC                 	db	204
   300  007D0B  2B                 	db	43
   301  007D0C  32                 	db	50
   302  007D0D  70                 	db	112
   303  007D0E  89                 	db	137
   304  007D0F  30                 	db	48
   305  007D10  E7                 	db	231
   306  007D11  DB                 	db	219
   307  007D12  2E                 	db	46
   308  007D13  E5                 	db	229
   309  007D14  3C                 	db	60
   310  007D15  1E                 	db	30
   311  007D16  42                 	db	66
   312  007D17  A2                 	db	162
   313  007D18  0D                 	db	13
   314  007D19                     __end_of__npowers_:
   315                           	opt stack 0
   316  007D19                     _hexpowers:
   317                           	opt stack 0
   318  007D19  0001               	dw	1
   319  007D1B  0000               	dw	0
   320  007D1D  0010               	dw	16
   321  007D1F  0000               	dw	0
   322  007D21  0100               	dw	256
   323  007D23  0000               	dw	0
   324  007D25  1000               	dw	4096
   325  007D27  0000               	dw	0
   326  007D29  0000               	dw	0
   327  007D2B  0001               	dw	1
   328  007D2D  0000               	dw	0
   329  007D2F  0010               	dw	16
   330  007D31  0000               	dw	0
   331  007D33  0100               	dw	256
   332  007D35  0000               	dw	0
   333  007D37  1000               	dw	4096
   334  007D39                     __end_of_hexpowers:
   335                           	opt stack 0
   336  007D39                     _USB_SD_Ptr:
   337                           	opt stack 0
   338  007D39  67                 	db	low _sd000
   339  007D3A  7E                 	db	high _sd000
   340  007D3B  B8                 	db	low _sd001
   341  007D3C  7D                 	db	high _sd001
   342  007D3D  84                 	db	low _sd002
   343  007D3E  7D                 	db	high _sd002
   344  007D3F                     __end_of_USB_SD_Ptr:
   345                           	opt stack 0
   346  007D3F                     _USB_CD_Ptr:
   347                           	opt stack 0
   348  007D3F  41                 	db	low _configDescriptor1
   349  007D40  7D                 	db	high _configDescriptor1
   350  007D41                     __end_of_USB_CD_Ptr:
   351                           	opt stack 0
   352  007D41                     _configDescriptor1:
   353                           	opt stack 0
   354  007D41  09                 	db	9
   355  007D42  02                 	db	2
   356  007D43  43                 	db	67
   357  007D44  00                 	db	0
   358  007D45  02                 	db	2
   359  007D46  01                 	db	1
   360  007D47  00                 	db	0
   361  007D48  C0                 	db	192
   362  007D49  32                 	db	50
   363  007D4A  09                 	db	9
   364  007D4B  04                 	db	4
   365  007D4C  00                 	db	0
   366  007D4D  00                 	db	0
   367  007D4E  01                 	db	1
   368  007D4F  02                 	db	2
   369  007D50  02                 	db	2
   370  007D51  01                 	db	1
   371  007D52  00                 	db	0
   372  007D53  05                 	db	5
   373  007D54  24                 	db	36
   374  007D55  00                 	db	0
   375  007D56  10                 	db	16
   376  007D57  01                 	db	1
   377  007D58  04                 	db	4
   378  007D59  24                 	db	36
   379  007D5A  02                 	db	2
   380  007D5B  02                 	db	2
   381  007D5C  05                 	db	5
   382  007D5D  24                 	db	36
   383  007D5E  06                 	db	6
   384  007D5F  00                 	db	0
   385  007D60  01                 	db	1
   386  007D61  05                 	db	5
   387  007D62  24                 	db	36
   388  007D63  01                 	db	1
   389  007D64  00                 	db	0
   390  007D65  01                 	db	1
   391  007D66  07                 	db	7
   392  007D67  05                 	db	5
   393  007D68  81                 	db	129
   394  007D69  03                 	db	3
   395  007D6A  08                 	db	8
   396  007D6B  00                 	db	0
   397  007D6C  02                 	db	2
   398  007D6D  09                 	db	9
   399  007D6E  04                 	db	4
   400  007D6F  01                 	db	1
   401  007D70  00                 	db	0
   402  007D71  02                 	db	2
   403  007D72  0A                 	db	10
   404  007D73  00                 	db	0
   405  007D74  00                 	db	0
   406  007D75  00                 	db	0
   407  007D76  07                 	db	7
   408  007D77  05                 	db	5
   409  007D78  02                 	db	2
   410  007D79  02                 	db	2
   411  007D7A  40                 	db	64
   412  007D7B  00                 	db	0
   413  007D7C  00                 	db	0
   414  007D7D  07                 	db	7
   415  007D7E  05                 	db	5
   416  007D7F  82                 	db	130
   417  007D80  02                 	db	2
   418  007D81  40                 	db	64
   419  007D82  00                 	db	0
   420  007D83  00                 	db	0
   421  007D84                     __end_of_configDescriptor1:
   422                           	opt stack 0
   423  007D84                     _sd002:
   424                           	opt stack 0
   425  007D84  34                 	db	52
   426  007D85  03                 	db	3
   427  007D86  0043               	dw	67
   428  007D88  0044               	dw	68
   429  007D8A  0043               	dw	67
   430  007D8C  0020               	dw	32
   431  007D8E  0052               	dw	82
   432  007D90  0053               	dw	83
   433  007D92  002D               	dw	45
   434  007D94  0032               	dw	50
   435  007D96  0033               	dw	51
   436  007D98  0032               	dw	50
   437  007D9A  0020               	dw	32
   438  007D9C  0045               	dw	69
   439  007D9E  006D               	dw	109
   440  007DA0  0075               	dw	117
   441  007DA2  006C               	dw	108
   442  007DA4  0061               	dw	97
   443  007DA6  0074               	dw	116
   444  007DA8  0069               	dw	105
   445  007DAA  006F               	dw	111
   446  007DAC  006E               	dw	110
   447  007DAE  0020               	dw	32
   448  007DB0  0044               	dw	68
   449  007DB2  0065               	dw	101
   450  007DB4  006D               	dw	109
   451  007DB6  006F               	dw	111
   452  007DB8                     __end_of_sd002:
   453                           	opt stack 0
   454  007DB8                     _sd001:
   455                           	opt stack 0
   456  007DB8  34                 	db	52
   457  007DB9  03                 	db	3
   458  007DBA  004D               	dw	77
   459  007DBC  0069               	dw	105
   460  007DBE  0063               	dw	99
   461  007DC0  0072               	dw	114
   462  007DC2  006F               	dw	111
   463  007DC4  0063               	dw	99
   464  007DC6  0068               	dw	104
   465  007DC8  0069               	dw	105
   466  007DCA  0070               	dw	112
   467  007DCC  0020               	dw	32
   468  007DCE  0054               	dw	84
   469  007DD0  0065               	dw	101
   470  007DD2  0063               	dw	99
   471  007DD4  0068               	dw	104
   472  007DD6  006E               	dw	110
   473  007DD8  006F               	dw	111
   474  007DDA  006C               	dw	108
   475  007DDC  006F               	dw	111
   476  007DDE  0067               	dw	103
   477  007DE0  0079               	dw	121
   478  007DE2  0020               	dw	32
   479  007DE4  0049               	dw	73
   480  007DE6  006E               	dw	110
   481  007DE8  0063               	dw	99
   482  007DEA  002E               	dw	46
   483  007DEC                     __end_of_sd001:
   484                           	opt stack 0
   485  007DEC                     _device_dsc:
   486                           	opt stack 0
   487  007DEC  12                 	db	18
   488  007DED  01                 	db	1
   489  007DEE  0200               	dw	512
   490  007DF0  02                 	db	2
   491  007DF1  00                 	db	0
   492  007DF2  00                 	db	0
   493  007DF3  08                 	db	8
   494  007DF4  04D8               	dw	1240
   495  007DF6  000A               	dw	10
   496  007DF8  0100               	dw	256
   497  007DFA  01                 	db	1
   498  007DFB  02                 	db	2
   499  007DFC  00                 	db	0
   500  007DFD  01                 	db	1
   501  007DFE                     __end_of_device_dsc:
   502                           	opt stack 0
   503  007DFE                     _MAC_SET_SF:
   504                           	opt stack 0
   505  007DFE  72                 	db	114
   506  007DFF  61                 	db	97
   507  007E00  64                 	db	100
   508  007E01  69                 	db	105
   509  007E02  6F                 	db	111
   510  007E03  20                 	db	32
   511  007E04  73                 	db	115
   512  007E05  65                 	db	101
   513  007E06  74                 	db	116
   514  007E07  20                 	db	32
   515  007E08  73                 	db	115
   516  007E09  66                 	db	102
   517  007E0A  20                 	db	32
   518  007E0B  53                 	db	83
   519  007E0C  46                 	db	70
   520  007E0D  00                 	db	0
   521  007E0E                     __end_of_MAC_SET_SF:
   522                           	opt stack 0
   523  007E0E                     _MAC_SET_CH_STATUS:
   524                           	opt stack 0
   525  007E0E  73                 	db	115
   526  007E0F  65                 	db	101
   527  007E10  74                 	db	116
   528  007E11  20                 	db	32
   529  007E12  63                 	db	99
   530  007E13  68                 	db	104
   531  007E14  20                 	db	32
   532  007E15  73                 	db	115
   533  007E16  74                 	db	116
   534  007E17  61                 	db	97
   535  007E18  74                 	db	116
   536  007E19  75                 	db	117
   537  007E1A  73                 	db	115
   538  007E1B  00                 	db	0
   539  007E1C                     __end_of_MAC_SET_CH_STATUS:
   540                           	opt stack 0
   541  007E1C                     _MAC_SET_BW:
   542                           	opt stack 0
   543  007E1C  72                 	db	114
   544  007E1D  61                 	db	97
   545  007E1E  64                 	db	100
   546  007E1F  69                 	db	105
   547  007E20  6F                 	db	111
   548  007E21  20                 	db	32
   549  007E22  73                 	db	115
   550  007E23  65                 	db	101
   551  007E24  74                 	db	116
   552  007E25  20                 	db	32
   553  007E26  62                 	db	98
   554  007E27  77                 	db	119
   555  007E28  00                 	db	0
   556  007E29                     __end_of_MAC_SET_BW:
   557                           	opt stack 0
   558  007E29                     _MAC_JOIN_OTAA:
   559                           	opt stack 0
   560  007E29  6A                 	db	106
   561  007E2A  6F                 	db	111
   562  007E2B  69                 	db	105
   563  007E2C  6E                 	db	110
   564  007E2D  20                 	db	32
   565  007E2E  6F                 	db	111
   566  007E2F  74                 	db	116
   567  007E30  61                 	db	97
   568  007E31  61                 	db	97
   569  007E32  00                 	db	0
   570  007E33                     __end_of_MAC_JOIN_OTAA:
   571                           	opt stack 0
   572  007E33                     _MAC_TX_UNCNF:
   573                           	opt stack 0
   574  007E33  74                 	db	116
   575  007E34  78                 	db	120
   576  007E35  20                 	db	32
   577  007E36  75                 	db	117
   578  007E37  6E                 	db	110
   579  007E38  63                 	db	99
   580  007E39  6E                 	db	110
   581  007E3A  66                 	db	102
   582  007E3B  00                 	db	0
   583  007E3C                     __end_of_MAC_TX_UNCNF:
   584                           	opt stack 0
   585  007E3C                     _MAC_SET_ADR:
   586                           	opt stack 0
   587  007E3C  73                 	db	115
   588  007E3D  65                 	db	101
   589  007E3E  74                 	db	116
   590  007E3F  20                 	db	32
   591  007E40  61                 	db	97
   592  007E41  64                 	db	100
   593  007E42  72                 	db	114
   594  007E43  00                 	db	0
   595  007E44                     __end_of_MAC_SET_ADR:
   596                           	opt stack 0
   597  007E44                     _MAC_SET_DR:
   598                           	opt stack 0
   599  007E44  73                 	db	115
   600  007E45  65                 	db	101
   601  007E46  74                 	db	116
   602  007E47  20                 	db	32
   603  007E48  64                 	db	100
   604  007E49  72                 	db	114
   605  007E4A  00                 	db	0
   606  007E4B                     __end_of_MAC_SET_DR:
   607                           	opt stack 0
   608  007E4B                     _MAC_TX_CNF:
   609                           	opt stack 0
   610  007E4B  74                 	db	116
   611  007E4C  78                 	db	120
   612  007E4D  20                 	db	32
   613  007E4E  63                 	db	99
   614  007E4F  6E                 	db	110
   615  007E50  66                 	db	102
   616  007E51  00                 	db	0
   617  007E52                     __end_of_MAC_TX_CNF:
   618                           	opt stack 0
   619  007E52                     _SYS_RESET:
   620                           	opt stack 0
   621  007E52  72                 	db	114
   622  007E53  65                 	db	101
   623  007E54  73                 	db	115
   624  007E55  65                 	db	101
   625  007E56  74                 	db	116
   626  007E57  00                 	db	0
   627  007E58                     __end_of_SYS_RESET:
   628                           	opt stack 0
   629  007E58                     _SYS:
   630                           	opt stack 0
   631  007E58  73                 	db	115
   632  007E59  79                 	db	121
   633  007E5A  73                 	db	115
   634  007E5B  20                 	db	32
   635  007E5C  00                 	db	0
   636  007E5D                     __end_of_SYS:
   637                           	opt stack 0
   638  007E5D                     _MAC_SAVE:
   639                           	opt stack 0
   640  007E5D  73                 	db	115
   641  007E5E  61                 	db	97
   642  007E5F  76                 	db	118
   643  007E60  65                 	db	101
   644  007E61  00                 	db	0
   645  007E62                     __end_of_MAC_SAVE:
   646                           	opt stack 0
   647  007E62                     _MAC:
   648                           	opt stack 0
   649  007E62  6D                 	db	109
   650  007E63  61                 	db	97
   651  007E64  63                 	db	99
   652  007E65  20                 	db	32
   653  007E66  00                 	db	0
   654  007E67                     __end_of_MAC:
   655                           	opt stack 0
   656  007E67                     _sd000:
   657                           	opt stack 0
   658  007E67  04                 	db	4
   659  007E68  03                 	db	3
   660  007E69  0409               	dw	1033
   661  007E6B                     __end_of_sd000:
   662                           	opt stack 0
   663  007E6B                     _STATE_OFF:
   664                           	opt stack 0
   665  007E6B  6F                 	db	111
   666  007E6C  66                 	db	102
   667  007E6D  66                 	db	102
   668  007E6E  00                 	db	0
   669  007E6F                     __end_of_STATE_OFF:
   670                           	opt stack 0
   671  007E6F                     _STATE_ON:
   672                           	opt stack 0
   673  007E6F  6F                 	db	111
   674  007E70  6E                 	db	110
   675  007E71  00                 	db	0
   676  007E72                     __end_of_STATE_ON:
   677                           	opt stack 0
   678  007E72                     _get_preambleid_900:
   679                           	opt stack 0
   680  007E72  48                 	db	72
   681  007E73  50                 	db	80
   682  007E74                     __end_of_get_preambleid_900:
   683                           	opt stack 0
   684  007E74                     _set_preambleid_900:
   685                           	opt stack 0
   686  007E74  48                 	db	72
   687  007E75  50                 	db	80
   688  007E76                     __end_of_set_preambleid_900:
   689                           	opt stack 0
   690  007E76                     _get_channelmask_900:
   691                           	opt stack 0
   692  007E76  43                 	db	67
   693  007E77  4D                 	db	77
   694  007E78                     __end_of_get_channelmask_900:
   695                           	opt stack 0
   696  007E78                     _set_channelmask_900:
   697                           	opt stack 0
   698  007E78  43                 	db	67
   699  007E79  4D                 	db	77
   700  007E7A                     __end_of_set_channelmask_900:
   701                           	opt stack 0
   702  007E7A                     _gs_encryption:
   703                           	opt stack 0
   704  007E7A  45                 	db	69
   705  007E7B  45                 	db	69
   706  007E7C                     __end_of_gs_encryption:
   707                           	opt stack 0
   708  007E7C                     _set_link_key:
   709                           	opt stack 0
   710  007E7C  4B                 	db	75
   711  007E7D  59                 	db	89
   712  007E7E                     __end_of_set_link_key:
   713                           	opt stack 0
   714  007E7E                     _write_values:
   715                           	opt stack 0
   716  007E7E  57                 	db	87
   717  007E7F  52                 	db	82
   718  007E80                     __end_of_write_values:
   719                           	opt stack 0
   720  007E80                     _gs_channel:
   721                           	opt stack 0
   722  007E80  43                 	db	67
   723  007E81  48                 	db	72
   724  007E82                     __end_of_gs_channel:
   725                           	opt stack 0
   726  007E82                     _gs_pan:
   727                           	opt stack 0
   728  007E82  49                 	db	73
   729  007E83  44                 	db	68
   730  007E84                     __end_of_gs_pan:
   731                           	opt stack 0
   732  007E84                     _get_own_mac_high:
   733                           	opt stack 0
   734  007E84  53                 	db	83
   735  007E85  48                 	db	72
   736  007E86                     __end_of_get_own_mac_high:
   737                           	opt stack 0
   738  007E86                     _get_own_mac_low:
   739                           	opt stack 0
   740  007E86  53                 	db	83
   741  007E87  4C                 	db	76
   742  007E88                     __end_of_get_own_mac_low:
   743                           	opt stack 0
   744  0000                     _EECON2	set	4007
   745  0000                     _EECON1bits	set	4006
   746  0000                     _EEDATA	set	4008
   747  0000                     _EEADR	set	4009
   748  0000                     _ADRESL	set	4035
   749  0000                     _ADRESH	set	4036
   750  0000                     _ADCON0	set	4034
   751  0000                     _ADCON2	set	4032
   752  0000                     _ADCON1	set	4033
   753  0000                     _IPR1bits	set	3999
   754  0000                     _CCP1CON	set	4029
   755  0000                     _CCPR1L	set	4030
   756  0000                     _CCPR1H	set	4031
   757  0000                     _TMR1L	set	4046
   758  0000                     _TMR1H	set	4047
   759  0000                     _T3CON	set	4017
   760  0000                     _T0CON	set	4053
   761  0000                     _T1CON	set	4045
   762  0000                     _RCREG	set	4014
   763  0000                     _RCSTA	set	4011
   764  0000                     _TXREG	set	4013
   765  0000                     _RCSTAbits	set	4011
   766  0000                     _SPBRGH	set	4016
   767  0000                     _SPBRG	set	4015
   768  0000                     _BAUDCONbits	set	4024
   769  0000                     _TXSTAbits	set	4012
   770  0000                     _TRISCbits	set	3988
   771  0000                     _LATDbits	set	3980
   772  0000                     _PORTEbits	set	3972
   773  0000                     _TRISDbits	set	3989
   774  0000                     _TRISEbits	set	3990
   775  0000                     _UEP0bits	set	3952
   776  0000                     _INTCONbits	set	4082
   777  0000                     _IPR2bits	set	4002
   778  0000                     _RCONbits	set	4048
   779  0000                     _PORTCbits	set	3970
   780  0000                     _UCON	set	3949
   781  0000                     _USTAT	set	3948
   782  0000                     _PIR2bits	set	4001
   783  0000                     _UIEbits	set	3945
   784  0000                     _UIRbits	set	3944
   785  0000                     _UADDR	set	3950
   786  0000                     _UCONbits	set	3949
   787  0000                     _UIE	set	3945
   788  0000                     _UEIE	set	3947
   789  0000                     _UCFG	set	3951
   790  0000                     _UIR	set	3944
   791  0000                     _UEIR	set	3946
   792  0000                     _PIE2bits	set	4000
   793  0000                     _PORTDbits	set	3971
   794  0000                     _UEP1	set	3953
   795  0000                     _UEP0	set	3952
   796  0000                     _GO_DONE	set	32273
   797  0000                     _ADIE	set	31982
   798  0000                     _ADIF	set	31990
   799  0000                     _ADON	set	32272
   800  0000                     _TMR0IE	set	32661
   801  0000                     _GIEH	set	32663
   802  0000                     _TMR1IE	set	31976
   803  0000                     _TXIF	set	31988
   804  0000                     _USBIE	set	32005
   805  0000                     _RCIF	set	31989
   806  0000                     _RCIE	set	31981
   807  0000                     _CCP1IE	set	31978
   808  0000                     _CCP1IF	set	31986
   809  007E88                     STR_1:
   810                           
   811                           ; BSR set to: 2
   812  007E88  72                 	db	114	;'r'
   813  007E89  65                 	db	101	;'e'
   814  007E8A  73                 	db	115	;'s'
   815  007E8B  70                 	db	112	;'p'
   816  007E8C  6F                 	db	111	;'o'
   817  007E8D  73                 	db	115	;'s'
   818  007E8E  74                 	db	116	;'t'
   819  007E8F  61                 	db	97	;'a'
   820  007E90  3A                 	db	58	;':'
   821  007E91  20                 	db	32
   822  007E92  25                 	db	37
   823  007E93  32                 	db	50	;'2'
   824  007E94  58                 	db	88	;'X'
   825  007E95  20                 	db	32
   826  007E96  25                 	db	37
   827  007E97  32                 	db	50	;'2'
   828  007E98  58                 	db	88	;'X'
   829  007E99  20                 	db	32
   830  007E9A  25                 	db	37
   831  007E9B  32                 	db	50	;'2'
   832  007E9C  58                 	db	88	;'X'
   833  007E9D  20                 	db	32
   834  007E9E  25                 	db	37
   835  007E9F  32                 	db	50	;'2'
   836  007EA0  58                 	db	88	;'X'
   837  007EA1  20                 	db	32
   838  007EA2  25                 	db	37
   839  007EA3  32                 	db	50	;'2'
   840  007EA4  58                 	db	88	;'X'
   841  007EA5  20                 	db	32
   842  007EA6  25                 	db	37
   843  007EA7  32                 	db	50	;'2'
   844  007EA8  58                 	db	88	;'X'
   845  007EA9  20                 	db	32
   846  007EAA  25                 	db	37
   847  007EAB  32                 	db	50	;'2'
   848  007EAC  58                 	db	88	;'X'
   849  007EAD  20                 	db	32
   850  007EAE  25                 	db	37
   851  007EAF  32                 	db	50	;'2'
   852  007EB0  58                 	db	88	;'X'
   853  007EB1  20                 	db	32
   854  007EB2  25                 	db	37
   855  007EB3  32                 	db	50	;'2'
   856  007EB4  58                 	db	88	;'X'
   857  007EB5  20                 	db	32
   858  007EB6  25                 	db	37
   859  007EB7  32                 	db	50	;'2'
   860  007EB8  58                 	db	88	;'X'
   861  007EB9  20                 	db	32
   862  007EBA  20                 	db	32
   863  007EBB  25                 	db	37
   864  007EBC  64                 	db	100	;'d'
   865  007EBD  20                 	db	32
   866  007EBE  20                 	db	32
   867  007EBF  25                 	db	37
   868  007EC0  64                 	db	100	;'d'
   869  007EC1  20                 	db	32
   870  007EC2  20                 	db	32
   871  007EC3  25                 	db	37
   872  007EC4  64                 	db	100	;'d'
   873  007EC5  20                 	db	32
   874  007EC6  20                 	db	32
   875  007EC7  25                 	db	37
   876  007EC8  64                 	db	100	;'d'
   877  007EC9  20                 	db	32
   878  007ECA  20                 	db	32
   879  007ECB  25                 	db	37
   880  007ECC  64                 	db	100	;'d'
   881  007ECD  20                 	db	32
   882  007ECE  20                 	db	32
   883  007ECF  25                 	db	37
   884  007ED0  64                 	db	100	;'d'
   885  007ED1  20                 	db	32
   886  007ED2  20                 	db	32
   887  007ED3  25                 	db	37
   888  007ED4  64                 	db	100	;'d'
   889  007ED5  20                 	db	32
   890  007ED6  20                 	db	32
   891  007ED7  25                 	db	37
   892  007ED8  64                 	db	100	;'d'
   893  007ED9  20                 	db	32
   894  007EDA  20                 	db	32
   895  007EDB  25                 	db	37
   896  007EDC  64                 	db	100	;'d'
   897  007EDD  20                 	db	32
   898  007EDE  20                 	db	32
   899  007EDF  25                 	db	37
   900  007EE0  64                 	db	100	;'d'
   901  007EE1  20                 	db	32
   902  007EE2  0A                 	db	10
   903  007EE3  0D                 	db	13
   904  007EE4  00                 	db	0
   905  007EE5                     STR_11:
   906                           
   907                           ; BSR set to: 2
   908  007EE5  66                 	db	102	;'f'
   909  007EE6  72                 	db	114	;'r'
   910  007EE7  61                 	db	97	;'a'
   911  007EE8  6D                 	db	109	;'m'
   912  007EE9  65                 	db	101	;'e'
   913  007EEA  5F                 	db	95	;'_'
   914  007EEB  63                 	db	99	;'c'
   915  007EEC  6F                 	db	111	;'o'
   916  007EED  75                 	db	117	;'u'
   917  007EEE  6E                 	db	110	;'n'
   918  007EEF  74                 	db	116	;'t'
   919  007EF0  65                 	db	101	;'e'
   920  007EF1  72                 	db	114	;'r'
   921  007EF2  5F                 	db	95	;'_'
   922  007EF3  65                 	db	101	;'e'
   923  007EF4  72                 	db	114	;'r'
   924  007EF5  72                 	db	114	;'r'
   925  007EF6  5F                 	db	95	;'_'
   926  007EF7  72                 	db	114	;'r'
   927  007EF8  65                 	db	101	;'e'
   928  007EF9  6A                 	db	106	;'j'
   929  007EFA  6F                 	db	111	;'o'
   930  007EFB  69                 	db	105	;'i'
   931  007EFC  6E                 	db	110	;'n'
   932  007EFD  5F                 	db	95	;'_'
   933  007EFE  6E                 	db	110	;'n'
   934  007EFF  65                 	db	101	;'e'
   935  007F00  65                 	db	101	;'e'
   936  007F01  64                 	db	100	;'d'
   937  007F02  65                 	db	101	;'e'
   938  007F03  64                 	db	100	;'d'
   939  007F04  00                 	db	0
   940  007F05                     STR_32:
   941                           
   942                           ; BSR set to: 2
   943  007F05  30                 	db	48	;'0'
   944  007F06  31                 	db	49	;'1'
   945  007F07  32                 	db	50	;'2'
   946  007F08  33                 	db	51	;'3'
   947  007F09  34                 	db	52	;'4'
   948  007F0A  35                 	db	53	;'5'
   949  007F0B  36                 	db	54	;'6'
   950  007F0C  37                 	db	55	;'7'
   951  007F0D  38                 	db	56	;'8'
   952  007F0E  39                 	db	57	;'9'
   953  007F0F  41                 	db	65	;'A'
   954  007F10  42                 	db	66	;'B'
   955  007F11  43                 	db	67	;'C'
   956  007F12  44                 	db	68	;'D'
   957  007F13  45                 	db	69	;'E'
   958  007F14  46                 	db	70	;'F'
   959  007F15  00                 	db	0
   960  007F16                     STR_14:
   961                           
   962                           ; BSR set to: 2
   963  007F16  69                 	db	105	;'i'
   964  007F17  6E                 	db	110	;'n'
   965  007F18  76                 	db	118	;'v'
   966  007F19  61                 	db	97	;'a'
   967  007F1A  6C                 	db	108	;'l'
   968  007F1B  69                 	db	105	;'i'
   969  007F1C  64                 	db	100	;'d'
   970  007F1D  5F                 	db	95	;'_'
   971  007F1E  64                 	db	100	;'d'
   972  007F1F  61                 	db	97	;'a'
   973  007F20  74                 	db	116	;'t'
   974  007F21  61                 	db	97	;'a'
   975  007F22  5F                 	db	95	;'_'
   976  007F23  6C                 	db	108	;'l'
   977  007F24  65                 	db	101	;'e'
   978  007F25  6E                 	db	110	;'n'
   979  007F26  00                 	db	0
   980  007F27                     
   981                           ; BSR set to: 2
   982  007F27  3C                 	db	60	;'<'
   983  007F28  3D                 	db	61	;'='
   984  007F29  3E                 	db	62	;'>'
   985  007F2A  80                 	db	-128
   986  007F2B  4E                 	db	78	;'N'
   987  007F2C  23                 	db	35
   988  007F2D  25                 	db	37
   989  007F2E  6C                 	db	108	;'l'
   990  007F2F  64                 	db	100	;'d'
   991  007F30  23                 	db	35
   992  007F31  25                 	db	37
   993  007F32  73                 	db	115	;'s'
   994  007F33  23                 	db	35
   995  007F34  25                 	db	37
   996  007F35  64                 	db	100	;'d'
   997  007F36  23                 	db	35
   998  007F37  00                 	db	0
   999  007F38                     STR_20:
  1000                           
  1001                           ; BSR set to: 2
  1002  007F38  61                 	db	97	;'a'
  1003  007F39  63                 	db	99	;'c'
  1004  007F3A  63                 	db	99	;'c'
  1005  007F3B  65                 	db	101	;'e'
  1006  007F3C  70                 	db	112	;'p'
  1007  007F3D  74                 	db	116	;'t'
  1008  007F3E  65                 	db	101	;'e'
  1009  007F3F  64                 	db	100	;'d'
  1010  007F40  52                 	db	82	;'R'
  1011  007F41  4E                 	db	78	;'N'
  1012  007F42  32                 	db	50	;'2'
  1013  007F43  39                 	db	57	;'9'
  1014  007F44  30                 	db	48	;'0'
  1015  007F45  33                 	db	51	;'3'
  1016  007F46  20                 	db	32
  1017  007F47  00                 	db	0
  1018  007F48                     STR_7:
  1019                           
  1020                           ; BSR set to: 2
  1021  007F48  69                 	db	105	;'i'
  1022  007F49  6E                 	db	110	;'n'
  1023  007F4A  76                 	db	118	;'v'
  1024  007F4B  61                 	db	97	;'a'
  1025  007F4C  6C                 	db	108	;'l'
  1026  007F4D  69                 	db	105	;'i'
  1027  007F4E  64                 	db	100	;'d'
  1028  007F4F  5F                 	db	95	;'_'
  1029  007F50  70                 	db	112	;'p'
  1030  007F51  61                 	db	97	;'a'
  1031  007F52  72                 	db	114	;'r'
  1032  007F53  61                 	db	97	;'a'
  1033  007F54  6D                 	db	109	;'m'
  1034  007F55  00                 	db	0
  1035  007F56                     STR_18:
  1036                           
  1037                           ; BSR set to: 2
  1038  007F56  6B                 	db	107	;'k'
  1039  007F57  65                 	db	101	;'e'
  1040  007F58  79                 	db	121	;'y'
  1041  007F59  73                 	db	115	;'s'
  1042  007F5A  5F                 	db	95	;'_'
  1043  007F5B  6E                 	db	110	;'n'
  1044  007F5C  6F                 	db	111	;'o'
  1045  007F5D  74                 	db	116	;'t'
  1046  007F5E  5F                 	db	95	;'_'
  1047  007F5F  69                 	db	105	;'i'
  1048  007F60  6E                 	db	110	;'n'
  1049  007F61  69                 	db	105	;'i'
  1050  007F62  74                 	db	116	;'t'
  1051  007F63  00                 	db	0
  1052  007F64                     STR_8:
  1053                           
  1054                           ; BSR set to: 2
  1055  007F64  6E                 	db	110	;'n'
  1056  007F65  6F                 	db	111	;'o'
  1057  007F66  74                 	db	116	;'t'
  1058  007F67  5F                 	db	95	;'_'
  1059  007F68  6A                 	db	106	;'j'
  1060  007F69  6F                 	db	111	;'o'
  1061  007F6A  69                 	db	105	;'i'
  1062  007F6B  6E                 	db	110	;'n'
  1063  007F6C  65                 	db	101	;'e'
  1064  007F6D  64                 	db	100	;'d'
  1065  007F6E  00                 	db	0
  1066  007F6F                     STR_13:
  1067                           
  1068                           ; BSR set to: 2
  1069  007F6F  6D                 	db	109	;'m'
  1070  007F70  61                 	db	97	;'a'
  1071  007F71  63                 	db	99	;'c'
  1072  007F72  5F                 	db	95	;'_'
  1073  007F73  70                 	db	112	;'p'
  1074  007F74  61                 	db	97	;'a'
  1075  007F75  75                 	db	117	;'u'
  1076  007F76  73                 	db	115	;'s'
  1077  007F77  65                 	db	101	;'e'
  1078  007F78  64                 	db	100	;'d'
  1079  007F79  00                 	db	0
  1080  007F7A                     STR_9:
  1081                           
  1082                           ; BSR set to: 2
  1083  007F7A  6E                 	db	110	;'n'
  1084  007F7B  6F                 	db	111	;'o'
  1085  007F7C  5F                 	db	95	;'_'
  1086  007F7D  66                 	db	102	;'f'
  1087  007F7E  72                 	db	114	;'r'
  1088  007F7F  65                 	db	101	;'e'
  1089  007F80  65                 	db	101	;'e'
  1090  007F81  5F                 	db	95	;'_'
  1091  007F82  63                 	db	99	;'c'
  1092  007F83  68                 	db	104	;'h'
  1093  007F84  00                 	db	0
  1094  007F85                     STR_22:
  1095                           
  1096                           ; BSR set to: 2
  1097  007F85  25                 	db	37
  1098  007F86  73                 	db	115	;'s'
  1099  007F87  20                 	db	32
  1100  007F88  25                 	db	37
  1101  007F89  64                 	db	100	;'d'
  1102  007F8A  20                 	db	32
  1103  007F8B  6F                 	db	111	;'o'
  1104  007F8C  66                 	db	102	;'f'
  1105  007F8D  66                 	db	102	;'f'
  1106  007F8E  00                 	db	0
  1107  007F8F                     STR_15:
  1108                           
  1109                           ; BSR set to: 2
  1110  007F8F  6D                 	db	109	;'m'
  1111  007F90  61                 	db	97	;'a'
  1112  007F91  63                 	db	99	;'c'
  1113  007F92  5F                 	db	95	;'_'
  1114  007F93  74                 	db	116	;'t'
  1115  007F94  78                 	db	120	;'x'
  1116  007F95  5F                 	db	95	;'_'
  1117  007F96  6F                 	db	111	;'o'
  1118  007F97  6B                 	db	107	;'k'
  1119  007F98  00                 	db	0
  1120  007F99                     STR_21:
  1121                           
  1122                           ; BSR set to: 2
  1123  007F99  25                 	db	37
  1124  007F9A  73                 	db	115	;'s'
  1125  007F9B  20                 	db	32
  1126  007F9C  25                 	db	37
  1127  007F9D  64                 	db	100	;'d'
  1128  007F9E  20                 	db	32
  1129  007F9F  6F                 	db	111	;'o'
  1130  007FA0  6E                 	db	110	;'n'
  1131  007FA1  00                 	db	0
  1132  007FA2                     STR_16:
  1133                           
  1134                           ; BSR set to: 2
  1135  007FA2  6D                 	db	109	;'m'
  1136  007FA3  61                 	db	97	;'a'
  1137  007FA4  63                 	db	99	;'c'
  1138  007FA5  5F                 	db	95	;'_'
  1139  007FA6  72                 	db	114	;'r'
  1140  007FA7  78                 	db	120	;'x'
  1141  007FA8  20                 	db	32
  1142  007FA9  00                 	db	0
  1143  007FAA                     STR_17:
  1144                           
  1145                           ; BSR set to: 2
  1146  007FAA  6D                 	db	109	;'m'
  1147  007FAB  61                 	db	97	;'a'
  1148  007FAC  63                 	db	99	;'c'
  1149  007FAD  5F                 	db	95	;'_'
  1150  007FAE  65                 	db	101	;'e'
  1151  007FAF  72                 	db	114	;'r'
  1152  007FB0  72                 	db	114	;'r'
  1153  007FB1  00                 	db	0
  1154  007FB2                     
  1155                           ; BSR set to: 2
  1156  007FB2  25                 	db	37
  1157  007FB3  73                 	db	115	;'s'
  1158  007FB4  3A                 	db	58	;':'
  1159  007FB5  25                 	db	37
  1160  007FB6  6C                 	db	108	;'l'
  1161  007FB7  75                 	db	117	;'u'
  1162  007FB8  23                 	db	35
  1163  007FB9  00                 	db	0
  1164  007FBA                     STR_31:
  1165                           
  1166                           ; BSR set to: 2
  1167  007FBA  28                 	db	40
  1168  007FBB  6E                 	db	110	;'n'
  1169  007FBC  75                 	db	117	;'u'
  1170  007FBD  6C                 	db	108	;'l'
  1171  007FBE  6C                 	db	108	;'l'
  1172  007FBF  29                 	db	41
  1173  007FC0  00                 	db	0
  1174  007FC1                     STR_28:
  1175                           
  1176                           ; BSR set to: 2
  1177  007FC1  25                 	db	37
  1178  007FC2  73                 	db	115	;'s'
  1179  007FC3  20                 	db	32
  1180  007FC4  25                 	db	37
  1181  007FC5  64                 	db	100	;'d'
  1182  007FC6  20                 	db	32
  1183  007FC7  00                 	db	0
  1184  007FC8                     STR_19:
  1185                           
  1186                           ; BSR set to: 2
  1187  007FC8  64                 	db	100	;'d'
  1188  007FC9  65                 	db	101	;'e'
  1189  007FCA  6E                 	db	110	;'n'
  1190  007FCB  69                 	db	105	;'i'
  1191  007FCC  65                 	db	101	;'e'
  1192  007FCD  64                 	db	100	;'d'
  1193  007FCE  00                 	db	0
  1194  007FCF                     STR_10:
  1195                           
  1196                           ; BSR set to: 2
  1197  007FCF  73                 	db	115	;'s'
  1198  007FD0  69                 	db	105	;'i'
  1199  007FD1  6C                 	db	108	;'l'
  1200  007FD2  65                 	db	101	;'e'
  1201  007FD3  6E                 	db	110	;'n'
  1202  007FD4  74                 	db	116	;'t'
  1203  007FD5  00                 	db	0
  1204  007FD6                     
  1205                           ; BSR set to: 2
  1206  007FD6  25                 	db	37
  1207  007FD7  73                 	db	115	;'s'
  1208  007FD8  3A                 	db	58	;':'
  1209  007FD9  25                 	db	37
  1210  007FDA  66                 	db	102	;'f'
  1211  007FDB  23                 	db	35
  1212  007FDC  00                 	db	0
  1213  007FDD                     
  1214                           ; BSR set to: 2
  1215  007FDD  25                 	db	37
  1216  007FDE  73                 	db	115	;'s'
  1217  007FDF  3A                 	db	58	;':'
  1218  007FE0  25                 	db	37
  1219  007FE1  73                 	db	115	;'s'
  1220  007FE2  23                 	db	35
  1221  007FE3  00                 	db	0
  1222  007FE4                     STR_26:
  1223                           
  1224                           ; BSR set to: 2
  1225  007FE4  25                 	db	37
  1226  007FE5  73                 	db	115	;'s'
  1227  007FE6  20                 	db	32
  1228  007FE7  25                 	db	37
  1229  007FE8  64                 	db	100	;'d'
  1230  007FE9  00                 	db	0
  1231  007FEA                     STR_23:
  1232                           
  1233                           ; BSR set to: 2
  1234  007FEA  25                 	db	37
  1235  007FEB  73                 	db	115	;'s'
  1236  007FEC  20                 	db	32
  1237  007FED  25                 	db	37
  1238  007FEE  73                 	db	115	;'s'
  1239  007FEF  00                 	db	0
  1240  007FF0                     STR_30:
  1241                           
  1242                           ; BSR set to: 2
  1243  007FF0  25                 	db	37
  1244  007FF1  30                 	db	48	;'0'
  1245  007FF2  32                 	db	50	;'2'
  1246  007FF3  58                 	db	88	;'X'
  1247  007FF4  00                 	db	0
  1248  007FF5                     STR_25:
  1249                           
  1250                           ; BSR set to: 2
  1251  007FF5  25                 	db	37
  1252  007FF6  73                 	db	115	;'s'
  1253  007FF7  25                 	db	37
  1254  007FF8  64                 	db	100	;'d'
  1255  007FF9  00                 	db	0
  1256  007FFA                     STR_12:
  1257                           
  1258                           ; BSR set to: 2
  1259  007FFA  62                 	db	98	;'b'
  1260  007FFB  75                 	db	117	;'u'
  1261  007FFC  73                 	db	115	;'s'
  1262  007FFD  79                 	db	121	;'y'
  1263  007FFE  00                 	db	0
  1264  0000                     
  1265                           ; #config settings
  1266  007FFF  00                 	db	0	; dummy byte at the end
  1267  0000                     
  1268                           	psect	cinit
  1269  003FF6                     __pcinit:
  1270                           	opt stack 0
  1271  003FF6                     start_initialization:
  1272                           	opt stack 0
  1273  003FF6                     __initialization:
  1274                           	opt stack 0
  1275                           
  1276                           ; Initialize objects allocated to BANK3 (30 bytes)
  1277                           ; load TBLPTR registers with __pidataBANK3
  1278  003FF6  0E38               	movlw	low __pidataBANK3
  1279  003FF8  6EF6               	movwf	tblptrl,c
  1280  003FFA  0E51               	movlw	high __pidataBANK3
  1281  003FFC  6EF7               	movwf	tblptrh,c
  1282  003FFE  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1283  004000  6EF8               	movwf	tblptru,c
  1284  004002  EE03  F0B5         	lfsr	0,__pdataBANK3
  1285  004006  EE10 F01E          	lfsr	1,30
  1286  00400A                     copy_data0:
  1287  00400A  0009               	tblrd		*+
  1288  00400C  CFF5 FFEE          	movff	tablat,postinc0
  1289  004010  50E5               	movf	postdec1,w,c
  1290  004012  50E1               	movf	fsr1l,w,c
  1291  004014  E1FA               	bnz	copy_data0
  1292                           
  1293                           ; Initialize objects allocated to BANK2 (1 bytes)
  1294                           ; load TBLPTR registers with __pidataBANK2
  1295  004016  0EAC               	movlw	low __pidataBANK2
  1296  004018  6EF6               	movwf	tblptrl,c
  1297  00401A  0E51               	movlw	high __pidataBANK2
  1298  00401C  6EF7               	movwf	tblptrh,c
  1299  00401E  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1300  004020  6EF8               	movwf	tblptru,c
  1301  004022  0009               	tblrd		*+	;fetch initializer
  1302  004024  CFF5 F2FE          	movff	tablat,__pdataBANK2
  1303                           
  1304                           ; Clear objects allocated to BANK7 (200 bytes)
  1305  004028  EE07  F000         	lfsr	0,__pbssBANK7
  1306  00402C  0EC8               	movlw	200
  1307  00402E                     clear_0:
  1308  00402E  6AEE               	clrf	postinc0,c
  1309  004030  06E8               	decf	wreg,f,c
  1310  004032  E1FD               	bnz	clear_0
  1311                           
  1312                           ; Clear objects allocated to BANK6 (200 bytes)
  1313  004034  EE06  F000         	lfsr	0,__pbssBANK6
  1314  004038  0EC8               	movlw	200
  1315  00403A                     clear_1:
  1316  00403A  6AEE               	clrf	postinc0,c
  1317  00403C  06E8               	decf	wreg,f,c
  1318  00403E  E1FD               	bnz	clear_1
  1319                           
  1320                           ; Clear objects allocated to BANK3 (181 bytes)
  1321  004040  EE03  F000         	lfsr	0,__pbssBANK3
  1322  004044  0EB5               	movlw	181
  1323  004046                     clear_2:
  1324  004046  6AEE               	clrf	postinc0,c
  1325  004048  06E8               	decf	wreg,f,c
  1326  00404A  E1FD               	bnz	clear_2
  1327                           
  1328                           ; Clear objects allocated to BANK2 (58 bytes)
  1329  00404C  EE02  F0C4         	lfsr	0,__pbssBANK2
  1330  004050  0E3A               	movlw	58
  1331  004052                     clear_3:
  1332  004052  6AEE               	clrf	postinc0,c
  1333  004054  06E8               	decf	wreg,f,c
  1334  004056  E1FD               	bnz	clear_3
  1335                           
  1336                           ; Clear objects allocated to BANK1 (19 bytes)
  1337  004058  EE01  F0ED         	lfsr	0,__pbssBANK1
  1338  00405C  0E13               	movlw	19
  1339  00405E                     clear_4:
  1340  00405E  6AEE               	clrf	postinc0,c
  1341  004060  06E8               	decf	wreg,f,c
  1342  004062  E1FD               	bnz	clear_4
  1343                           
  1344                           ; Clear objects allocated to BANK4 (100 bytes)
  1345  004064  EE04  F040         	lfsr	0,__pbssBANK4
  1346  004068  0E64               	movlw	100
  1347  00406A                     clear_5:
  1348  00406A  6AEE               	clrf	postinc0,c
  1349  00406C  06E8               	decf	wreg,f,c
  1350  00406E  E1FD               	bnz	clear_5
  1351                           
  1352                           ; Clear objects allocated to BANK5 (100 bytes)
  1353  004070  EE05  F080         	lfsr	0,__pbssBANK5
  1354  004074  0E64               	movlw	100
  1355  004076                     clear_6:
  1356  004076  6AEE               	clrf	postinc0,c
  1357  004078  06E8               	decf	wreg,f,c
  1358  00407A  E1FD               	bnz	clear_6
  1359                           
  1360                           ; Clear objects allocated to COMRAM (39 bytes)
  1361  00407C  EE00  F038         	lfsr	0,__pbssCOMRAM
  1362  004080  0E27               	movlw	39
  1363  004082                     clear_7:
  1364  004082  6AEE               	clrf	postinc0,c
  1365  004084  06E8               	decf	wreg,f,c
  1366  004086  E1FD               	bnz	clear_7
  1367  004088                     end_of_initialization:
  1368                           	opt stack 0
  1369  004088                     __end_of__initialization:
  1370                           	opt stack 0
  1371  004088  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1372  00408A  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1373  00408C  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1374  00408E  6EF8               	movwf	tblptru,c
  1375  004090  0100               	movlb	0
  1376  004092  EF5B  F006         	goto	_main	;jump to C main() function
  1377                           tblptru	equ	0xFF8
  1378                           tblptrh	equ	0xFF7
  1379                           tblptrl	equ	0xFF6
  1380                           tablat	equ	0xFF5
  1381                           postinc0	equ	0xFEE
  1382                           wreg	equ	0xFE8
  1383                           postdec1	equ	0xFE5
  1384                           fsr1l	equ	0xFE1
  1385                           
  1386                           	psect	bssCOMRAM
  1387  000038                     __pbssCOMRAM:
  1388                           	opt stack 0
  1389  000038                     _outPipes:
  1390                           	opt stack 0
  1391  000038                     	ds	8
  1392  000040                     _inPipes:
  1393                           	opt stack 0
  1394  000040                     	ds	6
  1395  000046                     _pBDTEntryIn:
  1396                           	opt stack 0
  1397  000046                     	ds	6
  1398  00004C                     recebeByte@sizeData:
  1399                           	opt stack 0
  1400  00004C                     	ds	2
  1401  00004E                     _pBDTEntryEP0OutNext:
  1402                           	opt stack 0
  1403  00004E                     	ds	2
  1404  000050                     _pBDTEntryEP0OutCurrent:
  1405                           	opt stack 0
  1406  000050                     	ds	2
  1407  000052                     _cdc_tx_len:
  1408                           	opt stack 0
  1409  000052                     	ds	1
  1410  000053                     _USBDeferStatusStagePacket:
  1411                           	opt stack 0
  1412  000053                     	ds	1
  1413  000054                     _USBStatusStageTimeoutCounter:
  1414                           	opt stack 0
  1415  000054                     	ds	1
  1416  000055                     _endpoint_number:
  1417                           	opt stack 0
  1418  000055                     	ds	1
  1419  000056                     _controlTransferState:
  1420                           	opt stack 0
  1421  000056                     	ds	1
  1422  000057                     _shortPacketStatus:
  1423                           	opt stack 0
  1424  000057                     	ds	1
  1425  000058                     _USBDeviceState:
  1426                           	opt stack 0
  1427  000058                     	ds	1
  1428  000059                     _novaMsgLoRaWan:
  1429                           	opt stack 0
  1430  000059                     	ds	1
  1431  00005A                     _tamFrame:
  1432                           	opt stack 0
  1433  00005A                     	ds	1
  1434  00005B                     _tamDadosRecebidos:
  1435                           	opt stack 0
  1436  00005B                     	ds	1
  1437  00005C                     _command:
  1438                           	opt stack 0
  1439  00005C                     	ds	1
  1440  00005D                     _USTATcopy:
  1441                           	opt stack 0
  1442  00005D                     	ds	1
  1443  00005E                     _USBActiveConfiguration:
  1444                           	opt stack 0
  1445  00005E                     	ds	1
  1446                           tblptru	equ	0xFF8
  1447                           tblptrh	equ	0xFF7
  1448                           tblptrl	equ	0xFF6
  1449                           tablat	equ	0xFF5
  1450                           postinc0	equ	0xFEE
  1451                           wreg	equ	0xFE8
  1452                           postdec1	equ	0xFE5
  1453                           fsr1l	equ	0xFE1
  1454                           
  1455                           	psect	bssBANK1
  1456  0001ED                     __pbssBANK1:
  1457                           	opt stack 0
  1458  0001ED                     _tamanhoCommand:
  1459                           	opt stack 0
  1460  0001ED                     	ds	2
  1461  0001EF                     recebeByte@tamanhoMensagem:
  1462                           	opt stack 0
  1463  0001EF                     	ds	2
  1464  0001F1                     _CDCDataOutHandle:
  1465                           	opt stack 0
  1466  0001F1                     	ds	2
  1467  0001F3                     _cs:
  1468                           	opt stack 0
  1469  0001F3                     	ds	1
  1470  0001F4                     recebeByte@escapeCaracter:
  1471                           	opt stack 0
  1472  0001F4                     	ds	1
  1473  0001F5                     _cdc_rx_len:
  1474                           	opt stack 0
  1475  0001F5                     	ds	1
  1476  0001F6                     _USBTicksSinceSuspendEnd:
  1477                           	opt stack 0
  1478  0001F6                     	ds	1
  1479  0001F7                     _USBDeferOUTDataStagePackets:
  1480                           	opt stack 0
  1481  0001F7                     	ds	1
  1482  0001F8                     _USBDeferINDataStagePackets:
  1483                           	opt stack 0
  1484  0001F8                     	ds	1
  1485  0001F9                     _USBStatusStageEnabledFlag2:
  1486                           	opt stack 0
  1487  0001F9                     	ds	1
  1488  0001FA                     _USBStatusStageEnabledFlag1:
  1489                           	opt stack 0
  1490  0001FA                     	ds	1
  1491  0001FB                     _BothEP0OutUOWNsSet:
  1492                           	opt stack 0
  1493  0001FB                     	ds	1
  1494  0001FC                     _USBBusIsSuspended:
  1495                           	opt stack 0
  1496  0001FC                     	ds	1
  1497  0001FD                     _RemoteWakeup:
  1498                           	opt stack 0
  1499  0001FD                     	ds	1
  1500  0001FE                     _responseLoRaWan:
  1501                           	opt stack 0
  1502  0001FE                     	ds	1
  1503  0001FF                     _error_TX:
  1504                           	opt stack 0
  1505  0001FF                     	ds	1
  1506                           tblptru	equ	0xFF8
  1507                           tblptrh	equ	0xFF7
  1508                           tblptrl	equ	0xFF6
  1509                           tablat	equ	0xFF5
  1510                           postinc0	equ	0xFEE
  1511                           wreg	equ	0xFE8
  1512                           postdec1	equ	0xFE5
  1513                           fsr1l	equ	0xFE1
  1514                           
  1515                           	psect	bssBANK2
  1516  0002C4                     __pbssBANK2:
  1517                           	opt stack 0
  1518  0002C4                     _pBDTEntryOut:
  1519                           	opt stack 0
  1520  0002C4                     	ds	6
  1521  0002CA                     _USB1msTickCount:
  1522                           	opt stack 0
  1523  0002CA                     	ds	4
  1524  0002CE                     _freqPulses1:
  1525                           	opt stack 0
  1526  0002CE                     	ds	4
  1527  0002D2                     _pCDCDst:
  1528                           	opt stack 0
  1529  0002D2                     	ds	3
  1530  0002D5                     _pCDCSrc:
  1531                           	opt stack 0
  1532  0002D5                     	ds	3
  1533  0002D8                     _ep_data_out:
  1534                           	opt stack 0
  1535  0002D8                     	ds	3
  1536  0002DB                     _ep_data_in:
  1537                           	opt stack 0
  1538  0002DB                     	ds	3
  1539  0002DE                     _CDCDataInHandle:
  1540                           	opt stack 0
  1541  0002DE                     	ds	2
  1542  0002E0                     _pDst:
  1543                           	opt stack 0
  1544  0002E0                     	ds	2
  1545  0002E2                     _dig_4:
  1546                           	opt stack 0
  1547  0002E2                     	ds	2
  1548  0002E4                     _dig_3:
  1549                           	opt stack 0
  1550  0002E4                     	ds	2
  1551  0002E6                     _dig_2:
  1552                           	opt stack 0
  1553  0002E6                     	ds	2
  1554  0002E8                     _dig_1:
  1555                           	opt stack 0
  1556  0002E8                     	ds	2
  1557  0002EA                     _PAN_ID:
  1558                           	opt stack 0
  1559  0002EA                     	ds	2
  1560  0002EC                     recebeByte@checksumRecebimento:
  1561                           	opt stack 0
  1562  0002EC                     	ds	1
  1563  0002ED                     recebeByte@estadoRecepcao:
  1564                           	opt stack 0
  1565  0002ED                     	ds	1
  1566  0002EE                     _control_signal_bitmap:
  1567                           	opt stack 0
  1568  0002EE                     	ds	1
  1569  0002EF                     _cdc_mem_type:
  1570                           	opt stack 0
  1571  0002EF                     	ds	1
  1572  0002F0                     _cdc_trf_state:
  1573                           	opt stack 0
  1574  0002F0                     	ds	1
  1575  0002F1                     _numPacote:
  1576                           	opt stack 0
  1577  0002F1                     	ds	1
  1578  0002F2                     _aaa:
  1579                           	opt stack 0
  1580  0002F2                     	ds	1
  1581  0002F3                     _encryptMode:
  1582                           	opt stack 0
  1583  0002F3                     	ds	1
  1584  0002F4                     _retries_sending:
  1585                           	opt stack 0
  1586  0002F4                     	ds	1
  1587  0002F5                     _discovery_status:
  1588                           	opt stack 0
  1589  0002F5                     	ds	1
  1590  0002F6                     _delivery_status:
  1591                           	opt stack 0
  1592  0002F6                     	ds	1
  1593  0002F7                     _channel:
  1594                           	opt stack 0
  1595  0002F7                     	ds	1
  1596  0002F8                     _error_RX:
  1597                           	opt stack 0
  1598  0002F8                     	ds	1
  1599  0002F9                     _protocol:
  1600                           	opt stack 0
  1601  0002F9                     	ds	1
  1602  0002FA                     _error_AT:
  1603                           	opt stack 0
  1604  0002FA                     	ds	1
  1605  0002FB                     __preambleID:
  1606                           	opt stack 0
  1607  0002FB                     	ds	1
  1608  0002FC                     _USBAlternateInterface:
  1609                           	opt stack 0
  1610  0002FC                     	ds	2
  1611                           tblptru	equ	0xFF8
  1612                           tblptrh	equ	0xFF7
  1613                           tblptrl	equ	0xFF6
  1614                           tablat	equ	0xFF5
  1615                           postinc0	equ	0xFEE
  1616                           wreg	equ	0xFE8
  1617                           postdec1	equ	0xFE5
  1618                           fsr1l	equ	0xFE1
  1619                           
  1620                           	psect	dataBANK2
  1621  0002FE                     __pdataBANK2:
  1622                           	opt stack 0
  1623  0002FE                     __send_retries:
  1624                           	opt stack 0
  1625  0002FE                     	ds	1
  1626                           tblptru	equ	0xFF8
  1627                           tblptrh	equ	0xFF7
  1628                           tblptrl	equ	0xFF6
  1629                           tablat	equ	0xFF5
  1630                           postinc0	equ	0xFEE
  1631                           wreg	equ	0xFE8
  1632                           postdec1	equ	0xFE5
  1633                           fsr1l	equ	0xFE1
  1634                           
  1635                           	psect	bssBANK3
  1636  000300                     __pbssBANK3:
  1637                           	opt stack 0
  1638  000300                     _dadosRecebidos:
  1639                           	opt stack 0
  1640  000300                     	ds	20
  1641  000314                     _cdc_notice:
  1642                           	opt stack 0
  1643  000314                     	ds	10
  1644  00031E                     __channelMask:
  1645                           	opt stack 0
  1646  00031E                     	ds	8
  1647  000326                     _BaudRateGen:
  1648                           	opt stack 0
  1649  000326                     	ds	4
  1650  00032A                     _ticks:
  1651                           	opt stack 0
  1652  00032A                     	ds	4
  1653  00032E                     _freqPulses4:
  1654                           	opt stack 0
  1655  00032E                     	ds	4
  1656  000332                     _freqPulses3:
  1657                           	opt stack 0
  1658  000332                     	ds	4
  1659  000336                     _freqPulses2:
  1660                           	opt stack 0
  1661  000336                     	ds	4
  1662  00033A                     _sourceMacHigh:
  1663                           	opt stack 0
  1664  00033A                     	ds	4
  1665  00033E                     _sourceMacLow:
  1666                           	opt stack 0
  1667  00033E                     	ds	4
  1668  000342                     _response:
  1669                           	opt stack 0
  1670  000342                     	ds	100
  1671  0003A6                     _dummy_encapsulated_cmd_response:
  1672                           	opt stack 0
  1673  0003A6                     	ds	8
  1674  0003AE                     _line_coding:
  1675                           	opt stack 0
  1676  0003AE                     	ds	7
  1677                           tblptru	equ	0xFF8
  1678                           tblptrh	equ	0xFF7
  1679                           tblptrl	equ	0xFF6
  1680                           tablat	equ	0xFF5
  1681                           postinc0	equ	0xFEE
  1682                           wreg	equ	0xFE8
  1683                           postdec1	equ	0xFE5
  1684                           fsr1l	equ	0xFE1
  1685                           
  1686                           	psect	dataBANK3
  1687  0003B5                     __pdataBANK3:
  1688                           	opt stack 0
  1689  0003B5                     _MSG_LORAWAN:
  1690                           	opt stack 0
  1691  0003B5                     	ds	30
  1692                           tblptru	equ	0xFF8
  1693                           tblptrh	equ	0xFF7
  1694                           tblptrl	equ	0xFF6
  1695                           tablat	equ	0xFF5
  1696                           postinc0	equ	0xFEE
  1697                           wreg	equ	0xFE8
  1698                           postdec1	equ	0xFE5
  1699                           fsr1l	equ	0xFE1
  1700                           
  1701                           	psect	bssBANK4
  1702  000440                     __pbssBANK4:
  1703                           	opt stack 0
  1704  000440                     recebeByteLoRaWan@frameData:
  1705                           	opt stack 0
  1706  000440                     	ds	100
  1707                           tblptru	equ	0xFF8
  1708                           tblptrh	equ	0xFF7
  1709                           tblptrl	equ	0xFF6
  1710                           tablat	equ	0xFF5
  1711                           postinc0	equ	0xFEE
  1712                           wreg	equ	0xFE8
  1713                           postdec1	equ	0xFE5
  1714                           fsr1l	equ	0xFE1
  1715                           
  1716                           	psect	bssBANK5
  1717  000580                     __pbssBANK5:
  1718                           	opt stack 0
  1719  000580                     _receivePacket:
  1720                           	opt stack 0
  1721  000580                     	ds	100
  1722                           tblptru	equ	0xFF8
  1723                           tblptrh	equ	0xFF7
  1724                           tblptrl	equ	0xFF6
  1725                           tablat	equ	0xFF5
  1726                           postinc0	equ	0xFEE
  1727                           wreg	equ	0xFE8
  1728                           postdec1	equ	0xFE5
  1729                           fsr1l	equ	0xFE1
  1730                           
  1731                           	psect	bssBANK6
  1732  000600                     __pbssBANK6:
  1733                           	opt stack 0
  1734  000600                     _data:
  1735                           	opt stack 0
  1736  000600                     	ds	100
  1737  000664                     recebeByte@frameData:
  1738                           	opt stack 0
  1739  000664                     	ds	100
  1740                           tblptru	equ	0xFF8
  1741                           tblptrh	equ	0xFF7
  1742                           tblptrl	equ	0xFF6
  1743                           tablat	equ	0xFF5
  1744                           postinc0	equ	0xFEE
  1745                           wreg	equ	0xFE8
  1746                           postdec1	equ	0xFE5
  1747                           fsr1l	equ	0xFE1
  1748                           
  1749                           	psect	bssBANK7
  1750  000700                     __pbssBANK7:
  1751                           	opt stack 0
  1752  000700                     _frameBuffer:
  1753                           	opt stack 0
  1754  000700                     	ds	200
  1755                           tblptru	equ	0xFF8
  1756                           tblptrh	equ	0xFF7
  1757                           tblptrl	equ	0xFF6
  1758                           tablat	equ	0xFF5
  1759                           postinc0	equ	0xFEE
  1760                           wreg	equ	0xFE8
  1761                           postdec1	equ	0xFE5
  1762                           fsr1l	equ	0xFE1
  1763                           
  1764                           	psect	cstackBANK2
  1765  000200                     __pcstackBANK2:
  1766                           	opt stack 0
  1767  000200                     main@data:
  1768                           	opt stack 0
  1769                           
  1770                           ; 150 bytes @ 0x0
  1771  000200                     	ds	150
  1772  000296                     main@resp:
  1773                           	opt stack 0
  1774                           
  1775                           ; 1 bytes @ 0x96
  1776  000296                     	ds	1
  1777  000297                     main@tempo:
  1778                           	opt stack 0
  1779                           
  1780                           ; 4 bytes @ 0x97
  1781  000297                     	ds	4
  1782  00029B                     main@tempoTimeOut:
  1783                           	opt stack 0
  1784                           
  1785                           ; 4 bytes @ 0x9B
  1786  00029B                     	ds	4
  1787  00029F                     main@Icanal:
  1788                           	opt stack 0
  1789                           
  1790                           ; 1 bytes @ 0x9F
  1791  00029F                     	ds	1
  1792  0002A0                     main@sf:
  1793                           	opt stack 0
  1794                           
  1795                           ; 1 bytes @ 0xA0
  1796  0002A0                     	ds	1
  1797  0002A1                     main@deltaTempo:
  1798                           	opt stack 0
  1799                           
  1800                           ; 4 bytes @ 0xA1
  1801  0002A1                     	ds	4
  1802  0002A5                     _main$5716:
  1803                           	opt stack 0
  1804                           
  1805                           ; 3 bytes @ 0xA5
  1806  0002A5                     	ds	3
  1807  0002A8                     main@i:
  1808                           	opt stack 0
  1809                           
  1810                           ; 2 bytes @ 0xA8
  1811  0002A8                     	ds	2
  1812  0002AA                     main@Fcanal:
  1813                           	opt stack 0
  1814                           
  1815                           ; 1 bytes @ 0xAA
  1816  0002AA                     	ds	1
  1817  0002AB                     main@i_3270:
  1818                           	opt stack 0
  1819                           
  1820                           ; 1 bytes @ 0xAB
  1821  0002AB                     	ds	1
  1822  0002AC                     main@i_3271:
  1823                           	opt stack 0
  1824                           
  1825                           ; 1 bytes @ 0xAC
  1826  0002AC                     	ds	1
  1827  0002AD                     main@dr:
  1828                           	opt stack 0
  1829                           
  1830                           ; 1 bytes @ 0xAD
  1831  0002AD                     	ds	1
  1832  0002AE                     main@pisca:
  1833                           	opt stack 0
  1834                           
  1835                           ; 1 bytes @ 0xAE
  1836  0002AE                     	ds	1
  1837  0002AF                     main@dadoPoco:
  1838                           	opt stack 0
  1839                           
  1840                           ; 21 bytes @ 0xAF
  1841  0002AF                     	ds	21
  1842                           tblptru	equ	0xFF8
  1843                           tblptrh	equ	0xFF7
  1844                           tblptrl	equ	0xFF6
  1845                           tablat	equ	0xFF5
  1846                           postinc0	equ	0xFEE
  1847                           wreg	equ	0xFE8
  1848                           postdec1	equ	0xFE5
  1849                           fsr1l	equ	0xFE1
  1850                           
  1851                           	psect	cstackBANK1
  1852  000100                     __pcstackBANK1:
  1853                           	opt stack 0
  1854  000100                     _sprintf$5721:
  1855                           	opt stack 0
  1856                           
  1857                           ; 3 bytes @ 0x0
  1858  000100                     	ds	3
  1859  000103                     sprintf@idx:
  1860                           	opt stack 0
  1861                           
  1862                           ; 1 bytes @ 0x3
  1863  000103                     	ds	1
  1864  000104                     sprintf@cp:
  1865                           	opt stack 0
  1866                           
  1867                           ; 2 bytes @ 0x4
  1868  000104                     	ds	2
  1869  000106                     sprintf@len:
  1870                           	opt stack 0
  1871                           
  1872                           ; 2 bytes @ 0x6
  1873  000106                     	ds	2
  1874  000108                     sprintf@ap:
  1875                           	opt stack 0
  1876                           
  1877                           ; 2 bytes @ 0x8
  1878  000108                     	ds	2
  1879  00010A                     sprintf@prec:
  1880                           	opt stack 0
  1881                           
  1882                           ; 2 bytes @ 0xA
  1883  00010A                     	ds	2
  1884  00010C                     sprintf@tmpval:
  1885                           	opt stack 0
  1886                           
  1887                           ; 4 bytes @ 0xC
  1888  00010C                     	ds	4
  1889  000110                     sprintf@exp:
  1890                           	opt stack 0
  1891                           
  1892                           ; 2 bytes @ 0x10
  1893  000110                     	ds	2
  1894  000112                     sprintf@val:
  1895                           	opt stack 0
  1896                           
  1897                           ; 4 bytes @ 0x12
  1898  000112                     	ds	4
  1899  000116                     sprintf@fval:
  1900                           	opt stack 0
  1901                           
  1902                           ; 3 bytes @ 0x16
  1903  000116                     	ds	3
  1904  000119                     sprintf@width:
  1905                           	opt stack 0
  1906                           
  1907                           ; 2 bytes @ 0x19
  1908  000119                     	ds	2
  1909  00011B                     sprintf@flag:
  1910                           	opt stack 0
  1911                           
  1912                           ; 2 bytes @ 0x1B
  1913  00011B                     	ds	2
  1914  00011D                     sprintf@c:
  1915                           	opt stack 0
  1916                           
  1917                           ; 1 bytes @ 0x1D
  1918  00011D                     	ds	1
  1919  00011E                     SetChannelLoRaWan@comando:
  1920                           	opt stack 0
  1921  00011E                     AdaptiveDataRate@comando:
  1922                           	opt stack 0
  1923  00011E                     MacSave@comando:
  1924                           	opt stack 0
  1925  00011E                     SetSpreadingFactor@comando:
  1926                           	opt stack 0
  1927  00011E                     SetBandWidth@comando:
  1928                           	opt stack 0
  1929  00011E                     DataRate@comando:
  1930                           	opt stack 0
  1931  00011E                     TxLoRaWan@comando:
  1932                           	opt stack 0
  1933                           
  1934                           ; 200 bytes @ 0x1E
  1935  00011E                     	ds	200
  1936  0001E6                     SetChannelLoRaWan@status:
  1937                           	opt stack 0
  1938  0001E6                     AdaptiveDataRate@status:
  1939                           	opt stack 0
  1940  0001E6                     MacSave@status:
  1941                           	opt stack 0
  1942  0001E6                     SetSpreadingFactor@status:
  1943                           	opt stack 0
  1944  0001E6                     TxLoRaWan@conf:
  1945                           	opt stack 0
  1946  0001E6                     SetBandWidth@status:
  1947                           	opt stack 0
  1948  0001E6                     DataRate@status:
  1949                           	opt stack 0
  1950                           
  1951                           ; 2 bytes @ 0xE6
  1952  0001E6                     	ds	1
  1953  0001E7                     SetChannelLoRaWan@canal:
  1954                           	opt stack 0
  1955  0001E7                     SetSpreadingFactor@sf:
  1956                           	opt stack 0
  1957  0001E7                     TxLoRaWan@status:
  1958                           	opt stack 0
  1959                           
  1960                           ; 1 bytes @ 0xE7
  1961  0001E7                     	ds	1
  1962  0001E8                     TxLoRaWan@hex:
  1963                           	opt stack 0
  1964                           
  1965                           ; 4 bytes @ 0xE8
  1966  0001E8                     	ds	4
  1967  0001EC                     TxLoRaWan@i:
  1968                           	opt stack 0
  1969                           
  1970                           ; 1 bytes @ 0xEC
  1971  0001EC                     	ds	1
  1972                           tblptru	equ	0xFF8
  1973                           tblptrh	equ	0xFF7
  1974                           tblptrl	equ	0xFF6
  1975                           tablat	equ	0xFF5
  1976                           postinc0	equ	0xFEE
  1977                           wreg	equ	0xFE8
  1978                           postdec1	equ	0xFE5
  1979                           fsr1l	equ	0xFE1
  1980                           
  1981                           	psect	cstackBANK0
  1982  000060                     __pcstackBANK0:
  1983                           	opt stack 0
  1984  000060                     ??_setup_pulsos:
  1985  000060                     ??_isdigit:
  1986  000060                     ?_USBTransferOnePacket:
  1987                           	opt stack 0
  1988  000060                     ?_strlen:
  1989                           	opt stack 0
  1990  000060                     ?___awmod:
  1991                           	opt stack 0
  1992  000060                     ?___ftpack:
  1993                           	opt stack 0
  1994  000060                     ?___ftneg:
  1995                           	opt stack 0
  1996  000060                     ?_millis:
  1997                           	opt stack 0
  1998  000060                     ?__tdiv_to_l_:
  1999                           	opt stack 0
  2000  000060                     ?__div_to_l_:
  2001                           	opt stack 0
  2002  000060                     ?___lldiv:
  2003                           	opt stack 0
  2004  000060                     USBTransferOnePacket@dir:
  2005                           	opt stack 0
  2006  000060                     putch@data:
  2007                           	opt stack 0
  2008  000060                     retornaDado@dadoBit:
  2009                           	opt stack 0
  2010  000060                     putsUSBUSART@data:
  2011                           	opt stack 0
  2012  000060                     ___awmod@dividend:
  2013                           	opt stack 0
  2014  000060                     memset@p1:
  2015                           	opt stack 0
  2016  000060                     strcat@to:
  2017                           	opt stack 0
  2018  000060                     strlen@s:
  2019                           	opt stack 0
  2020  000060                     __div_to_l_@f1:
  2021                           	opt stack 0
  2022  000060                     ___ftpack@arg:
  2023                           	opt stack 0
  2024  000060                     __tdiv_to_l_@f1:
  2025                           	opt stack 0
  2026  000060                     ___ftge@ff1:
  2027                           	opt stack 0
  2028  000060                     ___ftneg@f1:
  2029                           	opt stack 0
  2030  000060                     ___lldiv@dividend:
  2031                           	opt stack 0
  2032                           
  2033                           ; 4 bytes @ 0x0
  2034  000060                     	ds	1
  2035  000061                     ??_retornaDado:
  2036  000061                     _isdigit$5161:
  2037                           	opt stack 0
  2038  000061                     USBTransferOnePacket@data:
  2039                           	opt stack 0
  2040                           
  2041                           ; 2 bytes @ 0x1
  2042  000061                     	ds	1
  2043  000062                     ??_strlen:
  2044  000062                     isdigit@c:
  2045                           	opt stack 0
  2046  000062                     putsUSBUSART@pData:
  2047                           	opt stack 0
  2048  000062                     ___awmod@divisor:
  2049                           	opt stack 0
  2050  000062                     memset@c:
  2051                           	opt stack 0
  2052  000062                     strcat@from:
  2053                           	opt stack 0
  2054                           
  2055                           ; 2 bytes @ 0x2
  2056  000062                     	ds	1
  2057  000063                     USBTransferOnePacket@len:
  2058                           	opt stack 0
  2059  000063                     retornaDado@selectDado:
  2060                           	opt stack 0
  2061  000063                     ___ftpack@exp:
  2062                           	opt stack 0
  2063  000063                     __div_to_l_@f2:
  2064                           	opt stack 0
  2065  000063                     __tdiv_to_l_@f2:
  2066                           	opt stack 0
  2067  000063                     ___ftge@ff2:
  2068                           	opt stack 0
  2069                           
  2070                           ; 3 bytes @ 0x3
  2071  000063                     	ds	1
  2072  000064                     ??_USBTransferOnePacket:
  2073  000064                     putsUSBUSART@len:
  2074                           	opt stack 0
  2075  000064                     retornaDado@dadoByte:
  2076                           	opt stack 0
  2077  000064                     ___awmod@counter:
  2078                           	opt stack 0
  2079  000064                     ___ftpack@sign:
  2080                           	opt stack 0
  2081  000064                     memset@n:
  2082                           	opt stack 0
  2083  000064                     strcat@cp:
  2084                           	opt stack 0
  2085  000064                     strlen@cp:
  2086                           	opt stack 0
  2087  000064                     millis@m:
  2088                           	opt stack 0
  2089  000064                     ___lldiv@divisor:
  2090                           	opt stack 0
  2091                           
  2092                           ; 4 bytes @ 0x4
  2093  000064                     	ds	1
  2094  000065                     ??___ftpack:
  2095  000065                     ?_le_pulsos:
  2096                           	opt stack 0
  2097  000065                     le_pulsos@modo:
  2098                           	opt stack 0
  2099  000065                     ___awmod@sign:
  2100                           	opt stack 0
  2101                           
  2102                           ; 1 bytes @ 0x5
  2103  000065                     	ds	1
  2104  000066                     ??__tdiv_to_l_:
  2105  000066                     ??___ftge:
  2106  000066                     ?___awdiv:
  2107                           	opt stack 0
  2108  000066                     ___awdiv@dividend:
  2109                           	opt stack 0
  2110  000066                     memset@p:
  2111                           	opt stack 0
  2112  000066                     __div_to_l_@quot:
  2113                           	opt stack 0
  2114                           
  2115                           ; 4 bytes @ 0x6
  2116  000066                     	ds	2
  2117  000068                     ??_parseLoRaWan:
  2118  000068                     ?___awtoft:
  2119                           	opt stack 0
  2120  000068                     ?___lltoft:
  2121                           	opt stack 0
  2122  000068                     USBDeviceInit@i:
  2123                           	opt stack 0
  2124  000068                     USBTransferOnePacket@ep:
  2125                           	opt stack 0
  2126  000068                     ___awdiv@divisor:
  2127                           	opt stack 0
  2128  000068                     ___awtoft@c:
  2129                           	opt stack 0
  2130  000068                     ___lldiv@quotient:
  2131                           	opt stack 0
  2132  000068                     ___lltoft@c:
  2133                           	opt stack 0
  2134                           
  2135                           ; 4 bytes @ 0x8
  2136  000068                     	ds	1
  2137  000069                     le_pulsos@freqPulses:
  2138                           	opt stack 0
  2139  000069                     USBTransferOnePacket@handle:
  2140                           	opt stack 0
  2141  000069                     __tdiv_to_l_@quot:
  2142                           	opt stack 0
  2143                           
  2144                           ; 4 bytes @ 0x9
  2145  000069                     	ds	1
  2146  00006A                     ___awdiv@counter:
  2147                           	opt stack 0
  2148  00006A                     __div_to_l_@cntr:
  2149                           	opt stack 0
  2150  00006A                     le_pulsos@freq:
  2151                           	opt stack 0
  2152                           
  2153                           ; 4 bytes @ 0xA
  2154  00006A                     	ds	1
  2155  00006B                     CDCTxService@i:
  2156                           	opt stack 0
  2157  00006B                     ___awdiv@sign:
  2158                           	opt stack 0
  2159  00006B                     ___awtoft@sign:
  2160                           	opt stack 0
  2161  00006B                     __div_to_l_@exp1:
  2162                           	opt stack 0
  2163                           
  2164                           ; 1 bytes @ 0xB
  2165  00006B                     	ds	1
  2166  00006C                     ??___lltoft:
  2167  00006C                     CDCTxService@byte_to_send:
  2168                           	opt stack 0
  2169  00006C                     ___lldiv@counter:
  2170                           	opt stack 0
  2171  00006C                     ___awdiv@quotient:
  2172                           	opt stack 0
  2173                           
  2174                           ; 2 bytes @ 0xC
  2175  00006C                     	ds	1
  2176  00006D                     ?___llmod:
  2177                           	opt stack 0
  2178  00006D                     __tdiv_to_l_@cntr:
  2179                           	opt stack 0
  2180  00006D                     delay@time:
  2181                           	opt stack 0
  2182  00006D                     setup_uart@baudRate:
  2183                           	opt stack 0
  2184  00006D                     ___llmod@dividend:
  2185                           	opt stack 0
  2186                           
  2187                           ; 4 bytes @ 0xD
  2188  00006D                     	ds	1
  2189  00006E                     ?___wmul:
  2190                           	opt stack 0
  2191  00006E                     __tdiv_to_l_@exp1:
  2192                           	opt stack 0
  2193  00006E                     ___wmul@multiplier:
  2194                           	opt stack 0
  2195                           
  2196                           ; 2 bytes @ 0xE
  2197  00006E                     	ds	2
  2198  000070                     ___lltoft@exp:
  2199                           	opt stack 0
  2200  000070                     ___wmul@multiplicand:
  2201                           	opt stack 0
  2202                           
  2203                           ; 2 bytes @ 0x10
  2204  000070                     	ds	1
  2205  000071                     ??_delay:
  2206  000071                     setup_uart@brg:
  2207                           	opt stack 0
  2208  000071                     ___llmod@divisor:
  2209                           	opt stack 0
  2210                           
  2211                           ; 4 bytes @ 0x11
  2212  000071                     	ds	1
  2213  000072                     ___wmul@product:
  2214                           	opt stack 0
  2215                           
  2216                           ; 2 bytes @ 0x12
  2217  000072                     	ds	2
  2218  000074                     ?___ftadd:
  2219                           	opt stack 0
  2220  000074                     ___ftadd@f1:
  2221                           	opt stack 0
  2222  000074                     parseLoRaWan@previous:
  2223                           	opt stack 0
  2224                           
  2225                           ; 4 bytes @ 0x14
  2226  000074                     	ds	1
  2227  000075                     ___llmod@counter:
  2228                           	opt stack 0
  2229                           
  2230                           ; 1 bytes @ 0x15
  2231  000075                     	ds	2
  2232  000077                     ___ftadd@f2:
  2233                           	opt stack 0
  2234                           
  2235                           ; 3 bytes @ 0x17
  2236  000077                     	ds	1
  2237  000078                     parseLoRaWan@intervalMAX:
  2238                           	opt stack 0
  2239                           
  2240                           ; 2 bytes @ 0x18
  2241  000078                     	ds	1
  2242  000079                     delay@to:
  2243                           	opt stack 0
  2244                           
  2245                           ; 4 bytes @ 0x19
  2246  000079                     	ds	1
  2247  00007A                     ??___ftadd:
  2248  00007A                     parseLoRaWan@status:
  2249                           	opt stack 0
  2250                           
  2251                           ; 1 bytes @ 0x1A
  2252  00007A                     	ds	1
  2253  00007B                     parseLoRaWan@timeout:
  2254                           	opt stack 0
  2255                           
  2256                           ; 1 bytes @ 0x1B
  2257  00007B                     	ds	1
  2258  00007C                     enviaComando@cmd:
  2259                           	opt stack 0
  2260                           
  2261                           ; 2 bytes @ 0x1C
  2262  00007C                     	ds	1
  2263  00007D                     ___ftadd@sign:
  2264                           	opt stack 0
  2265                           
  2266                           ; 1 bytes @ 0x1D
  2267  00007D                     	ds	1
  2268  00007E                     enviaComando@tipoComando:
  2269                           	opt stack 0
  2270  00007E                     ___ftadd@exp2:
  2271                           	opt stack 0
  2272                           
  2273                           ; 1 bytes @ 0x1E
  2274  00007E                     	ds	1
  2275  00007F                     ??_enviaComando:
  2276  00007F                     ___ftadd@exp1:
  2277                           	opt stack 0
  2278                           
  2279                           ; 1 bytes @ 0x1F
  2280  00007F                     	ds	1
  2281  000080                     ?___ftmul:
  2282                           	opt stack 0
  2283  000080                     ?___ftsub:
  2284                           	opt stack 0
  2285  000080                     ___ftmul@f1:
  2286                           	opt stack 0
  2287  000080                     ___ftsub@f1:
  2288                           	opt stack 0
  2289                           
  2290                           ; 3 bytes @ 0x20
  2291  000080                     	ds	1
  2292  000081                     enviaComando@i:
  2293                           	opt stack 0
  2294                           
  2295                           ; 2 bytes @ 0x21
  2296  000081                     	ds	2
  2297  000083                     enviaComando@i_4700:
  2298                           	opt stack 0
  2299  000083                     ___ftmul@f2:
  2300                           	opt stack 0
  2301  000083                     ___ftsub@f2:
  2302                           	opt stack 0
  2303                           
  2304                           ; 3 bytes @ 0x23
  2305  000083                     	ds	2
  2306  000085                     enviaComando@i_4701:
  2307                           	opt stack 0
  2308                           
  2309                           ; 2 bytes @ 0x25
  2310  000085                     	ds	1
  2311  000086                     ??___ftmul:
  2312  000086                     
  2313                           ; 1 bytes @ 0x26
  2314  000086                     	ds	1
  2315  000087                     ResetModuloLoRaWan@status:
  2316                           	opt stack 0
  2317  000087                     JoinLoRaWan@status:
  2318                           	opt stack 0
  2319                           
  2320                           ; 1 bytes @ 0x27
  2321  000087                     	ds	2
  2322  000089                     ___ftmul@exp:
  2323                           	opt stack 0
  2324                           
  2325                           ; 1 bytes @ 0x29
  2326  000089                     	ds	1
  2327  00008A                     ___ftmul@f3_as_product:
  2328                           	opt stack 0
  2329                           
  2330                           ; 3 bytes @ 0x2A
  2331  00008A                     	ds	3
  2332  00008D                     ___ftmul@cntr:
  2333                           	opt stack 0
  2334                           
  2335                           ; 1 bytes @ 0x2D
  2336  00008D                     	ds	1
  2337  00008E                     ___ftmul@sign:
  2338                           	opt stack 0
  2339                           
  2340                           ; 1 bytes @ 0x2E
  2341  00008E                     	ds	1
  2342  00008F                     ?___ftdiv:
  2343                           	opt stack 0
  2344  00008F                     ?_fround:
  2345                           	opt stack 0
  2346  00008F                     ?_scale:
  2347                           	opt stack 0
  2348  00008F                     ___ftdiv@f1:
  2349                           	opt stack 0
  2350                           
  2351                           ; 3 bytes @ 0x2F
  2352  00008F                     	ds	3
  2353  000092                     ___ftdiv@f2:
  2354                           	opt stack 0
  2355  000092                     _fround$5719:
  2356                           	opt stack 0
  2357  000092                     _scale$5720:
  2358                           	opt stack 0
  2359                           
  2360                           ; 3 bytes @ 0x32
  2361  000092                     	ds	3
  2362  000095                     ??___ftdiv:
  2363  000095                     scale@scl:
  2364                           	opt stack 0
  2365  000095                     _fround$5718:
  2366                           	opt stack 0
  2367                           
  2368                           ; 3 bytes @ 0x35
  2369  000095                     	ds	3
  2370  000098                     fround@prec:
  2371                           	opt stack 0
  2372  000098                     ___ftdiv@cntr:
  2373                           	opt stack 0
  2374                           
  2375                           ; 1 bytes @ 0x38
  2376  000098                     	ds	1
  2377  000099                     ___ftdiv@f3:
  2378                           	opt stack 0
  2379                           
  2380                           ; 3 bytes @ 0x39
  2381  000099                     	ds	3
  2382  00009C                     ___ftdiv@exp:
  2383                           	opt stack 0
  2384                           
  2385                           ; 1 bytes @ 0x3C
  2386  00009C                     	ds	1
  2387  00009D                     ___ftdiv@sign:
  2388                           	opt stack 0
  2389                           
  2390                           ; 1 bytes @ 0x3D
  2391  00009D                     	ds	1
  2392  00009E                     ?_le_AD:
  2393                           	opt stack 0
  2394                           
  2395                           ; 3 bytes @ 0x3E
  2396  00009E                     	ds	3
  2397  0000A1                     ??_le_AD:
  2398                           
  2399                           ; 1 bytes @ 0x41
  2400  0000A1                     	ds	2
  2401  0000A3                     _le_AD$5717:
  2402                           	opt stack 0
  2403                           
  2404                           ; 3 bytes @ 0x43
  2405  0000A3                     	ds	3
  2406  0000A6                     le_AD@corrente:
  2407                           	opt stack 0
  2408                           
  2409                           ; 3 bytes @ 0x46
  2410  0000A6                     	ds	3
  2411  0000A9                     le_AD@AnalogPort:
  2412                           	opt stack 0
  2413                           
  2414                           ; 1 bytes @ 0x49
  2415  0000A9                     	ds	1
  2416  0000AA                     le_AD@leituraAux:
  2417                           	opt stack 0
  2418                           
  2419                           ; 2 bytes @ 0x4A
  2420  0000AA                     	ds	2
  2421  0000AC                     le_AD@i:
  2422                           	opt stack 0
  2423                           
  2424                           ; 2 bytes @ 0x4C
  2425  0000AC                     	ds	2
  2426  0000AE                     le_AD@leitura:
  2427                           	opt stack 0
  2428                           
  2429                           ; 2 bytes @ 0x4E
  2430  0000AE                     	ds	2
  2431  0000B0                     ?___fttol:
  2432                           	opt stack 0
  2433  0000B0                     ___fttol@f1:
  2434                           	opt stack 0
  2435                           
  2436                           ; 3 bytes @ 0x50
  2437  0000B0                     	ds	4
  2438  0000B4                     ??___fttol:
  2439                           
  2440                           ; 1 bytes @ 0x54
  2441  0000B4                     	ds	5
  2442  0000B9                     ___fttol@sign1:
  2443                           	opt stack 0
  2444                           
  2445                           ; 1 bytes @ 0x59
  2446  0000B9                     	ds	1
  2447  0000BA                     ___fttol@lval:
  2448                           	opt stack 0
  2449                           
  2450                           ; 4 bytes @ 0x5A
  2451  0000BA                     	ds	4
  2452  0000BE                     ___fttol@exp1:
  2453                           	opt stack 0
  2454                           
  2455                           ; 1 bytes @ 0x5E
  2456  0000BE                     	ds	1
  2457  0000BF                     ?_sprintf:
  2458                           	opt stack 0
  2459  0000BF                     sprintf@sp:
  2460                           	opt stack 0
  2461                           
  2462                           ; 2 bytes @ 0x5F
  2463  0000BF                     	ds	2
  2464  0000C1                     sprintf@f:
  2465                           	opt stack 0
  2466                           
  2467                           ; 2 bytes @ 0x61
  2468  0000C1                     	ds	42
  2469  0000EB                     ??_sprintf:
  2470                           
  2471                           ; 1 bytes @ 0x8B
  2472  0000EB                     	ds	6
  2473  0000F1                     SetChannelLoRaWan@ligado:
  2474                           	opt stack 0
  2475  0000F1                     TxLoRaWan@porta:
  2476                           	opt stack 0
  2477  0000F1                     AdaptiveDataRate@state:
  2478                           	opt stack 0
  2479  0000F1                     SetBandWidth@bw:
  2480                           	opt stack 0
  2481  0000F1                     DataRate@dr:
  2482                           	opt stack 0
  2483                           
  2484                           ; 2 bytes @ 0x91
  2485  0000F1                     	ds	1
  2486  0000F2                     TxLoRaWan@data:
  2487                           	opt stack 0
  2488                           
  2489                           ; 2 bytes @ 0x92
  2490  0000F2                     	ds	1
  2491  0000F3                     ??_DataRate:
  2492  0000F3                     ??_SetBandWidth:
  2493                           
  2494                           ; 1 bytes @ 0x93
  2495  0000F3                     	ds	1
  2496  0000F4                     TxLoRaWan@tamData:
  2497                           	opt stack 0
  2498                           
  2499                           ; 1 bytes @ 0x94
  2500  0000F4                     	ds	1
  2501  0000F5                     ??_TxLoRaWan:
  2502                           
  2503                           ; 1 bytes @ 0x95
  2504  0000F5                     	ds	1
  2505  0000F6                     ??_main:
  2506                           
  2507                           ; 1 bytes @ 0x96
  2508  0000F6                     	ds	10
  2509                           tblptru	equ	0xFF8
  2510                           tblptrh	equ	0xFF7
  2511                           tblptrl	equ	0xFF6
  2512                           tablat	equ	0xFF5
  2513                           postinc0	equ	0xFEE
  2514                           wreg	equ	0xFE8
  2515                           postdec1	equ	0xFE5
  2516                           fsr1l	equ	0xFE1
  2517                           
  2518                           	psect	cstackCOMRAM
  2519  000001                     __pcstackCOMRAM:
  2520                           	opt stack 0
  2521  000001                     ??_getch:
  2522  000001                     ??_USBStdGetDscHandler:
  2523  000001                     ??_USBStdGetStatusHandler:
  2524  000001                     ?_strcmp:
  2525                           	opt stack 0
  2526  000001                     ?_strncmp:
  2527                           	opt stack 0
  2528  000001                     ?i2_USBTransferOnePacket:
  2529                           	opt stack 0
  2530  000001                     ?i2_strlen:
  2531                           	opt stack 0
  2532  000001                     USBConfigureEndpoint@direction:
  2533                           	opt stack 0
  2534  000001                     USBCtrlTrfTxService@byteToSend:
  2535                           	opt stack 0
  2536  000001                     USBCtrlTrfRxService@i:
  2537                           	opt stack 0
  2538  000001                     toupper@c:
  2539                           	opt stack 0
  2540  000001                     i2USBTransferOnePacket@dir:
  2541                           	opt stack 0
  2542  000001                     memcpy@d1:
  2543                           	opt stack 0
  2544  000001                     strcmp@s1:
  2545                           	opt stack 0
  2546  000001                     strcpy@to:
  2547                           	opt stack 0
  2548  000001                     strncmp@s1:
  2549                           	opt stack 0
  2550  000001                     i2memset@p1:
  2551                           	opt stack 0
  2552  000001                     i2strlen@s:
  2553                           	opt stack 0
  2554                           
  2555                           ; 2 bytes @ 0x0
  2556  000001                     	ds	1
  2557  000002                     ??_USBConfigureEndpoint:
  2558  000002                     USBCtrlTrfRxService@byteToRead:
  2559                           	opt stack 0
  2560  000002                     USBCtrlTrfInHandler@lastDTS:
  2561                           	opt stack 0
  2562  000002                     getch@RC:
  2563                           	opt stack 0
  2564  000002                     converter@conv2:
  2565                           	opt stack 0
  2566  000002                     USBStdGetStatusHandler@p:
  2567                           	opt stack 0
  2568  000002                     i2USBTransferOnePacket@data:
  2569                           	opt stack 0
  2570                           
  2571                           ; 2 bytes @ 0x1
  2572  000002                     	ds	1
  2573  000003                     ??i2_strlen:
  2574  000003                     getch@data:
  2575                           	opt stack 0
  2576  000003                     converter@resul:
  2577                           	opt stack 0
  2578  000003                     memcpy@s1:
  2579                           	opt stack 0
  2580  000003                     strcmp@s2:
  2581                           	opt stack 0
  2582  000003                     strcpy@from:
  2583                           	opt stack 0
  2584  000003                     strncmp@s2:
  2585                           	opt stack 0
  2586  000003                     i2memset@c:
  2587                           	opt stack 0
  2588                           
  2589                           ; 2 bytes @ 0x2
  2590  000003                     	ds	1
  2591  000004                     converter@aux:
  2592                           	opt stack 0
  2593  000004                     i2USBTransferOnePacket@len:
  2594                           	opt stack 0
  2595                           
  2596                           ; 1 bytes @ 0x3
  2597  000004                     	ds	1
  2598  000005                     ??_strcmp:
  2599  000005                     ??i2_USBTransferOnePacket:
  2600  000005                     converter@aux2:
  2601                           	opt stack 0
  2602  000005                     memcpy@n:
  2603                           	opt stack 0
  2604  000005                     strcpy@cp:
  2605                           	opt stack 0
  2606  000005                     strncmp@len:
  2607                           	opt stack 0
  2608  000005                     i2memset@n:
  2609                           	opt stack 0
  2610  000005                     i2strlen@cp:
  2611                           	opt stack 0
  2612                           
  2613                           ; 2 bytes @ 0x4
  2614  000005                     	ds	1
  2615  000006                     USBConfigureEndpoint@EPNum:
  2616                           	opt stack 0
  2617  000006                     converter@conv1:
  2618                           	opt stack 0
  2619  000006                     strcmp@r:
  2620                           	opt stack 0
  2621                           
  2622                           ; 1 bytes @ 0x5
  2623  000006                     	ds	1
  2624  000007                     ??_strncmp:
  2625  000007                     USBConfigureEndpoint@handle:
  2626                           	opt stack 0
  2627  000007                     memcpy@d:
  2628                           	opt stack 0
  2629  000007                     i2memset@p:
  2630                           	opt stack 0
  2631                           
  2632                           ; 2 bytes @ 0x6
  2633  000007                     	ds	2
  2634  000009                     USBEnableEndpoint@options:
  2635                           	opt stack 0
  2636  000009                     i2USBDeviceInit@i:
  2637                           	opt stack 0
  2638  000009                     i2USBTransferOnePacket@ep:
  2639                           	opt stack 0
  2640  000009                     memcpy@s:
  2641                           	opt stack 0
  2642                           
  2643                           ; 2 bytes @ 0x8
  2644  000009                     	ds	1
  2645  00000A                     ??_recebeByteLoRaWan:
  2646  00000A                     USBEnableEndpoint@p:
  2647                           	opt stack 0
  2648  00000A                     i2USBTransferOnePacket@handle:
  2649                           	opt stack 0
  2650                           
  2651                           ; 2 bytes @ 0x9
  2652  00000A                     	ds	1
  2653  00000B                     memcpy@tmp:
  2654                           	opt stack 0
  2655                           
  2656                           ; 1 bytes @ 0xA
  2657  00000B                     	ds	1
  2658  00000C                     USBEnableEndpoint@ep:
  2659                           	opt stack 0
  2660                           
  2661                           ; 1 bytes @ 0xB
  2662  00000C                     	ds	1
  2663  00000D                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  2664                           	opt stack 0
  2665                           
  2666                           ; 2 bytes @ 0xC
  2667  00000D                     	ds	1
  2668  00000E                     recebeByteLoRaWan@len:
  2669                           	opt stack 0
  2670                           
  2671                           ; 1 bytes @ 0xD
  2672  00000E                     	ds	1
  2673  00000F                     recebeByteLoRaWan@port:
  2674                           	opt stack 0
  2675  00000F                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  2676                           	opt stack 0
  2677                           
  2678                           ; 2 bytes @ 0xE
  2679  00000F                     	ds	1
  2680  000010                     recebeByteLoRaWan@b:
  2681                           	opt stack 0
  2682                           
  2683                           ; 1 bytes @ 0xF
  2684  000010                     	ds	1
  2685  000011                     recebeByteLoRaWan@i:
  2686                           	opt stack 0
  2687  000011                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  2688                           	opt stack 0
  2689                           
  2690                           ; 2 bytes @ 0x10
  2691  000011                     	ds	1
  2692  000012                     recebeByteLoRaWan@tamMsgRx:
  2693                           	opt stack 0
  2694                           
  2695                           ; 1 bytes @ 0x11
  2696  000012                     	ds	1
  2697  000013                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  2698  000013                     recebeByteLoRaWan@i_4714:
  2699                           	opt stack 0
  2700                           
  2701                           ; 1 bytes @ 0x12
  2702  000013                     	ds	2
  2703  000015                     ??_USBStdFeatureReqHandler:
  2704  000015                     USBStdSetCfgHandler@i:
  2705                           	opt stack 0
  2706                           
  2707                           ; 1 bytes @ 0x14
  2708  000015                     	ds	1
  2709  000016                     USBStdFeatureReqHandler@pUEP:
  2710                           	opt stack 0
  2711                           
  2712                           ; 2 bytes @ 0x15
  2713  000016                     	ds	2
  2714  000018                     USBStdFeatureReqHandler@current_ep_data:
  2715                           	opt stack 0
  2716                           
  2717                           ; 1 bytes @ 0x17
  2718  000018                     	ds	1
  2719  000019                     USBStdFeatureReqHandler@p:
  2720                           	opt stack 0
  2721                           
  2722                           ; 2 bytes @ 0x18
  2723  000019                     	ds	2
  2724  00001B                     ??_USBCtrlEPService:
  2725  00001B                     
  2726                           ; 1 bytes @ 0x1A
  2727  00001B                     	ds	1
  2728  00001C                     USBDeviceTasks@i:
  2729                           	opt stack 0
  2730                           
  2731                           ; 1 bytes @ 0x1B
  2732  00001C                     	ds	1
  2733  00001D                     ??_SYS_InterruptHigh:
  2734                           
  2735                           ; 1 bytes @ 0x1C
  2736  00001D                     	ds	19
  2737  000030                     SYS_InterruptHigh@dig1:
  2738                           	opt stack 0
  2739                           
  2740                           ; 2 bytes @ 0x2F
  2741  000030                     	ds	2
  2742  000032                     SYS_InterruptHigh@dig2:
  2743                           	opt stack 0
  2744                           
  2745                           ; 2 bytes @ 0x31
  2746  000032                     	ds	2
  2747  000034                     SYS_InterruptHigh@dig3:
  2748                           	opt stack 0
  2749                           
  2750                           ; 2 bytes @ 0x33
  2751  000034                     	ds	2
  2752  000036                     SYS_InterruptHigh@dig4:
  2753                           	opt stack 0
  2754                           
  2755                           ; 2 bytes @ 0x35
  2756  000036                     	ds	2
  2757                           tblptru	equ	0xFF8
  2758                           tblptrh	equ	0xFF7
  2759                           tblptrl	equ	0xFF6
  2760                           tablat	equ	0xFF5
  2761                           postinc0	equ	0xFEE
  2762                           wreg	equ	0xFE8
  2763                           postdec1	equ	0xFE5
  2764                           fsr1l	equ	0xFE1
  2765                           
  2766 ;;
  2767 ;;Main: autosize = 0, tempsize = 10, incstack = 0, save=0
  2768 ;;
  2769 ;; *************** function _main *****************
  2770 ;; Defined at:
  2771 ;;		line 47 in file "UT.c"
  2772 ;; Parameters:    Size  Location     Type
  2773 ;;		None
  2774 ;; Auto vars:     Size  Location     Type
  2775 ;;  sf              1  160[BANK2 ] unsigned char 
  2776 ;;  dr              1  173[BANK2 ] unsigned char 
  2777 ;;  i               1  172[BANK2 ] unsigned char 
  2778 ;;  i               1  171[BANK2 ] unsigned char 
  2779 ;;  tempoTimeOut    4  155[BANK2 ] unsigned long 
  2780 ;;  data          150    0[BANK2 ] unsigned char [150]
  2781 ;;  Fcanal          1  170[BANK2 ] unsigned char 
  2782 ;;  Icanal          1  159[BANK2 ] unsigned char 
  2783 ;;  deltaTempo      4  161[BANK2 ] unsigned long 
  2784 ;;  tempo           4  151[BANK2 ] unsigned long 
  2785 ;;  resp            1  150[BANK2 ] unsigned char 
  2786 ;;  i               2  168[BANK2 ] int 
  2787 ;;  dadoPoco       21  175[BANK2 ] struct .
  2788 ;;  pisca           1  174[BANK2 ] unsigned char 
  2789 ;; Return value:  Size  Location     Type
  2790 ;;                  1    wreg      void 
  2791 ;; Registers used:
  2792 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2793 ;; Tracked objects:
  2794 ;;		On entry : 0/0
  2795 ;;		On exit  : 0/0
  2796 ;;		Unchanged: 0/0
  2797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2798 ;;      Params:         0       0       0       0       0       0       0       0       0
  2799 ;;      Locals:         0       0       0     196       0       0       0       0       0
  2800 ;;      Temps:          0      10       0       0       0       0       0       0       0
  2801 ;;      Totals:         0      10       0     196       0       0       0       0       0
  2802 ;;Total ram usage:      206 bytes
  2803 ;; Hardware stack levels required when called:   15
  2804 ;; This function calls:
  2805 ;;		_AdaptiveDataRate
  2806 ;;		_DataRate
  2807 ;;		_MacSave
  2808 ;;		_SetBandWidth
  2809 ;;		_SetChannelLoRaWan
  2810 ;;		_SetSpreadingFactor
  2811 ;;		_TxLoRaWan
  2812 ;;		_USBDeviceInit
  2813 ;;		___ftmul
  2814 ;;		___fttol
  2815 ;;		_delay
  2816 ;;		_le_AD
  2817 ;;		_le_pulsos
  2818 ;;		_millis
  2819 ;;		_putch
  2820 ;;		_putsUSBUSART
  2821 ;;		_retornaDado
  2822 ;;		_setup_AD
  2823 ;;		_setup_ccp1
  2824 ;;		_setup_pulsos
  2825 ;;		_setup_uart
  2826 ;;		_sprintf
  2827 ;;		_verificaUSB
  2828 ;; This function is called by:
  2829 ;;		Startup code after reset
  2830 ;; This function uses a non-reentrant model
  2831 ;;
  2832                           
  2833                           	psect	text0
  2834  000CB6                     __ptext0:
  2835                           	opt stack 0
  2836  000CB6                     _main:
  2837                           	opt stack 16
  2838                           
  2839                           ;UT.c: 48: uint8_t pisca=0;
  2840                           
  2841                           ;incstack = 0
  2842  000CB6  0E00               	movlw	0
  2843  000CB8  0102               	movlb	2	; () banked
  2844  000CBA  6FAE               	movwf	main@pisca& (0+255),b
  2845                           
  2846                           ; BSR set to: 2
  2847                           ;UT.c: 50: TRISEbits.RE2=0;
  2848  000CBC  9496               	bcf	3990,2,c	;volatile
  2849                           
  2850                           ; BSR set to: 2
  2851                           ;UT.c: 51: PORTDbits.RD4=0;
  2852  000CBE  9883               	bcf	3971,4,c	;volatile
  2853                           
  2854                           ; BSR set to: 2
  2855                           ;UT.c: 52: TRISDbits.RD4=0;
  2856  000CC0  9895               	bcf	3989,4,c	;volatile
  2857                           
  2858                           ; BSR set to: 2
  2859                           ;UT.c: 53: PORTDbits.RD5=0;
  2860  000CC2  9A83               	bcf	3971,5,c	;volatile
  2861                           
  2862                           ; BSR set to: 2
  2863                           ;UT.c: 54: TRISDbits.RD5=0;
  2864  000CC4  9A95               	bcf	3989,5,c	;volatile
  2865                           
  2866                           ; BSR set to: 2
  2867                           ;UT.c: 55: PORTDbits.RD6=0;
  2868  000CC6  9C83               	bcf	3971,6,c	;volatile
  2869                           
  2870                           ; BSR set to: 2
  2871                           ;UT.c: 56: TRISDbits.RD6=0;
  2872  000CC8  9C95               	bcf	3989,6,c	;volatile
  2873                           
  2874                           ; BSR set to: 2
  2875                           ;UT.c: 57: PORTDbits.RD7=0;
  2876  000CCA  9E83               	bcf	3971,7,c	;volatile
  2877                           
  2878                           ; BSR set to: 2
  2879                           ;UT.c: 58: TRISDbits.RD7=0;
  2880  000CCC  9E95               	bcf	3989,7,c	;volatile
  2881                           
  2882                           ;UT.c: 60: for (int i=0;i<25;i++)
  2883  000CCE  0E00               	movlw	0
  2884  000CD0  6FA9               	movwf	(main@i+1)& (0+255),b
  2885  000CD2  0E00               	movlw	0
  2886  000CD4  6FA8               	movwf	main@i& (0+255),b
  2887  000CD6                     l10119:
  2888                           
  2889                           ; BSR set to: 2
  2890  000CD6  BFA9               	btfsc	(main@i+1)& (0+255),7,b
  2891  000CD8  D006               	goto	l971
  2892  000CDA  51A9               	movf	(main@i+1)& (0+255),w,b
  2893  000CDC  E11C               	bnz	l10131
  2894  000CDE  0E19               	movlw	25
  2895  000CE0  5DA8               	subwf	main@i& (0+255),w,b
  2896  000CE2  B0D8               	btfsc	status,0,c
  2897  000CE4  D018               	goto	u10270
  2898  000CE6                     l971:
  2899                           
  2900                           ; BSR set to: 2
  2901                           ;UT.c: 61: {
  2902                           ;UT.c: 62: pisca ^= 1;
  2903                           
  2904                           ; BSR set to: 2
  2905  000CE6  0E01               	movlw	1
  2906  000CE8  1BAE               	xorwf	main@pisca& (0+255),f,b
  2907                           
  2908                           ; BSR set to: 2
  2909                           ;UT.c: 63: PORTEbits.RE2 = pisca;
  2910  000CEA  B1AE               	btfsc	main@pisca& (0+255),0,b
  2911  000CEC  D002               	bra	u10265
  2912  000CEE  9484               	bcf	3972,2,c	;volatile
  2913  000CF0  D001               	bra	u10266
  2914  000CF2                     u10265:
  2915  000CF2  8484               	bsf	3972,2,c	;volatile
  2916  000CF4                     u10266:
  2917                           
  2918                           ;UT.c: 64: _delay((unsigned long)((200)*(48000000/4000.0)));
  2919  000CF4  0E0D               	movlw	13
  2920  000CF6  0100               	movlb	0	; () banked
  2921  000CF8  6FF7               	movwf	(??_main+1)& (0+255),b
  2922  000CFA  0E2D               	movlw	45
  2923  000CFC  6FF6               	movwf	??_main& (0+255),b
  2924  000CFE  0ED7               	movlw	215
  2925  000D00                     u10837:
  2926  000D00  2EE8               	decfsz	wreg,f,c
  2927  000D02  D7FE               	bra	u10837
  2928  000D04  2FF6               	decfsz	??_main& (0+255),f,b
  2929  000D06  D7FC               	bra	u10837
  2930  000D08  2FF7               	decfsz	(??_main+1)& (0+255),f,b
  2931  000D0A  D7FA               	bra	u10837
  2932  000D0C  D000               	nop2	
  2933  000D0E  0102               	movlb	2	; () banked
  2934  000D10  4BA8               	infsnz	main@i& (0+255),f,b
  2935  000D12  2BA9               	incf	(main@i+1)& (0+255),f,b
  2936  000D14  D7E0               	goto	l10119
  2937  000D16                     u10270:
  2938  000D16                     l10131:
  2939                           
  2940                           ; BSR set to: 2
  2941                           ;UT.c: 65: }
  2942                           ;UT.c: 74: setup_uart(57600);
  2943  000D16  0E00               	movlw	0
  2944  000D18  0100               	movlb	0	; () banked
  2945  000D1A  6F6D               	movwf	setup_uart@baudRate& (0+255),b
  2946  000D1C  0EE1               	movlw	225
  2947  000D1E  6F6E               	movwf	(setup_uart@baudRate+1)& (0+255),b
  2948  000D20  0E00               	movlw	0
  2949  000D22  6F6F               	movwf	(setup_uart@baudRate+2)& (0+255),b
  2950  000D24  0E00               	movlw	0
  2951  000D26  6F70               	movwf	(setup_uart@baudRate+3)& (0+255),b
  2952  000D28  EC4B  F020         	call	_setup_uart	;wreg free
  2953                           
  2954                           ;UT.c: 77: USBDeviceInit();
  2955  000D2C  EC81  F013         	call	_USBDeviceInit	;wreg free
  2956                           
  2957                           ;UT.c: 78: setup_AD();
  2958  000D30  ECC0  F028         	call	_setup_AD	;wreg free
  2959                           
  2960                           ;UT.c: 79: setup_pulsos();
  2961  000D34  ECFD  F01E         	call	_setup_pulsos	;wreg free
  2962                           
  2963                           ;UT.c: 80: setup_ccp1();
  2964  000D38  EC5C  F026         	call	_setup_ccp1	;wreg free
  2965                           
  2966                           ;UT.c: 82: verificaUSB();
  2967  000D3C  ECA6  F027         	call	_verificaUSB	;wreg free
  2968                           
  2969                           ;UT.c: 104: struct
  2970                           ;UT.c: 105: {
  2971                           ;UT.c: 107: uint8_t feedback;
  2972                           ;UT.c: 108: uint16_t nivel1;
  2973                           ;UT.c: 109: uint16_t nivel2;
  2974                           ;UT.c: 110: uint32_t pulsos1;
  2975                           ;UT.c: 111: uint32_t pulsos2;
  2976                           ;UT.c: 112: uint32_t pulsos3;
  2977                           ;UT.c: 113: uint32_t pulsos4;
  2978                           ;UT.c: 114: } dadoPoco;
  2979                           ;UT.c: 118: putch(0x34);
  2980  000D40  0E34               	movlw	52
  2981  000D42  ECCF  F028         	call	_putch
  2982  000D46                     
  2983                           ;UT.c: 161: {
  2984                           ;UT.c: 162: uint32_t tempo=millis();
  2985  000D46  EC54  F028         	call	_millis	;wreg free
  2986  000D4A  C060  F297         	movff	?_millis,main@tempo
  2987  000D4E  C061  F298         	movff	?_millis+1,main@tempo+1
  2988  000D52  C062  F299         	movff	?_millis+2,main@tempo+2
  2989  000D56  C063  F29A         	movff	?_millis+3,main@tempo+3
  2990                           
  2991                           ;UT.c: 163: pisca ^= 1;
  2992  000D5A  0E01               	movlw	1
  2993  000D5C  0102               	movlb	2	; () banked
  2994  000D5E  1BAE               	xorwf	main@pisca& (0+255),f,b
  2995                           
  2996                           ; BSR set to: 2
  2997                           ;UT.c: 164: PORTEbits.RE2 = pisca;
  2998  000D60  B1AE               	btfsc	main@pisca& (0+255),0,b
  2999  000D62  D002               	bra	u10285
  3000  000D64  9484               	bcf	3972,2,c	;volatile
  3001  000D66  D001               	bra	u10286
  3002  000D68                     u10285:
  3003  000D68  8484               	bsf	3972,2,c	;volatile
  3004  000D6A                     u10286:
  3005                           
  3006                           ;UT.c: 182: dadoPoco.feedback=dadosRecebidos[1].data;
  3007  000D6A  C303  F2AF         	movff	_dadosRecebidos+3,main@dadoPoco	;volatile
  3008                           
  3009                           ;UT.c: 183: dadoPoco.nivel1 =(uint16_t)(le_AD(0)*1000.0);
  3010  000D6E  0E00               	movlw	0
  3011  000D70  ECF3  F015         	call	_le_AD
  3012  000D74  C09E  F2A5         	movff	?_le_AD,_main$5716
  3013  000D78  C09F  F2A6         	movff	?_le_AD+1,_main$5716+1
  3014  000D7C  C0A0  F2A7         	movff	?_le_AD+2,_main$5716+2
  3015                           
  3016                           ;UT.c: 183: dadoPoco.nivel1 =(uint16_t)(le_AD(0)*1000.0);
  3017  000D80  0E00               	movlw	0
  3018  000D82  0100               	movlb	0	; () banked
  3019  000D84  6F83               	movwf	___ftmul@f2& (0+255),b
  3020  000D86  0E7A               	movlw	122
  3021  000D88  6F84               	movwf	(___ftmul@f2+1)& (0+255),b
  3022  000D8A  0E44               	movlw	68
  3023  000D8C  6F85               	movwf	(___ftmul@f2+2)& (0+255),b
  3024  000D8E  C2A5  F080         	movff	_main$5716,___ftmul@f1
  3025  000D92  C2A6  F081         	movff	_main$5716+1,___ftmul@f1+1
  3026  000D96  C2A7  F082         	movff	_main$5716+2,___ftmul@f1+2
  3027  000D9A  EC46  F01B         	call	___ftmul	;wreg free
  3028  000D9E  C080  F0B0         	movff	?___ftmul,___fttol@f1
  3029  000DA2  C081  F0B1         	movff	?___ftmul+1,___fttol@f1+1
  3030  000DA6  C082  F0B2         	movff	?___ftmul+2,___fttol@f1+2
  3031  000DAA  ECCA  F01A         	call	___fttol	;wreg free
  3032  000DAE  C0B0  F2B0         	movff	?___fttol,main@dadoPoco+1
  3033  000DB2  C0B1  F2B1         	movff	?___fttol+1,main@dadoPoco+2
  3034                           
  3035                           ;UT.c: 184: dadoPoco.nivel2 =(uint16_t)(le_AD(1)*1000.0);
  3036  000DB6  0E01               	movlw	1
  3037  000DB8  ECF3  F015         	call	_le_AD
  3038  000DBC  C09E  F2A5         	movff	?_le_AD,_main$5716
  3039  000DC0  C09F  F2A6         	movff	?_le_AD+1,_main$5716+1
  3040  000DC4  C0A0  F2A7         	movff	?_le_AD+2,_main$5716+2
  3041                           
  3042                           ;UT.c: 184: dadoPoco.nivel2 =(uint16_t)(le_AD(1)*1000.0);
  3043  000DC8  0E00               	movlw	0
  3044  000DCA  0100               	movlb	0	; () banked
  3045  000DCC  6F83               	movwf	___ftmul@f2& (0+255),b
  3046  000DCE  0E7A               	movlw	122
  3047  000DD0  6F84               	movwf	(___ftmul@f2+1)& (0+255),b
  3048  000DD2  0E44               	movlw	68
  3049  000DD4  6F85               	movwf	(___ftmul@f2+2)& (0+255),b
  3050  000DD6  C2A5  F080         	movff	_main$5716,___ftmul@f1
  3051  000DDA  C2A6  F081         	movff	_main$5716+1,___ftmul@f1+1
  3052  000DDE  C2A7  F082         	movff	_main$5716+2,___ftmul@f1+2
  3053  000DE2  EC46  F01B         	call	___ftmul	;wreg free
  3054  000DE6  C080  F0B0         	movff	?___ftmul,___fttol@f1
  3055  000DEA  C081  F0B1         	movff	?___ftmul+1,___fttol@f1+1
  3056  000DEE  C082  F0B2         	movff	?___ftmul+2,___fttol@f1+2
  3057  000DF2  ECCA  F01A         	call	___fttol	;wreg free
  3058  000DF6  C0B0  F2B2         	movff	?___fttol,main@dadoPoco+3
  3059  000DFA  C0B1  F2B3         	movff	?___fttol+1,main@dadoPoco+4
  3060                           
  3061                           ;UT.c: 185: dadoPoco.pulsos1 =le_pulsos(1,retornaDado(4,0));
  3062  000DFE  0E00               	movlw	0
  3063  000E00  0100               	movlb	0	; () banked
  3064  000E02  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3065  000E04  0E04               	movlw	4
  3066  000E06  EC75  F024         	call	_retornaDado
  3067  000E0A  0100               	movlb	0	; () banked
  3068  000E0C  6F65               	movwf	le_pulsos@modo& (0+255),b
  3069  000E0E  0E01               	movlw	1
  3070  000E10  EC35  F01C         	call	_le_pulsos
  3071  000E14  C065  F2B4         	movff	?_le_pulsos,main@dadoPoco+5
  3072  000E18  C066  F2B5         	movff	?_le_pulsos+1,main@dadoPoco+6
  3073  000E1C  C067  F2B6         	movff	?_le_pulsos+2,main@dadoPoco+7
  3074  000E20  C068  F2B7         	movff	?_le_pulsos+3,main@dadoPoco+8
  3075                           
  3076                           ;UT.c: 186: dadoPoco.pulsos2 =le_pulsos(2,retornaDado(4,1));
  3077  000E24  0E01               	movlw	1
  3078  000E26  0100               	movlb	0	; () banked
  3079  000E28  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3080  000E2A  0E04               	movlw	4
  3081  000E2C  EC75  F024         	call	_retornaDado
  3082  000E30  0100               	movlb	0	; () banked
  3083  000E32  6F65               	movwf	le_pulsos@modo& (0+255),b
  3084  000E34  0E02               	movlw	2
  3085  000E36  EC35  F01C         	call	_le_pulsos
  3086  000E3A  C065  F2B8         	movff	?_le_pulsos,main@dadoPoco+9
  3087  000E3E  C066  F2B9         	movff	?_le_pulsos+1,main@dadoPoco+10
  3088  000E42  C067  F2BA         	movff	?_le_pulsos+2,main@dadoPoco+11
  3089  000E46  C068  F2BB         	movff	?_le_pulsos+3,main@dadoPoco+12
  3090                           
  3091                           ;UT.c: 187: dadoPoco.pulsos3 =le_pulsos(3,retornaDado(4,2));
  3092  000E4A  0E02               	movlw	2
  3093  000E4C  0100               	movlb	0	; () banked
  3094  000E4E  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3095  000E50  0E04               	movlw	4
  3096  000E52  EC75  F024         	call	_retornaDado
  3097  000E56  0100               	movlb	0	; () banked
  3098  000E58  6F65               	movwf	le_pulsos@modo& (0+255),b
  3099  000E5A  0E03               	movlw	3
  3100  000E5C  EC35  F01C         	call	_le_pulsos
  3101  000E60  C065  F2BC         	movff	?_le_pulsos,main@dadoPoco+13
  3102  000E64  C066  F2BD         	movff	?_le_pulsos+1,main@dadoPoco+14
  3103  000E68  C067  F2BE         	movff	?_le_pulsos+2,main@dadoPoco+15
  3104  000E6C  C068  F2BF         	movff	?_le_pulsos+3,main@dadoPoco+16
  3105                           
  3106                           ;UT.c: 188: dadoPoco.pulsos4 =le_pulsos(4,retornaDado(4,3));
  3107  000E70  0E03               	movlw	3
  3108  000E72  0100               	movlb	0	; () banked
  3109  000E74  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3110  000E76  0E04               	movlw	4
  3111  000E78  EC75  F024         	call	_retornaDado
  3112  000E7C  0100               	movlb	0	; () banked
  3113  000E7E  6F65               	movwf	le_pulsos@modo& (0+255),b
  3114  000E80  0E04               	movlw	4
  3115  000E82  EC35  F01C         	call	_le_pulsos
  3116  000E86  C065  F2C0         	movff	?_le_pulsos,main@dadoPoco+17
  3117  000E8A  C066  F2C1         	movff	?_le_pulsos+1,main@dadoPoco+18
  3118  000E8E  C067  F2C2         	movff	?_le_pulsos+2,main@dadoPoco+19
  3119  000E92  C068  F2C3         	movff	?_le_pulsos+3,main@dadoPoco+20
  3120                           
  3121                           ;UT.c: 190: LATDbits.LATD4 = retornaDado(0,0);
  3122  000E96  0E00               	movlw	0
  3123  000E98  0100               	movlb	0	; () banked
  3124  000E9A  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3125  000E9C  0E00               	movlw	0
  3126  000E9E  EC75  F024         	call	_retornaDado
  3127  000EA2  0100               	movlb	0	; () banked
  3128  000EA4  6FF6               	movwf	??_main& (0+255),b
  3129  000EA6  3BF6               	swapf	??_main& (0+255),f,b
  3130  000EA8  508C               	movf	3980,w,c	;volatile
  3131  000EAA  19F6               	xorwf	??_main& (0+255),w,b
  3132  000EAC  0BEF               	andlw	-17
  3133  000EAE  19F6               	xorwf	??_main& (0+255),w,b
  3134  000EB0  6E8C               	movwf	3980,c	;volatile
  3135                           
  3136                           ; BSR set to: 0
  3137                           ;UT.c: 191: LATDbits.LATD5 = retornaDado(0,3);
  3138  000EB2  0E03               	movlw	3
  3139  000EB4  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3140  000EB6  0E00               	movlw	0
  3141  000EB8  EC75  F024         	call	_retornaDado
  3142  000EBC  0100               	movlb	0	; () banked
  3143  000EBE  6FF6               	movwf	??_main& (0+255),b
  3144  000EC0  3BF6               	swapf	??_main& (0+255),f,b
  3145  000EC2  47F6               	rlncf	??_main& (0+255),f,b
  3146  000EC4  508C               	movf	3980,w,c	;volatile
  3147  000EC6  19F6               	xorwf	??_main& (0+255),w,b
  3148  000EC8  0BDF               	andlw	-33
  3149  000ECA  19F6               	xorwf	??_main& (0+255),w,b
  3150  000ECC  6E8C               	movwf	3980,c	;volatile
  3151                           
  3152                           ; BSR set to: 0
  3153                           ;UT.c: 192: LATDbits.LATD6 = retornaDado(0,2);
  3154  000ECE  0E02               	movlw	2
  3155  000ED0  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3156  000ED2  0E00               	movlw	0
  3157  000ED4  EC75  F024         	call	_retornaDado
  3158  000ED8  0100               	movlb	0	; () banked
  3159  000EDA  6FF6               	movwf	??_main& (0+255),b
  3160  000EDC  3BF6               	swapf	??_main& (0+255),f,b
  3161  000EDE  47F6               	rlncf	??_main& (0+255),f,b
  3162  000EE0  47F6               	rlncf	??_main& (0+255),f,b
  3163  000EE2  508C               	movf	3980,w,c	;volatile
  3164  000EE4  19F6               	xorwf	??_main& (0+255),w,b
  3165  000EE6  0BBF               	andlw	-65
  3166  000EE8  19F6               	xorwf	??_main& (0+255),w,b
  3167  000EEA  6E8C               	movwf	3980,c	;volatile
  3168                           
  3169                           ; BSR set to: 0
  3170                           ;UT.c: 193: LATDbits.LATD7 = retornaDado(0,1);
  3171  000EEC  0E01               	movlw	1
  3172  000EEE  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3173  000EF0  0E00               	movlw	0
  3174  000EF2  EC75  F024         	call	_retornaDado
  3175  000EF6  0100               	movlb	0	; () banked
  3176  000EF8  6FF6               	movwf	??_main& (0+255),b
  3177  000EFA  33F6               	rrcf	??_main& (0+255),f,b
  3178  000EFC  33F6               	rrcf	??_main& (0+255),f,b
  3179  000EFE  508C               	movf	3980,w,c	;volatile
  3180  000F00  19F6               	xorwf	??_main& (0+255),w,b
  3181  000F02  0B7F               	andlw	-129
  3182  000F04  19F6               	xorwf	??_main& (0+255),w,b
  3183  000F06  6E8C               	movwf	3980,c	;volatile
  3184                           
  3185                           ; BSR set to: 0
  3186                           ;UT.c: 195: if (retornaDado(1,6) == 1){
  3187  000F08  0E06               	movlw	6
  3188  000F0A  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3189  000F0C  0E01               	movlw	1
  3190  000F0E  EC75  F024         	call	_retornaDado
  3191  000F12  06E8               	decf	wreg,f,c
  3192  000F14  A4D8               	btfss	status,2,c
  3193  000F16  D170               	goto	l974
  3194                           
  3195                           ;UT.c: 196: uint8_t Icanal = retornaDado(6,6)<<6 | retornaDado(6,5)<<5 | retornaDado(6,4
      +                          )<<4 | retornaDado(6,3)<<3 | retornaDado(6,2)<<2 | retornaDado(6,1)<<1 | retornaDado(6,0
      +                          );
  3196  000F18  0E00               	movlw	0
  3197  000F1A  0100               	movlb	0	; () banked
  3198  000F1C  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3199  000F1E  0E06               	movlw	6
  3200  000F20  EC75  F024         	call	_retornaDado
  3201  000F24  0100               	movlb	0	; () banked
  3202  000F26  6FF6               	movwf	??_main& (0+255),b
  3203  000F28  0E01               	movlw	1
  3204  000F2A  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3205  000F2C  0E06               	movlw	6
  3206  000F2E  EC75  F024         	call	_retornaDado
  3207  000F32  0100               	movlb	0	; () banked
  3208  000F34  6FF7               	movwf	(??_main+1)& (0+255),b
  3209  000F36  90D8               	bcf	status,0,c
  3210  000F38  35F7               	rlcf	(??_main+1)& (0+255),w,b
  3211  000F3A  6FF8               	movwf	(??_main+2)& (0+255),b
  3212  000F3C  0E02               	movlw	2
  3213  000F3E  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3214  000F40  0E06               	movlw	6
  3215  000F42  EC75  F024         	call	_retornaDado
  3216  000F46  0100               	movlb	0	; () banked
  3217  000F48  6FF9               	movwf	(??_main+3)& (0+255),b
  3218  000F4A  90D8               	bcf	status,0,c
  3219  000F4C  37F9               	rlcf	(??_main+3)& (0+255),f,b
  3220  000F4E  90D8               	bcf	status,0,c
  3221  000F50  37F9               	rlcf	(??_main+3)& (0+255),f,b
  3222  000F52  0E03               	movlw	3
  3223  000F54  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3224  000F56  0E06               	movlw	6
  3225  000F58  EC75  F024         	call	_retornaDado
  3226  000F5C  0100               	movlb	0	; () banked
  3227  000F5E  6FFA               	movwf	(??_main+4)& (0+255),b
  3228  000F60  90D8               	bcf	status,0,c
  3229  000F62  37FA               	rlcf	(??_main+4)& (0+255),f,b
  3230  000F64  90D8               	bcf	status,0,c
  3231  000F66  37FA               	rlcf	(??_main+4)& (0+255),f,b
  3232  000F68  90D8               	bcf	status,0,c
  3233  000F6A  37FA               	rlcf	(??_main+4)& (0+255),f,b
  3234  000F6C  0E04               	movlw	4
  3235  000F6E  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3236  000F70  0E06               	movlw	6
  3237  000F72  EC75  F024         	call	_retornaDado
  3238  000F76  0100               	movlb	0	; () banked
  3239  000F78  6FFB               	movwf	(??_main+5)& (0+255),b
  3240  000F7A  3BFB               	swapf	(??_main+5)& (0+255),f,b
  3241  000F7C  0EF0               	movlw	240
  3242  000F7E  17FB               	andwf	(??_main+5)& (0+255),f,b
  3243  000F80  0E05               	movlw	5
  3244  000F82  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3245  000F84  0E06               	movlw	6
  3246  000F86  EC75  F024         	call	_retornaDado
  3247  000F8A  0100               	movlb	0	; () banked
  3248  000F8C  6FFC               	movwf	(??_main+6)& (0+255),b
  3249  000F8E  0E05               	movlw	5
  3250  000F90  6FFD               	movwf	(??_main+7)& (0+255),b
  3251  000F92                     u10305:
  3252  000F92  90D8               	bcf	status,0,c
  3253  000F94  37FC               	rlcf	(??_main+6)& (0+255),f,b
  3254  000F96  2FFD               	decfsz	(??_main+7)& (0+255),f,b
  3255  000F98  D7FC               	goto	u10305
  3256  000F9A  0E06               	movlw	6
  3257  000F9C  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3258  000F9E  0E06               	movlw	6
  3259  000FA0  EC75  F024         	call	_retornaDado
  3260  000FA4  0100               	movlb	0	; () banked
  3261  000FA6  6FFE               	movwf	(??_main+8)& (0+255),b
  3262  000FA8  0E06               	movlw	6
  3263  000FAA  6FFF               	movwf	(??_main+9)& (0+255),b
  3264  000FAC                     u10315:
  3265  000FAC  90D8               	bcf	status,0,c
  3266  000FAE  37FE               	rlcf	(??_main+8)& (0+255),f,b
  3267  000FB0  2FFF               	decfsz	(??_main+9)& (0+255),f,b
  3268  000FB2  D7FC               	goto	u10315
  3269  000FB4  51FE               	movf	(??_main+8)& (0+255),w,b
  3270  000FB6  11FC               	iorwf	(??_main+6)& (0+255),w,b
  3271  000FB8  11FB               	iorwf	(??_main+5)& (0+255),w,b
  3272  000FBA  11FA               	iorwf	(??_main+4)& (0+255),w,b
  3273  000FBC  11F9               	iorwf	(??_main+3)& (0+255),w,b
  3274  000FBE  11F8               	iorwf	(??_main+2)& (0+255),w,b
  3275  000FC0  11F6               	iorwf	??_main& (0+255),w,b
  3276  000FC2  0102               	movlb	2	; () banked
  3277  000FC4  6F9F               	movwf	main@Icanal& (0+255),b
  3278                           
  3279                           ;UT.c: 197: uint8_t Fcanal = retornaDado(7,6)<<6 | retornaDado(7,5)<<5 | retornaDado(7,4
      +                          )<<4 | retornaDado(7,3)<<3 | retornaDado(7,2)<<2 | retornaDado(7,1)<<1 | retornaDado(7,0
      +                          );
  3280  000FC6  0E00               	movlw	0
  3281  000FC8  0100               	movlb	0	; () banked
  3282  000FCA  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3283  000FCC  0E07               	movlw	7
  3284  000FCE  EC75  F024         	call	_retornaDado
  3285  000FD2  0100               	movlb	0	; () banked
  3286  000FD4  6FF6               	movwf	??_main& (0+255),b
  3287  000FD6  0E01               	movlw	1
  3288  000FD8  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3289  000FDA  0E07               	movlw	7
  3290  000FDC  EC75  F024         	call	_retornaDado
  3291  000FE0  0100               	movlb	0	; () banked
  3292  000FE2  6FF7               	movwf	(??_main+1)& (0+255),b
  3293  000FE4  90D8               	bcf	status,0,c
  3294  000FE6  35F7               	rlcf	(??_main+1)& (0+255),w,b
  3295  000FE8  6FF8               	movwf	(??_main+2)& (0+255),b
  3296  000FEA  0E02               	movlw	2
  3297  000FEC  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3298  000FEE  0E07               	movlw	7
  3299  000FF0  EC75  F024         	call	_retornaDado
  3300  000FF4  0100               	movlb	0	; () banked
  3301  000FF6  6FF9               	movwf	(??_main+3)& (0+255),b
  3302  000FF8  90D8               	bcf	status,0,c
  3303  000FFA  37F9               	rlcf	(??_main+3)& (0+255),f,b
  3304  000FFC  90D8               	bcf	status,0,c
  3305  000FFE  37F9               	rlcf	(??_main+3)& (0+255),f,b
  3306  001000  0E03               	movlw	3
  3307  001002  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3308  001004  0E07               	movlw	7
  3309  001006  EC75  F024         	call	_retornaDado
  3310  00100A  0100               	movlb	0	; () banked
  3311  00100C  6FFA               	movwf	(??_main+4)& (0+255),b
  3312  00100E  90D8               	bcf	status,0,c
  3313  001010  37FA               	rlcf	(??_main+4)& (0+255),f,b
  3314  001012  90D8               	bcf	status,0,c
  3315  001014  37FA               	rlcf	(??_main+4)& (0+255),f,b
  3316  001016  90D8               	bcf	status,0,c
  3317  001018  37FA               	rlcf	(??_main+4)& (0+255),f,b
  3318  00101A  0E04               	movlw	4
  3319  00101C  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3320  00101E  0E07               	movlw	7
  3321  001020  EC75  F024         	call	_retornaDado
  3322  001024  0100               	movlb	0	; () banked
  3323  001026  6FFB               	movwf	(??_main+5)& (0+255),b
  3324  001028  3BFB               	swapf	(??_main+5)& (0+255),f,b
  3325  00102A  0EF0               	movlw	240
  3326  00102C  17FB               	andwf	(??_main+5)& (0+255),f,b
  3327  00102E  0E05               	movlw	5
  3328  001030  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3329  001032  0E07               	movlw	7
  3330  001034  EC75  F024         	call	_retornaDado
  3331  001038  0100               	movlb	0	; () banked
  3332  00103A  6FFC               	movwf	(??_main+6)& (0+255),b
  3333  00103C  0E05               	movlw	5
  3334  00103E  6FFD               	movwf	(??_main+7)& (0+255),b
  3335  001040                     u10325:
  3336  001040  90D8               	bcf	status,0,c
  3337  001042  37FC               	rlcf	(??_main+6)& (0+255),f,b
  3338  001044  2FFD               	decfsz	(??_main+7)& (0+255),f,b
  3339  001046  D7FC               	goto	u10325
  3340  001048  0E06               	movlw	6
  3341  00104A  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3342  00104C  0E07               	movlw	7
  3343  00104E  EC75  F024         	call	_retornaDado
  3344  001052  0100               	movlb	0	; () banked
  3345  001054  6FFE               	movwf	(??_main+8)& (0+255),b
  3346  001056  0E06               	movlw	6
  3347  001058  6FFF               	movwf	(??_main+9)& (0+255),b
  3348  00105A                     u10335:
  3349  00105A  90D8               	bcf	status,0,c
  3350  00105C  37FE               	rlcf	(??_main+8)& (0+255),f,b
  3351  00105E  2FFF               	decfsz	(??_main+9)& (0+255),f,b
  3352  001060  D7FC               	goto	u10335
  3353  001062  51FE               	movf	(??_main+8)& (0+255),w,b
  3354  001064  11FC               	iorwf	(??_main+6)& (0+255),w,b
  3355  001066  11FB               	iorwf	(??_main+5)& (0+255),w,b
  3356  001068  11FA               	iorwf	(??_main+4)& (0+255),w,b
  3357  00106A  11F9               	iorwf	(??_main+3)& (0+255),w,b
  3358  00106C  11F8               	iorwf	(??_main+2)& (0+255),w,b
  3359  00106E  11F6               	iorwf	??_main& (0+255),w,b
  3360  001070  0102               	movlb	2	; () banked
  3361  001072  6FAA               	movwf	main@Fcanal& (0+255),b
  3362                           
  3363                           ; BSR set to: 2
  3364                           ;UT.c: 198: for (uint8_t i=0; i<Fcanal; i++){
  3365  001074  0E00               	movlw	0
  3366  001076  6FAB               	movwf	main@i_3270& (0+255),b
  3367  001078  D009               	goto	l975
  3368  00107A                     
  3369                           ; BSR set to: 2
  3370                           ;UT.c: 199: SetChannelLoRaWan (i,0);
  3371                           
  3372                           ; BSR set to: 2
  3373  00107A  0E00               	movlw	0
  3374  00107C  0100               	movlb	0	; () banked
  3375  00107E  6FF1               	movwf	SetChannelLoRaWan@ligado& (0+255),b
  3376  001080  0102               	movlb	2	; () banked
  3377  001082  51AB               	movf	main@i_3270& (0+255),w,b
  3378  001084  ECD8  F023         	call	_SetChannelLoRaWan
  3379  001088  0102               	movlb	2	; () banked
  3380  00108A  2BAB               	incf	main@i_3270& (0+255),f,b
  3381  00108C                     l975:
  3382                           
  3383                           ; BSR set to: 2
  3384                           
  3385                           ; BSR set to: 2
  3386  00108C  51AA               	movf	main@Fcanal& (0+255),w,b
  3387  00108E  5DAB               	subwf	main@i_3270& (0+255),w,b
  3388  001090  A0D8               	btfss	status,0,c
  3389  001092  D7F3               	goto	l976
  3390                           
  3391                           ; BSR set to: 2
  3392                           ;UT.c: 200: }
  3393                           ;UT.c: 201: for (uint8_t i=Icanal; i<=Fcanal; i++){
  3394  001094  C29F  F2AC         	movff	main@Icanal,main@i_3271
  3395  001098  D009               	goto	l978
  3396  00109A                     
  3397                           ; BSR set to: 2
  3398                           ;UT.c: 202: SetChannelLoRaWan (i,1);
  3399                           
  3400                           ; BSR set to: 2
  3401  00109A  0E01               	movlw	1
  3402  00109C  0100               	movlb	0	; () banked
  3403  00109E  6FF1               	movwf	SetChannelLoRaWan@ligado& (0+255),b
  3404  0010A0  0102               	movlb	2	; () banked
  3405  0010A2  51AC               	movf	main@i_3271& (0+255),w,b
  3406  0010A4  ECD8  F023         	call	_SetChannelLoRaWan
  3407  0010A8  0102               	movlb	2	; () banked
  3408  0010AA  2BAC               	incf	main@i_3271& (0+255),f,b
  3409  0010AC                     l978:
  3410                           
  3411                           ; BSR set to: 2
  3412                           
  3413                           ; BSR set to: 2
  3414  0010AC  51AC               	movf	main@i_3271& (0+255),w,b
  3415  0010AE  5DAA               	subwf	main@Fcanal& (0+255),w,b
  3416  0010B0  B0D8               	btfsc	status,0,c
  3417  0010B2  D7F3               	goto	l979
  3418                           
  3419                           ; BSR set to: 2
  3420                           ;UT.c: 203: }
  3421                           ;UT.c: 204: if (retornaDado(3,1) == 1){
  3422                           
  3423                           ; BSR set to: 2
  3424  0010B4  0E01               	movlw	1
  3425  0010B6  0100               	movlb	0	; () banked
  3426  0010B8  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3427  0010BA  0E03               	movlw	3
  3428  0010BC  EC75  F024         	call	_retornaDado
  3429  0010C0  06E8               	decf	wreg,f,c
  3430  0010C2  A4D8               	btfss	status,2,c
  3431  0010C4  D090               	goto	l981
  3432                           
  3433                           ;UT.c: 205: AdaptiveDataRate(STATE_OFF);
  3434  0010C6  0E6B               	movlw	low _STATE_OFF
  3435  0010C8  0100               	movlb	0	; () banked
  3436  0010CA  6FF1               	movwf	AdaptiveDataRate@state& (0+255),b
  3437  0010CC  0E7E               	movlw	high _STATE_OFF
  3438  0010CE  6FF2               	movwf	(AdaptiveDataRate@state+1)& (0+255),b
  3439  0010D0  ECDF  F026         	call	_AdaptiveDataRate	;wreg free
  3440                           
  3441                           ;UT.c: 206: uint8_t dr = retornaDado(2,3)<<3 | retornaDado(2,2)<<2 | retornaDado(2,1)<<1
      +                           | retornaDado(2,0);
  3442  0010D4  0E00               	movlw	0
  3443  0010D6  0100               	movlb	0	; () banked
  3444  0010D8  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3445  0010DA  0E02               	movlw	2
  3446  0010DC  EC75  F024         	call	_retornaDado
  3447  0010E0  0100               	movlb	0	; () banked
  3448  0010E2  6FF6               	movwf	??_main& (0+255),b
  3449  0010E4  0E01               	movlw	1
  3450  0010E6  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3451  0010E8  0E02               	movlw	2
  3452  0010EA  EC75  F024         	call	_retornaDado
  3453  0010EE  0100               	movlb	0	; () banked
  3454  0010F0  6FF7               	movwf	(??_main+1)& (0+255),b
  3455  0010F2  90D8               	bcf	status,0,c
  3456  0010F4  35F7               	rlcf	(??_main+1)& (0+255),w,b
  3457  0010F6  6FF8               	movwf	(??_main+2)& (0+255),b
  3458  0010F8  0E02               	movlw	2
  3459  0010FA  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3460  0010FC  0E02               	movlw	2
  3461  0010FE  EC75  F024         	call	_retornaDado
  3462  001102  0100               	movlb	0	; () banked
  3463  001104  6FF9               	movwf	(??_main+3)& (0+255),b
  3464  001106  90D8               	bcf	status,0,c
  3465  001108  37F9               	rlcf	(??_main+3)& (0+255),f,b
  3466  00110A  90D8               	bcf	status,0,c
  3467  00110C  37F9               	rlcf	(??_main+3)& (0+255),f,b
  3468  00110E  0E03               	movlw	3
  3469  001110  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3470  001112  0E02               	movlw	2
  3471  001114  EC75  F024         	call	_retornaDado
  3472  001118  0100               	movlb	0	; () banked
  3473  00111A  6FFA               	movwf	(??_main+4)& (0+255),b
  3474  00111C  90D8               	bcf	status,0,c
  3475  00111E  37FA               	rlcf	(??_main+4)& (0+255),f,b
  3476  001120  90D8               	bcf	status,0,c
  3477  001122  37FA               	rlcf	(??_main+4)& (0+255),f,b
  3478  001124  90D8               	bcf	status,0,c
  3479  001126  35FA               	rlcf	(??_main+4)& (0+255),w,b
  3480  001128  11F9               	iorwf	(??_main+3)& (0+255),w,b
  3481  00112A  11F8               	iorwf	(??_main+2)& (0+255),w,b
  3482  00112C  11F6               	iorwf	??_main& (0+255),w,b
  3483  00112E  0102               	movlb	2	; () banked
  3484  001130  6FAD               	movwf	main@dr& (0+255),b
  3485                           
  3486                           ; BSR set to: 2
  3487                           ;UT.c: 209: DataRate(dr);
  3488                           
  3489                           ; BSR set to: 2
  3490                           
  3491                           ; BSR set to: 2
  3492                           ;UT.c: 208: dr++;
  3493                           
  3494                           ; BSR set to: 2
  3495                           
  3496                           ;UT.c: 207: if (sizeof(dadoPoco)<11 && dr==0)
  3497  001132  C2AD  F0F1         	movff	main@dr,DataRate@dr
  3498  001136  0100               	movlb	0	; () banked
  3499  001138  6BF2               	clrf	(DataRate@dr+1)& (0+255),b
  3500  00113A  EC17  F026         	call	_DataRate	;wreg free
  3501                           
  3502                           ;UT.c: 210: if (retornaDado(1,7) == 1){
  3503  00113E  0E07               	movlw	7
  3504  001140  0100               	movlb	0	; () banked
  3505  001142  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3506  001144  0E01               	movlw	1
  3507  001146  EC75  F024         	call	_retornaDado
  3508  00114A  06E8               	decf	wreg,f,c
  3509  00114C  A4D8               	btfss	status,2,c
  3510  00114E  D052               	goto	l986
  3511                           
  3512                           ;UT.c: 211: uint8_t sf = retornaDado(2,7)<<3 | retornaDado(2,6)<<2 | retornaDado(2,5)<<1
      +                           | retornaDado(2,4);
  3513  001150  0E04               	movlw	4
  3514  001152  0100               	movlb	0	; () banked
  3515  001154  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3516  001156  0E02               	movlw	2
  3517  001158  EC75  F024         	call	_retornaDado
  3518  00115C  0100               	movlb	0	; () banked
  3519  00115E  6FF6               	movwf	??_main& (0+255),b
  3520  001160  0E05               	movlw	5
  3521  001162  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3522  001164  0E02               	movlw	2
  3523  001166  EC75  F024         	call	_retornaDado
  3524  00116A  0100               	movlb	0	; () banked
  3525  00116C  6FF7               	movwf	(??_main+1)& (0+255),b
  3526  00116E  90D8               	bcf	status,0,c
  3527  001170  35F7               	rlcf	(??_main+1)& (0+255),w,b
  3528  001172  6FF8               	movwf	(??_main+2)& (0+255),b
  3529  001174  0E06               	movlw	6
  3530  001176  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3531  001178  0E02               	movlw	2
  3532  00117A  EC75  F024         	call	_retornaDado
  3533  00117E  0100               	movlb	0	; () banked
  3534  001180  6FF9               	movwf	(??_main+3)& (0+255),b
  3535  001182  90D8               	bcf	status,0,c
  3536  001184  37F9               	rlcf	(??_main+3)& (0+255),f,b
  3537  001186  90D8               	bcf	status,0,c
  3538  001188  37F9               	rlcf	(??_main+3)& (0+255),f,b
  3539  00118A  0E07               	movlw	7
  3540  00118C  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3541  00118E  0E02               	movlw	2
  3542  001190  EC75  F024         	call	_retornaDado
  3543  001194  0100               	movlb	0	; () banked
  3544  001196  6FFA               	movwf	(??_main+4)& (0+255),b
  3545  001198  90D8               	bcf	status,0,c
  3546  00119A  37FA               	rlcf	(??_main+4)& (0+255),f,b
  3547  00119C  90D8               	bcf	status,0,c
  3548  00119E  37FA               	rlcf	(??_main+4)& (0+255),f,b
  3549  0011A0  90D8               	bcf	status,0,c
  3550  0011A2  35FA               	rlcf	(??_main+4)& (0+255),w,b
  3551  0011A4  11F9               	iorwf	(??_main+3)& (0+255),w,b
  3552  0011A6  11F8               	iorwf	(??_main+2)& (0+255),w,b
  3553  0011A8  11F6               	iorwf	??_main& (0+255),w,b
  3554  0011AA  0102               	movlb	2	; () banked
  3555  0011AC  6FA0               	movwf	main@sf& (0+255),b
  3556                           
  3557                           ; BSR set to: 2
  3558                           ;UT.c: 212: SetSpreadingFactor (sf);
  3559  0011AE  51A0               	movf	main@sf& (0+255),w,b
  3560  0011B0  ECBF  F026         	call	_SetSpreadingFactor
  3561                           
  3562                           ;UT.c: 213: if (retornaDado(3,0) == 0)
  3563  0011B4  0E00               	movlw	0
  3564  0011B6  0100               	movlb	0	; () banked
  3565  0011B8  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3566  0011BA  0E03               	movlw	3
  3567  0011BC  EC75  F024         	call	_retornaDado
  3568  0011C0  0900               	iorlw	0
  3569  0011C2  A4D8               	btfss	status,2,c
  3570  0011C4  D008               	goto	l984
  3571                           
  3572                           ;UT.c: 214: SetBandWidth (125);
  3573  0011C6  0E00               	movlw	0
  3574  0011C8  0100               	movlb	0	; () banked
  3575  0011CA  6FF2               	movwf	(SetBandWidth@bw+1)& (0+255),b
  3576  0011CC  0E7D               	movlw	125
  3577  0011CE  6FF1               	movwf	SetBandWidth@bw& (0+255),b
  3578  0011D0  ECF4  F025         	call	_SetBandWidth	;wreg free
  3579  0011D4  D00F               	goto	l986
  3580  0011D6                     l984:
  3581                           
  3582                           ;UT.c: 215: else
  3583                           ;UT.c: 216: SetBandWidth (500);
  3584  0011D6  0E01               	movlw	1
  3585  0011D8  0100               	movlb	0	; () banked
  3586  0011DA  6FF2               	movwf	(SetBandWidth@bw+1)& (0+255),b
  3587  0011DC  0EF4               	movlw	244
  3588  0011DE  6FF1               	movwf	SetBandWidth@bw& (0+255),b
  3589  0011E0  ECF4  F025         	call	_SetBandWidth	;wreg free
  3590                           
  3591                           ;UT.c: 217: }}
  3592  0011E4  D007               	goto	l986
  3593  0011E6                     l981:
  3594                           
  3595                           ;UT.c: 218: else
  3596                           ;UT.c: 219: AdaptiveDataRate(STATE_ON);
  3597  0011E6  0E6F               	movlw	low _STATE_ON
  3598  0011E8  0100               	movlb	0	; () banked
  3599  0011EA  6FF1               	movwf	AdaptiveDataRate@state& (0+255),b
  3600  0011EC  0E7E               	movlw	high _STATE_ON
  3601  0011EE  6FF2               	movwf	(AdaptiveDataRate@state+1)& (0+255),b
  3602  0011F0  ECDF  F026         	call	_AdaptiveDataRate	;wreg free
  3603  0011F4                     l986:
  3604                           
  3605                           ;UT.c: 220: MacSave();
  3606  0011F4  EC56  F027         	call	_MacSave	;wreg free
  3607  0011F8                     l974:
  3608                           
  3609                           ;UT.c: 221: }
  3610                           ;UT.c: 223: uint8_t resp=TxLoRaWan(1, 3, (const uint8_t*)&dadoPoco, sizeof(dadoPoco));
  3611  0011F8  0E03               	movlw	3
  3612  0011FA  0100               	movlb	0	; () banked
  3613  0011FC  6FF1               	movwf	TxLoRaWan@porta& (0+255),b
  3614  0011FE  0EAF               	movlw	low main@dadoPoco
  3615  001200  6FF2               	movwf	TxLoRaWan@data& (0+255),b
  3616  001202  0E02               	movlw	high main@dadoPoco
  3617  001204  6FF3               	movwf	(TxLoRaWan@data+1)& (0+255),b
  3618  001206  0E15               	movlw	21
  3619  001208  6FF4               	movwf	TxLoRaWan@tamData& (0+255),b
  3620  00120A  0E01               	movlw	1
  3621  00120C  ECC2  F009         	call	_TxLoRaWan
  3622  001210  0102               	movlb	2	; () banked
  3623  001212  6F96               	movwf	main@resp& (0+255),b
  3624                           
  3625                           ; BSR set to: 2
  3626                           ;UT.c: 229: if (verificaUSB() && (cdc_trf_state == 0))
  3627  001214  ECA6  F027         	call	_verificaUSB	;wreg free
  3628  001218  0900               	iorlw	0
  3629  00121A  B4D8               	btfsc	status,2,c
  3630  00121C  D052               	goto	l987
  3631  00121E  0102               	movlb	2	; () banked
  3632  001220  51F0               	movf	_cdc_trf_state& (0+255),w,b
  3633  001222  A4D8               	btfss	status,2,c
  3634  001224  D04E               	goto	l987
  3635                           
  3636                           ; BSR set to: 2
  3637                           ;UT.c: 230: {
  3638                           ;UT.c: 231: char data[150];
  3639                           ;UT.c: 232: sprintf(data,"resposta: %2X %2X %2X %2X %2X %2X %2X %2X %2X %2X  %d  %d  %d 
      +                           %d  %d  %d  %d  %d  %d  %d \n\r",
  3640                           ;UT.c: 233: dadosRecebidos[0].data,
  3641                           ;UT.c: 234: dadosRecebidos[1].data,
  3642                           ;UT.c: 235: dadosRecebidos[2].data,
  3643                           ;UT.c: 236: dadosRecebidos[3].data,
  3644                           ;UT.c: 237: dadosRecebidos[4].data,
  3645                           ;UT.c: 238: dadosRecebidos[5].data,
  3646                           ;UT.c: 239: dadosRecebidos[6].data,
  3647                           ;UT.c: 240: dadosRecebidos[7].data,
  3648                           ;UT.c: 241: dadosRecebidos[8].data,
  3649                           ;UT.c: 242: dadosRecebidos[9].data,
  3650  001226  0E00               	movlw	low main@data
  3651  001228  0100               	movlb	0	; () banked
  3652  00122A  6FBF               	movwf	sprintf@sp& (0+255),b
  3653  00122C  0E02               	movlw	high main@data
  3654  00122E  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  3655  001230  0E88               	movlw	low STR_1
  3656  001232  6FC1               	movwf	sprintf@f& (0+255),b
  3657  001234  0E7E               	movlw	high STR_1
  3658  001236  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  3659  001238  C301  F0C3         	movff	_dadosRecebidos+1,?_sprintf+4	;volatile
  3660  00123C  6BC4               	clrf	(?_sprintf+5)& (0+255),b
  3661  00123E  C303  F0C5         	movff	_dadosRecebidos+3,?_sprintf+6	;volatile
  3662  001242  6BC6               	clrf	(?_sprintf+7)& (0+255),b
  3663  001244  C305  F0C7         	movff	_dadosRecebidos+5,?_sprintf+8	;volatile
  3664  001248  6BC8               	clrf	(?_sprintf+9)& (0+255),b
  3665  00124A  C307  F0C9         	movff	_dadosRecebidos+7,?_sprintf+10	;volatile
  3666  00124E  6BCA               	clrf	(?_sprintf+11)& (0+255),b
  3667  001250  C309  F0CB         	movff	_dadosRecebidos+9,?_sprintf+12	;volatile
  3668  001254  6BCC               	clrf	(?_sprintf+13)& (0+255),b
  3669  001256  C30B  F0CD         	movff	_dadosRecebidos+11,?_sprintf+14	;volatile
  3670  00125A  6BCE               	clrf	(?_sprintf+15)& (0+255),b
  3671  00125C  C30D  F0CF         	movff	_dadosRecebidos+13,?_sprintf+16	;volatile
  3672  001260  6BD0               	clrf	(?_sprintf+17)& (0+255),b
  3673  001262  C30F  F0D1         	movff	_dadosRecebidos+15,?_sprintf+18	;volatile
  3674  001266  6BD2               	clrf	(?_sprintf+19)& (0+255),b
  3675  001268  C311  F0D3         	movff	_dadosRecebidos+17,?_sprintf+20	;volatile
  3676  00126C  6BD4               	clrf	(?_sprintf+21)& (0+255),b
  3677  00126E  C313  F0D5         	movff	_dadosRecebidos+19,?_sprintf+22	;volatile
  3678  001272  6BD6               	clrf	(?_sprintf+23)& (0+255),b
  3679  001274  C300  F0D7         	movff	_dadosRecebidos,?_sprintf+24	;volatile
  3680  001278  6BD8               	clrf	(?_sprintf+25)& (0+255),b
  3681  00127A  C302  F0D9         	movff	_dadosRecebidos+2,?_sprintf+26	;volatile
  3682  00127E  6BDA               	clrf	(?_sprintf+27)& (0+255),b
  3683  001280  C304  F0DB         	movff	_dadosRecebidos+4,?_sprintf+28	;volatile
  3684  001284  6BDC               	clrf	(?_sprintf+29)& (0+255),b
  3685  001286  C306  F0DD         	movff	_dadosRecebidos+6,?_sprintf+30	;volatile
  3686  00128A  6BDE               	clrf	(?_sprintf+31)& (0+255),b
  3687  00128C  C308  F0DF         	movff	_dadosRecebidos+8,?_sprintf+32	;volatile
  3688  001290  6BE0               	clrf	(?_sprintf+33)& (0+255),b
  3689  001292  C30A  F0E1         	movff	_dadosRecebidos+10,?_sprintf+34	;volatile
  3690  001296  6BE2               	clrf	(?_sprintf+35)& (0+255),b
  3691  001298  C30C  F0E3         	movff	_dadosRecebidos+12,?_sprintf+36	;volatile
  3692  00129C  6BE4               	clrf	(?_sprintf+37)& (0+255),b
  3693  00129E  C30E  F0E5         	movff	_dadosRecebidos+14,?_sprintf+38	;volatile
  3694  0012A2  6BE6               	clrf	(?_sprintf+39)& (0+255),b
  3695  0012A4  C310  F0E7         	movff	_dadosRecebidos+16,?_sprintf+40	;volatile
  3696  0012A8  6BE8               	clrf	(?_sprintf+41)& (0+255),b
  3697  0012AA  C312  F0E9         	movff	_dadosRecebidos+18,?_sprintf+42	;volatile
  3698  0012AE  6BEA               	clrf	(?_sprintf+43)& (0+255),b
  3699  0012B0  EC09  F000         	call	_sprintf	;wreg free
  3700                           
  3701                           ;UT.c: 253: putsUSBUSART(data);
  3702  0012B4  0E00               	movlw	low main@data
  3703  0012B6  0100               	movlb	0	; () banked
  3704  0012B8  6F60               	movwf	putsUSBUSART@data& (0+255),b
  3705  0012BA  0E02               	movlw	high main@data
  3706  0012BC  6F61               	movwf	(putsUSBUSART@data+1)& (0+255),b
  3707  0012BE  EC85  F025         	call	_putsUSBUSART	;wreg free
  3708  0012C2                     l987:
  3709                           
  3710                           ;UT.c: 254: }
  3711                           ;UT.c: 255: uint32_t deltaTempo=(millis()-tempo);
  3712  0012C2  C297  F0F6         	movff	main@tempo,??_main
  3713  0012C6  C298  F0F7         	movff	main@tempo+1,??_main+1
  3714  0012CA  C299  F0F8         	movff	main@tempo+2,??_main+2
  3715  0012CE  C29A  F0F9         	movff	main@tempo+3,??_main+3
  3716  0012D2  0100               	movlb	0	; () banked
  3717  0012D4  1FF6               	comf	??_main& (0+255),f,b
  3718  0012D6  1FF7               	comf	(??_main+1)& (0+255),f,b
  3719  0012D8  1FF8               	comf	(??_main+2)& (0+255),f,b
  3720  0012DA  1FF9               	comf	(??_main+3)& (0+255),f,b
  3721  0012DC  2BF6               	incf	??_main& (0+255),f,b
  3722  0012DE  0E00               	movlw	0
  3723  0012E0  23F7               	addwfc	(??_main+1)& (0+255),f,b
  3724  0012E2  23F8               	addwfc	(??_main+2)& (0+255),f,b
  3725  0012E4  23F9               	addwfc	(??_main+3)& (0+255),f,b
  3726  0012E6  EC54  F028         	call	_millis	;wreg free
  3727  0012EA  0100               	movlb	0	; () banked
  3728  0012EC  51F6               	movf	??_main& (0+255),w,b
  3729  0012EE  2560               	addwf	?_millis& (0+255),w,b
  3730  0012F0  0102               	movlb	2	; () banked
  3731  0012F2  6FA1               	movwf	main@deltaTempo& (0+255),b
  3732  0012F4  0100               	movlb	0	; () banked
  3733  0012F6  51F7               	movf	(??_main+1)& (0+255),w,b
  3734  0012F8  2161               	addwfc	(?_millis+1)& (0+255),w,b
  3735  0012FA  0102               	movlb	2	; () banked
  3736  0012FC  6FA2               	movwf	(main@deltaTempo+1)& (0+255),b
  3737  0012FE  0100               	movlb	0	; () banked
  3738  001300  51F8               	movf	(??_main+2)& (0+255),w,b
  3739  001302  2162               	addwfc	(?_millis+2)& (0+255),w,b
  3740  001304  0102               	movlb	2	; () banked
  3741  001306  6FA3               	movwf	(main@deltaTempo+2)& (0+255),b
  3742  001308  0100               	movlb	0	; () banked
  3743  00130A  51F9               	movf	(??_main+3)& (0+255),w,b
  3744  00130C  2163               	addwfc	(?_millis+3)& (0+255),w,b
  3745  00130E  0102               	movlb	2	; () banked
  3746  001310  6FA4               	movwf	(main@deltaTempo+3)& (0+255),b
  3747                           
  3748                           ; BSR set to: 2
  3749                           ;UT.c: 256: if (deltaTempo<30000)
  3750  001312  51A4               	movf	(main@deltaTempo+3)& (0+255),w,b
  3751  001314  11A3               	iorwf	(main@deltaTempo+2)& (0+255),w,b
  3752  001316  E105               	bnz	u10421
  3753  001318  0E30               	movlw	48
  3754  00131A  5DA1               	subwf	main@deltaTempo& (0+255),w,b
  3755  00131C  0E75               	movlw	117
  3756  00131E  59A2               	subwfb	(main@deltaTempo+1)& (0+255),w,b
  3757  001320  B0D8               	btfsc	status,0,c
  3758  001322                     u10421:
  3759  001322  D511               	goto	l973
  3760                           
  3761                           ; BSR set to: 2
  3762                           ;UT.c: 257: {
  3763                           ;UT.c: 258: uint32_t tempoTimeOut=30000-deltaTempo;
  3764  001324  C2A1  F0F6         	movff	main@deltaTempo,??_main
  3765  001328  C2A2  F0F7         	movff	main@deltaTempo+1,??_main+1
  3766  00132C  C2A3  F0F8         	movff	main@deltaTempo+2,??_main+2
  3767  001330  C2A4  F0F9         	movff	main@deltaTempo+3,??_main+3
  3768  001334  0100               	movlb	0	; () banked
  3769  001336  1FF6               	comf	??_main& (0+255),f,b
  3770  001338  1FF7               	comf	(??_main+1)& (0+255),f,b
  3771  00133A  1FF8               	comf	(??_main+2)& (0+255),f,b
  3772  00133C  1FF9               	comf	(??_main+3)& (0+255),f,b
  3773  00133E  2BF6               	incf	??_main& (0+255),f,b
  3774  001340  0E00               	movlw	0
  3775  001342  23F7               	addwfc	(??_main+1)& (0+255),f,b
  3776  001344  23F8               	addwfc	(??_main+2)& (0+255),f,b
  3777  001346  23F9               	addwfc	(??_main+3)& (0+255),f,b
  3778  001348  0E30               	movlw	48
  3779  00134A  25F6               	addwf	??_main& (0+255),w,b
  3780  00134C  0102               	movlb	2	; () banked
  3781  00134E  6F9B               	movwf	main@tempoTimeOut& (0+255),b
  3782  001350  0E75               	movlw	117
  3783  001352  0100               	movlb	0	; () banked
  3784  001354  21F7               	addwfc	(??_main+1)& (0+255),w,b
  3785  001356  0102               	movlb	2	; () banked
  3786  001358  6F9C               	movwf	(main@tempoTimeOut+1)& (0+255),b
  3787  00135A  0E00               	movlw	0
  3788  00135C  0100               	movlb	0	; () banked
  3789  00135E  21F8               	addwfc	(??_main+2)& (0+255),w,b
  3790  001360  0102               	movlb	2	; () banked
  3791  001362  6F9D               	movwf	(main@tempoTimeOut+2)& (0+255),b
  3792  001364  0E00               	movlw	0
  3793  001366  0100               	movlb	0	; () banked
  3794  001368  21F9               	addwfc	(??_main+3)& (0+255),w,b
  3795  00136A  0102               	movlb	2	; () banked
  3796  00136C  6F9E               	movwf	(main@tempoTimeOut+3)& (0+255),b
  3797                           
  3798                           ; BSR set to: 2
  3799                           ;UT.c: 259: delay(tempoTimeOut);
  3800  00136E  C29B  F06D         	movff	main@tempoTimeOut,delay@time
  3801  001372  C29C  F06E         	movff	main@tempoTimeOut+1,delay@time+1
  3802  001376  C29D  F06F         	movff	main@tempoTimeOut+2,delay@time+2
  3803  00137A  C29E  F070         	movff	main@tempoTimeOut+3,delay@time+3
  3804  00137E  EC66  F023         	call	_delay	;wreg free
  3805  001382  D4E1               	goto	l973
  3806  001384                     __end_of_main:
  3807                           	opt stack 0
  3808                           tblptru	equ	0xFF8
  3809                           tblptrh	equ	0xFF7
  3810                           tblptrl	equ	0xFF6
  3811                           tablat	equ	0xFF5
  3812                           postinc0	equ	0xFEE
  3813                           wreg	equ	0xFE8
  3814                           postdec1	equ	0xFE5
  3815                           fsr1l	equ	0xFE1
  3816                           status	equ	0xFD8
  3817                           
  3818 ;; *************** function _setup_uart *****************
  3819 ;; Defined at:
  3820 ;;		line 13 in file "uart/uart.c"
  3821 ;; Parameters:    Size  Location     Type
  3822 ;;  baudRate        4   13[BANK0 ] unsigned long 
  3823 ;; Auto vars:     Size  Location     Type
  3824 ;;  brg             4   17[BANK0 ] unsigned long 
  3825 ;; Return value:  Size  Location     Type
  3826 ;;                  1    wreg      void 
  3827 ;; Registers used:
  3828 ;;		wreg, status,2, status,0, cstack
  3829 ;; Tracked objects:
  3830 ;;		On entry : 0/0
  3831 ;;		On exit  : 0/0
  3832 ;;		Unchanged: 0/0
  3833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3834 ;;      Params:         0       4       0       0       0       0       0       0       0
  3835 ;;      Locals:         0       4       0       0       0       0       0       0       0
  3836 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3837 ;;      Totals:         0       8       0       0       0       0       0       0       0
  3838 ;;Total ram usage:        8 bytes
  3839 ;; Hardware stack levels used:    1
  3840 ;; Hardware stack levels required when called:   11
  3841 ;; This function calls:
  3842 ;;		___lldiv
  3843 ;; This function is called by:
  3844 ;;		_main
  3845 ;; This function uses a non-reentrant model
  3846 ;;
  3847                           
  3848                           	psect	text1
  3849  004096                     __ptext1:
  3850                           	opt stack 0
  3851  004096                     _setup_uart:
  3852                           	opt stack 19
  3853                           
  3854                           ;uart.c: 15: uint32_t brg;
  3855                           ;uart.c: 17: PORTCbits.RC6=1;
  3856                           
  3857                           ;incstack = 0
  3858  004096  8C82               	bsf	3970,6,c	;volatile
  3859                           
  3860                           ;uart.c: 18: TRISCbits.RC6=0;
  3861  004098  9C94               	bcf	3988,6,c	;volatile
  3862                           
  3863                           ;uart.c: 20: PORTCbits.RC7=1;
  3864  00409A  8E82               	bsf	3970,7,c	;volatile
  3865                           
  3866                           ;uart.c: 21: TRISCbits.RC7=1;
  3867  00409C  8E94               	bsf	3988,7,c	;volatile
  3868                           
  3869                           ;uart.c: 23: TXSTAbits.BRGH=1;
  3870  00409E  84AC               	bsf	4012,2,c	;volatile
  3871                           
  3872                           ;uart.c: 24: BAUDCONbits.BRG16=1;
  3873  0040A0  86B8               	bsf	4024,3,c	;volatile
  3874                           
  3875                           ;uart.c: 25: brg = ((48000000*10/4)/(baudRate)-5);
  3876  0040A2  0E00               	movlw	0
  3877  0040A4  0100               	movlb	0	; () banked
  3878  0040A6  6F60               	movwf	___lldiv@dividend& (0+255),b
  3879  0040A8  0E0E               	movlw	14
  3880  0040AA  6F61               	movwf	(___lldiv@dividend+1)& (0+255),b
  3881  0040AC  0E27               	movlw	39
  3882  0040AE  6F62               	movwf	(___lldiv@dividend+2)& (0+255),b
  3883  0040B0  0E07               	movlw	7
  3884  0040B2  6F63               	movwf	(___lldiv@dividend+3)& (0+255),b
  3885  0040B4  C06D  F064         	movff	setup_uart@baudRate,___lldiv@divisor
  3886  0040B8  C06E  F065         	movff	setup_uart@baudRate+1,___lldiv@divisor+1
  3887  0040BC  C06F  F066         	movff	setup_uart@baudRate+2,___lldiv@divisor+2
  3888  0040C0  C070  F067         	movff	setup_uart@baudRate+3,___lldiv@divisor+3
  3889  0040C4  ECE3  F022         	call	___lldiv	;wreg free
  3890  0040C8  0EFB               	movlw	251
  3891  0040CA  0100               	movlb	0	; () banked
  3892  0040CC  2560               	addwf	?___lldiv& (0+255),w,b
  3893  0040CE  6F71               	movwf	setup_uart@brg& (0+255),b
  3894  0040D0  0EFF               	movlw	255
  3895  0040D2  2161               	addwfc	(?___lldiv+1)& (0+255),w,b
  3896  0040D4  6F72               	movwf	(setup_uart@brg+1)& (0+255),b
  3897  0040D6  0EFF               	movlw	255
  3898  0040D8  2162               	addwfc	(?___lldiv+2)& (0+255),w,b
  3899  0040DA  6F73               	movwf	(setup_uart@brg+2)& (0+255),b
  3900  0040DC  0EFF               	movlw	255
  3901  0040DE  2163               	addwfc	(?___lldiv+3)& (0+255),w,b
  3902  0040E0  6F74               	movwf	(setup_uart@brg+3)& (0+255),b
  3903                           
  3904                           ;uart.c: 26: brg /= 10;
  3905  0040E2  C071  F060         	movff	setup_uart@brg,___lldiv@dividend
  3906  0040E6  C072  F061         	movff	setup_uart@brg+1,___lldiv@dividend+1
  3907  0040EA  C073  F062         	movff	setup_uart@brg+2,___lldiv@dividend+2
  3908  0040EE  C074  F063         	movff	setup_uart@brg+3,___lldiv@dividend+3
  3909  0040F2  0E0A               	movlw	10
  3910  0040F4  6F64               	movwf	___lldiv@divisor& (0+255),b
  3911  0040F6  0E00               	movlw	0
  3912  0040F8  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  3913  0040FA  0E00               	movlw	0
  3914  0040FC  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  3915  0040FE  0E00               	movlw	0
  3916  004100  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  3917  004102  ECE3  F022         	call	___lldiv	;wreg free
  3918  004106  C060  F071         	movff	?___lldiv,setup_uart@brg
  3919  00410A  C061  F072         	movff	?___lldiv+1,setup_uart@brg+1
  3920  00410E  C062  F073         	movff	?___lldiv+2,setup_uart@brg+2
  3921  004112  C063  F074         	movff	?___lldiv+3,setup_uart@brg+3
  3922                           
  3923                           ;uart.c: 27: SPBRG=(uint8_t)brg;
  3924  004116  C071  FFAF         	movff	setup_uart@brg,4015	;volatile
  3925                           
  3926                           ;uart.c: 28: SPBRGH=(uint8_t)(brg >> 8);
  3927  00411A  C072  FFB0         	movff	setup_uart@brg+1,4016	;volatile
  3928                           
  3929                           ;uart.c: 30: TXSTAbits.SYNC=0;
  3930  00411E  98AC               	bcf	4012,4,c	;volatile
  3931                           
  3932                           ;uart.c: 31: TXSTAbits.SENDB=0;
  3933  004120  96AC               	bcf	4012,3,c	;volatile
  3934                           
  3935                           ;uart.c: 32: RCSTAbits.SPEN=1;
  3936  004122  8EAB               	bsf	4011,7,c	;volatile
  3937                           
  3938                           ;uart.c: 34: BAUDCONbits.TXCKP=0;
  3939  004124  98B8               	bcf	4024,4,c	;volatile
  3940                           
  3941                           ;uart.c: 35: BAUDCONbits.RXDTP=0;
  3942  004126  9AB8               	bcf	4024,5,c	;volatile
  3943                           
  3944                           ;uart.c: 36: BAUDCONbits.ABDEN=0;
  3945  004128  90B8               	bcf	4024,0,c	;volatile
  3946                           
  3947                           ;uart.c: 37: TXSTAbits.TX9=0;
  3948  00412A  9CAC               	bcf	4012,6,c	;volatile
  3949                           
  3950                           ;uart.c: 38: RCSTAbits.RX9=0;
  3951  00412C  9CAB               	bcf	4011,6,c	;volatile
  3952                           
  3953                           ;uart.c: 40: RCSTAbits.CREN=1;
  3954  00412E  88AB               	bsf	4011,4,c	;volatile
  3955                           
  3956                           ;uart.c: 41: TXSTAbits.TXEN=1;
  3957  004130  8AAC               	bsf	4012,5,c	;volatile
  3958                           
  3959                           ;uart.c: 43: RCIE=1;
  3960  004132  8A9D               	bsf	3997,5,c	;volatile
  3961  004134  0012               	return		;funcret
  3962  004136                     __end_of_setup_uart:
  3963                           	opt stack 0
  3964                           tblptru	equ	0xFF8
  3965                           tblptrh	equ	0xFF7
  3966                           tblptrl	equ	0xFF6
  3967                           tablat	equ	0xFF5
  3968                           postinc0	equ	0xFEE
  3969                           wreg	equ	0xFE8
  3970                           postdec1	equ	0xFE5
  3971                           fsr1l	equ	0xFE1
  3972                           status	equ	0xFD8
  3973                           
  3974 ;; *************** function _setup_pulsos *****************
  3975 ;; Defined at:
  3976 ;;		line 10 in file "Pulses.c"
  3977 ;; Parameters:    Size  Location     Type
  3978 ;;		None
  3979 ;; Auto vars:     Size  Location     Type
  3980 ;;		None
  3981 ;; Return value:  Size  Location     Type
  3982 ;;                  1    wreg      void 
  3983 ;; Registers used:
  3984 ;;		wreg, status,2
  3985 ;; Tracked objects:
  3986 ;;		On entry : 0/0
  3987 ;;		On exit  : 0/0
  3988 ;;		Unchanged: 0/0
  3989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3990 ;;      Params:         0       0       0       0       0       0       0       0       0
  3991 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3992 ;;      Temps:          0       1       0       0       0       0       0       0       0
  3993 ;;      Totals:         0       1       0       0       0       0       0       0       0
  3994 ;;Total ram usage:        1 bytes
  3995 ;; Hardware stack levels used:    1
  3996 ;; Hardware stack levels required when called:   10
  3997 ;; This function calls:
  3998 ;;		Nothing
  3999 ;; This function is called by:
  4000 ;;		_main
  4001 ;; This function uses a non-reentrant model
  4002 ;;
  4003                           
  4004                           	psect	text2
  4005  003DFA                     __ptext2:
  4006                           	opt stack 0
  4007  003DFA                     _setup_pulsos:
  4008                           	opt stack 20
  4009                           
  4010                           ;Pulses.c: 12: TRISDbits.RD0=1;
  4011                           
  4012                           ;incstack = 0
  4013  003DFA  8095               	bsf	3989,0,c	;volatile
  4014                           
  4015                           ;Pulses.c: 13: dig_1=PORTDbits.RD0;
  4016  003DFC  A083               	btfss	3971,0,c	;volatile
  4017  003DFE  D004               	goto	u9090
  4018  003E00  0100               	movlb	0	; () banked
  4019  003E02  6B60               	clrf	??_setup_pulsos& (0+255),b
  4020  003E04  2B60               	incf	??_setup_pulsos& (0+255),f,b
  4021  003E06  D002               	goto	u9098
  4022  003E08                     u9090:
  4023  003E08  0100               	movlb	0	; () banked
  4024  003E0A  6B60               	clrf	??_setup_pulsos& (0+255),b
  4025  003E0C                     u9098:
  4026  003E0C  5160               	movf	??_setup_pulsos& (0+255),w,b
  4027  003E0E  0102               	movlb	2	; () banked
  4028  003E10  6FE8               	movwf	_dig_1& (0+255),b	;volatile
  4029  003E12  6BE9               	clrf	(_dig_1+1)& (0+255),b	;volatile
  4030                           
  4031                           ; BSR set to: 2
  4032                           ;Pulses.c: 14: TRISDbits.RD1=1;
  4033  003E14  8295               	bsf	3989,1,c	;volatile
  4034                           
  4035                           ;Pulses.c: 15: dig_2=PORTDbits.RD1;
  4036  003E16  A283               	btfss	3971,1,c	;volatile
  4037  003E18  D004               	goto	u9100
  4038  003E1A  0100               	movlb	0	; () banked
  4039  003E1C  6B60               	clrf	??_setup_pulsos& (0+255),b
  4040  003E1E  2B60               	incf	??_setup_pulsos& (0+255),f,b
  4041  003E20  D002               	goto	u9108
  4042  003E22                     u9100:
  4043  003E22  0100               	movlb	0	; () banked
  4044  003E24  6B60               	clrf	??_setup_pulsos& (0+255),b
  4045  003E26                     u9108:
  4046  003E26  5160               	movf	??_setup_pulsos& (0+255),w,b
  4047  003E28  0102               	movlb	2	; () banked
  4048  003E2A  6FE6               	movwf	_dig_2& (0+255),b	;volatile
  4049  003E2C  6BE7               	clrf	(_dig_2+1)& (0+255),b	;volatile
  4050                           
  4051                           ; BSR set to: 2
  4052                           ;Pulses.c: 16: TRISDbits.RD2=1;
  4053  003E2E  8495               	bsf	3989,2,c	;volatile
  4054                           
  4055                           ;Pulses.c: 17: dig_3=PORTDbits.RD2;
  4056  003E30  A483               	btfss	3971,2,c	;volatile
  4057  003E32  D004               	goto	u9110
  4058  003E34  0100               	movlb	0	; () banked
  4059  003E36  6B60               	clrf	??_setup_pulsos& (0+255),b
  4060  003E38  2B60               	incf	??_setup_pulsos& (0+255),f,b
  4061  003E3A  D002               	goto	u9118
  4062  003E3C                     u9110:
  4063  003E3C  0100               	movlb	0	; () banked
  4064  003E3E  6B60               	clrf	??_setup_pulsos& (0+255),b
  4065  003E40                     u9118:
  4066  003E40  5160               	movf	??_setup_pulsos& (0+255),w,b
  4067  003E42  0102               	movlb	2	; () banked
  4068  003E44  6FE4               	movwf	_dig_3& (0+255),b	;volatile
  4069  003E46  6BE5               	clrf	(_dig_3+1)& (0+255),b	;volatile
  4070                           
  4071                           ; BSR set to: 2
  4072                           ;Pulses.c: 18: TRISDbits.RD3=1;
  4073  003E48  8695               	bsf	3989,3,c	;volatile
  4074                           
  4075                           ;Pulses.c: 19: dig_4=PORTDbits.RD3;
  4076  003E4A  A683               	btfss	3971,3,c	;volatile
  4077  003E4C  D004               	goto	u9120
  4078  003E4E  0100               	movlb	0	; () banked
  4079  003E50  6B60               	clrf	??_setup_pulsos& (0+255),b
  4080  003E52  2B60               	incf	??_setup_pulsos& (0+255),f,b
  4081  003E54  D002               	goto	u9128
  4082  003E56                     u9120:
  4083  003E56  0100               	movlb	0	; () banked
  4084  003E58  6B60               	clrf	??_setup_pulsos& (0+255),b
  4085  003E5A                     u9128:
  4086  003E5A  5160               	movf	??_setup_pulsos& (0+255),w,b
  4087  003E5C  0102               	movlb	2	; () banked
  4088  003E5E  6FE2               	movwf	_dig_4& (0+255),b	;volatile
  4089  003E60  6BE3               	clrf	(_dig_4+1)& (0+255),b	;volatile
  4090                           
  4091                           ;Pulses.c: 20: freqPulses1=0;
  4092  003E62  0E00               	movlw	0
  4093  003E64  6FCE               	movwf	_freqPulses1& (0+255),b	;volatile
  4094  003E66  0E00               	movlw	0
  4095  003E68  6FCF               	movwf	(_freqPulses1+1)& (0+255),b	;volatile
  4096  003E6A  0E00               	movlw	0
  4097  003E6C  6FD0               	movwf	(_freqPulses1+2)& (0+255),b	;volatile
  4098  003E6E  0E00               	movlw	0
  4099  003E70  6FD1               	movwf	(_freqPulses1+3)& (0+255),b	;volatile
  4100                           
  4101                           ;Pulses.c: 21: freqPulses2=0;
  4102  003E72  0E00               	movlw	0
  4103  003E74  0103               	movlb	3	; () banked
  4104  003E76  6F36               	movwf	_freqPulses2& (0+255),b	;volatile
  4105  003E78  0E00               	movlw	0
  4106  003E7A  6F37               	movwf	(_freqPulses2+1)& (0+255),b	;volatile
  4107  003E7C  0E00               	movlw	0
  4108  003E7E  6F38               	movwf	(_freqPulses2+2)& (0+255),b	;volatile
  4109  003E80  0E00               	movlw	0
  4110  003E82  6F39               	movwf	(_freqPulses2+3)& (0+255),b	;volatile
  4111                           
  4112                           ;Pulses.c: 22: freqPulses3=0;
  4113  003E84  0E00               	movlw	0
  4114  003E86  6F32               	movwf	_freqPulses3& (0+255),b	;volatile
  4115  003E88  0E00               	movlw	0
  4116  003E8A  6F33               	movwf	(_freqPulses3+1)& (0+255),b	;volatile
  4117  003E8C  0E00               	movlw	0
  4118  003E8E  6F34               	movwf	(_freqPulses3+2)& (0+255),b	;volatile
  4119  003E90  0E00               	movlw	0
  4120  003E92  6F35               	movwf	(_freqPulses3+3)& (0+255),b	;volatile
  4121                           
  4122                           ;Pulses.c: 23: freqPulses4=0;
  4123  003E94  0E00               	movlw	0
  4124  003E96  6F2E               	movwf	_freqPulses4& (0+255),b	;volatile
  4125  003E98  0E00               	movlw	0
  4126  003E9A  6F2F               	movwf	(_freqPulses4+1)& (0+255),b	;volatile
  4127  003E9C  0E00               	movlw	0
  4128  003E9E  6F30               	movwf	(_freqPulses4+2)& (0+255),b	;volatile
  4129  003EA0  0E00               	movlw	0
  4130  003EA2  6F31               	movwf	(_freqPulses4+3)& (0+255),b	;volatile
  4131                           
  4132                           ; BSR set to: 3
  4133  003EA4  0012               	return		;funcret
  4134  003EA6                     __end_of_setup_pulsos:
  4135                           	opt stack 0
  4136                           tblptru	equ	0xFF8
  4137                           tblptrh	equ	0xFF7
  4138                           tblptrl	equ	0xFF6
  4139                           tablat	equ	0xFF5
  4140                           postinc0	equ	0xFEE
  4141                           wreg	equ	0xFE8
  4142                           postdec1	equ	0xFE5
  4143                           fsr1l	equ	0xFE1
  4144                           status	equ	0xFD8
  4145                           
  4146 ;; *************** function _setup_ccp1 *****************
  4147 ;; Defined at:
  4148 ;;		line 27 in file "Timer.c"
  4149 ;; Parameters:    Size  Location     Type
  4150 ;;		None
  4151 ;; Auto vars:     Size  Location     Type
  4152 ;;		None
  4153 ;; Return value:  Size  Location     Type
  4154 ;;                  1    wreg      void 
  4155 ;; Registers used:
  4156 ;;		wreg, status,2
  4157 ;; Tracked objects:
  4158 ;;		On entry : 0/0
  4159 ;;		On exit  : 0/0
  4160 ;;		Unchanged: 0/0
  4161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4162 ;;      Params:         0       0       0       0       0       0       0       0       0
  4163 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4164 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4165 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4166 ;;Total ram usage:        0 bytes
  4167 ;; Hardware stack levels used:    1
  4168 ;; Hardware stack levels required when called:   10
  4169 ;; This function calls:
  4170 ;;		Nothing
  4171 ;; This function is called by:
  4172 ;;		_main
  4173 ;; This function uses a non-reentrant model
  4174 ;;
  4175                           
  4176                           	psect	text3
  4177  004CB8                     __ptext3:
  4178                           	opt stack 0
  4179  004CB8                     _setup_ccp1:
  4180                           	opt stack 20
  4181                           
  4182                           ;Timer.c: 29: aaa = 1;
  4183                           
  4184                           ; BSR set to: 3
  4185                           ;incstack = 0
  4186  004CB8  0E01               	movlw	1
  4187  004CBA  0102               	movlb	2	; () banked
  4188  004CBC  6FF2               	movwf	_aaa& (0+255),b
  4189                           
  4190                           ; BSR set to: 2
  4191                           ;Timer.c: 30: GIEH = 0;
  4192  004CBE  9EF2               	bcf	intcon,7,c	;volatile
  4193                           
  4194                           ;Timer.c: 31: T3CON=0b10111000;
  4195  004CC0  0EB8               	movlw	184
  4196  004CC2  6EB1               	movwf	4017,c	;volatile
  4197                           
  4198                           ;Timer.c: 32: TMR1H=0x00;
  4199  004CC4  0E00               	movlw	0
  4200  004CC6  6ECF               	movwf	4047,c	;volatile
  4201                           
  4202                           ;Timer.c: 33: TMR1L=0x00;
  4203  004CC8  0E00               	movlw	0
  4204  004CCA  6ECE               	movwf	4046,c	;volatile
  4205                           
  4206                           ;Timer.c: 34: CCPR1H=0x05;
  4207  004CCC  0E05               	movlw	5
  4208  004CCE  6EBF               	movwf	4031,c	;volatile
  4209                           
  4210                           ;Timer.c: 35: CCPR1L=0xDC;
  4211  004CD0  0EDC               	movlw	220
  4212  004CD2  6EBE               	movwf	4030,c	;volatile
  4213                           
  4214                           ;Timer.c: 36: ticks=0;
  4215  004CD4  0E00               	movlw	0
  4216  004CD6  0103               	movlb	3	; () banked
  4217  004CD8  6F2A               	movwf	_ticks& (0+255),b	;volatile
  4218  004CDA  0E00               	movlw	0
  4219  004CDC  6F2B               	movwf	(_ticks+1)& (0+255),b	;volatile
  4220  004CDE  0E00               	movlw	0
  4221  004CE0  6F2C               	movwf	(_ticks+2)& (0+255),b	;volatile
  4222  004CE2  0E00               	movlw	0
  4223  004CE4  6F2D               	movwf	(_ticks+3)& (0+255),b	;volatile
  4224                           
  4225                           ; BSR set to: 3
  4226                           ;Timer.c: 38: CCP1IF=0;
  4227  004CE6  949E               	bcf	3998,2,c	;volatile
  4228                           
  4229                           ;Timer.c: 39: T1CON=0b11110001;
  4230  004CE8  0EF1               	movlw	241
  4231  004CEA  6ECD               	movwf	4045,c	;volatile
  4232                           
  4233                           ;Timer.c: 40: CCP1CON = 0b00001011;
  4234  004CEC  0E0B               	movlw	11
  4235  004CEE  6EBD               	movwf	4029,c	;volatile
  4236                           
  4237                           ; BSR set to: 3
  4238                           ;Timer.c: 41: CCP1IE=1;
  4239  004CF0  849D               	bsf	3997,2,c	;volatile
  4240                           
  4241                           ; BSR set to: 3
  4242                           ;Timer.c: 42: IPR1bits.CCP1IP=1;
  4243  004CF2  849F               	bsf	3999,2,c	;volatile
  4244                           
  4245                           ; BSR set to: 3
  4246                           ;Timer.c: 43: RCONbits.IPEN = 1;
  4247  004CF4  8ED0               	bsf	4048,7,c	;volatile
  4248                           
  4249                           ; BSR set to: 3
  4250                           ;Timer.c: 44: GIEH = 1;
  4251  004CF6  8EF2               	bsf	intcon,7,c	;volatile
  4252                           
  4253                           ; BSR set to: 3
  4254  004CF8  0012               	return		;funcret
  4255  004CFA                     __end_of_setup_ccp1:
  4256                           	opt stack 0
  4257                           tblptru	equ	0xFF8
  4258                           tblptrh	equ	0xFF7
  4259                           tblptrl	equ	0xFF6
  4260                           tablat	equ	0xFF5
  4261                           intcon	equ	0xFF2
  4262                           postinc0	equ	0xFEE
  4263                           wreg	equ	0xFE8
  4264                           postdec1	equ	0xFE5
  4265                           fsr1l	equ	0xFE1
  4266                           status	equ	0xFD8
  4267                           
  4268 ;; *************** function _setup_AD *****************
  4269 ;; Defined at:
  4270 ;;		line 10 in file "AD.c"
  4271 ;; Parameters:    Size  Location     Type
  4272 ;;		None
  4273 ;; Auto vars:     Size  Location     Type
  4274 ;;		None
  4275 ;; Return value:  Size  Location     Type
  4276 ;;                  1    wreg      void 
  4277 ;; Registers used:
  4278 ;;		wreg, status,2
  4279 ;; Tracked objects:
  4280 ;;		On entry : 0/0
  4281 ;;		On exit  : 0/0
  4282 ;;		Unchanged: 0/0
  4283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4284 ;;      Params:         0       0       0       0       0       0       0       0       0
  4285 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4286 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4287 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4288 ;;Total ram usage:        0 bytes
  4289 ;; Hardware stack levels used:    1
  4290 ;; Hardware stack levels required when called:   10
  4291 ;; This function calls:
  4292 ;;		Nothing
  4293 ;; This function is called by:
  4294 ;;		_main
  4295 ;; This function uses a non-reentrant model
  4296 ;;
  4297                           
  4298                           	psect	text4
  4299  005180                     __ptext4:
  4300                           	opt stack 0
  4301  005180                     _setup_AD:
  4302                           	opt stack 20
  4303                           
  4304                           ;AD.c: 12: ADON=0;
  4305                           
  4306                           ; BSR set to: 3
  4307                           ;incstack = 0
  4308  005180  90C2               	bcf	4034,0,c	;volatile
  4309                           
  4310                           ;AD.c: 13: ADCON1=0b00001101;
  4311  005182  0E0D               	movlw	13
  4312  005184  6EC1               	movwf	4033,c	;volatile
  4313                           
  4314                           ;AD.c: 14: ADCON2=0b10111110;
  4315  005186  0EBE               	movlw	190
  4316  005188  6EC0               	movwf	4032,c	;volatile
  4317                           
  4318                           ;AD.c: 16: ADIF=0;
  4319  00518A  9C9E               	bcf	3998,6,c	;volatile
  4320                           
  4321                           ;AD.c: 17: ADIE=0;
  4322  00518C  9C9D               	bcf	3997,6,c	;volatile
  4323  00518E  0012               	return		;funcret
  4324  005190                     __end_of_setup_AD:
  4325                           	opt stack 0
  4326                           tblptru	equ	0xFF8
  4327                           tblptrh	equ	0xFF7
  4328                           tblptrl	equ	0xFF6
  4329                           tablat	equ	0xFF5
  4330                           intcon	equ	0xFF2
  4331                           postinc0	equ	0xFEE
  4332                           wreg	equ	0xFE8
  4333                           postdec1	equ	0xFE5
  4334                           fsr1l	equ	0xFE1
  4335                           status	equ	0xFD8
  4336                           
  4337 ;; *************** function _putsUSBUSART *****************
  4338 ;; Defined at:
  4339 ;;		line 629 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device_cdc.c"
  4340 ;; Parameters:    Size  Location     Type
  4341 ;;  data            2    0[BANK0 ] PTR unsigned char 
  4342 ;;		 -> main@data(150), 
  4343 ;; Auto vars:     Size  Location     Type
  4344 ;;  pData           2    2[BANK0 ] PTR unsigned char 
  4345 ;;		 -> main@data(150), 
  4346 ;;  len             1    4[BANK0 ] unsigned char 
  4347 ;; Return value:  Size  Location     Type
  4348 ;;                  1    wreg      void 
  4349 ;; Registers used:
  4350 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4351 ;; Tracked objects:
  4352 ;;		On entry : 0/0
  4353 ;;		On exit  : 0/0
  4354 ;;		Unchanged: 0/0
  4355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4356 ;;      Params:         0       2       0       0       0       0       0       0       0
  4357 ;;      Locals:         0       3       0       0       0       0       0       0       0
  4358 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4359 ;;      Totals:         0       5       0       0       0       0       0       0       0
  4360 ;;Total ram usage:        5 bytes
  4361 ;; Hardware stack levels used:    1
  4362 ;; Hardware stack levels required when called:   10
  4363 ;; This function calls:
  4364 ;;		Nothing
  4365 ;; This function is called by:
  4366 ;;		_main
  4367 ;; This function uses a non-reentrant model
  4368 ;;
  4369                           
  4370                           	psect	text5
  4371  004B0A                     __ptext5:
  4372                           	opt stack 0
  4373  004B0A                     _putsUSBUSART:
  4374                           	opt stack 20
  4375                           
  4376                           ;usb_device_cdc.c: 631: uint8_t len;
  4377                           ;usb_device_cdc.c: 632: char *pData;
  4378                           ;usb_device_cdc.c: 657: {PIE2bits.USBIE = 0;};
  4379                           
  4380                           ;incstack = 0
  4381  004B0A  9AA0               	bcf	4000,5,c	;volatile
  4382                           
  4383                           ;usb_device_cdc.c: 658: if(cdc_trf_state != 0)
  4384  004B0C  0102               	movlb	2	; () banked
  4385  004B0E  51F0               	movf	_cdc_trf_state& (0+255),w,b
  4386  004B10  B4D8               	btfsc	status,2,c
  4387  004B12  D002               	goto	l778
  4388                           
  4389                           ; BSR set to: 2
  4390                           ;usb_device_cdc.c: 659: {
  4391                           ;usb_device_cdc.c: 660: {PIE2bits.USBIE = 1;};
  4392  004B14  8AA0               	bsf	4000,5,c	;volatile
  4393                           
  4394                           ;usb_device_cdc.c: 661: return;
  4395  004B16  0012               	return	
  4396  004B18                     l778:
  4397                           
  4398                           ; BSR set to: 2
  4399                           ;usb_device_cdc.c: 662: }
  4400                           ;usb_device_cdc.c: 668: len = 0;
  4401                           
  4402                           ; BSR set to: 2
  4403  004B18  0E00               	movlw	0
  4404  004B1A  0100               	movlb	0	; () banked
  4405  004B1C  6F64               	movwf	putsUSBUSART@len& (0+255),b
  4406                           
  4407                           ; BSR set to: 0
  4408                           ;usb_device_cdc.c: 669: pData = data;
  4409  004B1E  C060  F062         	movff	putsUSBUSART@data,putsUSBUSART@pData
  4410  004B22  C061  F063         	movff	putsUSBUSART@data+1,putsUSBUSART@pData+1
  4411  004B26                     
  4412                           ; BSR set to: 0
  4413                           ;usb_device_cdc.c: 671: {
  4414                           ;usb_device_cdc.c: 672: len++;
  4415                           
  4416                           ; BSR set to: 0
  4417  004B26  2B64               	incf	putsUSBUSART@len& (0+255),f,b
  4418                           
  4419                           ; BSR set to: 0
  4420                           ;usb_device_cdc.c: 673: if(len == 255) break;
  4421  004B28  2964               	incf	putsUSBUSART@len& (0+255),w,b
  4422  004B2A  B4D8               	btfsc	status,2,c
  4423  004B2C  D009               	goto	u9070
  4424                           
  4425                           ; BSR set to: 0
  4426                           ;usb_device_cdc.c: 674: }while(*pData++);
  4427                           
  4428                           ; BSR set to: 0
  4429                           
  4430                           ; BSR set to: 0
  4431  004B2E  C062  FFD9         	movff	putsUSBUSART@pData,fsr2l
  4432  004B32  C063  FFDA         	movff	putsUSBUSART@pData+1,fsr2h
  4433  004B36  4B62               	infsnz	putsUSBUSART@pData& (0+255),f,b
  4434  004B38  2B63               	incf	(putsUSBUSART@pData+1)& (0+255),f,b
  4435  004B3A  50DF               	movf	indf2,w,c
  4436  004B3C  A4D8               	btfss	status,2,c
  4437  004B3E  D7F3               	goto	l780
  4438  004B40                     u9070:
  4439                           
  4440                           ; BSR set to: 0
  4441                           ;usb_device_cdc.c: 682: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = len; cdc_mem_type 
      +                          = 0x01; cdc_trf_state = 1; };
  4442                           
  4443                           ; BSR set to: 0
  4444  004B40  C060  F2D5         	movff	putsUSBUSART@data,_pCDCSrc
  4445  004B44  C061  F2D6         	movff	putsUSBUSART@data+1,_pCDCSrc+1
  4446                           
  4447                           ; BSR set to: 0
  4448  004B48  C064  F052         	movff	putsUSBUSART@len,_cdc_tx_len
  4449                           
  4450                           ; BSR set to: 0
  4451  004B4C  0E01               	movlw	1
  4452  004B4E  0102               	movlb	2	; () banked
  4453  004B50  6FEF               	movwf	_cdc_mem_type& (0+255),b
  4454                           
  4455                           ; BSR set to: 2
  4456  004B52  0E01               	movlw	1
  4457  004B54  6FF0               	movwf	_cdc_trf_state& (0+255),b
  4458                           
  4459                           ; BSR set to: 2
  4460                           ;usb_device_cdc.c: 683: {PIE2bits.USBIE = 1;};
  4461  004B56  8AA0               	bsf	4000,5,c	;volatile
  4462                           
  4463                           ; BSR set to: 2
  4464  004B58  0012               	return		;funcret
  4465  004B5A                     __end_of_putsUSBUSART:
  4466                           	opt stack 0
  4467                           tblptru	equ	0xFF8
  4468                           tblptrh	equ	0xFF7
  4469                           tblptrl	equ	0xFF6
  4470                           tablat	equ	0xFF5
  4471                           intcon	equ	0xFF2
  4472                           postinc0	equ	0xFEE
  4473                           wreg	equ	0xFE8
  4474                           postdec1	equ	0xFE5
  4475                           fsr1l	equ	0xFE1
  4476                           indf2	equ	0xFDF
  4477                           fsr2h	equ	0xFDA
  4478                           fsr2l	equ	0xFD9
  4479                           status	equ	0xFD8
  4480                           
  4481 ;; *************** function _le_pulsos *****************
  4482 ;; Defined at:
  4483 ;;		line 26 in file "Pulses.c"
  4484 ;; Parameters:    Size  Location     Type
  4485 ;;  freqPulses      1    wreg     unsigned char 
  4486 ;;  modo            1    5[BANK0 ] unsigned char 
  4487 ;; Auto vars:     Size  Location     Type
  4488 ;;  freqPulses      1    9[BANK0 ] unsigned char 
  4489 ;;  freq            4   10[BANK0 ] unsigned long 
  4490 ;; Return value:  Size  Location     Type
  4491 ;;                  4    5[BANK0 ] unsigned long 
  4492 ;; Registers used:
  4493 ;;		wreg, status,2, status,0
  4494 ;; Tracked objects:
  4495 ;;		On entry : 0/0
  4496 ;;		On exit  : 0/0
  4497 ;;		Unchanged: 0/0
  4498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4499 ;;      Params:         0       4       0       0       0       0       0       0       0
  4500 ;;      Locals:         0       5       0       0       0       0       0       0       0
  4501 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4502 ;;      Totals:         0       9       0       0       0       0       0       0       0
  4503 ;;Total ram usage:        9 bytes
  4504 ;; Hardware stack levels used:    1
  4505 ;; Hardware stack levels required when called:   10
  4506 ;; This function calls:
  4507 ;;		Nothing
  4508 ;; This function is called by:
  4509 ;;		_main
  4510 ;; This function uses a non-reentrant model
  4511 ;;
  4512                           
  4513                           	psect	text6
  4514  00386A                     __ptext6:
  4515                           	opt stack 0
  4516  00386A                     _le_pulsos:
  4517                           	opt stack 20
  4518                           
  4519                           ; BSR set to: 2
  4520                           ;incstack = 0
  4521                           ;le_pulsos@freqPulses stored from wreg
  4522  00386A  0100               	movlb	0	; () banked
  4523  00386C  6F69               	movwf	le_pulsos@freqPulses& (0+255),b
  4524                           
  4525                           ;Pulses.c: 28: CCP1IE=0;
  4526  00386E  949D               	bcf	3997,2,c	;volatile
  4527                           
  4528                           ;Pulses.c: 29: uint32_t freq;
  4529                           ;Pulses.c: 30: switch(freqPulses){
  4530  003870  D054               	goto	l1859
  4531  003872                     l1860:
  4532                           
  4533                           ; BSR set to: 0
  4534                           ;Pulses.c: 32: freq = freqPulses1;
  4535  003872  C2CE  F06A         	movff	_freqPulses1,le_pulsos@freq	;volatile
  4536  003876  C2CF  F06B         	movff	_freqPulses1+1,le_pulsos@freq+1	;volatile
  4537  00387A  C2D0  F06C         	movff	_freqPulses1+2,le_pulsos@freq+2	;volatile
  4538  00387E  C2D1  F06D         	movff	_freqPulses1+3,le_pulsos@freq+3	;volatile
  4539                           
  4540                           ; BSR set to: 0
  4541                           ;Pulses.c: 33: if (modo)
  4542  003882  5165               	movf	le_pulsos@modo& (0+255),w,b
  4543  003884  B4D8               	btfsc	status,2,c
  4544  003886  D057               	goto	l1862
  4545                           
  4546                           ; BSR set to: 0
  4547                           ;Pulses.c: 34: freqPulses1=0;
  4548  003888  0E00               	movlw	0
  4549  00388A  0102               	movlb	2	; () banked
  4550  00388C  6FCE               	movwf	_freqPulses1& (0+255),b	;volatile
  4551  00388E  0E00               	movlw	0
  4552  003890  6FCF               	movwf	(_freqPulses1+1)& (0+255),b	;volatile
  4553  003892  0E00               	movlw	0
  4554  003894  6FD0               	movwf	(_freqPulses1+2)& (0+255),b	;volatile
  4555  003896  0E00               	movlw	0
  4556  003898  6FD1               	movwf	(_freqPulses1+3)& (0+255),b	;volatile
  4557                           
  4558                           ; BSR set to: 2
  4559                           ;Pulses.c: 35: break;
  4560  00389A  D04D               	goto	l1862
  4561  00389C                     l1863:
  4562                           
  4563                           ; BSR set to: 0
  4564                           ;Pulses.c: 37: freq = freqPulses2;
  4565  00389C  C336  F06A         	movff	_freqPulses2,le_pulsos@freq	;volatile
  4566  0038A0  C337  F06B         	movff	_freqPulses2+1,le_pulsos@freq+1	;volatile
  4567  0038A4  C338  F06C         	movff	_freqPulses2+2,le_pulsos@freq+2	;volatile
  4568  0038A8  C339  F06D         	movff	_freqPulses2+3,le_pulsos@freq+3	;volatile
  4569                           
  4570                           ; BSR set to: 0
  4571                           ;Pulses.c: 38: if (modo)
  4572  0038AC  5165               	movf	le_pulsos@modo& (0+255),w,b
  4573  0038AE  B4D8               	btfsc	status,2,c
  4574  0038B0  D042               	goto	l1862
  4575                           
  4576                           ; BSR set to: 0
  4577                           ;Pulses.c: 39: freqPulses2=0;
  4578  0038B2  0E00               	movlw	0
  4579  0038B4  0103               	movlb	3	; () banked
  4580  0038B6  6F36               	movwf	_freqPulses2& (0+255),b	;volatile
  4581  0038B8  0E00               	movlw	0
  4582  0038BA  6F37               	movwf	(_freqPulses2+1)& (0+255),b	;volatile
  4583  0038BC  0E00               	movlw	0
  4584  0038BE  6F38               	movwf	(_freqPulses2+2)& (0+255),b	;volatile
  4585  0038C0  0E00               	movlw	0
  4586  0038C2  6F39               	movwf	(_freqPulses2+3)& (0+255),b	;volatile
  4587                           
  4588                           ; BSR set to: 3
  4589                           ;Pulses.c: 40: break;
  4590  0038C4  D038               	goto	l1862
  4591  0038C6                     l1865:
  4592                           
  4593                           ; BSR set to: 0
  4594                           ;Pulses.c: 42: freq = freqPulses3;
  4595  0038C6  C332  F06A         	movff	_freqPulses3,le_pulsos@freq	;volatile
  4596  0038CA  C333  F06B         	movff	_freqPulses3+1,le_pulsos@freq+1	;volatile
  4597  0038CE  C334  F06C         	movff	_freqPulses3+2,le_pulsos@freq+2	;volatile
  4598  0038D2  C335  F06D         	movff	_freqPulses3+3,le_pulsos@freq+3	;volatile
  4599                           
  4600                           ; BSR set to: 0
  4601                           ;Pulses.c: 43: if (modo)
  4602  0038D6  5165               	movf	le_pulsos@modo& (0+255),w,b
  4603  0038D8  B4D8               	btfsc	status,2,c
  4604  0038DA  D02D               	goto	l1862
  4605                           
  4606                           ; BSR set to: 0
  4607                           ;Pulses.c: 44: freqPulses3=0;
  4608  0038DC  0E00               	movlw	0
  4609  0038DE  0103               	movlb	3	; () banked
  4610  0038E0  6F32               	movwf	_freqPulses3& (0+255),b	;volatile
  4611  0038E2  0E00               	movlw	0
  4612  0038E4  6F33               	movwf	(_freqPulses3+1)& (0+255),b	;volatile
  4613  0038E6  0E00               	movlw	0
  4614  0038E8  6F34               	movwf	(_freqPulses3+2)& (0+255),b	;volatile
  4615  0038EA  0E00               	movlw	0
  4616  0038EC  6F35               	movwf	(_freqPulses3+3)& (0+255),b	;volatile
  4617                           
  4618                           ; BSR set to: 3
  4619                           ;Pulses.c: 45: break;
  4620  0038EE  D023               	goto	l1862
  4621  0038F0                     l1867:
  4622                           
  4623                           ; BSR set to: 0
  4624                           ;Pulses.c: 47: freq = freqPulses4;
  4625  0038F0  C32E  F06A         	movff	_freqPulses4,le_pulsos@freq	;volatile
  4626  0038F4  C32F  F06B         	movff	_freqPulses4+1,le_pulsos@freq+1	;volatile
  4627  0038F8  C330  F06C         	movff	_freqPulses4+2,le_pulsos@freq+2	;volatile
  4628  0038FC  C331  F06D         	movff	_freqPulses4+3,le_pulsos@freq+3	;volatile
  4629                           
  4630                           ; BSR set to: 0
  4631                           ;Pulses.c: 48: if (modo)
  4632  003900  5165               	movf	le_pulsos@modo& (0+255),w,b
  4633  003902  B4D8               	btfsc	status,2,c
  4634  003904  D018               	goto	l1862
  4635                           
  4636                           ; BSR set to: 0
  4637                           ;Pulses.c: 49: freqPulses4=0;
  4638  003906  0E00               	movlw	0
  4639  003908  0103               	movlb	3	; () banked
  4640  00390A  6F2E               	movwf	_freqPulses4& (0+255),b	;volatile
  4641  00390C  0E00               	movlw	0
  4642  00390E  6F2F               	movwf	(_freqPulses4+1)& (0+255),b	;volatile
  4643  003910  0E00               	movlw	0
  4644  003912  6F30               	movwf	(_freqPulses4+2)& (0+255),b	;volatile
  4645  003914  0E00               	movlw	0
  4646  003916  6F31               	movwf	(_freqPulses4+3)& (0+255),b	;volatile
  4647                           
  4648                           ; BSR set to: 3
  4649                           ;Pulses.c: 51: }
  4650                           
  4651                           ; BSR set to: 3
  4652                           ;Pulses.c: 50: break;
  4653  003918  D00E               	goto	l1862
  4654  00391A                     l1859:
  4655                           
  4656                           ; BSR set to: 3
  4657  00391A  0100               	movlb	0	; () banked
  4658  00391C  5169               	movf	le_pulsos@freqPulses& (0+255),w,b
  4659                           
  4660                           ; Switch size 1, requested type "space"
  4661                           ; Number of cases is 4, Range of values is 1 to 4
  4662                           ; switch strategies available:
  4663                           ; Name         Instructions Cycles
  4664                           ; simple_byte           13     7 (average)
  4665                           ;	Chosen strategy is simple_byte
  4666  00391E  0A01               	xorlw	1	; case 1
  4667  003920  B4D8               	btfsc	status,2,c
  4668  003922  D7A7               	goto	l1860
  4669  003924  0A03               	xorlw	3	; case 2
  4670  003926  B4D8               	btfsc	status,2,c
  4671  003928  D7B9               	goto	l1863
  4672  00392A  0A01               	xorlw	1	; case 3
  4673  00392C  B4D8               	btfsc	status,2,c
  4674  00392E  D7CB               	goto	l1865
  4675  003930  0A07               	xorlw	7	; case 4
  4676  003932  B4D8               	btfsc	status,2,c
  4677  003934  D7DD               	goto	l1867
  4678  003936                     l1862:
  4679                           
  4680                           ;Pulses.c: 53: CCP1IE=1;
  4681  003936  849D               	bsf	3997,2,c	;volatile
  4682                           
  4683                           ;Pulses.c: 54: return freq;
  4684  003938  C06A  F065         	movff	le_pulsos@freq,?_le_pulsos
  4685  00393C  C06B  F066         	movff	le_pulsos@freq+1,?_le_pulsos+1
  4686  003940  C06C  F067         	movff	le_pulsos@freq+2,?_le_pulsos+2
  4687  003944  C06D  F068         	movff	le_pulsos@freq+3,?_le_pulsos+3
  4688  003948  0012               	return		;funcret
  4689  00394A                     __end_of_le_pulsos:
  4690                           	opt stack 0
  4691                           tblptru	equ	0xFF8
  4692                           tblptrh	equ	0xFF7
  4693                           tblptrl	equ	0xFF6
  4694                           tablat	equ	0xFF5
  4695                           intcon	equ	0xFF2
  4696                           postinc0	equ	0xFEE
  4697                           wreg	equ	0xFE8
  4698                           postdec1	equ	0xFE5
  4699                           fsr1l	equ	0xFE1
  4700                           indf2	equ	0xFDF
  4701                           fsr2h	equ	0xFDA
  4702                           fsr2l	equ	0xFD9
  4703                           status	equ	0xFD8
  4704                           
  4705 ;; *************** function _le_AD *****************
  4706 ;; Defined at:
  4707 ;;		line 20 in file "AD.c"
  4708 ;; Parameters:    Size  Location     Type
  4709 ;;  AnalogPort      1    wreg     unsigned char 
  4710 ;; Auto vars:     Size  Location     Type
  4711 ;;  AnalogPort      1   73[BANK0 ] unsigned char 
  4712 ;;  i               2   76[BANK0 ] int 
  4713 ;;  corrente        3   70[BANK0 ] float 
  4714 ;;  leitura         2   78[BANK0 ] unsigned int 
  4715 ;;  leituraAux      2   74[BANK0 ] unsigned int 
  4716 ;; Return value:  Size  Location     Type
  4717 ;;                  3   62[BANK0 ] float 
  4718 ;; Registers used:
  4719 ;;		wreg, status,2, status,0, cstack
  4720 ;; Tracked objects:
  4721 ;;		On entry : 0/0
  4722 ;;		On exit  : 0/0
  4723 ;;		Unchanged: 0/0
  4724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4725 ;;      Params:         0       3       0       0       0       0       0       0       0
  4726 ;;      Locals:         0      13       0       0       0       0       0       0       0
  4727 ;;      Temps:          0       2       0       0       0       0       0       0       0
  4728 ;;      Totals:         0      18       0       0       0       0       0       0       0
  4729 ;;Total ram usage:       18 bytes
  4730 ;; Hardware stack levels used:    1
  4731 ;; Hardware stack levels required when called:   12
  4732 ;; This function calls:
  4733 ;;		___awtoft
  4734 ;;		___ftadd
  4735 ;;		___ftdiv
  4736 ;;		___ftmul
  4737 ;; This function is called by:
  4738 ;;		_main
  4739 ;; This function uses a non-reentrant model
  4740 ;;
  4741                           
  4742                           	psect	text7
  4743  002BE6                     __ptext7:
  4744                           	opt stack 0
  4745  002BE6                     _le_AD:
  4746                           	opt stack 18
  4747                           
  4748                           ;incstack = 0
  4749                           ;le_AD@AnalogPort stored from wreg
  4750  002BE6  0100               	movlb	0	; () banked
  4751  002BE8  6FA9               	movwf	le_AD@AnalogPort& (0+255),b
  4752                           
  4753                           ;AD.c: 22: if (AnalogPort == 0){
  4754  002BEA  0100               	movlb	0	; () banked
  4755  002BEC  51A9               	movf	le_AD@AnalogPort& (0+255),w,b
  4756  002BEE  A4D8               	btfss	status,2,c
  4757  002BF0  D002               	goto	l1762
  4758                           
  4759                           ; BSR set to: 0
  4760                           ;AD.c: 23: ADCON0=0b00000001;
  4761  002BF2  0E01               	movlw	1
  4762  002BF4  6EC2               	movwf	4034,c	;volatile
  4763  002BF6                     l1762:
  4764                           
  4765                           ; BSR set to: 0
  4766                           ;AD.c: 24: }
  4767                           ;AD.c: 25: if (AnalogPort == 1){
  4768                           
  4769                           ; BSR set to: 0
  4770  002BF6  05A9               	decf	le_AD@AnalogPort& (0+255),w,b
  4771  002BF8  A4D8               	btfss	status,2,c
  4772  002BFA  D002               	goto	l1763
  4773                           
  4774                           ; BSR set to: 0
  4775                           ;AD.c: 26: ADCON0=0b00000101;
  4776  002BFC  0E05               	movlw	5
  4777  002BFE  6EC2               	movwf	4034,c	;volatile
  4778  002C00                     l1763:
  4779                           
  4780                           ; BSR set to: 0
  4781                           ;AD.c: 27: }
  4782                           ;AD.c: 35: float corrente;
  4783                           ;AD.c: 37: uint16_t leituraAux;
  4784                           ;AD.c: 38: uint16_t leitura=0;
  4785  002C00  0E00               	movlw	0
  4786  002C02  6FAF               	movwf	(le_AD@leitura+1)& (0+255),b
  4787  002C04  0E00               	movlw	0
  4788  002C06  6FAE               	movwf	le_AD@leitura& (0+255),b
  4789                           
  4790                           ;AD.c: 40: for (int i=0;i<32;i++)
  4791  002C08  0E00               	movlw	0
  4792  002C0A  6FAD               	movwf	(le_AD@i+1)& (0+255),b
  4793  002C0C  0E00               	movlw	0
  4794  002C0E  6FAC               	movwf	le_AD@i& (0+255),b
  4795  002C10                     l9545:
  4796                           
  4797                           ; BSR set to: 0
  4798  002C10  BFAD               	btfsc	(le_AD@i+1)& (0+255),7,b
  4799  002C12  D006               	goto	l1764
  4800  002C14  51AD               	movf	(le_AD@i+1)& (0+255),w,b
  4801  002C16  E119               	bnz	l9557
  4802  002C18  0E20               	movlw	32
  4803  002C1A  5DAC               	subwf	le_AD@i& (0+255),w,b
  4804  002C1C  B0D8               	btfsc	status,0,c
  4805  002C1E  D015               	goto	u9170
  4806  002C20                     l1764:
  4807                           
  4808                           ; BSR set to: 0
  4809                           ;AD.c: 41: {
  4810                           ;AD.c: 42: GO_DONE=1;
  4811  002C20  82C2               	bsf	4034,1,c	;volatile
  4812                           
  4813                           ;AD.c: 43: __nop();
  4814  002C22  F000               	nop	
  4815  002C24  B2C2               	btfsc	4034,1,c	;volatile
  4816  002C26  D7FE               	goto	l1767
  4817                           
  4818                           ;AD.c: 47: leituraAux=ADRESH;
  4819  002C28  CFC4 F0AA          	movff	4036,le_AD@leituraAux	;volatile
  4820  002C2C  0100               	movlb	0	; () banked
  4821  002C2E  6BAB               	clrf	(le_AD@leituraAux+1)& (0+255),b
  4822                           
  4823                           ; BSR set to: 0
  4824                           ;AD.c: 48: leituraAux=(leituraAux <<8) | ADRESL;
  4825  002C30  51AA               	movf	le_AD@leituraAux& (0+255),w,b
  4826  002C32  6FA1               	movwf	??_le_AD& (0+255),b
  4827  002C34  50C3               	movf	4035,w,c	;volatile
  4828  002C36  6FAA               	movwf	le_AD@leituraAux& (0+255),b
  4829  002C38  C0A1  F0AB         	movff	??_le_AD,le_AD@leituraAux+1
  4830                           
  4831                           ; BSR set to: 0
  4832                           ;AD.c: 49: leitura+=leituraAux;
  4833  002C3C  51AA               	movf	le_AD@leituraAux& (0+255),w,b
  4834  002C3E  27AE               	addwf	le_AD@leitura& (0+255),f,b
  4835  002C40  51AB               	movf	(le_AD@leituraAux+1)& (0+255),w,b
  4836  002C42  23AF               	addwfc	(le_AD@leitura+1)& (0+255),f,b
  4837                           
  4838                           ; BSR set to: 0
  4839  002C44  4BAC               	infsnz	le_AD@i& (0+255),f,b
  4840  002C46  2BAD               	incf	(le_AD@i+1)& (0+255),f,b
  4841  002C48  D7E3               	goto	l9545
  4842  002C4A                     u9170:
  4843  002C4A                     l9557:
  4844                           
  4845                           ; BSR set to: 0
  4846                           ;AD.c: 51: }
  4847                           ;AD.c: 53: leitura>>=5;
  4848  002C4A  0E05               	movlw	5
  4849  002C4C  6FA1               	movwf	??_le_AD& (0+255),b
  4850  002C4E                     u9185:
  4851  002C4E  90D8               	bcf	status,0,c
  4852  002C50  33AF               	rrcf	(le_AD@leitura+1)& (0+255),f,b
  4853  002C52  33AE               	rrcf	le_AD@leitura& (0+255),f,b
  4854  002C54  2FA1               	decfsz	??_le_AD& (0+255),f,b
  4855  002C56  D7FB               	goto	u9185
  4856                           
  4857                           ;AD.c: 55: if (leitura==0)
  4858  002C58  51AE               	movf	le_AD@leitura& (0+255),w,b
  4859  002C5A  11AF               	iorwf	(le_AD@leitura+1)& (0+255),w,b
  4860  002C5C  A4D8               	btfss	status,2,c
  4861  002C5E  D007               	goto	l1769
  4862                           
  4863                           ; BSR set to: 0
  4864                           ;AD.c: 56: corrente=0;
  4865  002C60  0E00               	movlw	0
  4866  002C62  6FA6               	movwf	le_AD@corrente& (0+255),b
  4867  002C64  0E00               	movlw	0
  4868  002C66  6FA7               	movwf	(le_AD@corrente+1)& (0+255),b
  4869  002C68  0E00               	movlw	0
  4870  002C6A  6FA8               	movwf	(le_AD@corrente+2)& (0+255),b
  4871  002C6C  D04B               	goto	l1770
  4872  002C6E                     l1769:
  4873                           
  4874                           ; BSR set to: 0
  4875                           ;AD.c: 57: else
  4876                           ;AD.c: 58: corrente=((int16_t) leitura-195.0)*16.0/784.0+4.0;
  4877                           
  4878                           ; BSR set to: 0
  4879  002C6E  0E00               	movlw	0
  4880  002C70  6F92               	movwf	___ftdiv@f2& (0+255),b
  4881  002C72  0E44               	movlw	68
  4882  002C74  6F93               	movwf	(___ftdiv@f2+1)& (0+255),b
  4883  002C76  0E44               	movlw	68
  4884  002C78  6F94               	movwf	(___ftdiv@f2+2)& (0+255),b
  4885  002C7A  0E00               	movlw	0
  4886  002C7C  6F83               	movwf	___ftmul@f2& (0+255),b
  4887  002C7E  0E80               	movlw	128
  4888  002C80  6F84               	movwf	(___ftmul@f2+1)& (0+255),b
  4889  002C82  0E41               	movlw	65
  4890  002C84  6F85               	movwf	(___ftmul@f2+2)& (0+255),b
  4891  002C86  0E00               	movlw	0
  4892  002C88  6F77               	movwf	___ftadd@f2& (0+255),b
  4893  002C8A  0E43               	movlw	67
  4894  002C8C  6F78               	movwf	(___ftadd@f2+1)& (0+255),b
  4895  002C8E  0EC3               	movlw	195
  4896  002C90  6F79               	movwf	(___ftadd@f2+2)& (0+255),b
  4897  002C92  C0AE  F068         	movff	le_AD@leitura,___awtoft@c
  4898  002C96  C0AF  F069         	movff	le_AD@leitura+1,___awtoft@c+1
  4899  002C9A  EC1C  F027         	call	___awtoft	;wreg free
  4900  002C9E  C068  F074         	movff	?___awtoft,___ftadd@f1
  4901  002CA2  C069  F075         	movff	?___awtoft+1,___ftadd@f1+1
  4902  002CA6  C06A  F076         	movff	?___awtoft+2,___ftadd@f1+2
  4903  002CAA  ECAA  F012         	call	___ftadd	;wreg free
  4904  002CAE  C074  F080         	movff	?___ftadd,___ftmul@f1
  4905  002CB2  C075  F081         	movff	?___ftadd+1,___ftmul@f1+1
  4906  002CB6  C076  F082         	movff	?___ftadd+2,___ftmul@f1+2
  4907  002CBA  EC46  F01B         	call	___ftmul	;wreg free
  4908  002CBE  C080  F08F         	movff	?___ftmul,___ftdiv@f1
  4909  002CC2  C081  F090         	movff	?___ftmul+1,___ftdiv@f1+1
  4910  002CC6  C082  F091         	movff	?___ftmul+2,___ftdiv@f1+2
  4911  002CCA  ECC1  F01B         	call	___ftdiv	;wreg free
  4912  002CCE  C08F  F0A3         	movff	?___ftdiv,_le_AD$5717
  4913  002CD2  C090  F0A4         	movff	?___ftdiv+1,_le_AD$5717+1
  4914  002CD6  C091  F0A5         	movff	?___ftdiv+2,_le_AD$5717+2
  4915                           
  4916                           ;AD.c: 57: else
  4917                           ;AD.c: 58: corrente=((int16_t) leitura-195.0)*16.0/784.0+4.0;
  4918  002CDA  C0A3  F074         	movff	_le_AD$5717,___ftadd@f1
  4919  002CDE  C0A4  F075         	movff	_le_AD$5717+1,___ftadd@f1+1
  4920  002CE2  C0A5  F076         	movff	_le_AD$5717+2,___ftadd@f1+2
  4921  002CE6  0E00               	movlw	0
  4922  002CE8  0100               	movlb	0	; () banked
  4923  002CEA  6F77               	movwf	___ftadd@f2& (0+255),b
  4924  002CEC  0E80               	movlw	128
  4925  002CEE  6F78               	movwf	(___ftadd@f2+1)& (0+255),b
  4926  002CF0  0E40               	movlw	64
  4927  002CF2  6F79               	movwf	(___ftadd@f2+2)& (0+255),b
  4928  002CF4  ECAA  F012         	call	___ftadd	;wreg free
  4929  002CF8  C074  F0A6         	movff	?___ftadd,le_AD@corrente
  4930  002CFC  C075  F0A7         	movff	?___ftadd+1,le_AD@corrente+1
  4931  002D00  C076  F0A8         	movff	?___ftadd+2,le_AD@corrente+2
  4932  002D04                     l1770:
  4933                           
  4934                           ;AD.c: 60: return corrente;
  4935  002D04  C0A6  F09E         	movff	le_AD@corrente,?_le_AD
  4936  002D08  C0A7  F09F         	movff	le_AD@corrente+1,?_le_AD+1
  4937  002D0C  C0A8  F0A0         	movff	le_AD@corrente+2,?_le_AD+2
  4938  002D10  0012               	return	
  4939  002D12                     __end_of_le_AD:
  4940                           	opt stack 0
  4941                           tblptru	equ	0xFF8
  4942                           tblptrh	equ	0xFF7
  4943                           tblptrl	equ	0xFF6
  4944                           tablat	equ	0xFF5
  4945                           intcon	equ	0xFF2
  4946                           postinc0	equ	0xFEE
  4947                           wreg	equ	0xFE8
  4948                           postdec1	equ	0xFE5
  4949                           fsr1l	equ	0xFE1
  4950                           indf2	equ	0xFDF
  4951                           fsr2h	equ	0xFDA
  4952                           fsr2l	equ	0xFD9
  4953                           status	equ	0xFD8
  4954                           
  4955 ;; *************** function ___ftdiv *****************
  4956 ;; Defined at:
  4957 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftdiv.c"
  4958 ;; Parameters:    Size  Location     Type
  4959 ;;  f1              3   47[BANK0 ] float 
  4960 ;;  f2              3   50[BANK0 ] float 
  4961 ;; Auto vars:     Size  Location     Type
  4962 ;;  f3              3   57[BANK0 ] float 
  4963 ;;  sign            1   61[BANK0 ] unsigned char 
  4964 ;;  exp             1   60[BANK0 ] unsigned char 
  4965 ;;  cntr            1   56[BANK0 ] unsigned char 
  4966 ;; Return value:  Size  Location     Type
  4967 ;;                  3   47[BANK0 ] float 
  4968 ;; Registers used:
  4969 ;;		wreg, status,2, status,0, cstack
  4970 ;; Tracked objects:
  4971 ;;		On entry : 0/0
  4972 ;;		On exit  : 0/0
  4973 ;;		Unchanged: 0/0
  4974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4975 ;;      Params:         0       6       0       0       0       0       0       0       0
  4976 ;;      Locals:         0       6       0       0       0       0       0       0       0
  4977 ;;      Temps:          0       3       0       0       0       0       0       0       0
  4978 ;;      Totals:         0      15       0       0       0       0       0       0       0
  4979 ;;Total ram usage:       15 bytes
  4980 ;; Hardware stack levels used:    1
  4981 ;; Hardware stack levels required when called:   11
  4982 ;; This function calls:
  4983 ;;		___ftpack
  4984 ;; This function is called by:
  4985 ;;		_le_AD
  4986 ;; This function uses a non-reentrant model
  4987 ;;
  4988                           
  4989                           	psect	text8
  4990  003782                     __ptext8:
  4991                           	opt stack 0
  4992  003782                     ___ftdiv:
  4993                           	opt stack 18
  4994                           
  4995                           ;incstack = 0
  4996  003782  C091  F095         	movff	___ftdiv@f1+2,??___ftdiv
  4997  003786  0100               	movlb	0	; () banked
  4998  003788  6B96               	clrf	(??___ftdiv+1)& (0+255),b
  4999  00378A  6B97               	clrf	(??___ftdiv+2)& (0+255),b
  5000  00378C  3590               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  5001  00378E  3795               	rlcf	??___ftdiv& (0+255),f,b
  5002  003790  E301               	bnc	u8461
  5003  003792  8196               	bsf	(??___ftdiv+1)& (0+255),0,b
  5004  003794                     u8461:
  5005  003794  5195               	movf	??___ftdiv& (0+255),w,b
  5006  003796  6F9C               	movwf	___ftdiv@exp& (0+255),b
  5007  003798  519C               	movf	___ftdiv@exp& (0+255),w,b
  5008  00379A  A4D8               	btfss	status,2,c
  5009  00379C  D007               	goto	l2748
  5010                           
  5011                           ; BSR set to: 0
  5012  00379E  0E00               	movlw	0
  5013  0037A0  6F8F               	movwf	?___ftdiv& (0+255),b
  5014  0037A2  0E00               	movlw	0
  5015  0037A4  6F90               	movwf	(?___ftdiv+1)& (0+255),b
  5016  0037A6  0E00               	movlw	0
  5017  0037A8  6F91               	movwf	(?___ftdiv+2)& (0+255),b
  5018                           
  5019                           ; BSR set to: 0
  5020  0037AA  0012               	return	
  5021  0037AC                     l2748:
  5022                           
  5023                           ; BSR set to: 0
  5024                           
  5025                           ; BSR set to: 0
  5026  0037AC  C094  F095         	movff	___ftdiv@f2+2,??___ftdiv
  5027  0037B0  6B96               	clrf	(??___ftdiv+1)& (0+255),b
  5028  0037B2  6B97               	clrf	(??___ftdiv+2)& (0+255),b
  5029  0037B4  3593               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  5030  0037B6  3795               	rlcf	??___ftdiv& (0+255),f,b
  5031  0037B8  E301               	bnc	u8481
  5032  0037BA  8196               	bsf	(??___ftdiv+1)& (0+255),0,b
  5033  0037BC                     u8481:
  5034  0037BC  5195               	movf	??___ftdiv& (0+255),w,b
  5035  0037BE  6F9D               	movwf	___ftdiv@sign& (0+255),b
  5036  0037C0  519D               	movf	___ftdiv@sign& (0+255),w,b
  5037  0037C2  A4D8               	btfss	status,2,c
  5038  0037C4  D007               	goto	l2750
  5039                           
  5040                           ; BSR set to: 0
  5041  0037C6  0E00               	movlw	0
  5042  0037C8  6F8F               	movwf	?___ftdiv& (0+255),b
  5043  0037CA  0E00               	movlw	0
  5044  0037CC  6F90               	movwf	(?___ftdiv+1)& (0+255),b
  5045  0037CE  0E00               	movlw	0
  5046  0037D0  6F91               	movwf	(?___ftdiv+2)& (0+255),b
  5047                           
  5048                           ; BSR set to: 0
  5049  0037D2  0012               	return	
  5050  0037D4                     l2750:
  5051                           
  5052                           ; BSR set to: 0
  5053                           
  5054                           ; BSR set to: 0
  5055  0037D4  0E00               	movlw	0
  5056  0037D6  6F99               	movwf	___ftdiv@f3& (0+255),b
  5057  0037D8  0E00               	movlw	0
  5058  0037DA  6F9A               	movwf	(___ftdiv@f3+1)& (0+255),b
  5059  0037DC  0E00               	movlw	0
  5060  0037DE  6F9B               	movwf	(___ftdiv@f3+2)& (0+255),b
  5061                           
  5062                           ; BSR set to: 0
  5063  0037E0  519D               	movf	___ftdiv@sign& (0+255),w,b
  5064  0037E2  0F89               	addlw	137
  5065  0037E4  5F9C               	subwf	___ftdiv@exp& (0+255),f,b
  5066                           
  5067                           ; BSR set to: 0
  5068  0037E6  C091  F09D         	movff	___ftdiv@f1+2,___ftdiv@sign
  5069                           
  5070                           ; BSR set to: 0
  5071  0037EA  5194               	movf	(___ftdiv@f2+2)& (0+255),w,b
  5072  0037EC  1B9D               	xorwf	___ftdiv@sign& (0+255),f,b
  5073                           
  5074                           ; BSR set to: 0
  5075  0037EE  0E80               	movlw	128
  5076  0037F0  179D               	andwf	___ftdiv@sign& (0+255),f,b
  5077                           
  5078                           ; BSR set to: 0
  5079  0037F2  8F90               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  5080                           
  5081                           ; BSR set to: 0
  5082  0037F4  0EFF               	movlw	255
  5083  0037F6  178F               	andwf	___ftdiv@f1& (0+255),f,b
  5084  0037F8  0EFF               	movlw	255
  5085  0037FA  1790               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  5086  0037FC  0E00               	movlw	0
  5087  0037FE  1791               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  5088                           
  5089                           ; BSR set to: 0
  5090  003800  8F93               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  5091                           
  5092                           ; BSR set to: 0
  5093  003802  0EFF               	movlw	255
  5094  003804  1792               	andwf	___ftdiv@f2& (0+255),f,b
  5095  003806  0EFF               	movlw	255
  5096  003808  1793               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  5097  00380A  0E00               	movlw	0
  5098  00380C  1794               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  5099                           
  5100                           ; BSR set to: 0
  5101  00380E  0E18               	movlw	24
  5102  003810  6F98               	movwf	___ftdiv@cntr& (0+255),b
  5103  003812                     
  5104                           ; BSR set to: 0
  5105                           
  5106                           ; BSR set to: 0
  5107  003812  90D8               	bcf	status,0,c
  5108  003814  3799               	rlcf	___ftdiv@f3& (0+255),f,b
  5109  003816  379A               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  5110  003818  379B               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  5111                           
  5112                           ; BSR set to: 0
  5113  00381A  5192               	movf	___ftdiv@f2& (0+255),w,b
  5114  00381C  5D8F               	subwf	___ftdiv@f1& (0+255),w,b
  5115  00381E  5193               	movf	(___ftdiv@f2+1)& (0+255),w,b
  5116  003820  5990               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  5117  003822  5194               	movf	(___ftdiv@f2+2)& (0+255),w,b
  5118  003824  5991               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  5119  003826  A0D8               	btfss	status,0,c
  5120  003828  D007               	goto	l2752
  5121                           
  5122                           ; BSR set to: 0
  5123  00382A  5192               	movf	___ftdiv@f2& (0+255),w,b
  5124  00382C  5F8F               	subwf	___ftdiv@f1& (0+255),f,b
  5125  00382E  5193               	movf	(___ftdiv@f2+1)& (0+255),w,b
  5126  003830  5B90               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  5127  003832  5194               	movf	(___ftdiv@f2+2)& (0+255),w,b
  5128  003834  5B91               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  5129                           
  5130                           ; BSR set to: 0
  5131  003836  8199               	bsf	___ftdiv@f3& (0+255),0,b
  5132  003838                     l2752:
  5133                           
  5134                           ; BSR set to: 0
  5135  003838  90D8               	bcf	status,0,c
  5136  00383A  378F               	rlcf	___ftdiv@f1& (0+255),f,b
  5137  00383C  3790               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  5138  00383E  3791               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  5139                           
  5140                           ; BSR set to: 0
  5141  003840  2F98               	decfsz	___ftdiv@cntr& (0+255),f,b
  5142  003842  D7E7               	goto	l2751
  5143                           
  5144                           ; BSR set to: 0
  5145                           
  5146                           ; BSR set to: 0
  5147  003844  C099  F060         	movff	___ftdiv@f3,___ftpack@arg
  5148  003848  C09A  F061         	movff	___ftdiv@f3+1,___ftpack@arg+1
  5149  00384C  C09B  F062         	movff	___ftdiv@f3+2,___ftpack@arg+2
  5150  003850  C09C  F063         	movff	___ftdiv@exp,___ftpack@exp
  5151  003854  C09D  F064         	movff	___ftdiv@sign,___ftpack@sign
  5152  003858  ECA5  F01E         	call	___ftpack	;wreg free
  5153  00385C  C060  F08F         	movff	?___ftpack,?___ftdiv
  5154  003860  C061  F090         	movff	?___ftpack+1,?___ftdiv+1
  5155  003864  C062  F091         	movff	?___ftpack+2,?___ftdiv+2
  5156  003868  0012               	return	
  5157  00386A                     __end_of___ftdiv:
  5158                           	opt stack 0
  5159                           tblptru	equ	0xFF8
  5160                           tblptrh	equ	0xFF7
  5161                           tblptrl	equ	0xFF6
  5162                           tablat	equ	0xFF5
  5163                           intcon	equ	0xFF2
  5164                           postinc0	equ	0xFEE
  5165                           wreg	equ	0xFE8
  5166                           postdec1	equ	0xFE5
  5167                           fsr1l	equ	0xFE1
  5168                           indf2	equ	0xFDF
  5169                           fsr2h	equ	0xFDA
  5170                           fsr2l	equ	0xFD9
  5171                           status	equ	0xFD8
  5172                           
  5173 ;; *************** function ___awtoft *****************
  5174 ;; Defined at:
  5175 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\awtoft.c"
  5176 ;; Parameters:    Size  Location     Type
  5177 ;;  c               2    8[BANK0 ] int 
  5178 ;; Auto vars:     Size  Location     Type
  5179 ;;  sign            1   11[BANK0 ] unsigned char 
  5180 ;; Return value:  Size  Location     Type
  5181 ;;                  3    8[BANK0 ] float 
  5182 ;; Registers used:
  5183 ;;		wreg, status,2, status,0, cstack
  5184 ;; Tracked objects:
  5185 ;;		On entry : 0/0
  5186 ;;		On exit  : 0/0
  5187 ;;		Unchanged: 0/0
  5188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5189 ;;      Params:         0       3       0       0       0       0       0       0       0
  5190 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5191 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5192 ;;      Totals:         0       4       0       0       0       0       0       0       0
  5193 ;;Total ram usage:        4 bytes
  5194 ;; Hardware stack levels used:    1
  5195 ;; Hardware stack levels required when called:   11
  5196 ;; This function calls:
  5197 ;;		___ftpack
  5198 ;; This function is called by:
  5199 ;;		_le_AD
  5200 ;; This function uses a non-reentrant model
  5201 ;;
  5202                           
  5203                           	psect	text9
  5204  004E38                     __ptext9:
  5205                           	opt stack 0
  5206  004E38                     ___awtoft:
  5207                           	opt stack 18
  5208                           
  5209                           ;incstack = 0
  5210  004E38  0E00               	movlw	0
  5211  004E3A  0100               	movlb	0	; () banked
  5212  004E3C  6F6B               	movwf	___awtoft@sign& (0+255),b
  5213                           
  5214                           ; BSR set to: 0
  5215  004E3E  AF69               	btfss	(___awtoft@c+1)& (0+255),7,b
  5216  004E40  D006               	goto	l2648
  5217                           
  5218                           ; BSR set to: 0
  5219  004E42  6D68               	negf	___awtoft@c& (0+255),b
  5220  004E44  1F69               	comf	(___awtoft@c+1)& (0+255),f,b
  5221  004E46  B0D8               	btfsc	status,0,c
  5222  004E48  2B69               	incf	(___awtoft@c+1)& (0+255),f,b
  5223                           
  5224                           ; BSR set to: 0
  5225  004E4A  0E01               	movlw	1
  5226  004E4C  6F6B               	movwf	___awtoft@sign& (0+255),b
  5227  004E4E                     l2648:
  5228                           
  5229                           ; BSR set to: 0
  5230                           
  5231                           ; BSR set to: 0
  5232  004E4E  C068  F060         	movff	___awtoft@c,___ftpack@arg
  5233  004E52  C069  F061         	movff	___awtoft@c+1,___ftpack@arg+1
  5234  004E56  6B62               	clrf	(___ftpack@arg+2)& (0+255),b
  5235  004E58  0E8E               	movlw	142
  5236  004E5A  6F63               	movwf	___ftpack@exp& (0+255),b
  5237  004E5C  C06B  F064         	movff	___awtoft@sign,___ftpack@sign
  5238  004E60  ECA5  F01E         	call	___ftpack	;wreg free
  5239  004E64  C060  F068         	movff	?___ftpack,?___awtoft
  5240  004E68  C061  F069         	movff	?___ftpack+1,?___awtoft+1
  5241  004E6C  C062  F06A         	movff	?___ftpack+2,?___awtoft+2
  5242  004E70  0012               	return	
  5243  004E72                     __end_of___awtoft:
  5244                           	opt stack 0
  5245                           tblptru	equ	0xFF8
  5246                           tblptrh	equ	0xFF7
  5247                           tblptrl	equ	0xFF6
  5248                           tablat	equ	0xFF5
  5249                           intcon	equ	0xFF2
  5250                           postinc0	equ	0xFEE
  5251                           wreg	equ	0xFE8
  5252                           postdec1	equ	0xFE5
  5253                           fsr1l	equ	0xFE1
  5254                           indf2	equ	0xFDF
  5255                           fsr2h	equ	0xFDA
  5256                           fsr2l	equ	0xFD9
  5257                           status	equ	0xFD8
  5258                           
  5259 ;; *************** function _delay *****************
  5260 ;; Defined at:
  5261 ;;		line 33 in file "UT.c"
  5262 ;; Parameters:    Size  Location     Type
  5263 ;;  time            4   13[BANK0 ] unsigned long 
  5264 ;; Auto vars:     Size  Location     Type
  5265 ;;  to              4   25[BANK0 ] unsigned long 
  5266 ;; Return value:  Size  Location     Type
  5267 ;;                  1    wreg      void 
  5268 ;; Registers used:
  5269 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5270 ;; Tracked objects:
  5271 ;;		On entry : 0/0
  5272 ;;		On exit  : 0/0
  5273 ;;		Unchanged: 0/0
  5274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5275 ;;      Params:         0       4       0       0       0       0       0       0       0
  5276 ;;      Locals:         0       4       0       0       0       0       0       0       0
  5277 ;;      Temps:          0       8       0       0       0       0       0       0       0
  5278 ;;      Totals:         0      16       0       0       0       0       0       0       0
  5279 ;;Total ram usage:       16 bytes
  5280 ;; Hardware stack levels used:    1
  5281 ;; Hardware stack levels required when called:   13
  5282 ;; This function calls:
  5283 ;;		_millis
  5284 ;;		_verificaUSB
  5285 ;; This function is called by:
  5286 ;;		_main
  5287 ;; This function uses a non-reentrant model
  5288 ;;
  5289                           
  5290                           	psect	text10
  5291  0046CC                     __ptext10:
  5292                           	opt stack 0
  5293  0046CC                     _delay:
  5294                           	opt stack 17
  5295                           
  5296                           ;UT.c: 35: uint32_t to=millis();
  5297                           
  5298                           ;incstack = 0
  5299  0046CC  EC54  F028         	call	_millis	;wreg free
  5300  0046D0  C060  F079         	movff	?_millis,delay@to
  5301  0046D4  C061  F07A         	movff	?_millis+1,delay@to+1
  5302  0046D8  C062  F07B         	movff	?_millis+2,delay@to+2
  5303  0046DC  C063  F07C         	movff	?_millis+3,delay@to+3
  5304                           
  5305                           ;UT.c: 36: while ((millis()-to)<time)
  5306  0046E0  D002               	goto	l963
  5307  0046E2                     
  5308                           ;UT.c: 37: {
  5309                           ;UT.c: 38: verificaUSB();
  5310  0046E2  ECA6  F027         	call	_verificaUSB	;wreg free
  5311  0046E6                     l963:
  5312  0046E6  C079  F071         	movff	delay@to,??_delay
  5313  0046EA  C07A  F072         	movff	delay@to+1,??_delay+1
  5314  0046EE  C07B  F073         	movff	delay@to+2,??_delay+2
  5315  0046F2  C07C  F074         	movff	delay@to+3,??_delay+3
  5316  0046F6  0100               	movlb	0	; () banked
  5317  0046F8  1F71               	comf	??_delay& (0+255),f,b
  5318  0046FA  1F72               	comf	(??_delay+1)& (0+255),f,b
  5319  0046FC  1F73               	comf	(??_delay+2)& (0+255),f,b
  5320  0046FE  1F74               	comf	(??_delay+3)& (0+255),f,b
  5321  004700  2B71               	incf	??_delay& (0+255),f,b
  5322  004702  0E00               	movlw	0
  5323  004704  2372               	addwfc	(??_delay+1)& (0+255),f,b
  5324  004706  2373               	addwfc	(??_delay+2)& (0+255),f,b
  5325  004708  2374               	addwfc	(??_delay+3)& (0+255),f,b
  5326  00470A  EC54  F028         	call	_millis	;wreg free
  5327  00470E  0100               	movlb	0	; () banked
  5328  004710  5171               	movf	??_delay& (0+255),w,b
  5329  004712  2560               	addwf	?_millis& (0+255),w,b
  5330  004714  6F75               	movwf	(??_delay+4)& (0+255),b
  5331  004716  5172               	movf	(??_delay+1)& (0+255),w,b
  5332  004718  2161               	addwfc	(?_millis+1)& (0+255),w,b
  5333  00471A  6F76               	movwf	(??_delay+5)& (0+255),b
  5334  00471C  5173               	movf	(??_delay+2)& (0+255),w,b
  5335  00471E  2162               	addwfc	(?_millis+2)& (0+255),w,b
  5336  004720  6F77               	movwf	(??_delay+6)& (0+255),b
  5337  004722  5174               	movf	(??_delay+3)& (0+255),w,b
  5338  004724  2163               	addwfc	(?_millis+3)& (0+255),w,b
  5339  004726  6F78               	movwf	(??_delay+7)& (0+255),b
  5340  004728  516D               	movf	delay@time& (0+255),w,b
  5341  00472A  5D75               	subwf	(??_delay+4)& (0+255),w,b
  5342  00472C  516E               	movf	(delay@time+1)& (0+255),w,b
  5343  00472E  5976               	subwfb	(??_delay+5)& (0+255),w,b
  5344  004730  516F               	movf	(delay@time+2)& (0+255),w,b
  5345  004732  5977               	subwfb	(??_delay+6)& (0+255),w,b
  5346  004734  5170               	movf	(delay@time+3)& (0+255),w,b
  5347  004736  5978               	subwfb	(??_delay+7)& (0+255),w,b
  5348  004738  B0D8               	btfsc	status,0,c
  5349  00473A  0012               	return	
  5350  00473C  D7D2               	goto	l964
  5351  00473E                     __end_of_delay:
  5352                           	opt stack 0
  5353                           tblptru	equ	0xFF8
  5354                           tblptrh	equ	0xFF7
  5355                           tblptrl	equ	0xFF6
  5356                           tablat	equ	0xFF5
  5357                           intcon	equ	0xFF2
  5358                           postinc0	equ	0xFEE
  5359                           wreg	equ	0xFE8
  5360                           postdec1	equ	0xFE5
  5361                           fsr1l	equ	0xFE1
  5362                           indf2	equ	0xFDF
  5363                           fsr2h	equ	0xFDA
  5364                           fsr2l	equ	0xFD9
  5365                           status	equ	0xFD8
  5366                           
  5367 ;; *************** function _verificaUSB *****************
  5368 ;; Defined at:
  5369 ;;		line 13 in file "UT.c"
  5370 ;; Parameters:    Size  Location     Type
  5371 ;;		None
  5372 ;; Auto vars:     Size  Location     Type
  5373 ;;		None
  5374 ;; Return value:  Size  Location     Type
  5375 ;;                  1    wreg      unsigned char 
  5376 ;; Registers used:
  5377 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5378 ;; Tracked objects:
  5379 ;;		On entry : 0/0
  5380 ;;		On exit  : 0/0
  5381 ;;		Unchanged: 0/0
  5382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5383 ;;      Params:         0       0       0       0       0       0       0       0       0
  5384 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5385 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5386 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5387 ;;Total ram usage:        0 bytes
  5388 ;; Hardware stack levels used:    1
  5389 ;; Hardware stack levels required when called:   12
  5390 ;; This function calls:
  5391 ;;		_CDCTxService
  5392 ;;		_USBDeviceAttach
  5393 ;;		_USBDeviceDetach
  5394 ;; This function is called by:
  5395 ;;		_delay
  5396 ;;		_main
  5397 ;; This function uses a non-reentrant model
  5398 ;;
  5399                           
  5400                           	psect	text11
  5401  004F4C                     __ptext11:
  5402                           	opt stack 0
  5403  004F4C                     _verificaUSB:
  5404                           	opt stack 18
  5405                           
  5406                           ;UT.c: 15: if ((USBDeviceState == DETACHED_STATE) && (PORTCbits.RC2 == 1))
  5407                           
  5408                           ; BSR set to: 0
  5409                           ;incstack = 0
  5410  004F4C  5058               	movf	_USBDeviceState,w,c	;volatile
  5411  004F4E  B4D8               	btfsc	status,2,c
  5412  004F50  A482               	btfss	3970,2,c	;volatile
  5413  004F52  D003               	goto	l954
  5414                           
  5415                           ;UT.c: 16: {
  5416                           ;UT.c: 17: USBDeviceAttach();
  5417  004F54  EC8C  F027         	call	_USBDeviceAttach	;wreg free
  5418                           
  5419                           ;UT.c: 18: }
  5420  004F58  D006               	goto	l956
  5421  004F5A                     l954:
  5422                           
  5423                           ;UT.c: 19: else if ((USBDeviceState == ATTACHED_STATE) && (PORTCbits.RC2 != 1))
  5424  004F5A  0458               	decf	_USBDeviceState,w,c	;volatile
  5425  004F5C  B4D8               	btfsc	status,2,c
  5426  004F5E  B482               	btfsc	3970,2,c	;volatile
  5427  004F60  D002               	goto	l956
  5428                           
  5429                           ;UT.c: 20: {
  5430                           ;UT.c: 21: USBDeviceDetach();
  5431  004F62  ECC8  F028         	call	_USBDeviceDetach	;wreg free
  5432  004F66                     l956:
  5433                           
  5434                           ;UT.c: 22: }
  5435                           ;UT.c: 24: if ((USBDeviceState < CONFIGURED_STATE) || (UCONbits.SUSPND))
  5436  004F66  0E1F               	movlw	31
  5437  004F68  6458               	cpfsgt	_USBDeviceState,c	;volatile
  5438  004F6A  D002               	goto	u7610
  5439  004F6C  A26D               	btfss	3949,1,c	;volatile
  5440  004F6E  D002               	goto	l957
  5441  004F70                     u7610:
  5442                           
  5443                           ;UT.c: 25: {
  5444                           ;UT.c: 26: return 0;
  5445  004F70  0E00               	movlw	0
  5446  004F72  0012               	return	
  5447  004F74                     l957:
  5448                           
  5449                           ;UT.c: 27: }
  5450                           ;UT.c: 29: CDCTxService();
  5451  004F74  EC89  F016         	call	_CDCTxService	;wreg free
  5452                           
  5453                           ;UT.c: 30: return 1;
  5454  004F78  0E01               	movlw	1
  5455  004F7A  0012               	return	
  5456  004F7C                     __end_of_verificaUSB:
  5457                           	opt stack 0
  5458                           tblptru	equ	0xFF8
  5459                           tblptrh	equ	0xFF7
  5460                           tblptrl	equ	0xFF6
  5461                           tablat	equ	0xFF5
  5462                           intcon	equ	0xFF2
  5463                           postinc0	equ	0xFEE
  5464                           wreg	equ	0xFE8
  5465                           postdec1	equ	0xFE5
  5466                           fsr1l	equ	0xFE1
  5467                           indf2	equ	0xFDF
  5468                           fsr2h	equ	0xFDA
  5469                           fsr2l	equ	0xFD9
  5470                           status	equ	0xFD8
  5471                           
  5472 ;; *************** function _USBDeviceDetach *****************
  5473 ;; Defined at:
  5474 ;;		line 1247 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
  5475 ;; Parameters:    Size  Location     Type
  5476 ;;		None
  5477 ;; Auto vars:     Size  Location     Type
  5478 ;;		None
  5479 ;; Return value:  Size  Location     Type
  5480 ;;                  1    wreg      void 
  5481 ;; Registers used:
  5482 ;;		wreg, status,2
  5483 ;; Tracked objects:
  5484 ;;		On entry : 0/0
  5485 ;;		On exit  : 0/0
  5486 ;;		Unchanged: 0/0
  5487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5488 ;;      Params:         0       0       0       0       0       0       0       0       0
  5489 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5490 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5491 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5492 ;;Total ram usage:        0 bytes
  5493 ;; Hardware stack levels used:    1
  5494 ;; Hardware stack levels required when called:   10
  5495 ;; This function calls:
  5496 ;;		Nothing
  5497 ;; This function is called by:
  5498 ;;		_verificaUSB
  5499 ;; This function uses a non-reentrant model
  5500 ;;
  5501                           
  5502                           	psect	text12
  5503  005190                     __ptext12:
  5504                           	opt stack 0
  5505  005190                     _USBDeviceDetach:
  5506                           	opt stack 19
  5507                           
  5508                           ;usb_device.c: 1255: {
  5509                           ;usb_device.c: 1257: UCON = 0;
  5510                           
  5511                           ;incstack = 0
  5512  005190  0E00               	movlw	0
  5513  005192  6E6D               	movwf	3949,c	;volatile
  5514                           
  5515                           ;usb_device.c: 1260: UIE = 0;
  5516  005194  0E00               	movlw	0
  5517  005196  6E69               	movwf	3945,c	;volatile
  5518                           
  5519                           ;usb_device.c: 1263: USBDeviceState = DETACHED_STATE;
  5520  005198  0E00               	movlw	0
  5521  00519A  6E58               	movwf	_USBDeviceState,c	;volatile
  5522  00519C  0012               	return	
  5523  00519E                     __end_of_USBDeviceDetach:
  5524                           	opt stack 0
  5525                           tblptru	equ	0xFF8
  5526                           tblptrh	equ	0xFF7
  5527                           tblptrl	equ	0xFF6
  5528                           tablat	equ	0xFF5
  5529                           intcon	equ	0xFF2
  5530                           postinc0	equ	0xFEE
  5531                           wreg	equ	0xFE8
  5532                           postdec1	equ	0xFE5
  5533                           fsr1l	equ	0xFE1
  5534                           indf2	equ	0xFDF
  5535                           fsr2h	equ	0xFDA
  5536                           fsr2l	equ	0xFD9
  5537                           status	equ	0xFD8
  5538                           
  5539 ;; *************** function _USBDeviceAttach *****************
  5540 ;; Defined at:
  5541 ;;		line 1352 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
  5542 ;; Parameters:    Size  Location     Type
  5543 ;;		None
  5544 ;; Auto vars:     Size  Location     Type
  5545 ;;		None
  5546 ;; Return value:  Size  Location     Type
  5547 ;;                  1    wreg      void 
  5548 ;; Registers used:
  5549 ;;		wreg, status,2
  5550 ;; Tracked objects:
  5551 ;;		On entry : 0/0
  5552 ;;		On exit  : 0/0
  5553 ;;		Unchanged: 0/0
  5554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5555 ;;      Params:         0       0       0       0       0       0       0       0       0
  5556 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5557 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5558 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5559 ;;Total ram usage:        0 bytes
  5560 ;; Hardware stack levels used:    1
  5561 ;; Hardware stack levels required when called:   10
  5562 ;; This function calls:
  5563 ;;		Nothing
  5564 ;; This function is called by:
  5565 ;;		_verificaUSB
  5566 ;; This function uses a non-reentrant model
  5567 ;;
  5568                           
  5569                           	psect	text13
  5570  004F18                     __ptext13:
  5571                           	opt stack 0
  5572  004F18                     _USBDeviceAttach:
  5573                           	opt stack 19
  5574                           
  5575                           ;usb_device.c: 1355: if(USBDeviceState == DETACHED_STATE)
  5576                           
  5577                           ;incstack = 0
  5578  004F18  5058               	movf	_USBDeviceState,w,c	;volatile
  5579  004F1A  A4D8               	btfss	status,2,c
  5580  004F1C  0012               	return	
  5581                           
  5582                           ;usb_device.c: 1356: {
  5583                           ;usb_device.c: 1357: if(PORTCbits.RC2 == 1)
  5584  004F1E  A482               	btfss	3970,2,c	;volatile
  5585  004F20  0012               	return	
  5586                           
  5587                           ;usb_device.c: 1358: {
  5588                           ;usb_device.c: 1360: UCON = 0;
  5589  004F22  0E00               	movlw	0
  5590  004F24  6E6D               	movwf	3949,c	;volatile
  5591                           
  5592                           ;usb_device.c: 1363: UIE = 0;
  5593  004F26  0E00               	movlw	0
  5594  004F28  6E69               	movwf	3945,c	;volatile
  5595                           
  5596                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
  5597  004F2A  0E16               	movlw	22
  5598  004F2C  6E6F               	movwf	3951,c	;volatile
  5599  004F2E  0E9F               	movlw	159
  5600  004F30  6E6B               	movwf	3947,c	;volatile
  5601  004F32  0E7B               	movlw	123
  5602  004F34  6E69               	movwf	3945,c	;volatile
  5603                           
  5604                           ;usb_device.c: 1369: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
  5605  004F36  8ED0               	bsf	4048,7,c	;volatile
  5606  004F38  8AA2               	bsf	4002,5,c	;volatile
  5607  004F3A  8AA0               	bsf	4000,5,c	;volatile
  5608  004F3C  8EF2               	bsf	intcon,7,c	;volatile
  5609                           
  5610                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  5611  004F3E  D001               	goto	l419
  5612  004F40                     l420:
  5613  004F40  866D               	bsf	3949,3,c	;volatile
  5614  004F42                     l419:
  5615  004F42  A66D               	btfss	3949,3,c	;volatile
  5616  004F44  D7FD               	goto	l420
  5617                           
  5618                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
  5619  004F46  0E01               	movlw	1
  5620  004F48  6E58               	movwf	_USBDeviceState,c	;volatile
  5621  004F4A  0012               	return	
  5622  004F4C                     __end_of_USBDeviceAttach:
  5623                           	opt stack 0
  5624                           tblptru	equ	0xFF8
  5625                           tblptrh	equ	0xFF7
  5626                           tblptrl	equ	0xFF6
  5627                           tablat	equ	0xFF5
  5628                           intcon	equ	0xFF2
  5629                           postinc0	equ	0xFEE
  5630                           wreg	equ	0xFE8
  5631                           postdec1	equ	0xFE5
  5632                           fsr1l	equ	0xFE1
  5633                           indf2	equ	0xFDF
  5634                           fsr2h	equ	0xFDA
  5635                           fsr2l	equ	0xFD9
  5636                           status	equ	0xFD8
  5637                           
  5638 ;; *************** function _CDCTxService *****************
  5639 ;; Defined at:
  5640 ;;		line 836 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device_cdc.c"
  5641 ;; Parameters:    Size  Location     Type
  5642 ;;		None
  5643 ;; Auto vars:     Size  Location     Type
  5644 ;;  byte_to_send    1   12[BANK0 ] unsigned char 
  5645 ;;  i               1   11[BANK0 ] unsigned char 
  5646 ;; Return value:  Size  Location     Type
  5647 ;;                  1    wreg      void 
  5648 ;; Registers used:
  5649 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5650 ;; Tracked objects:
  5651 ;;		On entry : 0/0
  5652 ;;		On exit  : 0/0
  5653 ;;		Unchanged: 0/0
  5654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5655 ;;      Params:         0       0       0       0       0       0       0       0       0
  5656 ;;      Locals:         0       2       0       0       0       0       0       0       0
  5657 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5658 ;;      Totals:         0       2       0       0       0       0       0       0       0
  5659 ;;Total ram usage:        2 bytes
  5660 ;; Hardware stack levels used:    1
  5661 ;; Hardware stack levels required when called:   11
  5662 ;; This function calls:
  5663 ;;		_USBTransferOnePacket
  5664 ;; This function is called by:
  5665 ;;		_verificaUSB
  5666 ;; This function uses a non-reentrant model
  5667 ;;
  5668                           
  5669                           	psect	text14
  5670  002D12                     __ptext14:
  5671                           	opt stack 0
  5672  002D12                     _CDCTxService:
  5673                           	opt stack 18
  5674                           
  5675                           ;usb_device_cdc.c: 838: uint8_t byte_to_send;
  5676                           ;usb_device_cdc.c: 839: uint8_t i;
  5677                           ;usb_device_cdc.c: 841: {PIE2bits.USBIE = 0;};
  5678                           
  5679                           ;incstack = 0
  5680  002D12  9AA0               	bcf	4000,5,c	;volatile
  5681                           
  5682                           ;usb_device_cdc.c: 843: {};
  5683                           ;usb_device_cdc.c: 845: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
  5684  002D14  0102               	movlb	2	; () banked
  5685  002D16  51DE               	movf	_CDCDataInHandle& (0+255),w,b
  5686  002D18  11DF               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
  5687  002D1A  B4D8               	btfsc	status,2,c
  5688  002D1C  D008               	goto	l792
  5689                           
  5690                           ; BSR set to: 2
  5691  002D1E  C2DE  FFD9         	movff	_CDCDataInHandle,fsr2l
  5692  002D22  C2DF  FFDA         	movff	_CDCDataInHandle+1,fsr2h
  5693  002D26  AEDF               	btfss	indf2,7,c
  5694  002D28  D002               	goto	l792
  5695                           
  5696                           ; BSR set to: 2
  5697                           ;usb_device_cdc.c: 846: {
  5698                           ;usb_device_cdc.c: 847: {PIE2bits.USBIE = 1;};
  5699  002D2A  8AA0               	bsf	4000,5,c	;volatile
  5700                           
  5701                           ;usb_device_cdc.c: 848: return;
  5702  002D2C  0012               	return	
  5703  002D2E                     l792:
  5704                           
  5705                           ; BSR set to: 2
  5706                           ;usb_device_cdc.c: 849: }
  5707                           ;usb_device_cdc.c: 856: if(cdc_trf_state == 3)
  5708                           
  5709                           ; BSR set to: 2
  5710  002D2E  0E03               	movlw	3
  5711  002D30  19F0               	xorwf	_cdc_trf_state& (0+255),w,b
  5712  002D32  A4D8               	btfss	status,2,c
  5713  002D34  D002               	goto	l794
  5714                           
  5715                           ; BSR set to: 2
  5716                           ;usb_device_cdc.c: 857: cdc_trf_state = 0;
  5717  002D36  0E00               	movlw	0
  5718  002D38  6FF0               	movwf	_cdc_trf_state& (0+255),b
  5719  002D3A                     l794:
  5720                           
  5721                           ; BSR set to: 2
  5722                           ;usb_device_cdc.c: 862: if(cdc_trf_state == 0)
  5723  002D3A  51F0               	movf	_cdc_trf_state& (0+255),w,b
  5724  002D3C  A4D8               	btfss	status,2,c
  5725  002D3E  D002               	goto	l795
  5726                           
  5727                           ; BSR set to: 2
  5728                           ;usb_device_cdc.c: 863: {
  5729                           ;usb_device_cdc.c: 864: {PIE2bits.USBIE = 1;};
  5730  002D40  8AA0               	bsf	4000,5,c	;volatile
  5731                           
  5732                           ;usb_device_cdc.c: 865: return;
  5733  002D42  0012               	return	
  5734  002D44                     l795:
  5735                           
  5736                           ; BSR set to: 2
  5737                           ;usb_device_cdc.c: 866: }
  5738                           ;usb_device_cdc.c: 871: if(cdc_trf_state == 2)
  5739                           
  5740                           ; BSR set to: 2
  5741  002D44  0E02               	movlw	2
  5742  002D46  19F0               	xorwf	_cdc_trf_state& (0+255),w,b
  5743  002D48  A4D8               	btfss	status,2,c
  5744  002D4A  D014               	goto	l796
  5745                           
  5746                           ; BSR set to: 2
  5747                           ;usb_device_cdc.c: 872: {
  5748                           ;usb_device_cdc.c: 873: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
  5749  002D4C  0E01               	movlw	1
  5750  002D4E  0100               	movlb	0	; () banked
  5751  002D50  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
  5752  002D52  0E00               	movlw	0
  5753  002D54  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
  5754  002D56  0E00               	movlw	0
  5755  002D58  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  5756  002D5A  0E00               	movlw	0
  5757  002D5C  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
  5758  002D5E  0E02               	movlw	2
  5759  002D60  ECC7  F018         	call	_USBTransferOnePacket
  5760  002D64  C060  F2DE         	movff	?_USBTransferOnePacket,_CDCDataInHandle
  5761  002D68  C061  F2DF         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
  5762                           
  5763                           ;usb_device_cdc.c: 875: cdc_trf_state = 3;
  5764  002D6C  0E03               	movlw	3
  5765  002D6E  0102               	movlb	2	; () banked
  5766  002D70  6FF0               	movwf	_cdc_trf_state& (0+255),b
  5767                           
  5768                           ;usb_device_cdc.c: 876: }
  5769  002D72  D063               	goto	l798
  5770  002D74                     l796:
  5771                           
  5772                           ; BSR set to: 2
  5773                           ;usb_device_cdc.c: 877: else if(cdc_trf_state == 1)
  5774                           
  5775                           ; BSR set to: 2
  5776  002D74  05F0               	decf	_cdc_trf_state& (0+255),w,b
  5777  002D76  A4D8               	btfss	status,2,c
  5778  002D78  D060               	goto	l798
  5779                           
  5780                           ; BSR set to: 2
  5781                           ;usb_device_cdc.c: 878: {
  5782                           ;usb_device_cdc.c: 882: if(cdc_tx_len > sizeof(cdc_data_tx))
  5783  002D7A  0E40               	movlw	64
  5784  002D7C  6452               	cpfsgt	_cdc_tx_len,c
  5785  002D7E  D004               	goto	l799
  5786                           
  5787                           ; BSR set to: 2
  5788                           ;usb_device_cdc.c: 883: byte_to_send = sizeof(cdc_data_tx);
  5789  002D80  0E40               	movlw	64
  5790  002D82  0100               	movlb	0	; () banked
  5791  002D84  6F6C               	movwf	CDCTxService@byte_to_send& (0+255),b
  5792  002D86  D002               	goto	l800
  5793  002D88                     l799:
  5794                           
  5795                           ; BSR set to: 2
  5796                           ;usb_device_cdc.c: 884: else
  5797                           ;usb_device_cdc.c: 885: byte_to_send = cdc_tx_len;
  5798  002D88  C052  F06C         	movff	_cdc_tx_len,CDCTxService@byte_to_send
  5799  002D8C                     l800:
  5800                           
  5801                           ;usb_device_cdc.c: 890: cdc_tx_len = cdc_tx_len - byte_to_send;
  5802                           
  5803                           ; BSR set to: 2
  5804  002D8C  0100               	movlb	0	; () banked
  5805  002D8E  516C               	movf	CDCTxService@byte_to_send& (0+255),w,b
  5806  002D90  0800               	sublw	0
  5807  002D92  2452               	addwf	_cdc_tx_len,w,c
  5808  002D94  6E52               	movwf	_cdc_tx_len,c
  5809                           
  5810                           ;usb_device_cdc.c: 892: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
  5811  002D96  0E00               	movlw	0
  5812  002D98  0102               	movlb	2	; () banked
  5813  002D9A  6FD2               	movwf	_pCDCDst& (0+255),b
  5814  002D9C  0E05               	movlw	5
  5815  002D9E  6FD3               	movwf	(_pCDCDst+1)& (0+255),b
  5816                           
  5817                           ; BSR set to: 2
  5818                           ;usb_device_cdc.c: 894: i = byte_to_send;
  5819  002DA0  C06C  F06B         	movff	CDCTxService@byte_to_send,CDCTxService@i
  5820                           
  5821                           ; BSR set to: 2
  5822                           ;usb_device_cdc.c: 895: if(cdc_mem_type == 0x00)
  5823  002DA4  51EF               	movf	_cdc_mem_type& (0+255),w,b
  5824  002DA6  B4D8               	btfsc	status,2,c
  5825  002DA8  D012               	goto	l802
  5826  002DAA  D027               	goto	l806
  5827  002DAC                     
  5828                           ;usb_device_cdc.c: 898: {
  5829                           ;usb_device_cdc.c: 899: *pCDCDst.bRam = *pCDCSrc.bRom;
  5830                           
  5831                           ; BSR set to: 2
  5832  002DAC  C2D5  FFD9         	movff	_pCDCSrc,fsr2l
  5833  002DB0  C2D6  FFDA         	movff	_pCDCSrc+1,fsr2h
  5834  002DB4  C2D2  FFE1         	movff	_pCDCDst,fsr1l
  5835  002DB8  C2D3  FFE2         	movff	_pCDCDst+1,fsr1h
  5836  002DBC  CFDF FFE7          	movff	indf2,indf1
  5837                           
  5838                           ;usb_device_cdc.c: 900: pCDCDst.bRam++;
  5839  002DC0  0102               	movlb	2	; () banked
  5840  002DC2  4BD2               	infsnz	_pCDCDst& (0+255),f,b
  5841  002DC4  2BD3               	incf	(_pCDCDst+1)& (0+255),f,b
  5842                           
  5843                           ; BSR set to: 2
  5844                           ;usb_device_cdc.c: 901: pCDCSrc.bRom++;
  5845  002DC6  4BD5               	infsnz	_pCDCSrc& (0+255),f,b
  5846  002DC8  2BD6               	incf	(_pCDCSrc+1)& (0+255),f,b
  5847                           
  5848                           ; BSR set to: 2
  5849                           ;usb_device_cdc.c: 902: i--;
  5850  002DCA  0100               	movlb	0	; () banked
  5851  002DCC  076B               	decf	CDCTxService@i& (0+255),f,b
  5852  002DCE                     l802:
  5853                           
  5854                           ; BSR set to: 0
  5855  002DCE  0100               	movlb	0	; () banked
  5856  002DD0  516B               	movf	CDCTxService@i& (0+255),w,b
  5857  002DD2  B4D8               	btfsc	status,2,c
  5858  002DD4  D016               	goto	u6920
  5859  002DD6  D7EA               	goto	l803
  5860  002DD8                     
  5861                           ; BSR set to: 0
  5862                           ;usb_device_cdc.c: 908: {
  5863                           ;usb_device_cdc.c: 909: *pCDCDst.bRam = *pCDCSrc.bRam;
  5864                           
  5865                           ; BSR set to: 0
  5866  002DD8  C2D5  FFD9         	movff	_pCDCSrc,fsr2l
  5867  002DDC  C2D6  FFDA         	movff	_pCDCSrc+1,fsr2h
  5868  002DE0  C2D2  FFE1         	movff	_pCDCDst,fsr1l
  5869  002DE4  C2D3  FFE2         	movff	_pCDCDst+1,fsr1h
  5870  002DE8  CFDF FFE7          	movff	indf2,indf1
  5871                           
  5872                           ; BSR set to: 0
  5873                           ;usb_device_cdc.c: 910: pCDCDst.bRam++;
  5874  002DEC  0102               	movlb	2	; () banked
  5875  002DEE  4BD2               	infsnz	_pCDCDst& (0+255),f,b
  5876  002DF0  2BD3               	incf	(_pCDCDst+1)& (0+255),f,b
  5877                           
  5878                           ; BSR set to: 2
  5879                           ;usb_device_cdc.c: 911: pCDCSrc.bRam++;
  5880  002DF2  4BD5               	infsnz	_pCDCSrc& (0+255),f,b
  5881  002DF4  2BD6               	incf	(_pCDCSrc+1)& (0+255),f,b
  5882                           
  5883                           ; BSR set to: 2
  5884                           ;usb_device_cdc.c: 912: i--;
  5885  002DF6  0100               	movlb	0	; () banked
  5886  002DF8  076B               	decf	CDCTxService@i& (0+255),f,b
  5887  002DFA                     l806:
  5888                           
  5889                           ; BSR set to: 0
  5890  002DFA  0100               	movlb	0	; () banked
  5891  002DFC  516B               	movf	CDCTxService@i& (0+255),w,b
  5892  002DFE  A4D8               	btfss	status,2,c
  5893  002E00  D7EB               	goto	l807
  5894  002E02                     u6920:
  5895                           
  5896                           ; BSR set to: 0
  5897                           ;usb_device_cdc.c: 913: }
  5898                           ;usb_device_cdc.c: 914: }
  5899                           ;usb_device_cdc.c: 920: if(cdc_tx_len == 0)
  5900                           
  5901                           ; BSR set to: 0
  5902                           
  5903                           ; BSR set to: 0
  5904  002E02  5052               	movf	_cdc_tx_len,w,c
  5905  002E04  A4D8               	btfss	status,2,c
  5906  002E06  D009               	goto	l811
  5907                           
  5908                           ; BSR set to: 0
  5909                           ;usb_device_cdc.c: 921: {
  5910                           ;usb_device_cdc.c: 922: if(byte_to_send == 64)
  5911  002E08  0E40               	movlw	64
  5912  002E0A  196C               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
  5913  002E0C  A4D8               	btfss	status,2,c
  5914  002E0E  D002               	goto	l810
  5915                           
  5916                           ; BSR set to: 0
  5917                           ;usb_device_cdc.c: 923: cdc_trf_state = 2;
  5918  002E10  0E02               	movlw	2
  5919  002E12  D001               	goto	L1
  5920  002E14                     l810:
  5921                           
  5922                           ;usb_device_cdc.c: 924: else
  5923                           ;usb_device_cdc.c: 925: cdc_trf_state = 3;
  5924                           
  5925                           ; BSR set to: 2
  5926  002E14  0E03               	movlw	3
  5927  002E16                     L1:
  5928  002E16  0102               	movlb	2	; () banked
  5929  002E18  6FF0               	movwf	_cdc_trf_state& (0+255),b
  5930  002E1A                     l811:
  5931                           
  5932                           ;usb_device_cdc.c: 926: }
  5933                           ;usb_device_cdc.c: 927: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
  5934                           
  5935                           ; BSR set to: 2
  5936                           
  5937                           ; BSR set to: 2
  5938  002E1A  0E01               	movlw	1
  5939  002E1C  0100               	movlb	0	; () banked
  5940  002E1E  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
  5941  002E20  0E00               	movlw	0
  5942  002E22  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
  5943  002E24  0E05               	movlw	5
  5944  002E26  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  5945  002E28  C06C  F063         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
  5946  002E2C  0E02               	movlw	2
  5947  002E2E  ECC7  F018         	call	_USBTransferOnePacket
  5948  002E32  C060  F2DE         	movff	?_USBTransferOnePacket,_CDCDataInHandle
  5949  002E36  C061  F2DF         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
  5950  002E3A                     l798:
  5951                           
  5952                           ;usb_device_cdc.c: 929: }
  5953                           ;usb_device_cdc.c: 931: {PIE2bits.USBIE = 1;};
  5954  002E3A  8AA0               	bsf	4000,5,c	;volatile
  5955  002E3C  0012               	return		;funcret
  5956  002E3E                     __end_of_CDCTxService:
  5957                           	opt stack 0
  5958                           tblptru	equ	0xFF8
  5959                           tblptrh	equ	0xFF7
  5960                           tblptrl	equ	0xFF6
  5961                           tablat	equ	0xFF5
  5962                           intcon	equ	0xFF2
  5963                           postinc0	equ	0xFEE
  5964                           wreg	equ	0xFE8
  5965                           indf1	equ	0xFE7
  5966                           postdec1	equ	0xFE5
  5967                           fsr1h	equ	0xFE2
  5968                           fsr1l	equ	0xFE1
  5969                           indf2	equ	0xFDF
  5970                           fsr2h	equ	0xFDA
  5971                           fsr2l	equ	0xFD9
  5972                           status	equ	0xFD8
  5973                           
  5974 ;; *************** function _USBTransferOnePacket *****************
  5975 ;; Defined at:
  5976 ;;		line 995 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
  5977 ;; Parameters:    Size  Location     Type
  5978 ;;  ep              1    wreg     unsigned char 
  5979 ;;  dir             1    0[BANK0 ] unsigned char 
  5980 ;;  data            2    1[BANK0 ] PTR unsigned char 
  5981 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
  5982 ;;  len             1    3[BANK0 ] unsigned char 
  5983 ;; Auto vars:     Size  Location     Type
  5984 ;;  ep              1    8[BANK0 ] unsigned char 
  5985 ;;  handle          2    9[BANK0 ] PTR volatile struct __BD
  5986 ;;		 -> RAM(2047), NULL(0), BDT(48), 
  5987 ;; Return value:  Size  Location     Type
  5988 ;;                  2    0[BANK0 ] PTR void 
  5989 ;; Registers used:
  5990 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5991 ;; Tracked objects:
  5992 ;;		On entry : 0/0
  5993 ;;		On exit  : 0/0
  5994 ;;		Unchanged: 0/0
  5995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5996 ;;      Params:         0       4       0       0       0       0       0       0       0
  5997 ;;      Locals:         0       3       0       0       0       0       0       0       0
  5998 ;;      Temps:          0       4       0       0       0       0       0       0       0
  5999 ;;      Totals:         0      11       0       0       0       0       0       0       0
  6000 ;;Total ram usage:       11 bytes
  6001 ;; Hardware stack levels used:    1
  6002 ;; Hardware stack levels required when called:   10
  6003 ;; This function calls:
  6004 ;;		Nothing
  6005 ;; This function is called by:
  6006 ;;		_CDCTxService
  6007 ;;		_USBCDCEventHandler
  6008 ;;		_getsUSBUSART
  6009 ;; This function uses a non-reentrant model
  6010 ;;
  6011                           
  6012                           	psect	text15
  6013  00318E                     __ptext15:
  6014                           	opt stack 0
  6015  00318E                     _USBTransferOnePacket:
  6016                           	opt stack 18
  6017                           
  6018                           ;incstack = 0
  6019                           ;USBTransferOnePacket@ep stored from wreg
  6020  00318E  0100               	movlb	0	; () banked
  6021  003190  6F68               	movwf	USBTransferOnePacket@ep& (0+255),b
  6022                           
  6023                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
  6024                           ;usb_device.c: 1000: if(dir != 0)
  6025  003192  0100               	movlb	0	; () banked
  6026  003194  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
  6027  003196  B4D8               	btfsc	status,2,c
  6028  003198  D007               	goto	l397
  6029                           
  6030                           ; BSR set to: 0
  6031                           ;usb_device.c: 1001: {
  6032                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
  6033  00319A  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
  6034  00319C  0D02               	mullw	2
  6035  00319E  0E46               	movlw	low _pBDTEntryIn
  6036  0031A0  24F3               	addwf	prodl,w,c
  6037  0031A2  6ED9               	movwf	fsr2l,c
  6038  0031A4  0E00               	movlw	high _pBDTEntryIn
  6039  0031A6  D006               	goto	L2
  6040  0031A8                     l397:
  6041                           
  6042                           ; BSR set to: 0
  6043                           ;usb_device.c: 1005: else
  6044                           ;usb_device.c: 1006: {
  6045                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
  6046                           
  6047                           ; BSR set to: 0
  6048  0031A8  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
  6049  0031AA  0D02               	mullw	2
  6050  0031AC  0EC4               	movlw	low _pBDTEntryOut
  6051  0031AE  24F3               	addwf	prodl,w,c
  6052  0031B0  6ED9               	movwf	fsr2l,c
  6053  0031B2  0E02               	movlw	high _pBDTEntryOut
  6054  0031B4                     L2:
  6055  0031B4  20F4               	addwfc	prodh,w,c
  6056  0031B6  6EDA               	movwf	fsr2h,c
  6057  0031B8  CFDE F069          	movff	postinc2,USBTransferOnePacket@handle
  6058  0031BC  CFDD F06A          	movff	postdec2,USBTransferOnePacket@handle+1
  6059                           
  6060                           ; BSR set to: 0
  6061                           ;usb_device.c: 1009: }
  6062                           ;usb_device.c: 1013: if(handle == 0)
  6063                           
  6064                           ; BSR set to: 0
  6065  0031C0  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
  6066  0031C2  116A               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  6067  0031C4  A4D8               	btfss	status,2,c
  6068  0031C6  D005               	goto	l399
  6069                           
  6070                           ; BSR set to: 0
  6071                           ;usb_device.c: 1014: {
  6072                           ;usb_device.c: 1015: return 0;
  6073  0031C8  0E00               	movlw	0
  6074  0031CA  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
  6075  0031CC  0E00               	movlw	0
  6076  0031CE  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
  6077                           
  6078                           ; BSR set to: 0
  6079  0031D0  0012               	return	
  6080  0031D2                     l399:
  6081                           
  6082                           ; BSR set to: 0
  6083                           ;usb_device.c: 1016: }
  6084                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
  6085                           
  6086                           ; BSR set to: 0
  6087  0031D2  EE20 F002          	lfsr	2,2
  6088  0031D6  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
  6089  0031D8  26D9               	addwf	fsr2l,f,c
  6090  0031DA  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  6091  0031DC  22DA               	addwfc	fsr2h,f,c
  6092  0031DE  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
  6093  0031E2  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
  6094                           
  6095                           ;usb_device.c: 1030: handle->CNT = len;
  6096  0031E6  EE20 F001          	lfsr	2,1
  6097  0031EA  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
  6098  0031EC  26D9               	addwf	fsr2l,f,c
  6099  0031EE  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  6100  0031F0  22DA               	addwfc	fsr2h,f,c
  6101  0031F2  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
  6102                           
  6103                           ; BSR set to: 0
  6104                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
  6105  0031F6  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  6106  0031FA  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  6107  0031FE  0E40               	movlw	64
  6108  003200  16DF               	andwf	indf2,f,c
  6109                           
  6110                           ; BSR set to: 0
  6111                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
  6112  003202  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  6113  003206  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  6114  00320A  0E00               	movlw	0
  6115  00320C  86DB               	bsf	plusw2,3,c
  6116                           
  6117                           ; BSR set to: 0
  6118                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
  6119  00320E  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  6120  003212  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  6121  003216  0E00               	movlw	0
  6122  003218  8EDB               	bsf	plusw2,7,c
  6123                           
  6124                           ; BSR set to: 0
  6125                           ;usb_device.c: 1036: if(dir != 0)
  6126  00321A  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
  6127  00321C  B4D8               	btfsc	status,2,c
  6128  00321E  D018               	goto	l401
  6129                           
  6130                           ; BSR set to: 0
  6131                           ;usb_device.c: 1037: {
  6132                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
  6133  003220  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
  6134  003222  0D02               	mullw	2
  6135  003224  0E46               	movlw	low _pBDTEntryIn
  6136  003226  24F3               	addwf	prodl,w,c
  6137  003228  6ED9               	movwf	fsr2l,c
  6138  00322A  0E00               	movlw	high _pBDTEntryIn
  6139  00322C  20F4               	addwfc	prodh,w,c
  6140  00322E  6EDA               	movwf	fsr2h,c
  6141  003230  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
  6142  003234  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
  6143  003238  0E04               	movlw	4
  6144  00323A  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
  6145  00323C  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
  6146  00323E  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
  6147  003240  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
  6148  003242  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
  6149  003244  0D02               	mullw	2
  6150  003246  0E46               	movlw	low _pBDTEntryIn
  6151  003248  24F3               	addwf	prodl,w,c
  6152  00324A  6ED9               	movwf	fsr2l,c
  6153  00324C  0E00               	movlw	high _pBDTEntryIn
  6154  00324E  D017               	goto	L3
  6155  003250                     l401:
  6156                           
  6157                           ; BSR set to: 0
  6158                           ;usb_device.c: 1041: else
  6159                           ;usb_device.c: 1042: {
  6160                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
  6161                           
  6162                           ; BSR set to: 0
  6163  003250  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
  6164  003252  0D02               	mullw	2
  6165  003254  0EC4               	movlw	low _pBDTEntryOut
  6166  003256  24F3               	addwf	prodl,w,c
  6167  003258  6ED9               	movwf	fsr2l,c
  6168  00325A  0E02               	movlw	high _pBDTEntryOut
  6169  00325C  20F4               	addwfc	prodh,w,c
  6170  00325E  6EDA               	movwf	fsr2h,c
  6171  003260  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
  6172  003264  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
  6173  003268  0E04               	movlw	4
  6174  00326A  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
  6175  00326C  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
  6176  00326E  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
  6177  003270  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
  6178  003272  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
  6179  003274  0D02               	mullw	2
  6180  003276  0EC4               	movlw	low _pBDTEntryOut
  6181  003278  24F3               	addwf	prodl,w,c
  6182  00327A  6ED9               	movwf	fsr2l,c
  6183  00327C  0E02               	movlw	high _pBDTEntryOut
  6184  00327E                     L3:
  6185  00327E  20F4               	addwfc	prodh,w,c
  6186  003280  6EDA               	movwf	fsr2h,c
  6187  003282  C066  FFDE         	movff	??_USBTransferOnePacket+2,postinc2
  6188  003286  C067  FFDD         	movff	??_USBTransferOnePacket+3,postdec2
  6189                           
  6190                           ; BSR set to: 0
  6191                           ;usb_device.c: 1045: }
  6192                           ;usb_device.c: 1046: return (void*)handle;
  6193                           
  6194                           ; BSR set to: 0
  6195  00328A  C069  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
  6196  00328E  C06A  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
  6197  003292  0012               	return	
  6198  003294                     __end_of_USBTransferOnePacket:
  6199                           	opt stack 0
  6200                           tblptru	equ	0xFF8
  6201                           tblptrh	equ	0xFF7
  6202                           tblptrl	equ	0xFF6
  6203                           tablat	equ	0xFF5
  6204                           prodh	equ	0xFF4
  6205                           prodl	equ	0xFF3
  6206                           intcon	equ	0xFF2
  6207                           postinc0	equ	0xFEE
  6208                           wreg	equ	0xFE8
  6209                           indf1	equ	0xFE7
  6210                           postdec1	equ	0xFE5
  6211                           fsr1h	equ	0xFE2
  6212                           fsr1l	equ	0xFE1
  6213                           indf2	equ	0xFDF
  6214                           postinc2	equ	0xFDE
  6215                           postdec2	equ	0xFDD
  6216                           plusw2	equ	0xFDB
  6217                           fsr2h	equ	0xFDA
  6218                           fsr2l	equ	0xFD9
  6219                           status	equ	0xFD8
  6220                           
  6221 ;; *************** function _USBDeviceInit *****************
  6222 ;; Defined at:
  6223 ;;		line 277 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
  6224 ;; Parameters:    Size  Location     Type
  6225 ;;		None
  6226 ;; Auto vars:     Size  Location     Type
  6227 ;;  i               1    8[BANK0 ] unsigned char 
  6228 ;; Return value:  Size  Location     Type
  6229 ;;                  1    wreg      void 
  6230 ;; Registers used:
  6231 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6232 ;; Tracked objects:
  6233 ;;		On entry : 0/0
  6234 ;;		On exit  : 0/0
  6235 ;;		Unchanged: 0/0
  6236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6237 ;;      Params:         0       0       0       0       0       0       0       0       0
  6238 ;;      Locals:         0       1       0       0       0       0       0       0       0
  6239 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6240 ;;      Totals:         0       1       0       0       0       0       0       0       0
  6241 ;;Total ram usage:        1 bytes
  6242 ;; Hardware stack levels used:    1
  6243 ;; Hardware stack levels required when called:   11
  6244 ;; This function calls:
  6245 ;;		_memset
  6246 ;; This function is called by:
  6247 ;;		_main
  6248 ;; This function uses a non-reentrant model
  6249 ;;
  6250                           
  6251                           	psect	text16
  6252  002702                     __ptext16:
  6253                           	opt stack 0
  6254  002702                     _USBDeviceInit:
  6255                           	opt stack 19
  6256                           
  6257                           ;usb_device.c: 279: uint8_t i;
  6258                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
  6259                           
  6260                           ; BSR set to: 0
  6261                           ;incstack = 0
  6262  002702  9AA0               	bcf	4000,5,c	;volatile
  6263                           
  6264                           ;usb_device.c: 285: ;
  6265                           ;usb_device.c: 288: {UEIR = 0;};
  6266  002704  0E00               	movlw	0
  6267  002706  6E6A               	movwf	3946,c	;volatile
  6268                           
  6269                           ;usb_device.c: 291: {UIR = 0;};
  6270  002708  0E00               	movlw	0
  6271  00270A  6E68               	movwf	3944,c	;volatile
  6272                           
  6273                           ;usb_device.c: 294: UEP0 = 0;
  6274  00270C  0E00               	movlw	0
  6275  00270E  6E70               	movwf	3952,c	;volatile
  6276                           
  6277                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
  6278  002710  0E71               	movlw	113
  6279  002712  0100               	movlb	0	; () banked
  6280  002714  6F60               	movwf	memset@p1& (0+255),b
  6281  002716  0E0F               	movlw	15
  6282  002718  6F61               	movwf	(memset@p1+1)& (0+255),b
  6283  00271A  0E00               	movlw	0
  6284  00271C  6F63               	movwf	(memset@c+1)& (0+255),b
  6285  00271E  0E00               	movlw	0
  6286  002720  6F62               	movwf	memset@c& (0+255),b
  6287  002722  0E00               	movlw	0
  6288  002724  6F65               	movwf	(memset@n+1)& (0+255),b
  6289  002726  0E02               	movlw	2
  6290  002728  6F64               	movwf	memset@n& (0+255),b
  6291  00272A  ECBE  F027         	call	_memset	;wreg free
  6292                           
  6293                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  6294  00272E  0E16               	movlw	22
  6295  002730  6E6F               	movwf	3951,c	;volatile
  6296  002732  0E9F               	movlw	159
  6297  002734  6E6B               	movwf	3947,c	;volatile
  6298  002736  0E7B               	movlw	123
  6299  002738  6E69               	movwf	3945,c	;volatile
  6300                           
  6301                           ;usb_device.c: 301: ;
  6302                           ;usb_device.c: 304: ;
  6303                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  6304  00273A  0E00               	movlw	0
  6305  00273C  0100               	movlb	0	; () banked
  6306  00273E  6F68               	movwf	USBDeviceInit@i& (0+255),b
  6307  002740                     l9383:
  6308                           
  6309                           ; BSR set to: 0
  6310  002740  0E0B               	movlw	11
  6311  002742  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
  6312  002744  D001               	goto	l358
  6313  002746  D00E               	goto	u9010
  6314  002748                     l358:
  6315                           
  6316                           ; BSR set to: 0
  6317                           ;usb_device.c: 308: {
  6318                           ;usb_device.c: 309: BDT[i].Val = 0x00;
  6319                           
  6320                           ; BSR set to: 0
  6321  002748  5168               	movf	USBDeviceInit@i& (0+255),w,b
  6322  00274A  0D04               	mullw	4
  6323  00274C  0E00               	movlw	0
  6324  00274E  24F3               	addwf	prodl,w,c
  6325  002750  6ED9               	movwf	fsr2l,c
  6326  002752  0E04               	movlw	4
  6327  002754  20F4               	addwfc	prodh,w,c
  6328  002756  6EDA               	movwf	fsr2h,c
  6329  002758  6ADE               	clrf	postinc2,c
  6330  00275A  6ADE               	clrf	postinc2,c
  6331  00275C  6ADE               	clrf	postinc2,c
  6332  00275E  6ADD               	clrf	postdec2,c
  6333                           
  6334                           ; BSR set to: 0
  6335  002760  2B68               	incf	USBDeviceInit@i& (0+255),f,b
  6336  002762  D7EE               	goto	l9383
  6337  002764                     u9010:
  6338                           
  6339                           ; BSR set to: 0
  6340                           ;usb_device.c: 310: }
  6341                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
  6342  002764  8C6D               	bsf	3949,6,c	;volatile
  6343                           
  6344                           ; BSR set to: 0
  6345                           ;usb_device.c: 316: UADDR = 0x00;
  6346  002766  0E00               	movlw	0
  6347  002768  6E6E               	movwf	3950,c	;volatile
  6348                           
  6349                           ; BSR set to: 0
  6350                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
  6351  00276A  986D               	bcf	3949,4,c	;volatile
  6352                           
  6353                           ; BSR set to: 0
  6354                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
  6355  00276C  9C6D               	bcf	3949,6,c	;volatile
  6356  00276E                     
  6357                           ;usb_device.c: 326: {
  6358                           ;usb_device.c: 327: (UIR &= 0xF7);
  6359                           
  6360                           ; BSR set to: 0
  6361  00276E  9668               	bcf	3944,3,c	;volatile
  6362                           
  6363                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
  6364  002770  0E00               	movlw	0
  6365  002772  6E43               	movwf	_inPipes+3,c	;volatile
  6366                           
  6367                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
  6368  002774  0E00               	movlw	0
  6369  002776  6E3B               	movwf	_outPipes+3,c	;volatile
  6370                           
  6371                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
  6372  002778  0E00               	movlw	0
  6373  00277A  6E3D               	movwf	_outPipes+5,c	;volatile
  6374  00277C  0E00               	movlw	0
  6375  00277E  6E3C               	movwf	_outPipes+4,c	;volatile
  6376                           
  6377                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
  6378  002780  B668               	btfsc	3944,3,c	;volatile
  6379  002782  D7F5               	goto	l360
  6380                           
  6381                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
  6382  002784  0E01               	movlw	1
  6383  002786  0101               	movlb	1	; () banked
  6384  002788  6FFA               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  6385                           
  6386                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
  6387  00278A  0E01               	movlw	1
  6388  00278C  6FF9               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
  6389                           
  6390                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
  6391  00278E  0E00               	movlw	0
  6392  002790  6FF8               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
  6393                           
  6394                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
  6395  002792  0E00               	movlw	0
  6396  002794  6FF7               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
  6397                           
  6398                           ;usb_device.c: 341: USBBusIsSuspended = 0;
  6399  002796  0E00               	movlw	0
  6400  002798  6FFC               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
  6401                           
  6402                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
  6403  00279A  0E00               	movlw	0
  6404  00279C  0100               	movlb	0	; () banked
  6405  00279E  6F68               	movwf	USBDeviceInit@i& (0+255),b
  6406  0027A0                     l9411:
  6407                           
  6408                           ; BSR set to: 0
  6409  0027A0  0E02               	movlw	2
  6410  0027A2  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
  6411  0027A4  D001               	goto	l362
  6412  0027A6  D02E               	goto	u9040
  6413  0027A8                     l362:
  6414                           
  6415                           ; BSR set to: 0
  6416                           ;usb_device.c: 346: {
  6417                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
  6418                           
  6419                           ; BSR set to: 0
  6420  0027A8  5168               	movf	USBDeviceInit@i& (0+255),w,b
  6421  0027AA  0D02               	mullw	2
  6422  0027AC  0E46               	movlw	low _pBDTEntryIn
  6423  0027AE  24F3               	addwf	prodl,w,c
  6424  0027B0  6ED9               	movwf	fsr2l,c
  6425  0027B2  0E00               	movlw	high _pBDTEntryIn
  6426  0027B4  20F4               	addwfc	prodh,w,c
  6427  0027B6  6EDA               	movwf	fsr2h,c
  6428  0027B8  0E00               	movlw	0
  6429  0027BA  6EDE               	movwf	postinc2,c
  6430  0027BC  0E00               	movlw	0
  6431  0027BE  6EDD               	movwf	postdec2,c
  6432                           
  6433                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
  6434  0027C0  5168               	movf	USBDeviceInit@i& (0+255),w,b
  6435  0027C2  0D02               	mullw	2
  6436  0027C4  0EC4               	movlw	low _pBDTEntryOut
  6437  0027C6  24F3               	addwf	prodl,w,c
  6438  0027C8  6ED9               	movwf	fsr2l,c
  6439  0027CA  0E02               	movlw	high _pBDTEntryOut
  6440  0027CC  20F4               	addwfc	prodh,w,c
  6441  0027CE  6EDA               	movwf	fsr2h,c
  6442  0027D0  0E00               	movlw	0
  6443  0027D2  6EDE               	movwf	postinc2,c
  6444  0027D4  0E00               	movlw	0
  6445  0027D6  6EDD               	movwf	postdec2,c
  6446                           
  6447                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
  6448  0027D8  5168               	movf	USBDeviceInit@i& (0+255),w,b
  6449  0027DA  0D01               	mullw	1
  6450  0027DC  0EDB               	movlw	low _ep_data_in
  6451  0027DE  24F3               	addwf	prodl,w,c
  6452  0027E0  6ED9               	movwf	fsr2l,c
  6453  0027E2  0E02               	movlw	high _ep_data_in
  6454  0027E4  20F4               	addwfc	prodh,w,c
  6455  0027E6  6EDA               	movwf	fsr2h,c
  6456  0027E8  0E00               	movlw	0
  6457  0027EA  6EDF               	movwf	indf2,c
  6458                           
  6459                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
  6460  0027EC  5168               	movf	USBDeviceInit@i& (0+255),w,b
  6461  0027EE  0D01               	mullw	1
  6462  0027F0  0ED8               	movlw	low _ep_data_out
  6463  0027F2  24F3               	addwf	prodl,w,c
  6464  0027F4  6ED9               	movwf	fsr2l,c
  6465  0027F6  0E02               	movlw	high _ep_data_out
  6466  0027F8  20F4               	addwfc	prodh,w,c
  6467  0027FA  6EDA               	movwf	fsr2h,c
  6468  0027FC  0E00               	movlw	0
  6469  0027FE  6EDF               	movwf	indf2,c
  6470                           
  6471                           ; BSR set to: 0
  6472  002800  2B68               	incf	USBDeviceInit@i& (0+255),f,b
  6473  002802  D7CE               	goto	l9411
  6474  002804                     u9040:
  6475                           
  6476                           ; BSR set to: 0
  6477                           ;usb_device.c: 351: }
  6478                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  6479                           
  6480                           ; BSR set to: 0
  6481  002804  0E08               	movlw	8
  6482  002806  6E46               	movwf	_pBDTEntryIn,c
  6483  002808  0E04               	movlw	4
  6484  00280A  6E47               	movwf	_pBDTEntryIn+1,c
  6485                           
  6486                           ; BSR set to: 0
  6487                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
  6488  00280C  0E16               	movlw	22
  6489  00280E  6E70               	movwf	3952,c	;volatile
  6490                           
  6491                           ; BSR set to: 0
  6492                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  6493  002810  0E04               	movlw	4
  6494  002812  0104               	movlb	4	; () banked
  6495  002814  6F03               	movwf	3,b	;volatile
  6496  002816  0E30               	movlw	48
  6497  002818  6F02               	movwf	2,b	;volatile
  6498                           
  6499                           ; BSR set to: 4
  6500                           ;usb_device.c: 359: BDT[0].CNT = 8;
  6501  00281A  0E08               	movlw	8
  6502  00281C  6F01               	movwf	1,b	;volatile
  6503                           
  6504                           ; BSR set to: 4
  6505                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
  6506  00281E  0E04               	movlw	4
  6507  002820  6F00               	movwf	0,b	;volatile
  6508                           
  6509                           ; BSR set to: 4
  6510                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
  6511  002822  8F00               	bsf	0,7,b	;volatile
  6512                           
  6513                           ; BSR set to: 4
  6514                           ;usb_device.c: 364: USBActiveConfiguration = 0;
  6515  002824  0E00               	movlw	0
  6516  002826  6E5E               	movwf	_USBActiveConfiguration,c	;volatile
  6517                           
  6518                           ; BSR set to: 4
  6519                           ;usb_device.c: 366: USB1msTickCount = 0;
  6520  002828  0E00               	movlw	0
  6521  00282A  0102               	movlb	2	; () banked
  6522  00282C  6FCA               	movwf	_USB1msTickCount& (0+255),b	;volatile
  6523  00282E  0E00               	movlw	0
  6524  002830  6FCB               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
  6525  002832  0E00               	movlw	0
  6526  002834  6FCC               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
  6527  002836  0E00               	movlw	0
  6528  002838  6FCD               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
  6529                           
  6530                           ; BSR set to: 2
  6531                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
  6532  00283A  0E00               	movlw	0
  6533  00283C  0101               	movlb	1	; () banked
  6534  00283E  6FF6               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
  6535                           
  6536                           ; BSR set to: 1
  6537                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
  6538  002840  0E00               	movlw	0
  6539  002842  6E58               	movwf	_USBDeviceState,c	;volatile
  6540                           
  6541                           ; BSR set to: 1
  6542  002844  0012               	return		;funcret
  6543  002846                     __end_of_USBDeviceInit:
  6544                           	opt stack 0
  6545                           tblptru	equ	0xFF8
  6546                           tblptrh	equ	0xFF7
  6547                           tblptrl	equ	0xFF6
  6548                           tablat	equ	0xFF5
  6549                           prodh	equ	0xFF4
  6550                           prodl	equ	0xFF3
  6551                           intcon	equ	0xFF2
  6552                           postinc0	equ	0xFEE
  6553                           wreg	equ	0xFE8
  6554                           indf1	equ	0xFE7
  6555                           postdec1	equ	0xFE5
  6556                           fsr1h	equ	0xFE2
  6557                           fsr1l	equ	0xFE1
  6558                           indf2	equ	0xFDF
  6559                           postinc2	equ	0xFDE
  6560                           postdec2	equ	0xFDD
  6561                           plusw2	equ	0xFDB
  6562                           fsr2h	equ	0xFDA
  6563                           fsr2l	equ	0xFD9
  6564                           status	equ	0xFD8
  6565                           
  6566 ;; *************** function _memset *****************
  6567 ;; Defined at:
  6568 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\memset.c"
  6569 ;; Parameters:    Size  Location     Type
  6570 ;;  p1              2    0[BANK0 ] PTR void 
  6571 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  6572 ;;  c               2    2[BANK0 ] int 
  6573 ;;  n               2    4[BANK0 ] unsigned int 
  6574 ;; Auto vars:     Size  Location     Type
  6575 ;;  p               2    6[BANK0 ] PTR unsigned char 
  6576 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  6577 ;; Return value:  Size  Location     Type
  6578 ;;                  2    0[BANK0 ] PTR void 
  6579 ;; Registers used:
  6580 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6581 ;; Tracked objects:
  6582 ;;		On entry : 0/0
  6583 ;;		On exit  : 0/0
  6584 ;;		Unchanged: 0/0
  6585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6586 ;;      Params:         0       6       0       0       0       0       0       0       0
  6587 ;;      Locals:         0       2       0       0       0       0       0       0       0
  6588 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6589 ;;      Totals:         0       8       0       0       0       0       0       0       0
  6590 ;;Total ram usage:        8 bytes
  6591 ;; Hardware stack levels used:    1
  6592 ;; Hardware stack levels required when called:   10
  6593 ;; This function calls:
  6594 ;;		Nothing
  6595 ;; This function is called by:
  6596 ;;		_USBDeviceInit
  6597 ;; This function uses a non-reentrant model
  6598 ;;
  6599                           
  6600                           	psect	text17
  6601  004F7C                     __ptext17:
  6602                           	opt stack 0
  6603  004F7C                     _memset:
  6604                           	opt stack 19
  6605                           
  6606                           ; BSR set to: 1
  6607                           ;incstack = 0
  6608  004F7C  C060  F066         	movff	memset@p1,memset@p
  6609  004F80  C061  F067         	movff	memset@p1+1,memset@p+1
  6610  004F84  D009               	goto	l2925
  6611  004F86                     l8405:
  6612  004F86  C066  FFD9         	movff	memset@p,fsr2l
  6613  004F8A  C067  FFDA         	movff	memset@p+1,fsr2h
  6614  004F8E  C062  FFDF         	movff	memset@c,indf2
  6615  004F92  0100               	movlb	0	; () banked
  6616  004F94  4B66               	infsnz	memset@p& (0+255),f,b
  6617  004F96  2B67               	incf	(memset@p+1)& (0+255),f,b
  6618  004F98                     l2925:
  6619                           
  6620                           ; BSR set to: 0
  6621  004F98  0100               	movlb	0	; () banked
  6622  004F9A  0764               	decf	memset@n& (0+255),f,b
  6623  004F9C  A0D8               	btfss	status,0,c
  6624  004F9E  0765               	decf	(memset@n+1)& (0+255),f,b
  6625  004FA0  2964               	incf	memset@n& (0+255),w,b
  6626  004FA2  E1F1               	bnz	l8405
  6627  004FA4  2965               	incf	(memset@n+1)& (0+255),w,b
  6628  004FA6  B4D8               	btfsc	status,2,c
  6629  004FA8  0012               	return	
  6630  004FAA  D7ED               	goto	l2926
  6631  004FAC                     __end_of_memset:
  6632                           	opt stack 0
  6633                           tblptru	equ	0xFF8
  6634                           tblptrh	equ	0xFF7
  6635                           tblptrl	equ	0xFF6
  6636                           tablat	equ	0xFF5
  6637                           prodh	equ	0xFF4
  6638                           prodl	equ	0xFF3
  6639                           intcon	equ	0xFF2
  6640                           postinc0	equ	0xFEE
  6641                           wreg	equ	0xFE8
  6642                           indf1	equ	0xFE7
  6643                           postdec1	equ	0xFE5
  6644                           fsr1h	equ	0xFE2
  6645                           fsr1l	equ	0xFE1
  6646                           indf2	equ	0xFDF
  6647                           postinc2	equ	0xFDE
  6648                           postdec2	equ	0xFDD
  6649                           plusw2	equ	0xFDB
  6650                           fsr2h	equ	0xFDA
  6651                           fsr2l	equ	0xFD9
  6652                           status	equ	0xFD8
  6653                           
  6654 ;; *************** function _TxLoRaWan *****************
  6655 ;; Defined at:
  6656 ;;		line 127 in file "LoRaWanCore.c"
  6657 ;; Parameters:    Size  Location     Type
  6658 ;;  conf            1    wreg     unsigned char 
  6659 ;;  porta           1  145[BANK0 ] unsigned char 
  6660 ;;  data            2  146[BANK0 ] PTR const unsigned char 
  6661 ;;		 -> main@dadoPoco(21), 
  6662 ;;  tamData         1  148[BANK0 ] unsigned char 
  6663 ;; Auto vars:     Size  Location     Type
  6664 ;;  conf            1  230[BANK1 ] unsigned char 
  6665 ;;  status          1  231[BANK1 ] unsigned char 
  6666 ;;  i               1  236[BANK1 ] unsigned char 
  6667 ;;  comando       200   30[BANK1 ] unsigned char [200]
  6668 ;;  hex             4  232[BANK1 ] unsigned char [4]
  6669 ;; Return value:  Size  Location     Type
  6670 ;;                  1    wreg      unsigned char 
  6671 ;; Registers used:
  6672 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6673 ;; Tracked objects:
  6674 ;;		On entry : 0/0
  6675 ;;		On exit  : 0/0
  6676 ;;		Unchanged: 0/0
  6677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6678 ;;      Params:         0       4       0       0       0       0       0       0       0
  6679 ;;      Locals:         0       0     207       0       0       0       0       0       0
  6680 ;;      Temps:          0       1       0       0       0       0       0       0       0
  6681 ;;      Totals:         0       5     207       0       0       0       0       0       0
  6682 ;;Total ram usage:      212 bytes
  6683 ;; Hardware stack levels used:    1
  6684 ;; Hardware stack levels required when called:   14
  6685 ;; This function calls:
  6686 ;;		_JoinLoRaWan
  6687 ;;		_ResetModuloLoRaWan
  6688 ;;		_enviaComando
  6689 ;;		_parseLoRaWan
  6690 ;;		_retornaDado
  6691 ;;		_sprintf
  6692 ;;		_strcat
  6693 ;; This function is called by:
  6694 ;;		_main
  6695 ;; This function uses a non-reentrant model
  6696 ;;
  6697                           
  6698                           	psect	text18
  6699  001384                     __ptext18:
  6700                           	opt stack 0
  6701  001384                     _TxLoRaWan:
  6702                           	opt stack 16
  6703                           
  6704                           ; BSR set to: 0
  6705                           ;incstack = 0
  6706                           ;TxLoRaWan@conf stored from wreg
  6707  001384  0101               	movlb	1	; () banked
  6708  001386  6FE6               	movwf	TxLoRaWan@conf& (0+255),b
  6709                           
  6710                           ;LoRaWanCore.c: 129: char comando[200];
  6711                           ;LoRaWanCore.c: 130: char hex[4];
  6712                           ;LoRaWanCore.c: 132: if (conf)
  6713  001388  0101               	movlb	1	; () banked
  6714  00138A  51E6               	movf	TxLoRaWan@conf& (0+255),w,b
  6715  00138C  B4D8               	btfsc	status,2,c
  6716  00138E  D013               	goto	l2035
  6717                           
  6718                           ; BSR set to: 1
  6719                           ;LoRaWanCore.c: 133: sprintf(comando, "%s %d ", MAC_TX_CNF, porta);
  6720  001390  0E1E               	movlw	low TxLoRaWan@comando
  6721  001392  0100               	movlb	0	; () banked
  6722  001394  6FBF               	movwf	sprintf@sp& (0+255),b
  6723  001396  0E01               	movlw	high TxLoRaWan@comando
  6724  001398  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  6725  00139A  0EC1               	movlw	low STR_28
  6726  00139C  6FC1               	movwf	sprintf@f& (0+255),b
  6727  00139E  0E7F               	movlw	high STR_28
  6728  0013A0  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  6729  0013A2  0E4B               	movlw	low _MAC_TX_CNF
  6730  0013A4  6FC3               	movwf	(?_sprintf+4)& (0+255),b
  6731  0013A6  0E7E               	movlw	high _MAC_TX_CNF
  6732  0013A8  6FC4               	movwf	(?_sprintf+5)& (0+255),b
  6733  0013AA  C0F1  F0C5         	movff	TxLoRaWan@porta,?_sprintf+6
  6734  0013AE  6BC6               	clrf	(?_sprintf+7)& (0+255),b
  6735  0013B0  EC09  F000         	call	_sprintf	;wreg free
  6736  0013B4  D012               	goto	l2036
  6737  0013B6                     l2035:
  6738                           
  6739                           ;LoRaWanCore.c: 134: else
  6740                           ;LoRaWanCore.c: 135: sprintf(comando, "%s %d ", MAC_TX_UNCNF, porta);
  6741  0013B6  0E1E               	movlw	low TxLoRaWan@comando
  6742  0013B8  0100               	movlb	0	; () banked
  6743  0013BA  6FBF               	movwf	sprintf@sp& (0+255),b
  6744  0013BC  0E01               	movlw	high TxLoRaWan@comando
  6745  0013BE  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  6746  0013C0  0EC1               	movlw	low STR_28
  6747  0013C2  6FC1               	movwf	sprintf@f& (0+255),b
  6748  0013C4  0E7F               	movlw	high STR_28
  6749  0013C6  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  6750  0013C8  0E33               	movlw	low _MAC_TX_UNCNF
  6751  0013CA  6FC3               	movwf	(?_sprintf+4)& (0+255),b
  6752  0013CC  0E7E               	movlw	high _MAC_TX_UNCNF
  6753  0013CE  6FC4               	movwf	(?_sprintf+5)& (0+255),b
  6754  0013D0  C0F1  F0C5         	movff	TxLoRaWan@porta,?_sprintf+6
  6755  0013D4  6BC6               	clrf	(?_sprintf+7)& (0+255),b
  6756  0013D6  EC09  F000         	call	_sprintf	;wreg free
  6757  0013DA                     l2036:
  6758                           
  6759                           ;LoRaWanCore.c: 137: for (uint8_t i=0;i<tamData;i++)
  6760  0013DA  0E00               	movlw	0
  6761  0013DC  0101               	movlb	1	; () banked
  6762  0013DE  6FEC               	movwf	TxLoRaWan@i& (0+255),b
  6763  0013E0  D1C6               	goto	l2037
  6764  0013E2                     
  6765                           ; BSR set to: 1
  6766                           ;LoRaWanCore.c: 138: {
  6767                           ;LoRaWanCore.c: 140: if ((i == 1 || i == 2 ) && (retornaDado(1,0) == 1))
  6768                           
  6769                           ; BSR set to: 1
  6770  0013E2  05EC               	decf	TxLoRaWan@i& (0+255),w,b
  6771  0013E4  B4D8               	btfsc	status,2,c
  6772  0013E6  D004               	goto	u9270
  6773                           
  6774                           ; BSR set to: 1
  6775  0013E8  0E02               	movlw	2
  6776  0013EA  19EC               	xorwf	TxLoRaWan@i& (0+255),w,b
  6777  0013EC  A4D8               	btfss	status,2,c
  6778  0013EE  D009               	goto	l2039
  6779  0013F0                     u9270:
  6780                           
  6781                           ; BSR set to: 1
  6782                           
  6783                           ; BSR set to: 1
  6784  0013F0  0E00               	movlw	0
  6785  0013F2  0100               	movlb	0	; () banked
  6786  0013F4  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  6787  0013F6  0E01               	movlw	1
  6788  0013F8  EC75  F024         	call	_retornaDado
  6789  0013FC  06E8               	decf	wreg,f,c
  6790  0013FE  B4D8               	btfsc	status,2,c
  6791  001400  D1B4               	goto	l2042
  6792  001402                     l2039:
  6793                           
  6794                           ;LoRaWanCore.c: 142: else if ((i == 3 || i == 4 ) && (retornaDado(1,1) == 1))
  6795  001402  0E03               	movlw	3
  6796  001404  0101               	movlb	1	; () banked
  6797  001406  19EC               	xorwf	TxLoRaWan@i& (0+255),w,b
  6798  001408  B4D8               	btfsc	status,2,c
  6799  00140A  D004               	goto	u9300
  6800                           
  6801                           ; BSR set to: 1
  6802  00140C  0E04               	movlw	4
  6803  00140E  19EC               	xorwf	TxLoRaWan@i& (0+255),w,b
  6804  001410  A4D8               	btfss	status,2,c
  6805  001412  D009               	goto	l2044
  6806  001414                     u9300:
  6807                           
  6808                           ; BSR set to: 1
  6809                           
  6810                           ; BSR set to: 1
  6811  001414  0E01               	movlw	1
  6812  001416  0100               	movlb	0	; () banked
  6813  001418  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  6814  00141A  0E01               	movlw	1
  6815  00141C  EC75  F024         	call	_retornaDado
  6816  001420  06E8               	decf	wreg,f,c
  6817  001422  B4D8               	btfsc	status,2,c
  6818  001424  D1A2               	goto	l2042
  6819  001426                     l2044:
  6820                           
  6821                           ;LoRaWanCore.c: 145: else if (i == 8){
  6822  001426  0E08               	movlw	8
  6823  001428  0101               	movlb	1	; () banked
  6824  00142A  19EC               	xorwf	TxLoRaWan@i& (0+255),w,b
  6825  00142C  A4D8               	btfss	status,2,c
  6826  00142E  D01C               	goto	l2048
  6827                           
  6828                           ; BSR set to: 1
  6829                           ;LoRaWanCore.c: 146: if(retornaDado(1,2) == 1){
  6830  001430  0E02               	movlw	2
  6831  001432  0100               	movlb	0	; () banked
  6832  001434  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  6833  001436  0E01               	movlw	1
  6834  001438  EC75  F024         	call	_retornaDado
  6835  00143C  06E8               	decf	wreg,f,c
  6836  00143E  B4D8               	btfsc	status,2,c
  6837  001440  D194               	goto	l2042
  6838                           
  6839                           ;LoRaWanCore.c: 148: else if((retornaDado(5,0) == 1) || (retornaDado(5,1) == 1)){
  6840                           
  6841                           ;LoRaWanCore.c: 147: continue;}
  6842  001442  0E00               	movlw	0
  6843  001444  0100               	movlb	0	; () banked
  6844  001446  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  6845  001448  0E05               	movlw	5
  6846  00144A  EC75  F024         	call	_retornaDado
  6847  00144E  06E8               	decf	wreg,f,c
  6848  001450  B4D8               	btfsc	status,2,c
  6849  001452  D18B               	goto	l2042
  6850  001454  0E01               	movlw	1
  6851  001456  0100               	movlb	0	; () banked
  6852  001458  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  6853  00145A  0E05               	movlw	5
  6854  00145C  EC75  F024         	call	_retornaDado
  6855  001460                     L4:
  6856  001460  06E8               	decf	wreg,f,c
  6857  001462  B4D8               	btfsc	status,2,c
  6858  001464  D182               	goto	l2042
  6859  001466  D15C               	goto	l2122
  6860  001468                     l2048:
  6861                           
  6862                           ;LoRaWanCore.c: 150: else if (i == 7){
  6863  001468  0E07               	movlw	7
  6864  00146A  0101               	movlb	1	; () banked
  6865  00146C  19EC               	xorwf	TxLoRaWan@i& (0+255),w,b
  6866  00146E  A4D8               	btfss	status,2,c
  6867  001470  D010               	goto	l2055
  6868                           
  6869                           ; BSR set to: 1
  6870                           ;LoRaWanCore.c: 151: if(retornaDado(1,2) == 1){
  6871  001472  0E02               	movlw	2
  6872  001474  0100               	movlb	0	; () banked
  6873  001476  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  6874  001478  0E01               	movlw	1
  6875  00147A  EC75  F024         	call	_retornaDado
  6876  00147E  06E8               	decf	wreg,f,c
  6877  001480  B4D8               	btfsc	status,2,c
  6878  001482  D173               	goto	l2042
  6879                           
  6880                           ;LoRaWanCore.c: 153: else if(retornaDado(5,1) == 1){
  6881                           
  6882                           ;LoRaWanCore.c: 152: continue;}
  6883  001484  0E01               	movlw	1
  6884  001486  0100               	movlb	0	; () banked
  6885  001488  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  6886  00148A  0E05               	movlw	5
  6887  00148C  EC75  F024         	call	_retornaDado
  6888  001490  D7E7               	goto	L4
  6889  001492                     l2055:
  6890                           
  6891                           ;LoRaWanCore.c: 155: else if (i == 6){
  6892  001492  0E06               	movlw	6
  6893  001494  0101               	movlb	1	; () banked
  6894  001496  19EC               	xorwf	TxLoRaWan@i& (0+255),w,b
  6895  001498  A4D8               	btfss	status,2,c
  6896  00149A  D019               	goto	l2060
  6897                           
  6898                           ; BSR set to: 1
  6899                           ;LoRaWanCore.c: 156: if(retornaDado(1,2) == 1){
  6900  00149C  0E02               	movlw	2
  6901  00149E  0100               	movlb	0	; () banked
  6902  0014A0  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  6903  0014A2  0E01               	movlw	1
  6904  0014A4  EC75  F024         	call	_retornaDado
  6905  0014A8  06E8               	decf	wreg,f,c
  6906  0014AA  B4D8               	btfsc	status,2,c
  6907  0014AC  D15E               	goto	l2042
  6908                           
  6909                           ;LoRaWanCore.c: 158: else if((retornaDado(5,0) == 1) && (retornaDado(5,1) == 1)){
  6910                           
  6911                           ;LoRaWanCore.c: 157: continue;}
  6912  0014AE  0E00               	movlw	0
  6913  0014B0  0100               	movlb	0	; () banked
  6914  0014B2  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  6915  0014B4  0E05               	movlw	5
  6916  0014B6  EC75  F024         	call	_retornaDado
  6917  0014BA  06E8               	decf	wreg,f,c
  6918  0014BC  A4D8               	btfss	status,2,c
  6919  0014BE  D130               	goto	l2122
  6920  0014C0  0E01               	movlw	1
  6921  0014C2  0100               	movlb	0	; () banked
  6922  0014C4  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  6923  0014C6  0E05               	movlw	5
  6924  0014C8  EC75  F024         	call	_retornaDado
  6925  0014CC  D7C9               	goto	L4
  6926  0014CE                     l2060:
  6927                           
  6928                           ;LoRaWanCore.c: 160: else if (i == 5 && retornaDado(1,2) == 1)
  6929  0014CE  0E05               	movlw	5
  6930  0014D0  0101               	movlb	1	; () banked
  6931  0014D2  19EC               	xorwf	TxLoRaWan@i& (0+255),w,b
  6932  0014D4  A4D8               	btfss	status,2,c
  6933  0014D6  D009               	goto	l2065
  6934                           
  6935                           ; BSR set to: 1
  6936  0014D8  0E02               	movlw	2
  6937  0014DA  0100               	movlb	0	; () banked
  6938  0014DC  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  6939  0014DE  0E01               	movlw	1
  6940  0014E0  EC75  F024         	call	_retornaDado
  6941  0014E4  06E8               	decf	wreg,f,c
  6942  0014E6  B4D8               	btfsc	status,2,c
  6943  0014E8  D140               	goto	l2042
  6944  0014EA                     l2065:
  6945                           
  6946                           ;LoRaWanCore.c: 163: else if (i == 12){
  6947  0014EA  0E0C               	movlw	12
  6948  0014EC  0101               	movlb	1	; () banked
  6949  0014EE  19EC               	xorwf	TxLoRaWan@i& (0+255),w,b
  6950  0014F0  A4D8               	btfss	status,2,c
  6951  0014F2  D019               	goto	l2067
  6952                           
  6953                           ; BSR set to: 1
  6954                           ;LoRaWanCore.c: 164: if(retornaDado(1,3) == 1){
  6955  0014F4  0E03               	movlw	3
  6956  0014F6  0100               	movlb	0	; () banked
  6957  0014F8  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  6958  0014FA  0E01               	movlw	1
  6959  0014FC  EC75  F024         	call	_retornaDado
  6960  001500  06E8               	decf	wreg,f,c
  6961  001502  B4D8               	btfsc	status,2,c
  6962  001504  D132               	goto	l2042
  6963                           
  6964                           ;LoRaWanCore.c: 166: else if((retornaDado(5,2) == 1) || (retornaDado(5,3) == 1)){
  6965                           
  6966                           ;LoRaWanCore.c: 165: continue;}
  6967  001506  0E02               	movlw	2
  6968  001508  0100               	movlb	0	; () banked
  6969  00150A  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  6970  00150C  0E05               	movlw	5
  6971  00150E  EC75  F024         	call	_retornaDado
  6972  001512  06E8               	decf	wreg,f,c
  6973  001514  B4D8               	btfsc	status,2,c
  6974  001516  D129               	goto	l2042
  6975  001518  0E03               	movlw	3
  6976  00151A  0100               	movlb	0	; () banked
  6977  00151C  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  6978  00151E  0E05               	movlw	5
  6979  001520  EC75  F024         	call	_retornaDado
  6980  001524  D79D               	goto	L4
  6981  001526                     l2067:
  6982                           
  6983                           ;LoRaWanCore.c: 168: else if (i == 11){
  6984  001526  0E0B               	movlw	11
  6985  001528  0101               	movlb	1	; () banked
  6986  00152A  19EC               	xorwf	TxLoRaWan@i& (0+255),w,b
  6987  00152C  A4D8               	btfss	status,2,c
  6988  00152E  D010               	goto	l2074
  6989                           
  6990                           ; BSR set to: 1
  6991                           ;LoRaWanCore.c: 169: if(retornaDado(1,3) == 1){
  6992  001530  0E03               	movlw	3
  6993  001532  0100               	movlb	0	; () banked
  6994  001534  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  6995  001536  0E01               	movlw	1
  6996  001538  EC75  F024         	call	_retornaDado
  6997  00153C  06E8               	decf	wreg,f,c
  6998  00153E  B4D8               	btfsc	status,2,c
  6999  001540  D114               	goto	l2042
  7000                           
  7001                           ;LoRaWanCore.c: 171: else if(retornaDado(5,3) == 1){
  7002                           
  7003                           ;LoRaWanCore.c: 170: continue;}
  7004  001542  0E03               	movlw	3
  7005  001544  0100               	movlb	0	; () banked
  7006  001546  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7007  001548  0E05               	movlw	5
  7008  00154A  EC75  F024         	call	_retornaDado
  7009  00154E  D788               	goto	L4
  7010  001550                     l2074:
  7011                           
  7012                           ;LoRaWanCore.c: 173: else if (i == 10){
  7013  001550  0E0A               	movlw	10
  7014  001552  0101               	movlb	1	; () banked
  7015  001554  19EC               	xorwf	TxLoRaWan@i& (0+255),w,b
  7016  001556  A4D8               	btfss	status,2,c
  7017  001558  D019               	goto	l2079
  7018                           
  7019                           ; BSR set to: 1
  7020                           ;LoRaWanCore.c: 174: if(retornaDado(1,3) == 1){
  7021  00155A  0E03               	movlw	3
  7022  00155C  0100               	movlb	0	; () banked
  7023  00155E  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7024  001560  0E01               	movlw	1
  7025  001562  EC75  F024         	call	_retornaDado
  7026  001566  06E8               	decf	wreg,f,c
  7027  001568  B4D8               	btfsc	status,2,c
  7028  00156A  D0FF               	goto	l2042
  7029                           
  7030                           ;LoRaWanCore.c: 176: else if((retornaDado(5,2) == 1) && (retornaDado(5,3) == 1)){
  7031                           
  7032                           ;LoRaWanCore.c: 175: continue;}
  7033  00156C  0E02               	movlw	2
  7034  00156E  0100               	movlb	0	; () banked
  7035  001570  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7036  001572  0E05               	movlw	5
  7037  001574  EC75  F024         	call	_retornaDado
  7038  001578  06E8               	decf	wreg,f,c
  7039  00157A  A4D8               	btfss	status,2,c
  7040  00157C  D0D1               	goto	l2122
  7041  00157E  0E03               	movlw	3
  7042  001580  0100               	movlb	0	; () banked
  7043  001582  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7044  001584  0E05               	movlw	5
  7045  001586  EC75  F024         	call	_retornaDado
  7046  00158A  D76A               	goto	L4
  7047  00158C                     l2079:
  7048                           
  7049                           ;LoRaWanCore.c: 178: else if (i == 9 && retornaDado(1,3) == 1)
  7050  00158C  0E09               	movlw	9
  7051  00158E  0101               	movlb	1	; () banked
  7052  001590  19EC               	xorwf	TxLoRaWan@i& (0+255),w,b
  7053  001592  A4D8               	btfss	status,2,c
  7054  001594  D009               	goto	l2084
  7055                           
  7056                           ; BSR set to: 1
  7057  001596  0E03               	movlw	3
  7058  001598  0100               	movlb	0	; () banked
  7059  00159A  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7060  00159C  0E01               	movlw	1
  7061  00159E  EC75  F024         	call	_retornaDado
  7062  0015A2  06E8               	decf	wreg,f,c
  7063  0015A4  B4D8               	btfsc	status,2,c
  7064  0015A6  D0E1               	goto	l2042
  7065  0015A8                     l2084:
  7066                           
  7067                           ;LoRaWanCore.c: 181: else if (i == 16){
  7068  0015A8  0E10               	movlw	16
  7069  0015AA  0101               	movlb	1	; () banked
  7070  0015AC  19EC               	xorwf	TxLoRaWan@i& (0+255),w,b
  7071  0015AE  A4D8               	btfss	status,2,c
  7072  0015B0  D019               	goto	l2086
  7073                           
  7074                           ; BSR set to: 1
  7075                           ;LoRaWanCore.c: 182: if(retornaDado(1,4) == 1){
  7076  0015B2  0E04               	movlw	4
  7077  0015B4  0100               	movlb	0	; () banked
  7078  0015B6  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7079  0015B8  0E01               	movlw	1
  7080  0015BA  EC75  F024         	call	_retornaDado
  7081  0015BE  06E8               	decf	wreg,f,c
  7082  0015C0  B4D8               	btfsc	status,2,c
  7083  0015C2  D0D3               	goto	l2042
  7084                           
  7085                           ;LoRaWanCore.c: 184: else if((retornaDado(5,4) == 1) || (retornaDado(5,5) == 1)){
  7086                           
  7087                           ;LoRaWanCore.c: 183: continue;}
  7088  0015C4  0E04               	movlw	4
  7089  0015C6  0100               	movlb	0	; () banked
  7090  0015C8  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7091  0015CA  0E05               	movlw	5
  7092  0015CC  EC75  F024         	call	_retornaDado
  7093  0015D0  06E8               	decf	wreg,f,c
  7094  0015D2  B4D8               	btfsc	status,2,c
  7095  0015D4  D0CA               	goto	l2042
  7096  0015D6  0E05               	movlw	5
  7097  0015D8  0100               	movlb	0	; () banked
  7098  0015DA  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7099  0015DC  0E05               	movlw	5
  7100  0015DE  EC75  F024         	call	_retornaDado
  7101  0015E2  D73E               	goto	L4
  7102  0015E4                     l2086:
  7103                           
  7104                           ;LoRaWanCore.c: 186: else if (i == 15){
  7105  0015E4  0E0F               	movlw	15
  7106  0015E6  0101               	movlb	1	; () banked
  7107  0015E8  19EC               	xorwf	TxLoRaWan@i& (0+255),w,b
  7108  0015EA  A4D8               	btfss	status,2,c
  7109  0015EC  D010               	goto	l2093
  7110                           
  7111                           ; BSR set to: 1
  7112                           ;LoRaWanCore.c: 187: if(retornaDado(1,4) == 1){
  7113  0015EE  0E04               	movlw	4
  7114  0015F0  0100               	movlb	0	; () banked
  7115  0015F2  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7116  0015F4  0E01               	movlw	1
  7117  0015F6  EC75  F024         	call	_retornaDado
  7118  0015FA  06E8               	decf	wreg,f,c
  7119  0015FC  B4D8               	btfsc	status,2,c
  7120  0015FE  D0B5               	goto	l2042
  7121                           
  7122                           ;LoRaWanCore.c: 189: else if(retornaDado(5,5) == 1){
  7123                           
  7124                           ;LoRaWanCore.c: 188: continue;}
  7125  001600  0E05               	movlw	5
  7126  001602  0100               	movlb	0	; () banked
  7127  001604  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7128  001606  0E05               	movlw	5
  7129  001608  EC75  F024         	call	_retornaDado
  7130  00160C  D729               	goto	L4
  7131  00160E                     l2093:
  7132                           
  7133                           ;LoRaWanCore.c: 191: else if (i == 14){
  7134  00160E  0E0E               	movlw	14
  7135  001610  0101               	movlb	1	; () banked
  7136  001612  19EC               	xorwf	TxLoRaWan@i& (0+255),w,b
  7137  001614  A4D8               	btfss	status,2,c
  7138  001616  D019               	goto	l2098
  7139                           
  7140                           ; BSR set to: 1
  7141                           ;LoRaWanCore.c: 192: if(retornaDado(1,4) == 1){
  7142  001618  0E04               	movlw	4
  7143  00161A  0100               	movlb	0	; () banked
  7144  00161C  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7145  00161E  0E01               	movlw	1
  7146  001620  EC75  F024         	call	_retornaDado
  7147  001624  06E8               	decf	wreg,f,c
  7148  001626  B4D8               	btfsc	status,2,c
  7149  001628  D0A0               	goto	l2042
  7150                           
  7151                           ;LoRaWanCore.c: 194: else if((retornaDado(5,4) == 1) && (retornaDado(5,5) == 1)){
  7152                           
  7153                           ;LoRaWanCore.c: 193: continue;}
  7154  00162A  0E04               	movlw	4
  7155  00162C  0100               	movlb	0	; () banked
  7156  00162E  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7157  001630  0E05               	movlw	5
  7158  001632  EC75  F024         	call	_retornaDado
  7159  001636  06E8               	decf	wreg,f,c
  7160  001638  A4D8               	btfss	status,2,c
  7161  00163A  D072               	goto	l2122
  7162  00163C  0E05               	movlw	5
  7163  00163E  0100               	movlb	0	; () banked
  7164  001640  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7165  001642  0E05               	movlw	5
  7166  001644  EC75  F024         	call	_retornaDado
  7167  001648  D70B               	goto	L4
  7168  00164A                     l2098:
  7169                           
  7170                           ;LoRaWanCore.c: 196: else if (i == 13 && retornaDado(1,4) == 1)
  7171  00164A  0E0D               	movlw	13
  7172  00164C  0101               	movlb	1	; () banked
  7173  00164E  19EC               	xorwf	TxLoRaWan@i& (0+255),w,b
  7174  001650  A4D8               	btfss	status,2,c
  7175  001652  D009               	goto	l2103
  7176                           
  7177                           ; BSR set to: 1
  7178  001654  0E04               	movlw	4
  7179  001656  0100               	movlb	0	; () banked
  7180  001658  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7181  00165A  0E01               	movlw	1
  7182  00165C  EC75  F024         	call	_retornaDado
  7183  001660  06E8               	decf	wreg,f,c
  7184  001662  B4D8               	btfsc	status,2,c
  7185  001664  D082               	goto	l2042
  7186  001666                     l2103:
  7187                           
  7188                           ;LoRaWanCore.c: 199: else if (i == 20){
  7189  001666  0E14               	movlw	20
  7190  001668  0101               	movlb	1	; () banked
  7191  00166A  19EC               	xorwf	TxLoRaWan@i& (0+255),w,b
  7192  00166C  A4D8               	btfss	status,2,c
  7193  00166E  D019               	goto	l2105
  7194                           
  7195                           ; BSR set to: 1
  7196                           ;LoRaWanCore.c: 200: if(retornaDado(1,5) == 1){
  7197  001670  0E05               	movlw	5
  7198  001672  0100               	movlb	0	; () banked
  7199  001674  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7200  001676  0E01               	movlw	1
  7201  001678  EC75  F024         	call	_retornaDado
  7202  00167C  06E8               	decf	wreg,f,c
  7203  00167E  B4D8               	btfsc	status,2,c
  7204  001680  D074               	goto	l2042
  7205                           
  7206                           ;LoRaWanCore.c: 202: else if((retornaDado(5,6) == 1) || (retornaDado(5,7) == 1)){
  7207                           
  7208                           ;LoRaWanCore.c: 201: continue;}
  7209  001682  0E06               	movlw	6
  7210  001684  0100               	movlb	0	; () banked
  7211  001686  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7212  001688  0E05               	movlw	5
  7213  00168A  EC75  F024         	call	_retornaDado
  7214  00168E  06E8               	decf	wreg,f,c
  7215  001690  B4D8               	btfsc	status,2,c
  7216  001692  D06B               	goto	l2042
  7217  001694  0E07               	movlw	7
  7218  001696  0100               	movlb	0	; () banked
  7219  001698  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7220  00169A  0E05               	movlw	5
  7221  00169C  EC75  F024         	call	_retornaDado
  7222  0016A0  D6DF               	goto	L4
  7223  0016A2                     l2105:
  7224                           
  7225                           ;LoRaWanCore.c: 204: else if (i == 19){
  7226  0016A2  0E13               	movlw	19
  7227  0016A4  0101               	movlb	1	; () banked
  7228  0016A6  19EC               	xorwf	TxLoRaWan@i& (0+255),w,b
  7229  0016A8  A4D8               	btfss	status,2,c
  7230  0016AA  D010               	goto	l2112
  7231                           
  7232                           ; BSR set to: 1
  7233                           ;LoRaWanCore.c: 205: if(retornaDado(1,5) == 1){
  7234  0016AC  0E05               	movlw	5
  7235  0016AE  0100               	movlb	0	; () banked
  7236  0016B0  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7237  0016B2  0E01               	movlw	1
  7238  0016B4  EC75  F024         	call	_retornaDado
  7239  0016B8  06E8               	decf	wreg,f,c
  7240  0016BA  B4D8               	btfsc	status,2,c
  7241  0016BC  D056               	goto	l2042
  7242                           
  7243                           ;LoRaWanCore.c: 207: else if(retornaDado(5,7) == 1){
  7244                           
  7245                           ;LoRaWanCore.c: 206: continue;}
  7246  0016BE  0E07               	movlw	7
  7247  0016C0  0100               	movlb	0	; () banked
  7248  0016C2  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7249  0016C4  0E05               	movlw	5
  7250  0016C6  EC75  F024         	call	_retornaDado
  7251  0016CA  D6CA               	goto	L4
  7252  0016CC                     l2112:
  7253                           
  7254                           ;LoRaWanCore.c: 209: else if (i == 18){
  7255  0016CC  0E12               	movlw	18
  7256  0016CE  0101               	movlb	1	; () banked
  7257  0016D0  19EC               	xorwf	TxLoRaWan@i& (0+255),w,b
  7258  0016D2  A4D8               	btfss	status,2,c
  7259  0016D4  D019               	goto	l2117
  7260                           
  7261                           ; BSR set to: 1
  7262                           ;LoRaWanCore.c: 210: if(retornaDado(1,5) == 1){
  7263  0016D6  0E05               	movlw	5
  7264  0016D8  0100               	movlb	0	; () banked
  7265  0016DA  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7266  0016DC  0E01               	movlw	1
  7267  0016DE  EC75  F024         	call	_retornaDado
  7268  0016E2  06E8               	decf	wreg,f,c
  7269  0016E4  B4D8               	btfsc	status,2,c
  7270  0016E6  D041               	goto	l2042
  7271                           
  7272                           ;LoRaWanCore.c: 212: else if((retornaDado(5,6) == 1) && (retornaDado(5,7) == 1)){
  7273                           
  7274                           ;LoRaWanCore.c: 211: continue;}
  7275  0016E8  0E06               	movlw	6
  7276  0016EA  0100               	movlb	0	; () banked
  7277  0016EC  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7278  0016EE  0E05               	movlw	5
  7279  0016F0  EC75  F024         	call	_retornaDado
  7280  0016F4  06E8               	decf	wreg,f,c
  7281  0016F6  A4D8               	btfss	status,2,c
  7282  0016F8  D013               	goto	l2122
  7283  0016FA  0E07               	movlw	7
  7284  0016FC  0100               	movlb	0	; () banked
  7285  0016FE  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7286  001700  0E05               	movlw	5
  7287  001702  EC75  F024         	call	_retornaDado
  7288  001706  D6AC               	goto	L4
  7289  001708                     l2117:
  7290                           
  7291                           ;LoRaWanCore.c: 214: else if (i == 17 && retornaDado(1,5) == 1)
  7292  001708  0E11               	movlw	17
  7293  00170A  0101               	movlb	1	; () banked
  7294  00170C  19EC               	xorwf	TxLoRaWan@i& (0+255),w,b
  7295  00170E  A4D8               	btfss	status,2,c
  7296  001710  D007               	goto	l2122
  7297                           
  7298                           ; BSR set to: 1
  7299  001712  0E05               	movlw	5
  7300  001714  0100               	movlb	0	; () banked
  7301  001716  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7302  001718  0E01               	movlw	1
  7303  00171A  EC75  F024         	call	_retornaDado
  7304  00171E  D6A0               	goto	L4
  7305  001720                     l2122:
  7306                           
  7307                           ;LoRaWanCore.c: 217: sprintf(hex, "%02X", data[i]);
  7308  001720  0EE8               	movlw	low TxLoRaWan@hex
  7309  001722  0100               	movlb	0	; () banked
  7310  001724  6FBF               	movwf	sprintf@sp& (0+255),b
  7311  001726  0E01               	movlw	high TxLoRaWan@hex
  7312  001728  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  7313  00172A  0EF0               	movlw	low STR_30
  7314  00172C  6FC1               	movwf	sprintf@f& (0+255),b
  7315  00172E  0E7F               	movlw	high STR_30
  7316  001730  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  7317  001732  0101               	movlb	1	; () banked
  7318  001734  51EC               	movf	TxLoRaWan@i& (0+255),w,b
  7319  001736  0D01               	mullw	1
  7320  001738  50F3               	movf	prodl,w,c
  7321  00173A  0100               	movlb	0	; () banked
  7322  00173C  25F2               	addwf	TxLoRaWan@data& (0+255),w,b
  7323  00173E  6ED9               	movwf	fsr2l,c
  7324  001740  50F4               	movf	prodh,w,c
  7325  001742  21F3               	addwfc	(TxLoRaWan@data+1)& (0+255),w,b
  7326  001744  6EDA               	movwf	fsr2h,c
  7327  001746  50DF               	movf	indf2,w,c
  7328  001748  6FF5               	movwf	??_TxLoRaWan& (0+255),b
  7329  00174A  51F5               	movf	??_TxLoRaWan& (0+255),w,b
  7330  00174C  6FC3               	movwf	(?_sprintf+4)& (0+255),b
  7331  00174E  6BC4               	clrf	(?_sprintf+5)& (0+255),b
  7332  001750  EC09  F000         	call	_sprintf	;wreg free
  7333                           
  7334                           ;LoRaWanCore.c: 218: strcat(comando,hex);
  7335  001754  0E1E               	movlw	low TxLoRaWan@comando
  7336  001756  0100               	movlb	0	; () banked
  7337  001758  6F60               	movwf	strcat@to& (0+255),b
  7338  00175A  0E01               	movlw	high TxLoRaWan@comando
  7339  00175C  6F61               	movwf	(strcat@to+1)& (0+255),b
  7340  00175E  0EE8               	movlw	low TxLoRaWan@hex
  7341  001760  6F62               	movwf	strcat@from& (0+255),b
  7342  001762  0E01               	movlw	high TxLoRaWan@hex
  7343  001764  6F63               	movwf	(strcat@from+1)& (0+255),b
  7344  001766  ECD1  F025         	call	_strcat	;wreg free
  7345  00176A                     l2042:
  7346  00176A  0101               	movlb	1	; () banked
  7347  00176C  2BEC               	incf	TxLoRaWan@i& (0+255),f,b
  7348  00176E                     l2037:
  7349                           
  7350                           ; BSR set to: 1
  7351                           
  7352                           ; BSR set to: 1
  7353  00176E  0100               	movlb	0	; () banked
  7354  001770  51F4               	movf	TxLoRaWan@tamData& (0+255),w,b
  7355  001772  0101               	movlb	1	; () banked
  7356  001774  5DEC               	subwf	TxLoRaWan@i& (0+255),w,b
  7357  001776  A0D8               	btfss	status,0,c
  7358  001778  D634               	goto	l2038
  7359  00177A                     u9840:
  7360                           
  7361                           ;LoRaWanCore.c: 223: {
  7362                           ;LoRaWanCore.c: 224: uint8_t status=enviaComando(comando,0);
  7363                           
  7364                           ; BSR set to: 1
  7365                           
  7366                           ;LoRaWanCore.c: 219: }
  7367                           ;LoRaWanCore.c: 222: while (1)
  7368                           
  7369                           ; BSR set to: 1
  7370  00177A  0E1E               	movlw	low TxLoRaWan@comando
  7371  00177C  0100               	movlb	0	; () banked
  7372  00177E  6F7C               	movwf	enviaComando@cmd& (0+255),b
  7373  001780  0E01               	movlw	high TxLoRaWan@comando
  7374  001782  6F7D               	movwf	(enviaComando@cmd+1)& (0+255),b
  7375  001784  0E00               	movlw	0
  7376  001786  6F7E               	movwf	enviaComando@tipoComando& (0+255),b
  7377  001788  EC4A  F019         	call	_enviaComando	;wreg free
  7378  00178C  0101               	movlb	1	; () banked
  7379  00178E  6FE7               	movwf	TxLoRaWan@status& (0+255),b
  7380                           
  7381                           ;LoRaWanCore.c: 225: switch (status)
  7382  001790  D015               	goto	l2125
  7383  001792                     
  7384                           ; BSR set to: 1
  7385                           ;LoRaWanCore.c: 228: return (parseLoRaWan()==9);
  7386                           
  7387                           ; BSR set to: 1
  7388  001792  EC53  F01F         	call	_parseLoRaWan	;wreg free
  7389  001796  0A09               	xorlw	9
  7390  001798  A4D8               	btfss	status,2,c
  7391  00179A  D002               	goto	u9850
  7392  00179C  0E01               	movlw	1
  7393  00179E  0012               	return	
  7394  0017A0                     u9850:
  7395  0017A0  0E00               	movlw	0
  7396  0017A2  0012               	return	
  7397  0017A4                     
  7398                           ;LoRaWanCore.c: 230: case 5:
  7399                           ;LoRaWanCore.c: 231: {
  7400                           ;LoRaWanCore.c: 232: if (!JoinLoRaWan())
  7401  0017A4  EC39  F027         	call	_JoinLoRaWan	;wreg free
  7402  0017A8  D002               	goto	L5
  7403  0017AA                     
  7404                           ;LoRaWanCore.c: 237: {
  7405                           ;LoRaWanCore.c: 238: if (!ResetModuloLoRaWan())
  7406  0017AA  EC2E  F028         	call	_ResetModuloLoRaWan	;wreg free
  7407  0017AE                     L5:
  7408  0017AE  0900               	iorlw	0
  7409  0017B0  A4D8               	btfss	status,2,c
  7410  0017B2  D7E3               	goto	u9840
  7411                           
  7412                           ;LoRaWanCore.c: 239: return 0;
  7413  0017B4  0E00               	movlw	0
  7414  0017B6  0012               	return	
  7415  0017B8                     
  7416                           ;LoRaWanCore.c: 244: return 0;
  7417  0017B8  0E00               	movlw	0
  7418  0017BA  0012               	return	
  7419  0017BC                     l2125:
  7420  0017BC  0101               	movlb	1	; () banked
  7421  0017BE  51E7               	movf	TxLoRaWan@status& (0+255),w,b
  7422                           
  7423                           ; Switch size 1, requested type "space"
  7424                           ; Number of cases is 4, Range of values is 0 to 6
  7425                           ; switch strategies available:
  7426                           ; Name         Instructions Cycles
  7427                           ; simple_byte           13     7 (average)
  7428                           ;	Chosen strategy is simple_byte
  7429  0017C0  0A00               	xorlw	0	; case 0
  7430  0017C2  B4D8               	btfsc	status,2,c
  7431  0017C4  D7E6               	goto	l2126
  7432  0017C6  0A02               	xorlw	2	; case 2
  7433  0017C8  B4D8               	btfsc	status,2,c
  7434  0017CA  D7EC               	goto	l2128
  7435  0017CC  0A07               	xorlw	7	; case 5
  7436  0017CE  B4D8               	btfsc	status,2,c
  7437  0017D0  D7E9               	goto	l2128
  7438  0017D2  0A03               	xorlw	3	; case 6
  7439  0017D4  B4D8               	btfsc	status,2,c
  7440  0017D6  D7E9               	goto	l2132
  7441  0017D8  D7EF               	goto	l2134
  7442  0017DA                     __end_of_TxLoRaWan:
  7443                           	opt stack 0
  7444                           tblptru	equ	0xFF8
  7445                           tblptrh	equ	0xFF7
  7446                           tblptrl	equ	0xFF6
  7447                           tablat	equ	0xFF5
  7448                           prodh	equ	0xFF4
  7449                           prodl	equ	0xFF3
  7450                           intcon	equ	0xFF2
  7451                           postinc0	equ	0xFEE
  7452                           wreg	equ	0xFE8
  7453                           indf1	equ	0xFE7
  7454                           postdec1	equ	0xFE5
  7455                           fsr1h	equ	0xFE2
  7456                           fsr1l	equ	0xFE1
  7457                           indf2	equ	0xFDF
  7458                           postinc2	equ	0xFDE
  7459                           postdec2	equ	0xFDD
  7460                           plusw2	equ	0xFDB
  7461                           fsr2h	equ	0xFDA
  7462                           fsr2l	equ	0xFD9
  7463                           status	equ	0xFD8
  7464                           
  7465 ;; *************** function _strcat *****************
  7466 ;; Defined at:
  7467 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strcat.c"
  7468 ;; Parameters:    Size  Location     Type
  7469 ;;  to              2    0[BANK0 ] PTR unsigned char 
  7470 ;;		 -> TxLoRaWan@comando(200), frameBuffer(200), 
  7471 ;;  from            2    2[BANK0 ] PTR const unsigned char 
  7472 ;;		 -> TxLoRaWan@hex(4), addSensorFloat@f(30), addSensorInt@f(30), addSensorStr@f(30), 
  7473 ;; Auto vars:     Size  Location     Type
  7474 ;;  cp              2    4[BANK0 ] PTR unsigned char 
  7475 ;;		 -> TxLoRaWan@comando(200), frameBuffer(200), 
  7476 ;; Return value:  Size  Location     Type
  7477 ;;                  2    0[BANK0 ] PTR unsigned char 
  7478 ;; Registers used:
  7479 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7480 ;; Tracked objects:
  7481 ;;		On entry : 0/0
  7482 ;;		On exit  : 0/0
  7483 ;;		Unchanged: 0/0
  7484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7485 ;;      Params:         0       4       0       0       0       0       0       0       0
  7486 ;;      Locals:         0       2       0       0       0       0       0       0       0
  7487 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7488 ;;      Totals:         0       6       0       0       0       0       0       0       0
  7489 ;;Total ram usage:        6 bytes
  7490 ;; Hardware stack levels used:    1
  7491 ;; Hardware stack levels required when called:   10
  7492 ;; This function calls:
  7493 ;;		Nothing
  7494 ;; This function is called by:
  7495 ;;		_TxLoRaWan
  7496 ;;		_addSensorStr
  7497 ;;		_addSensorInt
  7498 ;;		_addSensorFloat
  7499 ;; This function uses a non-reentrant model
  7500 ;;
  7501                           
  7502                           	psect	text19
  7503  004BA2                     __ptext19:
  7504                           	opt stack 0
  7505  004BA2                     _strcat:
  7506                           	opt stack 19
  7507                           
  7508                           ;incstack = 0
  7509  004BA2  C060  F064         	movff	strcat@to,strcat@cp
  7510  004BA6  C061  F065         	movff	strcat@to+1,strcat@cp+1
  7511  004BAA  D003               	goto	l3055
  7512  004BAC  0100               	movlb	0	; () banked
  7513  004BAE  4B64               	infsnz	strcat@cp& (0+255),f,b
  7514  004BB0  2B65               	incf	(strcat@cp+1)& (0+255),f,b
  7515  004BB2                     l3055:
  7516                           
  7517                           ; BSR set to: 0
  7518  004BB2  C064  FFD9         	movff	strcat@cp,fsr2l
  7519  004BB6  C065  FFDA         	movff	strcat@cp+1,fsr2h
  7520  004BBA  50DF               	movf	indf2,w,c
  7521  004BBC  B4D8               	btfsc	status,2,c
  7522  004BBE  D006               	goto	l3058
  7523  004BC0  D7F5               	goto	l3056
  7524  004BC2  0100               	movlb	0	; () banked
  7525  004BC4  4B64               	infsnz	strcat@cp& (0+255),f,b
  7526  004BC6  2B65               	incf	(strcat@cp+1)& (0+255),f,b
  7527  004BC8  4B62               	infsnz	strcat@from& (0+255),f,b
  7528  004BCA  2B63               	incf	(strcat@from+1)& (0+255),f,b
  7529  004BCC                     l3058:
  7530                           
  7531                           ; BSR set to: 0
  7532  004BCC  C062  FFD9         	movff	strcat@from,fsr2l
  7533  004BD0  C063  FFDA         	movff	strcat@from+1,fsr2h
  7534  004BD4  C064  FFE1         	movff	strcat@cp,fsr1l
  7535  004BD8  C065  FFE2         	movff	strcat@cp+1,fsr1h
  7536  004BDC  CFDF FFE7          	movff	indf2,indf1
  7537  004BE0  50E7               	movf	indf1,w,c
  7538  004BE2  B4D8               	btfsc	status,2,c
  7539  004BE4  0012               	return	
  7540  004BE6  D7ED               	goto	l3059
  7541  004BE8                     __end_of_strcat:
  7542                           	opt stack 0
  7543                           tblptru	equ	0xFF8
  7544                           tblptrh	equ	0xFF7
  7545                           tblptrl	equ	0xFF6
  7546                           tablat	equ	0xFF5
  7547                           prodh	equ	0xFF4
  7548                           prodl	equ	0xFF3
  7549                           intcon	equ	0xFF2
  7550                           postinc0	equ	0xFEE
  7551                           wreg	equ	0xFE8
  7552                           indf1	equ	0xFE7
  7553                           postdec1	equ	0xFE5
  7554                           fsr1h	equ	0xFE2
  7555                           fsr1l	equ	0xFE1
  7556                           indf2	equ	0xFDF
  7557                           postinc2	equ	0xFDE
  7558                           postdec2	equ	0xFDD
  7559                           plusw2	equ	0xFDB
  7560                           fsr2h	equ	0xFDA
  7561                           fsr2l	equ	0xFD9
  7562                           status	equ	0xFD8
  7563                           
  7564 ;; *************** function _retornaDado *****************
  7565 ;; Defined at:
  7566 ;;		line 46 in file "LoRaWanCore.c"
  7567 ;; Parameters:    Size  Location     Type
  7568 ;;  dadoByte        1    wreg     unsigned char 
  7569 ;;  dadoBit         1    0[BANK0 ] unsigned char 
  7570 ;; Auto vars:     Size  Location     Type
  7571 ;;  dadoByte        1    4[BANK0 ] unsigned char 
  7572 ;;  selectDado      1    3[BANK0 ] unsigned char 
  7573 ;; Return value:  Size  Location     Type
  7574 ;;                  1    wreg      unsigned char 
  7575 ;; Registers used:
  7576 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7577 ;; Tracked objects:
  7578 ;;		On entry : 0/0
  7579 ;;		On exit  : 0/0
  7580 ;;		Unchanged: 0/0
  7581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7582 ;;      Params:         0       1       0       0       0       0       0       0       0
  7583 ;;      Locals:         0       2       0       0       0       0       0       0       0
  7584 ;;      Temps:          0       2       0       0       0       0       0       0       0
  7585 ;;      Totals:         0       5       0       0       0       0       0       0       0
  7586 ;;Total ram usage:        5 bytes
  7587 ;; Hardware stack levels used:    1
  7588 ;; Hardware stack levels required when called:   10
  7589 ;; This function calls:
  7590 ;;		Nothing
  7591 ;; This function is called by:
  7592 ;;		_main
  7593 ;;		_TxLoRaWan
  7594 ;; This function uses a non-reentrant model
  7595 ;;
  7596                           
  7597                           	psect	text20
  7598  0048EA                     __ptext20:
  7599                           	opt stack 0
  7600  0048EA                     _retornaDado:
  7601                           	opt stack 20
  7602                           
  7603                           ;incstack = 0
  7604                           ;retornaDado@dadoByte stored from wreg
  7605  0048EA  0100               	movlb	0	; () banked
  7606  0048EC  6F64               	movwf	retornaDado@dadoByte& (0+255),b
  7607                           
  7608                           ;LoRaWanCore.c: 47: uint8_t selectDado;
  7609                           ;LoRaWanCore.c: 48: if (dadoBit){
  7610  0048EE  0100               	movlb	0	; () banked
  7611  0048F0  5160               	movf	retornaDado@dadoBit& (0+255),w,b
  7612  0048F2  B4D8               	btfsc	status,2,c
  7613  0048F4  D019               	goto	l2000
  7614                           
  7615                           ; BSR set to: 0
  7616                           ;LoRaWanCore.c: 49: selectDado = (dadosRecebidos[dadoByte].data >> dadoBit) & 1;
  7617  0048F6  C060  F061         	movff	retornaDado@dadoBit,??_retornaDado
  7618  0048FA  5164               	movf	retornaDado@dadoByte& (0+255),w,b
  7619  0048FC  0D02               	mullw	2
  7620  0048FE  0E01               	movlw	1
  7621  004900  26F3               	addwf	prodl,f,c
  7622  004902  0E00               	movlw	0
  7623  004904  22F4               	addwfc	prodh,f,c
  7624  004906  0E00               	movlw	low _dadosRecebidos
  7625  004908  24F3               	addwf	prodl,w,c
  7626  00490A  6ED9               	movwf	fsr2l,c
  7627  00490C  0E03               	movlw	high _dadosRecebidos
  7628  00490E  20F4               	addwfc	prodh,w,c
  7629  004910  6EDA               	movwf	fsr2h,c
  7630  004912  50DF               	movf	indf2,w,c
  7631  004914  6F62               	movwf	(??_retornaDado+1)& (0+255),b
  7632  004916  2B61               	incf	??_retornaDado& (0+255),f,b
  7633  004918  D002               	goto	u7634
  7634  00491A                     u7635:
  7635  00491A  90D8               	bcf	status,0,c
  7636  00491C  3362               	rrcf	(??_retornaDado+1)& (0+255),f,b
  7637  00491E                     u7634:
  7638  00491E  2F61               	decfsz	??_retornaDado& (0+255),f,b
  7639  004920  D7FC               	goto	u7635
  7640  004922  0100               	movlb	0	; () banked
  7641  004924  5162               	movf	(??_retornaDado+1)& (0+255),w,b
  7642  004926  D00D               	goto	L6
  7643  004928                     l2000:
  7644                           
  7645                           ; BSR set to: 0
  7646                           ;LoRaWanCore.c: 51: selectDado = (dadosRecebidos[dadoByte].data) & 1;}
  7647                           
  7648                           ; BSR set to: 0
  7649  004928  5164               	movf	retornaDado@dadoByte& (0+255),w,b
  7650  00492A  0D02               	mullw	2
  7651  00492C  0E01               	movlw	1
  7652  00492E  26F3               	addwf	prodl,f,c
  7653  004930  0E00               	movlw	0
  7654  004932  22F4               	addwfc	prodh,f,c
  7655  004934  0E00               	movlw	low _dadosRecebidos
  7656  004936  24F3               	addwf	prodl,w,c
  7657  004938  6ED9               	movwf	fsr2l,c
  7658  00493A  0E03               	movlw	high _dadosRecebidos
  7659  00493C  20F4               	addwfc	prodh,w,c
  7660  00493E  6EDA               	movwf	fsr2h,c
  7661  004940  50DF               	movf	indf2,w,c
  7662  004942                     L6:
  7663  004942  0B01               	andlw	1
  7664  004944  6F63               	movwf	retornaDado@selectDado& (0+255),b
  7665                           
  7666                           ; BSR set to: 0
  7667                           ;LoRaWanCore.c: 52: return selectDado;
  7668                           
  7669                           ; BSR set to: 0
  7670  004946  5163               	movf	retornaDado@selectDado& (0+255),w,b
  7671  004948  0012               	return	
  7672  00494A                     __end_of_retornaDado:
  7673                           	opt stack 0
  7674                           tblptru	equ	0xFF8
  7675                           tblptrh	equ	0xFF7
  7676                           tblptrl	equ	0xFF6
  7677                           tablat	equ	0xFF5
  7678                           prodh	equ	0xFF4
  7679                           prodl	equ	0xFF3
  7680                           intcon	equ	0xFF2
  7681                           postinc0	equ	0xFEE
  7682                           wreg	equ	0xFE8
  7683                           indf1	equ	0xFE7
  7684                           postdec1	equ	0xFE5
  7685                           fsr1h	equ	0xFE2
  7686                           fsr1l	equ	0xFE1
  7687                           indf2	equ	0xFDF
  7688                           postinc2	equ	0xFDE
  7689                           postdec2	equ	0xFDD
  7690                           plusw2	equ	0xFDB
  7691                           fsr2h	equ	0xFDA
  7692                           fsr2l	equ	0xFD9
  7693                           status	equ	0xFD8
  7694                           
  7695 ;; *************** function _ResetModuloLoRaWan *****************
  7696 ;; Defined at:
  7697 ;;		line 54 in file "LoRaWanCore.c"
  7698 ;; Parameters:    Size  Location     Type
  7699 ;;		None
  7700 ;; Auto vars:     Size  Location     Type
  7701 ;;  status          1   39[BANK0 ] unsigned char 
  7702 ;; Return value:  Size  Location     Type
  7703 ;;                  1    wreg      unsigned char 
  7704 ;; Registers used:
  7705 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7706 ;; Tracked objects:
  7707 ;;		On entry : 0/0
  7708 ;;		On exit  : 0/0
  7709 ;;		Unchanged: 0/0
  7710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7711 ;;      Params:         0       0       0       0       0       0       0       0       0
  7712 ;;      Locals:         0       1       0       0       0       0       0       0       0
  7713 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7714 ;;      Totals:         0       1       0       0       0       0       0       0       0
  7715 ;;Total ram usage:        1 bytes
  7716 ;; Hardware stack levels used:    1
  7717 ;; Hardware stack levels required when called:   13
  7718 ;; This function calls:
  7719 ;;		_enviaComando
  7720 ;; This function is called by:
  7721 ;;		_TxLoRaWan
  7722 ;; This function uses a non-reentrant model
  7723 ;;
  7724                           
  7725                           	psect	text21
  7726  00505C                     __ptext21:
  7727                           	opt stack 0
  7728  00505C                     _ResetModuloLoRaWan:
  7729                           	opt stack 16
  7730                           
  7731                           ;LoRaWanCore.c: 56: uint8_t status;
  7732                           ;LoRaWanCore.c: 58: status=enviaComando(SYS_RESET,1);
  7733                           
  7734                           ; BSR set to: 0
  7735                           ;incstack = 0
  7736  00505C  0E52               	movlw	low _SYS_RESET
  7737  00505E  0100               	movlb	0	; () banked
  7738  005060  6F7C               	movwf	enviaComando@cmd& (0+255),b
  7739  005062  0E7E               	movlw	high _SYS_RESET
  7740  005064  6F7D               	movwf	(enviaComando@cmd+1)& (0+255),b
  7741  005066  0E01               	movlw	1
  7742  005068  6F7E               	movwf	enviaComando@tipoComando& (0+255),b
  7743  00506A  EC4A  F019         	call	_enviaComando	;wreg free
  7744  00506E  0100               	movlb	0	; () banked
  7745  005070  6F87               	movwf	ResetModuloLoRaWan@status& (0+255),b
  7746                           
  7747                           ; BSR set to: 0
  7748                           ;LoRaWanCore.c: 59: return (status==15);
  7749  005072  0E0F               	movlw	15
  7750  005074  1987               	xorwf	ResetModuloLoRaWan@status& (0+255),w,b
  7751  005076  A4D8               	btfss	status,2,c
  7752  005078  D002               	goto	u8360
  7753  00507A  0E01               	movlw	1
  7754  00507C  0012               	return	
  7755  00507E                     u8360:
  7756  00507E  0E00               	movlw	0
  7757  005080  0012               	return	
  7758  005082                     __end_of_ResetModuloLoRaWan:
  7759                           	opt stack 0
  7760                           tblptru	equ	0xFF8
  7761                           tblptrh	equ	0xFF7
  7762                           tblptrl	equ	0xFF6
  7763                           tablat	equ	0xFF5
  7764                           prodh	equ	0xFF4
  7765                           prodl	equ	0xFF3
  7766                           intcon	equ	0xFF2
  7767                           postinc0	equ	0xFEE
  7768                           wreg	equ	0xFE8
  7769                           indf1	equ	0xFE7
  7770                           postdec1	equ	0xFE5
  7771                           fsr1h	equ	0xFE2
  7772                           fsr1l	equ	0xFE1
  7773                           indf2	equ	0xFDF
  7774                           postinc2	equ	0xFDE
  7775                           postdec2	equ	0xFDD
  7776                           plusw2	equ	0xFDB
  7777                           fsr2h	equ	0xFDA
  7778                           fsr2l	equ	0xFD9
  7779                           status	equ	0xFD8
  7780                           
  7781 ;; *************** function _JoinLoRaWan *****************
  7782 ;; Defined at:
  7783 ;;		line 62 in file "LoRaWanCore.c"
  7784 ;; Parameters:    Size  Location     Type
  7785 ;;		None
  7786 ;; Auto vars:     Size  Location     Type
  7787 ;;  status          1   39[BANK0 ] unsigned char 
  7788 ;; Return value:  Size  Location     Type
  7789 ;;                  1    wreg      unsigned char 
  7790 ;; Registers used:
  7791 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7792 ;; Tracked objects:
  7793 ;;		On entry : 0/0
  7794 ;;		On exit  : 0/0
  7795 ;;		Unchanged: 0/0
  7796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7797 ;;      Params:         0       0       0       0       0       0       0       0       0
  7798 ;;      Locals:         0       1       0       0       0       0       0       0       0
  7799 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7800 ;;      Totals:         0       1       0       0       0       0       0       0       0
  7801 ;;Total ram usage:        1 bytes
  7802 ;; Hardware stack levels used:    1
  7803 ;; Hardware stack levels required when called:   13
  7804 ;; This function calls:
  7805 ;;		_enviaComando
  7806 ;;		_parseLoRaWan
  7807 ;; This function is called by:
  7808 ;;		_TxLoRaWan
  7809 ;; This function uses a non-reentrant model
  7810 ;;
  7811                           
  7812                           	psect	text22
  7813  004E72                     __ptext22:
  7814                           	opt stack 0
  7815  004E72                     _JoinLoRaWan:
  7816                           	opt stack 16
  7817                           
  7818                           ;LoRaWanCore.c: 64: uint8_t status;
  7819                           ;LoRaWanCore.c: 66: status=enviaComando(MAC_JOIN_OTAA,0);
  7820                           
  7821                           ; BSR set to: 0
  7822                           ;incstack = 0
  7823  004E72  0E29               	movlw	low _MAC_JOIN_OTAA
  7824  004E74  0100               	movlb	0	; () banked
  7825  004E76  6F7C               	movwf	enviaComando@cmd& (0+255),b
  7826  004E78  0E7E               	movlw	high _MAC_JOIN_OTAA
  7827  004E7A  6F7D               	movwf	(enviaComando@cmd+1)& (0+255),b
  7828  004E7C  0E00               	movlw	0
  7829  004E7E  6F7E               	movwf	enviaComando@tipoComando& (0+255),b
  7830  004E80  EC4A  F019         	call	_enviaComando	;wreg free
  7831  004E84  0100               	movlb	0	; () banked
  7832  004E86  6F87               	movwf	JoinLoRaWan@status& (0+255),b
  7833                           
  7834                           ;LoRaWanCore.c: 67: switch (status)
  7835  004E88  D00B               	goto	l2008
  7836  004E8A                     
  7837                           ; BSR set to: 0
  7838                           ;LoRaWanCore.c: 70: return (parseLoRaWan()==0);
  7839                           
  7840                           ; BSR set to: 0
  7841  004E8A  EC53  F01F         	call	_parseLoRaWan	;wreg free
  7842  004E8E  0900               	iorlw	0
  7843  004E90  A4D8               	btfss	status,2,c
  7844  004E92  D002               	goto	u8380
  7845  004E94  0E01               	movlw	1
  7846  004E96  0012               	return	
  7847  004E98                     u8380:
  7848  004E98  0E00               	movlw	0
  7849  004E9A  0012               	return	
  7850  004E9C                     
  7851                           ;LoRaWanCore.c: 72: return 0;
  7852  004E9C  0E00               	movlw	0
  7853                           
  7854                           ;LoRaWanCore.c: 73: }
  7855  004E9E  0012               	return	
  7856  004EA0                     l2008:
  7857  004EA0  0100               	movlb	0	; () banked
  7858  004EA2  5187               	movf	JoinLoRaWan@status& (0+255),w,b
  7859                           
  7860                           ; Switch size 1, requested type "space"
  7861                           ; Number of cases is 1, Range of values is 0 to 0
  7862                           ; switch strategies available:
  7863                           ; Name         Instructions Cycles
  7864                           ; simple_byte            4     3 (average)
  7865                           ;	Chosen strategy is simple_byte
  7866  004EA4  0A00               	xorlw	0	; case 0
  7867  004EA6  B4D8               	btfsc	status,2,c
  7868  004EA8  D7F0               	goto	l2009
  7869  004EAA  D7F8               	goto	l2011
  7870  004EAC                     __end_of_JoinLoRaWan:
  7871                           	opt stack 0
  7872                           tblptru	equ	0xFF8
  7873                           tblptrh	equ	0xFF7
  7874                           tblptrl	equ	0xFF6
  7875                           tablat	equ	0xFF5
  7876                           prodh	equ	0xFF4
  7877                           prodl	equ	0xFF3
  7878                           intcon	equ	0xFF2
  7879                           postinc0	equ	0xFEE
  7880                           wreg	equ	0xFE8
  7881                           indf1	equ	0xFE7
  7882                           postdec1	equ	0xFE5
  7883                           fsr1h	equ	0xFE2
  7884                           fsr1l	equ	0xFE1
  7885                           indf2	equ	0xFDF
  7886                           postinc2	equ	0xFDE
  7887                           postdec2	equ	0xFDD
  7888                           plusw2	equ	0xFDB
  7889                           fsr2h	equ	0xFDA
  7890                           fsr2l	equ	0xFD9
  7891                           status	equ	0xFD8
  7892                           
  7893 ;; *************** function _SetSpreadingFactor *****************
  7894 ;; Defined at:
  7895 ;;		line 103 in file "LoRaWanCore.c"
  7896 ;; Parameters:    Size  Location     Type
  7897 ;;  sf              1    wreg     unsigned char 
  7898 ;; Auto vars:     Size  Location     Type
  7899 ;;  sf              1  231[BANK1 ] unsigned char 
  7900 ;;  comando       200   30[BANK1 ] unsigned char [200]
  7901 ;;  status          1  230[BANK1 ] unsigned char 
  7902 ;; Return value:  Size  Location     Type
  7903 ;;                  1    wreg      unsigned char 
  7904 ;; Registers used:
  7905 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7906 ;; Tracked objects:
  7907 ;;		On entry : 0/0
  7908 ;;		On exit  : 0/0
  7909 ;;		Unchanged: 0/0
  7910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7911 ;;      Params:         0       0       0       0       0       0       0       0       0
  7912 ;;      Locals:         0       0     202       0       0       0       0       0       0
  7913 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7914 ;;      Totals:         0       0     202       0       0       0       0       0       0
  7915 ;;Total ram usage:      202 bytes
  7916 ;; Hardware stack levels used:    1
  7917 ;; Hardware stack levels required when called:   14
  7918 ;; This function calls:
  7919 ;;		_enviaComando
  7920 ;;		_sprintf
  7921 ;; This function is called by:
  7922 ;;		_main
  7923 ;; This function uses a non-reentrant model
  7924 ;;
  7925                           
  7926                           	psect	text23
  7927  004D7E                     __ptext23:
  7928                           	opt stack 0
  7929  004D7E                     _SetSpreadingFactor:
  7930                           	opt stack 16
  7931                           
  7932                           ;incstack = 0
  7933                           ;SetSpreadingFactor@sf stored from wreg
  7934  004D7E  0101               	movlb	1	; () banked
  7935  004D80  6FE7               	movwf	SetSpreadingFactor@sf& (0+255),b
  7936                           
  7937                           ;LoRaWanCore.c: 104: char comando[200];
  7938                           ;LoRaWanCore.c: 106: sprintf(comando, "%s%d", MAC_SET_SF, sf);
  7939  004D82  0E1E               	movlw	low SetSpreadingFactor@comando
  7940  004D84  0100               	movlb	0	; () banked
  7941  004D86  6FBF               	movwf	sprintf@sp& (0+255),b
  7942  004D88  0E01               	movlw	high SetSpreadingFactor@comando
  7943  004D8A  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  7944  004D8C  0EF5               	movlw	low STR_25
  7945  004D8E  6FC1               	movwf	sprintf@f& (0+255),b
  7946  004D90  0E7F               	movlw	high STR_25
  7947  004D92  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  7948  004D94  0EFE               	movlw	low _MAC_SET_SF
  7949  004D96  6FC3               	movwf	(?_sprintf+4)& (0+255),b
  7950  004D98  0E7D               	movlw	high _MAC_SET_SF
  7951  004D9A  6FC4               	movwf	(?_sprintf+5)& (0+255),b
  7952  004D9C  C1E7  F0C5         	movff	SetSpreadingFactor@sf,?_sprintf+6
  7953  004DA0  6BC6               	clrf	(?_sprintf+7)& (0+255),b
  7954  004DA2  EC09  F000         	call	_sprintf	;wreg free
  7955                           
  7956                           ;LoRaWanCore.c: 107: uint8_t status=enviaComando(comando,0);
  7957  004DA6  0E1E               	movlw	low SetSpreadingFactor@comando
  7958  004DA8  0100               	movlb	0	; () banked
  7959  004DAA  6F7C               	movwf	enviaComando@cmd& (0+255),b
  7960  004DAC  0E01               	movlw	high SetSpreadingFactor@comando
  7961  004DAE  6F7D               	movwf	(enviaComando@cmd+1)& (0+255),b
  7962  004DB0  0E00               	movlw	0
  7963  004DB2  6F7E               	movwf	enviaComando@tipoComando& (0+255),b
  7964  004DB4  EC4A  F019         	call	_enviaComando	;wreg free
  7965  004DB8  0101               	movlb	1	; () banked
  7966  004DBA  6FE6               	movwf	SetSpreadingFactor@status& (0+255),b
  7967  004DBC  0012               	return	
  7968  004DBE                     __end_of_SetSpreadingFactor:
  7969                           	opt stack 0
  7970                           tblptru	equ	0xFF8
  7971                           tblptrh	equ	0xFF7
  7972                           tblptrl	equ	0xFF6
  7973                           tablat	equ	0xFF5
  7974                           prodh	equ	0xFF4
  7975                           prodl	equ	0xFF3
  7976                           intcon	equ	0xFF2
  7977                           postinc0	equ	0xFEE
  7978                           wreg	equ	0xFE8
  7979                           indf1	equ	0xFE7
  7980                           postdec1	equ	0xFE5
  7981                           fsr1h	equ	0xFE2
  7982                           fsr1l	equ	0xFE1
  7983                           indf2	equ	0xFDF
  7984                           postinc2	equ	0xFDE
  7985                           postdec2	equ	0xFDD
  7986                           plusw2	equ	0xFDB
  7987                           fsr2h	equ	0xFDA
  7988                           fsr2l	equ	0xFD9
  7989                           status	equ	0xFD8
  7990                           
  7991 ;; *************** function _SetChannelLoRaWan *****************
  7992 ;; Defined at:
  7993 ;;		line 76 in file "LoRaWanCore.c"
  7994 ;; Parameters:    Size  Location     Type
  7995 ;;  canal           1    wreg     unsigned char 
  7996 ;;  ligado          1  145[BANK0 ] unsigned char 
  7997 ;; Auto vars:     Size  Location     Type
  7998 ;;  canal           1  231[BANK1 ] unsigned char 
  7999 ;;  comando       200   30[BANK1 ] unsigned char [200]
  8000 ;;  status          1  230[BANK1 ] unsigned char 
  8001 ;; Return value:  Size  Location     Type
  8002 ;;                  1    wreg      unsigned char 
  8003 ;; Registers used:
  8004 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8005 ;; Tracked objects:
  8006 ;;		On entry : 0/0
  8007 ;;		On exit  : 0/0
  8008 ;;		Unchanged: 0/0
  8009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8010 ;;      Params:         0       1       0       0       0       0       0       0       0
  8011 ;;      Locals:         0       0     202       0       0       0       0       0       0
  8012 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8013 ;;      Totals:         0       1     202       0       0       0       0       0       0
  8014 ;;Total ram usage:      203 bytes
  8015 ;; Hardware stack levels used:    1
  8016 ;; Hardware stack levels required when called:   14
  8017 ;; This function calls:
  8018 ;;		_enviaComando
  8019 ;;		_sprintf
  8020 ;; This function is called by:
  8021 ;;		_main
  8022 ;; This function uses a non-reentrant model
  8023 ;;
  8024                           
  8025                           	psect	text24
  8026  0047B0                     __ptext24:
  8027                           	opt stack 0
  8028  0047B0                     _SetChannelLoRaWan:
  8029                           	opt stack 16
  8030                           
  8031                           ; BSR set to: 1
  8032                           ;incstack = 0
  8033                           ;SetChannelLoRaWan@canal stored from wreg
  8034  0047B0  0101               	movlb	1	; () banked
  8035  0047B2  6FE7               	movwf	SetChannelLoRaWan@canal& (0+255),b
  8036                           
  8037                           ;LoRaWanCore.c: 78: char comando[200];
  8038                           ;LoRaWanCore.c: 79: if (ligado)
  8039  0047B4  0100               	movlb	0	; () banked
  8040  0047B6  51F1               	movf	SetChannelLoRaWan@ligado& (0+255),w,b
  8041  0047B8  B4D8               	btfsc	status,2,c
  8042  0047BA  D012               	goto	l2015
  8043                           
  8044                           ; BSR set to: 0
  8045                           ;LoRaWanCore.c: 80: sprintf(comando, "%s %d on", MAC_SET_CH_STATUS, canal);
  8046  0047BC  0E1E               	movlw	low SetChannelLoRaWan@comando
  8047  0047BE  6FBF               	movwf	sprintf@sp& (0+255),b
  8048  0047C0  0E01               	movlw	high SetChannelLoRaWan@comando
  8049  0047C2  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  8050  0047C4  0E99               	movlw	low STR_21
  8051  0047C6  6FC1               	movwf	sprintf@f& (0+255),b
  8052  0047C8  0E7F               	movlw	high STR_21
  8053  0047CA  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  8054  0047CC  0E0E               	movlw	low _MAC_SET_CH_STATUS
  8055  0047CE  6FC3               	movwf	(?_sprintf+4)& (0+255),b
  8056  0047D0  0E7E               	movlw	high _MAC_SET_CH_STATUS
  8057  0047D2  6FC4               	movwf	(?_sprintf+5)& (0+255),b
  8058  0047D4  C1E7  F0C5         	movff	SetChannelLoRaWan@canal,?_sprintf+6
  8059  0047D8  6BC6               	clrf	(?_sprintf+7)& (0+255),b
  8060  0047DA  EC09  F000         	call	_sprintf	;wreg free
  8061  0047DE  D012               	goto	l2016
  8062  0047E0                     l2015:
  8063                           
  8064                           ;LoRaWanCore.c: 81: else
  8065                           ;LoRaWanCore.c: 82: sprintf(comando, "%s %d off", MAC_SET_CH_STATUS, canal);
  8066  0047E0  0E1E               	movlw	low SetChannelLoRaWan@comando
  8067  0047E2  0100               	movlb	0	; () banked
  8068  0047E4  6FBF               	movwf	sprintf@sp& (0+255),b
  8069  0047E6  0E01               	movlw	high SetChannelLoRaWan@comando
  8070  0047E8  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  8071  0047EA  0E85               	movlw	low STR_22
  8072  0047EC  6FC1               	movwf	sprintf@f& (0+255),b
  8073  0047EE  0E7F               	movlw	high STR_22
  8074  0047F0  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  8075  0047F2  0E0E               	movlw	low _MAC_SET_CH_STATUS
  8076  0047F4  6FC3               	movwf	(?_sprintf+4)& (0+255),b
  8077  0047F6  0E7E               	movlw	high _MAC_SET_CH_STATUS
  8078  0047F8  6FC4               	movwf	(?_sprintf+5)& (0+255),b
  8079  0047FA  C1E7  F0C5         	movff	SetChannelLoRaWan@canal,?_sprintf+6
  8080  0047FE  6BC6               	clrf	(?_sprintf+7)& (0+255),b
  8081  004800  EC09  F000         	call	_sprintf	;wreg free
  8082  004804                     l2016:
  8083                           
  8084                           ;LoRaWanCore.c: 83: uint8_t status=enviaComando(comando,0);
  8085  004804  0E1E               	movlw	low SetChannelLoRaWan@comando
  8086  004806  0100               	movlb	0	; () banked
  8087  004808  6F7C               	movwf	enviaComando@cmd& (0+255),b
  8088  00480A  0E01               	movlw	high SetChannelLoRaWan@comando
  8089  00480C  6F7D               	movwf	(enviaComando@cmd+1)& (0+255),b
  8090  00480E  0E00               	movlw	0
  8091  004810  6F7E               	movwf	enviaComando@tipoComando& (0+255),b
  8092  004812  EC4A  F019         	call	_enviaComando	;wreg free
  8093  004816  0101               	movlb	1	; () banked
  8094  004818  6FE6               	movwf	SetChannelLoRaWan@status& (0+255),b
  8095  00481A  0012               	return	
  8096  00481C                     __end_of_SetChannelLoRaWan:
  8097                           	opt stack 0
  8098                           tblptru	equ	0xFF8
  8099                           tblptrh	equ	0xFF7
  8100                           tblptrl	equ	0xFF6
  8101                           tablat	equ	0xFF5
  8102                           prodh	equ	0xFF4
  8103                           prodl	equ	0xFF3
  8104                           intcon	equ	0xFF2
  8105                           postinc0	equ	0xFEE
  8106                           wreg	equ	0xFE8
  8107                           indf1	equ	0xFE7
  8108                           postdec1	equ	0xFE5
  8109                           fsr1h	equ	0xFE2
  8110                           fsr1l	equ	0xFE1
  8111                           indf2	equ	0xFDF
  8112                           postinc2	equ	0xFDE
  8113                           postdec2	equ	0xFDD
  8114                           plusw2	equ	0xFDB
  8115                           fsr2h	equ	0xFDA
  8116                           fsr2l	equ	0xFD9
  8117                           status	equ	0xFD8
  8118                           
  8119 ;; *************** function _SetBandWidth *****************
  8120 ;; Defined at:
  8121 ;;		line 111 in file "LoRaWanCore.c"
  8122 ;; Parameters:    Size  Location     Type
  8123 ;;  bw              2  145[BANK0 ] unsigned int 
  8124 ;; Auto vars:     Size  Location     Type
  8125 ;;  comando       200   30[BANK1 ] unsigned char [200]
  8126 ;;  status          2  230[BANK1 ] unsigned int 
  8127 ;; Return value:  Size  Location     Type
  8128 ;;                  1    wreg      unsigned char 
  8129 ;; Registers used:
  8130 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8131 ;; Tracked objects:
  8132 ;;		On entry : 0/0
  8133 ;;		On exit  : 0/0
  8134 ;;		Unchanged: 0/0
  8135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8136 ;;      Params:         0       2       0       0       0       0       0       0       0
  8137 ;;      Locals:         0       0     202       0       0       0       0       0       0
  8138 ;;      Temps:          0       1       0       0       0       0       0       0       0
  8139 ;;      Totals:         0       3     202       0       0       0       0       0       0
  8140 ;;Total ram usage:      205 bytes
  8141 ;; Hardware stack levels used:    1
  8142 ;; Hardware stack levels required when called:   14
  8143 ;; This function calls:
  8144 ;;		_enviaComando
  8145 ;;		_sprintf
  8146 ;; This function is called by:
  8147 ;;		_main
  8148 ;; This function uses a non-reentrant model
  8149 ;;
  8150                           
  8151                           	psect	text25
  8152  004BE8                     __ptext25:
  8153                           	opt stack 0
  8154  004BE8                     _SetBandWidth:
  8155                           	opt stack 16
  8156                           
  8157                           ;LoRaWanCore.c: 112: char comando[200];
  8158                           ;LoRaWanCore.c: 114: sprintf(comando, "%s %d", MAC_SET_BW, bw);
  8159                           
  8160                           ; BSR set to: 1
  8161                           ;incstack = 0
  8162  004BE8  0E1E               	movlw	low SetBandWidth@comando
  8163  004BEA  0100               	movlb	0	; () banked
  8164  004BEC  6FBF               	movwf	sprintf@sp& (0+255),b
  8165  004BEE  0E01               	movlw	high SetBandWidth@comando
  8166  004BF0  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  8167  004BF2  0EE4               	movlw	low STR_26
  8168  004BF4  6FC1               	movwf	sprintf@f& (0+255),b
  8169  004BF6  0E7F               	movlw	high STR_26
  8170  004BF8  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  8171  004BFA  0E1C               	movlw	low _MAC_SET_BW
  8172  004BFC  6FC3               	movwf	(?_sprintf+4)& (0+255),b
  8173  004BFE  0E7E               	movlw	high _MAC_SET_BW
  8174  004C00  6FC4               	movwf	(?_sprintf+5)& (0+255),b
  8175  004C02  C0F1  F0C5         	movff	SetBandWidth@bw,?_sprintf+6
  8176  004C06  C0F2  F0C6         	movff	SetBandWidth@bw+1,?_sprintf+7
  8177  004C0A  EC09  F000         	call	_sprintf	;wreg free
  8178                           
  8179                           ;LoRaWanCore.c: 115: uint16_t status=enviaComando(comando,0);
  8180  004C0E  0E1E               	movlw	low SetBandWidth@comando
  8181  004C10  0100               	movlb	0	; () banked
  8182  004C12  6F7C               	movwf	enviaComando@cmd& (0+255),b
  8183  004C14  0E01               	movlw	high SetBandWidth@comando
  8184  004C16  6F7D               	movwf	(enviaComando@cmd+1)& (0+255),b
  8185  004C18  0E00               	movlw	0
  8186  004C1A  6F7E               	movwf	enviaComando@tipoComando& (0+255),b
  8187  004C1C  EC4A  F019         	call	_enviaComando	;wreg free
  8188  004C20  0100               	movlb	0	; () banked
  8189  004C22  6FF3               	movwf	??_SetBandWidth& (0+255),b
  8190  004C24  51F3               	movf	??_SetBandWidth& (0+255),w,b
  8191  004C26  0101               	movlb	1	; () banked
  8192  004C28  6FE6               	movwf	SetBandWidth@status& (0+255),b
  8193  004C2A  6BE7               	clrf	(SetBandWidth@status+1)& (0+255),b
  8194  004C2C  0012               	return	
  8195  004C2E                     __end_of_SetBandWidth:
  8196                           	opt stack 0
  8197                           tblptru	equ	0xFF8
  8198                           tblptrh	equ	0xFF7
  8199                           tblptrl	equ	0xFF6
  8200                           tablat	equ	0xFF5
  8201                           prodh	equ	0xFF4
  8202                           prodl	equ	0xFF3
  8203                           intcon	equ	0xFF2
  8204                           postinc0	equ	0xFEE
  8205                           wreg	equ	0xFE8
  8206                           indf1	equ	0xFE7
  8207                           postdec1	equ	0xFE5
  8208                           fsr1h	equ	0xFE2
  8209                           fsr1l	equ	0xFE1
  8210                           indf2	equ	0xFDF
  8211                           postinc2	equ	0xFDE
  8212                           postdec2	equ	0xFDD
  8213                           plusw2	equ	0xFDB
  8214                           fsr2h	equ	0xFDA
  8215                           fsr2l	equ	0xFD9
  8216                           status	equ	0xFD8
  8217                           
  8218 ;; *************** function _MacSave *****************
  8219 ;; Defined at:
  8220 ;;		line 95 in file "LoRaWanCore.c"
  8221 ;; Parameters:    Size  Location     Type
  8222 ;;		None
  8223 ;; Auto vars:     Size  Location     Type
  8224 ;;  comando       200   30[BANK1 ] unsigned char [200]
  8225 ;;  status          1  230[BANK1 ] unsigned char 
  8226 ;; Return value:  Size  Location     Type
  8227 ;;                  1    wreg      unsigned char 
  8228 ;; Registers used:
  8229 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8230 ;; Tracked objects:
  8231 ;;		On entry : 0/0
  8232 ;;		On exit  : 0/0
  8233 ;;		Unchanged: 0/0
  8234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8235 ;;      Params:         0       0       0       0       0       0       0       0       0
  8236 ;;      Locals:         0       0     201       0       0       0       0       0       0
  8237 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8238 ;;      Totals:         0       0     201       0       0       0       0       0       0
  8239 ;;Total ram usage:      201 bytes
  8240 ;; Hardware stack levels used:    1
  8241 ;; Hardware stack levels required when called:   14
  8242 ;; This function calls:
  8243 ;;		_enviaComando
  8244 ;;		_sprintf
  8245 ;; This function is called by:
  8246 ;;		_main
  8247 ;; This function uses a non-reentrant model
  8248 ;;
  8249                           
  8250                           	psect	text26
  8251  004EAC                     __ptext26:
  8252                           	opt stack 0
  8253  004EAC                     _MacSave:
  8254                           	opt stack 16
  8255                           
  8256                           ;LoRaWanCore.c: 96: char comando[200];
  8257                           ;LoRaWanCore.c: 98: sprintf(comando, "%s", MAC_SAVE);
  8258                           
  8259                           ; BSR set to: 1
  8260                           ;incstack = 0
  8261  004EAC  0E1E               	movlw	low MacSave@comando
  8262  004EAE  0100               	movlb	0	; () banked
  8263  004EB0  6FBF               	movwf	sprintf@sp& (0+255),b
  8264  004EB2  0E01               	movlw	high MacSave@comando
  8265  004EB4  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  8266  004EB6  0EED               	movlw	low (STR_23+3)
  8267  004EB8  6FC1               	movwf	sprintf@f& (0+255),b
  8268  004EBA  0E7F               	movlw	high (STR_23+3)
  8269  004EBC  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  8270  004EBE  0E5D               	movlw	low _MAC_SAVE
  8271  004EC0  6FC3               	movwf	(?_sprintf+4)& (0+255),b
  8272  004EC2  0E7E               	movlw	high _MAC_SAVE
  8273  004EC4  6FC4               	movwf	(?_sprintf+5)& (0+255),b
  8274  004EC6  EC09  F000         	call	_sprintf	;wreg free
  8275                           
  8276                           ;LoRaWanCore.c: 99: uint8_t status=enviaComando(comando,0);
  8277  004ECA  0E1E               	movlw	low MacSave@comando
  8278  004ECC  0100               	movlb	0	; () banked
  8279  004ECE  6F7C               	movwf	enviaComando@cmd& (0+255),b
  8280  004ED0  0E01               	movlw	high MacSave@comando
  8281  004ED2  6F7D               	movwf	(enviaComando@cmd+1)& (0+255),b
  8282  004ED4  0E00               	movlw	0
  8283  004ED6  6F7E               	movwf	enviaComando@tipoComando& (0+255),b
  8284  004ED8  EC4A  F019         	call	_enviaComando	;wreg free
  8285  004EDC  0101               	movlb	1	; () banked
  8286  004EDE  6FE6               	movwf	MacSave@status& (0+255),b
  8287  004EE0  0012               	return	
  8288  004EE2                     __end_of_MacSave:
  8289                           	opt stack 0
  8290                           tblptru	equ	0xFF8
  8291                           tblptrh	equ	0xFF7
  8292                           tblptrl	equ	0xFF6
  8293                           tablat	equ	0xFF5
  8294                           prodh	equ	0xFF4
  8295                           prodl	equ	0xFF3
  8296                           intcon	equ	0xFF2
  8297                           postinc0	equ	0xFEE
  8298                           wreg	equ	0xFE8
  8299                           indf1	equ	0xFE7
  8300                           postdec1	equ	0xFE5
  8301                           fsr1h	equ	0xFE2
  8302                           fsr1l	equ	0xFE1
  8303                           indf2	equ	0xFDF
  8304                           postinc2	equ	0xFDE
  8305                           postdec2	equ	0xFDD
  8306                           plusw2	equ	0xFDB
  8307                           fsr2h	equ	0xFDA
  8308                           fsr2l	equ	0xFD9
  8309                           status	equ	0xFD8
  8310                           
  8311 ;; *************** function _DataRate *****************
  8312 ;; Defined at:
  8313 ;;		line 119 in file "LoRaWanCore.c"
  8314 ;; Parameters:    Size  Location     Type
  8315 ;;  dr              2  145[BANK0 ] unsigned int 
  8316 ;; Auto vars:     Size  Location     Type
  8317 ;;  comando       200   30[BANK1 ] unsigned char [200]
  8318 ;;  status          2  230[BANK1 ] unsigned int 
  8319 ;; Return value:  Size  Location     Type
  8320 ;;                  1    wreg      unsigned char 
  8321 ;; Registers used:
  8322 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8323 ;; Tracked objects:
  8324 ;;		On entry : 0/0
  8325 ;;		On exit  : 0/0
  8326 ;;		Unchanged: 0/0
  8327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8328 ;;      Params:         0       2       0       0       0       0       0       0       0
  8329 ;;      Locals:         0       0     202       0       0       0       0       0       0
  8330 ;;      Temps:          0       1       0       0       0       0       0       0       0
  8331 ;;      Totals:         0       3     202       0       0       0       0       0       0
  8332 ;;Total ram usage:      205 bytes
  8333 ;; Hardware stack levels used:    1
  8334 ;; Hardware stack levels required when called:   14
  8335 ;; This function calls:
  8336 ;;		_enviaComando
  8337 ;;		_sprintf
  8338 ;; This function is called by:
  8339 ;;		_main
  8340 ;; This function uses a non-reentrant model
  8341 ;;
  8342                           
  8343                           	psect	text27
  8344  004C2E                     __ptext27:
  8345                           	opt stack 0
  8346  004C2E                     _DataRate:
  8347                           	opt stack 16
  8348                           
  8349                           ;LoRaWanCore.c: 120: char comando[200];
  8350                           ;LoRaWanCore.c: 122: sprintf(comando, "%s %d", MAC_SET_DR, dr);
  8351                           
  8352                           ; BSR set to: 1
  8353                           ;incstack = 0
  8354  004C2E  0E1E               	movlw	low DataRate@comando
  8355  004C30  0100               	movlb	0	; () banked
  8356  004C32  6FBF               	movwf	sprintf@sp& (0+255),b
  8357  004C34  0E01               	movlw	high DataRate@comando
  8358  004C36  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  8359  004C38  0EE4               	movlw	low STR_26
  8360  004C3A  6FC1               	movwf	sprintf@f& (0+255),b
  8361  004C3C  0E7F               	movlw	high STR_26
  8362  004C3E  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  8363  004C40  0E44               	movlw	low _MAC_SET_DR
  8364  004C42  6FC3               	movwf	(?_sprintf+4)& (0+255),b
  8365  004C44  0E7E               	movlw	high _MAC_SET_DR
  8366  004C46  6FC4               	movwf	(?_sprintf+5)& (0+255),b
  8367  004C48  C0F1  F0C5         	movff	DataRate@dr,?_sprintf+6
  8368  004C4C  C0F2  F0C6         	movff	DataRate@dr+1,?_sprintf+7
  8369  004C50  EC09  F000         	call	_sprintf	;wreg free
  8370                           
  8371                           ;LoRaWanCore.c: 123: uint16_t status=enviaComando(comando,0);
  8372  004C54  0E1E               	movlw	low DataRate@comando
  8373  004C56  0100               	movlb	0	; () banked
  8374  004C58  6F7C               	movwf	enviaComando@cmd& (0+255),b
  8375  004C5A  0E01               	movlw	high DataRate@comando
  8376  004C5C  6F7D               	movwf	(enviaComando@cmd+1)& (0+255),b
  8377  004C5E  0E00               	movlw	0
  8378  004C60  6F7E               	movwf	enviaComando@tipoComando& (0+255),b
  8379  004C62  EC4A  F019         	call	_enviaComando	;wreg free
  8380  004C66  0100               	movlb	0	; () banked
  8381  004C68  6FF3               	movwf	??_DataRate& (0+255),b
  8382  004C6A  51F3               	movf	??_DataRate& (0+255),w,b
  8383  004C6C  0101               	movlb	1	; () banked
  8384  004C6E  6FE6               	movwf	DataRate@status& (0+255),b
  8385  004C70  6BE7               	clrf	(DataRate@status+1)& (0+255),b
  8386  004C72  0012               	return	
  8387  004C74                     __end_of_DataRate:
  8388                           	opt stack 0
  8389                           tblptru	equ	0xFF8
  8390                           tblptrh	equ	0xFF7
  8391                           tblptrl	equ	0xFF6
  8392                           tablat	equ	0xFF5
  8393                           prodh	equ	0xFF4
  8394                           prodl	equ	0xFF3
  8395                           intcon	equ	0xFF2
  8396                           postinc0	equ	0xFEE
  8397                           wreg	equ	0xFE8
  8398                           indf1	equ	0xFE7
  8399                           postdec1	equ	0xFE5
  8400                           fsr1h	equ	0xFE2
  8401                           fsr1l	equ	0xFE1
  8402                           indf2	equ	0xFDF
  8403                           postinc2	equ	0xFDE
  8404                           postdec2	equ	0xFDD
  8405                           plusw2	equ	0xFDB
  8406                           fsr2h	equ	0xFDA
  8407                           fsr2l	equ	0xFD9
  8408                           status	equ	0xFD8
  8409                           
  8410 ;; *************** function _AdaptiveDataRate *****************
  8411 ;; Defined at:
  8412 ;;		line 87 in file "LoRaWanCore.c"
  8413 ;; Parameters:    Size  Location     Type
  8414 ;;  state           2  145[BANK0 ] PTR const unsigned char 
  8415 ;;		 -> STATE_ON(3), STATE_OFF(4), 
  8416 ;; Auto vars:     Size  Location     Type
  8417 ;;  comando       200   30[BANK1 ] unsigned char [200]
  8418 ;;  status          1  230[BANK1 ] unsigned char 
  8419 ;; Return value:  Size  Location     Type
  8420 ;;                  1    wreg      unsigned char 
  8421 ;; Registers used:
  8422 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8423 ;; Tracked objects:
  8424 ;;		On entry : 0/0
  8425 ;;		On exit  : 0/0
  8426 ;;		Unchanged: 0/0
  8427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8428 ;;      Params:         0       2       0       0       0       0       0       0       0
  8429 ;;      Locals:         0       0     201       0       0       0       0       0       0
  8430 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8431 ;;      Totals:         0       2     201       0       0       0       0       0       0
  8432 ;;Total ram usage:      203 bytes
  8433 ;; Hardware stack levels used:    1
  8434 ;; Hardware stack levels required when called:   14
  8435 ;; This function calls:
  8436 ;;		_enviaComando
  8437 ;;		_sprintf
  8438 ;; This function is called by:
  8439 ;;		_main
  8440 ;; This function uses a non-reentrant model
  8441 ;;
  8442                           
  8443                           	psect	text28
  8444  004DBE                     __ptext28:
  8445                           	opt stack 0
  8446  004DBE                     _AdaptiveDataRate:
  8447                           	opt stack 16
  8448                           
  8449                           ;LoRaWanCore.c: 88: char comando[200];
  8450                           ;LoRaWanCore.c: 90: sprintf(comando, "%s %s", MAC_SET_ADR, state);
  8451                           
  8452                           ; BSR set to: 1
  8453                           ;incstack = 0
  8454  004DBE  0E1E               	movlw	low AdaptiveDataRate@comando
  8455  004DC0  0100               	movlb	0	; () banked
  8456  004DC2  6FBF               	movwf	sprintf@sp& (0+255),b
  8457  004DC4  0E01               	movlw	high AdaptiveDataRate@comando
  8458  004DC6  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  8459  004DC8  0EEA               	movlw	low STR_23
  8460  004DCA  6FC1               	movwf	sprintf@f& (0+255),b
  8461  004DCC  0E7F               	movlw	high STR_23
  8462  004DCE  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  8463  004DD0  0E3C               	movlw	low _MAC_SET_ADR
  8464  004DD2  6FC3               	movwf	(?_sprintf+4)& (0+255),b
  8465  004DD4  0E7E               	movlw	high _MAC_SET_ADR
  8466  004DD6  6FC4               	movwf	(?_sprintf+5)& (0+255),b
  8467  004DD8  C0F1  F0C5         	movff	AdaptiveDataRate@state,?_sprintf+6
  8468  004DDC  C0F2  F0C6         	movff	AdaptiveDataRate@state+1,?_sprintf+7
  8469  004DE0  EC09  F000         	call	_sprintf	;wreg free
  8470                           
  8471                           ;LoRaWanCore.c: 91: uint8_t status=enviaComando(comando,0);
  8472  004DE4  0E1E               	movlw	low AdaptiveDataRate@comando
  8473  004DE6  0100               	movlb	0	; () banked
  8474  004DE8  6F7C               	movwf	enviaComando@cmd& (0+255),b
  8475  004DEA  0E01               	movlw	high AdaptiveDataRate@comando
  8476  004DEC  6F7D               	movwf	(enviaComando@cmd+1)& (0+255),b
  8477  004DEE  0E00               	movlw	0
  8478  004DF0  6F7E               	movwf	enviaComando@tipoComando& (0+255),b
  8479  004DF2  EC4A  F019         	call	_enviaComando	;wreg free
  8480  004DF6  0101               	movlb	1	; () banked
  8481  004DF8  6FE6               	movwf	AdaptiveDataRate@status& (0+255),b
  8482  004DFA  0012               	return	
  8483  004DFC                     __end_of_AdaptiveDataRate:
  8484                           	opt stack 0
  8485                           tblptru	equ	0xFF8
  8486                           tblptrh	equ	0xFF7
  8487                           tblptrl	equ	0xFF6
  8488                           tablat	equ	0xFF5
  8489                           prodh	equ	0xFF4
  8490                           prodl	equ	0xFF3
  8491                           intcon	equ	0xFF2
  8492                           postinc0	equ	0xFEE
  8493                           wreg	equ	0xFE8
  8494                           indf1	equ	0xFE7
  8495                           postdec1	equ	0xFE5
  8496                           fsr1h	equ	0xFE2
  8497                           fsr1l	equ	0xFE1
  8498                           indf2	equ	0xFDF
  8499                           postinc2	equ	0xFDE
  8500                           postdec2	equ	0xFDD
  8501                           plusw2	equ	0xFDB
  8502                           fsr2h	equ	0xFDA
  8503                           fsr2l	equ	0xFD9
  8504                           status	equ	0xFD8
  8505                           
  8506 ;; *************** function _sprintf *****************
  8507 ;; Defined at:
  8508 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\doprnt.c"
  8509 ;; Parameters:    Size  Location     Type
  8510 ;;  sp              2   95[BANK0 ] PTR unsigned char 
  8511 ;;		 -> TxLoRaWan@hex(4), TxLoRaWan@comando(200), DataRate@comando(200), SetBandWidth@comando(200), 
  8512 ;;		 -> SetSpreadingFactor@comando(200), MacSave@comando(200), AdaptiveDataRate@comando(200), SetChannelLoRaWan@comando(
      +200), 
  8513 ;;		 -> addSensorFloat@f(30), addSensorInt@f(30), addSensorStr@f(30), frameBuffer(200), 
  8514 ;;		 -> main@data(150), 
  8515 ;;  f               2   97[BANK0 ] PTR const unsigned char 
  8516 ;;		 -> STR_30(5), STR_29(7), STR_28(7), STR_27(6), 
  8517 ;;		 -> STR_26(6), STR_25(5), STR_24(3), STR_23(6), 
  8518 ;;		 -> STR_22(10), STR_21(9), STR_5(7), STR_4(8), 
  8519 ;;		 -> STR_3(7), STR_2(17), STR_1(93), 
  8520 ;; Auto vars:     Size  Location     Type
  8521 ;;  idx             1    3[BANK1 ] unsigned char 
  8522 ;;  val             4   18[BANK1 ] unsigned long 
  8523 ;;  tmpval          4   12[BANK1 ] struct .
  8524 ;;  fval            3   22[BANK1 ] struct .
  8525 ;;  flag            2   27[BANK1 ] unsigned short 
  8526 ;;  width           2   25[BANK1 ] int 
  8527 ;;  exp             2   16[BANK1 ] int 
  8528 ;;  prec            2   10[BANK1 ] int 
  8529 ;;  ap              2    8[BANK1 ] PTR void [1]
  8530 ;;		 -> ?_sprintf(2), 
  8531 ;;  len             2    6[BANK1 ] unsigned int 
  8532 ;;  cp              2    4[BANK1 ] PTR const unsigned char 
  8533 ;;		 -> STR_31(7), MAC_TX_UNCNF(9), MAC_TX_CNF(7), MAC_SET_DR(7), 
  8534 ;;		 -> MAC_SET_BW(13), MAC_SET_SF(16), MAC_SAVE(5), MAC_SET_ADR(8), 
  8535 ;;		 -> MAC_SET_CH_STATUS(14), STATE_ON(3), STATE_OFF(4), 
  8536 ;;  c               1   29[BANK1 ] char 
  8537 ;;  d               1    0        unsigned char 
  8538 ;; Return value:  Size  Location     Type
  8539 ;;                  2   95[BANK0 ] int 
  8540 ;; Registers used:
  8541 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8542 ;; Tracked objects:
  8543 ;;		On entry : 0/0
  8544 ;;		On exit  : 0/0
  8545 ;;		Unchanged: 0/0
  8546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8547 ;;      Params:         0      44       0       0       0       0       0       0       0
  8548 ;;      Locals:         0       0      30       0       0       0       0       0       0
  8549 ;;      Temps:          0       6       0       0       0       0       0       0       0
  8550 ;;      Totals:         0      50      30       0       0       0       0       0       0
  8551 ;;Total ram usage:       80 bytes
  8552 ;; Hardware stack levels used:    1
  8553 ;; Hardware stack levels required when called:   13
  8554 ;; This function calls:
  8555 ;;		___awdiv
  8556 ;;		___ftadd
  8557 ;;		___ftge
  8558 ;;		___ftmul
  8559 ;;		___ftneg
  8560 ;;		___ftsub
  8561 ;;		___fttol
  8562 ;;		___lldiv
  8563 ;;		___llmod
  8564 ;;		___lltoft
  8565 ;;		___wmul
  8566 ;;		__div_to_l_
  8567 ;;		__tdiv_to_l_
  8568 ;;		_fround
  8569 ;;		_isdigit
  8570 ;;		_scale
  8571 ;; This function is called by:
  8572 ;;		_main
  8573 ;;		_SetChannelLoRaWan
  8574 ;;		_AdaptiveDataRate
  8575 ;;		_MacSave
  8576 ;;		_SetSpreadingFactor
  8577 ;;		_SetBandWidth
  8578 ;;		_DataRate
  8579 ;;		_TxLoRaWan
  8580 ;;		_createFrameHeader
  8581 ;;		_addSensorStr
  8582 ;;		_addSensorInt
  8583 ;;		_addSensorFloat
  8584 ;; This function uses a non-reentrant model
  8585 ;;
  8586                           
  8587                           	psect	text29
  8588  000012                     __ptext29:
  8589                           	opt stack 0
  8590  000012                     _sprintf:
  8591                           	opt stack 17
  8592                           
  8593                           ;doprnt.c: 494: va_list ap;
  8594                           ;doprnt.c: 499: signed char c;
  8595                           ;doprnt.c: 501: int width;
  8596                           ;doprnt.c: 504: int prec;
  8597                           ;doprnt.c: 508: unsigned short flag;
  8598                           ;doprnt.c: 515: char d;
  8599                           ;doprnt.c: 516: double fval;
  8600                           ;doprnt.c: 517: int exp;
  8601                           ;doprnt.c: 523: union {
  8602                           ;doprnt.c: 524: unsigned long vd;
  8603                           ;doprnt.c: 525: double integ;
  8604                           ;doprnt.c: 526: } tmpval;
  8605                           ;doprnt.c: 528: unsigned long val;
  8606                           ;doprnt.c: 529: unsigned len;
  8607                           ;doprnt.c: 530: const char * cp;
  8608                           ;doprnt.c: 533: *ap = __va_start();
  8609                           
  8610                           ; BSR set to: 1
  8611                           ;incstack = 0
  8612  000012  0EC3               	movlw	low (?_sprintf+4)
  8613  000014  0101               	movlb	1	; () banked
  8614  000016  6F08               	movwf	sprintf@ap& (0+255),b
  8615  000018  0E00               	movlw	high (?_sprintf+4)
  8616  00001A  6F09               	movwf	(sprintf@ap+1)& (0+255),b
  8617                           
  8618                           ;doprnt.c: 536: while(c = *f++) {
  8619  00001C  EF45  F006         	goto	u8210
  8620  000020                     
  8621                           ; BSR set to: 1
  8622                           ;doprnt.c: 538: if(c != '%')
  8623                           
  8624                           ; BSR set to: 1
  8625  000020  0E25               	movlw	37
  8626  000022  191D               	xorwf	sprintf@c& (0+255),w,b
  8627  000024  B4D8               	btfsc	status,2,c
  8628  000026  D00B               	goto	l2328
  8629                           
  8630                           ; BSR set to: 1
  8631                           ;doprnt.c: 540: {
  8632                           ;doprnt.c: 541: ((*sp++ = (c)));
  8633  000028  C0BF  FFD9         	movff	sprintf@sp,fsr2l
  8634  00002C  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
  8635  000030  C11D  FFDF         	movff	sprintf@c,indf2
  8636                           
  8637                           ; BSR set to: 1
  8638  000034  0100               	movlb	0	; () banked
  8639  000036  4BBF               	infsnz	sprintf@sp& (0+255),f,b
  8640  000038  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
  8641                           
  8642                           ;doprnt.c: 542: continue;
  8643  00003A  EF45  F006         	goto	u8210
  8644  00003E                     l2328:
  8645                           
  8646                           ;doprnt.c: 543: }
  8647                           ;doprnt.c: 546: width = 0;
  8648                           
  8649                           ; BSR set to: 0
  8650  00003E  0E00               	movlw	0
  8651  000040  0101               	movlb	1	; () banked
  8652  000042  6F1A               	movwf	(sprintf@width+1)& (0+255),b
  8653  000044  0E00               	movlw	0
  8654  000046  6F19               	movwf	sprintf@width& (0+255),b
  8655                           
  8656                           ;doprnt.c: 548: flag = 0;
  8657  000048  0E00               	movlw	0
  8658  00004A  6F1C               	movwf	(sprintf@flag+1)& (0+255),b
  8659  00004C  0E00               	movlw	0
  8660  00004E  6F1B               	movwf	sprintf@flag& (0+255),b
  8661                           
  8662                           ; BSR set to: 1
  8663                           ;doprnt.c: 551: switch(*f) {
  8664                           
  8665                           ;doprnt.c: 550: for(;;) {
  8666  000050  D005               	goto	l2330
  8667  000052                     
  8668                           ;doprnt.c: 580: flag |= 0x04;
  8669                           
  8670                           ; BSR set to: 1
  8671  000052  0101               	movlb	1	; () banked
  8672  000054  851B               	bsf	sprintf@flag& (0+255),2,b
  8673                           
  8674                           ;doprnt.c: 581: f++;
  8675  000056  0100               	movlb	0	; () banked
  8676  000058  4BC1               	infsnz	sprintf@f& (0+255),f,b
  8677  00005A  2BC2               	incf	(sprintf@f+1)& (0+255),f,b
  8678  00005C                     l2330:
  8679                           
  8680                           ; BSR set to: 0
  8681  00005C  C0C1  FFF6         	movff	sprintf@f,tblptrl
  8682  000060  C0C2  FFF7         	movff	sprintf@f+1,tblptrh
  8683  000064                     	if	0	;tblptru may be non-zero
  8684  000064                     	endif
  8685  000064                     	if	0	;tblptru may be non-zero
  8686  000064                     	endif
  8687  000064  0008               	tblrd		*
  8688  000066  50F5               	movf	tablat,w,c
  8689                           
  8690                           ; Switch size 1, requested type "space"
  8691                           ; Number of cases is 1, Range of values is 48 to 48
  8692                           ; switch strategies available:
  8693                           ; Name         Instructions Cycles
  8694                           ; simple_byte            4     3 (average)
  8695                           ;	Chosen strategy is simple_byte
  8696  000068  0A30               	xorlw	48	; case 48
  8697  00006A  B4D8               	btfsc	status,2,c
  8698  00006C  D7F2               	goto	l2331
  8699                           
  8700                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  8701                           
  8702                           ;doprnt.c: 586: }
  8703                           
  8704                           ;doprnt.c: 585: break;
  8705  00006E  C0C1  FFF6         	movff	sprintf@f,tblptrl
  8706  000072  C0C2  FFF7         	movff	sprintf@f+1,tblptrh
  8707  000076                     	if	0	;tblptru may be non-zero
  8708  000076                     	endif
  8709  000076                     	if	0	;tblptru may be non-zero
  8710  000076                     	endif
  8711  000076  0008               	tblrd		*
  8712  000078  50F5               	movf	tablat,w,c
  8713  00007A  EC7A  F028         	call	_isdigit
  8714  00007E  A0D8               	btfss	status,0,c
  8715  000080  D0B1               	goto	l2339
  8716                           
  8717                           ;doprnt.c: 598: width = 0;
  8718  000082  0E00               	movlw	0
  8719  000084  0101               	movlb	1	; () banked
  8720  000086  6F1A               	movwf	(sprintf@width+1)& (0+255),b
  8721  000088  0E00               	movlw	0
  8722  00008A  6F19               	movwf	sprintf@width& (0+255),b
  8723  00008C                     
  8724                           ;doprnt.c: 600: width *= 10;
  8725                           
  8726                           ; BSR set to: 1
  8727  00008C  C119  F06E         	movff	sprintf@width,___wmul@multiplier
  8728  000090  C11A  F06F         	movff	sprintf@width+1,___wmul@multiplier+1
  8729  000094  0E00               	movlw	0
  8730  000096  0100               	movlb	0	; () banked
  8731  000098  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8732  00009A  0E0A               	movlw	10
  8733  00009C  6F70               	movwf	___wmul@multiplicand& (0+255),b
  8734  00009E  EC1A  F028         	call	___wmul	;wreg free
  8735  0000A2  C06E  F119         	movff	?___wmul,sprintf@width
  8736  0000A6  C06F  F11A         	movff	?___wmul+1,sprintf@width+1
  8737                           
  8738                           ;doprnt.c: 601: width += *f++ - '0';
  8739  0000AA  0ED0               	movlw	208
  8740  0000AC  0100               	movlb	0	; () banked
  8741  0000AE  6FEB               	movwf	??_sprintf& (0+255),b
  8742  0000B0  0EFF               	movlw	255
  8743  0000B2  6FEC               	movwf	(??_sprintf+1)& (0+255),b
  8744  0000B4  C0C1  FFF6         	movff	sprintf@f,tblptrl
  8745  0000B8  C0C2  FFF7         	movff	sprintf@f+1,tblptrh
  8746  0000BC                     	if	0	;tblptru may be non-zero
  8747  0000BC                     	endif
  8748  0000BC                     	if	0	;tblptru may be non-zero
  8749  0000BC                     	endif
  8750  0000BC  0008               	tblrd		*
  8751  0000BE  50F5               	movf	tablat,w,c
  8752  0000C0  6FED               	movwf	(??_sprintf+2)& (0+255),b
  8753  0000C2  6BEE               	clrf	(??_sprintf+3)& (0+255),b
  8754  0000C4  51EB               	movf	??_sprintf& (0+255),w,b
  8755  0000C6  27ED               	addwf	(??_sprintf+2)& (0+255),f,b
  8756  0000C8  51EC               	movf	(??_sprintf+1)& (0+255),w,b
  8757  0000CA  23EE               	addwfc	(??_sprintf+3)& (0+255),f,b
  8758  0000CC  51ED               	movf	(??_sprintf+2)& (0+255),w,b
  8759  0000CE  0101               	movlb	1	; () banked
  8760  0000D0  2719               	addwf	sprintf@width& (0+255),f,b
  8761  0000D2  0100               	movlb	0	; () banked
  8762  0000D4  51EE               	movf	(??_sprintf+3)& (0+255),w,b
  8763  0000D6  0101               	movlb	1	; () banked
  8764  0000D8  231A               	addwfc	(sprintf@width+1)& (0+255),f,b
  8765                           
  8766                           ; BSR set to: 1
  8767  0000DA  0100               	movlb	0	; () banked
  8768  0000DC  4BC1               	infsnz	sprintf@f& (0+255),f,b
  8769  0000DE  2BC2               	incf	(sprintf@f+1)& (0+255),f,b
  8770                           
  8771                           ; BSR set to: 0
  8772                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  8773  0000E0  C0C1  FFF6         	movff	sprintf@f,tblptrl
  8774  0000E4  C0C2  FFF7         	movff	sprintf@f+1,tblptrh
  8775  0000E8                     	if	0	;tblptru may be non-zero
  8776  0000E8                     	endif
  8777  0000E8                     	if	0	;tblptru may be non-zero
  8778  0000E8                     	endif
  8779  0000E8  0008               	tblrd		*
  8780  0000EA  50F5               	movf	tablat,w,c
  8781  0000EC  EC7A  F028         	call	_isdigit
  8782  0000F0  A0D8               	btfss	status,0,c
  8783  0000F2  D078               	goto	l2339
  8784  0000F4  D7CB               	goto	l2336
  8785  0000F6                     
  8786                           ;doprnt.c: 643: flag |= 0x10;
  8787  0000F6  0101               	movlb	1	; () banked
  8788  0000F8  891B               	bsf	sprintf@flag& (0+255),4,b
  8789                           
  8790                           ;doprnt.c: 644: goto loop;
  8791  0000FA  D074               	goto	l2339
  8792  0000FC                     
  8793                           ; BSR set to: 1
  8794                           ;doprnt.c: 663: flag |= 0x400;
  8795                           
  8796                           ; BSR set to: 1
  8797  0000FC  851C               	bsf	(sprintf@flag+1)& (0+255),2,b
  8798                           
  8799                           ; BSR set to: 1
  8800                           ;doprnt.c: 698: case 'i':
  8801                           ;doprnt.c: 699: break;
  8802                           
  8803                           ; BSR set to: 1
  8804                           
  8805                           ;doprnt.c: 697: case 'd':
  8806                           
  8807                           ;doprnt.c: 664: break;
  8808  0000FE  D09C               	goto	l2344
  8809  000100                     
  8810                           ; BSR set to: 1
  8811                           ;doprnt.c: 718: case 'x':
  8812                           ;doprnt.c: 721: flag |= 0x80;
  8813                           
  8814                           ; BSR set to: 1
  8815                           
  8816                           ; BSR set to: 1
  8817  000100  8F1B               	bsf	sprintf@flag& (0+255),7,b
  8818                           
  8819                           ;doprnt.c: 723: break;
  8820  000102  D09A               	goto	l2344
  8821  000104                     
  8822                           ; BSR set to: 1
  8823                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  8824                           
  8825                           ; BSR set to: 1
  8826  000104  C108  FFD9         	movff	sprintf@ap,fsr2l
  8827  000108  C109  FFDA         	movff	sprintf@ap+1,fsr2h
  8828  00010C  CFDE F104          	movff	postinc2,sprintf@cp
  8829  000110  CFDD F105          	movff	postdec2,sprintf@cp+1
  8830                           
  8831                           ; BSR set to: 1
  8832  000114  0E02               	movlw	2
  8833  000116  2708               	addwf	sprintf@ap& (0+255),f,b
  8834  000118  0E00               	movlw	0
  8835  00011A  2309               	addwfc	(sprintf@ap+1)& (0+255),f,b
  8836                           
  8837                           ; BSR set to: 1
  8838                           ;doprnt.c: 740: if(!cp)
  8839  00011C  5104               	movf	sprintf@cp& (0+255),w,b
  8840  00011E  1105               	iorwf	(sprintf@cp+1)& (0+255),w,b
  8841  000120  A4D8               	btfss	status,2,c
  8842  000122  D004               	goto	l2350
  8843                           
  8844                           ; BSR set to: 1
  8845                           ;doprnt.c: 741: cp = "(null)";
  8846  000124  0EBA               	movlw	low STR_31
  8847  000126  6F04               	movwf	sprintf@cp& (0+255),b
  8848  000128  0E7F               	movlw	high STR_31
  8849  00012A  6F05               	movwf	(sprintf@cp+1)& (0+255),b
  8850  00012C                     l2350:
  8851                           
  8852                           ; BSR set to: 1
  8853                           ;doprnt.c: 745: len = 0;
  8854                           
  8855                           ; BSR set to: 1
  8856  00012C  0E00               	movlw	0
  8857  00012E  6F07               	movwf	(sprintf@len+1)& (0+255),b
  8858  000130  0E00               	movlw	0
  8859  000132  6F06               	movwf	sprintf@len& (0+255),b
  8860                           
  8861                           ;doprnt.c: 746: while(cp[len])
  8862  000134  D003               	goto	l2351
  8863  000136                     
  8864                           ;doprnt.c: 747: len++;
  8865                           
  8866                           ; BSR set to: 1
  8867  000136  0101               	movlb	1	; () banked
  8868  000138  4B06               	infsnz	sprintf@len& (0+255),f,b
  8869  00013A  2B07               	incf	(sprintf@len+1)& (0+255),f,b
  8870  00013C                     l2351:
  8871                           
  8872                           ; BSR set to: 1
  8873                           
  8874                           ; BSR set to: 1
  8875  00013C  5106               	movf	sprintf@len& (0+255),w,b
  8876  00013E  2504               	addwf	sprintf@cp& (0+255),w,b
  8877  000140  0100               	movlb	0	; () banked
  8878  000142  6FEB               	movwf	??_sprintf& (0+255),b
  8879  000144  0101               	movlb	1	; () banked
  8880  000146  5107               	movf	(sprintf@len+1)& (0+255),w,b
  8881  000148  2105               	addwfc	(sprintf@cp+1)& (0+255),w,b
  8882  00014A  0100               	movlb	0	; () banked
  8883  00014C  6FEC               	movwf	(??_sprintf+1)& (0+255),b
  8884  00014E  C0EB  FFF6         	movff	??_sprintf,tblptrl
  8885  000152  C0EC  FFF7         	movff	??_sprintf+1,tblptrh
  8886  000156                     	if	0	;tblptru may be non-zero
  8887  000156                     	endif
  8888  000156                     	if	0	;tblptru may be non-zero
  8889  000156                     	endif
  8890  000156  0008               	tblrd		*
  8891  000158  50F5               	movf	tablat,w,c
  8892  00015A  0900               	iorlw	0
  8893  00015C  A4D8               	btfss	status,2,c
  8894  00015E  D7EB               	goto	l2352
  8895                           
  8896                           ; BSR set to: 0
  8897                           ;doprnt.c: 757: if(width > len)
  8898                           
  8899                           ; BSR set to: 0
  8900  000160  0101               	movlb	1	; () banked
  8901  000162  5119               	movf	sprintf@width& (0+255),w,b
  8902  000164  5D06               	subwf	sprintf@len& (0+255),w,b
  8903  000166  511A               	movf	(sprintf@width+1)& (0+255),w,b
  8904  000168  5907               	subwfb	(sprintf@len+1)& (0+255),w,b
  8905  00016A  B0D8               	btfsc	status,0,c
  8906  00016C  D005               	goto	l2354
  8907                           
  8908                           ; BSR set to: 1
  8909                           ;doprnt.c: 758: width -= len;
  8910  00016E  5106               	movf	sprintf@len& (0+255),w,b
  8911  000170  5F19               	subwf	sprintf@width& (0+255),f,b
  8912  000172  5107               	movf	(sprintf@len+1)& (0+255),w,b
  8913  000174  5B1A               	subwfb	(sprintf@width+1)& (0+255),f,b
  8914  000176  D00E               	goto	l2356
  8915  000178                     l2354:
  8916                           
  8917                           ; BSR set to: 1
  8918                           ;doprnt.c: 759: else
  8919                           ;doprnt.c: 760: width = 0;
  8920                           
  8921                           ; BSR set to: 1
  8922  000178  0E00               	movlw	0
  8923  00017A  6F1A               	movwf	(sprintf@width+1)& (0+255),b
  8924  00017C  0E00               	movlw	0
  8925  00017E  6F19               	movwf	sprintf@width& (0+255),b
  8926                           
  8927                           ; BSR set to: 1
  8928                           ;doprnt.c: 764: while(width--)
  8929  000180  D009               	goto	l2356
  8930  000182                     l8571:
  8931                           
  8932                           ; BSR set to: 1
  8933                           ;doprnt.c: 765: ((*sp++ = (' ')));
  8934  000182  C0BF  FFD9         	movff	sprintf@sp,fsr2l
  8935  000186  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
  8936  00018A  0E20               	movlw	32
  8937  00018C  6EDF               	movwf	indf2,c
  8938                           
  8939                           ; BSR set to: 1
  8940  00018E  0100               	movlb	0	; () banked
  8941  000190  4BBF               	infsnz	sprintf@sp& (0+255),f,b
  8942  000192  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
  8943  000194                     l2356:
  8944                           
  8945                           ; BSR set to: 0
  8946  000194  0101               	movlb	1	; () banked
  8947  000196  0719               	decf	sprintf@width& (0+255),f,b
  8948  000198  A0D8               	btfss	status,0,c
  8949  00019A  071A               	decf	(sprintf@width+1)& (0+255),f,b
  8950  00019C  2919               	incf	sprintf@width& (0+255),w,b
  8951  00019E  E1F1               	bnz	l8571
  8952  0001A0  291A               	incf	(sprintf@width+1)& (0+255),w,b
  8953  0001A2  B4D8               	btfsc	status,2,c
  8954  0001A4  D011               	goto	l2359
  8955  0001A6  D7ED               	goto	l2357
  8956  0001A8                     l8577:
  8957                           
  8958                           ; BSR set to: 1
  8959                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
  8960  0001A8  C104  FFF6         	movff	sprintf@cp,tblptrl
  8961  0001AC  C105  FFF7         	movff	sprintf@cp+1,tblptrh
  8962  0001B0                     	if	0	;tblptru may be non-zero
  8963  0001B0                     	endif
  8964  0001B0                     	if	0	;tblptru may be non-zero
  8965  0001B0                     	endif
  8966  0001B0  C0BF  FFD9         	movff	sprintf@sp,fsr2l
  8967  0001B4  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
  8968  0001B8  0008               	tblrd		*
  8969  0001BA  CFF5 FFDF          	movff	tablat,indf2
  8970                           
  8971                           ; BSR set to: 1
  8972  0001BE  4B04               	infsnz	sprintf@cp& (0+255),f,b
  8973  0001C0  2B05               	incf	(sprintf@cp+1)& (0+255),f,b
  8974                           
  8975                           ; BSR set to: 1
  8976  0001C2  0100               	movlb	0	; () banked
  8977  0001C4  4BBF               	infsnz	sprintf@sp& (0+255),f,b
  8978  0001C6  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
  8979  0001C8                     l2359:
  8980                           
  8981                           ; BSR set to: 0
  8982  0001C8  0101               	movlb	1	; () banked
  8983  0001CA  0706               	decf	sprintf@len& (0+255),f,b
  8984  0001CC  A0D8               	btfss	status,0,c
  8985  0001CE  0707               	decf	(sprintf@len+1)& (0+255),f,b
  8986  0001D0  2906               	incf	sprintf@len& (0+255),w,b
  8987  0001D2  E1EA               	bnz	l8577
  8988  0001D4  2907               	incf	(sprintf@len+1)& (0+255),w,b
  8989  0001D6  B4D8               	btfsc	status,2,c
  8990  0001D8  EF45  F006         	goto	u8210
  8991  0001DC  D7E5               	goto	l2360
  8992  0001DE                     
  8993                           ; BSR set to: 1
  8994                           ;doprnt.c: 818: flag |= 0xC0;
  8995                           
  8996                           ; BSR set to: 1
  8997  0001DE  0EC0               	movlw	192
  8998  0001E0  131B               	iorwf	sprintf@flag& (0+255),f,b
  8999                           
  9000                           ; BSR set to: 1
  9001                           ;doprnt.c: 822: }
  9002                           
  9003                           ;doprnt.c: 819: break;
  9004  0001E2  D02A               	goto	l2344
  9005  0001E4                     l2339:
  9006                           
  9007                           ; BSR set to: 1
  9008  0001E4  C0C1  FFF6         	movff	sprintf@f,tblptrl
  9009  0001E8  C0C2  FFF7         	movff	sprintf@f+1,tblptrh
  9010  0001EC  0100               	movlb	0	; () banked
  9011  0001EE  4BC1               	infsnz	sprintf@f& (0+255),f,b
  9012  0001F0  2BC2               	incf	(sprintf@f+1)& (0+255),f,b
  9013  0001F2                     	if	0	;tblptru may be non-zero
  9014  0001F2                     	endif
  9015  0001F2                     	if	0	;tblptru may be non-zero
  9016  0001F2                     	endif
  9017  0001F2  0008               	tblrd		*
  9018  0001F4  CFF5 F11D          	movff	tablat,sprintf@c
  9019  0001F8  0101               	movlb	1	; () banked
  9020  0001FA  511D               	movf	sprintf@c& (0+255),w,b
  9021                           
  9022                           ; Switch size 1, requested type "space"
  9023                           ; Number of cases is 9, Range of values is 0 to 120
  9024                           ; switch strategies available:
  9025                           ; Name         Instructions Cycles
  9026                           ; simple_byte           28    15 (average)
  9027                           ;	Chosen strategy is simple_byte
  9028  0001FC  0A00               	xorlw	0	; case 0
  9029  0001FE  B4D8               	btfsc	status,2,c
  9030  000200  EF54  F006         	goto	u8220
  9031  000204  0A58               	xorlw	88	; case 88
  9032  000206  B4D8               	btfsc	status,2,c
  9033  000208  D77B               	goto	l2347
  9034  00020A  0A3C               	xorlw	60	; case 100
  9035  00020C  B4D8               	btfsc	status,2,c
  9036  00020E  D014               	goto	l2344
  9037  000210  0A02               	xorlw	2	; case 102
  9038  000212  B4D8               	btfsc	status,2,c
  9039  000214  D773               	goto	l2343
  9040  000216  0A0F               	xorlw	15	; case 105
  9041  000218  B4D8               	btfsc	status,2,c
  9042  00021A  D00E               	goto	l2344
  9043  00021C  0A05               	xorlw	5	; case 108
  9044  00021E  B4D8               	btfsc	status,2,c
  9045  000220  D76A               	goto	l2342
  9046  000222  0A1F               	xorlw	31	; case 115
  9047  000224  B4D8               	btfsc	status,2,c
  9048  000226  D76E               	goto	l2349
  9049  000228  0A06               	xorlw	6	; case 117
  9050  00022A  B4D8               	btfsc	status,2,c
  9051  00022C  D7D8               	goto	l2363
  9052  00022E  0A0D               	xorlw	13	; case 120
  9053  000230  B4D8               	btfsc	status,2,c
  9054  000232  D766               	goto	l2347
  9055  000234  EF45  F006         	goto	u8210
  9056  000238                     l2344:
  9057                           
  9058                           ; BSR set to: 1
  9059                           ;doprnt.c: 825: if(flag & (0x700)) {
  9060                           
  9061                           ; BSR set to: 1
  9062  000238  0E07               	movlw	7
  9063  00023A  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
  9064  00023C  B4D8               	btfsc	status,2,c
  9065  00023E  D35D               	goto	l2364
  9066                           
  9067                           ; BSR set to: 1
  9068                           ;doprnt.c: 829: prec = 6;
  9069  000240  0E00               	movlw	0
  9070  000242  6F0B               	movwf	(sprintf@prec+1)& (0+255),b
  9071  000244  0E06               	movlw	6
  9072  000246  6F0A               	movwf	sprintf@prec& (0+255),b
  9073                           
  9074                           ; BSR set to: 1
  9075                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  9076  000248  C108  FFD9         	movff	sprintf@ap,fsr2l
  9077  00024C  C109  FFDA         	movff	sprintf@ap+1,fsr2h
  9078  000250  CFDE F116          	movff	postinc2,sprintf@fval
  9079  000254  CFDE F117          	movff	postinc2,sprintf@fval+1
  9080  000258  CFDD F118          	movff	postdec2,sprintf@fval+2
  9081                           
  9082                           ; BSR set to: 1
  9083  00025C  0E03               	movlw	3
  9084  00025E  2708               	addwf	sprintf@ap& (0+255),f,b
  9085  000260  0E00               	movlw	0
  9086  000262  2309               	addwfc	(sprintf@ap+1)& (0+255),f,b
  9087                           
  9088                           ; BSR set to: 1
  9089                           ;doprnt.c: 831: if(fval < 0.0) {
  9090  000264  AF18               	btfss	(sprintf@fval+2)& (0+255),7,b
  9091  000266  D011               	goto	l2365
  9092                           
  9093                           ; BSR set to: 1
  9094                           ;doprnt.c: 832: fval = -fval;
  9095  000268  C116  F060         	movff	sprintf@fval,___ftneg@f1
  9096  00026C  C117  F061         	movff	sprintf@fval+1,___ftneg@f1+1
  9097  000270  C118  F062         	movff	sprintf@fval+2,___ftneg@f1+2
  9098  000274  EC41  F028         	call	___ftneg	;wreg free
  9099  000278  C060  F116         	movff	?___ftneg,sprintf@fval
  9100  00027C  C061  F117         	movff	?___ftneg+1,sprintf@fval+1
  9101  000280  C062  F118         	movff	?___ftneg+2,sprintf@fval+2
  9102                           
  9103                           ;doprnt.c: 833: flag |= 0x03;
  9104  000284  0E03               	movlw	3
  9105  000286  0101               	movlb	1	; () banked
  9106  000288  131B               	iorwf	sprintf@flag& (0+255),f,b
  9107  00028A                     l2365:
  9108                           
  9109                           ; BSR set to: 1
  9110                           ;doprnt.c: 834: }
  9111                           ;doprnt.c: 835: exp = 0;
  9112                           
  9113                           ; BSR set to: 1
  9114  00028A  0E00               	movlw	0
  9115  00028C  6F11               	movwf	(sprintf@exp+1)& (0+255),b
  9116  00028E  0E00               	movlw	0
  9117  000290  6F10               	movwf	sprintf@exp& (0+255),b
  9118                           
  9119                           ; BSR set to: 1
  9120                           ;doprnt.c: 836: if( fval!=0) {
  9121  000292  5116               	movf	sprintf@fval& (0+255),w,b
  9122  000294  1117               	iorwf	(sprintf@fval+1)& (0+255),w,b
  9123  000296  1118               	iorwf	(sprintf@fval+2)& (0+255),w,b
  9124  000298  B4D8               	btfsc	status,2,c
  9125  00029A  D090               	goto	l2370
  9126                           
  9127                           ; BSR set to: 1
  9128                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  9129  00029C  0E82               	movlw	130
  9130  00029E  0100               	movlb	0	; () banked
  9131  0002A0  6FEB               	movwf	??_sprintf& (0+255),b
  9132  0002A2  0EFF               	movlw	255
  9133  0002A4  6FEC               	movwf	(??_sprintf+1)& (0+255),b
  9134  0002A6  C116  F0ED         	movff	sprintf@fval,??_sprintf+2
  9135  0002AA  C117  F0EE         	movff	sprintf@fval+1,??_sprintf+3
  9136  0002AE  C118  F0EF         	movff	sprintf@fval+2,??_sprintf+4
  9137  0002B2  C119  F0F0         	movff	sprintf@fval+3,??_sprintf+5
  9138  0002B6  0E10               	movlw	16
  9139  0002B8  D005               	goto	u7750
  9140  0002BA                     u7755:
  9141  0002BA  90D8               	bcf	status,0,c
  9142  0002BC  33F0               	rrcf	(??_sprintf+5)& (0+255),f,b
  9143  0002BE  33EF               	rrcf	(??_sprintf+4)& (0+255),f,b
  9144  0002C0  33EE               	rrcf	(??_sprintf+3)& (0+255),f,b
  9145  0002C2  33ED               	rrcf	(??_sprintf+2)& (0+255),f,b
  9146  0002C4                     u7750:
  9147  0002C4  2EE8               	decfsz	wreg,f,c
  9148  0002C6  D7F9               	goto	u7755
  9149  0002C8  51ED               	movf	(??_sprintf+2)& (0+255),w,b
  9150  0002CA  25EB               	addwf	??_sprintf& (0+255),w,b
  9151  0002CC  0101               	movlb	1	; () banked
  9152  0002CE  6F10               	movwf	sprintf@exp& (0+255),b
  9153  0002D0  0E00               	movlw	0
  9154  0002D2  0100               	movlb	0	; () banked
  9155  0002D4  21EC               	addwfc	(??_sprintf+1)& (0+255),w,b
  9156  0002D6  0101               	movlb	1	; () banked
  9157  0002D8  6F11               	movwf	(sprintf@exp+1)& (0+255),b
  9158                           
  9159                           ; BSR set to: 1
  9160                           ;doprnt.c: 838: exp--;
  9161  0002DA  0710               	decf	sprintf@exp& (0+255),f,b
  9162  0002DC  A0D8               	btfss	status,0,c
  9163  0002DE  0711               	decf	(sprintf@exp+1)& (0+255),f,b
  9164                           
  9165                           ; BSR set to: 1
  9166                           ;doprnt.c: 839: exp *= 3;
  9167  0002E0  C110  F06E         	movff	sprintf@exp,___wmul@multiplier
  9168  0002E4  C111  F06F         	movff	sprintf@exp+1,___wmul@multiplier+1
  9169  0002E8  0E00               	movlw	0
  9170  0002EA  0100               	movlb	0	; () banked
  9171  0002EC  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9172  0002EE  0E03               	movlw	3
  9173  0002F0  6F70               	movwf	___wmul@multiplicand& (0+255),b
  9174  0002F2  EC1A  F028         	call	___wmul	;wreg free
  9175  0002F6  C06E  F110         	movff	?___wmul,sprintf@exp
  9176  0002FA  C06F  F111         	movff	?___wmul+1,sprintf@exp+1
  9177                           
  9178                           ;doprnt.c: 840: exp /= 10;
  9179  0002FE  C110  F066         	movff	sprintf@exp,___awdiv@dividend
  9180  000302  C111  F067         	movff	sprintf@exp+1,___awdiv@dividend+1
  9181  000306  0E00               	movlw	0
  9182  000308  0100               	movlb	0	; () banked
  9183  00030A  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  9184  00030C  0E0A               	movlw	10
  9185  00030E  6F68               	movwf	___awdiv@divisor& (0+255),b
  9186  000310  EC5D  F022         	call	___awdiv	;wreg free
  9187  000314  C066  F110         	movff	?___awdiv,sprintf@exp
  9188  000318  C067  F111         	movff	?___awdiv+1,sprintf@exp+1
  9189                           
  9190                           ;doprnt.c: 841: if(exp < 0)
  9191  00031C  0101               	movlb	1	; () banked
  9192  00031E  AF11               	btfss	(sprintf@exp+1)& (0+255),7,b
  9193  000320  D003               	goto	l2367
  9194                           
  9195                           ; BSR set to: 1
  9196                           ;doprnt.c: 842: exp--;
  9197  000322  0710               	decf	sprintf@exp& (0+255),f,b
  9198  000324  A0D8               	btfss	status,0,c
  9199  000326  0711               	decf	(sprintf@exp+1)& (0+255),f,b
  9200  000328                     l2367:
  9201                           
  9202                           ; BSR set to: 1
  9203                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  9204                           
  9205                           ; BSR set to: 1
  9206  000328  5110               	movf	sprintf@exp& (0+255),w,b
  9207  00032A  0800               	sublw	0
  9208  00032C  ECED  F00B         	call	_scale
  9209  000330  C08F  F10C         	movff	?_scale,sprintf@tmpval
  9210  000334  C090  F10D         	movff	?_scale+1,sprintf@tmpval+1
  9211  000338  C091  F10E         	movff	?_scale+2,sprintf@tmpval+2
  9212                           
  9213                           ;doprnt.c: 847: tmpval.integ *= fval;
  9214  00033C  C10C  F080         	movff	sprintf@tmpval,___ftmul@f1
  9215  000340  C10D  F081         	movff	sprintf@tmpval+1,___ftmul@f1+1
  9216  000344  C10E  F082         	movff	sprintf@tmpval+2,___ftmul@f1+2
  9217  000348  C116  F083         	movff	sprintf@fval,___ftmul@f2
  9218  00034C  C117  F084         	movff	sprintf@fval+1,___ftmul@f2+1
  9219  000350  C118  F085         	movff	sprintf@fval+2,___ftmul@f2+2
  9220  000354  EC46  F01B         	call	___ftmul	;wreg free
  9221  000358  C080  F10C         	movff	?___ftmul,sprintf@tmpval
  9222  00035C  C081  F10D         	movff	?___ftmul+1,sprintf@tmpval+1
  9223  000360  C082  F10E         	movff	?___ftmul+2,sprintf@tmpval+2
  9224                           
  9225                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  9226  000364  C10C  F060         	movff	sprintf@tmpval,___ftge@ff1
  9227  000368  C10D  F061         	movff	sprintf@tmpval+1,___ftge@ff1+1
  9228  00036C  C10E  F062         	movff	sprintf@tmpval+2,___ftge@ff1+2
  9229  000370  0E00               	movlw	0
  9230  000372  0100               	movlb	0	; () banked
  9231  000374  6F63               	movwf	___ftge@ff2& (0+255),b
  9232  000376  0E80               	movlw	128
  9233  000378  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
  9234  00037A  0E3F               	movlw	63
  9235  00037C  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
  9236  00037E  ECCC  F021         	call	___ftge	;wreg free
  9237  000382  0100               	movlb	0	; () banked
  9238  000384  B0D8               	btfsc	status,0,c
  9239  000386  D005               	goto	l2368
  9240                           
  9241                           ; BSR set to: 0
  9242                           ;doprnt.c: 849: exp--;
  9243  000388  0101               	movlb	1	; () banked
  9244  00038A  0710               	decf	sprintf@exp& (0+255),f,b
  9245  00038C  A0D8               	btfss	status,0,c
  9246  00038E  0711               	decf	(sprintf@exp+1)& (0+255),f,b
  9247  000390  D015               	goto	l2370
  9248  000392                     l2368:
  9249                           
  9250                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  9251                           
  9252                           ; BSR set to: 1
  9253  000392  C10C  F060         	movff	sprintf@tmpval,___ftge@ff1
  9254  000396  C10D  F061         	movff	sprintf@tmpval+1,___ftge@ff1+1
  9255  00039A  C10E  F062         	movff	sprintf@tmpval+2,___ftge@ff1+2
  9256  00039E  0E00               	movlw	0
  9257  0003A0  0100               	movlb	0	; () banked
  9258  0003A2  6F63               	movwf	___ftge@ff2& (0+255),b
  9259  0003A4  0E20               	movlw	32
  9260  0003A6  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
  9261  0003A8  0E41               	movlw	65
  9262  0003AA  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
  9263  0003AC  ECCC  F021         	call	___ftge	;wreg free
  9264  0003B0  0100               	movlb	0	; () banked
  9265  0003B2  A0D8               	btfss	status,0,c
  9266  0003B4  D003               	goto	l2370
  9267                           
  9268                           ; BSR set to: 0
  9269                           ;doprnt.c: 851: exp++;
  9270  0003B6  0101               	movlb	1	; () banked
  9271  0003B8  4B10               	infsnz	sprintf@exp& (0+255),f,b
  9272  0003BA  2B11               	incf	(sprintf@exp+1)& (0+255),f,b
  9273  0003BC                     l2370:
  9274                           
  9275                           ;doprnt.c: 852: }
  9276                           ;doprnt.c: 1112: if(prec <= 12)
  9277                           
  9278                           ; BSR set to: 1
  9279                           
  9280                           ; BSR set to: 1
  9281                           
  9282                           ; BSR set to: 1
  9283  0003BC  0101               	movlb	1	; () banked
  9284  0003BE  BF0B               	btfsc	(sprintf@prec+1)& (0+255),7,b
  9285  0003C0  D006               	goto	u7790
  9286  0003C2  510B               	movf	(sprintf@prec+1)& (0+255),w,b
  9287  0003C4  E11B               	bnz	l8637
  9288  0003C6  0E0D               	movlw	13
  9289  0003C8  5D0A               	subwf	sprintf@prec& (0+255),w,b
  9290  0003CA  B0D8               	btfsc	status,0,c
  9291  0003CC  D017               	goto	l2371
  9292  0003CE                     u7790:
  9293                           
  9294                           ; BSR set to: 1
  9295                           ;doprnt.c: 1113: fval += fround(prec);
  9296  0003CE  C116  F074         	movff	sprintf@fval,___ftadd@f1
  9297  0003D2  C117  F075         	movff	sprintf@fval+1,___ftadd@f1+1
  9298  0003D6  C118  F076         	movff	sprintf@fval+2,___ftadd@f1+2
  9299  0003DA  510A               	movf	sprintf@prec& (0+255),w,b
  9300  0003DC  EC92  F010         	call	_fround
  9301  0003E0  C08F  F077         	movff	?_fround,___ftadd@f2
  9302  0003E4  C090  F078         	movff	?_fround+1,___ftadd@f2+1
  9303  0003E8  C091  F079         	movff	?_fround+2,___ftadd@f2+2
  9304  0003EC  ECAA  F012         	call	___ftadd	;wreg free
  9305  0003F0  C074  F116         	movff	?___ftadd,sprintf@fval
  9306  0003F4  C075  F117         	movff	?___ftadd+1,sprintf@fval+1
  9307  0003F8  C076  F118         	movff	?___ftadd+2,sprintf@fval+2
  9308  0003FC                     l2371:
  9309  0003FC                     l8637:
  9310                           
  9311                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  9312  0003FC  0101               	movlb	1	; () banked
  9313  0003FE  BF11               	btfsc	(sprintf@exp+1)& (0+255),7,b
  9314  000400  D006               	goto	u7800
  9315  000402  5111               	movf	(sprintf@exp+1)& (0+255),w,b
  9316  000404  E121               	bnz	l8645
  9317  000406  0E0A               	movlw	10
  9318  000408  5D10               	subwf	sprintf@exp& (0+255),w,b
  9319  00040A  B0D8               	btfsc	status,0,c
  9320  00040C  D01D               	goto	u7830
  9321  00040E                     u7800:
  9322                           
  9323                           ; BSR set to: 1
  9324  00040E  5116               	movf	sprintf@fval& (0+255),w,b
  9325  000410  1117               	iorwf	(sprintf@fval+1)& (0+255),w,b
  9326  000412  1118               	iorwf	(sprintf@fval+2)& (0+255),w,b
  9327  000414  B4D8               	btfsc	status,2,c
  9328  000416  D059               	goto	l2372
  9329                           
  9330                           ; BSR set to: 1
  9331  000418  C116  F0B0         	movff	sprintf@fval,___fttol@f1
  9332  00041C  C117  F0B1         	movff	sprintf@fval+1,___fttol@f1+1
  9333  000420  C118  F0B2         	movff	sprintf@fval+2,___fttol@f1+2
  9334  000424  ECCA  F01A         	call	___fttol	;wreg free
  9335  000428  0100               	movlb	0	; () banked
  9336  00042A  51B0               	movf	?___fttol& (0+255),w,b
  9337  00042C  11B1               	iorwf	(?___fttol+1)& (0+255),w,b
  9338  00042E  11B2               	iorwf	(?___fttol+2)& (0+255),w,b
  9339  000430  11B3               	iorwf	(?___fttol+3)& (0+255),w,b
  9340  000432  A4D8               	btfss	status,2,c
  9341  000434  D04A               	goto	l2372
  9342                           
  9343                           ; BSR set to: 0
  9344  000436  0101               	movlb	1	; () banked
  9345  000438  BF11               	btfsc	(sprintf@exp+1)& (0+255),7,b
  9346  00043A  D047               	goto	l2372
  9347  00043C  5111               	movf	(sprintf@exp+1)& (0+255),w,b
  9348  00043E  E104               	bnz	l8645
  9349  000440  0E02               	movlw	2
  9350  000442  5D10               	subwf	sprintf@exp& (0+255),w,b
  9351  000444  A0D8               	btfss	status,0,c
  9352  000446  D041               	goto	l2372
  9353  000448                     u7830:
  9354  000448                     l8645:
  9355                           
  9356                           ; BSR set to: 1
  9357                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  9358  000448  C10C  F060         	movff	sprintf@tmpval,___ftge@ff1
  9359  00044C  C10D  F061         	movff	sprintf@tmpval+1,___ftge@ff1+1
  9360  000450  C10E  F062         	movff	sprintf@tmpval+2,___ftge@ff1+2
  9361  000454  0E70               	movlw	112
  9362  000456  0100               	movlb	0	; () banked
  9363  000458  6F63               	movwf	___ftge@ff2& (0+255),b
  9364  00045A  0E89               	movlw	137
  9365  00045C  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
  9366  00045E  0E40               	movlw	64
  9367  000460  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
  9368  000462  ECCC  F021         	call	___ftge	;wreg free
  9369  000466  0100               	movlb	0	; () banked
  9370  000468  B0D8               	btfsc	status,0,c
  9371  00046A  D003               	goto	l2375
  9372                           
  9373                           ; BSR set to: 0
  9374                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  9375  00046C  0101               	movlb	1	; () banked
  9376  00046E  0EF7               	movlw	247
  9377  000470  D002               	goto	L7
  9378  000472                     l2375:
  9379                           
  9380                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  9381                           
  9382                           ; BSR set to: 1
  9383  000472  0101               	movlb	1	; () banked
  9384  000474  0EF8               	movlw	248
  9385  000476                     L7:
  9386  000476  2710               	addwf	sprintf@exp& (0+255),f,b
  9387  000478  0EFF               	movlw	255
  9388  00047A  2311               	addwfc	(sprintf@exp+1)& (0+255),f,b
  9389                           
  9390                           ; BSR set to: 1
  9391                           ;doprnt.c: 1124: }
  9392                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  9393                           
  9394                           ; BSR set to: 1
  9395  00047C  5110               	movf	sprintf@exp& (0+255),w,b
  9396  00047E  ECED  F00B         	call	_scale
  9397  000482  C08F  F10C         	movff	?_scale,sprintf@tmpval
  9398  000486  C090  F10D         	movff	?_scale+1,sprintf@tmpval+1
  9399  00048A  C091  F10E         	movff	?_scale+2,sprintf@tmpval+2
  9400                           
  9401                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  9402  00048E  C116  F060         	movff	sprintf@fval,__tdiv_to_l_@f1
  9403  000492  C117  F061         	movff	sprintf@fval+1,__tdiv_to_l_@f1+1
  9404  000496  C118  F062         	movff	sprintf@fval+2,__tdiv_to_l_@f1+2
  9405  00049A  C10C  F063         	movff	sprintf@tmpval,__tdiv_to_l_@f2
  9406  00049E  C10D  F064         	movff	sprintf@tmpval+1,__tdiv_to_l_@f2+1
  9407  0004A2  C10E  F065         	movff	sprintf@tmpval+2,__tdiv_to_l_@f2+2
  9408  0004A6  ECC2  F014         	call	__tdiv_to_l_	;wreg free
  9409  0004AA  C060  F112         	movff	?__tdiv_to_l_,sprintf@val
  9410  0004AE  C061  F113         	movff	?__tdiv_to_l_+1,sprintf@val+1
  9411  0004B2  C062  F114         	movff	?__tdiv_to_l_+2,sprintf@val+2
  9412  0004B6  C063  F115         	movff	?__tdiv_to_l_+3,sprintf@val+3
  9413                           
  9414                           ;doprnt.c: 1129: fval = 0.0;
  9415  0004BA  0E00               	movlw	0
  9416  0004BC  0101               	movlb	1	; () banked
  9417  0004BE  6F16               	movwf	sprintf@fval& (0+255),b
  9418  0004C0  0E00               	movlw	0
  9419  0004C2  6F17               	movwf	(sprintf@fval+1)& (0+255),b
  9420  0004C4  0E00               	movlw	0
  9421  0004C6  6F18               	movwf	(sprintf@fval+2)& (0+255),b
  9422                           
  9423                           ;doprnt.c: 1130: } else {
  9424  0004C8  D033               	goto	l2381
  9425  0004CA                     l2372:
  9426                           
  9427                           ;doprnt.c: 1131: val = (unsigned long)fval;
  9428                           
  9429                           ; BSR set to: 1
  9430  0004CA  C116  F0B0         	movff	sprintf@fval,___fttol@f1
  9431  0004CE  C117  F0B1         	movff	sprintf@fval+1,___fttol@f1+1
  9432  0004D2  C118  F0B2         	movff	sprintf@fval+2,___fttol@f1+2
  9433  0004D6  ECCA  F01A         	call	___fttol	;wreg free
  9434  0004DA  C0B0  F112         	movff	?___fttol,sprintf@val
  9435  0004DE  C0B1  F113         	movff	?___fttol+1,sprintf@val+1
  9436  0004E2  C0B2  F114         	movff	?___fttol+2,sprintf@val+2
  9437  0004E6  C0B3  F115         	movff	?___fttol+3,sprintf@val+3
  9438                           
  9439                           ;doprnt.c: 1132: fval -= (double)val;
  9440  0004EA  C116  F080         	movff	sprintf@fval,___ftsub@f1
  9441  0004EE  C117  F081         	movff	sprintf@fval+1,___ftsub@f1+1
  9442  0004F2  C118  F082         	movff	sprintf@fval+2,___ftsub@f1+2
  9443  0004F6  C112  F068         	movff	sprintf@val,___lltoft@c
  9444  0004FA  C113  F069         	movff	sprintf@val+1,___lltoft@c+1
  9445  0004FE  C114  F06A         	movff	sprintf@val+2,___lltoft@c+2
  9446  000502  C115  F06B         	movff	sprintf@val+3,___lltoft@c+3
  9447  000506  ECA5  F024         	call	___lltoft	;wreg free
  9448  00050A  C068  F083         	movff	?___lltoft,___ftsub@f2
  9449  00050E  C069  F084         	movff	?___lltoft+1,___ftsub@f2+1
  9450  000512  C06A  F085         	movff	?___lltoft+2,___ftsub@f2+2
  9451  000516  EC7D  F026         	call	___ftsub	;wreg free
  9452  00051A  C080  F116         	movff	?___ftsub,sprintf@fval
  9453  00051E  C081  F117         	movff	?___ftsub+1,sprintf@fval+1
  9454  000522  C082  F118         	movff	?___ftsub+2,sprintf@fval+2
  9455                           
  9456                           ;doprnt.c: 1133: exp = 0;
  9457  000526  0E00               	movlw	0
  9458  000528  0101               	movlb	1	; () banked
  9459  00052A  6F11               	movwf	(sprintf@exp+1)& (0+255),b
  9460  00052C  0E00               	movlw	0
  9461  00052E  6F10               	movwf	sprintf@exp& (0+255),b
  9462  000530                     l2381:
  9463                           
  9464                           ; BSR set to: 1
  9465                           ;doprnt.c: 1134: }
  9466                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  9467                           
  9468                           ; BSR set to: 1
  9469  000530  0E01               	movlw	1
  9470  000532  6F1D               	movwf	sprintf@c& (0+255),b
  9471  000534                     l8665:
  9472                           
  9473                           ; BSR set to: 1
  9474  000534  0E0A               	movlw	10
  9475  000536  191D               	xorwf	sprintf@c& (0+255),w,b
  9476  000538  B4D8               	btfsc	status,2,c
  9477  00053A  D018               	goto	u7870
  9478                           
  9479                           ; BSR set to: 1
  9480                           ;doprnt.c: 1137: if(val < dpowers[c])
  9481                           
  9482                           ; BSR set to: 1
  9483                           
  9484                           ; BSR set to: 1
  9485  00053C  511D               	movf	sprintf@c& (0+255),w,b
  9486  00053E  0D04               	mullw	4
  9487  000540  0EA3               	movlw	low _dpowers
  9488  000542  24F3               	addwf	prodl,w,c
  9489  000544  6EF6               	movwf	tblptrl,c
  9490  000546  0E7C               	movlw	high _dpowers
  9491  000548  20F4               	addwfc	prodh,w,c
  9492  00054A  6EF7               	movwf	tblptrh,c
  9493  00054C                     	if	0	;There are less than 3 active tblptr bytes
  9494  00054C                     	endif
  9495  00054C  0009               	tblrd		*+
  9496  00054E  50F5               	movf	tablat,w,c
  9497  000550  5D12               	subwf	sprintf@val& (0+255),w,b
  9498  000552  0009               	tblrd		*+
  9499  000554  50F5               	movf	tablat,w,c
  9500  000556  5913               	subwfb	(sprintf@val+1)& (0+255),w,b
  9501  000558  0009               	tblrd		*+
  9502  00055A  50F5               	movf	tablat,w,c
  9503  00055C  5914               	subwfb	(sprintf@val+2)& (0+255),w,b
  9504  00055E  0009               	tblrd		*+
  9505  000560  50F5               	movf	tablat,w,c
  9506  000562  5915               	subwfb	(sprintf@val+3)& (0+255),w,b
  9507  000564  A0D8               	btfss	status,0,c
  9508  000566  D002               	goto	u7870
  9509                           
  9510                           ; BSR set to: 1
  9511                           
  9512                           ; BSR set to: 1
  9513                           
  9514                           ; BSR set to: 1
  9515                           ;doprnt.c: 1138: break;
  9516  000568  2B1D               	incf	sprintf@c& (0+255),f,b
  9517  00056A  D7E4               	goto	l8665
  9518  00056C                     u7870:
  9519                           
  9520                           ; BSR set to: 1
  9521                           ;doprnt.c: 1142: width -= prec + c + exp;
  9522                           
  9523                           ; BSR set to: 1
  9524  00056C  C11D  F0EB         	movff	sprintf@c,??_sprintf
  9525  000570  0100               	movlb	0	; () banked
  9526  000572  6BEC               	clrf	(??_sprintf+1)& (0+255),b
  9527  000574  BFEB               	btfsc	??_sprintf& (0+255),7,b
  9528  000576  07EC               	decf	(??_sprintf+1)& (0+255),f,b
  9529  000578  0101               	movlb	1	; () banked
  9530  00057A  510A               	movf	sprintf@prec& (0+255),w,b
  9531  00057C  0100               	movlb	0	; () banked
  9532  00057E  27EB               	addwf	??_sprintf& (0+255),f,b
  9533  000580  0101               	movlb	1	; () banked
  9534  000582  510B               	movf	(sprintf@prec+1)& (0+255),w,b
  9535  000584  0100               	movlb	0	; () banked
  9536  000586  23EC               	addwfc	(??_sprintf+1)& (0+255),f,b
  9537  000588  0101               	movlb	1	; () banked
  9538  00058A  5110               	movf	sprintf@exp& (0+255),w,b
  9539  00058C  0100               	movlb	0	; () banked
  9540  00058E  27EB               	addwf	??_sprintf& (0+255),f,b
  9541  000590  0101               	movlb	1	; () banked
  9542  000592  5111               	movf	(sprintf@exp+1)& (0+255),w,b
  9543  000594  0100               	movlb	0	; () banked
  9544  000596  23EC               	addwfc	(??_sprintf+1)& (0+255),f,b
  9545  000598  51EB               	movf	??_sprintf& (0+255),w,b
  9546  00059A  0101               	movlb	1	; () banked
  9547  00059C  5F19               	subwf	sprintf@width& (0+255),f,b
  9548  00059E  0100               	movlb	0	; () banked
  9549  0005A0  51EC               	movf	(??_sprintf+1)& (0+255),w,b
  9550  0005A2  0101               	movlb	1	; () banked
  9551  0005A4  5B1A               	subwfb	(sprintf@width+1)& (0+255),f,b
  9552                           
  9553                           ;doprnt.c: 1143: if(
  9554                           ;doprnt.c: 1147: prec)
  9555  0005A6  510A               	movf	sprintf@prec& (0+255),w,b
  9556  0005A8  110B               	iorwf	(sprintf@prec+1)& (0+255),w,b
  9557  0005AA  B4D8               	btfsc	status,2,c
  9558  0005AC  D003               	goto	l2385
  9559                           
  9560                           ; BSR set to: 1
  9561                           ;doprnt.c: 1148: width--;
  9562  0005AE  0719               	decf	sprintf@width& (0+255),f,b
  9563  0005B0  A0D8               	btfss	status,0,c
  9564  0005B2  071A               	decf	(sprintf@width+1)& (0+255),f,b
  9565  0005B4                     l2385:
  9566                           
  9567                           ; BSR set to: 1
  9568                           ;doprnt.c: 1149: if(flag & 0x03)
  9569                           
  9570                           ; BSR set to: 1
  9571  0005B4  0E03               	movlw	3
  9572  0005B6  151B               	andwf	sprintf@flag& (0+255),w,b
  9573  0005B8  0100               	movlb	0	; () banked
  9574  0005BA  6FEB               	movwf	??_sprintf& (0+255),b
  9575  0005BC  0E00               	movlw	0
  9576  0005BE  0101               	movlb	1	; () banked
  9577  0005C0  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
  9578  0005C2  0100               	movlb	0	; () banked
  9579  0005C4  6FEC               	movwf	(??_sprintf+1)& (0+255),b
  9580  0005C6  51EB               	movf	??_sprintf& (0+255),w,b
  9581  0005C8  11EC               	iorwf	(??_sprintf+1)& (0+255),w,b
  9582  0005CA  B4D8               	btfsc	status,2,c
  9583  0005CC  D004               	goto	l2386
  9584                           
  9585                           ; BSR set to: 0
  9586                           ;doprnt.c: 1150: width--;
  9587  0005CE  0101               	movlb	1	; () banked
  9588  0005D0  0719               	decf	sprintf@width& (0+255),f,b
  9589  0005D2  A0D8               	btfss	status,0,c
  9590  0005D4  071A               	decf	(sprintf@width+1)& (0+255),f,b
  9591  0005D6                     l2386:
  9592                           
  9593                           ;doprnt.c: 1153: if(flag & 0x04) {
  9594                           
  9595                           ; BSR set to: 1
  9596  0005D6  0101               	movlb	1	; () banked
  9597  0005D8  A51B               	btfss	sprintf@flag& (0+255),2,b
  9598  0005DA  D039               	goto	l2393
  9599                           
  9600                           ; BSR set to: 1
  9601                           ;doprnt.c: 1157: if(flag & 0x03)
  9602  0005DC  0E03               	movlw	3
  9603  0005DE  151B               	andwf	sprintf@flag& (0+255),w,b
  9604  0005E0  0100               	movlb	0	; () banked
  9605  0005E2  6FEB               	movwf	??_sprintf& (0+255),b
  9606  0005E4  0E00               	movlw	0
  9607  0005E6  0101               	movlb	1	; () banked
  9608  0005E8  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
  9609  0005EA  0100               	movlb	0	; () banked
  9610  0005EC  6FEC               	movwf	(??_sprintf+1)& (0+255),b
  9611  0005EE  51EB               	movf	??_sprintf& (0+255),w,b
  9612  0005F0  11EC               	iorwf	(??_sprintf+1)& (0+255),w,b
  9613  0005F2  B4D8               	btfsc	status,2,c
  9614  0005F4  D016               	goto	l2389
  9615                           
  9616                           ; BSR set to: 0
  9617                           ;doprnt.c: 1159: ((*sp++ = ('-')));
  9618  0005F6  C0BF  FFD9         	movff	sprintf@sp,fsr2l
  9619  0005FA  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
  9620  0005FE  0E2D               	movlw	45
  9621  000600  6EDF               	movwf	indf2,c
  9622                           
  9623                           ; BSR set to: 0
  9624  000602  4BBF               	infsnz	sprintf@sp& (0+255),f,b
  9625  000604  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
  9626                           
  9627                           ; BSR set to: 0
  9628                           ;doprnt.c: 1168: while(width > 0) {
  9629  000606  D00D               	goto	l2389
  9630  000608                     l8693:
  9631                           
  9632                           ;doprnt.c: 1169: ((*sp++ = ('0')));
  9633  000608  C0BF  FFD9         	movff	sprintf@sp,fsr2l
  9634  00060C  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
  9635  000610  0E30               	movlw	48
  9636  000612  6EDF               	movwf	indf2,c
  9637  000614  0100               	movlb	0	; () banked
  9638  000616  4BBF               	infsnz	sprintf@sp& (0+255),f,b
  9639  000618  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
  9640                           
  9641                           ; BSR set to: 0
  9642                           ;doprnt.c: 1170: width--;
  9643  00061A  0101               	movlb	1	; () banked
  9644  00061C  0719               	decf	sprintf@width& (0+255),f,b
  9645  00061E  A0D8               	btfss	status,0,c
  9646  000620  071A               	decf	(sprintf@width+1)& (0+255),f,b
  9647  000622                     l2389:
  9648                           
  9649                           ; BSR set to: 1
  9650  000622  0101               	movlb	1	; () banked
  9651  000624  BF1A               	btfsc	(sprintf@width+1)& (0+255),7,b
  9652  000626  D07B               	goto	l2397
  9653  000628  511A               	movf	(sprintf@width+1)& (0+255),w,b
  9654  00062A  E1EE               	bnz	l8693
  9655  00062C  0519               	decf	sprintf@width& (0+255),w,b
  9656  00062E  A0D8               	btfss	status,0,c
  9657  000630  D076               	goto	l2397
  9658  000632  D7EA               	goto	l2390
  9659  000634                     l8701:
  9660                           
  9661                           ; BSR set to: 1
  9662                           ;doprnt.c: 1181: ((*sp++ = (' ')));
  9663  000634  C0BF  FFD9         	movff	sprintf@sp,fsr2l
  9664  000638  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
  9665  00063C  0E20               	movlw	32
  9666  00063E  6EDF               	movwf	indf2,c
  9667                           
  9668                           ; BSR set to: 1
  9669  000640  0100               	movlb	0	; () banked
  9670  000642  4BBF               	infsnz	sprintf@sp& (0+255),f,b
  9671  000644  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
  9672                           
  9673                           ; BSR set to: 0
  9674                           ;doprnt.c: 1182: width--;
  9675  000646  0101               	movlb	1	; () banked
  9676  000648  0719               	decf	sprintf@width& (0+255),f,b
  9677  00064A  A0D8               	btfss	status,0,c
  9678  00064C  071A               	decf	(sprintf@width+1)& (0+255),f,b
  9679  00064E                     l2393:
  9680                           
  9681                           ; BSR set to: 1
  9682                           
  9683                           ; BSR set to: 1
  9684  00064E  BF1A               	btfsc	(sprintf@width+1)& (0+255),7,b
  9685  000650  D005               	goto	u7930
  9686  000652  511A               	movf	(sprintf@width+1)& (0+255),w,b
  9687  000654  E1EF               	bnz	l8701
  9688  000656  0519               	decf	sprintf@width& (0+255),w,b
  9689  000658  B0D8               	btfsc	status,0,c
  9690  00065A  D7EC               	goto	l2394
  9691  00065C                     u7930:
  9692                           
  9693                           ; BSR set to: 1
  9694                           ;doprnt.c: 1183: }
  9695                           ;doprnt.c: 1188: if(flag & 0x03)
  9696                           
  9697                           ; BSR set to: 1
  9698  00065C  0E03               	movlw	3
  9699  00065E  151B               	andwf	sprintf@flag& (0+255),w,b
  9700  000660  0100               	movlb	0	; () banked
  9701  000662  6FEB               	movwf	??_sprintf& (0+255),b
  9702  000664  0E00               	movlw	0
  9703  000666  0101               	movlb	1	; () banked
  9704  000668  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
  9705  00066A  0100               	movlb	0	; () banked
  9706  00066C  6FEC               	movwf	(??_sprintf+1)& (0+255),b
  9707  00066E  51EB               	movf	??_sprintf& (0+255),w,b
  9708  000670  11EC               	iorwf	(??_sprintf+1)& (0+255),w,b
  9709  000672  B4D8               	btfsc	status,2,c
  9710  000674  D054               	goto	l2397
  9711                           
  9712                           ; BSR set to: 0
  9713                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  9714  000676  C0BF  FFD9         	movff	sprintf@sp,fsr2l
  9715  00067A  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
  9716  00067E  0E2D               	movlw	45
  9717  000680  6EDF               	movwf	indf2,c
  9718  000682  D04B               	goto	L8
  9719  000684                     
  9720                           ;doprnt.c: 1200: {
  9721                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  9722                           
  9723                           ; BSR set to: 0
  9724  000684  C112  F060         	movff	sprintf@val,___lldiv@dividend
  9725  000688  C113  F061         	movff	sprintf@val+1,___lldiv@dividend+1
  9726  00068C  C114  F062         	movff	sprintf@val+2,___lldiv@dividend+2
  9727  000690  C115  F063         	movff	sprintf@val+3,___lldiv@dividend+3
  9728  000694  0101               	movlb	1	; () banked
  9729  000696  511D               	movf	sprintf@c& (0+255),w,b
  9730  000698  0D04               	mullw	4
  9731  00069A  0EA3               	movlw	low _dpowers
  9732  00069C  24F3               	addwf	prodl,w,c
  9733  00069E  6EF6               	movwf	tblptrl,c
  9734  0006A0  0E7C               	movlw	high _dpowers
  9735  0006A2  20F4               	addwfc	prodh,w,c
  9736  0006A4  6EF7               	movwf	tblptrh,c
  9737  0006A6                     	if	0	;There are less than 3 active tblptr bytes
  9738  0006A6                     	endif
  9739  0006A6  0009               	tblrd		*+
  9740  0006A8  CFF5 F064          	movff	tablat,___lldiv@divisor
  9741  0006AC  0009               	tblrd		*+
  9742  0006AE  CFF5 F065          	movff	tablat,___lldiv@divisor+1
  9743  0006B2  0009               	tblrd		*+
  9744  0006B4  CFF5 F066          	movff	tablat,___lldiv@divisor+2
  9745  0006B8  000A               	tblrd		*-
  9746  0006BA  CFF5 F067          	movff	tablat,___lldiv@divisor+3
  9747  0006BE  ECE3  F022         	call	___lldiv	;wreg free
  9748  0006C2  C060  F10C         	movff	?___lldiv,sprintf@tmpval
  9749  0006C6  C061  F10D         	movff	?___lldiv+1,sprintf@tmpval+1
  9750  0006CA  C062  F10E         	movff	?___lldiv+2,sprintf@tmpval+2
  9751  0006CE  C063  F10F         	movff	?___lldiv+3,sprintf@tmpval+3
  9752                           
  9753                           ;doprnt.c: 1202: tmpval.vd %= 10;
  9754  0006D2  C10C  F06D         	movff	sprintf@tmpval,___llmod@dividend
  9755  0006D6  C10D  F06E         	movff	sprintf@tmpval+1,___llmod@dividend+1
  9756  0006DA  C10E  F06F         	movff	sprintf@tmpval+2,___llmod@dividend+2
  9757  0006DE  C10F  F070         	movff	sprintf@tmpval+3,___llmod@dividend+3
  9758  0006E2  0E0A               	movlw	10
  9759  0006E4  0100               	movlb	0	; () banked
  9760  0006E6  6F71               	movwf	___llmod@divisor& (0+255),b
  9761  0006E8  0E00               	movlw	0
  9762  0006EA  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
  9763  0006EC  0E00               	movlw	0
  9764  0006EE  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
  9765  0006F0  0E00               	movlw	0
  9766  0006F2  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
  9767  0006F4  EC0E  F024         	call	___llmod	;wreg free
  9768  0006F8  C06D  F10C         	movff	?___llmod,sprintf@tmpval
  9769  0006FC  C06E  F10D         	movff	?___llmod+1,sprintf@tmpval+1
  9770  000700  C06F  F10E         	movff	?___llmod+2,sprintf@tmpval+2
  9771  000704  C070  F10F         	movff	?___llmod+3,sprintf@tmpval+3
  9772                           
  9773                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  9774  000708  0101               	movlb	1	; () banked
  9775  00070A  510C               	movf	sprintf@tmpval& (0+255),w,b
  9776  00070C  0F30               	addlw	48
  9777  00070E  C0BF  FFD9         	movff	sprintf@sp,fsr2l
  9778  000712  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
  9779  000716  6EDF               	movwf	indf2,c
  9780                           
  9781                           ; BSR set to: 1
  9782  000718  0100               	movlb	0	; () banked
  9783  00071A                     L8:
  9784  00071A  4BBF               	infsnz	sprintf@sp& (0+255),f,b
  9785  00071C  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
  9786  00071E                     l2397:
  9787                           
  9788                           ; BSR set to: 0
  9789  00071E  0101               	movlb	1	; () banked
  9790  000720  071D               	decf	sprintf@c& (0+255),f,b
  9791  000722  291D               	incf	sprintf@c& (0+255),w,b
  9792  000724  B4D8               	btfsc	status,2,c
  9793  000726  D00E               	goto	l2400
  9794  000728  D7AD               	goto	l2398
  9795  00072A                     l8725:
  9796                           
  9797                           ; BSR set to: 1
  9798                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  9799  00072A  C0BF  FFD9         	movff	sprintf@sp,fsr2l
  9800  00072E  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
  9801  000732  0E30               	movlw	48
  9802  000734  6EDF               	movwf	indf2,c
  9803                           
  9804                           ; BSR set to: 1
  9805  000736  0100               	movlb	0	; () banked
  9806  000738  4BBF               	infsnz	sprintf@sp& (0+255),f,b
  9807  00073A  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
  9808                           
  9809                           ; BSR set to: 0
  9810                           ;doprnt.c: 1209: exp--;
  9811  00073C  0101               	movlb	1	; () banked
  9812  00073E  0710               	decf	sprintf@exp& (0+255),f,b
  9813  000740  A0D8               	btfss	status,0,c
  9814  000742  0711               	decf	(sprintf@exp+1)& (0+255),f,b
  9815  000744                     l2400:
  9816                           
  9817                           ; BSR set to: 1
  9818                           
  9819                           ; BSR set to: 1
  9820  000744  BF11               	btfsc	(sprintf@exp+1)& (0+255),7,b
  9821  000746  D005               	goto	u7960
  9822  000748  5111               	movf	(sprintf@exp+1)& (0+255),w,b
  9823  00074A  E1EF               	bnz	l8725
  9824  00074C  0510               	decf	sprintf@exp& (0+255),w,b
  9825  00074E  B0D8               	btfsc	status,0,c
  9826  000750  D7EC               	goto	l2401
  9827  000752                     u7960:
  9828                           
  9829                           ; BSR set to: 1
  9830                           ;doprnt.c: 1210: }
  9831                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  9832                           
  9833                           ; BSR set to: 1
  9834  000752  BF0B               	btfsc	(sprintf@prec+1)& (0+255),7,b
  9835  000754  D009               	goto	l2403
  9836  000756  510B               	movf	(sprintf@prec+1)& (0+255),w,b
  9837  000758  E104               	bnz	u7970
  9838  00075A  0E09               	movlw	9
  9839  00075C  5D0A               	subwf	sprintf@prec& (0+255),w,b
  9840  00075E  A0D8               	btfss	status,0,c
  9841  000760  D003               	goto	l2403
  9842  000762                     u7970:
  9843                           
  9844                           ; BSR set to: 1
  9845                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  9846  000762  0E08               	movlw	8
  9847  000764  6F1D               	movwf	sprintf@c& (0+255),b
  9848  000766  D002               	goto	l2404
  9849  000768                     l2403:
  9850                           
  9851                           ; BSR set to: 1
  9852                           ;doprnt.c: 1213: else
  9853                           ;doprnt.c: 1214: c = prec;
  9854  000768  C10A  F11D         	movff	sprintf@prec,sprintf@c
  9855  00076C                     l2404:
  9856                           
  9857                           ; BSR set to: 1
  9858                           ;doprnt.c: 1215: prec -= c;
  9859                           
  9860                           ; BSR set to: 1
  9861  00076C  511D               	movf	sprintf@c& (0+255),w,b
  9862  00076E  5F0A               	subwf	sprintf@prec& (0+255),f,b
  9863  000770  0E00               	movlw	0
  9864  000772  BF1D               	btfsc	sprintf@c& (0+255),7,b
  9865  000774  0EFF               	movlw	255
  9866  000776  5B0B               	subwfb	(sprintf@prec+1)& (0+255),f,b
  9867                           
  9868                           ; BSR set to: 1
  9869                           ;doprnt.c: 1219: if(c)
  9870  000778  511D               	movf	sprintf@c& (0+255),w,b
  9871  00077A  B4D8               	btfsc	status,2,c
  9872  00077C  D009               	goto	l2405
  9873                           
  9874                           ; BSR set to: 1
  9875                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  9876  00077E  C0BF  FFD9         	movff	sprintf@sp,fsr2l
  9877  000782  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
  9878  000786  0E2E               	movlw	46
  9879  000788  6EDF               	movwf	indf2,c
  9880                           
  9881                           ; BSR set to: 1
  9882  00078A  0100               	movlb	0	; () banked
  9883  00078C  4BBF               	infsnz	sprintf@sp& (0+255),f,b
  9884  00078E  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
  9885  000790                     l2405:
  9886                           
  9887                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  9888                           
  9889                           ; BSR set to: 0
  9890  000790  0101               	movlb	1	; () banked
  9891  000792  511D               	movf	sprintf@c& (0+255),w,b
  9892  000794  ECED  F00B         	call	_scale
  9893  000798  C08F  F100         	movff	?_scale,_sprintf$5721
  9894  00079C  C090  F101         	movff	?_scale+1,_sprintf$5721+1
  9895  0007A0  C091  F102         	movff	?_scale+2,_sprintf$5721+2
  9896                           
  9897                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  9898  0007A4  C116  F083         	movff	sprintf@fval,___ftmul@f2
  9899  0007A8  C117  F084         	movff	sprintf@fval+1,___ftmul@f2+1
  9900  0007AC  C118  F085         	movff	sprintf@fval+2,___ftmul@f2+2
  9901  0007B0  C100  F080         	movff	_sprintf$5721,___ftmul@f1
  9902  0007B4  C101  F081         	movff	_sprintf$5721+1,___ftmul@f1+1
  9903  0007B8  C102  F082         	movff	_sprintf$5721+2,___ftmul@f1+2
  9904  0007BC  EC46  F01B         	call	___ftmul	;wreg free
  9905  0007C0  C080  F0B0         	movff	?___ftmul,___fttol@f1
  9906  0007C4  C081  F0B1         	movff	?___ftmul+1,___fttol@f1+1
  9907  0007C8  C082  F0B2         	movff	?___ftmul+2,___fttol@f1+2
  9908  0007CC  ECCA  F01A         	call	___fttol	;wreg free
  9909  0007D0  C0B0  F112         	movff	?___fttol,sprintf@val
  9910  0007D4  C0B1  F113         	movff	?___fttol+1,sprintf@val+1
  9911  0007D8  C0B2  F114         	movff	?___fttol+2,sprintf@val+2
  9912  0007DC  C0B3  F115         	movff	?___fttol+3,sprintf@val+3
  9913                           
  9914                           ;doprnt.c: 1228: while(c--) {
  9915  0007E0  D074               	goto	l2406
  9916  0007E2                     
  9917                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  9918  0007E2  C112  F060         	movff	sprintf@val,___lldiv@dividend
  9919  0007E6  C113  F061         	movff	sprintf@val+1,___lldiv@dividend+1
  9920  0007EA  C114  F062         	movff	sprintf@val+2,___lldiv@dividend+2
  9921  0007EE  C115  F063         	movff	sprintf@val+3,___lldiv@dividend+3
  9922  0007F2  0101               	movlb	1	; () banked
  9923  0007F4  511D               	movf	sprintf@c& (0+255),w,b
  9924  0007F6  0D04               	mullw	4
  9925  0007F8  0EA3               	movlw	low _dpowers
  9926  0007FA  24F3               	addwf	prodl,w,c
  9927  0007FC  6EF6               	movwf	tblptrl,c
  9928  0007FE  0E7C               	movlw	high _dpowers
  9929  000800  20F4               	addwfc	prodh,w,c
  9930  000802  6EF7               	movwf	tblptrh,c
  9931  000804                     	if	0	;There are less than 3 active tblptr bytes
  9932  000804                     	endif
  9933  000804  0009               	tblrd		*+
  9934  000806  CFF5 F064          	movff	tablat,___lldiv@divisor
  9935  00080A  0009               	tblrd		*+
  9936  00080C  CFF5 F065          	movff	tablat,___lldiv@divisor+1
  9937  000810  0009               	tblrd		*+
  9938  000812  CFF5 F066          	movff	tablat,___lldiv@divisor+2
  9939  000816  000A               	tblrd		*-
  9940  000818  CFF5 F067          	movff	tablat,___lldiv@divisor+3
  9941  00081C  ECE3  F022         	call	___lldiv	;wreg free
  9942  000820  C060  F10C         	movff	?___lldiv,sprintf@tmpval
  9943  000824  C061  F10D         	movff	?___lldiv+1,sprintf@tmpval+1
  9944  000828  C062  F10E         	movff	?___lldiv+2,sprintf@tmpval+2
  9945  00082C  C063  F10F         	movff	?___lldiv+3,sprintf@tmpval+3
  9946                           
  9947                           ;doprnt.c: 1230: tmpval.vd %= 10;
  9948  000830  C10C  F06D         	movff	sprintf@tmpval,___llmod@dividend
  9949  000834  C10D  F06E         	movff	sprintf@tmpval+1,___llmod@dividend+1
  9950  000838  C10E  F06F         	movff	sprintf@tmpval+2,___llmod@dividend+2
  9951  00083C  C10F  F070         	movff	sprintf@tmpval+3,___llmod@dividend+3
  9952  000840  0E0A               	movlw	10
  9953  000842  0100               	movlb	0	; () banked
  9954  000844  6F71               	movwf	___llmod@divisor& (0+255),b
  9955  000846  0E00               	movlw	0
  9956  000848  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
  9957  00084A  0E00               	movlw	0
  9958  00084C  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
  9959  00084E  0E00               	movlw	0
  9960  000850  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
  9961  000852  EC0E  F024         	call	___llmod	;wreg free
  9962  000856  C06D  F10C         	movff	?___llmod,sprintf@tmpval
  9963  00085A  C06E  F10D         	movff	?___llmod+1,sprintf@tmpval+1
  9964  00085E  C06F  F10E         	movff	?___llmod+2,sprintf@tmpval+2
  9965  000862  C070  F10F         	movff	?___llmod+3,sprintf@tmpval+3
  9966                           
  9967                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  9968  000866  0101               	movlb	1	; () banked
  9969  000868  510C               	movf	sprintf@tmpval& (0+255),w,b
  9970  00086A  0F30               	addlw	48
  9971  00086C  C0BF  FFD9         	movff	sprintf@sp,fsr2l
  9972  000870  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
  9973  000874  6EDF               	movwf	indf2,c
  9974                           
  9975                           ; BSR set to: 1
  9976  000876  0100               	movlb	0	; () banked
  9977  000878  4BBF               	infsnz	sprintf@sp& (0+255),f,b
  9978  00087A  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
  9979                           
  9980                           ; BSR set to: 0
  9981                           ;doprnt.c: 1232: val %= dpowers[c];
  9982  00087C  C112  F06D         	movff	sprintf@val,___llmod@dividend
  9983  000880  C113  F06E         	movff	sprintf@val+1,___llmod@dividend+1
  9984  000884  C114  F06F         	movff	sprintf@val+2,___llmod@dividend+2
  9985  000888  C115  F070         	movff	sprintf@val+3,___llmod@dividend+3
  9986  00088C  0101               	movlb	1	; () banked
  9987  00088E  511D               	movf	sprintf@c& (0+255),w,b
  9988  000890  0D04               	mullw	4
  9989  000892  0EA3               	movlw	low _dpowers
  9990  000894  24F3               	addwf	prodl,w,c
  9991  000896  6EF6               	movwf	tblptrl,c
  9992  000898  0E7C               	movlw	high _dpowers
  9993  00089A  20F4               	addwfc	prodh,w,c
  9994  00089C  6EF7               	movwf	tblptrh,c
  9995  00089E                     	if	0	;There are less than 3 active tblptr bytes
  9996  00089E                     	endif
  9997  00089E  0009               	tblrd		*+
  9998  0008A0  CFF5 F071          	movff	tablat,___llmod@divisor
  9999  0008A4  0009               	tblrd		*+
 10000  0008A6  CFF5 F072          	movff	tablat,___llmod@divisor+1
 10001  0008AA  0009               	tblrd		*+
 10002  0008AC  CFF5 F073          	movff	tablat,___llmod@divisor+2
 10003  0008B0  000A               	tblrd		*-
 10004  0008B2  CFF5 F074          	movff	tablat,___llmod@divisor+3
 10005  0008B6  EC0E  F024         	call	___llmod	;wreg free
 10006  0008BA  C06D  F112         	movff	?___llmod,sprintf@val
 10007  0008BE  C06E  F113         	movff	?___llmod+1,sprintf@val+1
 10008  0008C2  C06F  F114         	movff	?___llmod+2,sprintf@val+2
 10009  0008C6  C070  F115         	movff	?___llmod+3,sprintf@val+3
 10010  0008CA                     l2406:
 10011  0008CA  0101               	movlb	1	; () banked
 10012  0008CC  071D               	decf	sprintf@c& (0+255),f,b
 10013  0008CE  291D               	incf	sprintf@c& (0+255),w,b
 10014  0008D0  B4D8               	btfsc	status,2,c
 10015  0008D2  D00E               	goto	l2409
 10016  0008D4  D786               	goto	l2407
 10017  0008D6                     
 10018                           ; BSR set to: 1
 10019                           ;doprnt.c: 1236: ((*sp++ = ('0')));
 10020                           
 10021                           ; BSR set to: 1
 10022  0008D6  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 10023  0008DA  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 10024  0008DE  0E30               	movlw	48
 10025  0008E0  6EDF               	movwf	indf2,c
 10026                           
 10027                           ; BSR set to: 1
 10028  0008E2  0100               	movlb	0	; () banked
 10029  0008E4  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 10030  0008E6  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 10031                           
 10032                           ; BSR set to: 0
 10033                           ;doprnt.c: 1237: prec--;
 10034  0008E8  0101               	movlb	1	; () banked
 10035  0008EA  070A               	decf	sprintf@prec& (0+255),f,b
 10036  0008EC  A0D8               	btfss	status,0,c
 10037  0008EE  070B               	decf	(sprintf@prec+1)& (0+255),f,b
 10038  0008F0                     l2409:
 10039                           
 10040                           ; BSR set to: 1
 10041                           
 10042                           ; BSR set to: 1
 10043  0008F0  510A               	movf	sprintf@prec& (0+255),w,b
 10044  0008F2  110B               	iorwf	(sprintf@prec+1)& (0+255),w,b
 10045  0008F4  B4D8               	btfsc	status,2,c
 10046  0008F6  D1C9               	goto	u8210
 10047  0008F8  D7EE               	goto	l2410
 10048  0008FA                     l2364:
 10049                           
 10050                           ; BSR set to: 1
 10051                           ;doprnt.c: 1246: }
 10052                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 10053                           
 10054                           ; BSR set to: 1
 10055  0008FA  0EC0               	movlw	192
 10056  0008FC  151B               	andwf	sprintf@flag& (0+255),w,b
 10057  0008FE  0100               	movlb	0	; () banked
 10058  000900  6FEB               	movwf	??_sprintf& (0+255),b
 10059  000902  0E00               	movlw	0
 10060  000904  0101               	movlb	1	; () banked
 10061  000906  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
 10062  000908  0100               	movlb	0	; () banked
 10063  00090A  6FEC               	movwf	(??_sprintf+1)& (0+255),b
 10064  00090C  51EB               	movf	??_sprintf& (0+255),w,b
 10065  00090E  11EC               	iorwf	(??_sprintf+1)& (0+255),w,b
 10066  000910  A4D8               	btfss	status,2,c
 10067  000912  D02F               	goto	l2412
 10068                           
 10069                           ; BSR set to: 0
 10070                           ;doprnt.c: 1253: {
 10071                           ;doprnt.c: 1255: if(flag & 0x10)
 10072  000914  0101               	movlb	1	; () banked
 10073  000916  A91B               	btfss	sprintf@flag& (0+255),4,b
 10074  000918  D00E               	goto	l2413
 10075                           
 10076                           ; BSR set to: 1
 10077                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 10078  00091A  C108  FFD9         	movff	sprintf@ap,fsr2l
 10079  00091E  C109  FFDA         	movff	sprintf@ap+1,fsr2h
 10080  000922  CFDE F112          	movff	postinc2,sprintf@val
 10081  000926  CFDE F113          	movff	postinc2,sprintf@val+1
 10082  00092A  CFDE F114          	movff	postinc2,sprintf@val+2
 10083  00092E  CFDE F115          	movff	postinc2,sprintf@val+3
 10084                           
 10085                           ; BSR set to: 1
 10086  000932  0E04               	movlw	4
 10087  000934  D00E               	goto	L9
 10088  000936                     l2413:
 10089                           
 10090                           ; BSR set to: 1
 10091                           ;doprnt.c: 1257: else
 10092                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 10093                           
 10094                           ; BSR set to: 1
 10095  000936  C108  FFD9         	movff	sprintf@ap,fsr2l
 10096  00093A  C109  FFDA         	movff	sprintf@ap+1,fsr2h
 10097  00093E  CFDE F112          	movff	postinc2,sprintf@val
 10098  000942  CFDD F113          	movff	postdec2,sprintf@val+1
 10099  000946  0E00               	movlw	0
 10100  000948  BF13               	btfsc	(sprintf@val+1)& (0+255),7,b
 10101  00094A  0EFF               	movlw	-1
 10102  00094C  6F14               	movwf	(sprintf@val+2)& (0+255),b
 10103  00094E  6F15               	movwf	(sprintf@val+3)& (0+255),b
 10104                           
 10105                           ; BSR set to: 1
 10106  000950  0E02               	movlw	2
 10107  000952                     L9:
 10108  000952  2708               	addwf	sprintf@ap& (0+255),f,b
 10109  000954  0E00               	movlw	0
 10110  000956  2309               	addwfc	(sprintf@ap+1)& (0+255),f,b
 10111                           
 10112                           ; BSR set to: 1
 10113                           ;doprnt.c: 1261: if((long)val < 0) {
 10114                           
 10115                           ; BSR set to: 1
 10116  000958  AF15               	btfss	(sprintf@val+3)& (0+255),7,b
 10117  00095A  D06B               	goto	l2419
 10118                           
 10119                           ; BSR set to: 1
 10120                           ;doprnt.c: 1262: flag |= 0x03;
 10121  00095C  0E03               	movlw	3
 10122  00095E  131B               	iorwf	sprintf@flag& (0+255),f,b
 10123                           
 10124                           ; BSR set to: 1
 10125                           ;doprnt.c: 1263: val = -val;
 10126  000960  1F15               	comf	(sprintf@val+3)& (0+255),f,b
 10127  000962  1F14               	comf	(sprintf@val+2)& (0+255),f,b
 10128  000964  1F13               	comf	(sprintf@val+1)& (0+255),f,b
 10129  000966  6D12               	negf	sprintf@val& (0+255),b
 10130  000968  0E00               	movlw	0
 10131  00096A  2313               	addwfc	(sprintf@val+1)& (0+255),f,b
 10132  00096C  2314               	addwfc	(sprintf@val+2)& (0+255),f,b
 10133  00096E  2315               	addwfc	(sprintf@val+3)& (0+255),f,b
 10134                           
 10135                           ; BSR set to: 1
 10136                           ;doprnt.c: 1264: }
 10137                           ;doprnt.c: 1266: }
 10138  000970  D060               	goto	l2419
 10139  000972                     l2412:
 10140                           
 10141                           ; BSR set to: 0
 10142                           ;doprnt.c: 1268: else
 10143                           ;doprnt.c: 1273: {
 10144                           ;doprnt.c: 1281: if(flag & 0x10)
 10145  000972  0101               	movlb	1	; () banked
 10146  000974  A91B               	btfss	sprintf@flag& (0+255),4,b
 10147  000976  D00E               	goto	l2417
 10148                           
 10149                           ; BSR set to: 1
 10150                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
 10151  000978  C108  FFD9         	movff	sprintf@ap,fsr2l
 10152  00097C  C109  FFDA         	movff	sprintf@ap+1,fsr2h
 10153  000980  CFDE F112          	movff	postinc2,sprintf@val
 10154  000984  CFDE F113          	movff	postinc2,sprintf@val+1
 10155  000988  CFDE F114          	movff	postinc2,sprintf@val+2
 10156  00098C  CFDE F115          	movff	postinc2,sprintf@val+3
 10157                           
 10158                           ; BSR set to: 1
 10159  000990  0E04               	movlw	4
 10160  000992  D00F               	goto	L10
 10161  000994                     l2417:
 10162                           
 10163                           ; BSR set to: 1
 10164                           ;doprnt.c: 1283: else
 10165                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 10166                           
 10167                           ; BSR set to: 1
 10168  000994  C108  FFD9         	movff	sprintf@ap,fsr2l
 10169  000998  C109  FFDA         	movff	sprintf@ap+1,fsr2h
 10170  00099C  CFDE F0EB          	movff	postinc2,??_sprintf
 10171  0009A0  CFDD F0EC          	movff	postdec2,??_sprintf+1
 10172  0009A4  C0EB  F112         	movff	??_sprintf,sprintf@val
 10173  0009A8  C0EC  F113         	movff	??_sprintf+1,sprintf@val+1
 10174  0009AC  6B14               	clrf	(sprintf@val+2)& (0+255),b
 10175  0009AE  6B15               	clrf	(sprintf@val+3)& (0+255),b
 10176                           
 10177                           ; BSR set to: 1
 10178  0009B0  0E02               	movlw	2
 10179  0009B2                     L10:
 10180  0009B2  2708               	addwf	sprintf@ap& (0+255),f,b
 10181  0009B4  0E00               	movlw	0
 10182  0009B6  2309               	addwfc	(sprintf@ap+1)& (0+255),f,b
 10183                           
 10184                           ; BSR set to: 1
 10185                           ;doprnt.c: 1287: }
 10186                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 10187                           
 10188                           ; BSR set to: 1
 10189  0009B8  D03C               	goto	l2419
 10190  0009BA                     
 10191                           ; BSR set to: 1
 10192                           ;doprnt.c: 1302: case 0xC0:
 10193                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 10194                           
 10195                           ; BSR set to: 1
 10196                           
 10197                           ; BSR set to: 1
 10198  0009BA  0E01               	movlw	1
 10199  0009BC  6F1D               	movwf	sprintf@c& (0+255),b
 10200  0009BE                     l8797:
 10201                           
 10202                           ; BSR set to: 1
 10203  0009BE  0E0A               	movlw	10
 10204  0009C0  191D               	xorwf	sprintf@c& (0+255),w,b
 10205  0009C2  B4D8               	btfsc	status,2,c
 10206  0009C4  D041               	goto	l2425
 10207                           
 10208                           ; BSR set to: 1
 10209                           ;doprnt.c: 1306: if(val < dpowers[c])
 10210                           
 10211                           ; BSR set to: 1
 10212                           
 10213                           ; BSR set to: 1
 10214  0009C6  511D               	movf	sprintf@c& (0+255),w,b
 10215  0009C8  0D04               	mullw	4
 10216  0009CA  0EA3               	movlw	low _dpowers
 10217  0009CC  24F3               	addwf	prodl,w,c
 10218  0009CE  6EF6               	movwf	tblptrl,c
 10219  0009D0  0E7C               	movlw	high _dpowers
 10220  0009D2  20F4               	addwfc	prodh,w,c
 10221  0009D4  6EF7               	movwf	tblptrh,c
 10222  0009D6                     	if	0	;There are less than 3 active tblptr bytes
 10223  0009D6                     	endif
 10224  0009D6  0009               	tblrd		*+
 10225  0009D8  50F5               	movf	tablat,w,c
 10226  0009DA  5D12               	subwf	sprintf@val& (0+255),w,b
 10227  0009DC  0009               	tblrd		*+
 10228  0009DE  50F5               	movf	tablat,w,c
 10229  0009E0  5913               	subwfb	(sprintf@val+1)& (0+255),w,b
 10230  0009E2  0009               	tblrd		*+
 10231  0009E4  50F5               	movf	tablat,w,c
 10232  0009E6  5914               	subwfb	(sprintf@val+2)& (0+255),w,b
 10233  0009E8  0009               	tblrd		*+
 10234  0009EA  50F5               	movf	tablat,w,c
 10235  0009EC  5915               	subwfb	(sprintf@val+3)& (0+255),w,b
 10236  0009EE  A0D8               	btfss	status,0,c
 10237  0009F0  D02B               	goto	l2425
 10238                           
 10239                           ; BSR set to: 1
 10240                           
 10241                           ; BSR set to: 1
 10242                           
 10243                           ; BSR set to: 1
 10244                           ;doprnt.c: 1307: break;
 10245  0009F2  2B1D               	incf	sprintf@c& (0+255),f,b
 10246  0009F4  D7E4               	goto	l8797
 10247  0009F6                     
 10248                           ; BSR set to: 1
 10249                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 10250                           
 10251                           ; BSR set to: 1
 10252  0009F6  0E01               	movlw	1
 10253  0009F8  6F1D               	movwf	sprintf@c& (0+255),b
 10254  0009FA                     l8811:
 10255                           
 10256                           ; BSR set to: 1
 10257  0009FA  0E08               	movlw	8
 10258  0009FC  191D               	xorwf	sprintf@c& (0+255),w,b
 10259  0009FE  B4D8               	btfsc	status,2,c
 10260  000A00  D023               	goto	l2425
 10261                           
 10262                           ; BSR set to: 1
 10263                           ;doprnt.c: 1317: if(val < hexpowers[c])
 10264                           
 10265                           ; BSR set to: 1
 10266                           
 10267                           ; BSR set to: 1
 10268  000A02  511D               	movf	sprintf@c& (0+255),w,b
 10269  000A04  0D04               	mullw	4
 10270  000A06  0E19               	movlw	low _hexpowers
 10271  000A08  24F3               	addwf	prodl,w,c
 10272  000A0A  6EF6               	movwf	tblptrl,c
 10273  000A0C  0E7D               	movlw	high _hexpowers
 10274  000A0E  20F4               	addwfc	prodh,w,c
 10275  000A10  6EF7               	movwf	tblptrh,c
 10276  000A12                     	if	0	;There are less than 3 active tblptr bytes
 10277  000A12                     	endif
 10278  000A12  0009               	tblrd		*+
 10279  000A14  50F5               	movf	tablat,w,c
 10280  000A16  5D12               	subwf	sprintf@val& (0+255),w,b
 10281  000A18  0009               	tblrd		*+
 10282  000A1A  50F5               	movf	tablat,w,c
 10283  000A1C  5913               	subwfb	(sprintf@val+1)& (0+255),w,b
 10284  000A1E  0009               	tblrd		*+
 10285  000A20  50F5               	movf	tablat,w,c
 10286  000A22  5914               	subwfb	(sprintf@val+2)& (0+255),w,b
 10287  000A24  0009               	tblrd		*+
 10288  000A26  50F5               	movf	tablat,w,c
 10289  000A28  5915               	subwfb	(sprintf@val+3)& (0+255),w,b
 10290  000A2A  A0D8               	btfss	status,0,c
 10291  000A2C  D00D               	goto	l2425
 10292                           
 10293                           ; BSR set to: 1
 10294                           
 10295                           ; BSR set to: 1
 10296                           
 10297                           ; BSR set to: 1
 10298                           ;doprnt.c: 1318: break;
 10299  000A2E  2B1D               	incf	sprintf@c& (0+255),f,b
 10300  000A30  D7E4               	goto	l8811
 10301  000A32                     l2419:
 10302                           
 10303                           ; BSR set to: 1
 10304                           
 10305                           ; BSR set to: 1
 10306  000A32  511B               	movf	sprintf@flag& (0+255),w,b
 10307  000A34  0BC0               	andlw	192
 10308                           
 10309                           ; Switch size 1, requested type "space"
 10310                           ; Number of cases is 3, Range of values is 0 to 192
 10311                           ; switch strategies available:
 10312                           ; Name         Instructions Cycles
 10313                           ; simple_byte           10     6 (average)
 10314                           ;	Chosen strategy is simple_byte
 10315  000A36  0A00               	xorlw	0	; case 0
 10316  000A38  B4D8               	btfsc	status,2,c
 10317  000A3A  D7BF               	goto	l2420
 10318  000A3C  0A80               	xorlw	128	; case 128
 10319  000A3E  B4D8               	btfsc	status,2,c
 10320  000A40  D7DA               	goto	l2426
 10321  000A42  0A40               	xorlw	64	; case 192
 10322  000A44  B4D8               	btfsc	status,2,c
 10323  000A46  D7B9               	goto	l2420
 10324  000A48                     l2425:
 10325                           
 10326                           ; BSR set to: 1
 10327                           ;doprnt.c: 1345: if(width && flag & 0x03)
 10328                           
 10329                           ; BSR set to: 1
 10330  000A48  5119               	movf	sprintf@width& (0+255),w,b
 10331  000A4A  111A               	iorwf	(sprintf@width+1)& (0+255),w,b
 10332  000A4C  B4D8               	btfsc	status,2,c
 10333  000A4E  D011               	goto	l2430
 10334                           
 10335                           ; BSR set to: 1
 10336  000A50  0E03               	movlw	3
 10337  000A52  151B               	andwf	sprintf@flag& (0+255),w,b
 10338  000A54  0100               	movlb	0	; () banked
 10339  000A56  6FEB               	movwf	??_sprintf& (0+255),b
 10340  000A58  0E00               	movlw	0
 10341  000A5A  0101               	movlb	1	; () banked
 10342  000A5C  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
 10343  000A5E  0100               	movlb	0	; () banked
 10344  000A60  6FEC               	movwf	(??_sprintf+1)& (0+255),b
 10345  000A62  51EB               	movf	??_sprintf& (0+255),w,b
 10346  000A64  11EC               	iorwf	(??_sprintf+1)& (0+255),w,b
 10347  000A66  B4D8               	btfsc	status,2,c
 10348  000A68  D004               	goto	l2430
 10349                           
 10350                           ; BSR set to: 0
 10351                           ;doprnt.c: 1346: width--;
 10352  000A6A  0101               	movlb	1	; () banked
 10353  000A6C  0719               	decf	sprintf@width& (0+255),f,b
 10354  000A6E  A0D8               	btfss	status,0,c
 10355  000A70  071A               	decf	(sprintf@width+1)& (0+255),f,b
 10356  000A72                     l2430:
 10357                           
 10358                           ;doprnt.c: 1381: if(width > c)
 10359                           
 10360                           ; BSR set to: 1
 10361  000A72  0E80               	movlw	128
 10362  000A74  0101               	movlb	1	; () banked
 10363  000A76  BF1D               	btfsc	sprintf@c& (0+255),7,b
 10364  000A78  0E7F               	movlw	127
 10365  000A7A  0100               	movlb	0	; () banked
 10366  000A7C  6FEB               	movwf	??_sprintf& (0+255),b
 10367  000A7E  0101               	movlb	1	; () banked
 10368  000A80  5119               	movf	sprintf@width& (0+255),w,b
 10369  000A82  5D1D               	subwf	sprintf@c& (0+255),w,b
 10370  000A84  511A               	movf	(sprintf@width+1)& (0+255),w,b
 10371  000A86  0A80               	xorlw	128
 10372  000A88  0100               	movlb	0	; () banked
 10373  000A8A  59EB               	subwfb	??_sprintf& (0+255),w,b
 10374  000A8C  B0D8               	btfsc	status,0,c
 10375  000A8E  D008               	goto	l2431
 10376                           
 10377                           ; BSR set to: 0
 10378                           ;doprnt.c: 1382: width -= c;
 10379  000A90  0101               	movlb	1	; () banked
 10380  000A92  511D               	movf	sprintf@c& (0+255),w,b
 10381  000A94  5F19               	subwf	sprintf@width& (0+255),f,b
 10382  000A96  0E00               	movlw	0
 10383  000A98  BF1D               	btfsc	sprintf@c& (0+255),7,b
 10384  000A9A  0EFF               	movlw	255
 10385  000A9C  5B1A               	subwfb	(sprintf@width+1)& (0+255),f,b
 10386  000A9E  D005               	goto	l2432
 10387  000AA0                     l2431:
 10388                           
 10389                           ;doprnt.c: 1383: else
 10390                           ;doprnt.c: 1384: width = 0;
 10391                           
 10392                           ; BSR set to: 1
 10393  000AA0  0E00               	movlw	0
 10394  000AA2  0101               	movlb	1	; () banked
 10395  000AA4  6F1A               	movwf	(sprintf@width+1)& (0+255),b
 10396  000AA6  0E00               	movlw	0
 10397  000AA8  6F19               	movwf	sprintf@width& (0+255),b
 10398  000AAA                     l2432:
 10399                           
 10400                           ; BSR set to: 1
 10401                           ;doprnt.c: 1387: if(flag & 0x04) {
 10402                           
 10403                           ; BSR set to: 1
 10404  000AAA  A51B               	btfss	sprintf@flag& (0+255),2,b
 10405  000AAC  D028               	goto	l2433
 10406                           
 10407                           ; BSR set to: 1
 10408                           ;doprnt.c: 1392: if(flag & 0x03)
 10409  000AAE  0E03               	movlw	3
 10410  000AB0  151B               	andwf	sprintf@flag& (0+255),w,b
 10411  000AB2  0100               	movlb	0	; () banked
 10412  000AB4  6FEB               	movwf	??_sprintf& (0+255),b
 10413  000AB6  0E00               	movlw	0
 10414  000AB8  0101               	movlb	1	; () banked
 10415  000ABA  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
 10416  000ABC  0100               	movlb	0	; () banked
 10417  000ABE  6FEC               	movwf	(??_sprintf+1)& (0+255),b
 10418  000AC0  51EB               	movf	??_sprintf& (0+255),w,b
 10419  000AC2  11EC               	iorwf	(??_sprintf+1)& (0+255),w,b
 10420  000AC4  B4D8               	btfsc	status,2,c
 10421  000AC6  D008               	goto	l2434
 10422                           
 10423                           ; BSR set to: 0
 10424                           ;doprnt.c: 1393: ((*sp++ = ('-')));
 10425  000AC8  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 10426  000ACC  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 10427  000AD0  0E2D               	movlw	45
 10428  000AD2  6EDF               	movwf	indf2,c
 10429                           
 10430                           ; BSR set to: 0
 10431  000AD4  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 10432  000AD6  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 10433  000AD8                     l2434:
 10434                           
 10435                           ; BSR set to: 0
 10436                           ;doprnt.c: 1415: if(width)
 10437                           
 10438                           ; BSR set to: 0
 10439  000AD8  0101               	movlb	1	; () banked
 10440  000ADA  5119               	movf	sprintf@width& (0+255),w,b
 10441  000ADC  111A               	iorwf	(sprintf@width+1)& (0+255),w,b
 10442  000ADE  B4D8               	btfsc	status,2,c
 10443  000AE0  D038               	goto	l2442
 10444                           
 10445                           ; BSR set to: 1
 10446                           ;doprnt.c: 1417: ((*sp++ = ('0')));
 10447                           
 10448                           ; BSR set to: 1
 10449                           
 10450                           ;doprnt.c: 1416: do
 10451  000AE2  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 10452  000AE6  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 10453  000AEA  0E30               	movlw	48
 10454  000AEC  6EDF               	movwf	indf2,c
 10455                           
 10456                           ; BSR set to: 1
 10457  000AEE  0100               	movlb	0	; () banked
 10458  000AF0  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 10459  000AF2  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 10460                           
 10461                           ; BSR set to: 0
 10462                           ;doprnt.c: 1418: while(--width);
 10463  000AF4  0101               	movlb	1	; () banked
 10464  000AF6  0719               	decf	sprintf@width& (0+255),f,b
 10465  000AF8  A0D8               	btfss	status,0,c
 10466  000AFA  071A               	decf	(sprintf@width+1)& (0+255),f,b
 10467  000AFC  D7EE               	goto	L27
 10468  000AFE                     l2433:
 10469                           
 10470                           ; BSR set to: 1
 10471                           ;doprnt.c: 1422: {
 10472                           ;doprnt.c: 1424: if(width
 10473                           ;doprnt.c: 1428: )
 10474                           
 10475                           ; BSR set to: 1
 10476  000AFE  5119               	movf	sprintf@width& (0+255),w,b
 10477  000B00  111A               	iorwf	(sprintf@width+1)& (0+255),w,b
 10478  000B02  B4D8               	btfsc	status,2,c
 10479  000B04  D011               	goto	u8190
 10480  000B06                     u8180:
 10481                           
 10482                           ; BSR set to: 1
 10483                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 10484                           
 10485                           ; BSR set to: 1
 10486                           
 10487                           ;doprnt.c: 1429: do
 10488  000B06  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 10489  000B0A  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 10490  000B0E  0E20               	movlw	32
 10491  000B10  6EDF               	movwf	indf2,c
 10492                           
 10493                           ; BSR set to: 1
 10494  000B12  0100               	movlb	0	; () banked
 10495  000B14  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 10496  000B16  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 10497                           
 10498                           ; BSR set to: 0
 10499                           ;doprnt.c: 1431: while(--width);
 10500  000B18  0101               	movlb	1	; () banked
 10501  000B1A  0719               	decf	sprintf@width& (0+255),f,b
 10502  000B1C  A0D8               	btfss	status,0,c
 10503  000B1E  071A               	decf	(sprintf@width+1)& (0+255),f,b
 10504  000B20  5119               	movf	sprintf@width& (0+255),w,b
 10505  000B22  111A               	iorwf	(sprintf@width+1)& (0+255),w,b
 10506  000B24  A4D8               	btfss	status,2,c
 10507  000B26  D7EF               	goto	u8180
 10508  000B28                     u8190:
 10509                           
 10510                           ; BSR set to: 1
 10511                           ;doprnt.c: 1438: if(flag & 0x03)
 10512                           
 10513                           ; BSR set to: 1
 10514                           
 10515                           ; BSR set to: 1
 10516  000B28  0E03               	movlw	3
 10517  000B2A  151B               	andwf	sprintf@flag& (0+255),w,b
 10518  000B2C  0100               	movlb	0	; () banked
 10519  000B2E  6FEB               	movwf	??_sprintf& (0+255),b
 10520  000B30  0E00               	movlw	0
 10521  000B32  0101               	movlb	1	; () banked
 10522  000B34  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
 10523  000B36  0100               	movlb	0	; () banked
 10524  000B38  6FEC               	movwf	(??_sprintf+1)& (0+255),b
 10525  000B3A  51EB               	movf	??_sprintf& (0+255),w,b
 10526  000B3C  11EC               	iorwf	(??_sprintf+1)& (0+255),w,b
 10527  000B3E  B4D8               	btfsc	status,2,c
 10528  000B40  D008               	goto	l2442
 10529                           
 10530                           ; BSR set to: 0
 10531                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 10532  000B42  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 10533  000B46  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 10534  000B4A  0E2D               	movlw	45
 10535  000B4C  6EDF               	movwf	indf2,c
 10536                           
 10537                           ; BSR set to: 0
 10538  000B4E  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 10539  000B50  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 10540  000B52                     l2442:
 10541                           
 10542                           ;doprnt.c: 1469: }
 10543                           ;doprnt.c: 1472: prec = c;
 10544                           
 10545                           ; BSR set to: 0
 10546                           
 10547                           ; BSR set to: 0
 10548  000B52  0101               	movlb	1	; () banked
 10549  000B54  511D               	movf	sprintf@c& (0+255),w,b
 10550  000B56  6F0A               	movwf	sprintf@prec& (0+255),b
 10551  000B58  6B0B               	clrf	(sprintf@prec+1)& (0+255),b
 10552  000B5A  BF0A               	btfsc	sprintf@prec& (0+255),7,b
 10553  000B5C  070B               	decf	(sprintf@prec+1)& (0+255),f,b
 10554                           
 10555                           ;doprnt.c: 1474: while(prec--) {
 10556  000B5E  D08C               	goto	l2443
 10557  000B60                     
 10558                           ; BSR set to: 1
 10559                           ;doprnt.c: 1486: case 0xC0:
 10560                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 10561                           
 10562                           ; BSR set to: 1
 10563                           
 10564                           ; BSR set to: 1
 10565  000B60  C10A  F0EB         	movff	sprintf@prec,??_sprintf
 10566  000B64  C10B  F0EC         	movff	sprintf@prec+1,??_sprintf+1
 10567  000B68  0100               	movlb	0	; () banked
 10568  000B6A  90D8               	bcf	status,0,c
 10569  000B6C  37EB               	rlcf	??_sprintf& (0+255),f,b
 10570  000B6E  37EC               	rlcf	(??_sprintf+1)& (0+255),f,b
 10571  000B70  90D8               	bcf	status,0,c
 10572  000B72  37EB               	rlcf	??_sprintf& (0+255),f,b
 10573  000B74  37EC               	rlcf	(??_sprintf+1)& (0+255),f,b
 10574  000B76  0EA3               	movlw	low _dpowers
 10575  000B78  25EB               	addwf	??_sprintf& (0+255),w,b
 10576  000B7A  6EF6               	movwf	tblptrl,c
 10577  000B7C  0E7C               	movlw	high _dpowers
 10578  000B7E  21EC               	addwfc	(??_sprintf+1)& (0+255),w,b
 10579  000B80  6EF7               	movwf	tblptrh,c
 10580  000B82                     	if	0	;There are less than 3 active tblptr bytes
 10581  000B82                     	endif
 10582  000B82  0009               	tblrd		*+
 10583  000B84  CFF5 F064          	movff	tablat,___lldiv@divisor
 10584  000B88  0009               	tblrd		*+
 10585  000B8A  CFF5 F065          	movff	tablat,___lldiv@divisor+1
 10586  000B8E  0009               	tblrd		*+
 10587  000B90  CFF5 F066          	movff	tablat,___lldiv@divisor+2
 10588  000B94  000A               	tblrd		*-
 10589  000B96  CFF5 F067          	movff	tablat,___lldiv@divisor+3
 10590  000B9A  C112  F060         	movff	sprintf@val,___lldiv@dividend
 10591  000B9E  C113  F061         	movff	sprintf@val+1,___lldiv@dividend+1
 10592  000BA2  C114  F062         	movff	sprintf@val+2,___lldiv@dividend+2
 10593  000BA6  C115  F063         	movff	sprintf@val+3,___lldiv@dividend+3
 10594  000BAA  ECE3  F022         	call	___lldiv	;wreg free
 10595  000BAE  C060  F06D         	movff	?___lldiv,___llmod@dividend
 10596  000BB2  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
 10597  000BB6  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
 10598  000BBA  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
 10599  000BBE  0E0A               	movlw	10
 10600  000BC0  0100               	movlb	0	; () banked
 10601  000BC2  6F71               	movwf	___llmod@divisor& (0+255),b
 10602  000BC4  0E00               	movlw	0
 10603  000BC6  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 10604  000BC8  0E00               	movlw	0
 10605  000BCA  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 10606  000BCC  0E00               	movlw	0
 10607  000BCE  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 10608  000BD0  EC0E  F024         	call	___llmod	;wreg free
 10609  000BD4  0100               	movlb	0	; () banked
 10610  000BD6  516D               	movf	?___llmod& (0+255),w,b
 10611  000BD8  0F30               	addlw	48
 10612  000BDA  0101               	movlb	1	; () banked
 10613  000BDC  6F1D               	movwf	sprintf@c& (0+255),b
 10614                           
 10615                           ;doprnt.c: 1491: break;
 10616  000BDE  D043               	goto	l2448
 10617  000BE0                     
 10618                           ; BSR set to: 1
 10619                           ;doprnt.c: 1499: {
 10620                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 10621                           
 10622                           ; BSR set to: 1
 10623  000BE0  C112  F060         	movff	sprintf@val,___lldiv@dividend
 10624  000BE4  C113  F061         	movff	sprintf@val+1,___lldiv@dividend+1
 10625  000BE8  C114  F062         	movff	sprintf@val+2,___lldiv@dividend+2
 10626  000BEC  C115  F063         	movff	sprintf@val+3,___lldiv@dividend+3
 10627  000BF0  C10A  F0EB         	movff	sprintf@prec,??_sprintf
 10628  000BF4  C10B  F0EC         	movff	sprintf@prec+1,??_sprintf+1
 10629  000BF8  0100               	movlb	0	; () banked
 10630  000BFA  90D8               	bcf	status,0,c
 10631  000BFC  37EB               	rlcf	??_sprintf& (0+255),f,b
 10632  000BFE  37EC               	rlcf	(??_sprintf+1)& (0+255),f,b
 10633  000C00  90D8               	bcf	status,0,c
 10634  000C02  37EB               	rlcf	??_sprintf& (0+255),f,b
 10635  000C04  37EC               	rlcf	(??_sprintf+1)& (0+255),f,b
 10636  000C06  0E19               	movlw	low _hexpowers
 10637  000C08  25EB               	addwf	??_sprintf& (0+255),w,b
 10638  000C0A  6EF6               	movwf	tblptrl,c
 10639  000C0C  0E7D               	movlw	high _hexpowers
 10640  000C0E  21EC               	addwfc	(??_sprintf+1)& (0+255),w,b
 10641  000C10  6EF7               	movwf	tblptrh,c
 10642  000C12                     	if	0	;There are less than 3 active tblptr bytes
 10643  000C12                     	endif
 10644  000C12  0009               	tblrd		*+
 10645  000C14  CFF5 F064          	movff	tablat,___lldiv@divisor
 10646  000C18  0009               	tblrd		*+
 10647  000C1A  CFF5 F065          	movff	tablat,___lldiv@divisor+1
 10648  000C1E  0009               	tblrd		*+
 10649  000C20  CFF5 F066          	movff	tablat,___lldiv@divisor+2
 10650  000C24  000A               	tblrd		*-
 10651  000C26  CFF5 F067          	movff	tablat,___lldiv@divisor+3
 10652  000C2A  ECE3  F022         	call	___lldiv	;wreg free
 10653  000C2E  0100               	movlb	0	; () banked
 10654  000C30  5160               	movf	?___lldiv& (0+255),w,b
 10655  000C32  0B0F               	andlw	15
 10656  000C34  0101               	movlb	1	; () banked
 10657  000C36  6F03               	movwf	sprintf@idx& (0+255),b
 10658                           
 10659                           ; BSR set to: 1
 10660                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
 10661  000C38  5103               	movf	sprintf@idx& (0+255),w,b
 10662  000C3A  0D01               	mullw	1
 10663  000C3C  0E05               	movlw	low STR_32
 10664  000C3E  24F3               	addwf	prodl,w,c
 10665  000C40  6EF6               	movwf	tblptrl,c
 10666  000C42  0E7F               	movlw	high STR_32
 10667  000C44  20F4               	addwfc	prodh,w,c
 10668  000C46  6EF7               	movwf	tblptrh,c
 10669  000C48                     	if	0	;There are less than 3 active tblptr bytes
 10670  000C48                     	endif
 10671  000C48  0008               	tblrd		*
 10672  000C4A  CFF5 F11D          	movff	tablat,sprintf@c
 10673                           
 10674                           ; BSR set to: 1
 10675                           ;doprnt.c: 1523: }
 10676                           
 10677                           ;doprnt.c: 1508: }
 10678                           ;doprnt.c: 1510: break;
 10679  000C4E  D00B               	goto	l2448
 10680  000C50                     l8879:
 10681                           
 10682                           ; BSR set to: 1
 10683  000C50  511B               	movf	sprintf@flag& (0+255),w,b
 10684  000C52  0BC0               	andlw	192
 10685                           
 10686                           ; Switch size 1, requested type "space"
 10687                           ; Number of cases is 3, Range of values is 0 to 192
 10688                           ; switch strategies available:
 10689                           ; Name         Instructions Cycles
 10690                           ; simple_byte           10     6 (average)
 10691                           ;	Chosen strategy is simple_byte
 10692  000C54  0A00               	xorlw	0	; case 0
 10693  000C56  B4D8               	btfsc	status,2,c
 10694  000C58  D783               	goto	l2446
 10695  000C5A  0A80               	xorlw	128	; case 128
 10696  000C5C  B4D8               	btfsc	status,2,c
 10697  000C5E  D7C0               	goto	l2449
 10698  000C60  0A40               	xorlw	64	; case 192
 10699  000C62  B4D8               	btfsc	status,2,c
 10700  000C64  D77D               	goto	l2446
 10701  000C66                     l2448:
 10702                           
 10703                           ; BSR set to: 1
 10704                           ;doprnt.c: 1524: ((*sp++ = (c)));
 10705                           
 10706                           ; BSR set to: 1
 10707  000C66  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 10708  000C6A  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 10709  000C6E  C11D  FFDF         	movff	sprintf@c,indf2
 10710                           
 10711                           ; BSR set to: 1
 10712  000C72  0100               	movlb	0	; () banked
 10713  000C74  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 10714  000C76  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 10715  000C78                     l2443:
 10716                           
 10717                           ; BSR set to: 0
 10718  000C78  0101               	movlb	1	; () banked
 10719  000C7A  070A               	decf	sprintf@prec& (0+255),f,b
 10720  000C7C  A0D8               	btfss	status,0,c
 10721  000C7E  070B               	decf	(sprintf@prec+1)& (0+255),f,b
 10722  000C80  290A               	incf	sprintf@prec& (0+255),w,b
 10723  000C82  E1E6               	bnz	l8879
 10724  000C84  290B               	incf	(sprintf@prec+1)& (0+255),w,b
 10725  000C86  A4D8               	btfss	status,2,c
 10726  000C88  D7E3               	goto	l2445
 10727  000C8A                     u8210:
 10728                           
 10729                           ; BSR set to: 1
 10730                           
 10731                           ; BSR set to: 1
 10732  000C8A  C0C1  FFF6         	movff	sprintf@f,tblptrl
 10733  000C8E  C0C2  FFF7         	movff	sprintf@f+1,tblptrh
 10734  000C92  0100               	movlb	0	; () banked
 10735  000C94  4BC1               	infsnz	sprintf@f& (0+255),f,b
 10736  000C96  2BC2               	incf	(sprintf@f+1)& (0+255),f,b
 10737  000C98                     	if	0	;tblptru may be non-zero
 10738  000C98                     	endif
 10739  000C98                     	if	0	;tblptru may be non-zero
 10740  000C98                     	endif
 10741  000C98  0008               	tblrd		*
 10742  000C9A  CFF5 F11D          	movff	tablat,sprintf@c
 10743  000C9E  0101               	movlb	1	; () banked
 10744  000CA0  511D               	movf	sprintf@c& (0+255),w,b
 10745  000CA2  A4D8               	btfss	status,2,c
 10746  000CA4  EF10  F000         	goto	l2327
 10747  000CA8                     u8220:
 10748                           
 10749                           ;doprnt.c: 1538: *sp = 0;
 10750                           
 10751                           ; BSR set to: 1
 10752                           
 10753                           ;doprnt.c: 1525: }
 10754                           ;doprnt.c: 1533: }
 10755                           ;doprnt.c: 1535: alldone:
 10756                           
 10757                           ; BSR set to: 1
 10758  000CA8  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 10759  000CAC  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 10760  000CB0  0E00               	movlw	0
 10761  000CB2  6EDF               	movwf	indf2,c
 10762  000CB4  0012               	return	
 10763  000CB6                     __end_of_sprintf:
 10764                           	opt stack 0
 10765                           tblptru	equ	0xFF8
 10766                           tblptrh	equ	0xFF7
 10767                           tblptrl	equ	0xFF6
 10768                           tablat	equ	0xFF5
 10769                           prodh	equ	0xFF4
 10770                           prodl	equ	0xFF3
 10771                           intcon	equ	0xFF2
 10772                           postinc0	equ	0xFEE
 10773                           wreg	equ	0xFE8
 10774                           indf1	equ	0xFE7
 10775                           postdec1	equ	0xFE5
 10776                           fsr1h	equ	0xFE2
 10777                           fsr1l	equ	0xFE1
 10778                           indf2	equ	0xFDF
 10779                           postinc2	equ	0xFDE
 10780                           postdec2	equ	0xFDD
 10781                           plusw2	equ	0xFDB
 10782                           fsr2h	equ	0xFDA
 10783                           fsr2l	equ	0xFD9
 10784                           status	equ	0xFD8
 10785                           
 10786 ;; *************** function _scale *****************
 10787 ;; Defined at:
 10788 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\doprnt.c"
 10789 ;; Parameters:    Size  Location     Type
 10790 ;;  scl             1    wreg     char 
 10791 ;; Auto vars:     Size  Location     Type
 10792 ;;  scl             1   53[BANK0 ] char 
 10793 ;; Return value:  Size  Location     Type
 10794 ;;                  3   47[BANK0 ] char 
 10795 ;; Registers used:
 10796 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10797 ;; Tracked objects:
 10798 ;;		On entry : 0/0
 10799 ;;		On exit  : 0/0
 10800 ;;		Unchanged: 0/0
 10801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10802 ;;      Params:         0       3       0       0       0       0       0       0       0
 10803 ;;      Locals:         0       4       0       0       0       0       0       0       0
 10804 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10805 ;;      Totals:         0       7       0       0       0       0       0       0       0
 10806 ;;Total ram usage:        7 bytes
 10807 ;; Hardware stack levels used:    1
 10808 ;; Hardware stack levels required when called:   12
 10809 ;; This function calls:
 10810 ;;		___awdiv
 10811 ;;		___awmod
 10812 ;;		___ftmul
 10813 ;;		___wmul
 10814 ;; This function is called by:
 10815 ;;		_sprintf
 10816 ;; This function uses a non-reentrant model
 10817 ;;
 10818                           
 10819                           	psect	text30
 10820  0017DA                     __ptext30:
 10821                           	opt stack 0
 10822  0017DA                     _scale:
 10823                           	opt stack 17
 10824                           
 10825                           ;incstack = 0
 10826                           ;scale@scl stored from wreg
 10827  0017DA  0100               	movlb	0	; () banked
 10828  0017DC  6F95               	movwf	scale@scl& (0+255),b
 10829                           
 10830                           ;doprnt.c: 428: if(scl < 0) {
 10831  0017DE  0100               	movlb	0	; () banked
 10832  0017E0  AF95               	btfss	scale@scl& (0+255),7,b
 10833  0017E2  D10C               	goto	l2316
 10834                           
 10835                           ; BSR set to: 0
 10836                           ;doprnt.c: 429: scl = -scl;
 10837  0017E4  6D95               	negf	scale@scl& (0+255),b
 10838                           
 10839                           ;doprnt.c: 430: if(scl>=110)
 10840  0017E6  5195               	movf	scale@scl& (0+255),w,b
 10841  0017E8  0A80               	xorlw	128
 10842  0017EA  0F12               	addlw	-238
 10843  0017EC  A0D8               	btfss	status,0,c
 10844  0017EE  D097               	goto	l2317
 10845                           
 10846                           ; BSR set to: 0
 10847                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 10848  0017F0  0E00               	movlw	0
 10849  0017F2  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10850  0017F4  0E03               	movlw	3
 10851  0017F6  6F70               	movwf	___wmul@multiplicand& (0+255),b
 10852  0017F8  0E00               	movlw	0
 10853  0017FA  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 10854  0017FC  0E0A               	movlw	10
 10855  0017FE  6F68               	movwf	___awdiv@divisor& (0+255),b
 10856  001800  0E00               	movlw	0
 10857  001802  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 10858  001804  0E64               	movlw	100
 10859  001806  6F62               	movwf	___awmod@divisor& (0+255),b
 10860  001808  5195               	movf	scale@scl& (0+255),w,b
 10861  00180A  6F60               	movwf	___awmod@dividend& (0+255),b
 10862  00180C  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 10863  00180E  BF60               	btfsc	___awmod@dividend& (0+255),7,b
 10864  001810  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
 10865  001812  EC9F  F023         	call	___awmod	;wreg free
 10866  001816  C060  F066         	movff	?___awmod,___awdiv@dividend
 10867  00181A  C061  F067         	movff	?___awmod+1,___awdiv@dividend+1
 10868  00181E  EC5D  F022         	call	___awdiv	;wreg free
 10869  001822  0E09               	movlw	9
 10870  001824  0100               	movlb	0	; () banked
 10871  001826  2566               	addwf	?___awdiv& (0+255),w,b
 10872  001828  6F6E               	movwf	___wmul@multiplier& (0+255),b
 10873  00182A  0E00               	movlw	0
 10874  00182C  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 10875  00182E  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 10876  001830  EC1A  F028         	call	___wmul	;wreg free
 10877  001834  0EF2               	movlw	low __npowers_
 10878  001836  0100               	movlb	0	; () banked
 10879  001838  256E               	addwf	?___wmul& (0+255),w,b
 10880  00183A  6EF6               	movwf	tblptrl,c
 10881  00183C  0E7C               	movlw	high __npowers_
 10882  00183E  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 10883  001840  6EF7               	movwf	tblptrh,c
 10884  001842                     	if	0	;There are less than 3 active tblptr bytes
 10885  001842                     	endif
 10886  001842  0009               	tblrd		*+
 10887  001844  CFF5 F083          	movff	tablat,___ftmul@f2
 10888  001848  0009               	tblrd		*+
 10889  00184A  CFF5 F084          	movff	tablat,___ftmul@f2+1
 10890  00184E  000A               	tblrd		*-
 10891  001850  CFF5 F085          	movff	tablat,___ftmul@f2+2
 10892  001854  0E00               	movlw	0
 10893  001856  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 10894  001858  0E64               	movlw	100
 10895  00185A  6F68               	movwf	___awdiv@divisor& (0+255),b
 10896  00185C  5195               	movf	scale@scl& (0+255),w,b
 10897  00185E  6F66               	movwf	___awdiv@dividend& (0+255),b
 10898  001860  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
 10899  001862  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
 10900  001864  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
 10901  001866  EC5D  F022         	call	___awdiv	;wreg free
 10902  00186A  0E12               	movlw	18
 10903  00186C  0100               	movlb	0	; () banked
 10904  00186E  2566               	addwf	?___awdiv& (0+255),w,b
 10905  001870  6F6E               	movwf	___wmul@multiplier& (0+255),b
 10906  001872  0E00               	movlw	0
 10907  001874  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 10908  001876  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 10909  001878  0E00               	movlw	0
 10910  00187A  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10911  00187C  0E03               	movlw	3
 10912  00187E  6F70               	movwf	___wmul@multiplicand& (0+255),b
 10913  001880  EC1A  F028         	call	___wmul	;wreg free
 10914  001884  0EF2               	movlw	low __npowers_
 10915  001886  0100               	movlb	0	; () banked
 10916  001888  256E               	addwf	?___wmul& (0+255),w,b
 10917  00188A  6EF6               	movwf	tblptrl,c
 10918  00188C  0E7C               	movlw	high __npowers_
 10919  00188E  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 10920  001890  6EF7               	movwf	tblptrh,c
 10921  001892                     	if	0	;There are less than 3 active tblptr bytes
 10922  001892                     	endif
 10923  001892  0009               	tblrd		*+
 10924  001894  CFF5 F080          	movff	tablat,___ftmul@f1
 10925  001898  0009               	tblrd		*+
 10926  00189A  CFF5 F081          	movff	tablat,___ftmul@f1+1
 10927  00189E  000A               	tblrd		*-
 10928  0018A0  CFF5 F082          	movff	tablat,___ftmul@f1+2
 10929  0018A4  EC46  F01B         	call	___ftmul	;wreg free
 10930  0018A8  C080  F092         	movff	?___ftmul,_scale$5720
 10931  0018AC  C081  F093         	movff	?___ftmul+1,_scale$5720+1
 10932  0018B0  C082  F094         	movff	?___ftmul+2,_scale$5720+2
 10933                           
 10934                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 10935  0018B4  C092  F080         	movff	_scale$5720,___ftmul@f1
 10936  0018B8  C093  F081         	movff	_scale$5720+1,___ftmul@f1+1
 10937  0018BC  C094  F082         	movff	_scale$5720+2,___ftmul@f1+2
 10938  0018C0  0E00               	movlw	0
 10939  0018C2  0100               	movlb	0	; () banked
 10940  0018C4  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10941  0018C6  0E03               	movlw	3
 10942  0018C8  6F70               	movwf	___wmul@multiplicand& (0+255),b
 10943  0018CA  0E00               	movlw	0
 10944  0018CC  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 10945  0018CE  0E0A               	movlw	10
 10946  0018D0  6F62               	movwf	___awmod@divisor& (0+255),b
 10947  0018D2  5195               	movf	scale@scl& (0+255),w,b
 10948  0018D4  6F60               	movwf	___awmod@dividend& (0+255),b
 10949  0018D6  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 10950  0018D8  BF60               	btfsc	___awmod@dividend& (0+255),7,b
 10951  0018DA  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
 10952  0018DC  EC9F  F023         	call	___awmod	;wreg free
 10953  0018E0  C060  F06E         	movff	?___awmod,___wmul@multiplier
 10954  0018E4  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
 10955  0018E8  EC1A  F028         	call	___wmul	;wreg free
 10956  0018EC  0EF2               	movlw	low __npowers_
 10957  0018EE  0100               	movlb	0	; () banked
 10958  0018F0  256E               	addwf	?___wmul& (0+255),w,b
 10959  0018F2  6EF6               	movwf	tblptrl,c
 10960  0018F4  0E7C               	movlw	high __npowers_
 10961  0018F6  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 10962  0018F8  6EF7               	movwf	tblptrh,c
 10963  0018FA                     	if	0	;There are less than 3 active tblptr bytes
 10964  0018FA                     	endif
 10965  0018FA  0009               	tblrd		*+
 10966  0018FC  CFF5 F083          	movff	tablat,___ftmul@f2
 10967  001900  0009               	tblrd		*+
 10968  001902  CFF5 F084          	movff	tablat,___ftmul@f2+1
 10969  001906  000A               	tblrd		*-
 10970  001908  CFF5 F085          	movff	tablat,___ftmul@f2+2
 10971  00190C  EC46  F01B         	call	___ftmul	;wreg free
 10972  001910  C080  F08F         	movff	?___ftmul,?_scale
 10973  001914  C081  F090         	movff	?___ftmul+1,?_scale+1
 10974  001918  C082  F091         	movff	?___ftmul+2,?_scale+2
 10975  00191C  0012               	return	
 10976  00191E                     l2317:
 10977                           
 10978                           ;doprnt.c: 432: else if(scl > 10)
 10979  00191E  0100               	movlb	0	; () banked
 10980  001920  5195               	movf	scale@scl& (0+255),w,b
 10981  001922  0A80               	xorlw	128
 10982  001924  0F75               	addlw	-139
 10983  001926  A0D8               	btfss	status,0,c
 10984  001928  D056               	goto	l2320
 10985                           
 10986                           ; BSR set to: 0
 10987                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 10988  00192A  0E00               	movlw	0
 10989  00192C  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 10990  00192E  0E0A               	movlw	10
 10991  001930  6F68               	movwf	___awdiv@divisor& (0+255),b
 10992  001932  5195               	movf	scale@scl& (0+255),w,b
 10993  001934  6F66               	movwf	___awdiv@dividend& (0+255),b
 10994  001936  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
 10995  001938  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
 10996  00193A  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
 10997  00193C  EC5D  F022         	call	___awdiv	;wreg free
 10998  001940  0E09               	movlw	9
 10999  001942  0100               	movlb	0	; () banked
 11000  001944  2566               	addwf	?___awdiv& (0+255),w,b
 11001  001946  6F6E               	movwf	___wmul@multiplier& (0+255),b
 11002  001948  0E00               	movlw	0
 11003  00194A  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 11004  00194C  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 11005  00194E  0E00               	movlw	0
 11006  001950  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11007  001952  0E03               	movlw	3
 11008  001954  6F70               	movwf	___wmul@multiplicand& (0+255),b
 11009  001956  EC1A  F028         	call	___wmul	;wreg free
 11010  00195A  0EF2               	movlw	low __npowers_
 11011  00195C  0100               	movlb	0	; () banked
 11012  00195E  256E               	addwf	?___wmul& (0+255),w,b
 11013  001960  6EF6               	movwf	tblptrl,c
 11014  001962  0E7C               	movlw	high __npowers_
 11015  001964  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 11016  001966  6EF7               	movwf	tblptrh,c
 11017  001968                     	if	0	;There are less than 3 active tblptr bytes
 11018  001968                     	endif
 11019  001968  0009               	tblrd		*+
 11020  00196A  CFF5 F080          	movff	tablat,___ftmul@f1
 11021  00196E  0009               	tblrd		*+
 11022  001970  CFF5 F081          	movff	tablat,___ftmul@f1+1
 11023  001974  000A               	tblrd		*-
 11024  001976  CFF5 F082          	movff	tablat,___ftmul@f1+2
 11025  00197A  0E00               	movlw	0
 11026  00197C  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11027  00197E  0E03               	movlw	3
 11028  001980  6F70               	movwf	___wmul@multiplicand& (0+255),b
 11029  001982  0E00               	movlw	0
 11030  001984  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 11031  001986  0E0A               	movlw	10
 11032  001988  6F62               	movwf	___awmod@divisor& (0+255),b
 11033  00198A  5195               	movf	scale@scl& (0+255),w,b
 11034  00198C  6F60               	movwf	___awmod@dividend& (0+255),b
 11035  00198E  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 11036  001990  BF60               	btfsc	___awmod@dividend& (0+255),7,b
 11037  001992  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
 11038  001994  EC9F  F023         	call	___awmod	;wreg free
 11039  001998  C060  F06E         	movff	?___awmod,___wmul@multiplier
 11040  00199C  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
 11041  0019A0  EC1A  F028         	call	___wmul	;wreg free
 11042  0019A4  0EF2               	movlw	low __npowers_
 11043  0019A6  0100               	movlb	0	; () banked
 11044  0019A8  256E               	addwf	?___wmul& (0+255),w,b
 11045  0019AA  6EF6               	movwf	tblptrl,c
 11046  0019AC  0E7C               	movlw	high __npowers_
 11047  0019AE  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 11048  0019B0  6EF7               	movwf	tblptrh,c
 11049  0019B2                     	if	0	;There are less than 3 active tblptr bytes
 11050  0019B2                     	endif
 11051  0019B2  0009               	tblrd		*+
 11052  0019B4  CFF5 F083          	movff	tablat,___ftmul@f2
 11053  0019B8  0009               	tblrd		*+
 11054  0019BA  CFF5 F084          	movff	tablat,___ftmul@f2+1
 11055  0019BE  000A               	tblrd		*-
 11056  0019C0  CFF5 F085          	movff	tablat,___ftmul@f2+2
 11057  0019C4  EC46  F01B         	call	___ftmul	;wreg free
 11058  0019C8  C080  F08F         	movff	?___ftmul,?_scale
 11059  0019CC  C081  F090         	movff	?___ftmul+1,?_scale+1
 11060  0019D0  C082  F091         	movff	?___ftmul+2,?_scale+2
 11061  0019D4  0012               	return	
 11062  0019D6                     l2320:
 11063                           
 11064                           ;doprnt.c: 434: return _npowers_[scl];
 11065  0019D6  0100               	movlb	0	; () banked
 11066  0019D8  5195               	movf	scale@scl& (0+255),w,b
 11067  0019DA  0D03               	mullw	3
 11068  0019DC  0EF2               	movlw	low __npowers_
 11069  0019DE  24F3               	addwf	prodl,w,c
 11070  0019E0  6EF6               	movwf	tblptrl,c
 11071  0019E2  0E7C               	movlw	high __npowers_
 11072  0019E4  20F4               	addwfc	prodh,w,c
 11073  0019E6  6EF7               	movwf	tblptrh,c
 11074  0019E8                     	if	0	;There are less than 3 active tblptr bytes
 11075  0019E8                     	endif
 11076  0019E8  0009               	tblrd		*+
 11077  0019EA  CFF5 F08F          	movff	tablat,?_scale
 11078  0019EE  0009               	tblrd		*+
 11079  0019F0  CFF5 F090          	movff	tablat,?_scale+1
 11080  0019F4  000A               	tblrd		*-
 11081  0019F6  CFF5 F091          	movff	tablat,?_scale+2
 11082                           
 11083                           ; BSR set to: 0
 11084  0019FA  0012               	return	
 11085  0019FC                     l2316:
 11086                           
 11087                           ; BSR set to: 0
 11088                           ;doprnt.c: 435: }
 11089                           ;doprnt.c: 436: if(scl>=110)
 11090                           
 11091                           ; BSR set to: 0
 11092  0019FC  5195               	movf	scale@scl& (0+255),w,b
 11093  0019FE  0A80               	xorlw	128
 11094  001A00  0F12               	addlw	-238
 11095  001A02  A0D8               	btfss	status,0,c
 11096  001A04  D097               	goto	l2321
 11097                           
 11098                           ; BSR set to: 0
 11099                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 11100  001A06  0E00               	movlw	0
 11101  001A08  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11102  001A0A  0E03               	movlw	3
 11103  001A0C  6F70               	movwf	___wmul@multiplicand& (0+255),b
 11104  001A0E  0E00               	movlw	0
 11105  001A10  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 11106  001A12  0E0A               	movlw	10
 11107  001A14  6F68               	movwf	___awdiv@divisor& (0+255),b
 11108  001A16  0E00               	movlw	0
 11109  001A18  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 11110  001A1A  0E64               	movlw	100
 11111  001A1C  6F62               	movwf	___awmod@divisor& (0+255),b
 11112  001A1E  5195               	movf	scale@scl& (0+255),w,b
 11113  001A20  6F60               	movwf	___awmod@dividend& (0+255),b
 11114  001A22  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 11115  001A24  BF60               	btfsc	___awmod@dividend& (0+255),7,b
 11116  001A26  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
 11117  001A28  EC9F  F023         	call	___awmod	;wreg free
 11118  001A2C  C060  F066         	movff	?___awmod,___awdiv@dividend
 11119  001A30  C061  F067         	movff	?___awmod+1,___awdiv@dividend+1
 11120  001A34  EC5D  F022         	call	___awdiv	;wreg free
 11121  001A38  0E09               	movlw	9
 11122  001A3A  0100               	movlb	0	; () banked
 11123  001A3C  2566               	addwf	?___awdiv& (0+255),w,b
 11124  001A3E  6F6E               	movwf	___wmul@multiplier& (0+255),b
 11125  001A40  0E00               	movlw	0
 11126  001A42  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 11127  001A44  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 11128  001A46  EC1A  F028         	call	___wmul	;wreg free
 11129  001A4A  0ECB               	movlw	low __powers_
 11130  001A4C  0100               	movlb	0	; () banked
 11131  001A4E  256E               	addwf	?___wmul& (0+255),w,b
 11132  001A50  6EF6               	movwf	tblptrl,c
 11133  001A52  0E7C               	movlw	high __powers_
 11134  001A54  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 11135  001A56  6EF7               	movwf	tblptrh,c
 11136  001A58                     	if	0	;There are less than 3 active tblptr bytes
 11137  001A58                     	endif
 11138  001A58  0009               	tblrd		*+
 11139  001A5A  CFF5 F083          	movff	tablat,___ftmul@f2
 11140  001A5E  0009               	tblrd		*+
 11141  001A60  CFF5 F084          	movff	tablat,___ftmul@f2+1
 11142  001A64  000A               	tblrd		*-
 11143  001A66  CFF5 F085          	movff	tablat,___ftmul@f2+2
 11144  001A6A  0E00               	movlw	0
 11145  001A6C  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 11146  001A6E  0E64               	movlw	100
 11147  001A70  6F68               	movwf	___awdiv@divisor& (0+255),b
 11148  001A72  5195               	movf	scale@scl& (0+255),w,b
 11149  001A74  6F66               	movwf	___awdiv@dividend& (0+255),b
 11150  001A76  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
 11151  001A78  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
 11152  001A7A  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
 11153  001A7C  EC5D  F022         	call	___awdiv	;wreg free
 11154  001A80  0E12               	movlw	18
 11155  001A82  0100               	movlb	0	; () banked
 11156  001A84  2566               	addwf	?___awdiv& (0+255),w,b
 11157  001A86  6F6E               	movwf	___wmul@multiplier& (0+255),b
 11158  001A88  0E00               	movlw	0
 11159  001A8A  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 11160  001A8C  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 11161  001A8E  0E00               	movlw	0
 11162  001A90  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11163  001A92  0E03               	movlw	3
 11164  001A94  6F70               	movwf	___wmul@multiplicand& (0+255),b
 11165  001A96  EC1A  F028         	call	___wmul	;wreg free
 11166  001A9A  0ECB               	movlw	low __powers_
 11167  001A9C  0100               	movlb	0	; () banked
 11168  001A9E  256E               	addwf	?___wmul& (0+255),w,b
 11169  001AA0  6EF6               	movwf	tblptrl,c
 11170  001AA2  0E7C               	movlw	high __powers_
 11171  001AA4  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 11172  001AA6  6EF7               	movwf	tblptrh,c
 11173  001AA8                     	if	0	;There are less than 3 active tblptr bytes
 11174  001AA8                     	endif
 11175  001AA8  0009               	tblrd		*+
 11176  001AAA  CFF5 F080          	movff	tablat,___ftmul@f1
 11177  001AAE  0009               	tblrd		*+
 11178  001AB0  CFF5 F081          	movff	tablat,___ftmul@f1+1
 11179  001AB4  000A               	tblrd		*-
 11180  001AB6  CFF5 F082          	movff	tablat,___ftmul@f1+2
 11181  001ABA  EC46  F01B         	call	___ftmul	;wreg free
 11182  001ABE  C080  F092         	movff	?___ftmul,_scale$5720
 11183  001AC2  C081  F093         	movff	?___ftmul+1,_scale$5720+1
 11184  001AC6  C082  F094         	movff	?___ftmul+2,_scale$5720+2
 11185                           
 11186                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 11187  001ACA  C092  F080         	movff	_scale$5720,___ftmul@f1
 11188  001ACE  C093  F081         	movff	_scale$5720+1,___ftmul@f1+1
 11189  001AD2  C094  F082         	movff	_scale$5720+2,___ftmul@f1+2
 11190  001AD6  0E00               	movlw	0
 11191  001AD8  0100               	movlb	0	; () banked
 11192  001ADA  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11193  001ADC  0E03               	movlw	3
 11194  001ADE  6F70               	movwf	___wmul@multiplicand& (0+255),b
 11195  001AE0  0E00               	movlw	0
 11196  001AE2  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 11197  001AE4  0E0A               	movlw	10
 11198  001AE6  6F62               	movwf	___awmod@divisor& (0+255),b
 11199  001AE8  5195               	movf	scale@scl& (0+255),w,b
 11200  001AEA  6F60               	movwf	___awmod@dividend& (0+255),b
 11201  001AEC  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 11202  001AEE  BF60               	btfsc	___awmod@dividend& (0+255),7,b
 11203  001AF0  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
 11204  001AF2  EC9F  F023         	call	___awmod	;wreg free
 11205  001AF6  C060  F06E         	movff	?___awmod,___wmul@multiplier
 11206  001AFA  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
 11207  001AFE  EC1A  F028         	call	___wmul	;wreg free
 11208  001B02  0ECB               	movlw	low __powers_
 11209  001B04  0100               	movlb	0	; () banked
 11210  001B06  256E               	addwf	?___wmul& (0+255),w,b
 11211  001B08  6EF6               	movwf	tblptrl,c
 11212  001B0A  0E7C               	movlw	high __powers_
 11213  001B0C  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 11214  001B0E  6EF7               	movwf	tblptrh,c
 11215  001B10                     	if	0	;There are less than 3 active tblptr bytes
 11216  001B10                     	endif
 11217  001B10  0009               	tblrd		*+
 11218  001B12  CFF5 F083          	movff	tablat,___ftmul@f2
 11219  001B16  0009               	tblrd		*+
 11220  001B18  CFF5 F084          	movff	tablat,___ftmul@f2+1
 11221  001B1C  000A               	tblrd		*-
 11222  001B1E  CFF5 F085          	movff	tablat,___ftmul@f2+2
 11223  001B22  EC46  F01B         	call	___ftmul	;wreg free
 11224  001B26  C080  F08F         	movff	?___ftmul,?_scale
 11225  001B2A  C081  F090         	movff	?___ftmul+1,?_scale+1
 11226  001B2E  C082  F091         	movff	?___ftmul+2,?_scale+2
 11227  001B32  0012               	return	
 11228  001B34                     l2321:
 11229                           
 11230                           ;doprnt.c: 438: else if(scl > 10)
 11231  001B34  0100               	movlb	0	; () banked
 11232  001B36  5195               	movf	scale@scl& (0+255),w,b
 11233  001B38  0A80               	xorlw	128
 11234  001B3A  0F75               	addlw	-139
 11235  001B3C  A0D8               	btfss	status,0,c
 11236  001B3E  D056               	goto	l2323
 11237                           
 11238                           ; BSR set to: 0
 11239                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 11240  001B40  0E00               	movlw	0
 11241  001B42  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 11242  001B44  0E0A               	movlw	10
 11243  001B46  6F68               	movwf	___awdiv@divisor& (0+255),b
 11244  001B48  5195               	movf	scale@scl& (0+255),w,b
 11245  001B4A  6F66               	movwf	___awdiv@dividend& (0+255),b
 11246  001B4C  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
 11247  001B4E  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
 11248  001B50  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
 11249  001B52  EC5D  F022         	call	___awdiv	;wreg free
 11250  001B56  0E09               	movlw	9
 11251  001B58  0100               	movlb	0	; () banked
 11252  001B5A  2566               	addwf	?___awdiv& (0+255),w,b
 11253  001B5C  6F6E               	movwf	___wmul@multiplier& (0+255),b
 11254  001B5E  0E00               	movlw	0
 11255  001B60  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 11256  001B62  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 11257  001B64  0E00               	movlw	0
 11258  001B66  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11259  001B68  0E03               	movlw	3
 11260  001B6A  6F70               	movwf	___wmul@multiplicand& (0+255),b
 11261  001B6C  EC1A  F028         	call	___wmul	;wreg free
 11262  001B70  0ECB               	movlw	low __powers_
 11263  001B72  0100               	movlb	0	; () banked
 11264  001B74  256E               	addwf	?___wmul& (0+255),w,b
 11265  001B76  6EF6               	movwf	tblptrl,c
 11266  001B78  0E7C               	movlw	high __powers_
 11267  001B7A  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 11268  001B7C  6EF7               	movwf	tblptrh,c
 11269  001B7E                     	if	0	;There are less than 3 active tblptr bytes
 11270  001B7E                     	endif
 11271  001B7E  0009               	tblrd		*+
 11272  001B80  CFF5 F080          	movff	tablat,___ftmul@f1
 11273  001B84  0009               	tblrd		*+
 11274  001B86  CFF5 F081          	movff	tablat,___ftmul@f1+1
 11275  001B8A  000A               	tblrd		*-
 11276  001B8C  CFF5 F082          	movff	tablat,___ftmul@f1+2
 11277  001B90  0E00               	movlw	0
 11278  001B92  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11279  001B94  0E03               	movlw	3
 11280  001B96  6F70               	movwf	___wmul@multiplicand& (0+255),b
 11281  001B98  0E00               	movlw	0
 11282  001B9A  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 11283  001B9C  0E0A               	movlw	10
 11284  001B9E  6F62               	movwf	___awmod@divisor& (0+255),b
 11285  001BA0  5195               	movf	scale@scl& (0+255),w,b
 11286  001BA2  6F60               	movwf	___awmod@dividend& (0+255),b
 11287  001BA4  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 11288  001BA6  BF60               	btfsc	___awmod@dividend& (0+255),7,b
 11289  001BA8  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
 11290  001BAA  EC9F  F023         	call	___awmod	;wreg free
 11291  001BAE  C060  F06E         	movff	?___awmod,___wmul@multiplier
 11292  001BB2  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
 11293  001BB6  EC1A  F028         	call	___wmul	;wreg free
 11294  001BBA  0ECB               	movlw	low __powers_
 11295  001BBC  0100               	movlb	0	; () banked
 11296  001BBE  256E               	addwf	?___wmul& (0+255),w,b
 11297  001BC0  6EF6               	movwf	tblptrl,c
 11298  001BC2  0E7C               	movlw	high __powers_
 11299  001BC4  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 11300  001BC6  6EF7               	movwf	tblptrh,c
 11301  001BC8                     	if	0	;There are less than 3 active tblptr bytes
 11302  001BC8                     	endif
 11303  001BC8  0009               	tblrd		*+
 11304  001BCA  CFF5 F083          	movff	tablat,___ftmul@f2
 11305  001BCE  0009               	tblrd		*+
 11306  001BD0  CFF5 F084          	movff	tablat,___ftmul@f2+1
 11307  001BD4  000A               	tblrd		*-
 11308  001BD6  CFF5 F085          	movff	tablat,___ftmul@f2+2
 11309  001BDA  EC46  F01B         	call	___ftmul	;wreg free
 11310  001BDE  C080  F08F         	movff	?___ftmul,?_scale
 11311  001BE2  C081  F090         	movff	?___ftmul+1,?_scale+1
 11312  001BE6  C082  F091         	movff	?___ftmul+2,?_scale+2
 11313  001BEA  0012               	return	
 11314  001BEC                     l2323:
 11315                           
 11316                           ;doprnt.c: 440: return _powers_[scl];
 11317  001BEC  0100               	movlb	0	; () banked
 11318  001BEE  5195               	movf	scale@scl& (0+255),w,b
 11319  001BF0  0D03               	mullw	3
 11320  001BF2  0ECB               	movlw	low __powers_
 11321  001BF4  24F3               	addwf	prodl,w,c
 11322  001BF6  6EF6               	movwf	tblptrl,c
 11323  001BF8  0E7C               	movlw	high __powers_
 11324  001BFA  20F4               	addwfc	prodh,w,c
 11325  001BFC  6EF7               	movwf	tblptrh,c
 11326  001BFE                     	if	0	;There are less than 3 active tblptr bytes
 11327  001BFE                     	endif
 11328  001BFE  0009               	tblrd		*+
 11329  001C00  CFF5 F08F          	movff	tablat,?_scale
 11330  001C04  0009               	tblrd		*+
 11331  001C06  CFF5 F090          	movff	tablat,?_scale+1
 11332  001C0A  000A               	tblrd		*-
 11333  001C0C  CFF5 F091          	movff	tablat,?_scale+2
 11334  001C10  0012               	return	
 11335  001C12                     __end_of_scale:
 11336                           	opt stack 0
 11337                           tblptru	equ	0xFF8
 11338                           tblptrh	equ	0xFF7
 11339                           tblptrl	equ	0xFF6
 11340                           tablat	equ	0xFF5
 11341                           prodh	equ	0xFF4
 11342                           prodl	equ	0xFF3
 11343                           intcon	equ	0xFF2
 11344                           postinc0	equ	0xFEE
 11345                           wreg	equ	0xFE8
 11346                           indf1	equ	0xFE7
 11347                           postdec1	equ	0xFE5
 11348                           fsr1h	equ	0xFE2
 11349                           fsr1l	equ	0xFE1
 11350                           indf2	equ	0xFDF
 11351                           postinc2	equ	0xFDE
 11352                           postdec2	equ	0xFDD
 11353                           plusw2	equ	0xFDB
 11354                           fsr2h	equ	0xFDA
 11355                           fsr2l	equ	0xFD9
 11356                           status	equ	0xFD8
 11357                           
 11358 ;; *************** function _isdigit *****************
 11359 ;; Defined at:
 11360 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\isdigit.c"
 11361 ;; Parameters:    Size  Location     Type
 11362 ;;  c               1    wreg     unsigned char 
 11363 ;; Auto vars:     Size  Location     Type
 11364 ;;  c               1    2[BANK0 ] unsigned char 
 11365 ;; Return value:  Size  Location     Type
 11366 ;;		None               void
 11367 ;; Registers used:
 11368 ;;		wreg, status,2, status,0
 11369 ;; Tracked objects:
 11370 ;;		On entry : 0/0
 11371 ;;		On exit  : 0/0
 11372 ;;		Unchanged: 0/0
 11373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11374 ;;      Params:         0       0       0       0       0       0       0       0       0
 11375 ;;      Locals:         0       2       0       0       0       0       0       0       0
 11376 ;;      Temps:          0       1       0       0       0       0       0       0       0
 11377 ;;      Totals:         0       3       0       0       0       0       0       0       0
 11378 ;;Total ram usage:        3 bytes
 11379 ;; Hardware stack levels used:    1
 11380 ;; Hardware stack levels required when called:   10
 11381 ;; This function calls:
 11382 ;;		Nothing
 11383 ;; This function is called by:
 11384 ;;		_sprintf
 11385 ;; This function uses a non-reentrant model
 11386 ;;
 11387                           
 11388                           	psect	text31
 11389  0050F4                     __ptext31:
 11390                           	opt stack 0
 11391  0050F4                     _isdigit:
 11392                           	opt stack 19
 11393                           
 11394                           ;incstack = 0
 11395                           ;isdigit@c stored from wreg
 11396  0050F4  0100               	movlb	0	; () banked
 11397  0050F6  6F62               	movwf	isdigit@c& (0+255),b
 11398  0050F8  0E00               	movlw	0
 11399  0050FA  0100               	movlb	0	; () banked
 11400  0050FC  6F61               	movwf	_isdigit$5161& (0+255),b
 11401                           
 11402                           ; BSR set to: 0
 11403  0050FE  0E3A               	movlw	58
 11404  005100  6162               	cpfslt	isdigit@c& (0+255),b
 11405  005102  D005               	goto	l2816
 11406                           
 11407                           ; BSR set to: 0
 11408  005104  0E2F               	movlw	47
 11409  005106  6562               	cpfsgt	isdigit@c& (0+255),b
 11410  005108  D002               	goto	l2816
 11411                           
 11412                           ; BSR set to: 0
 11413  00510A  0E01               	movlw	1
 11414  00510C  6F61               	movwf	_isdigit$5161& (0+255),b
 11415  00510E                     l2816:
 11416                           
 11417                           ; BSR set to: 0
 11418                           
 11419                           ; BSR set to: 0
 11420  00510E  C061  F060         	movff	_isdigit$5161,??_isdigit
 11421  005112  3160               	rrcf	??_isdigit& (0+255),w,b
 11422  005114  0012               	return	
 11423  005116                     __end_of_isdigit:
 11424                           	opt stack 0
 11425                           tblptru	equ	0xFF8
 11426                           tblptrh	equ	0xFF7
 11427                           tblptrl	equ	0xFF6
 11428                           tablat	equ	0xFF5
 11429                           prodh	equ	0xFF4
 11430                           prodl	equ	0xFF3
 11431                           intcon	equ	0xFF2
 11432                           postinc0	equ	0xFEE
 11433                           wreg	equ	0xFE8
 11434                           indf1	equ	0xFE7
 11435                           postdec1	equ	0xFE5
 11436                           fsr1h	equ	0xFE2
 11437                           fsr1l	equ	0xFE1
 11438                           indf2	equ	0xFDF
 11439                           postinc2	equ	0xFDE
 11440                           postdec2	equ	0xFDD
 11441                           plusw2	equ	0xFDB
 11442                           fsr2h	equ	0xFDA
 11443                           fsr2l	equ	0xFD9
 11444                           status	equ	0xFD8
 11445                           
 11446 ;; *************** function _fround *****************
 11447 ;; Defined at:
 11448 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\doprnt.c"
 11449 ;; Parameters:    Size  Location     Type
 11450 ;;  prec            1    wreg     unsigned char 
 11451 ;; Auto vars:     Size  Location     Type
 11452 ;;  prec            1   56[BANK0 ] unsigned char 
 11453 ;; Return value:  Size  Location     Type
 11454 ;;                  3   47[BANK0 ] unsigned char 
 11455 ;; Registers used:
 11456 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11457 ;; Tracked objects:
 11458 ;;		On entry : 0/0
 11459 ;;		On exit  : 0/0
 11460 ;;		Unchanged: 0/0
 11461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11462 ;;      Params:         0       3       0       0       0       0       0       0       0
 11463 ;;      Locals:         0       7       0       0       0       0       0       0       0
 11464 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11465 ;;      Totals:         0      10       0       0       0       0       0       0       0
 11466 ;;Total ram usage:       10 bytes
 11467 ;; Hardware stack levels used:    1
 11468 ;; Hardware stack levels required when called:   12
 11469 ;; This function calls:
 11470 ;;		___awdiv
 11471 ;;		___awmod
 11472 ;;		___ftmul
 11473 ;;		___wmul
 11474 ;; This function is called by:
 11475 ;;		_sprintf
 11476 ;; This function uses a non-reentrant model
 11477 ;;
 11478                           
 11479                           	psect	text32
 11480  002124                     __ptext32:
 11481                           	opt stack 0
 11482  002124                     _fround:
 11483                           	opt stack 17
 11484                           
 11485                           ; BSR set to: 0
 11486                           ;incstack = 0
 11487                           ;fround@prec stored from wreg
 11488  002124  0100               	movlb	0	; () banked
 11489  002126  6F98               	movwf	fround@prec& (0+255),b
 11490                           
 11491                           ;doprnt.c: 413: if(prec>=110)
 11492  002128  0E6D               	movlw	109
 11493  00212A  0100               	movlb	0	; () banked
 11494  00212C  6598               	cpfsgt	fround@prec& (0+255),b
 11495  00212E  D0A6               	goto	l2310
 11496                           
 11497                           ; BSR set to: 0
 11498                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 11499  002130  0E00               	movlw	0
 11500  002132  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11501  002134  0E03               	movlw	3
 11502  002136  6F70               	movwf	___wmul@multiplicand& (0+255),b
 11503  002138  0E00               	movlw	0
 11504  00213A  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 11505  00213C  0E0A               	movlw	10
 11506  00213E  6F68               	movwf	___awdiv@divisor& (0+255),b
 11507  002140  0E00               	movlw	0
 11508  002142  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 11509  002144  0E64               	movlw	100
 11510  002146  6F62               	movwf	___awmod@divisor& (0+255),b
 11511  002148  C098  F060         	movff	fround@prec,___awmod@dividend
 11512  00214C  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 11513  00214E  EC9F  F023         	call	___awmod	;wreg free
 11514  002152  C060  F066         	movff	?___awmod,___awdiv@dividend
 11515  002156  C061  F067         	movff	?___awmod+1,___awdiv@dividend+1
 11516  00215A  EC5D  F022         	call	___awdiv	;wreg free
 11517  00215E  0E09               	movlw	9
 11518  002160  0100               	movlb	0	; () banked
 11519  002162  2566               	addwf	?___awdiv& (0+255),w,b
 11520  002164  6F6E               	movwf	___wmul@multiplier& (0+255),b
 11521  002166  0E00               	movlw	0
 11522  002168  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 11523  00216A  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 11524  00216C  EC1A  F028         	call	___wmul	;wreg free
 11525  002170  0EF2               	movlw	low __npowers_
 11526  002172  0100               	movlb	0	; () banked
 11527  002174  256E               	addwf	?___wmul& (0+255),w,b
 11528  002176  6EF6               	movwf	tblptrl,c
 11529  002178  0E7C               	movlw	high __npowers_
 11530  00217A  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 11531  00217C  6EF7               	movwf	tblptrh,c
 11532  00217E                     	if	0	;There are less than 3 active tblptr bytes
 11533  00217E                     	endif
 11534  00217E  0009               	tblrd		*+
 11535  002180  CFF5 F083          	movff	tablat,___ftmul@f2
 11536  002184  0009               	tblrd		*+
 11537  002186  CFF5 F084          	movff	tablat,___ftmul@f2+1
 11538  00218A  000A               	tblrd		*-
 11539  00218C  CFF5 F085          	movff	tablat,___ftmul@f2+2
 11540  002190  0E00               	movlw	0
 11541  002192  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 11542  002194  0E64               	movlw	100
 11543  002196  6F68               	movwf	___awdiv@divisor& (0+255),b
 11544  002198  C098  F066         	movff	fround@prec,___awdiv@dividend
 11545  00219C  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
 11546  00219E  EC5D  F022         	call	___awdiv	;wreg free
 11547  0021A2  0E12               	movlw	18
 11548  0021A4  0100               	movlb	0	; () banked
 11549  0021A6  2566               	addwf	?___awdiv& (0+255),w,b
 11550  0021A8  6F6E               	movwf	___wmul@multiplier& (0+255),b
 11551  0021AA  0E00               	movlw	0
 11552  0021AC  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 11553  0021AE  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 11554  0021B0  0E00               	movlw	0
 11555  0021B2  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11556  0021B4  0E03               	movlw	3
 11557  0021B6  6F70               	movwf	___wmul@multiplicand& (0+255),b
 11558  0021B8  EC1A  F028         	call	___wmul	;wreg free
 11559  0021BC  0EF2               	movlw	low __npowers_
 11560  0021BE  0100               	movlb	0	; () banked
 11561  0021C0  256E               	addwf	?___wmul& (0+255),w,b
 11562  0021C2  6EF6               	movwf	tblptrl,c
 11563  0021C4  0E7C               	movlw	high __npowers_
 11564  0021C6  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 11565  0021C8  6EF7               	movwf	tblptrh,c
 11566  0021CA                     	if	0	;There are less than 3 active tblptr bytes
 11567  0021CA                     	endif
 11568  0021CA  0009               	tblrd		*+
 11569  0021CC  CFF5 F080          	movff	tablat,___ftmul@f1
 11570  0021D0  0009               	tblrd		*+
 11571  0021D2  CFF5 F081          	movff	tablat,___ftmul@f1+1
 11572  0021D6  000A               	tblrd		*-
 11573  0021D8  CFF5 F082          	movff	tablat,___ftmul@f1+2
 11574  0021DC  EC46  F01B         	call	___ftmul	;wreg free
 11575  0021E0  C080  F095         	movff	?___ftmul,_fround$5718
 11576  0021E4  C081  F096         	movff	?___ftmul+1,_fround$5718+1
 11577  0021E8  C082  F097         	movff	?___ftmul+2,_fround$5718+2
 11578                           
 11579                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 11580  0021EC  0E00               	movlw	0
 11581  0021EE  0100               	movlb	0	; () banked
 11582  0021F0  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11583  0021F2  0E03               	movlw	3
 11584  0021F4  6F70               	movwf	___wmul@multiplicand& (0+255),b
 11585  0021F6  0E00               	movlw	0
 11586  0021F8  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 11587  0021FA  0E0A               	movlw	10
 11588  0021FC  6F62               	movwf	___awmod@divisor& (0+255),b
 11589  0021FE  C098  F060         	movff	fround@prec,___awmod@dividend
 11590  002202  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 11591  002204  EC9F  F023         	call	___awmod	;wreg free
 11592  002208  C060  F06E         	movff	?___awmod,___wmul@multiplier
 11593  00220C  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
 11594  002210  EC1A  F028         	call	___wmul	;wreg free
 11595  002214  0EF2               	movlw	low __npowers_
 11596  002216  0100               	movlb	0	; () banked
 11597  002218  256E               	addwf	?___wmul& (0+255),w,b
 11598  00221A  6EF6               	movwf	tblptrl,c
 11599  00221C  0E7C               	movlw	high __npowers_
 11600  00221E  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 11601  002220  6EF7               	movwf	tblptrh,c
 11602  002222                     	if	0	;There are less than 3 active tblptr bytes
 11603  002222                     	endif
 11604  002222  0009               	tblrd		*+
 11605  002224  CFF5 F083          	movff	tablat,___ftmul@f2
 11606  002228  0009               	tblrd		*+
 11607  00222A  CFF5 F084          	movff	tablat,___ftmul@f2+1
 11608  00222E  000A               	tblrd		*-
 11609  002230  CFF5 F085          	movff	tablat,___ftmul@f2+2
 11610  002234  C095  F080         	movff	_fround$5718,___ftmul@f1
 11611  002238  C096  F081         	movff	_fround$5718+1,___ftmul@f1+1
 11612  00223C  C097  F082         	movff	_fround$5718+2,___ftmul@f1+2
 11613  002240  EC46  F01B         	call	___ftmul	;wreg free
 11614  002244  C080  F092         	movff	?___ftmul,_fround$5719
 11615  002248  C081  F093         	movff	?___ftmul+1,_fround$5719+1
 11616  00224C  C082  F094         	movff	?___ftmul+2,_fround$5719+2
 11617                           
 11618                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 11619  002250  C092  F080         	movff	_fround$5719,___ftmul@f1
 11620  002254  C093  F081         	movff	_fround$5719+1,___ftmul@f1+1
 11621  002258  C094  F082         	movff	_fround$5719+2,___ftmul@f1+2
 11622  00225C  0E00               	movlw	0
 11623  00225E  0100               	movlb	0	; () banked
 11624  002260  6F83               	movwf	___ftmul@f2& (0+255),b
 11625  002262  0E00               	movlw	0
 11626  002264  6F84               	movwf	(___ftmul@f2+1)& (0+255),b
 11627  002266  0E3F               	movlw	63
 11628  002268  6F85               	movwf	(___ftmul@f2+2)& (0+255),b
 11629  00226A  EC46  F01B         	call	___ftmul	;wreg free
 11630  00226E  C080  F08F         	movff	?___ftmul,?_fround
 11631  002272  C081  F090         	movff	?___ftmul+1,?_fround+1
 11632  002276  C082  F091         	movff	?___ftmul+2,?_fround+2
 11633  00227A  0012               	return	
 11634  00227C                     l2310:
 11635                           
 11636                           ;doprnt.c: 415: else if(prec > 10)
 11637  00227C  0E0A               	movlw	10
 11638  00227E  0100               	movlb	0	; () banked
 11639  002280  6598               	cpfsgt	fround@prec& (0+255),b
 11640  002282  D067               	goto	l2313
 11641                           
 11642                           ; BSR set to: 0
 11643                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 11644  002284  0E00               	movlw	0
 11645  002286  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11646  002288  0E03               	movlw	3
 11647  00228A  6F70               	movwf	___wmul@multiplicand& (0+255),b
 11648  00228C  0E00               	movlw	0
 11649  00228E  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 11650  002290  0E0A               	movlw	10
 11651  002292  6F62               	movwf	___awmod@divisor& (0+255),b
 11652  002294  C098  F060         	movff	fround@prec,___awmod@dividend
 11653  002298  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 11654  00229A  EC9F  F023         	call	___awmod	;wreg free
 11655  00229E  C060  F06E         	movff	?___awmod,___wmul@multiplier
 11656  0022A2  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
 11657  0022A6  EC1A  F028         	call	___wmul	;wreg free
 11658  0022AA  0EF2               	movlw	low __npowers_
 11659  0022AC  0100               	movlb	0	; () banked
 11660  0022AE  256E               	addwf	?___wmul& (0+255),w,b
 11661  0022B0  6EF6               	movwf	tblptrl,c
 11662  0022B2  0E7C               	movlw	high __npowers_
 11663  0022B4  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 11664  0022B6  6EF7               	movwf	tblptrh,c
 11665  0022B8                     	if	0	;There are less than 3 active tblptr bytes
 11666  0022B8                     	endif
 11667  0022B8  0009               	tblrd		*+
 11668  0022BA  CFF5 F083          	movff	tablat,___ftmul@f2
 11669  0022BE  0009               	tblrd		*+
 11670  0022C0  CFF5 F084          	movff	tablat,___ftmul@f2+1
 11671  0022C4  000A               	tblrd		*-
 11672  0022C6  CFF5 F085          	movff	tablat,___ftmul@f2+2
 11673  0022CA  0E00               	movlw	0
 11674  0022CC  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 11675  0022CE  0E0A               	movlw	10
 11676  0022D0  6F68               	movwf	___awdiv@divisor& (0+255),b
 11677  0022D2  C098  F066         	movff	fround@prec,___awdiv@dividend
 11678  0022D6  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
 11679  0022D8  EC5D  F022         	call	___awdiv	;wreg free
 11680  0022DC  0E09               	movlw	9
 11681  0022DE  0100               	movlb	0	; () banked
 11682  0022E0  2566               	addwf	?___awdiv& (0+255),w,b
 11683  0022E2  6F6E               	movwf	___wmul@multiplier& (0+255),b
 11684  0022E4  0E00               	movlw	0
 11685  0022E6  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 11686  0022E8  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 11687  0022EA  0E00               	movlw	0
 11688  0022EC  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11689  0022EE  0E03               	movlw	3
 11690  0022F0  6F70               	movwf	___wmul@multiplicand& (0+255),b
 11691  0022F2  EC1A  F028         	call	___wmul	;wreg free
 11692  0022F6  0EF2               	movlw	low __npowers_
 11693  0022F8  0100               	movlb	0	; () banked
 11694  0022FA  256E               	addwf	?___wmul& (0+255),w,b
 11695  0022FC  6EF6               	movwf	tblptrl,c
 11696  0022FE  0E7C               	movlw	high __npowers_
 11697  002300  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 11698  002302  6EF7               	movwf	tblptrh,c
 11699  002304                     	if	0	;There are less than 3 active tblptr bytes
 11700  002304                     	endif
 11701  002304  0009               	tblrd		*+
 11702  002306  CFF5 F080          	movff	tablat,___ftmul@f1
 11703  00230A  0009               	tblrd		*+
 11704  00230C  CFF5 F081          	movff	tablat,___ftmul@f1+1
 11705  002310  000A               	tblrd		*-
 11706  002312  CFF5 F082          	movff	tablat,___ftmul@f1+2
 11707  002316  EC46  F01B         	call	___ftmul	;wreg free
 11708  00231A  C080  F095         	movff	?___ftmul,_fround$5718
 11709  00231E  C081  F096         	movff	?___ftmul+1,_fround$5718+1
 11710  002322  C082  F097         	movff	?___ftmul+2,_fround$5718+2
 11711                           
 11712                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 11713  002326  C095  F080         	movff	_fround$5718,___ftmul@f1
 11714  00232A  C096  F081         	movff	_fround$5718+1,___ftmul@f1+1
 11715  00232E  C097  F082         	movff	_fround$5718+2,___ftmul@f1+2
 11716  002332  0E00               	movlw	0
 11717  002334  0100               	movlb	0	; () banked
 11718  002336  6F83               	movwf	___ftmul@f2& (0+255),b
 11719  002338  0E00               	movlw	0
 11720  00233A  6F84               	movwf	(___ftmul@f2+1)& (0+255),b
 11721  00233C  0E3F               	movlw	63
 11722  00233E  6F85               	movwf	(___ftmul@f2+2)& (0+255),b
 11723  002340  EC46  F01B         	call	___ftmul	;wreg free
 11724  002344  C080  F08F         	movff	?___ftmul,?_fround
 11725  002348  C081  F090         	movff	?___ftmul+1,?_fround+1
 11726  00234C  C082  F091         	movff	?___ftmul+2,?_fround+2
 11727  002350  0012               	return	
 11728  002352                     l2313:
 11729                           
 11730                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 11731  002352  0100               	movlb	0	; () banked
 11732  002354  5198               	movf	fround@prec& (0+255),w,b
 11733  002356  0D03               	mullw	3
 11734  002358  0EF2               	movlw	low __npowers_
 11735  00235A  24F3               	addwf	prodl,w,c
 11736  00235C  6EF6               	movwf	tblptrl,c
 11737  00235E  0E7C               	movlw	high __npowers_
 11738  002360  20F4               	addwfc	prodh,w,c
 11739  002362  6EF7               	movwf	tblptrh,c
 11740  002364                     	if	0	;There are less than 3 active tblptr bytes
 11741  002364                     	endif
 11742  002364  0009               	tblrd		*+
 11743  002366  CFF5 F080          	movff	tablat,___ftmul@f1
 11744  00236A  0009               	tblrd		*+
 11745  00236C  CFF5 F081          	movff	tablat,___ftmul@f1+1
 11746  002370  000A               	tblrd		*-
 11747  002372  CFF5 F082          	movff	tablat,___ftmul@f1+2
 11748  002376  0E00               	movlw	0
 11749  002378  6F83               	movwf	___ftmul@f2& (0+255),b
 11750  00237A  0E00               	movlw	0
 11751  00237C  6F84               	movwf	(___ftmul@f2+1)& (0+255),b
 11752  00237E  0E3F               	movlw	63
 11753  002380  6F85               	movwf	(___ftmul@f2+2)& (0+255),b
 11754  002382  EC46  F01B         	call	___ftmul	;wreg free
 11755  002386  C080  F08F         	movff	?___ftmul,?_fround
 11756  00238A  C081  F090         	movff	?___ftmul+1,?_fround+1
 11757  00238E  C082  F091         	movff	?___ftmul+2,?_fround+2
 11758  002392  0012               	return	
 11759  002394                     __end_of_fround:
 11760                           	opt stack 0
 11761                           tblptru	equ	0xFF8
 11762                           tblptrh	equ	0xFF7
 11763                           tblptrl	equ	0xFF6
 11764                           tablat	equ	0xFF5
 11765                           prodh	equ	0xFF4
 11766                           prodl	equ	0xFF3
 11767                           intcon	equ	0xFF2
 11768                           postinc0	equ	0xFEE
 11769                           wreg	equ	0xFE8
 11770                           indf1	equ	0xFE7
 11771                           postdec1	equ	0xFE5
 11772                           fsr1h	equ	0xFE2
 11773                           fsr1l	equ	0xFE1
 11774                           indf2	equ	0xFDF
 11775                           postinc2	equ	0xFDE
 11776                           postdec2	equ	0xFDD
 11777                           plusw2	equ	0xFDB
 11778                           fsr2h	equ	0xFDA
 11779                           fsr2l	equ	0xFD9
 11780                           status	equ	0xFD8
 11781                           
 11782 ;; *************** function ___wmul *****************
 11783 ;; Defined at:
 11784 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\Umul16.c"
 11785 ;; Parameters:    Size  Location     Type
 11786 ;;  multiplier      2   14[BANK0 ] unsigned int 
 11787 ;;  multiplicand    2   16[BANK0 ] unsigned int 
 11788 ;; Auto vars:     Size  Location     Type
 11789 ;;  product         2   18[BANK0 ] unsigned int 
 11790 ;; Return value:  Size  Location     Type
 11791 ;;                  2   14[BANK0 ] unsigned int 
 11792 ;; Registers used:
 11793 ;;		wreg, status,2, status,0, prodl, prodh
 11794 ;; Tracked objects:
 11795 ;;		On entry : 0/0
 11796 ;;		On exit  : 0/0
 11797 ;;		Unchanged: 0/0
 11798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11799 ;;      Params:         0       4       0       0       0       0       0       0       0
 11800 ;;      Locals:         0       2       0       0       0       0       0       0       0
 11801 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11802 ;;      Totals:         0       6       0       0       0       0       0       0       0
 11803 ;;Total ram usage:        6 bytes
 11804 ;; Hardware stack levels used:    1
 11805 ;; Hardware stack levels required when called:   10
 11806 ;; This function calls:
 11807 ;;		Nothing
 11808 ;; This function is called by:
 11809 ;;		_fround
 11810 ;;		_scale
 11811 ;;		_sprintf
 11812 ;; This function uses a non-reentrant model
 11813 ;;
 11814                           
 11815                           	psect	text33
 11816  005034                     __ptext33:
 11817                           	opt stack 0
 11818  005034                     ___wmul:
 11819                           	opt stack 18
 11820                           
 11821                           ;incstack = 0
 11822  005034  0100               	movlb	0	; () banked
 11823  005036  516E               	movf	___wmul@multiplier& (0+255),w,b
 11824  005038  0370               	mulwf	___wmul@multiplicand& (0+255),b
 11825  00503A  CFF3 F072          	movff	prodl,___wmul@product
 11826  00503E  CFF4 F073          	movff	prodh,___wmul@product+1
 11827  005042  516E               	movf	___wmul@multiplier& (0+255),w,b
 11828  005044  0371               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 11829  005046  50F3               	movf	prodl,w,c
 11830  005048  2773               	addwf	(___wmul@product+1)& (0+255),f,b
 11831  00504A  516F               	movf	(___wmul@multiplier+1)& (0+255),w,b
 11832  00504C  0370               	mulwf	___wmul@multiplicand& (0+255),b
 11833  00504E  50F3               	movf	prodl,w,c
 11834  005050  2773               	addwf	(___wmul@product+1)& (0+255),f,b
 11835                           
 11836                           ; BSR set to: 0
 11837  005052  C072  F06E         	movff	___wmul@product,?___wmul
 11838  005056  C073  F06F         	movff	___wmul@product+1,?___wmul+1
 11839  00505A  0012               	return	
 11840  00505C                     __end_of___wmul:
 11841                           	opt stack 0
 11842                           tblptru	equ	0xFF8
 11843                           tblptrh	equ	0xFF7
 11844                           tblptrl	equ	0xFF6
 11845                           tablat	equ	0xFF5
 11846                           prodh	equ	0xFF4
 11847                           prodl	equ	0xFF3
 11848                           intcon	equ	0xFF2
 11849                           postinc0	equ	0xFEE
 11850                           wreg	equ	0xFE8
 11851                           indf1	equ	0xFE7
 11852                           postdec1	equ	0xFE5
 11853                           fsr1h	equ	0xFE2
 11854                           fsr1l	equ	0xFE1
 11855                           indf2	equ	0xFDF
 11856                           postinc2	equ	0xFDE
 11857                           postdec2	equ	0xFDD
 11858                           plusw2	equ	0xFDB
 11859                           fsr2h	equ	0xFDA
 11860                           fsr2l	equ	0xFD9
 11861                           status	equ	0xFD8
 11862                           
 11863 ;; *************** function ___ftmul *****************
 11864 ;; Defined at:
 11865 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftmul.c"
 11866 ;; Parameters:    Size  Location     Type
 11867 ;;  f1              3   32[BANK0 ] float 
 11868 ;;  f2              3   35[BANK0 ] float 
 11869 ;; Auto vars:     Size  Location     Type
 11870 ;;  f3_as_produc    3   42[BANK0 ] unsigned um
 11871 ;;  sign            1   46[BANK0 ] unsigned char 
 11872 ;;  cntr            1   45[BANK0 ] unsigned char 
 11873 ;;  exp             1   41[BANK0 ] unsigned char 
 11874 ;; Return value:  Size  Location     Type
 11875 ;;                  3   32[BANK0 ] float 
 11876 ;; Registers used:
 11877 ;;		wreg, status,2, status,0, cstack
 11878 ;; Tracked objects:
 11879 ;;		On entry : 0/0
 11880 ;;		On exit  : 0/0
 11881 ;;		Unchanged: 0/0
 11882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11883 ;;      Params:         0       6       0       0       0       0       0       0       0
 11884 ;;      Locals:         0       6       0       0       0       0       0       0       0
 11885 ;;      Temps:          0       3       0       0       0       0       0       0       0
 11886 ;;      Totals:         0      15       0       0       0       0       0       0       0
 11887 ;;Total ram usage:       15 bytes
 11888 ;; Hardware stack levels used:    1
 11889 ;; Hardware stack levels required when called:   11
 11890 ;; This function calls:
 11891 ;;		___ftpack
 11892 ;; This function is called by:
 11893 ;;		_main
 11894 ;;		_le_AD
 11895 ;;		_fround
 11896 ;;		_scale
 11897 ;;		_sprintf
 11898 ;; This function uses a non-reentrant model
 11899 ;;
 11900                           
 11901                           	psect	text34
 11902  00368C                     __ptext34:
 11903                           	opt stack 0
 11904  00368C                     ___ftmul:
 11905                           	opt stack 17
 11906                           
 11907                           ; BSR set to: 0
 11908                           ;incstack = 0
 11909  00368C  C082  F086         	movff	___ftmul@f1+2,??___ftmul
 11910  003690  0100               	movlb	0	; () banked
 11911  003692  6B87               	clrf	(??___ftmul+1)& (0+255),b
 11912  003694  6B88               	clrf	(??___ftmul+2)& (0+255),b
 11913  003696  3581               	rlcf	(___ftmul@f1+1)& (0+255),w,b
 11914  003698  3786               	rlcf	??___ftmul& (0+255),f,b
 11915  00369A  E301               	bnc	u6531
 11916  00369C  8187               	bsf	(??___ftmul+1)& (0+255),0,b
 11917  00369E                     u6531:
 11918  00369E  5186               	movf	??___ftmul& (0+255),w,b
 11919  0036A0  6F89               	movwf	___ftmul@exp& (0+255),b
 11920  0036A2  5189               	movf	___ftmul@exp& (0+255),w,b
 11921  0036A4  A4D8               	btfss	status,2,c
 11922  0036A6  D007               	goto	l2780
 11923                           
 11924                           ; BSR set to: 0
 11925  0036A8  0E00               	movlw	0
 11926  0036AA  6F80               	movwf	?___ftmul& (0+255),b
 11927  0036AC  0E00               	movlw	0
 11928  0036AE  6F81               	movwf	(?___ftmul+1)& (0+255),b
 11929  0036B0  0E00               	movlw	0
 11930  0036B2  6F82               	movwf	(?___ftmul+2)& (0+255),b
 11931                           
 11932                           ; BSR set to: 0
 11933  0036B4  0012               	return	
 11934  0036B6                     l2780:
 11935                           
 11936                           ; BSR set to: 0
 11937                           
 11938                           ; BSR set to: 0
 11939  0036B6  C085  F086         	movff	___ftmul@f2+2,??___ftmul
 11940  0036BA  6B87               	clrf	(??___ftmul+1)& (0+255),b
 11941  0036BC  6B88               	clrf	(??___ftmul+2)& (0+255),b
 11942  0036BE  3584               	rlcf	(___ftmul@f2+1)& (0+255),w,b
 11943  0036C0  3786               	rlcf	??___ftmul& (0+255),f,b
 11944  0036C2  E301               	bnc	u6551
 11945  0036C4  8187               	bsf	(??___ftmul+1)& (0+255),0,b
 11946  0036C6                     u6551:
 11947  0036C6  5186               	movf	??___ftmul& (0+255),w,b
 11948  0036C8  6F8E               	movwf	___ftmul@sign& (0+255),b
 11949  0036CA  518E               	movf	___ftmul@sign& (0+255),w,b
 11950  0036CC  A4D8               	btfss	status,2,c
 11951  0036CE  D007               	goto	l2782
 11952                           
 11953                           ; BSR set to: 0
 11954  0036D0  0E00               	movlw	0
 11955  0036D2  6F80               	movwf	?___ftmul& (0+255),b
 11956  0036D4  0E00               	movlw	0
 11957  0036D6  6F81               	movwf	(?___ftmul+1)& (0+255),b
 11958  0036D8  0E00               	movlw	0
 11959  0036DA  6F82               	movwf	(?___ftmul+2)& (0+255),b
 11960                           
 11961                           ; BSR set to: 0
 11962  0036DC  0012               	return	
 11963  0036DE                     l2782:
 11964                           
 11965                           ; BSR set to: 0
 11966                           
 11967                           ; BSR set to: 0
 11968  0036DE  518E               	movf	___ftmul@sign& (0+255),w,b
 11969  0036E0  0F7B               	addlw	123
 11970  0036E2  2789               	addwf	___ftmul@exp& (0+255),f,b
 11971                           
 11972                           ; BSR set to: 0
 11973  0036E4  C082  F08E         	movff	___ftmul@f1+2,___ftmul@sign
 11974  0036E8  5185               	movf	(___ftmul@f2+2)& (0+255),w,b
 11975  0036EA  1B8E               	xorwf	___ftmul@sign& (0+255),f,b
 11976  0036EC  0E80               	movlw	128
 11977  0036EE  178E               	andwf	___ftmul@sign& (0+255),f,b
 11978                           
 11979                           ; BSR set to: 0
 11980  0036F0  8F81               	bsf	(___ftmul@f1+1)& (0+255),7,b
 11981                           
 11982                           ; BSR set to: 0
 11983  0036F2  8F84               	bsf	(___ftmul@f2+1)& (0+255),7,b
 11984                           
 11985                           ; BSR set to: 0
 11986  0036F4  0EFF               	movlw	255
 11987  0036F6  1783               	andwf	___ftmul@f2& (0+255),f,b
 11988  0036F8  0EFF               	movlw	255
 11989  0036FA  1784               	andwf	(___ftmul@f2+1)& (0+255),f,b
 11990  0036FC  0E00               	movlw	0
 11991  0036FE  1785               	andwf	(___ftmul@f2+2)& (0+255),f,b
 11992                           
 11993                           ; BSR set to: 0
 11994  003700  0E00               	movlw	0
 11995  003702  6F8A               	movwf	___ftmul@f3_as_product& (0+255),b
 11996  003704  0E00               	movlw	0
 11997  003706  6F8B               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
 11998  003708  0E00               	movlw	0
 11999  00370A  6F8C               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
 12000                           
 12001                           ; BSR set to: 0
 12002  00370C  0E07               	movlw	7
 12003  00370E  6F8D               	movwf	___ftmul@cntr& (0+255),b
 12004  003710                     
 12005                           ; BSR set to: 0
 12006                           
 12007                           ; BSR set to: 0
 12008  003710  A180               	btfss	___ftmul@f1& (0+255),0,b
 12009  003712  D006               	goto	l2784
 12010                           
 12011                           ; BSR set to: 0
 12012  003714  5183               	movf	___ftmul@f2& (0+255),w,b
 12013  003716  278A               	addwf	___ftmul@f3_as_product& (0+255),f,b
 12014  003718  5184               	movf	(___ftmul@f2+1)& (0+255),w,b
 12015  00371A  238B               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 12016  00371C  5185               	movf	(___ftmul@f2+2)& (0+255),w,b
 12017  00371E  238C               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 12018  003720                     l2784:
 12019                           
 12020                           ; BSR set to: 0
 12021                           
 12022                           ; BSR set to: 0
 12023  003720  90D8               	bcf	status,0,c
 12024  003722  3382               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 12025  003724  3381               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 12026  003726  3380               	rrcf	___ftmul@f1& (0+255),f,b
 12027  003728  90D8               	bcf	status,0,c
 12028  00372A  3783               	rlcf	___ftmul@f2& (0+255),f,b
 12029  00372C  3784               	rlcf	(___ftmul@f2+1)& (0+255),f,b
 12030  00372E  3785               	rlcf	(___ftmul@f2+2)& (0+255),f,b
 12031                           
 12032                           ; BSR set to: 0
 12033  003730  2F8D               	decfsz	___ftmul@cntr& (0+255),f,b
 12034  003732  D7EE               	goto	l2783
 12035                           
 12036                           ; BSR set to: 0
 12037                           
 12038                           ; BSR set to: 0
 12039  003734  0E09               	movlw	9
 12040  003736  6F8D               	movwf	___ftmul@cntr& (0+255),b
 12041  003738                     
 12042                           ; BSR set to: 0
 12043                           
 12044                           ; BSR set to: 0
 12045  003738  A180               	btfss	___ftmul@f1& (0+255),0,b
 12046  00373A  D006               	goto	l2787
 12047                           
 12048                           ; BSR set to: 0
 12049  00373C  5183               	movf	___ftmul@f2& (0+255),w,b
 12050  00373E  278A               	addwf	___ftmul@f3_as_product& (0+255),f,b
 12051  003740  5184               	movf	(___ftmul@f2+1)& (0+255),w,b
 12052  003742  238B               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 12053  003744  5185               	movf	(___ftmul@f2+2)& (0+255),w,b
 12054  003746  238C               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 12055  003748                     l2787:
 12056                           
 12057                           ; BSR set to: 0
 12058                           
 12059                           ; BSR set to: 0
 12060  003748  90D8               	bcf	status,0,c
 12061  00374A  3382               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 12062  00374C  3381               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 12063  00374E  3380               	rrcf	___ftmul@f1& (0+255),f,b
 12064  003750  90D8               	bcf	status,0,c
 12065  003752  338C               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
 12066  003754  338B               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
 12067  003756  338A               	rrcf	___ftmul@f3_as_product& (0+255),f,b
 12068                           
 12069                           ; BSR set to: 0
 12070  003758  2F8D               	decfsz	___ftmul@cntr& (0+255),f,b
 12071  00375A  D7EE               	goto	l2786
 12072                           
 12073                           ; BSR set to: 0
 12074                           
 12075                           ; BSR set to: 0
 12076  00375C  C08A  F060         	movff	___ftmul@f3_as_product,___ftpack@arg
 12077  003760  C08B  F061         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
 12078  003764  C08C  F062         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
 12079  003768  C089  F063         	movff	___ftmul@exp,___ftpack@exp
 12080  00376C  C08E  F064         	movff	___ftmul@sign,___ftpack@sign
 12081  003770  ECA5  F01E         	call	___ftpack	;wreg free
 12082  003774  C060  F080         	movff	?___ftpack,?___ftmul
 12083  003778  C061  F081         	movff	?___ftpack+1,?___ftmul+1
 12084  00377C  C062  F082         	movff	?___ftpack+2,?___ftmul+2
 12085  003780  0012               	return	
 12086  003782                     __end_of___ftmul:
 12087                           	opt stack 0
 12088                           tblptru	equ	0xFF8
 12089                           tblptrh	equ	0xFF7
 12090                           tblptrl	equ	0xFF6
 12091                           tablat	equ	0xFF5
 12092                           prodh	equ	0xFF4
 12093                           prodl	equ	0xFF3
 12094                           intcon	equ	0xFF2
 12095                           postinc0	equ	0xFEE
 12096                           wreg	equ	0xFE8
 12097                           indf1	equ	0xFE7
 12098                           postdec1	equ	0xFE5
 12099                           fsr1h	equ	0xFE2
 12100                           fsr1l	equ	0xFE1
 12101                           indf2	equ	0xFDF
 12102                           postinc2	equ	0xFDE
 12103                           postdec2	equ	0xFDD
 12104                           plusw2	equ	0xFDB
 12105                           fsr2h	equ	0xFDA
 12106                           fsr2l	equ	0xFD9
 12107                           status	equ	0xFD8
 12108                           
 12109 ;; *************** function ___awmod *****************
 12110 ;; Defined at:
 12111 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\awmod.c"
 12112 ;; Parameters:    Size  Location     Type
 12113 ;;  dividend        2    0[BANK0 ] int 
 12114 ;;  divisor         2    2[BANK0 ] int 
 12115 ;; Auto vars:     Size  Location     Type
 12116 ;;  sign            1    5[BANK0 ] unsigned char 
 12117 ;;  counter         1    4[BANK0 ] unsigned char 
 12118 ;; Return value:  Size  Location     Type
 12119 ;;                  2    0[BANK0 ] int 
 12120 ;; Registers used:
 12121 ;;		wreg, status,2, status,0
 12122 ;; Tracked objects:
 12123 ;;		On entry : 0/0
 12124 ;;		On exit  : 0/0
 12125 ;;		Unchanged: 0/0
 12126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12127 ;;      Params:         0       4       0       0       0       0       0       0       0
 12128 ;;      Locals:         0       2       0       0       0       0       0       0       0
 12129 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12130 ;;      Totals:         0       6       0       0       0       0       0       0       0
 12131 ;;Total ram usage:        6 bytes
 12132 ;; Hardware stack levels used:    1
 12133 ;; Hardware stack levels required when called:   10
 12134 ;; This function calls:
 12135 ;;		Nothing
 12136 ;; This function is called by:
 12137 ;;		_fround
 12138 ;;		_scale
 12139 ;; This function uses a non-reentrant model
 12140 ;;
 12141                           
 12142                           	psect	text35
 12143  00473E                     __ptext35:
 12144                           	opt stack 0
 12145  00473E                     ___awmod:
 12146                           	opt stack 18
 12147                           
 12148                           ;incstack = 0
 12149  00473E  0E00               	movlw	0
 12150  004740  0100               	movlb	0	; () banked
 12151  004742  6F65               	movwf	___awmod@sign& (0+255),b
 12152                           
 12153                           ; BSR set to: 0
 12154  004744  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
 12155  004746  D006               	goto	l2633
 12156                           
 12157                           ; BSR set to: 0
 12158  004748  6D60               	negf	___awmod@dividend& (0+255),b
 12159  00474A  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 12160  00474C  B0D8               	btfsc	status,0,c
 12161  00474E  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 12162                           
 12163                           ; BSR set to: 0
 12164  004750  0E01               	movlw	1
 12165  004752  6F65               	movwf	___awmod@sign& (0+255),b
 12166  004754                     l2633:
 12167                           
 12168                           ; BSR set to: 0
 12169                           
 12170                           ; BSR set to: 0
 12171  004754  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 12172  004756  D004               	goto	l2634
 12173                           
 12174                           ; BSR set to: 0
 12175  004758  6D62               	negf	___awmod@divisor& (0+255),b
 12176  00475A  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 12177  00475C  B0D8               	btfsc	status,0,c
 12178  00475E  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 12179  004760                     l2634:
 12180                           
 12181                           ; BSR set to: 0
 12182                           
 12183                           ; BSR set to: 0
 12184  004760  5162               	movf	___awmod@divisor& (0+255),w,b
 12185  004762  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 12186  004764  B4D8               	btfsc	status,2,c
 12187  004766  D018               	goto	l2641
 12188                           
 12189                           ; BSR set to: 0
 12190  004768  0E01               	movlw	1
 12191  00476A  6F64               	movwf	___awmod@counter& (0+255),b
 12192  00476C  D004               	goto	l2636
 12193  00476E                     
 12194                           ; BSR set to: 0
 12195                           
 12196                           ; BSR set to: 0
 12197  00476E  90D8               	bcf	status,0,c
 12198  004770  3762               	rlcf	___awmod@divisor& (0+255),f,b
 12199  004772  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 12200  004774  2B64               	incf	___awmod@counter& (0+255),f,b
 12201  004776                     l2636:
 12202                           
 12203                           ; BSR set to: 0
 12204                           
 12205                           ; BSR set to: 0
 12206  004776  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 12207  004778  D7FA               	goto	l2637
 12208  00477A                     u6680:
 12209                           
 12210                           ; BSR set to: 0
 12211                           
 12212                           ; BSR set to: 0
 12213                           
 12214                           ; BSR set to: 0
 12215  00477A  5162               	movf	___awmod@divisor& (0+255),w,b
 12216  00477C  5D60               	subwf	___awmod@dividend& (0+255),w,b
 12217  00477E  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 12218  004780  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 12219  004782  A0D8               	btfss	status,0,c
 12220  004784  D004               	goto	l2640
 12221                           
 12222                           ; BSR set to: 0
 12223  004786  5162               	movf	___awmod@divisor& (0+255),w,b
 12224  004788  5F60               	subwf	___awmod@dividend& (0+255),f,b
 12225  00478A  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 12226  00478C  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 12227  00478E                     l2640:
 12228                           
 12229                           ; BSR set to: 0
 12230                           
 12231                           ; BSR set to: 0
 12232  00478E  90D8               	bcf	status,0,c
 12233  004790  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 12234  004792  3362               	rrcf	___awmod@divisor& (0+255),f,b
 12235                           
 12236                           ; BSR set to: 0
 12237  004794  2F64               	decfsz	___awmod@counter& (0+255),f,b
 12238  004796  D7F1               	goto	u6680
 12239  004798                     l2641:
 12240                           
 12241                           ; BSR set to: 0
 12242                           
 12243                           ; BSR set to: 0
 12244                           
 12245                           ; BSR set to: 0
 12246  004798  5165               	movf	___awmod@sign& (0+255),w,b
 12247  00479A  B4D8               	btfsc	status,2,c
 12248  00479C  D004               	goto	l2642
 12249                           
 12250                           ; BSR set to: 0
 12251  00479E  6D60               	negf	___awmod@dividend& (0+255),b
 12252  0047A0  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 12253  0047A2  B0D8               	btfsc	status,0,c
 12254  0047A4  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 12255  0047A6                     l2642:
 12256                           
 12257                           ; BSR set to: 0
 12258                           
 12259                           ; BSR set to: 0
 12260  0047A6  C060  F060         	movff	___awmod@dividend,?___awmod
 12261  0047AA  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 12262  0047AE  0012               	return	
 12263  0047B0                     __end_of___awmod:
 12264                           	opt stack 0
 12265                           tblptru	equ	0xFF8
 12266                           tblptrh	equ	0xFF7
 12267                           tblptrl	equ	0xFF6
 12268                           tablat	equ	0xFF5
 12269                           prodh	equ	0xFF4
 12270                           prodl	equ	0xFF3
 12271                           intcon	equ	0xFF2
 12272                           postinc0	equ	0xFEE
 12273                           wreg	equ	0xFE8
 12274                           indf1	equ	0xFE7
 12275                           postdec1	equ	0xFE5
 12276                           fsr1h	equ	0xFE2
 12277                           fsr1l	equ	0xFE1
 12278                           indf2	equ	0xFDF
 12279                           postinc2	equ	0xFDE
 12280                           postdec2	equ	0xFDD
 12281                           plusw2	equ	0xFDB
 12282                           fsr2h	equ	0xFDA
 12283                           fsr2l	equ	0xFD9
 12284                           status	equ	0xFD8
 12285                           
 12286 ;; *************** function ___awdiv *****************
 12287 ;; Defined at:
 12288 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\awdiv.c"
 12289 ;; Parameters:    Size  Location     Type
 12290 ;;  dividend        2    6[BANK0 ] int 
 12291 ;;  divisor         2    8[BANK0 ] int 
 12292 ;; Auto vars:     Size  Location     Type
 12293 ;;  quotient        2   12[BANK0 ] int 
 12294 ;;  sign            1   11[BANK0 ] unsigned char 
 12295 ;;  counter         1   10[BANK0 ] unsigned char 
 12296 ;; Return value:  Size  Location     Type
 12297 ;;                  2    6[BANK0 ] int 
 12298 ;; Registers used:
 12299 ;;		wreg, status,2, status,0
 12300 ;; Tracked objects:
 12301 ;;		On entry : 0/0
 12302 ;;		On exit  : 0/0
 12303 ;;		Unchanged: 0/0
 12304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12305 ;;      Params:         0       4       0       0       0       0       0       0       0
 12306 ;;      Locals:         0       4       0       0       0       0       0       0       0
 12307 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12308 ;;      Totals:         0       8       0       0       0       0       0       0       0
 12309 ;;Total ram usage:        8 bytes
 12310 ;; Hardware stack levels used:    1
 12311 ;; Hardware stack levels required when called:   10
 12312 ;; This function calls:
 12313 ;;		Nothing
 12314 ;; This function is called by:
 12315 ;;		_fround
 12316 ;;		_scale
 12317 ;;		_sprintf
 12318 ;; This function uses a non-reentrant model
 12319 ;;
 12320                           
 12321                           	psect	text36
 12322  0044BA                     __ptext36:
 12323                           	opt stack 0
 12324  0044BA                     ___awdiv:
 12325                           	opt stack 18
 12326                           
 12327                           ; BSR set to: 0
 12328                           ;incstack = 0
 12329  0044BA  0E00               	movlw	0
 12330  0044BC  0100               	movlb	0	; () banked
 12331  0044BE  6F6B               	movwf	___awdiv@sign& (0+255),b
 12332                           
 12333                           ; BSR set to: 0
 12334  0044C0  AF69               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 12335  0044C2  D006               	goto	l2620
 12336                           
 12337                           ; BSR set to: 0
 12338  0044C4  6D68               	negf	___awdiv@divisor& (0+255),b
 12339  0044C6  1F69               	comf	(___awdiv@divisor+1)& (0+255),f,b
 12340  0044C8  B0D8               	btfsc	status,0,c
 12341  0044CA  2B69               	incf	(___awdiv@divisor+1)& (0+255),f,b
 12342                           
 12343                           ; BSR set to: 0
 12344  0044CC  0E01               	movlw	1
 12345  0044CE  6F6B               	movwf	___awdiv@sign& (0+255),b
 12346  0044D0                     l2620:
 12347                           
 12348                           ; BSR set to: 0
 12349                           
 12350                           ; BSR set to: 0
 12351  0044D0  AF67               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 12352  0044D2  D006               	goto	l2621
 12353                           
 12354                           ; BSR set to: 0
 12355  0044D4  6D66               	negf	___awdiv@dividend& (0+255),b
 12356  0044D6  1F67               	comf	(___awdiv@dividend+1)& (0+255),f,b
 12357  0044D8  B0D8               	btfsc	status,0,c
 12358  0044DA  2B67               	incf	(___awdiv@dividend+1)& (0+255),f,b
 12359                           
 12360                           ; BSR set to: 0
 12361  0044DC  0E01               	movlw	1
 12362  0044DE  1B6B               	xorwf	___awdiv@sign& (0+255),f,b
 12363  0044E0                     l2621:
 12364                           
 12365                           ; BSR set to: 0
 12366                           
 12367                           ; BSR set to: 0
 12368  0044E0  0E00               	movlw	0
 12369  0044E2  6F6D               	movwf	(___awdiv@quotient+1)& (0+255),b
 12370  0044E4  0E00               	movlw	0
 12371  0044E6  6F6C               	movwf	___awdiv@quotient& (0+255),b
 12372                           
 12373                           ; BSR set to: 0
 12374  0044E8  5168               	movf	___awdiv@divisor& (0+255),w,b
 12375  0044EA  1169               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 12376  0044EC  B4D8               	btfsc	status,2,c
 12377  0044EE  D01C               	goto	l2628
 12378                           
 12379                           ; BSR set to: 0
 12380  0044F0  0E01               	movlw	1
 12381  0044F2  6F6A               	movwf	___awdiv@counter& (0+255),b
 12382  0044F4  D004               	goto	l2623
 12383  0044F6                     
 12384                           ; BSR set to: 0
 12385                           
 12386                           ; BSR set to: 0
 12387  0044F6  90D8               	bcf	status,0,c
 12388  0044F8  3768               	rlcf	___awdiv@divisor& (0+255),f,b
 12389  0044FA  3769               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 12390  0044FC  2B6A               	incf	___awdiv@counter& (0+255),f,b
 12391  0044FE                     l2623:
 12392                           
 12393                           ; BSR set to: 0
 12394                           
 12395                           ; BSR set to: 0
 12396  0044FE  AF69               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 12397  004500  D7FA               	goto	l2624
 12398  004502                     u6620:
 12399                           
 12400                           ; BSR set to: 0
 12401                           
 12402                           ; BSR set to: 0
 12403                           
 12404                           ; BSR set to: 0
 12405  004502  90D8               	bcf	status,0,c
 12406  004504  376C               	rlcf	___awdiv@quotient& (0+255),f,b
 12407  004506  376D               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 12408                           
 12409                           ; BSR set to: 0
 12410  004508  5168               	movf	___awdiv@divisor& (0+255),w,b
 12411  00450A  5D66               	subwf	___awdiv@dividend& (0+255),w,b
 12412  00450C  5169               	movf	(___awdiv@divisor+1)& (0+255),w,b
 12413  00450E  5967               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 12414  004510  A0D8               	btfss	status,0,c
 12415  004512  D005               	goto	l2627
 12416                           
 12417                           ; BSR set to: 0
 12418  004514  5168               	movf	___awdiv@divisor& (0+255),w,b
 12419  004516  5F66               	subwf	___awdiv@dividend& (0+255),f,b
 12420  004518  5169               	movf	(___awdiv@divisor+1)& (0+255),w,b
 12421  00451A  5B67               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 12422                           
 12423                           ; BSR set to: 0
 12424  00451C  816C               	bsf	___awdiv@quotient& (0+255),0,b
 12425  00451E                     l2627:
 12426                           
 12427                           ; BSR set to: 0
 12428                           
 12429                           ; BSR set to: 0
 12430  00451E  90D8               	bcf	status,0,c
 12431  004520  3369               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 12432  004522  3368               	rrcf	___awdiv@divisor& (0+255),f,b
 12433                           
 12434                           ; BSR set to: 0
 12435  004524  2F6A               	decfsz	___awdiv@counter& (0+255),f,b
 12436  004526  D7ED               	goto	u6620
 12437  004528                     l2628:
 12438                           
 12439                           ; BSR set to: 0
 12440                           
 12441                           ; BSR set to: 0
 12442                           
 12443                           ; BSR set to: 0
 12444  004528  516B               	movf	___awdiv@sign& (0+255),w,b
 12445  00452A  B4D8               	btfsc	status,2,c
 12446  00452C  D004               	goto	l2629
 12447                           
 12448                           ; BSR set to: 0
 12449  00452E  6D6C               	negf	___awdiv@quotient& (0+255),b
 12450  004530  1F6D               	comf	(___awdiv@quotient+1)& (0+255),f,b
 12451  004532  B0D8               	btfsc	status,0,c
 12452  004534  2B6D               	incf	(___awdiv@quotient+1)& (0+255),f,b
 12453  004536                     l2629:
 12454                           
 12455                           ; BSR set to: 0
 12456                           
 12457                           ; BSR set to: 0
 12458  004536  C06C  F066         	movff	___awdiv@quotient,?___awdiv
 12459  00453A  C06D  F067         	movff	___awdiv@quotient+1,?___awdiv+1
 12460  00453E  0012               	return	
 12461  004540                     __end_of___awdiv:
 12462                           	opt stack 0
 12463                           tblptru	equ	0xFF8
 12464                           tblptrh	equ	0xFF7
 12465                           tblptrl	equ	0xFF6
 12466                           tablat	equ	0xFF5
 12467                           prodh	equ	0xFF4
 12468                           prodl	equ	0xFF3
 12469                           intcon	equ	0xFF2
 12470                           postinc0	equ	0xFEE
 12471                           wreg	equ	0xFE8
 12472                           indf1	equ	0xFE7
 12473                           postdec1	equ	0xFE5
 12474                           fsr1h	equ	0xFE2
 12475                           fsr1l	equ	0xFE1
 12476                           indf2	equ	0xFDF
 12477                           postinc2	equ	0xFDE
 12478                           postdec2	equ	0xFDD
 12479                           plusw2	equ	0xFDB
 12480                           fsr2h	equ	0xFDA
 12481                           fsr2l	equ	0xFD9
 12482                           status	equ	0xFD8
 12483                           
 12484 ;; *************** function __tdiv_to_l_ *****************
 12485 ;; Defined at:
 12486 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftdivl.c"
 12487 ;; Parameters:    Size  Location     Type
 12488 ;;  f1              3    0[BANK0 ] float 
 12489 ;;  f2              3    3[BANK0 ] float 
 12490 ;; Auto vars:     Size  Location     Type
 12491 ;;  quot            4    9[BANK0 ] unsigned long 
 12492 ;;  exp1            1   14[BANK0 ] unsigned char 
 12493 ;;  cntr            1   13[BANK0 ] unsigned char 
 12494 ;; Return value:  Size  Location     Type
 12495 ;;                  4    0[BANK0 ] unsigned long 
 12496 ;; Registers used:
 12497 ;;		wreg, status,2, status,0
 12498 ;; Tracked objects:
 12499 ;;		On entry : 0/0
 12500 ;;		On exit  : 0/0
 12501 ;;		Unchanged: 0/0
 12502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12503 ;;      Params:         0       6       0       0       0       0       0       0       0
 12504 ;;      Locals:         0       6       0       0       0       0       0       0       0
 12505 ;;      Temps:          0       3       0       0       0       0       0       0       0
 12506 ;;      Totals:         0      15       0       0       0       0       0       0       0
 12507 ;;Total ram usage:       15 bytes
 12508 ;; Hardware stack levels used:    1
 12509 ;; Hardware stack levels required when called:   10
 12510 ;; This function calls:
 12511 ;;		Nothing
 12512 ;; This function is called by:
 12513 ;;		_sprintf
 12514 ;; This function uses a non-reentrant model
 12515 ;;
 12516                           
 12517                           	psect	text37
 12518  002984                     __ptext37:
 12519                           	opt stack 0
 12520  002984                     __tdiv_to_l_:
 12521                           	opt stack 19
 12522                           
 12523                           ; BSR set to: 0
 12524                           ;incstack = 0
 12525  002984  C062  F066         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 12526  002988  0100               	movlb	0	; () banked
 12527  00298A  6B67               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 12528  00298C  6B68               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 12529  00298E  3561               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 12530  002990  3766               	rlcf	??__tdiv_to_l_& (0+255),f,b
 12531  002992  E301               	bnc	u7101
 12532  002994  8167               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 12533  002996                     u7101:
 12534  002996  5166               	movf	??__tdiv_to_l_& (0+255),w,b
 12535  002998  6F6E               	movwf	__tdiv_to_l_@exp1& (0+255),b
 12536  00299A  516E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 12537  00299C  A4D8               	btfss	status,2,c
 12538  00299E  D009               	goto	l2756
 12539                           
 12540                           ; BSR set to: 0
 12541  0029A0  0E00               	movlw	0
 12542  0029A2  6F60               	movwf	?__tdiv_to_l_& (0+255),b
 12543  0029A4  0E00               	movlw	0
 12544  0029A6  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 12545  0029A8  0E00               	movlw	0
 12546  0029AA  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 12547  0029AC  0E00               	movlw	0
 12548  0029AE  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 12549                           
 12550                           ; BSR set to: 0
 12551  0029B0  0012               	return	
 12552  0029B2                     l2756:
 12553                           
 12554                           ; BSR set to: 0
 12555                           
 12556                           ; BSR set to: 0
 12557  0029B2  C065  F066         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 12558  0029B6  6B67               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 12559  0029B8  6B68               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 12560  0029BA  3564               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 12561  0029BC  3766               	rlcf	??__tdiv_to_l_& (0+255),f,b
 12562  0029BE  E301               	bnc	u7121
 12563  0029C0  8167               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 12564  0029C2                     u7121:
 12565  0029C2  5166               	movf	??__tdiv_to_l_& (0+255),w,b
 12566  0029C4  6F6D               	movwf	__tdiv_to_l_@cntr& (0+255),b
 12567  0029C6  516D               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 12568  0029C8  A4D8               	btfss	status,2,c
 12569  0029CA  D009               	goto	l2758
 12570                           
 12571                           ; BSR set to: 0
 12572  0029CC  0E00               	movlw	0
 12573  0029CE  6F60               	movwf	?__tdiv_to_l_& (0+255),b
 12574  0029D0  0E00               	movlw	0
 12575  0029D2  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 12576  0029D4  0E00               	movlw	0
 12577  0029D6  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 12578  0029D8  0E00               	movlw	0
 12579  0029DA  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 12580                           
 12581                           ; BSR set to: 0
 12582  0029DC  0012               	return	
 12583  0029DE                     l2758:
 12584                           
 12585                           ; BSR set to: 0
 12586                           
 12587                           ; BSR set to: 0
 12588  0029DE  8F61               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 12589                           
 12590                           ; BSR set to: 0
 12591  0029E0  0EFF               	movlw	255
 12592  0029E2  1760               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 12593  0029E4  0EFF               	movlw	255
 12594  0029E6  1761               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 12595  0029E8  0E00               	movlw	0
 12596  0029EA  1762               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 12597  0029EC  8F64               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 12598                           
 12599                           ; BSR set to: 0
 12600  0029EE  0EFF               	movlw	255
 12601  0029F0  1763               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 12602  0029F2  0EFF               	movlw	255
 12603  0029F4  1764               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 12604  0029F6  0E00               	movlw	0
 12605  0029F8  1765               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 12606                           
 12607                           ; BSR set to: 0
 12608  0029FA  0E00               	movlw	0
 12609  0029FC  6F69               	movwf	__tdiv_to_l_@quot& (0+255),b
 12610  0029FE  0E00               	movlw	0
 12611  002A00  6F6A               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 12612  002A02  0E00               	movlw	0
 12613  002A04  6F6B               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 12614  002A06  0E00               	movlw	0
 12615  002A08  6F6C               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 12616                           
 12617                           ; BSR set to: 0
 12618  002A0A  0E7F               	movlw	127
 12619  002A0C  5F6E               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 12620                           
 12621                           ; BSR set to: 0
 12622  002A0E  516D               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 12623  002A10  0F98               	addlw	152
 12624  002A12  5F6E               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 12625                           
 12626                           ; BSR set to: 0
 12627  002A14  0E18               	movlw	24
 12628  002A16  6F6D               	movwf	__tdiv_to_l_@cntr& (0+255),b
 12629  002A18                     l2759:
 12630                           
 12631                           ; BSR set to: 0
 12632  002A18  90D8               	bcf	status,0,c
 12633  002A1A  3769               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 12634  002A1C  376A               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 12635  002A1E  376B               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 12636  002A20  376C               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 12637                           
 12638                           ; BSR set to: 0
 12639  002A22  5163               	movf	__tdiv_to_l_@f2& (0+255),w,b
 12640  002A24  5D60               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 12641  002A26  5164               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 12642  002A28  5961               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 12643  002A2A  5165               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 12644  002A2C  5962               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 12645  002A2E  A0D8               	btfss	status,0,c
 12646  002A30  D007               	goto	l2760
 12647                           
 12648                           ; BSR set to: 0
 12649  002A32  5163               	movf	__tdiv_to_l_@f2& (0+255),w,b
 12650  002A34  5F60               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 12651  002A36  5164               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 12652  002A38  5B61               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 12653  002A3A  5165               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 12654  002A3C  5B62               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 12655                           
 12656                           ; BSR set to: 0
 12657  002A3E  8169               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 12658  002A40                     l2760:
 12659                           
 12660                           ; BSR set to: 0
 12661  002A40  90D8               	bcf	status,0,c
 12662  002A42  3760               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 12663  002A44  3761               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 12664  002A46  3762               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 12665                           
 12666                           ; BSR set to: 0
 12667  002A48  2F6D               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 12668  002A4A  D7E6               	goto	l2759
 12669                           
 12670                           ; BSR set to: 0
 12671                           
 12672                           ; BSR set to: 0
 12673  002A4C  AF6E               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 12674  002A4E  D016               	goto	l2762
 12675                           
 12676                           ; BSR set to: 0
 12677  002A50  516E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 12678  002A52  0A80               	xorlw	128
 12679  002A54  0F97               	addlw	151
 12680  002A56  B0D8               	btfsc	status,0,c
 12681  002A58  D009               	goto	l2763
 12682                           
 12683                           ; BSR set to: 0
 12684  002A5A  0E00               	movlw	0
 12685  002A5C  6F60               	movwf	?__tdiv_to_l_& (0+255),b
 12686  002A5E  0E00               	movlw	0
 12687  002A60  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 12688  002A62  0E00               	movlw	0
 12689  002A64  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 12690  002A66  0E00               	movlw	0
 12691  002A68  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 12692                           
 12693                           ; BSR set to: 0
 12694  002A6A  0012               	return	
 12695  002A6C                     l2763:
 12696                           
 12697                           ; BSR set to: 0
 12698                           
 12699                           ; BSR set to: 0
 12700                           
 12701                           ; BSR set to: 0
 12702  002A6C  90D8               	bcf	status,0,c
 12703  002A6E  336C               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 12704  002A70  336B               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 12705  002A72  336A               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 12706  002A74  3369               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 12707                           
 12708                           ; BSR set to: 0
 12709  002A76  3F6E               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 12710  002A78  D7F9               	goto	l2763
 12711                           
 12712                           ; BSR set to: 0
 12713  002A7A  D015               	goto	u7180
 12714  002A7C                     l2762:
 12715                           
 12716                           ; BSR set to: 0
 12717                           
 12718                           ; BSR set to: 0
 12719  002A7C  0E17               	movlw	23
 12720  002A7E  656E               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 12721  002A80  D00F               	goto	l2768
 12722                           
 12723                           ; BSR set to: 0
 12724  002A82  0E00               	movlw	0
 12725  002A84  6F60               	movwf	?__tdiv_to_l_& (0+255),b
 12726  002A86  0E00               	movlw	0
 12727  002A88  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 12728  002A8A  0E00               	movlw	0
 12729  002A8C  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 12730  002A8E  0E00               	movlw	0
 12731  002A90  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 12732                           
 12733                           ; BSR set to: 0
 12734  002A92  0012               	return	
 12735  002A94                     
 12736                           ; BSR set to: 0
 12737                           
 12738                           ; BSR set to: 0
 12739  002A94  90D8               	bcf	status,0,c
 12740  002A96  3769               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 12741  002A98  376A               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 12742  002A9A  376B               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 12743  002A9C  376C               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 12744  002A9E  076E               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 12745  002AA0                     l2768:
 12746                           
 12747                           ; BSR set to: 0
 12748                           
 12749                           ; BSR set to: 0
 12750  002AA0  516E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 12751  002AA2  A4D8               	btfss	status,2,c
 12752  002AA4  D7F7               	goto	l2769
 12753  002AA6                     u7180:
 12754                           
 12755                           ; BSR set to: 0
 12756                           
 12757                           ; BSR set to: 0
 12758  002AA6  C069  F060         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 12759  002AAA  C06A  F061         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 12760  002AAE  C06B  F062         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 12761  002AB2  C06C  F063         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 12762                           
 12763                           ; BSR set to: 0
 12764  002AB6  0012               	return		;funcret
 12765  002AB8                     __end_of__tdiv_to_l_:
 12766                           	opt stack 0
 12767                           tblptru	equ	0xFF8
 12768                           tblptrh	equ	0xFF7
 12769                           tblptrl	equ	0xFF6
 12770                           tablat	equ	0xFF5
 12771                           prodh	equ	0xFF4
 12772                           prodl	equ	0xFF3
 12773                           intcon	equ	0xFF2
 12774                           postinc0	equ	0xFEE
 12775                           wreg	equ	0xFE8
 12776                           indf1	equ	0xFE7
 12777                           postdec1	equ	0xFE5
 12778                           fsr1h	equ	0xFE2
 12779                           fsr1l	equ	0xFE1
 12780                           indf2	equ	0xFDF
 12781                           postinc2	equ	0xFDE
 12782                           postdec2	equ	0xFDD
 12783                           plusw2	equ	0xFDB
 12784                           fsr2h	equ	0xFDA
 12785                           fsr2l	equ	0xFD9
 12786                           status	equ	0xFD8
 12787                           
 12788 ;; *************** function __div_to_l_ *****************
 12789 ;; Defined at:
 12790 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\fldivl.c"
 12791 ;; Parameters:    Size  Location     Type
 12792 ;;  f1              3    0[BANK0 ] unsigned long 
 12793 ;;  f2              3    3[BANK0 ] unsigned long 
 12794 ;; Auto vars:     Size  Location     Type
 12795 ;;  quot            4    6[BANK0 ] unsigned long 
 12796 ;;  exp1            1   11[BANK0 ] unsigned char 
 12797 ;;  cntr            1   10[BANK0 ] unsigned char 
 12798 ;; Return value:  Size  Location     Type
 12799 ;;                  4    0[BANK0 ] unsigned long 
 12800 ;; Registers used:
 12801 ;;		wreg, status,2, status,0
 12802 ;; Tracked objects:
 12803 ;;		On entry : 0/0
 12804 ;;		On exit  : 0/0
 12805 ;;		Unchanged: 0/0
 12806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12807 ;;      Params:         0       6       0       0       0       0       0       0       0
 12808 ;;      Locals:         0       6       0       0       0       0       0       0       0
 12809 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12810 ;;      Totals:         0      12       0       0       0       0       0       0       0
 12811 ;;Total ram usage:       12 bytes
 12812 ;; Hardware stack levels used:    1
 12813 ;; Hardware stack levels required when called:   10
 12814 ;; This function calls:
 12815 ;;		Nothing
 12816 ;; This function is called by:
 12817 ;;		_sprintf
 12818 ;; This function uses a non-reentrant model
 12819 ;;
 12820                           
 12821                           	psect	text38
 12822  002E3E                     __ptext38:
 12823                           	opt stack 0
 12824  002E3E                     __div_to_l_:
 12825                           	opt stack 19
 12826                           
 12827                           ; BSR set to: 0
 12828                           ;incstack = 0
 12829  002E3E  0100               	movlb	0	; () banked
 12830  002E40  3562               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 12831  002E42  3563               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 12832  002E44  6F6B               	movwf	__div_to_l_@exp1& (0+255),b
 12833  002E46  516B               	movf	__div_to_l_@exp1& (0+255),w,b
 12834  002E48  A4D8               	btfss	status,2,c
 12835  002E4A  D009               	goto	l2652
 12836                           
 12837                           ; BSR set to: 0
 12838  002E4C  0E00               	movlw	0
 12839  002E4E  6F60               	movwf	?__div_to_l_& (0+255),b
 12840  002E50  0E00               	movlw	0
 12841  002E52  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
 12842  002E54  0E00               	movlw	0
 12843  002E56  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
 12844  002E58  0E00               	movlw	0
 12845  002E5A  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
 12846                           
 12847                           ; BSR set to: 0
 12848  002E5C  0012               	return	
 12849  002E5E                     l2652:
 12850                           
 12851                           ; BSR set to: 0
 12852                           
 12853                           ; BSR set to: 0
 12854  002E5E  3565               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 12855  002E60  3566               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 12856  002E62  6F6A               	movwf	__div_to_l_@cntr& (0+255),b
 12857  002E64  516A               	movf	__div_to_l_@cntr& (0+255),w,b
 12858  002E66  A4D8               	btfss	status,2,c
 12859  002E68  D009               	goto	l2654
 12860                           
 12861                           ; BSR set to: 0
 12862  002E6A  0E00               	movlw	0
 12863  002E6C  6F60               	movwf	?__div_to_l_& (0+255),b
 12864  002E6E  0E00               	movlw	0
 12865  002E70  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
 12866  002E72  0E00               	movlw	0
 12867  002E74  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
 12868  002E76  0E00               	movlw	0
 12869  002E78  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
 12870                           
 12871                           ; BSR set to: 0
 12872  002E7A  0012               	return	
 12873  002E7C                     l2654:
 12874                           
 12875                           ; BSR set to: 0
 12876                           
 12877                           ; BSR set to: 0
 12878  002E7C  8F62               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 12879                           
 12880                           ; BSR set to: 0
 12881  002E7E  0EFF               	movlw	255
 12882  002E80  1760               	andwf	__div_to_l_@f1& (0+255),f,b
 12883  002E82  0EFF               	movlw	255
 12884  002E84  1761               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 12885  002E86  0EFF               	movlw	255
 12886  002E88  1762               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 12887  002E8A  0E00               	movlw	0
 12888  002E8C  1763               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 12889                           
 12890                           ; BSR set to: 0
 12891  002E8E  8F65               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 12892  002E90  0EFF               	movlw	255
 12893  002E92  1763               	andwf	__div_to_l_@f2& (0+255),f,b
 12894  002E94  0EFF               	movlw	255
 12895  002E96  1764               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 12896  002E98  0EFF               	movlw	255
 12897  002E9A  1765               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 12898  002E9C  0E00               	movlw	0
 12899  002E9E  1766               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 12900                           
 12901                           ; BSR set to: 0
 12902  002EA0  0E00               	movlw	0
 12903  002EA2  6F66               	movwf	__div_to_l_@quot& (0+255),b
 12904  002EA4  0E00               	movlw	0
 12905  002EA6  6F67               	movwf	(__div_to_l_@quot+1)& (0+255),b
 12906  002EA8  0E00               	movlw	0
 12907  002EAA  6F68               	movwf	(__div_to_l_@quot+2)& (0+255),b
 12908  002EAC  0E00               	movlw	0
 12909  002EAE  6F69               	movwf	(__div_to_l_@quot+3)& (0+255),b
 12910                           
 12911                           ; BSR set to: 0
 12912  002EB0  0E7F               	movlw	127
 12913  002EB2  5F6B               	subwf	__div_to_l_@exp1& (0+255),f,b
 12914                           
 12915                           ; BSR set to: 0
 12916  002EB4  516A               	movf	__div_to_l_@cntr& (0+255),w,b
 12917  002EB6  0FA0               	addlw	160
 12918  002EB8  5F6B               	subwf	__div_to_l_@exp1& (0+255),f,b
 12919                           
 12920                           ; BSR set to: 0
 12921  002EBA  0E20               	movlw	32
 12922  002EBC  6F6A               	movwf	__div_to_l_@cntr& (0+255),b
 12923  002EBE                     
 12924                           ; BSR set to: 0
 12925                           
 12926                           ; BSR set to: 0
 12927  002EBE  90D8               	bcf	status,0,c
 12928  002EC0  3766               	rlcf	__div_to_l_@quot& (0+255),f,b
 12929  002EC2  3767               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 12930  002EC4  3768               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 12931  002EC6  3769               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 12932                           
 12933                           ; BSR set to: 0
 12934  002EC8  5163               	movf	__div_to_l_@f2& (0+255),w,b
 12935  002ECA  5D60               	subwf	__div_to_l_@f1& (0+255),w,b
 12936  002ECC  5164               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 12937  002ECE  5961               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 12938  002ED0  5165               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 12939  002ED2  5962               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 12940  002ED4  5166               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 12941  002ED6  5963               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 12942  002ED8  A0D8               	btfss	status,0,c
 12943  002EDA  D009               	goto	l2656
 12944                           
 12945                           ; BSR set to: 0
 12946  002EDC  5163               	movf	__div_to_l_@f2& (0+255),w,b
 12947  002EDE  5F60               	subwf	__div_to_l_@f1& (0+255),f,b
 12948  002EE0  5164               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 12949  002EE2  5B61               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 12950  002EE4  5165               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 12951  002EE6  5B62               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 12952  002EE8  5166               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 12953  002EEA  5B63               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 12954                           
 12955                           ; BSR set to: 0
 12956  002EEC  8166               	bsf	__div_to_l_@quot& (0+255),0,b
 12957  002EEE                     l2656:
 12958                           
 12959                           ; BSR set to: 0
 12960                           
 12961                           ; BSR set to: 0
 12962  002EEE  90D8               	bcf	status,0,c
 12963  002EF0  3760               	rlcf	__div_to_l_@f1& (0+255),f,b
 12964  002EF2  3761               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 12965  002EF4  3762               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 12966  002EF6  3763               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 12967                           
 12968                           ; BSR set to: 0
 12969  002EF8  2F6A               	decfsz	__div_to_l_@cntr& (0+255),f,b
 12970  002EFA  D7E1               	goto	l2655
 12971                           
 12972                           ; BSR set to: 0
 12973                           
 12974                           ; BSR set to: 0
 12975  002EFC  AF6B               	btfss	__div_to_l_@exp1& (0+255),7,b
 12976  002EFE  D016               	goto	l2658
 12977                           
 12978                           ; BSR set to: 0
 12979  002F00  516B               	movf	__div_to_l_@exp1& (0+255),w,b
 12980  002F02  0A80               	xorlw	128
 12981  002F04  0F9F               	addlw	159
 12982  002F06  B0D8               	btfsc	status,0,c
 12983  002F08  D009               	goto	l2659
 12984                           
 12985                           ; BSR set to: 0
 12986  002F0A  0E00               	movlw	0
 12987  002F0C  6F60               	movwf	?__div_to_l_& (0+255),b
 12988  002F0E  0E00               	movlw	0
 12989  002F10  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
 12990  002F12  0E00               	movlw	0
 12991  002F14  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
 12992  002F16  0E00               	movlw	0
 12993  002F18  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
 12994                           
 12995                           ; BSR set to: 0
 12996  002F1A  0012               	return	
 12997  002F1C                     l2659:
 12998                           
 12999                           ; BSR set to: 0
 13000                           
 13001                           ; BSR set to: 0
 13002                           
 13003                           ; BSR set to: 0
 13004  002F1C  90D8               	bcf	status,0,c
 13005  002F1E  3369               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 13006  002F20  3368               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 13007  002F22  3367               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 13008  002F24  3366               	rrcf	__div_to_l_@quot& (0+255),f,b
 13009                           
 13010                           ; BSR set to: 0
 13011  002F26  3F6B               	incfsz	__div_to_l_@exp1& (0+255),f,b
 13012  002F28  D7F9               	goto	l2659
 13013                           
 13014                           ; BSR set to: 0
 13015  002F2A  D015               	goto	u7250
 13016  002F2C                     l2658:
 13017                           
 13018                           ; BSR set to: 0
 13019                           
 13020                           ; BSR set to: 0
 13021  002F2C  0E1F               	movlw	31
 13022  002F2E  656B               	cpfsgt	__div_to_l_@exp1& (0+255),b
 13023  002F30  D00F               	goto	l2664
 13024                           
 13025                           ; BSR set to: 0
 13026  002F32  0E00               	movlw	0
 13027  002F34  6F60               	movwf	?__div_to_l_& (0+255),b
 13028  002F36  0E00               	movlw	0
 13029  002F38  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
 13030  002F3A  0E00               	movlw	0
 13031  002F3C  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
 13032  002F3E  0E00               	movlw	0
 13033  002F40  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
 13034                           
 13035                           ; BSR set to: 0
 13036  002F42  0012               	return	
 13037  002F44                     
 13038                           ; BSR set to: 0
 13039                           
 13040                           ; BSR set to: 0
 13041  002F44  90D8               	bcf	status,0,c
 13042  002F46  3766               	rlcf	__div_to_l_@quot& (0+255),f,b
 13043  002F48  3767               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 13044  002F4A  3768               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 13045  002F4C  3769               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 13046  002F4E  076B               	decf	__div_to_l_@exp1& (0+255),f,b
 13047  002F50                     l2664:
 13048                           
 13049                           ; BSR set to: 0
 13050                           
 13051                           ; BSR set to: 0
 13052  002F50  516B               	movf	__div_to_l_@exp1& (0+255),w,b
 13053  002F52  A4D8               	btfss	status,2,c
 13054  002F54  D7F7               	goto	l2665
 13055  002F56                     u7250:
 13056                           
 13057                           ; BSR set to: 0
 13058                           
 13059                           ; BSR set to: 0
 13060  002F56  C066  F060         	movff	__div_to_l_@quot,?__div_to_l_
 13061  002F5A  C067  F061         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 13062  002F5E  C068  F062         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 13063  002F62  C069  F063         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 13064                           
 13065                           ; BSR set to: 0
 13066  002F66  0012               	return		;funcret
 13067  002F68                     __end_of__div_to_l_:
 13068                           	opt stack 0
 13069                           tblptru	equ	0xFF8
 13070                           tblptrh	equ	0xFF7
 13071                           tblptrl	equ	0xFF6
 13072                           tablat	equ	0xFF5
 13073                           prodh	equ	0xFF4
 13074                           prodl	equ	0xFF3
 13075                           intcon	equ	0xFF2
 13076                           postinc0	equ	0xFEE
 13077                           wreg	equ	0xFE8
 13078                           indf1	equ	0xFE7
 13079                           postdec1	equ	0xFE5
 13080                           fsr1h	equ	0xFE2
 13081                           fsr1l	equ	0xFE1
 13082                           indf2	equ	0xFDF
 13083                           postinc2	equ	0xFDE
 13084                           postdec2	equ	0xFDD
 13085                           plusw2	equ	0xFDB
 13086                           fsr2h	equ	0xFDA
 13087                           fsr2l	equ	0xFD9
 13088                           status	equ	0xFD8
 13089                           
 13090 ;; *************** function ___lltoft *****************
 13091 ;; Defined at:
 13092 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lltoft.c"
 13093 ;; Parameters:    Size  Location     Type
 13094 ;;  c               4    8[BANK0 ] unsigned long 
 13095 ;; Auto vars:     Size  Location     Type
 13096 ;;  exp             1   16[BANK0 ] unsigned char 
 13097 ;; Return value:  Size  Location     Type
 13098 ;;                  3    8[BANK0 ] float 
 13099 ;; Registers used:
 13100 ;;		wreg, status,2, status,0, cstack
 13101 ;; Tracked objects:
 13102 ;;		On entry : 0/0
 13103 ;;		On exit  : 0/0
 13104 ;;		Unchanged: 0/0
 13105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13106 ;;      Params:         0       4       0       0       0       0       0       0       0
 13107 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13108 ;;      Temps:          0       4       0       0       0       0       0       0       0
 13109 ;;      Totals:         0       9       0       0       0       0       0       0       0
 13110 ;;Total ram usage:        9 bytes
 13111 ;; Hardware stack levels used:    1
 13112 ;; Hardware stack levels required when called:   11
 13113 ;; This function calls:
 13114 ;;		___ftpack
 13115 ;; This function is called by:
 13116 ;;		_sprintf
 13117 ;; This function uses a non-reentrant model
 13118 ;;
 13119                           
 13120                           	psect	text39
 13121  00494A                     __ptext39:
 13122                           	opt stack 0
 13123  00494A                     ___lltoft:
 13124                           	opt stack 18
 13125                           
 13126                           ; BSR set to: 0
 13127                           ;incstack = 0
 13128  00494A  0E8E               	movlw	142
 13129  00494C  0100               	movlb	0	; () banked
 13130  00494E  6F70               	movwf	___lltoft@exp& (0+255),b
 13131  004950  D006               	goto	l2863
 13132  004952                     
 13133                           ; BSR set to: 0
 13134                           
 13135                           ; BSR set to: 0
 13136  004952  90D8               	bcf	status,0,c
 13137  004954  336B               	rrcf	(___lltoft@c+3)& (0+255),f,b
 13138  004956  336A               	rrcf	(___lltoft@c+2)& (0+255),f,b
 13139  004958  3369               	rrcf	(___lltoft@c+1)& (0+255),f,b
 13140  00495A  3368               	rrcf	___lltoft@c& (0+255),f,b
 13141  00495C  2B70               	incf	___lltoft@exp& (0+255),f,b
 13142  00495E                     l2863:
 13143                           
 13144                           ; BSR set to: 0
 13145                           
 13146                           ; BSR set to: 0
 13147  00495E  0E00               	movlw	0
 13148  004960  1568               	andwf	___lltoft@c& (0+255),w,b
 13149  004962  6F6C               	movwf	??___lltoft& (0+255),b
 13150  004964  0E00               	movlw	0
 13151  004966  1569               	andwf	(___lltoft@c+1)& (0+255),w,b
 13152  004968  6F6D               	movwf	(??___lltoft+1)& (0+255),b
 13153  00496A  0E00               	movlw	0
 13154  00496C  156A               	andwf	(___lltoft@c+2)& (0+255),w,b
 13155  00496E  6F6E               	movwf	(??___lltoft+2)& (0+255),b
 13156  004970  0EFF               	movlw	255
 13157  004972  156B               	andwf	(___lltoft@c+3)& (0+255),w,b
 13158  004974  6F6F               	movwf	(??___lltoft+3)& (0+255),b
 13159  004976  516C               	movf	??___lltoft& (0+255),w,b
 13160  004978  116D               	iorwf	(??___lltoft+1)& (0+255),w,b
 13161  00497A  116E               	iorwf	(??___lltoft+2)& (0+255),w,b
 13162  00497C  116F               	iorwf	(??___lltoft+3)& (0+255),w,b
 13163  00497E  A4D8               	btfss	status,2,c
 13164  004980  D7E8               	goto	l2864
 13165                           
 13166                           ; BSR set to: 0
 13167                           
 13168                           ; BSR set to: 0
 13169  004982  C068  F060         	movff	___lltoft@c,___ftpack@arg
 13170  004986  C069  F061         	movff	___lltoft@c+1,___ftpack@arg+1
 13171  00498A  C06A  F062         	movff	___lltoft@c+2,___ftpack@arg+2
 13172  00498E  C070  F063         	movff	___lltoft@exp,___ftpack@exp
 13173  004992  0E00               	movlw	0
 13174  004994  6F64               	movwf	___ftpack@sign& (0+255),b
 13175  004996  ECA5  F01E         	call	___ftpack	;wreg free
 13176  00499A  C060  F068         	movff	?___ftpack,?___lltoft
 13177  00499E  C061  F069         	movff	?___ftpack+1,?___lltoft+1
 13178  0049A2  C062  F06A         	movff	?___ftpack+2,?___lltoft+2
 13179  0049A6  0012               	return	
 13180  0049A8                     __end_of___lltoft:
 13181                           	opt stack 0
 13182                           tblptru	equ	0xFF8
 13183                           tblptrh	equ	0xFF7
 13184                           tblptrl	equ	0xFF6
 13185                           tablat	equ	0xFF5
 13186                           prodh	equ	0xFF4
 13187                           prodl	equ	0xFF3
 13188                           intcon	equ	0xFF2
 13189                           postinc0	equ	0xFEE
 13190                           wreg	equ	0xFE8
 13191                           indf1	equ	0xFE7
 13192                           postdec1	equ	0xFE5
 13193                           fsr1h	equ	0xFE2
 13194                           fsr1l	equ	0xFE1
 13195                           indf2	equ	0xFDF
 13196                           postinc2	equ	0xFDE
 13197                           postdec2	equ	0xFDD
 13198                           plusw2	equ	0xFDB
 13199                           fsr2h	equ	0xFDA
 13200                           fsr2l	equ	0xFD9
 13201                           status	equ	0xFD8
 13202                           
 13203 ;; *************** function ___llmod *****************
 13204 ;; Defined at:
 13205 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\llmod.c"
 13206 ;; Parameters:    Size  Location     Type
 13207 ;;  dividend        4   13[BANK0 ] unsigned long 
 13208 ;;  divisor         4   17[BANK0 ] unsigned long 
 13209 ;; Auto vars:     Size  Location     Type
 13210 ;;  counter         1   21[BANK0 ] unsigned char 
 13211 ;; Return value:  Size  Location     Type
 13212 ;;                  4   13[BANK0 ] unsigned long 
 13213 ;; Registers used:
 13214 ;;		wreg, status,2, status,0
 13215 ;; Tracked objects:
 13216 ;;		On entry : 0/0
 13217 ;;		On exit  : 0/0
 13218 ;;		Unchanged: 0/0
 13219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13220 ;;      Params:         0       8       0       0       0       0       0       0       0
 13221 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13222 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13223 ;;      Totals:         0       9       0       0       0       0       0       0       0
 13224 ;;Total ram usage:        9 bytes
 13225 ;; Hardware stack levels used:    1
 13226 ;; Hardware stack levels required when called:   10
 13227 ;; This function calls:
 13228 ;;		Nothing
 13229 ;; This function is called by:
 13230 ;;		_sprintf
 13231 ;; This function uses a non-reentrant model
 13232 ;;
 13233                           
 13234                           	psect	text40
 13235  00481C                     __ptext40:
 13236                           	opt stack 0
 13237  00481C                     ___llmod:
 13238                           	opt stack 19
 13239                           
 13240                           ;incstack = 0
 13241  00481C  0100               	movlb	0	; () banked
 13242  00481E  5171               	movf	___llmod@divisor& (0+255),w,b
 13243  004820  1172               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 13244  004822  1173               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 13245  004824  1174               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 13246  004826  B4D8               	btfsc	status,2,c
 13247  004828  D024               	goto	l2857
 13248                           
 13249                           ; BSR set to: 0
 13250  00482A  0E01               	movlw	1
 13251  00482C  6F75               	movwf	___llmod@counter& (0+255),b
 13252  00482E  D006               	goto	l2852
 13253  004830                     
 13254                           ; BSR set to: 0
 13255                           
 13256                           ; BSR set to: 0
 13257  004830  90D8               	bcf	status,0,c
 13258  004832  3771               	rlcf	___llmod@divisor& (0+255),f,b
 13259  004834  3772               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 13260  004836  3773               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 13261  004838  3774               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 13262  00483A  2B75               	incf	___llmod@counter& (0+255),f,b
 13263  00483C                     l2852:
 13264                           
 13265                           ; BSR set to: 0
 13266                           
 13267                           ; BSR set to: 0
 13268  00483C  AF74               	btfss	(___llmod@divisor+3)& (0+255),7,b
 13269  00483E  D7F8               	goto	l2853
 13270  004840                     u7430:
 13271                           
 13272                           ; BSR set to: 0
 13273                           
 13274                           ; BSR set to: 0
 13275                           
 13276                           ; BSR set to: 0
 13277  004840  5171               	movf	___llmod@divisor& (0+255),w,b
 13278  004842  5D6D               	subwf	___llmod@dividend& (0+255),w,b
 13279  004844  5172               	movf	(___llmod@divisor+1)& (0+255),w,b
 13280  004846  596E               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 13281  004848  5173               	movf	(___llmod@divisor+2)& (0+255),w,b
 13282  00484A  596F               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 13283  00484C  5174               	movf	(___llmod@divisor+3)& (0+255),w,b
 13284  00484E  5970               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 13285  004850  A0D8               	btfss	status,0,c
 13286  004852  D008               	goto	l2856
 13287                           
 13288                           ; BSR set to: 0
 13289  004854  5171               	movf	___llmod@divisor& (0+255),w,b
 13290  004856  5F6D               	subwf	___llmod@dividend& (0+255),f,b
 13291  004858  5172               	movf	(___llmod@divisor+1)& (0+255),w,b
 13292  00485A  5B6E               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 13293  00485C  5173               	movf	(___llmod@divisor+2)& (0+255),w,b
 13294  00485E  5B6F               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 13295  004860  5174               	movf	(___llmod@divisor+3)& (0+255),w,b
 13296  004862  5B70               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 13297  004864                     l2856:
 13298                           
 13299                           ; BSR set to: 0
 13300                           
 13301                           ; BSR set to: 0
 13302  004864  90D8               	bcf	status,0,c
 13303  004866  3374               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 13304  004868  3373               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 13305  00486A  3372               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 13306  00486C  3371               	rrcf	___llmod@divisor& (0+255),f,b
 13307                           
 13308                           ; BSR set to: 0
 13309  00486E  2F75               	decfsz	___llmod@counter& (0+255),f,b
 13310  004870  D7E7               	goto	u7430
 13311  004872                     l2857:
 13312                           
 13313                           ; BSR set to: 0
 13314                           
 13315                           ; BSR set to: 0
 13316  004872  C06D  F06D         	movff	___llmod@dividend,?___llmod
 13317  004876  C06E  F06E         	movff	___llmod@dividend+1,?___llmod+1
 13318  00487A  C06F  F06F         	movff	___llmod@dividend+2,?___llmod+2
 13319  00487E  C070  F070         	movff	___llmod@dividend+3,?___llmod+3
 13320                           
 13321                           ; BSR set to: 0
 13322  004882  0012               	return		;funcret
 13323  004884                     __end_of___llmod:
 13324                           	opt stack 0
 13325                           tblptru	equ	0xFF8
 13326                           tblptrh	equ	0xFF7
 13327                           tblptrl	equ	0xFF6
 13328                           tablat	equ	0xFF5
 13329                           prodh	equ	0xFF4
 13330                           prodl	equ	0xFF3
 13331                           intcon	equ	0xFF2
 13332                           postinc0	equ	0xFEE
 13333                           wreg	equ	0xFE8
 13334                           indf1	equ	0xFE7
 13335                           postdec1	equ	0xFE5
 13336                           fsr1h	equ	0xFE2
 13337                           fsr1l	equ	0xFE1
 13338                           indf2	equ	0xFDF
 13339                           postinc2	equ	0xFDE
 13340                           postdec2	equ	0xFDD
 13341                           plusw2	equ	0xFDB
 13342                           fsr2h	equ	0xFDA
 13343                           fsr2l	equ	0xFD9
 13344                           status	equ	0xFD8
 13345                           
 13346 ;; *************** function ___lldiv *****************
 13347 ;; Defined at:
 13348 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lldiv.c"
 13349 ;; Parameters:    Size  Location     Type
 13350 ;;  dividend        4    0[BANK0 ] unsigned long 
 13351 ;;  divisor         4    4[BANK0 ] unsigned long 
 13352 ;; Auto vars:     Size  Location     Type
 13353 ;;  quotient        4    8[BANK0 ] unsigned long 
 13354 ;;  counter         1   12[BANK0 ] unsigned char 
 13355 ;; Return value:  Size  Location     Type
 13356 ;;                  4    0[BANK0 ] unsigned long 
 13357 ;; Registers used:
 13358 ;;		wreg, status,2, status,0
 13359 ;; Tracked objects:
 13360 ;;		On entry : 0/0
 13361 ;;		On exit  : 0/0
 13362 ;;		Unchanged: 0/0
 13363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13364 ;;      Params:         0       8       0       0       0       0       0       0       0
 13365 ;;      Locals:         0       5       0       0       0       0       0       0       0
 13366 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13367 ;;      Totals:         0      13       0       0       0       0       0       0       0
 13368 ;;Total ram usage:       13 bytes
 13369 ;; Hardware stack levels used:    1
 13370 ;; Hardware stack levels required when called:   10
 13371 ;; This function calls:
 13372 ;;		Nothing
 13373 ;; This function is called by:
 13374 ;;		_setup_uart
 13375 ;;		_sprintf
 13376 ;; This function uses a non-reentrant model
 13377 ;;
 13378                           
 13379                           	psect	text41
 13380  0045C6                     __ptext41:
 13381                           	opt stack 0
 13382  0045C6                     ___lldiv:
 13383                           	opt stack 19
 13384                           
 13385                           ; BSR set to: 0
 13386                           ;incstack = 0
 13387  0045C6  0E00               	movlw	0
 13388  0045C8  0100               	movlb	0	; () banked
 13389  0045CA  6F68               	movwf	___lldiv@quotient& (0+255),b
 13390  0045CC  0E00               	movlw	0
 13391  0045CE  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 13392  0045D0  0E00               	movlw	0
 13393  0045D2  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 13394  0045D4  0E00               	movlw	0
 13395  0045D6  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 13396                           
 13397                           ; BSR set to: 0
 13398  0045D8  5164               	movf	___lldiv@divisor& (0+255),w,b
 13399  0045DA  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 13400  0045DC  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 13401  0045DE  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 13402  0045E0  B4D8               	btfsc	status,2,c
 13403  0045E2  D02A               	goto	l2847
 13404                           
 13405                           ; BSR set to: 0
 13406  0045E4  0E01               	movlw	1
 13407  0045E6  6F6C               	movwf	___lldiv@counter& (0+255),b
 13408  0045E8  D006               	goto	l2842
 13409  0045EA                     
 13410                           ; BSR set to: 0
 13411                           
 13412                           ; BSR set to: 0
 13413  0045EA  90D8               	bcf	status,0,c
 13414  0045EC  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 13415  0045EE  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 13416  0045F0  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 13417  0045F2  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 13418  0045F4  2B6C               	incf	___lldiv@counter& (0+255),f,b
 13419  0045F6                     l2842:
 13420                           
 13421                           ; BSR set to: 0
 13422                           
 13423                           ; BSR set to: 0
 13424  0045F6  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 13425  0045F8  D7F8               	goto	l2843
 13426  0045FA                     u7400:
 13427                           
 13428                           ; BSR set to: 0
 13429                           
 13430                           ; BSR set to: 0
 13431                           
 13432                           ; BSR set to: 0
 13433  0045FA  90D8               	bcf	status,0,c
 13434  0045FC  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 13435  0045FE  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 13436  004600  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 13437  004602  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 13438                           
 13439                           ; BSR set to: 0
 13440  004604  5164               	movf	___lldiv@divisor& (0+255),w,b
 13441  004606  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 13442  004608  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 13443  00460A  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 13444  00460C  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 13445  00460E  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 13446  004610  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 13447  004612  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 13448  004614  A0D8               	btfss	status,0,c
 13449  004616  D009               	goto	l2846
 13450                           
 13451                           ; BSR set to: 0
 13452  004618  5164               	movf	___lldiv@divisor& (0+255),w,b
 13453  00461A  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 13454  00461C  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 13455  00461E  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 13456  004620  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 13457  004622  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 13458  004624  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 13459  004626  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 13460                           
 13461                           ; BSR set to: 0
 13462  004628  8168               	bsf	___lldiv@quotient& (0+255),0,b
 13463  00462A                     l2846:
 13464                           
 13465                           ; BSR set to: 0
 13466                           
 13467                           ; BSR set to: 0
 13468  00462A  90D8               	bcf	status,0,c
 13469  00462C  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 13470  00462E  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 13471  004630  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 13472  004632  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 13473                           
 13474                           ; BSR set to: 0
 13475  004634  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 13476  004636  D7E1               	goto	u7400
 13477  004638                     l2847:
 13478                           
 13479                           ; BSR set to: 0
 13480                           
 13481                           ; BSR set to: 0
 13482  004638  C068  F060         	movff	___lldiv@quotient,?___lldiv
 13483  00463C  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 13484  004640  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 13485  004644  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 13486                           
 13487                           ; BSR set to: 0
 13488  004648  0012               	return		;funcret
 13489  00464A                     __end_of___lldiv:
 13490                           	opt stack 0
 13491                           tblptru	equ	0xFF8
 13492                           tblptrh	equ	0xFF7
 13493                           tblptrl	equ	0xFF6
 13494                           tablat	equ	0xFF5
 13495                           prodh	equ	0xFF4
 13496                           prodl	equ	0xFF3
 13497                           intcon	equ	0xFF2
 13498                           postinc0	equ	0xFEE
 13499                           wreg	equ	0xFE8
 13500                           indf1	equ	0xFE7
 13501                           postdec1	equ	0xFE5
 13502                           fsr1h	equ	0xFE2
 13503                           fsr1l	equ	0xFE1
 13504                           indf2	equ	0xFDF
 13505                           postinc2	equ	0xFDE
 13506                           postdec2	equ	0xFDD
 13507                           plusw2	equ	0xFDB
 13508                           fsr2h	equ	0xFDA
 13509                           fsr2l	equ	0xFD9
 13510                           status	equ	0xFD8
 13511                           
 13512 ;; *************** function ___fttol *****************
 13513 ;; Defined at:
 13514 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\fttol.c"
 13515 ;; Parameters:    Size  Location     Type
 13516 ;;  f1              3   80[BANK0 ] float 
 13517 ;; Auto vars:     Size  Location     Type
 13518 ;;  lval            4   90[BANK0 ] unsigned long 
 13519 ;;  exp1            1   94[BANK0 ] unsigned char 
 13520 ;;  sign1           1   89[BANK0 ] unsigned char 
 13521 ;; Return value:  Size  Location     Type
 13522 ;;                  4   80[BANK0 ] long 
 13523 ;; Registers used:
 13524 ;;		wreg, status,2, status,0
 13525 ;; Tracked objects:
 13526 ;;		On entry : 0/0
 13527 ;;		On exit  : 0/0
 13528 ;;		Unchanged: 0/0
 13529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13530 ;;      Params:         0       4       0       0       0       0       0       0       0
 13531 ;;      Locals:         0       6       0       0       0       0       0       0       0
 13532 ;;      Temps:          0       5       0       0       0       0       0       0       0
 13533 ;;      Totals:         0      15       0       0       0       0       0       0       0
 13534 ;;Total ram usage:       15 bytes
 13535 ;; Hardware stack levels used:    1
 13536 ;; Hardware stack levels required when called:   10
 13537 ;; This function calls:
 13538 ;;		Nothing
 13539 ;; This function is called by:
 13540 ;;		_main
 13541 ;;		_sprintf
 13542 ;; This function uses a non-reentrant model
 13543 ;;
 13544                           
 13545                           	psect	text42
 13546  003594                     __ptext42:
 13547                           	opt stack 0
 13548  003594                     ___fttol:
 13549                           	opt stack 19
 13550                           
 13551                           ; BSR set to: 0
 13552                           ;incstack = 0
 13553  003594  C0B2  F0B4         	movff	___fttol@f1+2,??___fttol
 13554  003598  0100               	movlb	0	; () banked
 13555  00359A  6BB5               	clrf	(??___fttol+1)& (0+255),b
 13556  00359C  6BB6               	clrf	(??___fttol+2)& (0+255),b
 13557  00359E  35B1               	rlcf	(___fttol@f1+1)& (0+255),w,b
 13558  0035A0  37B4               	rlcf	??___fttol& (0+255),f,b
 13559  0035A2  E301               	bnc	u7311
 13560  0035A4  81B5               	bsf	(??___fttol+1)& (0+255),0,b
 13561  0035A6                     u7311:
 13562  0035A6  51B4               	movf	??___fttol& (0+255),w,b
 13563  0035A8  6FBE               	movwf	___fttol@exp1& (0+255),b
 13564  0035AA  51BE               	movf	___fttol@exp1& (0+255),w,b
 13565  0035AC  A4D8               	btfss	status,2,c
 13566  0035AE  D009               	goto	l2801
 13567                           
 13568                           ; BSR set to: 0
 13569  0035B0  0E00               	movlw	0
 13570  0035B2  6FB0               	movwf	?___fttol& (0+255),b
 13571  0035B4  0E00               	movlw	0
 13572  0035B6  6FB1               	movwf	(?___fttol+1)& (0+255),b
 13573  0035B8  0E00               	movlw	0
 13574  0035BA  6FB2               	movwf	(?___fttol+2)& (0+255),b
 13575  0035BC  0E00               	movlw	0
 13576  0035BE  6FB3               	movwf	(?___fttol+3)& (0+255),b
 13577                           
 13578                           ; BSR set to: 0
 13579  0035C0  0012               	return	
 13580  0035C2                     l2801:
 13581                           
 13582                           ; BSR set to: 0
 13583                           
 13584                           ; BSR set to: 0
 13585  0035C2  0E17               	movlw	23
 13586  0035C4  6FB4               	movwf	??___fttol& (0+255),b
 13587  0035C6  C0B0  F0B5         	movff	___fttol@f1,??___fttol+1
 13588  0035CA  C0B1  F0B6         	movff	___fttol@f1+1,??___fttol+2
 13589  0035CE  C0B2  F0B7         	movff	___fttol@f1+2,??___fttol+3
 13590  0035D2  29B4               	incf	??___fttol& (0+255),w,b
 13591  0035D4  6FB8               	movwf	(??___fttol+4)& (0+255),b
 13592  0035D6  D004               	goto	u7330
 13593  0035D8                     u7335:
 13594  0035D8  90D8               	bcf	status,0,c
 13595  0035DA  33B7               	rrcf	(??___fttol+3)& (0+255),f,b
 13596  0035DC  33B6               	rrcf	(??___fttol+2)& (0+255),f,b
 13597  0035DE  33B5               	rrcf	(??___fttol+1)& (0+255),f,b
 13598  0035E0                     u7330:
 13599  0035E0  2FB8               	decfsz	(??___fttol+4)& (0+255),f,b
 13600  0035E2  D7FA               	goto	u7335
 13601  0035E4  0100               	movlb	0	; () banked
 13602  0035E6  51B5               	movf	(??___fttol+1)& (0+255),w,b
 13603  0035E8  6FB9               	movwf	___fttol@sign1& (0+255),b
 13604                           
 13605                           ; BSR set to: 0
 13606  0035EA  8FB1               	bsf	(___fttol@f1+1)& (0+255),7,b
 13607                           
 13608                           ; BSR set to: 0
 13609  0035EC  0EFF               	movlw	255
 13610  0035EE  17B0               	andwf	___fttol@f1& (0+255),f,b
 13611  0035F0  0EFF               	movlw	255
 13612  0035F2  17B1               	andwf	(___fttol@f1+1)& (0+255),f,b
 13613  0035F4  0E00               	movlw	0
 13614  0035F6  17B2               	andwf	(___fttol@f1+2)& (0+255),f,b
 13615                           
 13616                           ; BSR set to: 0
 13617  0035F8  51B0               	movf	___fttol@f1& (0+255),w,b
 13618  0035FA  6FBA               	movwf	___fttol@lval& (0+255),b
 13619  0035FC  51B1               	movf	(___fttol@f1+1)& (0+255),w,b
 13620  0035FE  6FBB               	movwf	(___fttol@lval+1)& (0+255),b
 13621  003600  51B2               	movf	(___fttol@f1+2)& (0+255),w,b
 13622  003602  6FBC               	movwf	(___fttol@lval+2)& (0+255),b
 13623  003604  6BBD               	clrf	(___fttol@lval+3)& (0+255),b
 13624                           
 13625                           ; BSR set to: 0
 13626  003606  0E8E               	movlw	142
 13627  003608  5FBE               	subwf	___fttol@exp1& (0+255),f,b
 13628                           
 13629                           ; BSR set to: 0
 13630  00360A  AFBE               	btfss	___fttol@exp1& (0+255),7,b
 13631  00360C  D016               	goto	l2803
 13632                           
 13633                           ; BSR set to: 0
 13634  00360E  51BE               	movf	___fttol@exp1& (0+255),w,b
 13635  003610  0A80               	xorlw	128
 13636  003612  0F8F               	addlw	143
 13637  003614  B0D8               	btfsc	status,0,c
 13638  003616  D009               	goto	l2804
 13639                           
 13640                           ; BSR set to: 0
 13641  003618  0E00               	movlw	0
 13642  00361A  6FB0               	movwf	?___fttol& (0+255),b
 13643  00361C  0E00               	movlw	0
 13644  00361E  6FB1               	movwf	(?___fttol+1)& (0+255),b
 13645  003620  0E00               	movlw	0
 13646  003622  6FB2               	movwf	(?___fttol+2)& (0+255),b
 13647  003624  0E00               	movlw	0
 13648  003626  6FB3               	movwf	(?___fttol+3)& (0+255),b
 13649                           
 13650                           ; BSR set to: 0
 13651  003628  0012               	return	
 13652  00362A                     l2804:
 13653                           
 13654                           ; BSR set to: 0
 13655                           
 13656                           ; BSR set to: 0
 13657                           
 13658                           ; BSR set to: 0
 13659  00362A  90D8               	bcf	status,0,c
 13660  00362C  33BD               	rrcf	(___fttol@lval+3)& (0+255),f,b
 13661  00362E  33BC               	rrcf	(___fttol@lval+2)& (0+255),f,b
 13662  003630  33BB               	rrcf	(___fttol@lval+1)& (0+255),f,b
 13663  003632  33BA               	rrcf	___fttol@lval& (0+255),f,b
 13664                           
 13665                           ; BSR set to: 0
 13666  003634  3FBE               	incfsz	___fttol@exp1& (0+255),f,b
 13667  003636  D7F9               	goto	l2804
 13668                           
 13669                           ; BSR set to: 0
 13670  003638  D015               	goto	u7370
 13671  00363A                     l2803:
 13672                           
 13673                           ; BSR set to: 0
 13674                           
 13675                           ; BSR set to: 0
 13676  00363A  0E17               	movlw	23
 13677  00363C  65BE               	cpfsgt	___fttol@exp1& (0+255),b
 13678  00363E  D00F               	goto	l2809
 13679                           
 13680                           ; BSR set to: 0
 13681  003640  0E00               	movlw	0
 13682  003642  6FB0               	movwf	?___fttol& (0+255),b
 13683  003644  0E00               	movlw	0
 13684  003646  6FB1               	movwf	(?___fttol+1)& (0+255),b
 13685  003648  0E00               	movlw	0
 13686  00364A  6FB2               	movwf	(?___fttol+2)& (0+255),b
 13687  00364C  0E00               	movlw	0
 13688  00364E  6FB3               	movwf	(?___fttol+3)& (0+255),b
 13689                           
 13690                           ; BSR set to: 0
 13691  003650  0012               	return	
 13692  003652                     
 13693                           ; BSR set to: 0
 13694                           
 13695                           ; BSR set to: 0
 13696  003652  90D8               	bcf	status,0,c
 13697  003654  37BA               	rlcf	___fttol@lval& (0+255),f,b
 13698  003656  37BB               	rlcf	(___fttol@lval+1)& (0+255),f,b
 13699  003658  37BC               	rlcf	(___fttol@lval+2)& (0+255),f,b
 13700  00365A  37BD               	rlcf	(___fttol@lval+3)& (0+255),f,b
 13701  00365C  07BE               	decf	___fttol@exp1& (0+255),f,b
 13702  00365E                     l2809:
 13703                           
 13704                           ; BSR set to: 0
 13705                           
 13706                           ; BSR set to: 0
 13707  00365E  51BE               	movf	___fttol@exp1& (0+255),w,b
 13708  003660  A4D8               	btfss	status,2,c
 13709  003662  D7F7               	goto	l2810
 13710  003664                     u7370:
 13711                           
 13712                           ; BSR set to: 0
 13713                           
 13714                           ; BSR set to: 0
 13715                           
 13716                           ; BSR set to: 0
 13717  003664  51B9               	movf	___fttol@sign1& (0+255),w,b
 13718  003666  B4D8               	btfsc	status,2,c
 13719  003668  D008               	goto	l2812
 13720                           
 13721                           ; BSR set to: 0
 13722  00366A  1FBD               	comf	(___fttol@lval+3)& (0+255),f,b
 13723  00366C  1FBC               	comf	(___fttol@lval+2)& (0+255),f,b
 13724  00366E  1FBB               	comf	(___fttol@lval+1)& (0+255),f,b
 13725  003670  6DBA               	negf	___fttol@lval& (0+255),b
 13726  003672  0E00               	movlw	0
 13727  003674  23BB               	addwfc	(___fttol@lval+1)& (0+255),f,b
 13728  003676  23BC               	addwfc	(___fttol@lval+2)& (0+255),f,b
 13729  003678  23BD               	addwfc	(___fttol@lval+3)& (0+255),f,b
 13730  00367A                     l2812:
 13731                           
 13732                           ; BSR set to: 0
 13733                           
 13734                           ; BSR set to: 0
 13735  00367A  C0BA  F0B0         	movff	___fttol@lval,?___fttol
 13736  00367E  C0BB  F0B1         	movff	___fttol@lval+1,?___fttol+1
 13737  003682  C0BC  F0B2         	movff	___fttol@lval+2,?___fttol+2
 13738  003686  C0BD  F0B3         	movff	___fttol@lval+3,?___fttol+3
 13739  00368A  0012               	return	
 13740  00368C                     __end_of___fttol:
 13741                           	opt stack 0
 13742                           tblptru	equ	0xFF8
 13743                           tblptrh	equ	0xFF7
 13744                           tblptrl	equ	0xFF6
 13745                           tablat	equ	0xFF5
 13746                           prodh	equ	0xFF4
 13747                           prodl	equ	0xFF3
 13748                           intcon	equ	0xFF2
 13749                           postinc0	equ	0xFEE
 13750                           wreg	equ	0xFE8
 13751                           indf1	equ	0xFE7
 13752                           postdec1	equ	0xFE5
 13753                           fsr1h	equ	0xFE2
 13754                           fsr1l	equ	0xFE1
 13755                           indf2	equ	0xFDF
 13756                           postinc2	equ	0xFDE
 13757                           postdec2	equ	0xFDD
 13758                           plusw2	equ	0xFDB
 13759                           fsr2h	equ	0xFDA
 13760                           fsr2l	equ	0xFD9
 13761                           status	equ	0xFD8
 13762                           
 13763 ;; *************** function ___ftsub *****************
 13764 ;; Defined at:
 13765 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftsub.c"
 13766 ;; Parameters:    Size  Location     Type
 13767 ;;  f1              3   32[BANK0 ] float 
 13768 ;;  f2              3   35[BANK0 ] float 
 13769 ;; Auto vars:     Size  Location     Type
 13770 ;;		None
 13771 ;; Return value:  Size  Location     Type
 13772 ;;                  3   32[BANK0 ] float 
 13773 ;; Registers used:
 13774 ;;		wreg, status,2, status,0, cstack
 13775 ;; Tracked objects:
 13776 ;;		On entry : 0/0
 13777 ;;		On exit  : 0/0
 13778 ;;		Unchanged: 0/0
 13779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13780 ;;      Params:         0       6       0       0       0       0       0       0       0
 13781 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13782 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13783 ;;      Totals:         0       6       0       0       0       0       0       0       0
 13784 ;;Total ram usage:        6 bytes
 13785 ;; Hardware stack levels used:    1
 13786 ;; Hardware stack levels required when called:   12
 13787 ;; This function calls:
 13788 ;;		___ftadd
 13789 ;; This function is called by:
 13790 ;;		_sprintf
 13791 ;; This function uses a non-reentrant model
 13792 ;;
 13793                           
 13794                           	psect	text43
 13795  004CFA                     __ptext43:
 13796                           	opt stack 0
 13797  004CFA                     ___ftsub:
 13798                           	opt stack 17
 13799                           
 13800                           ; BSR set to: 0
 13801                           ;incstack = 0
 13802  004CFA  0100               	movlb	0	; () banked
 13803  004CFC  5183               	movf	___ftsub@f2& (0+255),w,b
 13804  004CFE  1184               	iorwf	(___ftsub@f2+1)& (0+255),w,b
 13805  004D00  1185               	iorwf	(___ftsub@f2+2)& (0+255),w,b
 13806  004D02  B4D8               	btfsc	status,2,c
 13807  004D04  D006               	goto	l2797
 13808                           
 13809                           ; BSR set to: 0
 13810  004D06  0E00               	movlw	0
 13811  004D08  1B83               	xorwf	___ftsub@f2& (0+255),f,b
 13812  004D0A  0E00               	movlw	0
 13813  004D0C  1B84               	xorwf	(___ftsub@f2+1)& (0+255),f,b
 13814  004D0E  0E80               	movlw	128
 13815  004D10  1B85               	xorwf	(___ftsub@f2+2)& (0+255),f,b
 13816  004D12                     l2797:
 13817                           
 13818                           ; BSR set to: 0
 13819                           
 13820                           ; BSR set to: 0
 13821  004D12  C080  F074         	movff	___ftsub@f1,___ftadd@f1
 13822  004D16  C081  F075         	movff	___ftsub@f1+1,___ftadd@f1+1
 13823  004D1A  C082  F076         	movff	___ftsub@f1+2,___ftadd@f1+2
 13824  004D1E  C083  F077         	movff	___ftsub@f2,___ftadd@f2
 13825  004D22  C084  F078         	movff	___ftsub@f2+1,___ftadd@f2+1
 13826  004D26  C085  F079         	movff	___ftsub@f2+2,___ftadd@f2+2
 13827  004D2A  ECAA  F012         	call	___ftadd	;wreg free
 13828  004D2E  C074  F080         	movff	?___ftadd,?___ftsub
 13829  004D32  C075  F081         	movff	?___ftadd+1,?___ftsub+1
 13830  004D36  C076  F082         	movff	?___ftadd+2,?___ftsub+2
 13831  004D3A  0012               	return	
 13832  004D3C                     __end_of___ftsub:
 13833                           	opt stack 0
 13834                           tblptru	equ	0xFF8
 13835                           tblptrh	equ	0xFF7
 13836                           tblptrl	equ	0xFF6
 13837                           tablat	equ	0xFF5
 13838                           prodh	equ	0xFF4
 13839                           prodl	equ	0xFF3
 13840                           intcon	equ	0xFF2
 13841                           postinc0	equ	0xFEE
 13842                           wreg	equ	0xFE8
 13843                           indf1	equ	0xFE7
 13844                           postdec1	equ	0xFE5
 13845                           fsr1h	equ	0xFE2
 13846                           fsr1l	equ	0xFE1
 13847                           indf2	equ	0xFDF
 13848                           postinc2	equ	0xFDE
 13849                           postdec2	equ	0xFDD
 13850                           plusw2	equ	0xFDB
 13851                           fsr2h	equ	0xFDA
 13852                           fsr2l	equ	0xFD9
 13853                           status	equ	0xFD8
 13854                           
 13855 ;; *************** function ___ftadd *****************
 13856 ;; Defined at:
 13857 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftadd.c"
 13858 ;; Parameters:    Size  Location     Type
 13859 ;;  f1              3   20[BANK0 ] float 
 13860 ;;  f2              3   23[BANK0 ] float 
 13861 ;; Auto vars:     Size  Location     Type
 13862 ;;  exp1            1   31[BANK0 ] unsigned char 
 13863 ;;  exp2            1   30[BANK0 ] unsigned char 
 13864 ;;  sign            1   29[BANK0 ] unsigned char 
 13865 ;; Return value:  Size  Location     Type
 13866 ;;                  3   20[BANK0 ] float 
 13867 ;; Registers used:
 13868 ;;		wreg, status,2, status,0, cstack
 13869 ;; Tracked objects:
 13870 ;;		On entry : 0/0
 13871 ;;		On exit  : 0/0
 13872 ;;		Unchanged: 0/0
 13873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13874 ;;      Params:         0       6       0       0       0       0       0       0       0
 13875 ;;      Locals:         0       3       0       0       0       0       0       0       0
 13876 ;;      Temps:          0       3       0       0       0       0       0       0       0
 13877 ;;      Totals:         0      12       0       0       0       0       0       0       0
 13878 ;;Total ram usage:       12 bytes
 13879 ;; Hardware stack levels used:    1
 13880 ;; Hardware stack levels required when called:   11
 13881 ;; This function calls:
 13882 ;;		___ftpack
 13883 ;; This function is called by:
 13884 ;;		_le_AD
 13885 ;;		_sprintf
 13886 ;;		___ftsub
 13887 ;; This function uses a non-reentrant model
 13888 ;;
 13889                           
 13890                           	psect	text44
 13891  002554                     __ptext44:
 13892                           	opt stack 0
 13893  002554                     ___ftadd:
 13894                           	opt stack 17
 13895                           
 13896                           ;incstack = 0
 13897  002554  C076  F07A         	movff	___ftadd@f1+2,??___ftadd
 13898  002558  0100               	movlb	0	; () banked
 13899  00255A  6B7B               	clrf	(??___ftadd+1)& (0+255),b
 13900  00255C  6B7C               	clrf	(??___ftadd+2)& (0+255),b
 13901  00255E  3575               	rlcf	(___ftadd@f1+1)& (0+255),w,b
 13902  002560  377A               	rlcf	??___ftadd& (0+255),f,b
 13903  002562  E301               	bnc	u6321
 13904  002564  817B               	bsf	(??___ftadd+1)& (0+255),0,b
 13905  002566                     u6321:
 13906  002566  517A               	movf	??___ftadd& (0+255),w,b
 13907  002568  6F7F               	movwf	___ftadd@exp1& (0+255),b
 13908  00256A  C079  F07A         	movff	___ftadd@f2+2,??___ftadd
 13909  00256E  6B7B               	clrf	(??___ftadd+1)& (0+255),b
 13910  002570  6B7C               	clrf	(??___ftadd+2)& (0+255),b
 13911  002572  3578               	rlcf	(___ftadd@f2+1)& (0+255),w,b
 13912  002574  377A               	rlcf	??___ftadd& (0+255),f,b
 13913  002576  E301               	bnc	u6331
 13914  002578  817B               	bsf	(??___ftadd+1)& (0+255),0,b
 13915  00257A                     u6331:
 13916  00257A  517A               	movf	??___ftadd& (0+255),w,b
 13917  00257C  6F7E               	movwf	___ftadd@exp2& (0+255),b
 13918                           
 13919                           ; BSR set to: 0
 13920  00257E  517F               	movf	___ftadd@exp1& (0+255),w,b
 13921  002580  B4D8               	btfsc	status,2,c
 13922  002582  D00B               	goto	u6360
 13923                           
 13924                           ; BSR set to: 0
 13925  002584  517E               	movf	___ftadd@exp2& (0+255),w,b
 13926  002586  5D7F               	subwf	___ftadd@exp1& (0+255),w,b
 13927  002588  B0D8               	btfsc	status,0,c
 13928  00258A  D00E               	goto	l2715
 13929                           
 13930                           ; BSR set to: 0
 13931  00258C  517F               	movf	___ftadd@exp1& (0+255),w,b
 13932  00258E  0800               	sublw	0
 13933  002590  257E               	addwf	___ftadd@exp2& (0+255),w,b
 13934  002592  6F7A               	movwf	??___ftadd& (0+255),b
 13935  002594  0E18               	movlw	24
 13936  002596  657A               	cpfsgt	??___ftadd& (0+255),b
 13937  002598  D007               	goto	l2715
 13938  00259A                     u6360:
 13939                           
 13940                           ; BSR set to: 0
 13941  00259A  C077  F074         	movff	___ftadd@f2,?___ftadd
 13942  00259E  C078  F075         	movff	___ftadd@f2+1,?___ftadd+1
 13943  0025A2  C079  F076         	movff	___ftadd@f2+2,?___ftadd+2
 13944  0025A6  0012               	return	
 13945  0025A8                     l2715:
 13946                           
 13947                           ; BSR set to: 0
 13948                           
 13949                           ; BSR set to: 0
 13950  0025A8  517E               	movf	___ftadd@exp2& (0+255),w,b
 13951  0025AA  B4D8               	btfsc	status,2,c
 13952  0025AC  D00B               	goto	u6390
 13953                           
 13954                           ; BSR set to: 0
 13955  0025AE  517F               	movf	___ftadd@exp1& (0+255),w,b
 13956  0025B0  5D7E               	subwf	___ftadd@exp2& (0+255),w,b
 13957  0025B2  B0D8               	btfsc	status,0,c
 13958  0025B4  D00E               	goto	l2719
 13959                           
 13960                           ; BSR set to: 0
 13961  0025B6  517E               	movf	___ftadd@exp2& (0+255),w,b
 13962  0025B8  0800               	sublw	0
 13963  0025BA  257F               	addwf	___ftadd@exp1& (0+255),w,b
 13964  0025BC  6F7A               	movwf	??___ftadd& (0+255),b
 13965  0025BE  0E18               	movlw	24
 13966  0025C0  657A               	cpfsgt	??___ftadd& (0+255),b
 13967  0025C2  D007               	goto	l2719
 13968  0025C4                     u6390:
 13969                           
 13970                           ; BSR set to: 0
 13971  0025C4  C074  F074         	movff	___ftadd@f1,?___ftadd
 13972  0025C8  C075  F075         	movff	___ftadd@f1+1,?___ftadd+1
 13973  0025CC  C076  F076         	movff	___ftadd@f1+2,?___ftadd+2
 13974  0025D0  0012               	return	
 13975  0025D2                     l2719:
 13976                           
 13977                           ; BSR set to: 0
 13978                           
 13979                           ; BSR set to: 0
 13980  0025D2  0E06               	movlw	6
 13981  0025D4  6F7D               	movwf	___ftadd@sign& (0+255),b
 13982                           
 13983                           ; BSR set to: 0
 13984  0025D6  BF76               	btfsc	(___ftadd@f1+2)& (0+255),7,b
 13985                           
 13986                           ; BSR set to: 0
 13987  0025D8  8F7D               	bsf	___ftadd@sign& (0+255),7,b
 13988                           
 13989                           ; BSR set to: 0
 13990                           
 13991                           ; BSR set to: 0
 13992  0025DA  BF79               	btfsc	(___ftadd@f2+2)& (0+255),7,b
 13993                           
 13994                           ; BSR set to: 0
 13995  0025DC  8D7D               	bsf	___ftadd@sign& (0+255),6,b
 13996                           
 13997                           ; BSR set to: 0
 13998  0025DE  8F75               	bsf	(___ftadd@f1+1)& (0+255),7,b
 13999                           
 14000                           ; BSR set to: 0
 14001  0025E0  0EFF               	movlw	255
 14002  0025E2  1774               	andwf	___ftadd@f1& (0+255),f,b
 14003  0025E4  0EFF               	movlw	255
 14004  0025E6  1775               	andwf	(___ftadd@f1+1)& (0+255),f,b
 14005  0025E8  0E00               	movlw	0
 14006  0025EA  1776               	andwf	(___ftadd@f1+2)& (0+255),f,b
 14007  0025EC  8F78               	bsf	(___ftadd@f2+1)& (0+255),7,b
 14008                           
 14009                           ; BSR set to: 0
 14010  0025EE  0EFF               	movlw	255
 14011  0025F0  1777               	andwf	___ftadd@f2& (0+255),f,b
 14012  0025F2  0EFF               	movlw	255
 14013  0025F4  1778               	andwf	(___ftadd@f2+1)& (0+255),f,b
 14014  0025F6  0E00               	movlw	0
 14015  0025F8  1779               	andwf	(___ftadd@f2+2)& (0+255),f,b
 14016                           
 14017                           ; BSR set to: 0
 14018  0025FA  517E               	movf	___ftadd@exp2& (0+255),w,b
 14019  0025FC  5D7F               	subwf	___ftadd@exp1& (0+255),w,b
 14020  0025FE  B0D8               	btfsc	status,0,c
 14021  002600  D01B               	goto	l2724
 14022  002602                     u6420:
 14023                           
 14024                           ; BSR set to: 0
 14025                           
 14026                           ; BSR set to: 0
 14027  002602  90D8               	bcf	status,0,c
 14028  002604  3777               	rlcf	___ftadd@f2& (0+255),f,b
 14029  002606  3778               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 14030  002608  3779               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 14031  00260A  077E               	decf	___ftadd@exp2& (0+255),f,b
 14032                           
 14033                           ; BSR set to: 0
 14034  00260C  517F               	movf	___ftadd@exp1& (0+255),w,b
 14035  00260E  197E               	xorwf	___ftadd@exp2& (0+255),w,b
 14036  002610  B4D8               	btfsc	status,2,c
 14037  002612  D00D               	goto	l2729
 14038                           
 14039                           ; BSR set to: 0
 14040  002614  077D               	decf	___ftadd@sign& (0+255),f,b
 14041  002616  C07D  F07A         	movff	___ftadd@sign,??___ftadd
 14042  00261A  0E07               	movlw	7
 14043  00261C  177A               	andwf	??___ftadd& (0+255),f,b
 14044  00261E  B4D8               	btfsc	status,2,c
 14045  002620  D006               	goto	l2729
 14046  002622  D7EF               	goto	u6420
 14047  002624                     
 14048                           ; BSR set to: 0
 14049                           
 14050                           ; BSR set to: 0
 14051  002624  90D8               	bcf	status,0,c
 14052  002626  3376               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 14053  002628  3375               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 14054  00262A  3374               	rrcf	___ftadd@f1& (0+255),f,b
 14055  00262C  2B7F               	incf	___ftadd@exp1& (0+255),f,b
 14056  00262E                     l2729:
 14057                           
 14058                           ; BSR set to: 0
 14059                           
 14060                           ; BSR set to: 0
 14061  00262E  517E               	movf	___ftadd@exp2& (0+255),w,b
 14062  002630  197F               	xorwf	___ftadd@exp1& (0+255),w,b
 14063  002632  B4D8               	btfsc	status,2,c
 14064  002634  D01F               	goto	u6490
 14065  002636  D7F6               	goto	l2730
 14066  002638                     l2724:
 14067                           
 14068                           ; BSR set to: 0
 14069                           
 14070                           ; BSR set to: 0
 14071  002638  517F               	movf	___ftadd@exp1& (0+255),w,b
 14072  00263A  5D7E               	subwf	___ftadd@exp2& (0+255),w,b
 14073  00263C  B0D8               	btfsc	status,0,c
 14074  00263E  D01A               	goto	u6490
 14075  002640                     u6460:
 14076                           
 14077                           ; BSR set to: 0
 14078                           
 14079                           ; BSR set to: 0
 14080  002640  90D8               	bcf	status,0,c
 14081  002642  3774               	rlcf	___ftadd@f1& (0+255),f,b
 14082  002644  3775               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 14083  002646  3776               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 14084  002648  077F               	decf	___ftadd@exp1& (0+255),f,b
 14085                           
 14086                           ; BSR set to: 0
 14087  00264A  517F               	movf	___ftadd@exp1& (0+255),w,b
 14088  00264C  197E               	xorwf	___ftadd@exp2& (0+255),w,b
 14089  00264E  B4D8               	btfsc	status,2,c
 14090  002650  D00D               	goto	l2738
 14091                           
 14092                           ; BSR set to: 0
 14093  002652  077D               	decf	___ftadd@sign& (0+255),f,b
 14094  002654  C07D  F07A         	movff	___ftadd@sign,??___ftadd
 14095  002658  0E07               	movlw	7
 14096  00265A  177A               	andwf	??___ftadd& (0+255),f,b
 14097  00265C  B4D8               	btfsc	status,2,c
 14098  00265E  D006               	goto	l2738
 14099  002660  D7EF               	goto	u6460
 14100  002662                     
 14101                           ; BSR set to: 0
 14102                           
 14103                           ; BSR set to: 0
 14104  002662  90D8               	bcf	status,0,c
 14105  002664  3379               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 14106  002666  3378               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 14107  002668  3377               	rrcf	___ftadd@f2& (0+255),f,b
 14108  00266A  2B7E               	incf	___ftadd@exp2& (0+255),f,b
 14109  00266C                     l2738:
 14110                           
 14111                           ; BSR set to: 0
 14112                           
 14113                           ; BSR set to: 0
 14114  00266C  517E               	movf	___ftadd@exp2& (0+255),w,b
 14115  00266E  197F               	xorwf	___ftadd@exp1& (0+255),w,b
 14116  002670  A4D8               	btfss	status,2,c
 14117  002672  D7F7               	goto	l2739
 14118  002674                     u6490:
 14119                           
 14120                           ; BSR set to: 0
 14121                           
 14122                           ; BSR set to: 0
 14123                           
 14124                           ; BSR set to: 0
 14125  002674  AF7D               	btfss	___ftadd@sign& (0+255),7,b
 14126  002676  D00C               	goto	l2741
 14127                           
 14128                           ; BSR set to: 0
 14129  002678  0EFF               	movlw	255
 14130  00267A  1B74               	xorwf	___ftadd@f1& (0+255),f,b
 14131  00267C  0EFF               	movlw	255
 14132  00267E  1B75               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 14133  002680  0EFF               	movlw	255
 14134  002682  1B76               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 14135  002684  0E01               	movlw	1
 14136  002686  2774               	addwf	___ftadd@f1& (0+255),f,b
 14137  002688  0E00               	movlw	0
 14138  00268A  2375               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 14139  00268C  0E00               	movlw	0
 14140  00268E  2376               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 14141  002690                     l2741:
 14142                           
 14143                           ; BSR set to: 0
 14144  002690  AD7D               	btfss	___ftadd@sign& (0+255),6,b
 14145  002692  D00C               	goto	l2742
 14146                           
 14147                           ; BSR set to: 0
 14148  002694  0EFF               	movlw	255
 14149  002696  1B77               	xorwf	___ftadd@f2& (0+255),f,b
 14150  002698  0EFF               	movlw	255
 14151  00269A  1B78               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 14152  00269C  0EFF               	movlw	255
 14153  00269E  1B79               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 14154  0026A0  0E01               	movlw	1
 14155  0026A2  2777               	addwf	___ftadd@f2& (0+255),f,b
 14156  0026A4  0E00               	movlw	0
 14157  0026A6  2378               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 14158  0026A8  0E00               	movlw	0
 14159  0026AA  2379               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 14160  0026AC                     l2742:
 14161                           
 14162                           ; BSR set to: 0
 14163                           
 14164                           ; BSR set to: 0
 14165  0026AC  0E00               	movlw	0
 14166  0026AE  6F7D               	movwf	___ftadd@sign& (0+255),b
 14167                           
 14168                           ; BSR set to: 0
 14169  0026B0  5174               	movf	___ftadd@f1& (0+255),w,b
 14170  0026B2  2777               	addwf	___ftadd@f2& (0+255),f,b
 14171  0026B4  5175               	movf	(___ftadd@f1+1)& (0+255),w,b
 14172  0026B6  2378               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 14173  0026B8  5176               	movf	(___ftadd@f1+2)& (0+255),w,b
 14174  0026BA  2379               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 14175                           
 14176                           ; BSR set to: 0
 14177  0026BC  AF79               	btfss	(___ftadd@f2+2)& (0+255),7,b
 14178  0026BE  D00E               	goto	l2743
 14179                           
 14180                           ; BSR set to: 0
 14181  0026C0  0EFF               	movlw	255
 14182  0026C2  1B77               	xorwf	___ftadd@f2& (0+255),f,b
 14183  0026C4  0EFF               	movlw	255
 14184  0026C6  1B78               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 14185  0026C8  0EFF               	movlw	255
 14186  0026CA  1B79               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 14187  0026CC  0E01               	movlw	1
 14188  0026CE  2777               	addwf	___ftadd@f2& (0+255),f,b
 14189  0026D0  0E00               	movlw	0
 14190  0026D2  2378               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 14191  0026D4  0E00               	movlw	0
 14192  0026D6  2379               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 14193                           
 14194                           ; BSR set to: 0
 14195  0026D8  0E01               	movlw	1
 14196  0026DA  6F7D               	movwf	___ftadd@sign& (0+255),b
 14197  0026DC                     l2743:
 14198                           
 14199                           ; BSR set to: 0
 14200                           
 14201                           ; BSR set to: 0
 14202  0026DC  C077  F060         	movff	___ftadd@f2,___ftpack@arg
 14203  0026E0  C078  F061         	movff	___ftadd@f2+1,___ftpack@arg+1
 14204  0026E4  C079  F062         	movff	___ftadd@f2+2,___ftpack@arg+2
 14205  0026E8  C07F  F063         	movff	___ftadd@exp1,___ftpack@exp
 14206  0026EC  C07D  F064         	movff	___ftadd@sign,___ftpack@sign
 14207  0026F0  ECA5  F01E         	call	___ftpack	;wreg free
 14208  0026F4  C060  F074         	movff	?___ftpack,?___ftadd
 14209  0026F8  C061  F075         	movff	?___ftpack+1,?___ftadd+1
 14210  0026FC  C062  F076         	movff	?___ftpack+2,?___ftadd+2
 14211  002700  0012               	return	
 14212  002702                     __end_of___ftadd:
 14213                           	opt stack 0
 14214                           tblptru	equ	0xFF8
 14215                           tblptrh	equ	0xFF7
 14216                           tblptrl	equ	0xFF6
 14217                           tablat	equ	0xFF5
 14218                           prodh	equ	0xFF4
 14219                           prodl	equ	0xFF3
 14220                           intcon	equ	0xFF2
 14221                           postinc0	equ	0xFEE
 14222                           wreg	equ	0xFE8
 14223                           indf1	equ	0xFE7
 14224                           postdec1	equ	0xFE5
 14225                           fsr1h	equ	0xFE2
 14226                           fsr1l	equ	0xFE1
 14227                           indf2	equ	0xFDF
 14228                           postinc2	equ	0xFDE
 14229                           postdec2	equ	0xFDD
 14230                           plusw2	equ	0xFDB
 14231                           fsr2h	equ	0xFDA
 14232                           fsr2l	equ	0xFD9
 14233                           status	equ	0xFD8
 14234                           
 14235 ;; *************** function ___ftpack *****************
 14236 ;; Defined at:
 14237 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\float.c"
 14238 ;; Parameters:    Size  Location     Type
 14239 ;;  arg             3    0[BANK0 ] unsigned um
 14240 ;;  exp             1    3[BANK0 ] unsigned char 
 14241 ;;  sign            1    4[BANK0 ] unsigned char 
 14242 ;; Auto vars:     Size  Location     Type
 14243 ;;		None
 14244 ;; Return value:  Size  Location     Type
 14245 ;;                  3    0[BANK0 ] float 
 14246 ;; Registers used:
 14247 ;;		wreg, status,2, status,0
 14248 ;; Tracked objects:
 14249 ;;		On entry : 0/0
 14250 ;;		On exit  : 0/0
 14251 ;;		Unchanged: 0/0
 14252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14253 ;;      Params:         0       5       0       0       0       0       0       0       0
 14254 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14255 ;;      Temps:          0       3       0       0       0       0       0       0       0
 14256 ;;      Totals:         0       8       0       0       0       0       0       0       0
 14257 ;;Total ram usage:        8 bytes
 14258 ;; Hardware stack levels used:    1
 14259 ;; Hardware stack levels required when called:   10
 14260 ;; This function calls:
 14261 ;;		Nothing
 14262 ;; This function is called by:
 14263 ;;		___awtoft
 14264 ;;		___ftadd
 14265 ;;		___ftdiv
 14266 ;;		___ftmul
 14267 ;;		___lltoft
 14268 ;; This function uses a non-reentrant model
 14269 ;;
 14270                           
 14271                           	psect	text45
 14272  003D4A                     __ptext45:
 14273                           	opt stack 0
 14274  003D4A                     ___ftpack:
 14275                           	opt stack 17
 14276                           
 14277                           ;incstack = 0
 14278  003D4A  0100               	movlb	0	; () banked
 14279  003D4C  5163               	movf	___ftpack@exp& (0+255),w,b
 14280  003D4E  B4D8               	btfsc	status,2,c
 14281  003D50  D005               	goto	u6020
 14282                           
 14283                           ; BSR set to: 0
 14284  003D52  5160               	movf	___ftpack@arg& (0+255),w,b
 14285  003D54  1161               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 14286  003D56  1162               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 14287  003D58  A4D8               	btfss	status,2,c
 14288  003D5A  D00C               	goto	l2684
 14289  003D5C                     u6020:
 14290                           
 14291                           ; BSR set to: 0
 14292                           
 14293                           ; BSR set to: 0
 14294  003D5C  0E00               	movlw	0
 14295  003D5E  6F60               	movwf	?___ftpack& (0+255),b
 14296  003D60  0E00               	movlw	0
 14297  003D62  6F61               	movwf	(?___ftpack+1)& (0+255),b
 14298  003D64  0E00               	movlw	0
 14299  003D66  6F62               	movwf	(?___ftpack+2)& (0+255),b
 14300                           
 14301                           ; BSR set to: 0
 14302  003D68  0012               	return	
 14303  003D6A                     
 14304                           ; BSR set to: 0
 14305                           
 14306                           ; BSR set to: 0
 14307  003D6A  2B63               	incf	___ftpack@exp& (0+255),f,b
 14308  003D6C  90D8               	bcf	status,0,c
 14309  003D6E  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 14310  003D70  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 14311  003D72  3360               	rrcf	___ftpack@arg& (0+255),f,b
 14312  003D74                     l2684:
 14313                           
 14314                           ; BSR set to: 0
 14315                           
 14316                           ; BSR set to: 0
 14317  003D74  0E00               	movlw	0
 14318  003D76  1560               	andwf	___ftpack@arg& (0+255),w,b
 14319  003D78  6F65               	movwf	??___ftpack& (0+255),b
 14320  003D7A  0E00               	movlw	0
 14321  003D7C  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
 14322  003D7E  6F66               	movwf	(??___ftpack+1)& (0+255),b
 14323  003D80  0EFE               	movlw	254
 14324  003D82  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
 14325  003D84  6F67               	movwf	(??___ftpack+2)& (0+255),b
 14326  003D86  5165               	movf	??___ftpack& (0+255),w,b
 14327  003D88  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
 14328  003D8A  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
 14329  003D8C  B4D8               	btfsc	status,2,c
 14330  003D8E  D00C               	goto	l2687
 14331  003D90  D7EC               	goto	l2685
 14332  003D92                     
 14333                           ; BSR set to: 0
 14334                           
 14335                           ; BSR set to: 0
 14336  003D92  2B63               	incf	___ftpack@exp& (0+255),f,b
 14337                           
 14338                           ; BSR set to: 0
 14339  003D94  0E01               	movlw	1
 14340  003D96  2760               	addwf	___ftpack@arg& (0+255),f,b
 14341  003D98  0E00               	movlw	0
 14342  003D9A  2361               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 14343  003D9C  0E00               	movlw	0
 14344  003D9E  2362               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 14345  003DA0  90D8               	bcf	status,0,c
 14346  003DA2  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 14347  003DA4  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 14348  003DA6  3360               	rrcf	___ftpack@arg& (0+255),f,b
 14349  003DA8                     l2687:
 14350                           
 14351                           ; BSR set to: 0
 14352                           
 14353                           ; BSR set to: 0
 14354  003DA8  0E00               	movlw	0
 14355  003DAA  1560               	andwf	___ftpack@arg& (0+255),w,b
 14356  003DAC  6F65               	movwf	??___ftpack& (0+255),b
 14357  003DAE  0E00               	movlw	0
 14358  003DB0  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
 14359  003DB2  6F66               	movwf	(??___ftpack+1)& (0+255),b
 14360  003DB4  0EFF               	movlw	255
 14361  003DB6  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
 14362  003DB8  6F67               	movwf	(??___ftpack+2)& (0+255),b
 14363  003DBA  5165               	movf	??___ftpack& (0+255),w,b
 14364  003DBC  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
 14365  003DBE  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
 14366  003DC0  B4D8               	btfsc	status,2,c
 14367  003DC2  D006               	goto	l2690
 14368  003DC4  D7E6               	goto	l2688
 14369  003DC6                     
 14370                           ; BSR set to: 0
 14371                           
 14372                           ; BSR set to: 0
 14373  003DC6  0763               	decf	___ftpack@exp& (0+255),f,b
 14374  003DC8  90D8               	bcf	status,0,c
 14375  003DCA  3760               	rlcf	___ftpack@arg& (0+255),f,b
 14376  003DCC  3761               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 14377  003DCE  3762               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 14378  003DD0                     l2690:
 14379                           
 14380                           ; BSR set to: 0
 14381                           
 14382                           ; BSR set to: 0
 14383  003DD0  BF61               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 14384  003DD2  D003               	goto	u6060
 14385                           
 14386                           ; BSR set to: 0
 14387  003DD4  0E02               	movlw	2
 14388  003DD6  6163               	cpfslt	___ftpack@exp& (0+255),b
 14389  003DD8  D7F6               	goto	l2691
 14390  003DDA                     u6060:
 14391                           
 14392                           ; BSR set to: 0
 14393                           
 14394                           ; BSR set to: 0
 14395  003DDA  A163               	btfss	___ftpack@exp& (0+255),0,b
 14396                           
 14397                           ; BSR set to: 0
 14398  003DDC  9F61               	bcf	(___ftpack@arg+1)& (0+255),7,b
 14399                           
 14400                           ; BSR set to: 0
 14401                           
 14402                           ; BSR set to: 0
 14403  003DDE  90D8               	bcf	status,0,c
 14404  003DE0  3363               	rrcf	___ftpack@exp& (0+255),f,b
 14405  003DE2  5163               	movf	___ftpack@exp& (0+255),w,b
 14406  003DE4  1362               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 14407                           
 14408                           ; BSR set to: 0
 14409  003DE6  5164               	movf	___ftpack@sign& (0+255),w,b
 14410  003DE8  A4D8               	btfss	status,2,c
 14411                           
 14412                           ; BSR set to: 0
 14413  003DEA  8F62               	bsf	(___ftpack@arg+2)& (0+255),7,b
 14414                           
 14415                           ; BSR set to: 0
 14416                           
 14417                           ; BSR set to: 0
 14418  003DEC  C060  F060         	movff	___ftpack@arg,?___ftpack
 14419  003DF0  C061  F061         	movff	___ftpack@arg+1,?___ftpack+1
 14420  003DF4  C062  F062         	movff	___ftpack@arg+2,?___ftpack+2
 14421  003DF8  0012               	return	
 14422  003DFA                     __end_of___ftpack:
 14423                           	opt stack 0
 14424                           tblptru	equ	0xFF8
 14425                           tblptrh	equ	0xFF7
 14426                           tblptrl	equ	0xFF6
 14427                           tablat	equ	0xFF5
 14428                           prodh	equ	0xFF4
 14429                           prodl	equ	0xFF3
 14430                           intcon	equ	0xFF2
 14431                           postinc0	equ	0xFEE
 14432                           wreg	equ	0xFE8
 14433                           indf1	equ	0xFE7
 14434                           postdec1	equ	0xFE5
 14435                           fsr1h	equ	0xFE2
 14436                           fsr1l	equ	0xFE1
 14437                           indf2	equ	0xFDF
 14438                           postinc2	equ	0xFDE
 14439                           postdec2	equ	0xFDD
 14440                           plusw2	equ	0xFDB
 14441                           fsr2h	equ	0xFDA
 14442                           fsr2l	equ	0xFD9
 14443                           status	equ	0xFD8
 14444                           
 14445 ;; *************** function ___ftneg *****************
 14446 ;; Defined at:
 14447 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftneg.c"
 14448 ;; Parameters:    Size  Location     Type
 14449 ;;  f1              3    0[BANK0 ] float 
 14450 ;; Auto vars:     Size  Location     Type
 14451 ;;		None
 14452 ;; Return value:  Size  Location     Type
 14453 ;;                  3    0[BANK0 ] float 
 14454 ;; Registers used:
 14455 ;;		wreg, status,2, status,0
 14456 ;; Tracked objects:
 14457 ;;		On entry : 0/0
 14458 ;;		On exit  : 0/0
 14459 ;;		Unchanged: 0/0
 14460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14461 ;;      Params:         0       3       0       0       0       0       0       0       0
 14462 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14463 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14464 ;;      Totals:         0       3       0       0       0       0       0       0       0
 14465 ;;Total ram usage:        3 bytes
 14466 ;; Hardware stack levels used:    1
 14467 ;; Hardware stack levels required when called:   10
 14468 ;; This function calls:
 14469 ;;		Nothing
 14470 ;; This function is called by:
 14471 ;;		_sprintf
 14472 ;; This function uses a non-reentrant model
 14473 ;;
 14474                           
 14475                           	psect	text46
 14476  005082                     __ptext46:
 14477                           	opt stack 0
 14478  005082                     ___ftneg:
 14479                           	opt stack 19
 14480                           
 14481                           ; BSR set to: 0
 14482                           ;incstack = 0
 14483  005082  0100               	movlb	0	; () banked
 14484  005084  5160               	movf	___ftneg@f1& (0+255),w,b
 14485  005086  1161               	iorwf	(___ftneg@f1+1)& (0+255),w,b
 14486  005088  1162               	iorwf	(___ftneg@f1+2)& (0+255),w,b
 14487  00508A  B4D8               	btfsc	status,2,c
 14488  00508C  D006               	goto	l2791
 14489                           
 14490                           ; BSR set to: 0
 14491  00508E  0E00               	movlw	0
 14492  005090  1B60               	xorwf	___ftneg@f1& (0+255),f,b
 14493  005092  0E00               	movlw	0
 14494  005094  1B61               	xorwf	(___ftneg@f1+1)& (0+255),f,b
 14495  005096  0E80               	movlw	128
 14496  005098  1B62               	xorwf	(___ftneg@f1+2)& (0+255),f,b
 14497  00509A                     l2791:
 14498                           
 14499                           ; BSR set to: 0
 14500  00509A  C060  F060         	movff	___ftneg@f1,?___ftneg
 14501  00509E  C061  F061         	movff	___ftneg@f1+1,?___ftneg+1
 14502  0050A2  C062  F062         	movff	___ftneg@f1+2,?___ftneg+2
 14503                           
 14504                           ; BSR set to: 0
 14505  0050A6  0012               	return		;funcret
 14506  0050A8                     __end_of___ftneg:
 14507                           	opt stack 0
 14508                           tblptru	equ	0xFF8
 14509                           tblptrh	equ	0xFF7
 14510                           tblptrl	equ	0xFF6
 14511                           tablat	equ	0xFF5
 14512                           prodh	equ	0xFF4
 14513                           prodl	equ	0xFF3
 14514                           intcon	equ	0xFF2
 14515                           postinc0	equ	0xFEE
 14516                           wreg	equ	0xFE8
 14517                           indf1	equ	0xFE7
 14518                           postdec1	equ	0xFE5
 14519                           fsr1h	equ	0xFE2
 14520                           fsr1l	equ	0xFE1
 14521                           indf2	equ	0xFDF
 14522                           postinc2	equ	0xFDE
 14523                           postdec2	equ	0xFDD
 14524                           plusw2	equ	0xFDB
 14525                           fsr2h	equ	0xFDA
 14526                           fsr2l	equ	0xFD9
 14527                           status	equ	0xFD8
 14528                           
 14529 ;; *************** function ___ftge *****************
 14530 ;; Defined at:
 14531 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftge.c"
 14532 ;; Parameters:    Size  Location     Type
 14533 ;;  ff1             3    0[BANK0 ] float 
 14534 ;;  ff2             3    3[BANK0 ] float 
 14535 ;; Auto vars:     Size  Location     Type
 14536 ;;		None
 14537 ;; Return value:  Size  Location     Type
 14538 ;;		None               void
 14539 ;; Registers used:
 14540 ;;		wreg, status,2, status,0
 14541 ;; Tracked objects:
 14542 ;;		On entry : 0/0
 14543 ;;		On exit  : 0/0
 14544 ;;		Unchanged: 0/0
 14545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14546 ;;      Params:         0       6       0       0       0       0       0       0       0
 14547 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14548 ;;      Temps:          0       3       0       0       0       0       0       0       0
 14549 ;;      Totals:         0       9       0       0       0       0       0       0       0
 14550 ;;Total ram usage:        9 bytes
 14551 ;; Hardware stack levels used:    1
 14552 ;; Hardware stack levels required when called:   10
 14553 ;; This function calls:
 14554 ;;		Nothing
 14555 ;; This function is called by:
 14556 ;;		_sprintf
 14557 ;; This function uses a non-reentrant model
 14558 ;;
 14559                           
 14560                           	psect	text47
 14561  004398                     __ptext47:
 14562                           	opt stack 0
 14563  004398                     ___ftge:
 14564                           	opt stack 19
 14565                           
 14566                           ; BSR set to: 0
 14567                           ;incstack = 0
 14568  004398  0100               	movlb	0	; () banked
 14569  00439A  AF62               	btfss	(___ftge@ff1+2)& (0+255),7,b
 14570  00439C  D016               	goto	l2773
 14571                           
 14572                           ; BSR set to: 0
 14573  00439E  C060  F066         	movff	___ftge@ff1,??___ftge
 14574  0043A2  C061  F067         	movff	___ftge@ff1+1,??___ftge+1
 14575  0043A6  C062  F068         	movff	___ftge@ff1+2,??___ftge+2
 14576  0043AA  1F66               	comf	??___ftge& (0+255),f,b
 14577  0043AC  1F67               	comf	(??___ftge+1)& (0+255),f,b
 14578  0043AE  1F68               	comf	(??___ftge+2)& (0+255),f,b
 14579  0043B0  2B66               	incf	??___ftge& (0+255),f,b
 14580  0043B2  0E00               	movlw	0
 14581  0043B4  2367               	addwfc	(??___ftge+1)& (0+255),f,b
 14582  0043B6  2368               	addwfc	(??___ftge+2)& (0+255),f,b
 14583  0043B8  0E00               	movlw	0
 14584  0043BA  2566               	addwf	??___ftge& (0+255),w,b
 14585  0043BC  6F60               	movwf	___ftge@ff1& (0+255),b
 14586  0043BE  0E00               	movlw	0
 14587  0043C0  2167               	addwfc	(??___ftge+1)& (0+255),w,b
 14588  0043C2  6F61               	movwf	(___ftge@ff1+1)& (0+255),b
 14589  0043C4  0E80               	movlw	128
 14590  0043C6  2168               	addwfc	(??___ftge+2)& (0+255),w,b
 14591  0043C8  6F62               	movwf	(___ftge@ff1+2)& (0+255),b
 14592  0043CA                     l2773:
 14593                           
 14594                           ; BSR set to: 0
 14595                           
 14596                           ; BSR set to: 0
 14597  0043CA  AF65               	btfss	(___ftge@ff2+2)& (0+255),7,b
 14598  0043CC  D016               	goto	l2774
 14599                           
 14600                           ; BSR set to: 0
 14601  0043CE  C063  F066         	movff	___ftge@ff2,??___ftge
 14602  0043D2  C064  F067         	movff	___ftge@ff2+1,??___ftge+1
 14603  0043D6  C065  F068         	movff	___ftge@ff2+2,??___ftge+2
 14604  0043DA  1F66               	comf	??___ftge& (0+255),f,b
 14605  0043DC  1F67               	comf	(??___ftge+1)& (0+255),f,b
 14606  0043DE  1F68               	comf	(??___ftge+2)& (0+255),f,b
 14607  0043E0  2B66               	incf	??___ftge& (0+255),f,b
 14608  0043E2  0E00               	movlw	0
 14609  0043E4  2367               	addwfc	(??___ftge+1)& (0+255),f,b
 14610  0043E6  2368               	addwfc	(??___ftge+2)& (0+255),f,b
 14611  0043E8  0E00               	movlw	0
 14612  0043EA  2566               	addwf	??___ftge& (0+255),w,b
 14613  0043EC  6F63               	movwf	___ftge@ff2& (0+255),b
 14614  0043EE  0E00               	movlw	0
 14615  0043F0  2167               	addwfc	(??___ftge+1)& (0+255),w,b
 14616  0043F2  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
 14617  0043F4  0E80               	movlw	128
 14618  0043F6  2168               	addwfc	(??___ftge+2)& (0+255),w,b
 14619  0043F8  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
 14620  0043FA                     l2774:
 14621                           
 14622                           ; BSR set to: 0
 14623                           
 14624                           ; BSR set to: 0
 14625  0043FA  0E00               	movlw	0
 14626  0043FC  1B60               	xorwf	___ftge@ff1& (0+255),f,b
 14627  0043FE  0E00               	movlw	0
 14628  004400  1B61               	xorwf	(___ftge@ff1+1)& (0+255),f,b
 14629  004402  0E80               	movlw	128
 14630  004404  1B62               	xorwf	(___ftge@ff1+2)& (0+255),f,b
 14631                           
 14632                           ; BSR set to: 0
 14633  004406  0E00               	movlw	0
 14634  004408  1B63               	xorwf	___ftge@ff2& (0+255),f,b
 14635  00440A  0E00               	movlw	0
 14636  00440C  1B64               	xorwf	(___ftge@ff2+1)& (0+255),f,b
 14637  00440E  0E80               	movlw	128
 14638  004410  1B65               	xorwf	(___ftge@ff2+2)& (0+255),f,b
 14639  004412  5163               	movf	___ftge@ff2& (0+255),w,b
 14640  004414  5D60               	subwf	___ftge@ff1& (0+255),w,b
 14641  004416  5164               	movf	(___ftge@ff2+1)& (0+255),w,b
 14642  004418  5961               	subwfb	(___ftge@ff1+1)& (0+255),w,b
 14643  00441A  5165               	movf	(___ftge@ff2+2)& (0+255),w,b
 14644  00441C  5962               	subwfb	(___ftge@ff1+2)& (0+255),w,b
 14645  00441E  B0D8               	btfsc	status,0,c
 14646  004420  D002               	goto	l7001
 14647                           
 14648                           ; BSR set to: 0
 14649  004422  90D8               	bcf	status,0,c
 14650  004424  0012               	return	
 14651  004426                     l7001:
 14652                           
 14653                           ; BSR set to: 0
 14654                           
 14655                           ; BSR set to: 0
 14656  004426  80D8               	bsf	status,0,c
 14657                           
 14658                           ; BSR set to: 0
 14659  004428  0012               	return	
 14660  00442A                     __end_of___ftge:
 14661                           	opt stack 0
 14662                           tblptru	equ	0xFF8
 14663                           tblptrh	equ	0xFF7
 14664                           tblptrl	equ	0xFF6
 14665                           tablat	equ	0xFF5
 14666                           prodh	equ	0xFF4
 14667                           prodl	equ	0xFF3
 14668                           intcon	equ	0xFF2
 14669                           postinc0	equ	0xFEE
 14670                           wreg	equ	0xFE8
 14671                           indf1	equ	0xFE7
 14672                           postdec1	equ	0xFE5
 14673                           fsr1h	equ	0xFE2
 14674                           fsr1l	equ	0xFE1
 14675                           indf2	equ	0xFDF
 14676                           postinc2	equ	0xFDE
 14677                           postdec2	equ	0xFDD
 14678                           plusw2	equ	0xFDB
 14679                           fsr2h	equ	0xFDA
 14680                           fsr2l	equ	0xFD9
 14681                           status	equ	0xFD8
 14682                           
 14683 ;; *************** function _enviaComando *****************
 14684 ;; Defined at:
 14685 ;;		line 250 in file "LoRaWanCore.c"
 14686 ;; Parameters:    Size  Location     Type
 14687 ;;  cmd             2   28[BANK0 ] PTR const unsigned char 
 14688 ;;		 -> TxLoRaWan@comando(200), DataRate@comando(200), SetBandWidth@comando(200), SetSpreadingFactor@comando(200), 
 14689 ;;		 -> MacSave@comando(200), AdaptiveDataRate@comando(200), SetChannelLoRaWan@comando(200), MAC_JOIN_OTAA(10), 
 14690 ;;		 -> SYS_RESET(6), 
 14691 ;;  tipoComando     1   30[BANK0 ] unsigned char 
 14692 ;; Auto vars:     Size  Location     Type
 14693 ;;  i               2   35[BANK0 ] unsigned int 
 14694 ;;  i               2   33[BANK0 ] unsigned int 
 14695 ;;  i               2   37[BANK0 ] unsigned int 
 14696 ;; Return value:  Size  Location     Type
 14697 ;;                  1    wreg      unsigned char 
 14698 ;; Registers used:
 14699 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14700 ;; Tracked objects:
 14701 ;;		On entry : 0/0
 14702 ;;		On exit  : 0/0
 14703 ;;		Unchanged: 0/0
 14704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14705 ;;      Params:         0       3       0       0       0       0       0       0       0
 14706 ;;      Locals:         0       6       0       0       0       0       0       0       0
 14707 ;;      Temps:          0       2       0       0       0       0       0       0       0
 14708 ;;      Totals:         0      11       0       0       0       0       0       0       0
 14709 ;;Total ram usage:       11 bytes
 14710 ;; Hardware stack levels used:    1
 14711 ;; Hardware stack levels required when called:   12
 14712 ;; This function calls:
 14713 ;;		_initRecebeDados
 14714 ;;		_parseLoRaWan
 14715 ;;		_putch
 14716 ;;		_strlen
 14717 ;; This function is called by:
 14718 ;;		_ResetModuloLoRaWan
 14719 ;;		_JoinLoRaWan
 14720 ;;		_SetChannelLoRaWan
 14721 ;;		_AdaptiveDataRate
 14722 ;;		_MacSave
 14723 ;;		_SetSpreadingFactor
 14724 ;;		_SetBandWidth
 14725 ;;		_DataRate
 14726 ;;		_TxLoRaWan
 14727 ;; This function uses a non-reentrant model
 14728 ;;
 14729                           
 14730                           	psect	text48
 14731  003294                     __ptext48:
 14732                           	opt stack 0
 14733  003294                     _enviaComando:
 14734                           	opt stack 17
 14735                           
 14736                           ;LoRaWanCore.c: 252: initRecebeDados();
 14737                           
 14738                           ; BSR set to: 0
 14739                           ;incstack = 0
 14740  003294  ECAB  F028         	call	_initRecebeDados	;wreg free
 14741                           
 14742                           ;LoRaWanCore.c: 254: switch (tipoComando)
 14743  003298  D041               	goto	l2139
 14744  00329A                     
 14745                           ;LoRaWanCore.c: 257: {
 14746                           ;LoRaWanCore.c: 258: for (uint16_t i = 0; i < strlen(MAC); i++)
 14747  00329A  0E00               	movlw	0
 14748  00329C  0100               	movlb	0	; () banked
 14749  00329E  6F82               	movwf	(enviaComando@i+1)& (0+255),b
 14750  0032A0  0E00               	movlw	0
 14751  0032A2  6F81               	movwf	enviaComando@i& (0+255),b
 14752  0032A4  D00D               	goto	l2141
 14753  0032A6                     
 14754                           ; BSR set to: 0
 14755                           ;LoRaWanCore.c: 259: {
 14756                           ;LoRaWanCore.c: 260: putch((char)MAC[i]);
 14757                           
 14758                           ; BSR set to: 0
 14759  0032A6  0E62               	movlw	low _MAC
 14760  0032A8  2581               	addwf	enviaComando@i& (0+255),w,b
 14761  0032AA  6EF6               	movwf	tblptrl,c
 14762  0032AC  0E7E               	movlw	high _MAC
 14763  0032AE  2182               	addwfc	(enviaComando@i+1)& (0+255),w,b
 14764  0032B0  6EF7               	movwf	tblptrh,c
 14765  0032B2                     	if	0	;There are less than 3 active tblptr bytes
 14766  0032B2                     	endif
 14767  0032B2  0008               	tblrd		*
 14768  0032B4  50F5               	movf	tablat,w,c
 14769  0032B6  ECCF  F028         	call	_putch
 14770  0032BA  0100               	movlb	0	; () banked
 14771  0032BC  4B81               	infsnz	enviaComando@i& (0+255),f,b
 14772  0032BE  2B82               	incf	(enviaComando@i+1)& (0+255),f,b
 14773  0032C0                     l2141:
 14774                           
 14775                           ; BSR set to: 0
 14776                           
 14777                           ; BSR set to: 0
 14778  0032C0  0E62               	movlw	low _MAC
 14779  0032C2  6F60               	movwf	strlen@s& (0+255),b
 14780  0032C4  0E7E               	movlw	high _MAC
 14781  0032C6  6F61               	movwf	(strlen@s+1)& (0+255),b
 14782  0032C8  EC31  F025         	call	_strlen	;wreg free
 14783  0032CC  0100               	movlb	0	; () banked
 14784  0032CE  5160               	movf	?_strlen& (0+255),w,b
 14785  0032D0  5D81               	subwf	enviaComando@i& (0+255),w,b
 14786  0032D2  5161               	movf	(?_strlen+1)& (0+255),w,b
 14787  0032D4  5982               	subwfb	(enviaComando@i+1)& (0+255),w,b
 14788  0032D6  B0D8               	btfsc	status,0,c
 14789  0032D8  D029               	goto	l2144
 14790  0032DA  D7E5               	goto	l2142
 14791  0032DC                     
 14792                           ; BSR set to: 0
 14793                           ;LoRaWanCore.c: 264: {
 14794                           ;LoRaWanCore.c: 265: for (uint16_t i = 0; i < strlen(SYS); i++)
 14795                           
 14796                           ; BSR set to: 0
 14797  0032DC  0E00               	movlw	0
 14798  0032DE  6F84               	movwf	(enviaComando@i_4700+1)& (0+255),b
 14799  0032E0  0E00               	movlw	0
 14800  0032E2  6F83               	movwf	enviaComando@i_4700& (0+255),b
 14801  0032E4  D00D               	goto	l2146
 14802  0032E6                     
 14803                           ; BSR set to: 0
 14804                           ;LoRaWanCore.c: 266: {
 14805                           ;LoRaWanCore.c: 267: putch((char)SYS[i]);
 14806                           
 14807                           ; BSR set to: 0
 14808  0032E6  0E58               	movlw	low _SYS
 14809  0032E8  2583               	addwf	enviaComando@i_4700& (0+255),w,b
 14810  0032EA  6EF6               	movwf	tblptrl,c
 14811  0032EC  0E7E               	movlw	high _SYS
 14812  0032EE  2184               	addwfc	(enviaComando@i_4700+1)& (0+255),w,b
 14813  0032F0  6EF7               	movwf	tblptrh,c
 14814  0032F2                     	if	0	;There are less than 3 active tblptr bytes
 14815  0032F2                     	endif
 14816  0032F2  0008               	tblrd		*
 14817  0032F4  50F5               	movf	tablat,w,c
 14818  0032F6  ECCF  F028         	call	_putch
 14819  0032FA  0100               	movlb	0	; () banked
 14820  0032FC  4B83               	infsnz	enviaComando@i_4700& (0+255),f,b
 14821  0032FE  2B84               	incf	(enviaComando@i_4700+1)& (0+255),f,b
 14822  003300                     l2146:
 14823                           
 14824                           ; BSR set to: 0
 14825                           
 14826                           ; BSR set to: 0
 14827  003300  0E58               	movlw	low _SYS
 14828  003302  6F60               	movwf	strlen@s& (0+255),b
 14829  003304  0E7E               	movlw	high _SYS
 14830  003306  6F61               	movwf	(strlen@s+1)& (0+255),b
 14831  003308  EC31  F025         	call	_strlen	;wreg free
 14832  00330C  0100               	movlb	0	; () banked
 14833  00330E  5160               	movf	?_strlen& (0+255),w,b
 14834  003310  5D83               	subwf	enviaComando@i_4700& (0+255),w,b
 14835  003312  5161               	movf	(?_strlen+1)& (0+255),w,b
 14836  003314  5984               	subwfb	(enviaComando@i_4700+1)& (0+255),w,b
 14837  003316  B0D8               	btfsc	status,0,c
 14838  003318  D009               	goto	l2144
 14839  00331A  D7E5               	goto	l2147
 14840  00331C                     l2139:
 14841                           
 14842                           ; BSR set to: 0
 14843  00331C  0100               	movlb	0	; () banked
 14844  00331E  517E               	movf	enviaComando@tipoComando& (0+255),w,b
 14845                           
 14846                           ; Switch size 1, requested type "space"
 14847                           ; Number of cases is 2, Range of values is 0 to 1
 14848                           ; switch strategies available:
 14849                           ; Name         Instructions Cycles
 14850                           ; simple_byte            7     4 (average)
 14851                           ;	Chosen strategy is simple_byte
 14852  003320  0A00               	xorlw	0	; case 0
 14853  003322  B4D8               	btfsc	status,2,c
 14854  003324  D7BA               	goto	l2140
 14855  003326  0A01               	xorlw	1	; case 1
 14856  003328  B4D8               	btfsc	status,2,c
 14857  00332A  D7D8               	goto	l2145
 14858  00332C                     l2144:
 14859                           
 14860                           ; BSR set to: 0
 14861                           ;LoRaWanCore.c: 273: for (uint16_t i = 0; i < strlen(cmd); i++)
 14862                           
 14863                           ; BSR set to: 0
 14864  00332C  0E00               	movlw	0
 14865  00332E  6F86               	movwf	(enviaComando@i_4701+1)& (0+255),b
 14866  003330  0E00               	movlw	0
 14867  003332  6F85               	movwf	enviaComando@i_4701& (0+255),b
 14868  003334  D01B               	goto	l2149
 14869  003336                     
 14870                           ; BSR set to: 0
 14871                           ;LoRaWanCore.c: 274: {
 14872                           ;LoRaWanCore.c: 275: putch((char)cmd[i]);
 14873                           
 14874                           ; BSR set to: 0
 14875  003336  5185               	movf	enviaComando@i_4701& (0+255),w,b
 14876  003338  257C               	addwf	enviaComando@cmd& (0+255),w,b
 14877  00333A  6F7F               	movwf	??_enviaComando& (0+255),b
 14878  00333C  5186               	movf	(enviaComando@i_4701+1)& (0+255),w,b
 14879  00333E  217D               	addwfc	(enviaComando@cmd+1)& (0+255),w,b
 14880  003340  6F80               	movwf	(??_enviaComando+1)& (0+255),b
 14881  003342  C07F  FFF6         	movff	??_enviaComando,tblptrl
 14882  003346  C080  FFF7         	movff	??_enviaComando+1,tblptrh
 14883  00334A  6AF8               	clrf	tblptru,c
 14884  00334C  0E07               	movlw	(high __ramtop+-1)
 14885  00334E  64F7               	cpfsgt	tblptrh,c
 14886  003350  D003               	bra	u6997
 14887  003352  0008               	tblrd		*
 14888  003354  50F5               	movf	tablat,w,c
 14889  003356  D005               	bra	u6990
 14890  003358                     u6997:
 14891  003358  CFF6 FFE9          	movff	tblptrl,fsr0l
 14892  00335C  CFF7 FFEA          	movff	tblptrh,fsr0h
 14893  003360  50EF               	movf	indf0,w,c
 14894  003362                     u6990:
 14895  003362  ECCF  F028         	call	_putch
 14896  003366  0100               	movlb	0	; () banked
 14897  003368  4B85               	infsnz	enviaComando@i_4701& (0+255),f,b
 14898  00336A  2B86               	incf	(enviaComando@i_4701+1)& (0+255),f,b
 14899  00336C                     l2149:
 14900                           
 14901                           ; BSR set to: 0
 14902                           
 14903                           ; BSR set to: 0
 14904  00336C  C07C  F060         	movff	enviaComando@cmd,strlen@s
 14905  003370  C07D  F061         	movff	enviaComando@cmd+1,strlen@s+1
 14906  003374  EC31  F025         	call	_strlen	;wreg free
 14907  003378  0100               	movlb	0	; () banked
 14908  00337A  5160               	movf	?_strlen& (0+255),w,b
 14909  00337C  5D85               	subwf	enviaComando@i_4701& (0+255),w,b
 14910  00337E  5161               	movf	(?_strlen+1)& (0+255),w,b
 14911  003380  5986               	subwfb	(enviaComando@i_4701+1)& (0+255),w,b
 14912  003382  A0D8               	btfss	status,0,c
 14913  003384  D7D8               	goto	l2150
 14914                           
 14915                           ; BSR set to: 0
 14916                           ;LoRaWanCore.c: 276: }
 14917                           ;LoRaWanCore.c: 277: putch(0x0D);
 14918                           
 14919                           ; BSR set to: 0
 14920  003386  0E0D               	movlw	13
 14921  003388  ECCF  F028         	call	_putch
 14922                           
 14923                           ;LoRaWanCore.c: 278: putch(0x0A);
 14924  00338C  0E0A               	movlw	10
 14925  00338E  ECCF  F028         	call	_putch
 14926                           
 14927                           ;LoRaWanCore.c: 280: return parseLoRaWan();
 14928  003392  EC53  F01F         	call	_parseLoRaWan	;wreg free
 14929  003396  0012               	return	
 14930  003398                     __end_of_enviaComando:
 14931                           	opt stack 0
 14932                           tblptru	equ	0xFF8
 14933                           tblptrh	equ	0xFF7
 14934                           tblptrl	equ	0xFF6
 14935                           tablat	equ	0xFF5
 14936                           prodh	equ	0xFF4
 14937                           prodl	equ	0xFF3
 14938                           intcon	equ	0xFF2
 14939                           indf0	equ	0xFEF
 14940                           postinc0	equ	0xFEE
 14941                           fsr0h	equ	0xFEA
 14942                           fsr0l	equ	0xFE9
 14943                           wreg	equ	0xFE8
 14944                           indf1	equ	0xFE7
 14945                           postdec1	equ	0xFE5
 14946                           fsr1h	equ	0xFE2
 14947                           fsr1l	equ	0xFE1
 14948                           indf2	equ	0xFDF
 14949                           postinc2	equ	0xFDE
 14950                           postdec2	equ	0xFDD
 14951                           plusw2	equ	0xFDB
 14952                           fsr2h	equ	0xFDA
 14953                           fsr2l	equ	0xFD9
 14954                           status	equ	0xFD8
 14955                           
 14956 ;; *************** function _strlen *****************
 14957 ;; Defined at:
 14958 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strlen.c"
 14959 ;; Parameters:    Size  Location     Type
 14960 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 14961 ;;		 -> recebeByteLoRaWan@frameData(100), SYS(5), MAC(5), TxLoRaWan@comando(200), 
 14962 ;;		 -> DataRate@comando(200), SetBandWidth@comando(200), SetSpreadingFactor@comando(200), MacSave@comando(200), 
 14963 ;;		 -> AdaptiveDataRate@comando(200), SetChannelLoRaWan@comando(200), MAC_JOIN_OTAA(10), SYS_RESET(6), 
 14964 ;;		 -> STR_20(16), STR_19(7), STR_18(14), STR_17(8), 
 14965 ;;		 -> STR_16(8), STR_15(10), STR_14(17), STR_13(11), 
 14966 ;;		 -> STR_12(5), STR_11(32), STR_10(7), STR_9(11), 
 14967 ;;		 -> STR_8(11), STR_7(14), STR_6(3), 
 14968 ;; Auto vars:     Size  Location     Type
 14969 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
 14970 ;;		 -> recebeByteLoRaWan@frameData(100), SYS(5), MAC(5), TxLoRaWan@comando(200), 
 14971 ;;		 -> DataRate@comando(200), SetBandWidth@comando(200), SetSpreadingFactor@comando(200), MacSave@comando(200), 
 14972 ;;		 -> AdaptiveDataRate@comando(200), SetChannelLoRaWan@comando(200), MAC_JOIN_OTAA(10), SYS_RESET(6), 
 14973 ;;		 -> STR_20(16), STR_19(7), STR_18(14), STR_17(8), 
 14974 ;;		 -> STR_16(8), STR_15(10), STR_14(17), STR_13(11), 
 14975 ;;		 -> STR_12(5), STR_11(32), STR_10(7), STR_9(11), 
 14976 ;;		 -> STR_8(11), STR_7(14), STR_6(3), 
 14977 ;; Return value:  Size  Location     Type
 14978 ;;                  2    0[BANK0 ] unsigned int 
 14979 ;; Registers used:
 14980 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 14981 ;; Tracked objects:
 14982 ;;		On entry : 0/0
 14983 ;;		On exit  : 0/0
 14984 ;;		Unchanged: 0/0
 14985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14986 ;;      Params:         0       2       0       0       0       0       0       0       0
 14987 ;;      Locals:         0       2       0       0       0       0       0       0       0
 14988 ;;      Temps:          0       2       0       0       0       0       0       0       0
 14989 ;;      Totals:         0       6       0       0       0       0       0       0       0
 14990 ;;Total ram usage:        6 bytes
 14991 ;; Hardware stack levels used:    1
 14992 ;; Hardware stack levels required when called:   10
 14993 ;; This function calls:
 14994 ;;		Nothing
 14995 ;; This function is called by:
 14996 ;;		_enviaComando
 14997 ;; This function uses a non-reentrant model
 14998 ;;
 14999                           
 15000                           	psect	text49
 15001  004A62                     __ptext49:
 15002                           	opt stack 0
 15003  004A62                     _strlen:
 15004                           	opt stack 18
 15005                           
 15006                           ;incstack = 0
 15007  004A62  C060  F064         	movff	strlen@s,strlen@cp
 15008  004A66  C061  F065         	movff	strlen@s+1,strlen@cp+1
 15009  004A6A  D003               	goto	l3078
 15010  004A6C  0100               	movlb	0	; () banked
 15011  004A6E  4B64               	infsnz	strlen@cp& (0+255),f,b
 15012  004A70  2B65               	incf	(strlen@cp+1)& (0+255),f,b
 15013  004A72                     l3078:
 15014                           
 15015                           ; BSR set to: 0
 15016  004A72  C064  FFF6         	movff	strlen@cp,tblptrl
 15017  004A76  C065  FFF7         	movff	strlen@cp+1,tblptrh
 15018  004A7A  6AF8               	clrf	tblptru,c
 15019  004A7C  0E07               	movlw	(high __ramtop+-1)
 15020  004A7E  64F7               	cpfsgt	tblptrh,c
 15021  004A80  D003               	bra	u6307
 15022  004A82  0008               	tblrd		*
 15023  004A84  50F5               	movf	tablat,w,c
 15024  004A86  D005               	bra	u6300
 15025  004A88                     u6307:
 15026  004A88  CFF6 FFE9          	movff	tblptrl,fsr0l
 15027  004A8C  CFF7 FFEA          	movff	tblptrh,fsr0h
 15028  004A90  50EF               	movf	indf0,w,c
 15029  004A92                     u6300:
 15030  004A92  0900               	iorlw	0
 15031  004A94  A4D8               	btfss	status,2,c
 15032  004A96  D7EA               	goto	l3079
 15033  004A98  C060  F062         	movff	strlen@s,??_strlen
 15034  004A9C  C061  F063         	movff	strlen@s+1,??_strlen+1
 15035  004AA0  0100               	movlb	0	; () banked
 15036  004AA2  1F62               	comf	??_strlen& (0+255),f,b
 15037  004AA4  1F63               	comf	(??_strlen+1)& (0+255),f,b
 15038  004AA6  4B62               	infsnz	??_strlen& (0+255),f,b
 15039  004AA8  2B63               	incf	(??_strlen+1)& (0+255),f,b
 15040  004AAA  5164               	movf	strlen@cp& (0+255),w,b
 15041  004AAC  2562               	addwf	??_strlen& (0+255),w,b
 15042  004AAE  6F60               	movwf	?_strlen& (0+255),b
 15043  004AB0  5165               	movf	(strlen@cp+1)& (0+255),w,b
 15044  004AB2  2163               	addwfc	(??_strlen+1)& (0+255),w,b
 15045  004AB4  6F61               	movwf	(?_strlen+1)& (0+255),b
 15046  004AB6  0012               	return	
 15047  004AB8                     __end_of_strlen:
 15048                           	opt stack 0
 15049                           tblptru	equ	0xFF8
 15050                           tblptrh	equ	0xFF7
 15051                           tblptrl	equ	0xFF6
 15052                           tablat	equ	0xFF5
 15053                           prodh	equ	0xFF4
 15054                           prodl	equ	0xFF3
 15055                           intcon	equ	0xFF2
 15056                           indf0	equ	0xFEF
 15057                           postinc0	equ	0xFEE
 15058                           fsr0h	equ	0xFEA
 15059                           fsr0l	equ	0xFE9
 15060                           wreg	equ	0xFE8
 15061                           indf1	equ	0xFE7
 15062                           postdec1	equ	0xFE5
 15063                           fsr1h	equ	0xFE2
 15064                           fsr1l	equ	0xFE1
 15065                           indf2	equ	0xFDF
 15066                           postinc2	equ	0xFDE
 15067                           postdec2	equ	0xFDD
 15068                           plusw2	equ	0xFDB
 15069                           fsr2h	equ	0xFDA
 15070                           fsr2l	equ	0xFD9
 15071                           status	equ	0xFD8
 15072                           
 15073 ;; *************** function _putch *****************
 15074 ;; Defined at:
 15075 ;;		line 46 in file "uart/uart.c"
 15076 ;; Parameters:    Size  Location     Type
 15077 ;;  data            1    wreg     unsigned char 
 15078 ;; Auto vars:     Size  Location     Type
 15079 ;;  data            1    0[BANK0 ] unsigned char 
 15080 ;; Return value:  Size  Location     Type
 15081 ;;                  1    wreg      void 
 15082 ;; Registers used:
 15083 ;;		wreg
 15084 ;; Tracked objects:
 15085 ;;		On entry : 0/0
 15086 ;;		On exit  : 0/0
 15087 ;;		Unchanged: 0/0
 15088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15089 ;;      Params:         0       0       0       0       0       0       0       0       0
 15090 ;;      Locals:         0       1       0       0       0       0       0       0       0
 15091 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15092 ;;      Totals:         0       1       0       0       0       0       0       0       0
 15093 ;;Total ram usage:        1 bytes
 15094 ;; Hardware stack levels used:    1
 15095 ;; Hardware stack levels required when called:   10
 15096 ;; This function calls:
 15097 ;;		Nothing
 15098 ;; This function is called by:
 15099 ;;		_main
 15100 ;;		_enviaComando
 15101 ;;		_gen_send
 15102 ;;		_sendXBeePriv
 15103 ;; This function uses a non-reentrant model
 15104 ;;
 15105                           
 15106                           	psect	text50
 15107  00519E                     __ptext50:
 15108                           	opt stack 0
 15109  00519E                     _putch:
 15110                           	opt stack 20
 15111                           
 15112                           ; BSR set to: 0
 15113                           ;incstack = 0
 15114                           ;putch@data stored from wreg
 15115  00519E  0100               	movlb	0	; () banked
 15116  0051A0  6F60               	movwf	putch@data& (0+255),b
 15117  0051A2                     
 15118                           ;uart.c: 48: while (!TXIF);
 15119  0051A2  A89E               	btfss	3998,4,c	;volatile
 15120  0051A4  D7FE               	goto	l7623
 15121                           
 15122                           ;uart.c: 49: TXREG=data;
 15123  0051A6  C060  FFAD         	movff	putch@data,4013	;volatile
 15124  0051AA  0012               	return		;funcret
 15125  0051AC                     __end_of_putch:
 15126                           	opt stack 0
 15127                           tblptru	equ	0xFF8
 15128                           tblptrh	equ	0xFF7
 15129                           tblptrl	equ	0xFF6
 15130                           tablat	equ	0xFF5
 15131                           prodh	equ	0xFF4
 15132                           prodl	equ	0xFF3
 15133                           intcon	equ	0xFF2
 15134                           indf0	equ	0xFEF
 15135                           postinc0	equ	0xFEE
 15136                           fsr0h	equ	0xFEA
 15137                           fsr0l	equ	0xFE9
 15138                           wreg	equ	0xFE8
 15139                           indf1	equ	0xFE7
 15140                           postdec1	equ	0xFE5
 15141                           fsr1h	equ	0xFE2
 15142                           fsr1l	equ	0xFE1
 15143                           indf2	equ	0xFDF
 15144                           postinc2	equ	0xFDE
 15145                           postdec2	equ	0xFDD
 15146                           plusw2	equ	0xFDB
 15147                           fsr2h	equ	0xFDA
 15148                           fsr2l	equ	0xFD9
 15149                           status	equ	0xFD8
 15150                           
 15151 ;; *************** function _parseLoRaWan *****************
 15152 ;; Defined at:
 15153 ;;		line 283 in file "LoRaWanCore.c"
 15154 ;; Parameters:    Size  Location     Type
 15155 ;;		None
 15156 ;; Auto vars:     Size  Location     Type
 15157 ;;  previous        4   20[BANK0 ] unsigned long 
 15158 ;;  intervalMAX     2   24[BANK0 ] unsigned int 
 15159 ;;  timeout         1   27[BANK0 ] unsigned char 
 15160 ;;  status          1   26[BANK0 ] unsigned char 
 15161 ;; Return value:  Size  Location     Type
 15162 ;;                  1    wreg      unsigned char 
 15163 ;; Registers used:
 15164 ;;		wreg, status,2, status,0, cstack
 15165 ;; Tracked objects:
 15166 ;;		On entry : 0/0
 15167 ;;		On exit  : 0/0
 15168 ;;		Unchanged: 0/0
 15169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15170 ;;      Params:         0       0       0       0       0       0       0       0       0
 15171 ;;      Locals:         0       8       0       0       0       0       0       0       0
 15172 ;;      Temps:          0      12       0       0       0       0       0       0       0
 15173 ;;      Totals:         0      20       0       0       0       0       0       0       0
 15174 ;;Total ram usage:       20 bytes
 15175 ;; Hardware stack levels used:    1
 15176 ;; Hardware stack levels required when called:   11
 15177 ;; This function calls:
 15178 ;;		_millis
 15179 ;; This function is called by:
 15180 ;;		_JoinLoRaWan
 15181 ;;		_TxLoRaWan
 15182 ;;		_enviaComando
 15183 ;; This function uses a non-reentrant model
 15184 ;;
 15185                           
 15186                           	psect	text51
 15187  003EA6                     __ptext51:
 15188                           	opt stack 0
 15189  003EA6                     _parseLoRaWan:
 15190                           	opt stack 18
 15191                           
 15192                           ;LoRaWanCore.c: 285: uint8_t status=0xFF;
 15193                           
 15194                           ;incstack = 0
 15195  003EA6  0100               	movlb	0	; () banked
 15196  003EA8  697A               	setf	parseLoRaWan@status& (0+255),b
 15197                           
 15198                           ; BSR set to: 0
 15199                           ;LoRaWanCore.c: 286: uint16_t intervalMAX=60000;
 15200  003EAA  0EEA               	movlw	234
 15201  003EAC  6F79               	movwf	(parseLoRaWan@intervalMAX+1)& (0+255),b
 15202  003EAE  0E60               	movlw	96
 15203  003EB0  6F78               	movwf	parseLoRaWan@intervalMAX& (0+255),b
 15204                           
 15205                           ;LoRaWanCore.c: 287: bool timeout=0;
 15206  003EB2  0E00               	movlw	0
 15207  003EB4  6F7B               	movwf	parseLoRaWan@timeout& (0+255),b
 15208                           
 15209                           ; BSR set to: 0
 15210                           ;LoRaWanCore.c: 288: uint32_t previous=millis();
 15211  003EB6  EC54  F028         	call	_millis	;wreg free
 15212  003EBA  C060  F074         	movff	?_millis,parseLoRaWan@previous
 15213  003EBE  C061  F075         	movff	?_millis+1,parseLoRaWan@previous+1
 15214  003EC2  C062  F076         	movff	?_millis+2,parseLoRaWan@previous+2
 15215  003EC6  C063  F077         	movff	?_millis+3,parseLoRaWan@previous+3
 15216                           
 15217                           ;LoRaWanCore.c: 290: while ((!timeout) && (!novaMsgLoRaWan))
 15218  003ECA  D033               	goto	l2157
 15219  003ECC                     
 15220                           ;LoRaWanCore.c: 291: {
 15221                           ;LoRaWanCore.c: 292: if ((millis()-previous) > intervalMAX)
 15222  003ECC  C074  F068         	movff	parseLoRaWan@previous,??_parseLoRaWan
 15223  003ED0  C075  F069         	movff	parseLoRaWan@previous+1,??_parseLoRaWan+1
 15224  003ED4  C076  F06A         	movff	parseLoRaWan@previous+2,??_parseLoRaWan+2
 15225  003ED8  C077  F06B         	movff	parseLoRaWan@previous+3,??_parseLoRaWan+3
 15226  003EDC  0100               	movlb	0	; () banked
 15227  003EDE  1F68               	comf	??_parseLoRaWan& (0+255),f,b
 15228  003EE0  1F69               	comf	(??_parseLoRaWan+1)& (0+255),f,b
 15229  003EE2  1F6A               	comf	(??_parseLoRaWan+2)& (0+255),f,b
 15230  003EE4  1F6B               	comf	(??_parseLoRaWan+3)& (0+255),f,b
 15231  003EE6  2B68               	incf	??_parseLoRaWan& (0+255),f,b
 15232  003EE8  0E00               	movlw	0
 15233  003EEA  2369               	addwfc	(??_parseLoRaWan+1)& (0+255),f,b
 15234  003EEC  236A               	addwfc	(??_parseLoRaWan+2)& (0+255),f,b
 15235  003EEE  236B               	addwfc	(??_parseLoRaWan+3)& (0+255),f,b
 15236  003EF0  EC54  F028         	call	_millis	;wreg free
 15237  003EF4  0100               	movlb	0	; () banked
 15238  003EF6  5168               	movf	??_parseLoRaWan& (0+255),w,b
 15239  003EF8  2560               	addwf	?_millis& (0+255),w,b
 15240  003EFA  6F6C               	movwf	(??_parseLoRaWan+4)& (0+255),b
 15241  003EFC  5169               	movf	(??_parseLoRaWan+1)& (0+255),w,b
 15242  003EFE  2161               	addwfc	(?_millis+1)& (0+255),w,b
 15243  003F00  6F6D               	movwf	(??_parseLoRaWan+5)& (0+255),b
 15244  003F02  516A               	movf	(??_parseLoRaWan+2)& (0+255),w,b
 15245  003F04  2162               	addwfc	(?_millis+2)& (0+255),w,b
 15246  003F06  6F6E               	movwf	(??_parseLoRaWan+6)& (0+255),b
 15247  003F08  516B               	movf	(??_parseLoRaWan+3)& (0+255),w,b
 15248  003F0A  2163               	addwfc	(?_millis+3)& (0+255),w,b
 15249  003F0C  6F6F               	movwf	(??_parseLoRaWan+7)& (0+255),b
 15250  003F0E  5178               	movf	parseLoRaWan@intervalMAX& (0+255),w,b
 15251  003F10  6F70               	movwf	(??_parseLoRaWan+8)& (0+255),b
 15252  003F12  5179               	movf	(parseLoRaWan@intervalMAX+1)& (0+255),w,b
 15253  003F14  6F71               	movwf	(??_parseLoRaWan+9)& (0+255),b
 15254  003F16  6B72               	clrf	(??_parseLoRaWan+10)& (0+255),b
 15255  003F18  6B73               	clrf	(??_parseLoRaWan+11)& (0+255),b
 15256  003F1A  516C               	movf	(??_parseLoRaWan+4)& (0+255),w,b
 15257  003F1C  5D70               	subwf	(??_parseLoRaWan+8)& (0+255),w,b
 15258  003F1E  516D               	movf	(??_parseLoRaWan+5)& (0+255),w,b
 15259  003F20  5971               	subwfb	(??_parseLoRaWan+9)& (0+255),w,b
 15260  003F22  516E               	movf	(??_parseLoRaWan+6)& (0+255),w,b
 15261  003F24  5972               	subwfb	(??_parseLoRaWan+10)& (0+255),w,b
 15262  003F26  516F               	movf	(??_parseLoRaWan+7)& (0+255),w,b
 15263  003F28  5973               	subwfb	(??_parseLoRaWan+11)& (0+255),w,b
 15264  003F2A  B0D8               	btfsc	status,0,c
 15265  003F2C  D002               	goto	l2157
 15266                           
 15267                           ; BSR set to: 0
 15268                           ;LoRaWanCore.c: 293: {
 15269                           ;LoRaWanCore.c: 294: timeout=1;
 15270  003F2E  0E01               	movlw	1
 15271  003F30  6F7B               	movwf	parseLoRaWan@timeout& (0+255),b
 15272  003F32                     l2157:
 15273                           
 15274                           ; BSR set to: 0
 15275  003F32  0100               	movlb	0	; () banked
 15276  003F34  517B               	movf	parseLoRaWan@timeout& (0+255),w,b
 15277  003F36  A4D8               	btfss	status,2,c
 15278  003F38  D003               	goto	u6280
 15279                           
 15280                           ; BSR set to: 0
 15281  003F3A  5059               	movf	_novaMsgLoRaWan,w,c	;volatile
 15282  003F3C  B4D8               	btfsc	status,2,c
 15283  003F3E  D7C6               	goto	l2156
 15284  003F40                     u6280:
 15285                           
 15286                           ; BSR set to: 0
 15287                           ;LoRaWanCore.c: 295: }
 15288                           ;LoRaWanCore.c: 296: }
 15289                           ;LoRaWanCore.c: 298: if (novaMsgLoRaWan)
 15290                           
 15291                           ; BSR set to: 0
 15292                           
 15293                           ; BSR set to: 0
 15294  003F40  5059               	movf	_novaMsgLoRaWan,w,c	;volatile
 15295  003F42  B4D8               	btfsc	status,2,c
 15296  003F44  D004               	goto	l2161
 15297                           
 15298                           ; BSR set to: 0
 15299                           ;LoRaWanCore.c: 299: {
 15300                           ;LoRaWanCore.c: 300: status=responseLoRaWan;
 15301  003F46  C1FE  F07A         	movff	_responseLoRaWan,parseLoRaWan@status	;volatile
 15302                           
 15303                           ; BSR set to: 0
 15304                           ;LoRaWanCore.c: 301: novaMsgLoRaWan=0;
 15305  003F4A  0E00               	movlw	0
 15306  003F4C  6E59               	movwf	_novaMsgLoRaWan,c	;volatile
 15307  003F4E                     l2161:
 15308                           
 15309                           ; BSR set to: 0
 15310                           ;LoRaWanCore.c: 302: }
 15311                           ;LoRaWanCore.c: 304: return status;
 15312  003F4E  517A               	movf	parseLoRaWan@status& (0+255),w,b
 15313  003F50  0012               	return	
 15314  003F52                     __end_of_parseLoRaWan:
 15315                           	opt stack 0
 15316                           tblptru	equ	0xFF8
 15317                           tblptrh	equ	0xFF7
 15318                           tblptrl	equ	0xFF6
 15319                           tablat	equ	0xFF5
 15320                           prodh	equ	0xFF4
 15321                           prodl	equ	0xFF3
 15322                           intcon	equ	0xFF2
 15323                           indf0	equ	0xFEF
 15324                           postinc0	equ	0xFEE
 15325                           fsr0h	equ	0xFEA
 15326                           fsr0l	equ	0xFE9
 15327                           wreg	equ	0xFE8
 15328                           indf1	equ	0xFE7
 15329                           postdec1	equ	0xFE5
 15330                           fsr1h	equ	0xFE2
 15331                           fsr1l	equ	0xFE1
 15332                           indf2	equ	0xFDF
 15333                           postinc2	equ	0xFDE
 15334                           postdec2	equ	0xFDD
 15335                           plusw2	equ	0xFDB
 15336                           fsr2h	equ	0xFDA
 15337                           fsr2l	equ	0xFD9
 15338                           status	equ	0xFD8
 15339                           
 15340 ;; *************** function _millis *****************
 15341 ;; Defined at:
 15342 ;;		line 48 in file "Timer.c"
 15343 ;; Parameters:    Size  Location     Type
 15344 ;;		None
 15345 ;; Auto vars:     Size  Location     Type
 15346 ;;  m               4    4[BANK0 ] unsigned long 
 15347 ;; Return value:  Size  Location     Type
 15348 ;;                  4    0[BANK0 ] unsigned long 
 15349 ;; Registers used:
 15350 ;;		None
 15351 ;; Tracked objects:
 15352 ;;		On entry : 0/0
 15353 ;;		On exit  : 0/0
 15354 ;;		Unchanged: 0/0
 15355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15356 ;;      Params:         0       4       0       0       0       0       0       0       0
 15357 ;;      Locals:         0       4       0       0       0       0       0       0       0
 15358 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15359 ;;      Totals:         0       8       0       0       0       0       0       0       0
 15360 ;;Total ram usage:        8 bytes
 15361 ;; Hardware stack levels used:    1
 15362 ;; Hardware stack levels required when called:   10
 15363 ;; This function calls:
 15364 ;;		Nothing
 15365 ;; This function is called by:
 15366 ;;		_delay
 15367 ;;		_main
 15368 ;;		_parseLoRaWan
 15369 ;;		_parse_message
 15370 ;;		_txZBStatusResponse
 15371 ;; This function uses a non-reentrant model
 15372 ;;
 15373                           
 15374                           	psect	text52
 15375  0050A8                     __ptext52:
 15376                           	opt stack 0
 15377  0050A8                     _millis:
 15378                           	opt stack 20
 15379                           
 15380                           ;Timer.c: 50: CCP1IE=0;
 15381                           
 15382                           ; BSR set to: 0
 15383                           ;incstack = 0
 15384  0050A8  949D               	bcf	3997,2,c	;volatile
 15385                           
 15386                           ;Timer.c: 51: uint32_t m=ticks;
 15387  0050AA  C32A  F064         	movff	_ticks,millis@m	;volatile
 15388  0050AE  C32B  F065         	movff	_ticks+1,millis@m+1	;volatile
 15389  0050B2  C32C  F066         	movff	_ticks+2,millis@m+2	;volatile
 15390  0050B6  C32D  F067         	movff	_ticks+3,millis@m+3	;volatile
 15391                           
 15392                           ;Timer.c: 52: CCP1IE=1;
 15393  0050BA  849D               	bsf	3997,2,c	;volatile
 15394                           
 15395                           ;Timer.c: 54: return m;
 15396  0050BC  C064  F060         	movff	millis@m,?_millis
 15397  0050C0  C065  F061         	movff	millis@m+1,?_millis+1
 15398  0050C4  C066  F062         	movff	millis@m+2,?_millis+2
 15399  0050C8  C067  F063         	movff	millis@m+3,?_millis+3
 15400  0050CC  0012               	return		;funcret
 15401  0050CE                     __end_of_millis:
 15402                           	opt stack 0
 15403                           tblptru	equ	0xFF8
 15404                           tblptrh	equ	0xFF7
 15405                           tblptrl	equ	0xFF6
 15406                           tablat	equ	0xFF5
 15407                           prodh	equ	0xFF4
 15408                           prodl	equ	0xFF3
 15409                           intcon	equ	0xFF2
 15410                           indf0	equ	0xFEF
 15411                           postinc0	equ	0xFEE
 15412                           fsr0h	equ	0xFEA
 15413                           fsr0l	equ	0xFE9
 15414                           wreg	equ	0xFE8
 15415                           indf1	equ	0xFE7
 15416                           postdec1	equ	0xFE5
 15417                           fsr1h	equ	0xFE2
 15418                           fsr1l	equ	0xFE1
 15419                           indf2	equ	0xFDF
 15420                           postinc2	equ	0xFDE
 15421                           postdec2	equ	0xFDD
 15422                           plusw2	equ	0xFDB
 15423                           fsr2h	equ	0xFDA
 15424                           fsr2l	equ	0xFD9
 15425                           status	equ	0xFD8
 15426                           
 15427 ;; *************** function _initRecebeDados *****************
 15428 ;; Defined at:
 15429 ;;		line 307 in file "LoRaWanCore.c"
 15430 ;; Parameters:    Size  Location     Type
 15431 ;;		None
 15432 ;; Auto vars:     Size  Location     Type
 15433 ;;		None
 15434 ;; Return value:  Size  Location     Type
 15435 ;;                  1    wreg      void 
 15436 ;; Registers used:
 15437 ;;		wreg, status,2
 15438 ;; Tracked objects:
 15439 ;;		On entry : 0/0
 15440 ;;		On exit  : 0/0
 15441 ;;		Unchanged: 0/0
 15442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15443 ;;      Params:         0       0       0       0       0       0       0       0       0
 15444 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15445 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15446 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15447 ;;Total ram usage:        0 bytes
 15448 ;; Hardware stack levels used:    1
 15449 ;; Hardware stack levels required when called:   10
 15450 ;; This function calls:
 15451 ;;		Nothing
 15452 ;; This function is called by:
 15453 ;;		_enviaComando
 15454 ;; This function uses a non-reentrant model
 15455 ;;
 15456                           
 15457                           	psect	text53
 15458  005156                     __ptext53:
 15459                           	opt stack 0
 15460  005156                     _initRecebeDados:
 15461                           	opt stack 18
 15462                           
 15463                           ;LoRaWanCore.c: 309: RCIE=0;
 15464                           
 15465                           ;incstack = 0
 15466  005156  9A9D               	bcf	3997,5,c	;volatile
 15467                           
 15468                           ;LoRaWanCore.c: 310: responseLoRaWan=0xFF;
 15469  005158  0101               	movlb	1	; () banked
 15470  00515A  69FE               	setf	_responseLoRaWan& (0+255),b	;volatile
 15471                           
 15472                           ; BSR set to: 1
 15473                           ;LoRaWanCore.c: 311: tamFrame=0;
 15474  00515C  0E00               	movlw	0
 15475  00515E  6E5A               	movwf	_tamFrame,c	;volatile
 15476                           
 15477                           ;LoRaWanCore.c: 312: tamDadosRecebidos=0;
 15478  005160  0E00               	movlw	0
 15479  005162  6E5B               	movwf	_tamDadosRecebidos,c	;volatile
 15480                           
 15481                           ;LoRaWanCore.c: 313: novaMsgLoRaWan=0;
 15482  005164  0E00               	movlw	0
 15483  005166  6E59               	movwf	_novaMsgLoRaWan,c	;volatile
 15484                           
 15485                           ; BSR set to: 1
 15486                           ;LoRaWanCore.c: 314: RCIE=1;
 15487  005168  8A9D               	bsf	3997,5,c	;volatile
 15488                           
 15489                           ; BSR set to: 1
 15490  00516A  0012               	return		;funcret
 15491  00516C                     __end_of_initRecebeDados:
 15492                           	opt stack 0
 15493                           tblptru	equ	0xFF8
 15494                           tblptrh	equ	0xFF7
 15495                           tblptrl	equ	0xFF6
 15496                           tablat	equ	0xFF5
 15497                           prodh	equ	0xFF4
 15498                           prodl	equ	0xFF3
 15499                           intcon	equ	0xFF2
 15500                           indf0	equ	0xFEF
 15501                           postinc0	equ	0xFEE
 15502                           fsr0h	equ	0xFEA
 15503                           fsr0l	equ	0xFE9
 15504                           wreg	equ	0xFE8
 15505                           indf1	equ	0xFE7
 15506                           postdec1	equ	0xFE5
 15507                           fsr1h	equ	0xFE2
 15508                           fsr1l	equ	0xFE1
 15509                           indf2	equ	0xFDF
 15510                           postinc2	equ	0xFDE
 15511                           postdec2	equ	0xFDD
 15512                           plusw2	equ	0xFDB
 15513                           fsr2h	equ	0xFDA
 15514                           fsr2l	equ	0xFD9
 15515                           status	equ	0xFD8
 15516                           
 15517 ;; *************** function _SYS_InterruptHigh *****************
 15518 ;; Defined at:
 15519 ;;		line 59 in file "usb/system.c"
 15520 ;; Parameters:    Size  Location     Type
 15521 ;;		None
 15522 ;; Auto vars:     Size  Location     Type
 15523 ;;  dig4            2   53[COMRAM] int 
 15524 ;;  dig3            2   51[COMRAM] int 
 15525 ;;  dig2            2   49[COMRAM] int 
 15526 ;;  dig1            2   47[COMRAM] int 
 15527 ;; Return value:  Size  Location     Type
 15528 ;;                  1    wreg      void 
 15529 ;; Registers used:
 15530 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15531 ;; Tracked objects:
 15532 ;;		On entry : 0/0
 15533 ;;		On exit  : 0/0
 15534 ;;		Unchanged: 0/0
 15535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15536 ;;      Params:         0       0       0       0       0       0       0       0       0
 15537 ;;      Locals:         8       0       0       0       0       0       0       0       0
 15538 ;;      Temps:         19       0       0       0       0       0       0       0       0
 15539 ;;      Totals:        27       0       0       0       0       0       0       0       0
 15540 ;;Total ram usage:       27 bytes
 15541 ;; Hardware stack levels used:    1
 15542 ;; Hardware stack levels required when called:    9
 15543 ;; This function calls:
 15544 ;;		_USBDeviceTasks
 15545 ;;		_getch
 15546 ;;		_recebeByteLoRaWan
 15547 ;; This function is called by:
 15548 ;;		Interrupt level 2
 15549 ;; This function uses a non-reentrant model
 15550 ;;
 15551                           
 15552                           	psect	intcode
 15553  000008                     __pintcode:
 15554                           	opt stack 0
 15555  000008                     _SYS_InterruptHigh:
 15556                           	opt stack 16
 15557                           
 15558                           ; BSR set to: 1
 15559                           ;incstack = 0
 15560  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 15561  00000A  EDCA  F011         	call	int_func,f	;refresh shadow registers
 15562                           tblptru	equ	0xFF8
 15563                           tblptrh	equ	0xFF7
 15564                           tblptrl	equ	0xFF6
 15565                           tablat	equ	0xFF5
 15566                           prodh	equ	0xFF4
 15567                           prodl	equ	0xFF3
 15568                           intcon	equ	0xFF2
 15569                           indf0	equ	0xFEF
 15570                           postinc0	equ	0xFEE
 15571                           fsr0h	equ	0xFEA
 15572                           fsr0l	equ	0xFE9
 15573                           wreg	equ	0xFE8
 15574                           indf1	equ	0xFE7
 15575                           postdec1	equ	0xFE5
 15576                           fsr1h	equ	0xFE2
 15577                           fsr1l	equ	0xFE1
 15578                           indf2	equ	0xFDF
 15579                           postinc2	equ	0xFDE
 15580                           postdec2	equ	0xFDD
 15581                           plusw2	equ	0xFDB
 15582                           fsr2h	equ	0xFDA
 15583                           fsr2l	equ	0xFD9
 15584                           status	equ	0xFD8
 15585                           
 15586                           	psect	intcode_body
 15587  002394                     __pintcode_body:
 15588                           	opt stack 16
 15589  002394                     int_func:
 15590                           	opt stack 16
 15591  002394  0006               	pop		; remove dummy address from shadow register refresh
 15592  002396  CFFA F01E          	movff	pclath,??_SYS_InterruptHigh+1
 15593  00239A  CFFB F01F          	movff	pclatu,??_SYS_InterruptHigh+2
 15594  00239E  CFE9 F020          	movff	fsr0l,??_SYS_InterruptHigh+3
 15595  0023A2  CFEA F021          	movff	fsr0h,??_SYS_InterruptHigh+4
 15596  0023A6  CFE1 F022          	movff	fsr1l,??_SYS_InterruptHigh+5
 15597  0023AA  CFE2 F023          	movff	fsr1h,??_SYS_InterruptHigh+6
 15598  0023AE  CFD9 F024          	movff	fsr2l,??_SYS_InterruptHigh+7
 15599  0023B2  CFDA F025          	movff	fsr2h,??_SYS_InterruptHigh+8
 15600  0023B6  CFF3 F026          	movff	prodl,??_SYS_InterruptHigh+9
 15601  0023BA  CFF4 F027          	movff	prodh,??_SYS_InterruptHigh+10
 15602  0023BE  CFF6 F028          	movff	tblptrl,??_SYS_InterruptHigh+11
 15603  0023C2  CFF7 F029          	movff	tblptrh,??_SYS_InterruptHigh+12
 15604  0023C6  CFF8 F02A          	movff	tblptru,??_SYS_InterruptHigh+13
 15605  0023CA  CFF5 F02B          	movff	tablat,??_SYS_InterruptHigh+14
 15606  0023CE  C05F  F02C         	movff	btemp,??_SYS_InterruptHigh+15
 15607  0023D2  C060  F02D         	movff	btemp+1,??_SYS_InterruptHigh+16
 15608  0023D6  C061  F02E         	movff	btemp+2,??_SYS_InterruptHigh+17
 15609  0023DA  C062  F02F         	movff	btemp+3,??_SYS_InterruptHigh+18
 15610                           
 15611                           ;system.c: 64: if (CCP1IF && CCP1IE)
 15612  0023DE  B49E               	btfsc	3998,2,c	;volatile
 15613  0023E0  A49D               	btfss	3997,2,c	;volatile
 15614  0023E2  D087               	goto	i2l99
 15615                           
 15616                           ;system.c: 65: {
 15617                           ;system.c: 66: CCP1IF=0;
 15618  0023E4  949E               	bcf	3998,2,c	;volatile
 15619                           
 15620                           ;system.c: 67: ticks++;
 15621  0023E6  0E01               	movlw	1
 15622  0023E8  0103               	movlb	3	; () banked
 15623  0023EA  272A               	addwf	_ticks& (0+255),f,b	;volatile
 15624  0023EC  0E00               	movlw	0
 15625  0023EE  232B               	addwfc	(_ticks+1)& (0+255),f,b	;volatile
 15626  0023F0  232C               	addwfc	(_ticks+2)& (0+255),f,b	;volatile
 15627  0023F2  232D               	addwfc	(_ticks+3)& (0+255),f,b	;volatile
 15628                           
 15629                           ; BSR set to: 3
 15630                           ;system.c: 69: int dig1=PORTDbits.RD0;
 15631  0023F4  A083               	btfss	3971,0,c	;volatile
 15632  0023F6  D003               	goto	i2u999_40
 15633  0023F8  6A1D               	clrf	??_SYS_InterruptHigh& (0+255),c
 15634  0023FA  2A1D               	incf	??_SYS_InterruptHigh& (0+255),f,c
 15635  0023FC  D001               	goto	i2u999_48
 15636  0023FE                     i2u999_40:
 15637  0023FE  6A1D               	clrf	??_SYS_InterruptHigh& (0+255),c
 15638  002400                     i2u999_48:
 15639  002400  501D               	movf	??_SYS_InterruptHigh,w,c
 15640  002402  6E30               	movwf	SYS_InterruptHigh@dig1,c
 15641  002404  6A31               	clrf	SYS_InterruptHigh@dig1+1,c
 15642                           
 15643                           ;system.c: 70: int dig2=PORTDbits.RD1;
 15644  002406  A283               	btfss	3971,1,c	;volatile
 15645  002408  D003               	goto	i2u1000_40
 15646  00240A  6A1D               	clrf	??_SYS_InterruptHigh& (0+255),c
 15647  00240C  2A1D               	incf	??_SYS_InterruptHigh& (0+255),f,c
 15648  00240E  D001               	goto	i2u1000_48
 15649  002410                     i2u1000_40:
 15650  002410  6A1D               	clrf	??_SYS_InterruptHigh& (0+255),c
 15651  002412                     i2u1000_48:
 15652  002412  501D               	movf	??_SYS_InterruptHigh,w,c
 15653  002414  6E32               	movwf	SYS_InterruptHigh@dig2,c
 15654  002416  6A33               	clrf	SYS_InterruptHigh@dig2+1,c
 15655                           
 15656                           ;system.c: 71: int dig3=PORTDbits.RD2;
 15657  002418  A483               	btfss	3971,2,c	;volatile
 15658  00241A  D003               	goto	i2u1001_40
 15659  00241C  6A1D               	clrf	??_SYS_InterruptHigh& (0+255),c
 15660  00241E  2A1D               	incf	??_SYS_InterruptHigh& (0+255),f,c
 15661  002420  D001               	goto	i2u1001_48
 15662  002422                     i2u1001_40:
 15663  002422  6A1D               	clrf	??_SYS_InterruptHigh& (0+255),c
 15664  002424                     i2u1001_48:
 15665  002424  501D               	movf	??_SYS_InterruptHigh,w,c
 15666  002426  6E34               	movwf	SYS_InterruptHigh@dig3,c
 15667  002428  6A35               	clrf	SYS_InterruptHigh@dig3+1,c
 15668                           
 15669                           ;system.c: 72: int dig4=PORTDbits.RD3;
 15670  00242A  A683               	btfss	3971,3,c	;volatile
 15671  00242C  D003               	goto	i2u1002_40
 15672  00242E  6A1D               	clrf	??_SYS_InterruptHigh& (0+255),c
 15673  002430  2A1D               	incf	??_SYS_InterruptHigh& (0+255),f,c
 15674  002432  D001               	goto	i2u1002_48
 15675  002434                     i2u1002_40:
 15676  002434  6A1D               	clrf	??_SYS_InterruptHigh& (0+255),c
 15677  002436                     i2u1002_48:
 15678  002436  501D               	movf	??_SYS_InterruptHigh,w,c
 15679  002438  6E36               	movwf	SYS_InterruptHigh@dig4,c
 15680  00243A  6A37               	clrf	SYS_InterruptHigh@dig4+1,c
 15681                           
 15682                           ;system.c: 74: if ((dig_1!=dig1) && (dig1==1))
 15683  00243C  5030               	movf	SYS_InterruptHigh@dig1,w,c
 15684  00243E  0102               	movlb	2	; () banked
 15685  002440  19E8               	xorwf	_dig_1& (0+255),w,b	;volatile
 15686  002442  E104               	bnz	i2u1003_40
 15687  002444  5031               	movf	SYS_InterruptHigh@dig1+1,w,c
 15688  002446  19E9               	xorwf	(_dig_1+1)& (0+255),w,b	;volatile
 15689  002448  B4D8               	btfsc	status,2,c
 15690  00244A  D00A               	goto	i2l100
 15691  00244C                     i2u1003_40:
 15692                           
 15693                           ; BSR set to: 2
 15694  00244C  0430               	decf	SYS_InterruptHigh@dig1,w,c
 15695  00244E  1031               	iorwf	SYS_InterruptHigh@dig1+1,w,c
 15696  002450  A4D8               	btfss	status,2,c
 15697  002452  D006               	goto	i2l100
 15698                           
 15699                           ; BSR set to: 2
 15700                           ;system.c: 75: freqPulses1++;
 15701  002454  0E01               	movlw	1
 15702  002456  27CE               	addwf	_freqPulses1& (0+255),f,b	;volatile
 15703  002458  0E00               	movlw	0
 15704  00245A  23CF               	addwfc	(_freqPulses1+1)& (0+255),f,b	;volatile
 15705  00245C  23D0               	addwfc	(_freqPulses1+2)& (0+255),f,b	;volatile
 15706  00245E  23D1               	addwfc	(_freqPulses1+3)& (0+255),f,b	;volatile
 15707  002460                     i2l100:
 15708                           
 15709                           ; BSR set to: 2
 15710                           ;system.c: 76: dig_1=dig1;
 15711                           
 15712                           ; BSR set to: 2
 15713  002460  C030  F2E8         	movff	SYS_InterruptHigh@dig1,_dig_1	;volatile
 15714  002464  C031  F2E9         	movff	SYS_InterruptHigh@dig1+1,_dig_1+1	;volatile
 15715                           
 15716                           ;system.c: 77: if ((dig_2!=dig2) && (dig2==1))
 15717  002468  5032               	movf	SYS_InterruptHigh@dig2,w,c
 15718  00246A  19E6               	xorwf	_dig_2& (0+255),w,b	;volatile
 15719  00246C  E104               	bnz	i2u1005_40
 15720  00246E  5033               	movf	SYS_InterruptHigh@dig2+1,w,c
 15721  002470  19E7               	xorwf	(_dig_2+1)& (0+255),w,b	;volatile
 15722  002472  B4D8               	btfsc	status,2,c
 15723  002474  D00B               	goto	i2l101
 15724  002476                     i2u1005_40:
 15725                           
 15726                           ; BSR set to: 2
 15727  002476  0432               	decf	SYS_InterruptHigh@dig2,w,c
 15728  002478  1033               	iorwf	SYS_InterruptHigh@dig2+1,w,c
 15729  00247A  A4D8               	btfss	status,2,c
 15730  00247C  D007               	goto	i2l101
 15731                           
 15732                           ; BSR set to: 2
 15733                           ;system.c: 78: freqPulses2++;
 15734  00247E  0E01               	movlw	1
 15735  002480  0103               	movlb	3	; () banked
 15736  002482  2736               	addwf	_freqPulses2& (0+255),f,b	;volatile
 15737  002484  0E00               	movlw	0
 15738  002486  2337               	addwfc	(_freqPulses2+1)& (0+255),f,b	;volatile
 15739  002488  2338               	addwfc	(_freqPulses2+2)& (0+255),f,b	;volatile
 15740  00248A  2339               	addwfc	(_freqPulses2+3)& (0+255),f,b	;volatile
 15741  00248C                     i2l101:
 15742                           
 15743                           ;system.c: 79: dig_2=dig2;
 15744                           
 15745                           ; BSR set to: 3
 15746  00248C  C032  F2E6         	movff	SYS_InterruptHigh@dig2,_dig_2	;volatile
 15747  002490  C033  F2E7         	movff	SYS_InterruptHigh@dig2+1,_dig_2+1	;volatile
 15748                           
 15749                           ;system.c: 80: if ((dig_3!=dig3) && (dig3==1))
 15750  002494  5034               	movf	SYS_InterruptHigh@dig3,w,c
 15751  002496  0102               	movlb	2	; () banked
 15752  002498  19E4               	xorwf	_dig_3& (0+255),w,b	;volatile
 15753  00249A  E104               	bnz	i2u1007_40
 15754  00249C  5035               	movf	SYS_InterruptHigh@dig3+1,w,c
 15755  00249E  19E5               	xorwf	(_dig_3+1)& (0+255),w,b	;volatile
 15756  0024A0  B4D8               	btfsc	status,2,c
 15757  0024A2  D00B               	goto	i2l102
 15758  0024A4                     i2u1007_40:
 15759                           
 15760                           ; BSR set to: 2
 15761  0024A4  0434               	decf	SYS_InterruptHigh@dig3,w,c
 15762  0024A6  1035               	iorwf	SYS_InterruptHigh@dig3+1,w,c
 15763  0024A8  A4D8               	btfss	status,2,c
 15764  0024AA  D007               	goto	i2l102
 15765                           
 15766                           ; BSR set to: 2
 15767                           ;system.c: 81: freqPulses3++;
 15768  0024AC  0E01               	movlw	1
 15769  0024AE  0103               	movlb	3	; () banked
 15770  0024B0  2732               	addwf	_freqPulses3& (0+255),f,b	;volatile
 15771  0024B2  0E00               	movlw	0
 15772  0024B4  2333               	addwfc	(_freqPulses3+1)& (0+255),f,b	;volatile
 15773  0024B6  2334               	addwfc	(_freqPulses3+2)& (0+255),f,b	;volatile
 15774  0024B8  2335               	addwfc	(_freqPulses3+3)& (0+255),f,b	;volatile
 15775  0024BA                     i2l102:
 15776                           
 15777                           ;system.c: 82: dig_3=dig3;
 15778                           
 15779                           ; BSR set to: 3
 15780  0024BA  C034  F2E4         	movff	SYS_InterruptHigh@dig3,_dig_3	;volatile
 15781  0024BE  C035  F2E5         	movff	SYS_InterruptHigh@dig3+1,_dig_3+1	;volatile
 15782                           
 15783                           ;system.c: 83: if ((dig_4!=dig4) && (dig4==1))
 15784  0024C2  5036               	movf	SYS_InterruptHigh@dig4,w,c
 15785  0024C4  0102               	movlb	2	; () banked
 15786  0024C6  19E2               	xorwf	_dig_4& (0+255),w,b	;volatile
 15787  0024C8  E104               	bnz	i2u1009_40
 15788  0024CA  5037               	movf	SYS_InterruptHigh@dig4+1,w,c
 15789  0024CC  19E3               	xorwf	(_dig_4+1)& (0+255),w,b	;volatile
 15790  0024CE  B4D8               	btfsc	status,2,c
 15791  0024D0  D00B               	goto	i2l103
 15792  0024D2                     i2u1009_40:
 15793                           
 15794                           ; BSR set to: 2
 15795  0024D2  0436               	decf	SYS_InterruptHigh@dig4,w,c
 15796  0024D4  1037               	iorwf	SYS_InterruptHigh@dig4+1,w,c
 15797  0024D6  A4D8               	btfss	status,2,c
 15798  0024D8  D007               	goto	i2l103
 15799                           
 15800                           ; BSR set to: 2
 15801                           ;system.c: 84: freqPulses4++;
 15802  0024DA  0E01               	movlw	1
 15803  0024DC  0103               	movlb	3	; () banked
 15804  0024DE  272E               	addwf	_freqPulses4& (0+255),f,b	;volatile
 15805  0024E0  0E00               	movlw	0
 15806  0024E2  232F               	addwfc	(_freqPulses4+1)& (0+255),f,b	;volatile
 15807  0024E4  2330               	addwfc	(_freqPulses4+2)& (0+255),f,b	;volatile
 15808  0024E6  2331               	addwfc	(_freqPulses4+3)& (0+255),f,b	;volatile
 15809  0024E8                     i2l103:
 15810                           
 15811                           ;system.c: 85: dig_4=dig4;
 15812                           
 15813                           ; BSR set to: 3
 15814  0024E8  C036  F2E2         	movff	SYS_InterruptHigh@dig4,_dig_4	;volatile
 15815  0024EC  C037  F2E3         	movff	SYS_InterruptHigh@dig4+1,_dig_4+1	;volatile
 15816                           
 15817                           ;system.c: 86: }
 15818  0024F0  D00B               	goto	i2l107
 15819  0024F2                     i2l99:
 15820                           
 15821                           ;system.c: 87: else if (RCIE && RCIF)
 15822  0024F2  BA9D               	btfsc	3997,5,c	;volatile
 15823  0024F4  AA9E               	btfss	3998,5,c	;volatile
 15824  0024F6  D005               	goto	i2l105
 15825                           
 15826                           ;system.c: 88: {
 15827                           ;system.c: 90: recebeByteLoRaWan(getch());
 15828  0024F8  EC67  F028         	call	_getch	;wreg free
 15829  0024FC  EC09  F00E         	call	_recebeByteLoRaWan
 15830                           
 15831                           ;system.c: 92: }
 15832  002500  D003               	goto	i2l107
 15833  002502                     i2l105:
 15834                           
 15835                           ;system.c: 93: else if (USBIE)
 15836  002502  BAA0               	btfsc	4000,5,c	;volatile
 15837                           
 15838                           ;system.c: 94: {
 15839                           ;system.c: 96: USBDeviceTasks();
 15840  002504  EC5C  F015         	call	_USBDeviceTasks	;wreg free
 15841  002508                     i2l107:
 15842  002508  C02F  F062         	movff	??_SYS_InterruptHigh+18,btemp+3
 15843  00250C  C02E  F061         	movff	??_SYS_InterruptHigh+17,btemp+2
 15844  002510  C02D  F060         	movff	??_SYS_InterruptHigh+16,btemp+1
 15845  002514  C02C  F05F         	movff	??_SYS_InterruptHigh+15,btemp
 15846  002518  C02B  FFF5         	movff	??_SYS_InterruptHigh+14,tablat
 15847  00251C  C02A  FFF8         	movff	??_SYS_InterruptHigh+13,tblptru
 15848  002520  C029  FFF7         	movff	??_SYS_InterruptHigh+12,tblptrh
 15849  002524  C028  FFF6         	movff	??_SYS_InterruptHigh+11,tblptrl
 15850  002528  C027  FFF4         	movff	??_SYS_InterruptHigh+10,prodh
 15851  00252C  C026  FFF3         	movff	??_SYS_InterruptHigh+9,prodl
 15852  002530  C025  FFDA         	movff	??_SYS_InterruptHigh+8,fsr2h
 15853  002534  C024  FFD9         	movff	??_SYS_InterruptHigh+7,fsr2l
 15854  002538  C023  FFE2         	movff	??_SYS_InterruptHigh+6,fsr1h
 15855  00253C  C022  FFE1         	movff	??_SYS_InterruptHigh+5,fsr1l
 15856  002540  C021  FFEA         	movff	??_SYS_InterruptHigh+4,fsr0h
 15857  002544  C020  FFE9         	movff	??_SYS_InterruptHigh+3,fsr0l
 15858  002548  C01F  FFFB         	movff	??_SYS_InterruptHigh+2,pclatu
 15859  00254C  C01E  FFFA         	movff	??_SYS_InterruptHigh+1,pclath
 15860  002550  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 15861  002552  0011               	retfie		f
 15862  002554                     __end_of_SYS_InterruptHigh:
 15863                           	opt stack 0
 15864                           pclatu	equ	0xFFB
 15865                           pclath	equ	0xFFA
 15866                           tblptru	equ	0xFF8
 15867                           tblptrh	equ	0xFF7
 15868                           tblptrl	equ	0xFF6
 15869                           tablat	equ	0xFF5
 15870                           prodh	equ	0xFF4
 15871                           prodl	equ	0xFF3
 15872                           intcon	equ	0xFF2
 15873                           indf0	equ	0xFEF
 15874                           postinc0	equ	0xFEE
 15875                           fsr0h	equ	0xFEA
 15876                           fsr0l	equ	0xFE9
 15877                           wreg	equ	0xFE8
 15878                           indf1	equ	0xFE7
 15879                           postdec1	equ	0xFE5
 15880                           fsr1h	equ	0xFE2
 15881                           fsr1l	equ	0xFE1
 15882                           indf2	equ	0xFDF
 15883                           postinc2	equ	0xFDE
 15884                           postdec2	equ	0xFDD
 15885                           plusw2	equ	0xFDB
 15886                           fsr2h	equ	0xFDA
 15887                           fsr2l	equ	0xFD9
 15888                           status	equ	0xFD8
 15889                           
 15890 ;; *************** function _recebeByteLoRaWan *****************
 15891 ;; Defined at:
 15892 ;;		line 317 in file "LoRaWanCore.c"
 15893 ;; Parameters:    Size  Location     Type
 15894 ;;  b               1    wreg     char 
 15895 ;; Auto vars:     Size  Location     Type
 15896 ;;  b               1   15[COMRAM] char 
 15897 ;;  i               1   18[COMRAM] unsigned char 
 15898 ;;  port            1   14[COMRAM] unsigned char 
 15899 ;;  i               1   16[COMRAM] unsigned char 
 15900 ;;  tamMsgRx        1   17[COMRAM] unsigned char 
 15901 ;;  len             1   13[COMRAM] unsigned char 
 15902 ;; Return value:  Size  Location     Type
 15903 ;;                  1    wreg      void 
 15904 ;; Registers used:
 15905 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15906 ;; Tracked objects:
 15907 ;;		On entry : 0/0
 15908 ;;		On exit  : 0/0
 15909 ;;		Unchanged: 0/0
 15910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15911 ;;      Params:         0       0       0       0       0       0       0       0       0
 15912 ;;      Locals:         6       0       0       0       0       0       0       0       0
 15913 ;;      Temps:          4       0       0       0       0       0       0       0       0
 15914 ;;      Totals:        10       0       0       0       0       0       0       0       0
 15915 ;;Total ram usage:       10 bytes
 15916 ;; Hardware stack levels used:    1
 15917 ;; Hardware stack levels required when called:    2
 15918 ;; This function calls:
 15919 ;;		_converter
 15920 ;;		_strcmp
 15921 ;;		_strcpy
 15922 ;;		_strncmp
 15923 ;;		i2_strlen
 15924 ;; This function is called by:
 15925 ;;		_SYS_InterruptHigh
 15926 ;; This function uses a non-reentrant model
 15927 ;;
 15928                           
 15929                           	psect	text55
 15930  001C12                     __ptext55:
 15931                           	opt stack 0
 15932  001C12                     _recebeByteLoRaWan:
 15933                           	opt stack 22
 15934                           
 15935                           ;incstack = 0
 15936                           ;recebeByteLoRaWan@b stored from wreg
 15937  001C12  6E10               	movwf	recebeByteLoRaWan@b,c
 15938                           
 15939                           ;LoRaWanCore.c: 319: static uint8_t frameData[100];
 15940                           ;LoRaWanCore.c: 321: frameData[tamFrame++]=b;
 15941  001C14  505A               	movf	_tamFrame,w,c	;volatile
 15942  001C16  0D01               	mullw	1
 15943  001C18  0E40               	movlw	low recebeByteLoRaWan@frameData
 15944  001C1A  24F3               	addwf	prodl,w,c
 15945  001C1C  6ED9               	movwf	fsr2l,c
 15946  001C1E  0E04               	movlw	high recebeByteLoRaWan@frameData
 15947  001C20  20F4               	addwfc	prodh,w,c
 15948  001C22  6EDA               	movwf	fsr2h,c
 15949  001C24  C010  FFDF         	movff	recebeByteLoRaWan@b,indf2
 15950  001C28  2A5A               	incf	_tamFrame,f,c	;volatile
 15951                           
 15952                           ;LoRaWanCore.c: 323: if ((b==0x0A) && (tamFrame>2))
 15953  001C2A  0E0A               	movlw	10
 15954  001C2C  1810               	xorwf	recebeByteLoRaWan@b,w,c
 15955  001C2E  A4D8               	btfss	status,2,c
 15956  001C30  D131               	goto	i2u873_40
 15957  001C32  0E02               	movlw	2
 15958  001C34  645A               	cpfsgt	_tamFrame,c	;volatile
 15959  001C36  D12E               	goto	i2u873_40
 15960                           
 15961                           ;LoRaWanCore.c: 324: {
 15962                           ;LoRaWanCore.c: 325: frameData[tamFrame]=0x00;
 15963  001C38  505A               	movf	_tamFrame,w,c	;volatile
 15964  001C3A  0D01               	mullw	1
 15965  001C3C  0E40               	movlw	low recebeByteLoRaWan@frameData
 15966  001C3E  24F3               	addwf	prodl,w,c
 15967  001C40  6ED9               	movwf	fsr2l,c
 15968  001C42  0E04               	movlw	high recebeByteLoRaWan@frameData
 15969  001C44  20F4               	addwfc	prodh,w,c
 15970  001C46  6EDA               	movwf	fsr2h,c
 15971  001C48  0E00               	movlw	0
 15972  001C4A  6EDF               	movwf	indf2,c
 15973                           
 15974                           ;LoRaWanCore.c: 326: strcpy(frameBuffer,frameData);
 15975  001C4C  0E00               	movlw	low _frameBuffer
 15976  001C4E  6E01               	movwf	strcpy@to,c
 15977  001C50  0E07               	movlw	high _frameBuffer
 15978  001C52  6E02               	movwf	strcpy@to+1,c
 15979  001C54  0E40               	movlw	low recebeByteLoRaWan@frameData
 15980  001C56  6E03               	movwf	strcpy@from,c
 15981  001C58  0E04               	movlw	high recebeByteLoRaWan@frameData
 15982  001C5A  6E04               	movwf	strcpy@from+1,c
 15983  001C5C  ECD6  F027         	call	_strcpy	;wreg free
 15984                           
 15985                           ;LoRaWanCore.c: 328: frameData[tamFrame-2]=0x00;
 15986  001C60  0EFE               	movlw	254
 15987  001C62  6E0A               	movwf	??_recebeByteLoRaWan& (0+255),c
 15988  001C64  0EFF               	movlw	255
 15989  001C66  6E0B               	movwf	(??_recebeByteLoRaWan+1)& (0+255),c
 15990  001C68  505A               	movf	_tamFrame,w,c	;volatile
 15991  001C6A  6E0C               	movwf	(??_recebeByteLoRaWan+2)& (0+255),c
 15992  001C6C  6A0D               	clrf	(??_recebeByteLoRaWan+3)& (0+255),c
 15993  001C6E  500A               	movf	??_recebeByteLoRaWan,w,c
 15994  001C70  260C               	addwf	??_recebeByteLoRaWan+2,f,c
 15995  001C72  500B               	movf	??_recebeByteLoRaWan+1,w,c
 15996  001C74  220D               	addwfc	??_recebeByteLoRaWan+3,f,c
 15997  001C76  0E40               	movlw	low recebeByteLoRaWan@frameData
 15998  001C78  240C               	addwf	??_recebeByteLoRaWan+2,w,c
 15999  001C7A  6ED9               	movwf	fsr2l,c
 16000  001C7C  0E04               	movlw	high recebeByteLoRaWan@frameData
 16001  001C7E  200D               	addwfc	??_recebeByteLoRaWan+3,w,c
 16002  001C80  6EDA               	movwf	fsr2h,c
 16003  001C82  0E00               	movlw	0
 16004  001C84  6EDF               	movwf	indf2,c
 16005                           
 16006                           ;LoRaWanCore.c: 329: tamFrame=0;
 16007  001C86  0E00               	movlw	0
 16008  001C88  6E5A               	movwf	_tamFrame,c	;volatile
 16009                           
 16010                           ;LoRaWanCore.c: 330: uint8_t len = (sizeof(MSG_LORAWAN) / sizeof((MSG_LORAWAN)[0]));
 16011  001C8A  0E0F               	movlw	15
 16012  001C8C  6E0E               	movwf	recebeByteLoRaWan@len,c
 16013                           
 16014                           ;LoRaWanCore.c: 331: responseLoRaWan=0xFF;
 16015  001C8E  0101               	movlb	1	; () banked
 16016  001C90  69FE               	setf	_responseLoRaWan& (0+255),b	;volatile
 16017                           
 16018                           ; BSR set to: 1
 16019                           ;LoRaWanCore.c: 332: for (uint8_t i=0;i<len;i++)
 16020  001C92  0E00               	movlw	0
 16021  001C94  6E11               	movwf	recebeByteLoRaWan@i,c
 16022  001C96  D01C               	goto	i2l2171
 16023  001C98                     
 16024                           ;LoRaWanCore.c: 333: {
 16025                           ;LoRaWanCore.c: 335: if (strcmp(frameData,MSG_LORAWAN[i])==0)
 16026                           
 16027                           ; BSR set to: 1
 16028  001C98  0E40               	movlw	low recebeByteLoRaWan@frameData
 16029  001C9A  6E01               	movwf	strcmp@s1,c
 16030  001C9C  0E04               	movlw	high recebeByteLoRaWan@frameData
 16031  001C9E  6E02               	movwf	strcmp@s1+1,c
 16032  001CA0  5011               	movf	recebeByteLoRaWan@i,w,c
 16033  001CA2  0D02               	mullw	2
 16034  001CA4  0EB5               	movlw	low _MSG_LORAWAN
 16035  001CA6  24F3               	addwf	prodl,w,c
 16036  001CA8  6ED9               	movwf	fsr2l,c
 16037  001CAA  0E03               	movlw	high _MSG_LORAWAN
 16038  001CAC  20F4               	addwfc	prodh,w,c
 16039  001CAE  6EDA               	movwf	fsr2h,c
 16040  001CB0  CFDE F003          	movff	postinc2,strcmp@s2
 16041  001CB4  CFDD F004          	movff	postdec2,strcmp@s2+1
 16042  001CB8  ECAD  F025         	call	_strcmp	;wreg free
 16043  001CBC  5001               	movf	?_strcmp,w,c
 16044  001CBE  1002               	iorwf	?_strcmp+1,w,c
 16045  001CC0  A4D8               	btfss	status,2,c
 16046  001CC2  D005               	goto	i2l2173
 16047                           
 16048                           ;LoRaWanCore.c: 336: {
 16049                           ;LoRaWanCore.c: 337: responseLoRaWan=i;
 16050  001CC4  C011  F1FE         	movff	recebeByteLoRaWan@i,_responseLoRaWan	;volatile
 16051                           
 16052                           ;LoRaWanCore.c: 338: novaMsgLoRaWan=1;
 16053  001CC8  0E01               	movlw	1
 16054  001CCA  6E59               	movwf	_novaMsgLoRaWan,c	;volatile
 16055                           
 16056                           ;LoRaWanCore.c: 339: return;
 16057  001CCC  0012               	return	
 16058  001CCE                     i2l2173:
 16059  001CCE  2A11               	incf	recebeByteLoRaWan@i,f,c
 16060  001CD0                     i2l2171:
 16061  001CD0  500E               	movf	recebeByteLoRaWan@len,w,c
 16062  001CD2  5C11               	subwf	recebeByteLoRaWan@i,w,c
 16063  001CD4  A0D8               	btfss	status,0,c
 16064  001CD6  D7E0               	goto	i2l2172
 16065                           
 16066                           ;LoRaWanCore.c: 340: }
 16067                           ;LoRaWanCore.c: 341: }
 16068                           ;LoRaWanCore.c: 342: uint8_t tamMsgRx=strlen(MSG_LORAWAN[15]);
 16069  001CD8  C3D3  F001         	movff	_MSG_LORAWAN+30,i2strlen@s
 16070  001CDC  C3D4  F002         	movff	_MSG_LORAWAN+31,i2strlen@s+1
 16071  001CE0  EC5C  F025         	call	i2_strlen	;wreg free
 16072  001CE4  5001               	movf	?i2_strlen,w,c
 16073  001CE6  6E12               	movwf	recebeByteLoRaWan@tamMsgRx,c
 16074                           
 16075                           ;LoRaWanCore.c: 343: if (strncmp(frameData,MSG_LORAWAN[15],tamMsgRx)==0)
 16076  001CE8  0E40               	movlw	low recebeByteLoRaWan@frameData
 16077  001CEA  6E01               	movwf	strncmp@s1,c
 16078  001CEC  0E04               	movlw	high recebeByteLoRaWan@frameData
 16079  001CEE  6E02               	movwf	strncmp@s1+1,c
 16080  001CF0  C3D3  F003         	movff	_MSG_LORAWAN+30,strncmp@s2
 16081  001CF4  C3D4  F004         	movff	_MSG_LORAWAN+31,strncmp@s2+1
 16082  001CF8  C012  F005         	movff	recebeByteLoRaWan@tamMsgRx,strncmp@len
 16083  001CFC  6A06               	clrf	strncmp@len+1,c
 16084  001CFE  EC25  F023         	call	_strncmp	;wreg free
 16085  001D02  5001               	movf	?_strncmp,w,c
 16086  001D04  1002               	iorwf	?_strncmp+1,w,c
 16087  001D06  A4D8               	btfss	status,2,c
 16088  001D08  D006               	goto	i2l2176
 16089                           
 16090                           ;LoRaWanCore.c: 344: {
 16091                           ;LoRaWanCore.c: 345: responseLoRaWan=15;
 16092  001D0A  0E0F               	movlw	15
 16093  001D0C  0101               	movlb	1	; () banked
 16094  001D0E  6FFE               	movwf	_responseLoRaWan& (0+255),b	;volatile
 16095                           
 16096                           ;LoRaWanCore.c: 346: novaMsgLoRaWan=1;
 16097  001D10  0E01               	movlw	1
 16098  001D12  6E59               	movwf	_novaMsgLoRaWan,c	;volatile
 16099                           
 16100                           ; BSR set to: 1
 16101                           ;LoRaWanCore.c: 347: return;
 16102  001D14  0012               	return	
 16103  001D16                     i2l2176:
 16104                           
 16105                           ;LoRaWanCore.c: 348: }
 16106                           ;LoRaWanCore.c: 351: tamMsgRx=strlen(MSG_LORAWAN[10]);
 16107                           
 16108                           ; BSR set to: 1
 16109  001D16  C3C9  F001         	movff	_MSG_LORAWAN+20,i2strlen@s
 16110  001D1A  C3CA  F002         	movff	_MSG_LORAWAN+21,i2strlen@s+1
 16111  001D1E  EC5C  F025         	call	i2_strlen	;wreg free
 16112  001D22  5001               	movf	?i2_strlen,w,c
 16113  001D24  6E12               	movwf	recebeByteLoRaWan@tamMsgRx,c
 16114                           
 16115                           ;LoRaWanCore.c: 352: if (strncmp(frameData,MSG_LORAWAN[10],tamMsgRx)==0)
 16116  001D26  0E40               	movlw	low recebeByteLoRaWan@frameData
 16117  001D28  6E01               	movwf	strncmp@s1,c
 16118  001D2A  0E04               	movlw	high recebeByteLoRaWan@frameData
 16119  001D2C  6E02               	movwf	strncmp@s1+1,c
 16120  001D2E  C3C9  F003         	movff	_MSG_LORAWAN+20,strncmp@s2
 16121  001D32  C3CA  F004         	movff	_MSG_LORAWAN+21,strncmp@s2+1
 16122  001D36  C012  F005         	movff	recebeByteLoRaWan@tamMsgRx,strncmp@len
 16123  001D3A  6A06               	clrf	strncmp@len+1,c
 16124  001D3C  EC25  F023         	call	_strncmp	;wreg free
 16125  001D40  5001               	movf	?_strncmp,w,c
 16126  001D42  1002               	iorwf	?_strncmp+1,w,c
 16127  001D44  A4D8               	btfss	status,2,c
 16128  001D46  D0A6               	goto	i2u873_40
 16129                           
 16130                           ;LoRaWanCore.c: 353: {
 16131                           ;LoRaWanCore.c: 356: uint8_t i=tamMsgRx;
 16132  001D48  C012  F013         	movff	recebeByteLoRaWan@tamMsgRx,recebeByteLoRaWan@i_4714
 16133                           
 16134                           ;LoRaWanCore.c: 357: uint8_t port=0;
 16135  001D4C  0E00               	movlw	0
 16136  001D4E  6E0F               	movwf	recebeByteLoRaWan@port,c
 16137                           
 16138                           ;LoRaWanCore.c: 359: for (;i<strlen(frameData);i++)
 16139  001D50  D027               	goto	i2l2178
 16140  001D52                     
 16141                           ;LoRaWanCore.c: 360: {
 16142                           ;LoRaWanCore.c: 361: if ((frameData[i]<'0') || (frameData[i]>'9'))
 16143  001D52  5013               	movf	recebeByteLoRaWan@i_4714,w,c
 16144  001D54  0D01               	mullw	1
 16145  001D56  0E40               	movlw	low recebeByteLoRaWan@frameData
 16146  001D58  24F3               	addwf	prodl,w,c
 16147  001D5A  6ED9               	movwf	fsr2l,c
 16148  001D5C  0E04               	movlw	high recebeByteLoRaWan@frameData
 16149  001D5E  20F4               	addwfc	prodh,w,c
 16150  001D60  6EDA               	movwf	fsr2h,c
 16151  001D62  0E2F               	movlw	47
 16152  001D64  64DF               	cpfsgt	indf2,c
 16153  001D66  D02B               	goto	i2u869_40
 16154  001D68  5013               	movf	recebeByteLoRaWan@i_4714,w,c
 16155  001D6A  0D01               	mullw	1
 16156  001D6C  0E40               	movlw	low recebeByteLoRaWan@frameData
 16157  001D6E  24F3               	addwf	prodl,w,c
 16158  001D70  6ED9               	movwf	fsr2l,c
 16159  001D72  0E04               	movlw	high recebeByteLoRaWan@frameData
 16160  001D74  20F4               	addwfc	prodh,w,c
 16161  001D76  6EDA               	movwf	fsr2h,c
 16162  001D78  0E39               	movlw	57
 16163  001D7A  64DF               	cpfsgt	indf2,c
 16164  001D7C  D001               	goto	i2l2180
 16165  001D7E  D01F               	goto	i2u869_40
 16166  001D80                     i2l2180:
 16167                           
 16168                           ;LoRaWanCore.c: 364: port*=10;
 16169  001D80  0E0A               	movlw	10
 16170  001D82  020F               	mulwf	recebeByteLoRaWan@port,c
 16171  001D84  50F3               	movf	prodl,w,c
 16172  001D86  6E0F               	movwf	recebeByteLoRaWan@port,c
 16173                           
 16174                           ;LoRaWanCore.c: 365: port+=frameData[i]-'0';
 16175  001D88  5013               	movf	recebeByteLoRaWan@i_4714,w,c
 16176  001D8A  0D01               	mullw	1
 16177  001D8C  0E40               	movlw	low recebeByteLoRaWan@frameData
 16178  001D8E  24F3               	addwf	prodl,w,c
 16179  001D90  6ED9               	movwf	fsr2l,c
 16180  001D92  0E04               	movlw	high recebeByteLoRaWan@frameData
 16181  001D94  20F4               	addwfc	prodh,w,c
 16182  001D96  6EDA               	movwf	fsr2h,c
 16183  001D98  50DF               	movf	indf2,w,c
 16184  001D9A  0FD0               	addlw	208
 16185  001D9C  260F               	addwf	recebeByteLoRaWan@port,f,c
 16186  001D9E  2A13               	incf	recebeByteLoRaWan@i_4714,f,c
 16187  001DA0                     i2l2178:
 16188  001DA0  0E40               	movlw	low recebeByteLoRaWan@frameData
 16189  001DA2  6E01               	movwf	i2strlen@s,c
 16190  001DA4  0E04               	movlw	high recebeByteLoRaWan@frameData
 16191  001DA6  6E02               	movwf	i2strlen@s+1,c
 16192  001DA8  EC5C  F025         	call	i2_strlen	;wreg free
 16193  001DAC  5013               	movf	recebeByteLoRaWan@i_4714,w,c
 16194  001DAE  6E0A               	movwf	??_recebeByteLoRaWan& (0+255),c
 16195  001DB0  6A0B               	clrf	(??_recebeByteLoRaWan+1)& (0+255),c
 16196  001DB2  5001               	movf	?i2_strlen,w,c
 16197  001DB4  5C0A               	subwf	??_recebeByteLoRaWan,w,c
 16198  001DB6  5002               	movf	?i2_strlen+1,w,c
 16199  001DB8  580B               	subwfb	??_recebeByteLoRaWan+1,w,c
 16200  001DBA  A0D8               	btfss	status,0,c
 16201  001DBC  D7CA               	goto	i2l2179
 16202  001DBE                     i2u869_40:
 16203                           
 16204                           ;LoRaWanCore.c: 366: }
 16205                           ;LoRaWanCore.c: 367: i++;
 16206  001DBE  2A13               	incf	recebeByteLoRaWan@i_4714,f,c
 16207                           
 16208                           ;LoRaWanCore.c: 369: for (;i<strlen(frameData);i+=2)
 16209  001DC0  D038               	goto	i2l2184
 16210  001DC2                     
 16211                           ;LoRaWanCore.c: 370: {
 16212                           ;LoRaWanCore.c: 371: dadosRecebidos[tamDadosRecebidos].port=port;
 16213  001DC2  505B               	movf	_tamDadosRecebidos,w,c	;volatile
 16214  001DC4  0D02               	mullw	2
 16215  001DC6  0E00               	movlw	low _dadosRecebidos
 16216  001DC8  24F3               	addwf	prodl,w,c
 16217  001DCA  6ED9               	movwf	fsr2l,c
 16218  001DCC  0E03               	movlw	high _dadosRecebidos
 16219  001DCE  20F4               	addwfc	prodh,w,c
 16220  001DD0  6EDA               	movwf	fsr2h,c
 16221  001DD2  C00F  FFDF         	movff	recebeByteLoRaWan@port,indf2
 16222                           
 16223                           ;LoRaWanCore.c: 372: dadosRecebidos[tamDadosRecebidos++].data=converter(frameData[i],fra
      +                          meData[i+1]);
 16224  001DD6  505B               	movf	_tamDadosRecebidos,w,c	;volatile
 16225  001DD8  0D02               	mullw	2
 16226  001DDA  0E01               	movlw	1
 16227  001DDC  26F3               	addwf	prodl,f,c
 16228  001DDE  0E00               	movlw	0
 16229  001DE0  22F4               	addwfc	prodh,f,c
 16230  001DE2  0E00               	movlw	low _dadosRecebidos
 16231  001DE4  24F3               	addwf	prodl,w,c
 16232  001DE6  6ED9               	movwf	fsr2l,c
 16233  001DE8  0E03               	movlw	high _dadosRecebidos
 16234  001DEA  20F4               	addwfc	prodh,w,c
 16235  001DEC  6EDA               	movwf	fsr2h,c
 16236  001DEE  5013               	movf	recebeByteLoRaWan@i_4714,w,c
 16237  001DF0  6E0A               	movwf	??_recebeByteLoRaWan& (0+255),c
 16238  001DF2  6A0B               	clrf	(??_recebeByteLoRaWan+1)& (0+255),c
 16239  001DF4  0E01               	movlw	1
 16240  001DF6  260A               	addwf	??_recebeByteLoRaWan,f,c
 16241  001DF8  0E00               	movlw	0
 16242  001DFA  220B               	addwfc	??_recebeByteLoRaWan+1,f,c
 16243  001DFC  0E40               	movlw	low recebeByteLoRaWan@frameData
 16244  001DFE  240A               	addwf	??_recebeByteLoRaWan,w,c
 16245  001E00  6EE1               	movwf	fsr1l,c
 16246  001E02  0E04               	movlw	high recebeByteLoRaWan@frameData
 16247  001E04  200B               	addwfc	??_recebeByteLoRaWan+1,w,c
 16248  001E06  6EE2               	movwf	fsr1h,c
 16249  001E08  50E7               	movf	indf1,w,c
 16250  001E0A  6E02               	movwf	converter@conv2,c
 16251  001E0C  5013               	movf	recebeByteLoRaWan@i_4714,w,c
 16252  001E0E  0D01               	mullw	1
 16253  001E10  0E40               	movlw	low recebeByteLoRaWan@frameData
 16254  001E12  24F3               	addwf	prodl,w,c
 16255  001E14  6EE1               	movwf	fsr1l,c
 16256  001E16  0E04               	movlw	high recebeByteLoRaWan@frameData
 16257  001E18  20F4               	addwfc	prodh,w,c
 16258  001E1A  6EE2               	movwf	fsr1h,c
 16259  001E1C  50E7               	movf	indf1,w,c
 16260  001E1E  ECA0  F022         	call	_converter
 16261  001E22  6EDF               	movwf	indf2,c
 16262  001E24  2A5B               	incf	_tamDadosRecebidos,f,c	;volatile
 16263                           
 16264                           ;LoRaWanCore.c: 373: if (tamDadosRecebidos>=10)
 16265  001E26  0E09               	movlw	9
 16266  001E28  645B               	cpfsgt	_tamDadosRecebidos,c	;volatile
 16267  001E2A  D001               	goto	i2l2186
 16268  001E2C  0012               	return	
 16269  001E2E                     i2l2186:
 16270  001E2E  0E02               	movlw	2
 16271  001E30  2613               	addwf	recebeByteLoRaWan@i_4714,f,c
 16272  001E32                     i2l2184:
 16273  001E32  0E40               	movlw	low recebeByteLoRaWan@frameData
 16274  001E34  6E01               	movwf	i2strlen@s,c
 16275  001E36  0E04               	movlw	high recebeByteLoRaWan@frameData
 16276  001E38  6E02               	movwf	i2strlen@s+1,c
 16277  001E3A  EC5C  F025         	call	i2_strlen	;wreg free
 16278  001E3E  5013               	movf	recebeByteLoRaWan@i_4714,w,c
 16279  001E40  6E0A               	movwf	??_recebeByteLoRaWan& (0+255),c
 16280  001E42  6A0B               	clrf	(??_recebeByteLoRaWan+1)& (0+255),c
 16281  001E44  5001               	movf	?i2_strlen,w,c
 16282  001E46  5C0A               	subwf	??_recebeByteLoRaWan,w,c
 16283  001E48  5002               	movf	?i2_strlen+1,w,c
 16284  001E4A  580B               	subwfb	??_recebeByteLoRaWan+1,w,c
 16285  001E4C  A0D8               	btfss	status,0,c
 16286  001E4E  D7B9               	goto	i2l2185
 16287                           
 16288                           ;LoRaWanCore.c: 375: }
 16289                           ;LoRaWanCore.c: 376: if (i>=strlen(frameData)){
 16290  001E50  0E40               	movlw	low recebeByteLoRaWan@frameData
 16291  001E52  6E01               	movwf	i2strlen@s,c
 16292  001E54  0E04               	movlw	high recebeByteLoRaWan@frameData
 16293  001E56  6E02               	movwf	i2strlen@s+1,c
 16294  001E58  EC5C  F025         	call	i2_strlen	;wreg free
 16295  001E5C  5013               	movf	recebeByteLoRaWan@i_4714,w,c
 16296  001E5E  6E0A               	movwf	??_recebeByteLoRaWan& (0+255),c
 16297  001E60  6A0B               	clrf	(??_recebeByteLoRaWan+1)& (0+255),c
 16298  001E62  5001               	movf	?i2_strlen,w,c
 16299  001E64  5C0A               	subwf	??_recebeByteLoRaWan,w,c
 16300  001E66  5002               	movf	?i2_strlen+1,w,c
 16301  001E68  580B               	subwfb	??_recebeByteLoRaWan+1,w,c
 16302  001E6A  B0D8               	btfsc	status,0,c
 16303  001E6C  D010               	goto	i2l2189
 16304  001E6E  D012               	goto	i2u873_40
 16305  001E70                     
 16306                           ;LoRaWanCore.c: 378: dadosRecebidos[tamDadosRecebidos].data = 0;
 16307  001E70  505B               	movf	_tamDadosRecebidos,w,c	;volatile
 16308  001E72  0D02               	mullw	2
 16309  001E74  0E01               	movlw	1
 16310  001E76  26F3               	addwf	prodl,f,c
 16311  001E78  0E00               	movlw	0
 16312  001E7A  22F4               	addwfc	prodh,f,c
 16313  001E7C  0E00               	movlw	low _dadosRecebidos
 16314  001E7E  24F3               	addwf	prodl,w,c
 16315  001E80  6ED9               	movwf	fsr2l,c
 16316  001E82  0E03               	movlw	high _dadosRecebidos
 16317  001E84  20F4               	addwfc	prodh,w,c
 16318  001E86  6EDA               	movwf	fsr2h,c
 16319  001E88  0E00               	movlw	0
 16320  001E8A  6EDF               	movwf	indf2,c
 16321  001E8C  2A5B               	incf	_tamDadosRecebidos,f,c	;volatile
 16322  001E8E                     i2l2189:
 16323  001E8E  0E0A               	movlw	10
 16324  001E90  645B               	cpfsgt	_tamDadosRecebidos,c	;volatile
 16325  001E92  D7EE               	goto	i2l2190
 16326  001E94                     i2u873_40:
 16327                           
 16328                           ;LoRaWanCore.c: 379: }
 16329                           ;LoRaWanCore.c: 380: }
 16330                           ;LoRaWanCore.c: 381: }
 16331                           ;LoRaWanCore.c: 382: }
 16332                           ;LoRaWanCore.c: 383: if ((tamFrame>=100) || (b==0x0A))
 16333  001E94  0E64               	movlw	100
 16334  001E96  605A               	cpfslt	_tamFrame,c	;volatile
 16335  001E98  D004               	goto	i2u875_40
 16336  001E9A  0E0A               	movlw	10
 16337  001E9C  1810               	xorwf	recebeByteLoRaWan@b,w,c
 16338  001E9E  A4D8               	btfss	status,2,c
 16339  001EA0  0012               	return	
 16340  001EA2                     i2u875_40:
 16341                           
 16342                           ;LoRaWanCore.c: 384: {
 16343                           ;LoRaWanCore.c: 385: tamFrame=0;
 16344  001EA2  0E00               	movlw	0
 16345  001EA4  6E5A               	movwf	_tamFrame,c	;volatile
 16346  001EA6  0012               	return	
 16347  001EA8                     __end_of_recebeByteLoRaWan:
 16348                           	opt stack 0
 16349                           pclatu	equ	0xFFB
 16350                           pclath	equ	0xFFA
 16351                           tblptru	equ	0xFF8
 16352                           tblptrh	equ	0xFF7
 16353                           tblptrl	equ	0xFF6
 16354                           tablat	equ	0xFF5
 16355                           prodh	equ	0xFF4
 16356                           prodl	equ	0xFF3
 16357                           intcon	equ	0xFF2
 16358                           indf0	equ	0xFEF
 16359                           postinc0	equ	0xFEE
 16360                           fsr0h	equ	0xFEA
 16361                           fsr0l	equ	0xFE9
 16362                           wreg	equ	0xFE8
 16363                           indf1	equ	0xFE7
 16364                           postdec1	equ	0xFE5
 16365                           fsr1h	equ	0xFE2
 16366                           fsr1l	equ	0xFE1
 16367                           indf2	equ	0xFDF
 16368                           postinc2	equ	0xFDE
 16369                           postdec2	equ	0xFDD
 16370                           plusw2	equ	0xFDB
 16371                           fsr2h	equ	0xFDA
 16372                           fsr2l	equ	0xFD9
 16373                           status	equ	0xFD8
 16374                           
 16375 ;; *************** function i2_strlen *****************
 16376 ;; Defined at:
 16377 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strlen.c"
 16378 ;; Parameters:    Size  Location     Type
 16379 ;;  s               2    0[COMRAM] PTR const unsigned char 
 16380 ;;		 -> recebeByteLoRaWan@frameData(100), SYS(5), MAC(5), TxLoRaWan@comando(200), 
 16381 ;;		 -> DataRate@comando(200), SetBandWidth@comando(200), SetSpreadingFactor@comando(200), MacSave@comando(200), 
 16382 ;;		 -> AdaptiveDataRate@comando(200), SetChannelLoRaWan@comando(200), MAC_JOIN_OTAA(10), SYS_RESET(6), 
 16383 ;;		 -> STR_20(16), STR_19(7), STR_18(14), STR_17(8), 
 16384 ;;		 -> STR_16(8), STR_15(10), STR_14(17), STR_13(11), 
 16385 ;;		 -> STR_12(5), STR_11(32), STR_10(7), STR_9(11), 
 16386 ;;		 -> STR_8(11), STR_7(14), STR_6(3), 
 16387 ;; Auto vars:     Size  Location     Type
 16388 ;;  strlen          2    4[COMRAM] PTR const unsigned char 
 16389 ;;		 -> recebeByteLoRaWan@frameData(100), SYS(5), MAC(5), TxLoRaWan@comando(200), 
 16390 ;;		 -> DataRate@comando(200), SetBandWidth@comando(200), SetSpreadingFactor@comando(200), MacSave@comando(200), 
 16391 ;;		 -> AdaptiveDataRate@comando(200), SetChannelLoRaWan@comando(200), MAC_JOIN_OTAA(10), SYS_RESET(6), 
 16392 ;;		 -> STR_20(16), STR_19(7), STR_18(14), STR_17(8), 
 16393 ;;		 -> STR_16(8), STR_15(10), STR_14(17), STR_13(11), 
 16394 ;;		 -> STR_12(5), STR_11(32), STR_10(7), STR_9(11), 
 16395 ;;		 -> STR_8(11), STR_7(14), STR_6(3), 
 16396 ;; Return value:  Size  Location     Type
 16397 ;;                  2    0[COMRAM] unsigned int 
 16398 ;; Registers used:
 16399 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 16400 ;; Tracked objects:
 16401 ;;		On entry : 0/0
 16402 ;;		On exit  : 0/0
 16403 ;;		Unchanged: 0/0
 16404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16405 ;;      Params:         2       0       0       0       0       0       0       0       0
 16406 ;;      Locals:         2       0       0       0       0       0       0       0       0
 16407 ;;      Temps:          2       0       0       0       0       0       0       0       0
 16408 ;;      Totals:         6       0       0       0       0       0       0       0       0
 16409 ;;Total ram usage:        6 bytes
 16410 ;; Hardware stack levels used:    1
 16411 ;; This function calls:
 16412 ;;		Nothing
 16413 ;; This function is called by:
 16414 ;;		_recebeByteLoRaWan
 16415 ;; This function uses a non-reentrant model
 16416 ;;
 16417                           
 16418                           	psect	text56
 16419  004AB8                     __ptext56:
 16420                           	opt stack 0
 16421  004AB8                     i2_strlen:
 16422                           	opt stack 23
 16423                           
 16424                           ;incstack = 0
 16425  004AB8  C001  F005         	movff	i2strlen@s,i2strlen@cp
 16426  004ABC  C002  F006         	movff	i2strlen@s+1,i2strlen@cp+1
 16427  004AC0  D002               	goto	i2l3078
 16428  004AC2  4A05               	infsnz	i2strlen@cp,f,c
 16429  004AC4  2A06               	incf	i2strlen@cp+1,f,c
 16430  004AC6                     i2l3078:
 16431  004AC6  C005  FFF6         	movff	i2strlen@cp,tblptrl
 16432  004ACA  C006  FFF7         	movff	i2strlen@cp+1,tblptrh
 16433  004ACE  6AF8               	clrf	tblptru,c
 16434  004AD0  0E07               	movlw	(high __ramtop+-1)
 16435  004AD2  64F7               	cpfsgt	tblptrh,c
 16436  004AD4  D003               	bra	i2u857_47
 16437  004AD6  0008               	tblrd		*
 16438  004AD8  50F5               	movf	tablat,w,c
 16439  004ADA  D005               	bra	i2u857_40
 16440  004ADC                     i2u857_47:
 16441  004ADC  CFF6 FFE9          	movff	tblptrl,fsr0l
 16442  004AE0  CFF7 FFEA          	movff	tblptrh,fsr0h
 16443  004AE4  50EF               	movf	indf0,w,c
 16444  004AE6                     i2u857_40:
 16445  004AE6  0900               	iorlw	0
 16446  004AE8  A4D8               	btfss	status,2,c
 16447  004AEA  D7EB               	goto	i2l3079
 16448  004AEC  C001  F003         	movff	i2strlen@s,??i2_strlen
 16449  004AF0  C002  F004         	movff	i2strlen@s+1,??i2_strlen+1
 16450  004AF4  1E03               	comf	??i2_strlen,f,c
 16451  004AF6  1E04               	comf	??i2_strlen+1,f,c
 16452  004AF8  4A03               	infsnz	??i2_strlen,f,c
 16453  004AFA  2A04               	incf	??i2_strlen+1,f,c
 16454  004AFC  5005               	movf	i2strlen@cp,w,c
 16455  004AFE  2403               	addwf	??i2_strlen,w,c
 16456  004B00  6E01               	movwf	?i2_strlen,c
 16457  004B02  5006               	movf	i2strlen@cp+1,w,c
 16458  004B04  2004               	addwfc	??i2_strlen+1,w,c
 16459  004B06  6E02               	movwf	?i2_strlen+1,c
 16460  004B08  0012               	return	
 16461  004B0A                     __end_ofi2_strlen:
 16462                           	opt stack 0
 16463                           pclatu	equ	0xFFB
 16464                           pclath	equ	0xFFA
 16465                           tblptru	equ	0xFF8
 16466                           tblptrh	equ	0xFF7
 16467                           tblptrl	equ	0xFF6
 16468                           tablat	equ	0xFF5
 16469                           prodh	equ	0xFF4
 16470                           prodl	equ	0xFF3
 16471                           intcon	equ	0xFF2
 16472                           indf0	equ	0xFEF
 16473                           postinc0	equ	0xFEE
 16474                           fsr0h	equ	0xFEA
 16475                           fsr0l	equ	0xFE9
 16476                           wreg	equ	0xFE8
 16477                           indf1	equ	0xFE7
 16478                           postdec1	equ	0xFE5
 16479                           fsr1h	equ	0xFE2
 16480                           fsr1l	equ	0xFE1
 16481                           indf2	equ	0xFDF
 16482                           postinc2	equ	0xFDE
 16483                           postdec2	equ	0xFDD
 16484                           plusw2	equ	0xFDB
 16485                           fsr2h	equ	0xFDA
 16486                           fsr2l	equ	0xFD9
 16487                           status	equ	0xFD8
 16488                           
 16489 ;; *************** function _strncmp *****************
 16490 ;; Defined at:
 16491 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strncmp.c"
 16492 ;; Parameters:    Size  Location     Type
 16493 ;;  s1              2    0[COMRAM] PTR const unsigned char 
 16494 ;;		 -> recebeByteLoRaWan@frameData(100), 
 16495 ;;  s2              2    2[COMRAM] PTR const unsigned char 
 16496 ;;		 -> STR_20(16), STR_19(7), STR_18(14), STR_17(8), 
 16497 ;;		 -> STR_16(8), STR_15(10), STR_14(17), STR_13(11), 
 16498 ;;		 -> STR_12(5), STR_11(32), STR_10(7), STR_9(11), 
 16499 ;;		 -> STR_8(11), STR_7(14), STR_6(3), 
 16500 ;;  len             2    4[COMRAM] unsigned int 
 16501 ;; Auto vars:     Size  Location     Type
 16502 ;;		None
 16503 ;; Return value:  Size  Location     Type
 16504 ;;                  2    0[COMRAM] int 
 16505 ;; Registers used:
 16506 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 16507 ;; Tracked objects:
 16508 ;;		On entry : 0/0
 16509 ;;		On exit  : 0/0
 16510 ;;		Unchanged: 0/0
 16511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16512 ;;      Params:         6       0       0       0       0       0       0       0       0
 16513 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16514 ;;      Temps:          3       0       0       0       0       0       0       0       0
 16515 ;;      Totals:         9       0       0       0       0       0       0       0       0
 16516 ;;Total ram usage:        9 bytes
 16517 ;; Hardware stack levels used:    1
 16518 ;; This function calls:
 16519 ;;		Nothing
 16520 ;; This function is called by:
 16521 ;;		_recebeByteLoRaWan
 16522 ;; This function uses a non-reentrant model
 16523 ;;
 16524                           
 16525                           	psect	text57
 16526  00464A                     __ptext57:
 16527                           	opt stack 0
 16528  00464A                     _strncmp:
 16529                           	opt stack 23
 16530                           
 16531                           ;incstack = 0
 16532  00464A  D033               	goto	i2l3084
 16533  00464C                     i2l9003:
 16534  00464C  C001  FFD9         	movff	strncmp@s1,fsr2l
 16535  004650  C002  FFDA         	movff	strncmp@s1+1,fsr2h
 16536  004654  50DF               	movf	indf2,w,c
 16537  004656  B4D8               	btfsc	status,2,c
 16538  004658  D00F               	goto	i2u844_40
 16539  00465A  C001  FFD9         	movff	strncmp@s1,fsr2l
 16540  00465E  C002  FFDA         	movff	strncmp@s1+1,fsr2h
 16541  004662  50DF               	movf	indf2,w,c
 16542  004664  6E07               	movwf	??_strncmp& (0+255),c
 16543  004666  C003  FFF6         	movff	strncmp@s2,tblptrl
 16544  00466A  C004  FFF7         	movff	strncmp@s2+1,tblptrh
 16545  00466E                     	if	0	;tblptru may be non-zero
 16546  00466E                     	endif
 16547  00466E                     	if	0	;tblptru may be non-zero
 16548  00466E                     	endif
 16549  00466E  0008               	tblrd		*
 16550  004670  50F5               	movf	tablat,w,c
 16551  004672  1807               	xorwf	??_strncmp,w,c
 16552  004674  B4D8               	btfsc	status,2,c
 16553  004676  D019               	goto	i2l3086
 16554  004678                     i2u844_40:
 16555  004678  C003  FFF6         	movff	strncmp@s2,tblptrl
 16556  00467C  C004  FFF7         	movff	strncmp@s2+1,tblptrh
 16557  004680                     	if	0	;tblptru may be non-zero
 16558  004680                     	endif
 16559  004680                     	if	0	;tblptru may be non-zero
 16560  004680                     	endif
 16561  004680  0008               	tblrd		*
 16562  004682  50F5               	movf	tablat,w,c
 16563  004684  6E07               	movwf	??_strncmp& (0+255),c
 16564  004686  6A08               	clrf	(??_strncmp+1)& (0+255),c
 16565  004688  1E07               	comf	??_strncmp,f,c
 16566  00468A  1E08               	comf	??_strncmp+1,f,c
 16567  00468C  4A07               	infsnz	??_strncmp,f,c
 16568  00468E  2A08               	incf	??_strncmp+1,f,c
 16569  004690  C001  FFD9         	movff	strncmp@s1,fsr2l
 16570  004694  C002  FFDA         	movff	strncmp@s1+1,fsr2h
 16571  004698  50DF               	movf	indf2,w,c
 16572  00469A  6E09               	movwf	(??_strncmp+2)& (0+255),c
 16573  00469C  5009               	movf	??_strncmp+2,w,c
 16574  00469E  2407               	addwf	??_strncmp,w,c
 16575  0046A0  6E01               	movwf	?_strncmp,c
 16576  0046A2  0E00               	movlw	0
 16577  0046A4  2008               	addwfc	??_strncmp+1,w,c
 16578  0046A6  6E02               	movwf	?_strncmp+1,c
 16579  0046A8  0012               	return	
 16580  0046AA                     i2l3086:
 16581  0046AA  4A01               	infsnz	strncmp@s1,f,c
 16582  0046AC  2A02               	incf	strncmp@s1+1,f,c
 16583  0046AE  4A03               	infsnz	strncmp@s2,f,c
 16584  0046B0  2A04               	incf	strncmp@s2+1,f,c
 16585  0046B2                     i2l3084:
 16586  0046B2  0605               	decf	strncmp@len,f,c
 16587  0046B4  A0D8               	btfss	status,0,c
 16588  0046B6  0606               	decf	strncmp@len+1,f,c
 16589  0046B8  2805               	incf	strncmp@len,w,c
 16590  0046BA  E1C8               	bnz	i2l9003
 16591  0046BC  2806               	incf	strncmp@len+1,w,c
 16592  0046BE  A4D8               	btfss	status,2,c
 16593  0046C0  D7C5               	goto	i2l3085
 16594  0046C2  0E00               	movlw	0
 16595  0046C4  6E02               	movwf	?_strncmp+1,c
 16596  0046C6  0E00               	movlw	0
 16597  0046C8  6E01               	movwf	?_strncmp,c
 16598  0046CA  0012               	return	
 16599  0046CC                     __end_of_strncmp:
 16600                           	opt stack 0
 16601                           pclatu	equ	0xFFB
 16602                           pclath	equ	0xFFA
 16603                           tblptru	equ	0xFF8
 16604                           tblptrh	equ	0xFF7
 16605                           tblptrl	equ	0xFF6
 16606                           tablat	equ	0xFF5
 16607                           prodh	equ	0xFF4
 16608                           prodl	equ	0xFF3
 16609                           intcon	equ	0xFF2
 16610                           indf0	equ	0xFEF
 16611                           postinc0	equ	0xFEE
 16612                           fsr0h	equ	0xFEA
 16613                           fsr0l	equ	0xFE9
 16614                           wreg	equ	0xFE8
 16615                           indf1	equ	0xFE7
 16616                           postdec1	equ	0xFE5
 16617                           fsr1h	equ	0xFE2
 16618                           fsr1l	equ	0xFE1
 16619                           indf2	equ	0xFDF
 16620                           postinc2	equ	0xFDE
 16621                           postdec2	equ	0xFDD
 16622                           plusw2	equ	0xFDB
 16623                           fsr2h	equ	0xFDA
 16624                           fsr2l	equ	0xFD9
 16625                           status	equ	0xFD8
 16626                           
 16627 ;; *************** function _strcpy *****************
 16628 ;; Defined at:
 16629 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strcpy.c"
 16630 ;; Parameters:    Size  Location     Type
 16631 ;;  to              2    0[COMRAM] PTR unsigned char 
 16632 ;;		 -> frameBuffer(200), 
 16633 ;;  from            2    2[COMRAM] PTR const unsigned char 
 16634 ;;		 -> recebeByteLoRaWan@frameData(100), 
 16635 ;; Auto vars:     Size  Location     Type
 16636 ;;  cp              2    4[COMRAM] PTR unsigned char 
 16637 ;;		 -> frameBuffer(200), 
 16638 ;; Return value:  Size  Location     Type
 16639 ;;                  2    0[COMRAM] PTR unsigned char 
 16640 ;; Registers used:
 16641 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 16642 ;; Tracked objects:
 16643 ;;		On entry : 0/0
 16644 ;;		On exit  : 0/0
 16645 ;;		Unchanged: 0/0
 16646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16647 ;;      Params:         4       0       0       0       0       0       0       0       0
 16648 ;;      Locals:         2       0       0       0       0       0       0       0       0
 16649 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16650 ;;      Totals:         6       0       0       0       0       0       0       0       0
 16651 ;;Total ram usage:        6 bytes
 16652 ;; Hardware stack levels used:    1
 16653 ;; This function calls:
 16654 ;;		Nothing
 16655 ;; This function is called by:
 16656 ;;		_recebeByteLoRaWan
 16657 ;; This function uses a non-reentrant model
 16658 ;;
 16659                           
 16660                           	psect	text58
 16661  004FAC                     __ptext58:
 16662                           	opt stack 0
 16663  004FAC                     _strcpy:
 16664                           	opt stack 23
 16665                           
 16666                           ;incstack = 0
 16667  004FAC  C001  F005         	movff	strcpy@to,strcpy@cp
 16668  004FB0  C002  F006         	movff	strcpy@to+1,strcpy@cp+1
 16669  004FB4  D004               	goto	i2l3072
 16670  004FB6  4A05               	infsnz	strcpy@cp,f,c
 16671  004FB8  2A06               	incf	strcpy@cp+1,f,c
 16672  004FBA  4A03               	infsnz	strcpy@from,f,c
 16673  004FBC  2A04               	incf	strcpy@from+1,f,c
 16674  004FBE                     i2l3072:
 16675  004FBE  C003  FFD9         	movff	strcpy@from,fsr2l
 16676  004FC2  C004  FFDA         	movff	strcpy@from+1,fsr2h
 16677  004FC6  C005  FFE1         	movff	strcpy@cp,fsr1l
 16678  004FCA  C006  FFE2         	movff	strcpy@cp+1,fsr1h
 16679  004FCE  CFDF FFE7          	movff	indf2,indf1
 16680  004FD2  50E7               	movf	indf1,w,c
 16681  004FD4  B4D8               	btfsc	status,2,c
 16682  004FD6  0012               	return	
 16683  004FD8  D7EE               	goto	i2l3073
 16684  004FDA                     __end_of_strcpy:
 16685                           	opt stack 0
 16686                           pclatu	equ	0xFFB
 16687                           pclath	equ	0xFFA
 16688                           tblptru	equ	0xFF8
 16689                           tblptrh	equ	0xFF7
 16690                           tblptrl	equ	0xFF6
 16691                           tablat	equ	0xFF5
 16692                           prodh	equ	0xFF4
 16693                           prodl	equ	0xFF3
 16694                           intcon	equ	0xFF2
 16695                           indf0	equ	0xFEF
 16696                           postinc0	equ	0xFEE
 16697                           fsr0h	equ	0xFEA
 16698                           fsr0l	equ	0xFE9
 16699                           wreg	equ	0xFE8
 16700                           indf1	equ	0xFE7
 16701                           postdec1	equ	0xFE5
 16702                           fsr1h	equ	0xFE2
 16703                           fsr1l	equ	0xFE1
 16704                           indf2	equ	0xFDF
 16705                           postinc2	equ	0xFDE
 16706                           postdec2	equ	0xFDD
 16707                           plusw2	equ	0xFDB
 16708                           fsr2h	equ	0xFDA
 16709                           fsr2l	equ	0xFD9
 16710                           status	equ	0xFD8
 16711                           
 16712 ;; *************** function _strcmp *****************
 16713 ;; Defined at:
 16714 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strcmp.c"
 16715 ;; Parameters:    Size  Location     Type
 16716 ;;  s1              2    0[COMRAM] PTR const unsigned char 
 16717 ;;		 -> recebeByteLoRaWan@frameData(100), 
 16718 ;;  s2              2    2[COMRAM] PTR const unsigned char 
 16719 ;;		 -> STR_20(16), STR_19(7), STR_18(14), STR_17(8), 
 16720 ;;		 -> STR_16(8), STR_15(10), STR_14(17), STR_13(11), 
 16721 ;;		 -> STR_12(5), STR_11(32), STR_10(7), STR_9(11), 
 16722 ;;		 -> STR_8(11), STR_7(14), STR_6(3), 
 16723 ;; Auto vars:     Size  Location     Type
 16724 ;;  r               1    5[COMRAM] char 
 16725 ;; Return value:  Size  Location     Type
 16726 ;;                  2    0[COMRAM] int 
 16727 ;; Registers used:
 16728 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 16729 ;; Tracked objects:
 16730 ;;		On entry : 0/0
 16731 ;;		On exit  : 0/0
 16732 ;;		Unchanged: 0/0
 16733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16734 ;;      Params:         4       0       0       0       0       0       0       0       0
 16735 ;;      Locals:         1       0       0       0       0       0       0       0       0
 16736 ;;      Temps:          1       0       0       0       0       0       0       0       0
 16737 ;;      Totals:         6       0       0       0       0       0       0       0       0
 16738 ;;Total ram usage:        6 bytes
 16739 ;; Hardware stack levels used:    1
 16740 ;; This function calls:
 16741 ;;		Nothing
 16742 ;; This function is called by:
 16743 ;;		_recebeByteLoRaWan
 16744 ;; This function uses a non-reentrant model
 16745 ;;
 16746                           
 16747                           	psect	text59
 16748  004B5A                     __ptext59:
 16749                           	opt stack 0
 16750  004B5A                     _strcmp:
 16751                           	opt stack 23
 16752                           
 16753                           ;incstack = 0
 16754  004B5A  D004               	goto	i2l3064
 16755  004B5C  4A01               	infsnz	strcmp@s1,f,c
 16756  004B5E  2A02               	incf	strcmp@s1+1,f,c
 16757  004B60  4A03               	infsnz	strcmp@s2,f,c
 16758  004B62  2A04               	incf	strcmp@s2+1,f,c
 16759  004B64                     i2l3064:
 16760  004B64  C001  FFD9         	movff	strcmp@s1,fsr2l
 16761  004B68  C002  FFDA         	movff	strcmp@s1+1,fsr2h
 16762  004B6C  50DF               	movf	indf2,w,c
 16763  004B6E  6E05               	movwf	??_strcmp& (0+255),c
 16764  004B70  C003  FFF6         	movff	strcmp@s2,tblptrl
 16765  004B74  C004  FFF7         	movff	strcmp@s2+1,tblptrh
 16766  004B78                     	if	0	;tblptru may be non-zero
 16767  004B78                     	endif
 16768  004B78                     	if	0	;tblptru may be non-zero
 16769  004B78                     	endif
 16770  004B78  0008               	tblrd		*
 16771  004B7A  50F5               	movf	tablat,w,c
 16772  004B7C  0800               	sublw	0
 16773  004B7E  2405               	addwf	??_strcmp,w,c
 16774  004B80  6E06               	movwf	strcmp@r,c
 16775  004B82  5006               	movf	strcmp@r,w,c
 16776  004B84  A4D8               	btfss	status,2,c
 16777  004B86  D007               	goto	i2u842_40
 16778  004B88  C001  FFD9         	movff	strcmp@s1,fsr2l
 16779  004B8C  C002  FFDA         	movff	strcmp@s1+1,fsr2h
 16780  004B90  50DF               	movf	indf2,w,c
 16781  004B92  A4D8               	btfss	status,2,c
 16782  004B94  D7E3               	goto	i2l3065
 16783  004B96                     i2u842_40:
 16784  004B96  5006               	movf	strcmp@r,w,c
 16785  004B98  6E01               	movwf	?_strcmp,c
 16786  004B9A  6A02               	clrf	?_strcmp+1,c
 16787  004B9C  BE01               	btfsc	?_strcmp,7,c
 16788  004B9E  0602               	decf	?_strcmp+1,f,c
 16789  004BA0  0012               	return	
 16790  004BA2                     __end_of_strcmp:
 16791                           	opt stack 0
 16792                           pclatu	equ	0xFFB
 16793                           pclath	equ	0xFFA
 16794                           tblptru	equ	0xFF8
 16795                           tblptrh	equ	0xFF7
 16796                           tblptrl	equ	0xFF6
 16797                           tablat	equ	0xFF5
 16798                           prodh	equ	0xFF4
 16799                           prodl	equ	0xFF3
 16800                           intcon	equ	0xFF2
 16801                           indf0	equ	0xFEF
 16802                           postinc0	equ	0xFEE
 16803                           fsr0h	equ	0xFEA
 16804                           fsr0l	equ	0xFE9
 16805                           wreg	equ	0xFE8
 16806                           indf1	equ	0xFE7
 16807                           postdec1	equ	0xFE5
 16808                           fsr1h	equ	0xFE2
 16809                           fsr1l	equ	0xFE1
 16810                           indf2	equ	0xFDF
 16811                           postinc2	equ	0xFDE
 16812                           postdec2	equ	0xFDD
 16813                           plusw2	equ	0xFDB
 16814                           fsr2h	equ	0xFDA
 16815                           fsr2l	equ	0xFD9
 16816                           status	equ	0xFD8
 16817                           
 16818 ;; *************** function _converter *****************
 16819 ;; Defined at:
 16820 ;;		line 360 in file "XBeeCore.c"
 16821 ;; Parameters:    Size  Location     Type
 16822 ;;  conv1           1    wreg     unsigned char 
 16823 ;;  conv2           1    1[COMRAM] unsigned char 
 16824 ;; Auto vars:     Size  Location     Type
 16825 ;;  conv1           1    5[COMRAM] unsigned char 
 16826 ;;  aux2            1    4[COMRAM] unsigned char 
 16827 ;;  aux             1    3[COMRAM] unsigned char 
 16828 ;;  resul           1    2[COMRAM] unsigned char 
 16829 ;; Return value:  Size  Location     Type
 16830 ;;                  1    wreg      unsigned char 
 16831 ;; Registers used:
 16832 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16833 ;; Tracked objects:
 16834 ;;		On entry : 0/0
 16835 ;;		On exit  : 0/0
 16836 ;;		Unchanged: 0/0
 16837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16838 ;;      Params:         1       0       0       0       0       0       0       0       0
 16839 ;;      Locals:         4       0       0       0       0       0       0       0       0
 16840 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16841 ;;      Totals:         5       0       0       0       0       0       0       0       0
 16842 ;;Total ram usage:        5 bytes
 16843 ;; Hardware stack levels used:    1
 16844 ;; Hardware stack levels required when called:    1
 16845 ;; This function calls:
 16846 ;;		_toupper
 16847 ;; This function is called by:
 16848 ;;		_recebeByteLoRaWan
 16849 ;;		_send
 16850 ;; This function uses a non-reentrant model
 16851 ;;
 16852                           
 16853                           	psect	text60
 16854  004540                     __ptext60:
 16855                           	opt stack 0
 16856  004540                     _converter:
 16857                           	opt stack 22
 16858                           
 16859                           ;incstack = 0
 16860                           ;converter@conv1 stored from wreg
 16861  004540  6E06               	movwf	converter@conv1,c
 16862                           
 16863                           ;XBeeCore.c: 362: uint8_t aux=0;
 16864  004542  0E00               	movlw	0
 16865  004544  6E04               	movwf	converter@aux,c
 16866                           
 16867                           ;XBeeCore.c: 363: uint8_t aux2=0;
 16868  004546  0E00               	movlw	0
 16869  004548  6E05               	movwf	converter@aux2,c
 16870                           
 16871                           ;XBeeCore.c: 364: uint8_t resul=0;
 16872  00454A  0E00               	movlw	0
 16873  00454C  6E03               	movwf	converter@resul,c
 16874                           
 16875                           ;XBeeCore.c: 367: conv1=toupper(conv1);
 16876  00454E  5006               	movf	converter@conv1,w,c
 16877  004550  ECB6  F028         	call	_toupper
 16878  004554  6E06               	movwf	converter@conv1,c
 16879                           
 16880                           ;XBeeCore.c: 368: conv2=toupper(conv2);
 16881  004556  5002               	movf	converter@conv2,w,c
 16882  004558  ECB6  F028         	call	_toupper
 16883  00455C  6E02               	movwf	converter@conv2,c
 16884                           
 16885                           ;XBeeCore.c: 370: if ((conv1>='0') && (conv1<='9'))
 16886  00455E  0E2F               	movlw	47
 16887  004560  6406               	cpfsgt	converter@conv1,c
 16888  004562  D006               	goto	i2l1336
 16889  004564  0E3A               	movlw	58
 16890  004566  6006               	cpfslt	converter@conv1,c
 16891  004568  D003               	goto	i2l1336
 16892                           
 16893                           ;XBeeCore.c: 371: {
 16894                           ;XBeeCore.c: 372: aux=conv1-'0';
 16895  00456A  5006               	movf	converter@conv1,w,c
 16896  00456C  0FD0               	addlw	208
 16897  00456E  D008               	goto	L11
 16898  004570                     i2l1336:
 16899                           
 16900                           ;XBeeCore.c: 374: else if ((conv1>='A') && (conv1<='F'))
 16901  004570  0E40               	movlw	64
 16902  004572  6406               	cpfsgt	converter@conv1,c
 16903  004574  D006               	goto	i2l1338
 16904  004576  0E47               	movlw	71
 16905  004578  6006               	cpfslt	converter@conv1,c
 16906  00457A  D003               	goto	i2l1338
 16907                           
 16908                           ;XBeeCore.c: 375: {
 16909                           ;XBeeCore.c: 376: aux=conv1-'A'+10;
 16910  00457C  5006               	movf	converter@conv1,w,c
 16911  00457E  0FC9               	addlw	201
 16912  004580                     L11:
 16913  004580  6E04               	movwf	converter@aux,c
 16914  004582                     i2l1338:
 16915                           
 16916                           ;XBeeCore.c: 377: }
 16917                           ;XBeeCore.c: 379: if ((conv2>='0') && (conv2<='9'))
 16918  004582  0E2F               	movlw	47
 16919  004584  6402               	cpfsgt	converter@conv2,c
 16920  004586  D006               	goto	i2l1339
 16921  004588  0E3A               	movlw	58
 16922  00458A  6002               	cpfslt	converter@conv2,c
 16923  00458C  D003               	goto	i2l1339
 16924                           
 16925                           ;XBeeCore.c: 380: {
 16926                           ;XBeeCore.c: 381: aux2=conv2-'0';
 16927  00458E  5002               	movf	converter@conv2,w,c
 16928  004590  0FD0               	addlw	208
 16929  004592  D00A               	goto	L13
 16930  004594                     i2l1339:
 16931                           
 16932                           ;XBeeCore.c: 383: else if ((conv2>='A') && (conv2<='F'))
 16933  004594  0E40               	movlw	64
 16934  004596  6402               	cpfsgt	converter@conv2,c
 16935  004598  D006               	goto	i2l1341
 16936  00459A  0E47               	movlw	71
 16937  00459C  6002               	cpfslt	converter@conv2,c
 16938  00459E  D003               	goto	i2l1341
 16939                           
 16940                           ;XBeeCore.c: 384: {
 16941                           ;XBeeCore.c: 385: aux2=conv2-'A'+10;
 16942  0045A0  5002               	movf	converter@conv2,w,c
 16943  0045A2  0FC9               	addlw	201
 16944  0045A4  D001               	goto	L13
 16945  0045A6                     i2l1341:
 16946                           
 16947                           ;XBeeCore.c: 387: else
 16948                           ;XBeeCore.c: 388: {
 16949                           ;XBeeCore.c: 389: aux2=100;
 16950  0045A6  0E64               	movlw	100
 16951  0045A8                     L13:
 16952  0045A8  6E05               	movwf	converter@aux2,c
 16953                           
 16954                           ;XBeeCore.c: 390: }
 16955                           ;XBeeCore.c: 392: if(aux2==100)
 16956  0045AA  0E64               	movlw	100
 16957  0045AC  1805               	xorwf	converter@aux2,w,c
 16958  0045AE  A4D8               	btfss	status,2,c
 16959  0045B0  D003               	goto	i2l1343
 16960                           
 16961                           ;XBeeCore.c: 393: {
 16962                           ;XBeeCore.c: 394: resul=aux;
 16963  0045B2  C004  F003         	movff	converter@aux,converter@resul
 16964                           
 16965                           ;XBeeCore.c: 395: }
 16966  0045B6  D005               	goto	i2l1344
 16967  0045B8                     i2l1343:
 16968                           
 16969                           ;XBeeCore.c: 396: else
 16970                           ;XBeeCore.c: 397: {
 16971                           ;XBeeCore.c: 398: resul=(uint8_t)((aux*16)+aux2);
 16972  0045B8  5004               	movf	converter@aux,w,c
 16973  0045BA  0D10               	mullw	16
 16974  0045BC  50F3               	movf	prodl,w,c
 16975  0045BE  2405               	addwf	converter@aux2,w,c
 16976  0045C0  6E03               	movwf	converter@resul,c
 16977  0045C2                     i2l1344:
 16978                           
 16979                           ;XBeeCore.c: 399: }
 16980                           ;XBeeCore.c: 400: return resul;
 16981  0045C2  5003               	movf	converter@resul,w,c
 16982  0045C4  0012               	return	
 16983  0045C6                     __end_of_converter:
 16984                           	opt stack 0
 16985                           pclatu	equ	0xFFB
 16986                           pclath	equ	0xFFA
 16987                           tblptru	equ	0xFF8
 16988                           tblptrh	equ	0xFF7
 16989                           tblptrl	equ	0xFF6
 16990                           tablat	equ	0xFF5
 16991                           prodh	equ	0xFF4
 16992                           prodl	equ	0xFF3
 16993                           intcon	equ	0xFF2
 16994                           indf0	equ	0xFEF
 16995                           postinc0	equ	0xFEE
 16996                           fsr0h	equ	0xFEA
 16997                           fsr0l	equ	0xFE9
 16998                           wreg	equ	0xFE8
 16999                           indf1	equ	0xFE7
 17000                           postdec1	equ	0xFE5
 17001                           fsr1h	equ	0xFE2
 17002                           fsr1l	equ	0xFE1
 17003                           indf2	equ	0xFDF
 17004                           postinc2	equ	0xFDE
 17005                           postdec2	equ	0xFDD
 17006                           plusw2	equ	0xFDB
 17007                           fsr2h	equ	0xFDA
 17008                           fsr2l	equ	0xFD9
 17009                           status	equ	0xFD8
 17010                           
 17011 ;; *************** function _toupper *****************
 17012 ;; Defined at:
 17013 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\toupper.c"
 17014 ;; Parameters:    Size  Location     Type
 17015 ;;  c               1    wreg     unsigned char 
 17016 ;; Auto vars:     Size  Location     Type
 17017 ;;  c               1    0[COMRAM] unsigned char 
 17018 ;; Return value:  Size  Location     Type
 17019 ;;                  1    wreg      unsigned char 
 17020 ;; Registers used:
 17021 ;;		wreg, status,2, status,0
 17022 ;; Tracked objects:
 17023 ;;		On entry : 0/0
 17024 ;;		On exit  : 0/0
 17025 ;;		Unchanged: 0/0
 17026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17027 ;;      Params:         0       0       0       0       0       0       0       0       0
 17028 ;;      Locals:         1       0       0       0       0       0       0       0       0
 17029 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17030 ;;      Totals:         1       0       0       0       0       0       0       0       0
 17031 ;;Total ram usage:        1 bytes
 17032 ;; Hardware stack levels used:    1
 17033 ;; This function calls:
 17034 ;;		Nothing
 17035 ;; This function is called by:
 17036 ;;		_converter
 17037 ;; This function uses a non-reentrant model
 17038 ;;
 17039                           
 17040                           	psect	text61
 17041  00516C                     __ptext61:
 17042                           	opt stack 0
 17043  00516C                     _toupper:
 17044                           	opt stack 22
 17045                           
 17046                           ;incstack = 0
 17047                           ;toupper@c stored from wreg
 17048  00516C  6E01               	movwf	toupper@c,c
 17049  00516E  0E7B               	movlw	123
 17050  005170  6001               	cpfslt	toupper@c,c
 17051  005172  D004               	goto	i2l3093
 17052  005174  0E60               	movlw	96
 17053  005176  6401               	cpfsgt	toupper@c,c
 17054  005178  D001               	goto	i2l3093
 17055  00517A  9A01               	bcf	toupper@c,5,c
 17056  00517C                     i2l3093:
 17057  00517C  5001               	movf	toupper@c,w,c
 17058  00517E  0012               	return	
 17059  005180                     __end_of_toupper:
 17060                           	opt stack 0
 17061                           pclatu	equ	0xFFB
 17062                           pclath	equ	0xFFA
 17063                           tblptru	equ	0xFF8
 17064                           tblptrh	equ	0xFF7
 17065                           tblptrl	equ	0xFF6
 17066                           tablat	equ	0xFF5
 17067                           prodh	equ	0xFF4
 17068                           prodl	equ	0xFF3
 17069                           intcon	equ	0xFF2
 17070                           indf0	equ	0xFEF
 17071                           postinc0	equ	0xFEE
 17072                           fsr0h	equ	0xFEA
 17073                           fsr0l	equ	0xFE9
 17074                           wreg	equ	0xFE8
 17075                           indf1	equ	0xFE7
 17076                           postdec1	equ	0xFE5
 17077                           fsr1h	equ	0xFE2
 17078                           fsr1l	equ	0xFE1
 17079                           indf2	equ	0xFDF
 17080                           postinc2	equ	0xFDE
 17081                           postdec2	equ	0xFDD
 17082                           plusw2	equ	0xFDB
 17083                           fsr2h	equ	0xFDA
 17084                           fsr2l	equ	0xFD9
 17085                           status	equ	0xFD8
 17086                           
 17087 ;; *************** function _getch *****************
 17088 ;; Defined at:
 17089 ;;		line 52 in file "uart/uart.c"
 17090 ;; Parameters:    Size  Location     Type
 17091 ;;		None
 17092 ;; Auto vars:     Size  Location     Type
 17093 ;;  data            1    2[COMRAM] unsigned char 
 17094 ;;  RC              1    1[COMRAM] unsigned char 
 17095 ;; Return value:  Size  Location     Type
 17096 ;;                  1    wreg      unsigned char 
 17097 ;; Registers used:
 17098 ;;		wreg, status,2, status,0
 17099 ;; Tracked objects:
 17100 ;;		On entry : 0/0
 17101 ;;		On exit  : 0/0
 17102 ;;		Unchanged: 0/0
 17103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17104 ;;      Params:         0       0       0       0       0       0       0       0       0
 17105 ;;      Locals:         2       0       0       0       0       0       0       0       0
 17106 ;;      Temps:          1       0       0       0       0       0       0       0       0
 17107 ;;      Totals:         3       0       0       0       0       0       0       0       0
 17108 ;;Total ram usage:        3 bytes
 17109 ;; Hardware stack levels used:    1
 17110 ;; This function calls:
 17111 ;;		Nothing
 17112 ;; This function is called by:
 17113 ;;		_SYS_InterruptHigh
 17114 ;;		_flush
 17115 ;; This function uses a non-reentrant model
 17116 ;;
 17117                           
 17118                           	psect	text62
 17119  0050CE                     __ptext62:
 17120                           	opt stack 0
 17121  0050CE                     _getch:
 17122                           	opt stack 24
 17123                           
 17124                           ;uart.c: 54: uint8_t RC;
 17125                           ;uart.c: 55: char data;
 17126                           ;uart.c: 57: if (!RCIF)
 17127                           
 17128                           ;incstack = 0
 17129  0050CE  BA9E               	btfsc	3998,5,c	;volatile
 17130  0050D0  D002               	goto	i2l1107
 17131                           
 17132                           ;uart.c: 58: return 0;
 17133  0050D2  0E00               	movlw	0
 17134  0050D4  0012               	return	
 17135  0050D6                     i2l1107:
 17136                           
 17137                           ;uart.c: 60: RC=RCSTA;
 17138  0050D6  CFAB F002          	movff	4011,getch@RC	;volatile
 17139                           
 17140                           ;uart.c: 61: data=RCREG;
 17141  0050DA  CFAE F003          	movff	4014,getch@data	;volatile
 17142                           
 17143                           ;uart.c: 64: if ((RC & 0x06)!=0)
 17144  0050DE  C002  F001         	movff	getch@RC,??_getch
 17145  0050E2  0E06               	movlw	6
 17146  0050E4  1601               	andwf	??_getch,f,c
 17147  0050E6  B4D8               	btfsc	status,2,c
 17148  0050E8  D003               	goto	i2l1109
 17149                           
 17150                           ;uart.c: 65: {
 17151                           ;uart.c: 66: RCSTAbits.CREN=0;
 17152  0050EA  98AB               	bcf	4011,4,c	;volatile
 17153                           
 17154                           ;uart.c: 67: __nop();
 17155  0050EC  F000               	nop	
 17156                           
 17157                           ;uart.c: 68: RCSTAbits.CREN=1;
 17158  0050EE  88AB               	bsf	4011,4,c	;volatile
 17159  0050F0                     i2l1109:
 17160                           
 17161                           ;uart.c: 69: }
 17162                           ;uart.c: 71: return data;
 17163  0050F0  5003               	movf	getch@data,w,c
 17164  0050F2  0012               	return	
 17165  0050F4                     __end_of_getch:
 17166                           	opt stack 0
 17167                           pclatu	equ	0xFFB
 17168                           pclath	equ	0xFFA
 17169                           tblptru	equ	0xFF8
 17170                           tblptrh	equ	0xFF7
 17171                           tblptrl	equ	0xFF6
 17172                           tablat	equ	0xFF5
 17173                           prodh	equ	0xFF4
 17174                           prodl	equ	0xFF3
 17175                           intcon	equ	0xFF2
 17176                           indf0	equ	0xFEF
 17177                           postinc0	equ	0xFEE
 17178                           fsr0h	equ	0xFEA
 17179                           fsr0l	equ	0xFE9
 17180                           wreg	equ	0xFE8
 17181                           indf1	equ	0xFE7
 17182                           postdec1	equ	0xFE5
 17183                           fsr1h	equ	0xFE2
 17184                           fsr1l	equ	0xFE1
 17185                           indf2	equ	0xFDF
 17186                           postinc2	equ	0xFDE
 17187                           postdec2	equ	0xFDD
 17188                           plusw2	equ	0xFDB
 17189                           fsr2h	equ	0xFDA
 17190                           fsr2l	equ	0xFD9
 17191                           status	equ	0xFD8
 17192                           
 17193 ;; *************** function _USBDeviceTasks *****************
 17194 ;; Defined at:
 17195 ;;		line 477 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 17196 ;; Parameters:    Size  Location     Type
 17197 ;;		None
 17198 ;; Auto vars:     Size  Location     Type
 17199 ;;  i               1   27[COMRAM] unsigned char 
 17200 ;; Return value:  Size  Location     Type
 17201 ;;                  1    wreg      void 
 17202 ;; Registers used:
 17203 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17204 ;; Tracked objects:
 17205 ;;		On entry : 0/0
 17206 ;;		On exit  : 0/0
 17207 ;;		Unchanged: 0/0
 17208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17209 ;;      Params:         0       0       0       0       0       0       0       0       0
 17210 ;;      Locals:         1       0       0       0       0       0       0       0       0
 17211 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17212 ;;      Totals:         1       0       0       0       0       0       0       0       0
 17213 ;;Total ram usage:        1 bytes
 17214 ;; Hardware stack levels used:    1
 17215 ;; Hardware stack levels required when called:    8
 17216 ;; This function calls:
 17217 ;;		_USBCtrlEPAllowStatusStage
 17218 ;;		_USBCtrlEPService
 17219 ;;		_USBIncrement1msInternalTimers
 17220 ;;		_USBStallHandler
 17221 ;;		_USBSuspend
 17222 ;;		_USBWakeFromSuspend
 17223 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 17224 ;;		i2_USBDeviceInit
 17225 ;; This function is called by:
 17226 ;;		_SYS_InterruptHigh
 17227 ;; This function uses a non-reentrant model
 17228 ;;
 17229                           
 17230                           	psect	text63
 17231  002AB8                     __ptext63:
 17232                           	opt stack 0
 17233  002AB8                     _USBDeviceTasks:
 17234                           	opt stack 16
 17235                           
 17236                           ;usb_device.c: 479: uint8_t i;
 17237                           ;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
 17238                           
 17239                           ;incstack = 0
 17240  002AB8  0458               	decf	_USBDeviceState,w,c	;volatile
 17241  002ABA  B4D8               	btfsc	status,2,c
 17242                           
 17243                           ;usb_device.c: 591: {
 17244                           ;usb_device.c: 601: if(!UCONbits.SE0)
 17245  002ABC  BA6D               	btfsc	3949,5,c	;volatile
 17246  002ABE  D006               	goto	i2l368
 17247                           
 17248                           ;usb_device.c: 602: {
 17249                           ;usb_device.c: 608: {UIR = 0;};
 17250  002AC0  0E00               	movlw	0
 17251  002AC2  6E68               	movwf	3944,c	;volatile
 17252                           
 17253                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
 17254  002AC4  8069               	bsf	3945,0,c	;volatile
 17255                           
 17256                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
 17257  002AC6  8869               	bsf	3945,4,c	;volatile
 17258                           
 17259                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
 17260  002AC8  0E02               	movlw	2
 17261  002ACA  6E58               	movwf	_USBDeviceState,c	;volatile
 17262  002ACC                     i2l368:
 17263                           
 17264                           ;usb_device.c: 617: }
 17265                           ;usb_device.c: 618: }
 17266                           ;usb_device.c: 634: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 17267  002ACC  B468               	btfsc	3944,2,c	;volatile
 17268  002ACE  A469               	btfss	3945,2,c	;volatile
 17269  002AD0  D003               	goto	i2l369
 17270                           
 17271                           ;usb_device.c: 635: {
 17272                           ;usb_device.c: 636: (UIR &= 0xFB);
 17273  002AD2  9468               	bcf	3944,2,c	;volatile
 17274                           
 17275                           ;usb_device.c: 640: USBWakeFromSuspend();
 17276  002AD4  EC71  F027         	call	_USBWakeFromSuspend	;wreg free
 17277  002AD8                     i2l369:
 17278                           
 17279                           ;usb_device.c: 642: }
 17280                           ;usb_device.c: 647: if(UCONbits.SUSPND==1)
 17281  002AD8  A26D               	btfss	3949,1,c	;volatile
 17282  002ADA  D002               	goto	i2l370
 17283                           
 17284                           ;usb_device.c: 648: {
 17285                           ;usb_device.c: 649: {PIR2bits.USBIF = 0;};
 17286  002ADC  9AA1               	bcf	4001,5,c	;volatile
 17287                           
 17288                           ;usb_device.c: 650: return;
 17289  002ADE  0012               	return	
 17290  002AE0                     i2l370:
 17291                           
 17292                           ;usb_device.c: 651: }
 17293                           ;usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
 17294  002AE0  B068               	btfsc	3944,0,c	;volatile
 17295  002AE2  A069               	btfss	3945,0,c	;volatile
 17296  002AE4  D006               	goto	i2l372
 17297                           
 17298                           ;usb_device.c: 664: {
 17299                           ;usb_device.c: 665: USBDeviceInit();
 17300  002AE6  EC23  F014         	call	i2_USBDeviceInit	;wreg free
 17301                           
 17302                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
 17303  002AEA  8AA0               	bsf	4000,5,c	;volatile
 17304                           
 17305                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
 17306  002AEC  0E04               	movlw	4
 17307  002AEE  6E58               	movwf	_USBDeviceState,c	;volatile
 17308                           
 17309                           ;usb_device.c: 681: (UIR &= 0xFE);
 17310  002AF0  9068               	bcf	3944,0,c	;volatile
 17311  002AF2                     i2l372:
 17312                           
 17313                           ;usb_device.c: 682: }
 17314                           ;usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 17315  002AF2  B868               	btfsc	3944,4,c	;volatile
 17316  002AF4  A869               	btfss	3945,4,c	;volatile
 17317  002AF6  D002               	goto	i2l373
 17318                           
 17319                           ;usb_device.c: 688: {
 17320                           ;usb_device.c: 694: USBSuspend();
 17321  002AF8  ECED  F027         	call	_USBSuspend	;wreg free
 17322  002AFC                     i2l373:
 17323                           
 17324                           ;usb_device.c: 696: }
 17325                           ;usb_device.c: 708: if(UIRbits.SOFIF)
 17326  002AFC  AC68               	btfss	3944,6,c	;volatile
 17327  002AFE  D01A               	goto	i2l377
 17328                           
 17329                           ;usb_device.c: 709: {
 17330                           ;usb_device.c: 711: if(UIEbits.SOFIE)
 17331  002B00  AC69               	btfss	3945,6,c	;volatile
 17332  002B02  D00E               	goto	i2l375
 17333                           
 17334                           ;usb_device.c: 712: {
 17335                           ;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 17336  002B04  0E00               	movlw	0
 17337  002B06  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 17338  002B08  0E73               	movlw	115
 17339  002B0A  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 17340  002B0C  0E00               	movlw	0
 17341  002B0E  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 17342  002B10  0E00               	movlw	0
 17343  002B12  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 17344  002B14  0E00               	movlw	0
 17345  002B16  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 17346  002B18  0E01               	movlw	1
 17347  002B1A  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 17348  002B1C  EC03  F025         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 17349  002B20                     i2l375:
 17350                           
 17351                           ;usb_device.c: 714: }
 17352                           ;usb_device.c: 715: (UIR &= 0xBF);
 17353  002B20  9C68               	bcf	3944,6,c	;volatile
 17354                           
 17355                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
 17356  002B22  EC8B  F028         	call	_USBIncrement1msInternalTimers	;wreg free
 17357                           
 17358                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 17359  002B26  5054               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 17360  002B28  A4D8               	btfss	status,2,c
 17361                           
 17362                           ;usb_device.c: 736: {
 17363                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 17364  002B2A  0654               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 17365                           
 17366                           ;usb_device.c: 738: }
 17367                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 17368  002B2C  5054               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 17369  002B2E  B4D8               	btfsc	status,2,c
 17370                           
 17371                           ;usb_device.c: 745: {
 17372                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 17373  002B30  ECE5  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
 17374  002B34                     i2l377:
 17375                           
 17376                           ;usb_device.c: 747: }
 17377                           ;usb_device.c: 749: }
 17378                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
 17379  002B34  BA68               	btfsc	3944,5,c	;volatile
 17380  002B36  AA69               	btfss	3945,5,c	;volatile
 17381  002B38  D002               	goto	i2l378
 17382                           
 17383                           ;usb_device.c: 752: {
 17384                           ;usb_device.c: 753: USBStallHandler();
 17385  002B3A  EC9E  F026         	call	_USBStallHandler	;wreg free
 17386  002B3E                     i2l378:
 17387                           
 17388                           ;usb_device.c: 754: }
 17389                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 17390  002B3E  B268               	btfsc	3944,1,c	;volatile
 17391  002B40  A269               	btfss	3945,1,c	;volatile
 17392  002B42  D00F               	goto	i2l379
 17393                           
 17394                           ;usb_device.c: 757: {
 17395                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 17396  002B44  0E7F               	movlw	127
 17397  002B46  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 17398  002B48  680D               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 17399  002B4A  0E00               	movlw	0
 17400  002B4C  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 17401  002B4E  0E00               	movlw	0
 17402  002B50  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 17403  002B52  0E00               	movlw	0
 17404  002B54  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 17405  002B56  0E01               	movlw	1
 17406  002B58  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 17407  002B5A  EC03  F025         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 17408                           
 17409                           ;usb_device.c: 759: {UEIR = 0;};
 17410  002B5E  0E00               	movlw	0
 17411  002B60  6E6A               	movwf	3946,c	;volatile
 17412  002B62                     i2l379:
 17413                           
 17414                           ;usb_device.c: 767: }
 17415                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 17416  002B62  0E04               	movlw	4
 17417  002B64  6058               	cpfslt	_USBDeviceState,c	;volatile
 17418  002B66  D002               	goto	i2l380
 17419                           
 17420                           ;usb_device.c: 775: {
 17421                           ;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 17422  002B68  9AA1               	bcf	4001,5,c	;volatile
 17423                           
 17424                           ;usb_device.c: 777: return;
 17425  002B6A  0012               	return	
 17426  002B6C                     i2l380:
 17427                           
 17428                           ;usb_device.c: 778: }
 17429                           ;usb_device.c: 783: if(UIEbits.TRNIE)
 17430  002B6C  A669               	btfss	3945,3,c	;volatile
 17431  002B6E  D039               	goto	i2u899_40
 17432                           
 17433                           ;usb_device.c: 784: {
 17434                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
 17435  002B70  0E00               	movlw	0
 17436  002B72  6E1C               	movwf	USBDeviceTasks@i,c
 17437  002B74                     i2l9343:
 17438  002B74  0E03               	movlw	3
 17439  002B76  641C               	cpfsgt	USBDeviceTasks@i,c
 17440  002B78  D001               	goto	i2l382
 17441  002B7A  D033               	goto	i2u899_40
 17442  002B7C                     i2l382:
 17443                           
 17444                           ;usb_device.c: 786: {
 17445                           ;usb_device.c: 787: if(UIRbits.TRNIF)
 17446  002B7C  A668               	btfss	3944,3,c	;volatile
 17447  002B7E  D031               	goto	i2u899_40
 17448                           
 17449                           ;usb_device.c: 788: {
 17450                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
 17451  002B80  CF6C F05D          	movff	3948,_USTATcopy	;volatile
 17452                           
 17453                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 17454  002B84  305D               	rrcf	_USTATcopy,w,c	;volatile
 17455  002B86  32E8               	rrcf	wreg,f,c
 17456  002B88  32E8               	rrcf	wreg,f,c
 17457  002B8A  0B0F               	andlw	15
 17458  002B8C  6E55               	movwf	_endpoint_number,c	;volatile
 17459                           
 17460                           ;usb_device.c: 793: (UIR &= 0xF7);
 17461  002B8E  9668               	bcf	3944,3,c	;volatile
 17462                           
 17463                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 17464  002B90  B45D               	btfsc	_USTATcopy,2,c	;volatile
 17465  002B92  D007               	goto	i2l385
 17466                           
 17467                           ;usb_device.c: 799: {
 17468                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 17469  002B94  5055               	movf	_endpoint_number,w,c	;volatile
 17470  002B96  0D01               	mullw	1
 17471  002B98  0ED8               	movlw	low _ep_data_out
 17472  002B9A  24F3               	addwf	prodl,w,c
 17473  002B9C  6ED9               	movwf	fsr2l,c
 17474  002B9E  0E02               	movlw	high _ep_data_out
 17475  002BA0  D006               	goto	L14
 17476  002BA2                     i2l385:
 17477                           
 17478                           ;usb_device.c: 802: else
 17479                           ;usb_device.c: 803: {
 17480                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 17481                           
 17482                           ; BSR set to: 2
 17483  002BA2  5055               	movf	_endpoint_number,w,c	;volatile
 17484  002BA4  0D01               	mullw	1
 17485  002BA6  0EDB               	movlw	low _ep_data_in
 17486  002BA8  24F3               	addwf	prodl,w,c
 17487  002BAA  6ED9               	movwf	fsr2l,c
 17488  002BAC  0E02               	movlw	high _ep_data_in
 17489  002BAE                     L14:
 17490  002BAE  20F4               	addwfc	prodh,w,c
 17491  002BB0  6EDA               	movwf	fsr2h,c
 17492  002BB2  0102               	movlb	2	; () banked
 17493  002BB4  70DF               	btg	indf2,0,c
 17494                           
 17495                           ; BSR set to: 2
 17496                           ;usb_device.c: 805: }
 17497                           ;usb_device.c: 810: if(endpoint_number == 0)
 17498                           
 17499                           ; BSR set to: 2
 17500  002BB6  5055               	movf	_endpoint_number,w,c	;volatile
 17501  002BB8  A4D8               	btfss	status,2,c
 17502  002BBA  D003               	goto	i2l387
 17503                           
 17504                           ; BSR set to: 2
 17505                           ;usb_device.c: 811: {
 17506                           ;usb_device.c: 812: USBCtrlEPService();
 17507  002BBC  EC37  F021         	call	_USBCtrlEPService	;wreg free
 17508                           
 17509                           ;usb_device.c: 813: }
 17510  002BC0  D00E               	goto	i2l389
 17511  002BC2                     i2l387:
 17512                           
 17513                           ;usb_device.c: 814: else
 17514                           ;usb_device.c: 815: {
 17515                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 17516  002BC2  0E00               	movlw	0
 17517  002BC4  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 17518  002BC6  0E72               	movlw	114
 17519  002BC8  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 17520  002BCA  0E5D               	movlw	low _USTATcopy
 17521  002BCC  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 17522  002BCE  0E00               	movlw	high _USTATcopy
 17523  002BD0  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 17524  002BD2  0E00               	movlw	0
 17525  002BD4  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 17526  002BD6  0E00               	movlw	0
 17527  002BD8  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 17528  002BDA  EC03  F025         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 17529  002BDE                     i2l389:
 17530  002BDE  2A1C               	incf	USBDeviceTasks@i,f,c
 17531  002BE0  D7C9               	goto	i2l9343
 17532  002BE2                     i2u899_40:
 17533                           
 17534                           ;usb_device.c: 822: }
 17535                           ;usb_device.c: 823: }
 17536                           ;usb_device.c: 824: }
 17537                           ;usb_device.c: 826: {PIR2bits.USBIF = 0;};
 17538  002BE2  9AA1               	bcf	4001,5,c	;volatile
 17539  002BE4  0012               	return		;funcret
 17540  002BE6                     __end_of_USBDeviceTasks:
 17541                           	opt stack 0
 17542                           pclatu	equ	0xFFB
 17543                           pclath	equ	0xFFA
 17544                           tblptru	equ	0xFF8
 17545                           tblptrh	equ	0xFF7
 17546                           tblptrl	equ	0xFF6
 17547                           tablat	equ	0xFF5
 17548                           prodh	equ	0xFF4
 17549                           prodl	equ	0xFF3
 17550                           intcon	equ	0xFF2
 17551                           indf0	equ	0xFEF
 17552                           postinc0	equ	0xFEE
 17553                           fsr0h	equ	0xFEA
 17554                           fsr0l	equ	0xFE9
 17555                           wreg	equ	0xFE8
 17556                           indf1	equ	0xFE7
 17557                           postdec1	equ	0xFE5
 17558                           fsr1h	equ	0xFE2
 17559                           fsr1l	equ	0xFE1
 17560                           indf2	equ	0xFDF
 17561                           postinc2	equ	0xFDE
 17562                           postdec2	equ	0xFDD
 17563                           plusw2	equ	0xFDB
 17564                           fsr2h	equ	0xFDA
 17565                           fsr2l	equ	0xFD9
 17566                           status	equ	0xFD8
 17567                           
 17568 ;; *************** function i2_USBDeviceInit *****************
 17569 ;; Defined at:
 17570 ;;		line 277 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 17571 ;; Parameters:    Size  Location     Type
 17572 ;;		None
 17573 ;; Auto vars:     Size  Location     Type
 17574 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 17575 ;; Return value:  Size  Location     Type
 17576 ;;                  1    wreg      void 
 17577 ;; Registers used:
 17578 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17579 ;; Tracked objects:
 17580 ;;		On entry : 0/0
 17581 ;;		On exit  : 0/0
 17582 ;;		Unchanged: 0/0
 17583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17584 ;;      Params:         0       0       0       0       0       0       0       0       0
 17585 ;;      Locals:         1       0       0       0       0       0       0       0       0
 17586 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17587 ;;      Totals:         1       0       0       0       0       0       0       0       0
 17588 ;;Total ram usage:        1 bytes
 17589 ;; Hardware stack levels used:    1
 17590 ;; Hardware stack levels required when called:    1
 17591 ;; This function calls:
 17592 ;;		i2_memset
 17593 ;; This function is called by:
 17594 ;;		_USBDeviceTasks
 17595 ;; This function uses a non-reentrant model
 17596 ;;
 17597                           
 17598                           	psect	text64
 17599  002846                     __ptext64:
 17600                           	opt stack 0
 17601  002846                     i2_USBDeviceInit:
 17602                           	opt stack 22
 17603                           
 17604                           ;usb_device.c: 279: uint8_t i;
 17605                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 17606                           
 17607                           ;incstack = 0
 17608  002846  9AA0               	bcf	4000,5,c	;volatile
 17609                           
 17610                           ;usb_device.c: 285: ;
 17611                           ;usb_device.c: 288: {UEIR = 0;};
 17612  002848  0E00               	movlw	0
 17613  00284A  6E6A               	movwf	3946,c	;volatile
 17614                           
 17615                           ;usb_device.c: 291: {UIR = 0;};
 17616  00284C  0E00               	movlw	0
 17617  00284E  6E68               	movwf	3944,c	;volatile
 17618                           
 17619                           ;usb_device.c: 294: UEP0 = 0;
 17620  002850  0E00               	movlw	0
 17621  002852  6E70               	movwf	3952,c	;volatile
 17622                           
 17623                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 17624  002854  0E71               	movlw	113
 17625  002856  6E01               	movwf	i2memset@p1,c
 17626  002858  0E0F               	movlw	15
 17627  00285A  6E02               	movwf	i2memset@p1+1,c
 17628  00285C  0E00               	movlw	0
 17629  00285E  6E04               	movwf	i2memset@c+1,c
 17630  002860  0E00               	movlw	0
 17631  002862  6E03               	movwf	i2memset@c,c
 17632  002864  0E00               	movlw	0
 17633  002866  6E06               	movwf	i2memset@n+1,c
 17634  002868  0E02               	movlw	2
 17635  00286A  6E05               	movwf	i2memset@n,c
 17636  00286C  EC04  F028         	call	i2_memset	;wreg free
 17637                           
 17638                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 17639  002870  0E16               	movlw	22
 17640  002872  6E6F               	movwf	3951,c	;volatile
 17641  002874  0E9F               	movlw	159
 17642  002876  6E6B               	movwf	3947,c	;volatile
 17643  002878  0E7B               	movlw	123
 17644  00287A  6E69               	movwf	3945,c	;volatile
 17645                           
 17646                           ;usb_device.c: 301: ;
 17647                           ;usb_device.c: 304: ;
 17648                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
 17649  00287C  0E00               	movlw	0
 17650  00287E  6E09               	movwf	i2USBDeviceInit@i,c
 17651  002880                     i2l9091:
 17652  002880  0E0B               	movlw	11
 17653  002882  6409               	cpfsgt	i2USBDeviceInit@i,c
 17654  002884  D001               	goto	i2l358
 17655  002886  D00E               	goto	i2u853_40
 17656  002888                     i2l358:
 17657                           
 17658                           ;usb_device.c: 308: {
 17659                           ;usb_device.c: 309: BDT[i].Val = 0x00;
 17660  002888  5009               	movf	i2USBDeviceInit@i,w,c
 17661  00288A  0D04               	mullw	4
 17662  00288C  0E00               	movlw	0
 17663  00288E  24F3               	addwf	prodl,w,c
 17664  002890  6ED9               	movwf	fsr2l,c
 17665  002892  0E04               	movlw	4
 17666  002894  20F4               	addwfc	prodh,w,c
 17667  002896  6EDA               	movwf	fsr2h,c
 17668  002898  6ADE               	clrf	postinc2,c
 17669  00289A  6ADE               	clrf	postinc2,c
 17670  00289C  6ADE               	clrf	postinc2,c
 17671  00289E  6ADD               	clrf	postdec2,c
 17672  0028A0  2A09               	incf	i2USBDeviceInit@i,f,c
 17673  0028A2  D7EE               	goto	i2l9091
 17674  0028A4                     i2u853_40:
 17675                           
 17676                           ;usb_device.c: 310: }
 17677                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
 17678  0028A4  8C6D               	bsf	3949,6,c	;volatile
 17679                           
 17680                           ;usb_device.c: 316: UADDR = 0x00;
 17681  0028A6  0E00               	movlw	0
 17682  0028A8  6E6E               	movwf	3950,c	;volatile
 17683                           
 17684                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 17685  0028AA  986D               	bcf	3949,4,c	;volatile
 17686                           
 17687                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 17688  0028AC  9C6D               	bcf	3949,6,c	;volatile
 17689  0028AE                     
 17690                           ;usb_device.c: 326: {
 17691                           ;usb_device.c: 327: (UIR &= 0xF7);
 17692  0028AE  9668               	bcf	3944,3,c	;volatile
 17693                           
 17694                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 17695  0028B0  0E00               	movlw	0
 17696  0028B2  6E43               	movwf	_inPipes+3,c	;volatile
 17697                           
 17698                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 17699  0028B4  0E00               	movlw	0
 17700  0028B6  6E3B               	movwf	_outPipes+3,c	;volatile
 17701                           
 17702                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 17703  0028B8  0E00               	movlw	0
 17704  0028BA  6E3D               	movwf	_outPipes+5,c	;volatile
 17705  0028BC  0E00               	movlw	0
 17706  0028BE  6E3C               	movwf	_outPipes+4,c	;volatile
 17707                           
 17708                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 17709  0028C0  B668               	btfsc	3944,3,c	;volatile
 17710  0028C2  D7F5               	goto	i2l360
 17711                           
 17712                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 17713  0028C4  0E01               	movlw	1
 17714  0028C6  0101               	movlb	1	; () banked
 17715  0028C8  6FFA               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 17716                           
 17717                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 17718  0028CA  0E01               	movlw	1
 17719  0028CC  6FF9               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 17720                           
 17721                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 17722  0028CE  0E00               	movlw	0
 17723  0028D0  6FF8               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 17724                           
 17725                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 17726  0028D2  0E00               	movlw	0
 17727  0028D4  6FF7               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 17728                           
 17729                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 17730  0028D6  0E00               	movlw	0
 17731  0028D8  6FFC               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 17732                           
 17733                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 17734  0028DA  0E00               	movlw	0
 17735  0028DC  6E09               	movwf	i2USBDeviceInit@i,c
 17736  0028DE                     i2l9119:
 17737                           
 17738                           ; BSR set to: 1
 17739  0028DE  0E02               	movlw	2
 17740  0028E0  6409               	cpfsgt	i2USBDeviceInit@i,c
 17741  0028E2  D001               	goto	i2l362
 17742  0028E4  D02E               	goto	i2u856_40
 17743  0028E6                     i2l362:
 17744                           
 17745                           ;usb_device.c: 346: {
 17746                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 17747                           
 17748                           ; BSR set to: 1
 17749  0028E6  5009               	movf	i2USBDeviceInit@i,w,c
 17750  0028E8  0D02               	mullw	2
 17751  0028EA  0E46               	movlw	low _pBDTEntryIn
 17752  0028EC  24F3               	addwf	prodl,w,c
 17753  0028EE  6ED9               	movwf	fsr2l,c
 17754  0028F0  0E00               	movlw	high _pBDTEntryIn
 17755  0028F2  20F4               	addwfc	prodh,w,c
 17756  0028F4  6EDA               	movwf	fsr2h,c
 17757  0028F6  0E00               	movlw	0
 17758  0028F8  6EDE               	movwf	postinc2,c
 17759  0028FA  0E00               	movlw	0
 17760  0028FC  6EDD               	movwf	postdec2,c
 17761                           
 17762                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 17763  0028FE  5009               	movf	i2USBDeviceInit@i,w,c
 17764  002900  0D02               	mullw	2
 17765  002902  0EC4               	movlw	low _pBDTEntryOut
 17766  002904  24F3               	addwf	prodl,w,c
 17767  002906  6ED9               	movwf	fsr2l,c
 17768  002908  0E02               	movlw	high _pBDTEntryOut
 17769  00290A  20F4               	addwfc	prodh,w,c
 17770  00290C  6EDA               	movwf	fsr2h,c
 17771  00290E  0E00               	movlw	0
 17772  002910  6EDE               	movwf	postinc2,c
 17773  002912  0E00               	movlw	0
 17774  002914  6EDD               	movwf	postdec2,c
 17775                           
 17776                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 17777  002916  5009               	movf	i2USBDeviceInit@i,w,c
 17778  002918  0D01               	mullw	1
 17779  00291A  0EDB               	movlw	low _ep_data_in
 17780  00291C  24F3               	addwf	prodl,w,c
 17781  00291E  6ED9               	movwf	fsr2l,c
 17782  002920  0E02               	movlw	high _ep_data_in
 17783  002922  20F4               	addwfc	prodh,w,c
 17784  002924  6EDA               	movwf	fsr2h,c
 17785  002926  0E00               	movlw	0
 17786  002928  6EDF               	movwf	indf2,c
 17787                           
 17788                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 17789  00292A  5009               	movf	i2USBDeviceInit@i,w,c
 17790  00292C  0D01               	mullw	1
 17791  00292E  0ED8               	movlw	low _ep_data_out
 17792  002930  24F3               	addwf	prodl,w,c
 17793  002932  6ED9               	movwf	fsr2l,c
 17794  002934  0E02               	movlw	high _ep_data_out
 17795  002936  20F4               	addwfc	prodh,w,c
 17796  002938  6EDA               	movwf	fsr2h,c
 17797  00293A  0E00               	movlw	0
 17798  00293C  6EDF               	movwf	indf2,c
 17799  00293E  2A09               	incf	i2USBDeviceInit@i,f,c
 17800  002940  D7CE               	goto	i2l9119
 17801  002942                     i2u856_40:
 17802                           
 17803                           ;usb_device.c: 351: }
 17804                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 17805  002942  0E08               	movlw	8
 17806  002944  6E46               	movwf	_pBDTEntryIn,c
 17807  002946  0E04               	movlw	4
 17808  002948  6E47               	movwf	_pBDTEntryIn+1,c
 17809                           
 17810                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 17811  00294A  0E16               	movlw	22
 17812  00294C  6E70               	movwf	3952,c	;volatile
 17813                           
 17814                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 17815  00294E  0E04               	movlw	4
 17816  002950  0104               	movlb	4	; () banked
 17817  002952  6F03               	movwf	3,b	;volatile
 17818  002954  0E30               	movlw	48
 17819  002956  6F02               	movwf	2,b	;volatile
 17820                           
 17821                           ; BSR set to: 4
 17822                           ;usb_device.c: 359: BDT[0].CNT = 8;
 17823  002958  0E08               	movlw	8
 17824  00295A  6F01               	movwf	1,b	;volatile
 17825                           
 17826                           ; BSR set to: 4
 17827                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 17828  00295C  0E04               	movlw	4
 17829  00295E  6F00               	movwf	0,b	;volatile
 17830                           
 17831                           ; BSR set to: 4
 17832                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 17833  002960  8F00               	bsf	0,7,b	;volatile
 17834                           
 17835                           ; BSR set to: 4
 17836                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 17837  002962  0E00               	movlw	0
 17838  002964  6E5E               	movwf	_USBActiveConfiguration,c	;volatile
 17839                           
 17840                           ; BSR set to: 4
 17841                           ;usb_device.c: 366: USB1msTickCount = 0;
 17842  002966  0E00               	movlw	0
 17843  002968  0102               	movlb	2	; () banked
 17844  00296A  6FCA               	movwf	_USB1msTickCount& (0+255),b	;volatile
 17845  00296C  0E00               	movlw	0
 17846  00296E  6FCB               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
 17847  002970  0E00               	movlw	0
 17848  002972  6FCC               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
 17849  002974  0E00               	movlw	0
 17850  002976  6FCD               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
 17851                           
 17852                           ; BSR set to: 2
 17853                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 17854  002978  0E00               	movlw	0
 17855  00297A  0101               	movlb	1	; () banked
 17856  00297C  6FF6               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 17857                           
 17858                           ; BSR set to: 1
 17859                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 17860  00297E  0E00               	movlw	0
 17861  002980  6E58               	movwf	_USBDeviceState,c	;volatile
 17862                           
 17863                           ; BSR set to: 1
 17864  002982  0012               	return		;funcret
 17865  002984                     __end_ofi2_USBDeviceInit:
 17866                           	opt stack 0
 17867                           pclatu	equ	0xFFB
 17868                           pclath	equ	0xFFA
 17869                           tblptru	equ	0xFF8
 17870                           tblptrh	equ	0xFF7
 17871                           tblptrl	equ	0xFF6
 17872                           tablat	equ	0xFF5
 17873                           prodh	equ	0xFF4
 17874                           prodl	equ	0xFF3
 17875                           intcon	equ	0xFF2
 17876                           indf0	equ	0xFEF
 17877                           postinc0	equ	0xFEE
 17878                           fsr0h	equ	0xFEA
 17879                           fsr0l	equ	0xFE9
 17880                           wreg	equ	0xFE8
 17881                           indf1	equ	0xFE7
 17882                           postdec1	equ	0xFE5
 17883                           fsr1h	equ	0xFE2
 17884                           fsr1l	equ	0xFE1
 17885                           indf2	equ	0xFDF
 17886                           postinc2	equ	0xFDE
 17887                           postdec2	equ	0xFDD
 17888                           plusw2	equ	0xFDB
 17889                           fsr2h	equ	0xFDA
 17890                           fsr2l	equ	0xFD9
 17891                           status	equ	0xFD8
 17892                           
 17893 ;; *************** function _USBWakeFromSuspend *****************
 17894 ;; Defined at:
 17895 ;;		line 2303 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 17896 ;; Parameters:    Size  Location     Type
 17897 ;;		None
 17898 ;; Auto vars:     Size  Location     Type
 17899 ;;		None
 17900 ;; Return value:  Size  Location     Type
 17901 ;;                  1    wreg      void 
 17902 ;; Registers used:
 17903 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17904 ;; Tracked objects:
 17905 ;;		On entry : 0/0
 17906 ;;		On exit  : 0/0
 17907 ;;		Unchanged: 0/0
 17908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17909 ;;      Params:         0       0       0       0       0       0       0       0       0
 17910 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17911 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17912 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17913 ;;Total ram usage:        0 bytes
 17914 ;; Hardware stack levels used:    1
 17915 ;; Hardware stack levels required when called:    4
 17916 ;; This function calls:
 17917 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 17918 ;; This function is called by:
 17919 ;;		_USBDeviceTasks
 17920 ;; This function uses a non-reentrant model
 17921 ;;
 17922                           
 17923                           	psect	text65
 17924  004EE2                     __ptext65:
 17925                           	opt stack 0
 17926  004EE2                     _USBWakeFromSuspend:
 17927                           	opt stack 19
 17928                           
 17929                           ;usb_device.c: 2305: USBBusIsSuspended = 0;
 17930                           
 17931                           ; BSR set to: 1
 17932                           ;incstack = 0
 17933  004EE2  0E00               	movlw	0
 17934  004EE4  0101               	movlb	1	; () banked
 17935  004EE6  6FFC               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 17936                           
 17937                           ; BSR set to: 1
 17938                           ;usb_device.c: 2311: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 17939  004EE8  0E00               	movlw	0
 17940  004EEA  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 17941  004EEC  0E74               	movlw	116
 17942  004EEE  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 17943  004EF0  0E00               	movlw	0
 17944  004EF2  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 17945  004EF4  0E00               	movlw	0
 17946  004EF6  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 17947  004EF8  0E00               	movlw	0
 17948  004EFA  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 17949  004EFC  0E00               	movlw	0
 17950  004EFE  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 17951  004F00  EC03  F025         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 17952                           
 17953                           ;usb_device.c: 2318: UCONbits.SUSPND = 0;
 17954  004F04  926D               	bcf	3949,1,c	;volatile
 17955                           
 17956                           ;usb_device.c: 2323: UIEbits.ACTVIE = 0;
 17957  004F06  9469               	bcf	3945,2,c	;volatile
 17958                           
 17959                           ;usb_device.c: 2341: while(UIRbits.ACTVIF)
 17960  004F08  D001               	goto	i2l528
 17961  004F0A                     
 17962                           ;usb_device.c: 2343: {
 17963                           ;usb_device.c: 2344: (UIR &= 0xFB);
 17964  004F0A  9468               	bcf	3944,2,c	;volatile
 17965  004F0C                     i2l528:
 17966  004F0C  B468               	btfsc	3944,2,c	;volatile
 17967  004F0E  D7FD               	goto	i2l529
 17968                           
 17969                           ;usb_device.c: 2345: }
 17970                           ;usb_device.c: 2347: USBTicksSinceSuspendEnd = 0;
 17971  004F10  0E00               	movlw	0
 17972  004F12  0101               	movlb	1	; () banked
 17973  004F14  6FF6               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 17974                           
 17975                           ; BSR set to: 1
 17976  004F16  0012               	return		;funcret
 17977  004F18                     __end_of_USBWakeFromSuspend:
 17978                           	opt stack 0
 17979                           pclatu	equ	0xFFB
 17980                           pclath	equ	0xFFA
 17981                           tblptru	equ	0xFF8
 17982                           tblptrh	equ	0xFF7
 17983                           tblptrl	equ	0xFF6
 17984                           tablat	equ	0xFF5
 17985                           prodh	equ	0xFF4
 17986                           prodl	equ	0xFF3
 17987                           intcon	equ	0xFF2
 17988                           indf0	equ	0xFEF
 17989                           postinc0	equ	0xFEE
 17990                           fsr0h	equ	0xFEA
 17991                           fsr0l	equ	0xFE9
 17992                           wreg	equ	0xFE8
 17993                           indf1	equ	0xFE7
 17994                           postdec1	equ	0xFE5
 17995                           fsr1h	equ	0xFE2
 17996                           fsr1l	equ	0xFE1
 17997                           indf2	equ	0xFDF
 17998                           postinc2	equ	0xFDE
 17999                           postdec2	equ	0xFDD
 18000                           plusw2	equ	0xFDB
 18001                           fsr2h	equ	0xFDA
 18002                           fsr2l	equ	0xFD9
 18003                           status	equ	0xFD8
 18004                           
 18005 ;; *************** function _USBSuspend *****************
 18006 ;; Defined at:
 18007 ;;		line 2245 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 18008 ;; Parameters:    Size  Location     Type
 18009 ;;		None
 18010 ;; Auto vars:     Size  Location     Type
 18011 ;;		None
 18012 ;; Return value:  Size  Location     Type
 18013 ;;                  1    wreg      void 
 18014 ;; Registers used:
 18015 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18016 ;; Tracked objects:
 18017 ;;		On entry : 0/0
 18018 ;;		On exit  : 0/0
 18019 ;;		Unchanged: 0/0
 18020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18021 ;;      Params:         0       0       0       0       0       0       0       0       0
 18022 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18023 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18024 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18025 ;;Total ram usage:        0 bytes
 18026 ;; Hardware stack levels used:    1
 18027 ;; Hardware stack levels required when called:    4
 18028 ;; This function calls:
 18029 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 18030 ;; This function is called by:
 18031 ;;		_USBDeviceTasks
 18032 ;; This function uses a non-reentrant model
 18033 ;;
 18034                           
 18035                           	psect	text66
 18036  004FDA                     __ptext66:
 18037                           	opt stack 0
 18038  004FDA                     _USBSuspend:
 18039                           	opt stack 19
 18040                           
 18041                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
 18042                           
 18043                           ; BSR set to: 1
 18044                           ;incstack = 0
 18045  004FDA  8469               	bsf	3945,2,c	;volatile
 18046                           
 18047                           ;usb_device.c: 2271: (UIR &= 0xEF);
 18048  004FDC  9868               	bcf	3944,4,c	;volatile
 18049                           
 18050                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
 18051  004FDE  826D               	bsf	3949,1,c	;volatile
 18052                           
 18053                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
 18054  004FE0  0E01               	movlw	1
 18055  004FE2  0101               	movlb	1	; () banked
 18056  004FE4  6FFC               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 18057                           
 18058                           ; BSR set to: 1
 18059                           ;usb_device.c: 2278: USBTicksSinceSuspendEnd = 0;
 18060  004FE6  0E00               	movlw	0
 18061  004FE8  6FF6               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 18062                           
 18063                           ; BSR set to: 1
 18064                           ;usb_device.c: 2285: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 18065  004FEA  0E00               	movlw	0
 18066  004FEC  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 18067  004FEE  0E75               	movlw	117
 18068  004FF0  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 18069  004FF2  0E00               	movlw	0
 18070  004FF4  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 18071  004FF6  0E00               	movlw	0
 18072  004FF8  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 18073  004FFA  0E00               	movlw	0
 18074  004FFC  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 18075  004FFE  0E00               	movlw	0
 18076  005000  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 18077  005002  EC03  F025         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 18078  005006  0012               	return		;funcret
 18079  005008                     __end_of_USBSuspend:
 18080                           	opt stack 0
 18081                           pclatu	equ	0xFFB
 18082                           pclath	equ	0xFFA
 18083                           tblptru	equ	0xFF8
 18084                           tblptrh	equ	0xFF7
 18085                           tblptrl	equ	0xFF6
 18086                           tablat	equ	0xFF5
 18087                           prodh	equ	0xFF4
 18088                           prodl	equ	0xFF3
 18089                           intcon	equ	0xFF2
 18090                           indf0	equ	0xFEF
 18091                           postinc0	equ	0xFEE
 18092                           fsr0h	equ	0xFEA
 18093                           fsr0l	equ	0xFE9
 18094                           wreg	equ	0xFE8
 18095                           indf1	equ	0xFE7
 18096                           postdec1	equ	0xFE5
 18097                           fsr1h	equ	0xFE2
 18098                           fsr1l	equ	0xFE1
 18099                           indf2	equ	0xFDF
 18100                           postinc2	equ	0xFDE
 18101                           postdec2	equ	0xFDD
 18102                           plusw2	equ	0xFDB
 18103                           fsr2h	equ	0xFDA
 18104                           fsr2l	equ	0xFD9
 18105                           status	equ	0xFD8
 18106                           
 18107 ;; *************** function _USBStallHandler *****************
 18108 ;; Defined at:
 18109 ;;		line 2202 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 18110 ;; Parameters:    Size  Location     Type
 18111 ;;		None
 18112 ;; Auto vars:     Size  Location     Type
 18113 ;;		None
 18114 ;; Return value:  Size  Location     Type
 18115 ;;                  1    wreg      void 
 18116 ;; Registers used:
 18117 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18118 ;; Tracked objects:
 18119 ;;		On entry : 0/0
 18120 ;;		On exit  : 0/0
 18121 ;;		Unchanged: 0/0
 18122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18123 ;;      Params:         0       0       0       0       0       0       0       0       0
 18124 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18125 ;;      Temps:          1       0       0       0       0       0       0       0       0
 18126 ;;      Totals:         1       0       0       0       0       0       0       0       0
 18127 ;;Total ram usage:        1 bytes
 18128 ;; Hardware stack levels used:    1
 18129 ;; This function calls:
 18130 ;;		Nothing
 18131 ;; This function is called by:
 18132 ;;		_USBDeviceTasks
 18133 ;; This function uses a non-reentrant model
 18134 ;;
 18135                           
 18136                           	psect	text67
 18137  004D3C                     __ptext67:
 18138                           	opt stack 0
 18139  004D3C                     _USBStallHandler:
 18140                           	opt stack 23
 18141                           
 18142                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
 18143                           
 18144                           ;incstack = 0
 18145  004D3C  A070               	btfss	3952,0,c	;volatile
 18146  004D3E  D01D               	goto	i2l520
 18147                           
 18148                           ;usb_device.c: 2215: {
 18149                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 18150  004D40  C050  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 18151  004D44  C051  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 18152  004D48  0E80               	movlw	128
 18153  004D4A  18DE               	xorwf	postinc2,w,c
 18154  004D4C  A4D8               	btfss	status,2,c
 18155  004D4E  D014               	goto	i2l521
 18156  004D50  C046  FFD9         	movff	_pBDTEntryIn,fsr2l
 18157  004D54  C047  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18158  004D58  0E84               	movlw	132
 18159  004D5A  18DE               	xorwf	postinc2,w,c
 18160  004D5C  A4D8               	btfss	status,2,c
 18161  004D5E  D00C               	goto	i2l521
 18162                           
 18163                           ;usb_device.c: 2218: {
 18164                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 18165  004D60  C050  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 18166  004D64  C051  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 18167  004D68  0E0C               	movlw	12
 18168  004D6A  6EDF               	movwf	indf2,c
 18169                           
 18170                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 18171  004D6C  C050  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 18172  004D70  C051  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 18173  004D74  0E00               	movlw	0
 18174  004D76  8EDB               	bsf	plusw2,7,c
 18175  004D78                     i2l521:
 18176                           
 18177                           ;usb_device.c: 2222: }
 18178                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
 18179  004D78  9070               	bcf	3952,0,c	;volatile
 18180  004D7A                     i2l520:
 18181                           
 18182                           ;usb_device.c: 2224: }
 18183                           ;usb_device.c: 2226: (UIR &= 0xDF);
 18184  004D7A  9A68               	bcf	3944,5,c	;volatile
 18185  004D7C  0012               	return		;funcret
 18186  004D7E                     __end_of_USBStallHandler:
 18187                           	opt stack 0
 18188                           pclatu	equ	0xFFB
 18189                           pclath	equ	0xFFA
 18190                           tblptru	equ	0xFF8
 18191                           tblptrh	equ	0xFF7
 18192                           tblptrl	equ	0xFF6
 18193                           tablat	equ	0xFF5
 18194                           prodh	equ	0xFF4
 18195                           prodl	equ	0xFF3
 18196                           intcon	equ	0xFF2
 18197                           indf0	equ	0xFEF
 18198                           postinc0	equ	0xFEE
 18199                           fsr0h	equ	0xFEA
 18200                           fsr0l	equ	0xFE9
 18201                           wreg	equ	0xFE8
 18202                           indf1	equ	0xFE7
 18203                           postdec1	equ	0xFE5
 18204                           fsr1h	equ	0xFE2
 18205                           fsr1l	equ	0xFE1
 18206                           indf2	equ	0xFDF
 18207                           postinc2	equ	0xFDE
 18208                           postdec2	equ	0xFDD
 18209                           plusw2	equ	0xFDB
 18210                           fsr2h	equ	0xFDA
 18211                           fsr2l	equ	0xFD9
 18212                           status	equ	0xFD8
 18213                           
 18214 ;; *************** function _USBIncrement1msInternalTimers *****************
 18215 ;; Defined at:
 18216 ;;		line 3025 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 18217 ;; Parameters:    Size  Location     Type
 18218 ;;		None
 18219 ;; Auto vars:     Size  Location     Type
 18220 ;;		None
 18221 ;; Return value:  Size  Location     Type
 18222 ;;                  1    wreg      void 
 18223 ;; Registers used:
 18224 ;;		wreg, status,2, status,0
 18225 ;; Tracked objects:
 18226 ;;		On entry : 0/0
 18227 ;;		On exit  : 0/0
 18228 ;;		Unchanged: 0/0
 18229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18230 ;;      Params:         0       0       0       0       0       0       0       0       0
 18231 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18232 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18233 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18234 ;;Total ram usage:        0 bytes
 18235 ;; Hardware stack levels used:    1
 18236 ;; This function calls:
 18237 ;;		Nothing
 18238 ;; This function is called by:
 18239 ;;		_USBDeviceTasks
 18240 ;; This function uses a non-reentrant model
 18241 ;;
 18242                           
 18243                           	psect	text68
 18244  005116                     __ptext68:
 18245                           	opt stack 0
 18246  005116                     _USBIncrement1msInternalTimers:
 18247                           	opt stack 23
 18248                           
 18249                           ;usb_device.c: 3033: USB1msTickCount++;
 18250                           
 18251                           ;incstack = 0
 18252  005116  0E01               	movlw	1
 18253  005118  0102               	movlb	2	; () banked
 18254  00511A  27CA               	addwf	_USB1msTickCount& (0+255),f,b	;volatile
 18255  00511C  0E00               	movlw	0
 18256  00511E  23CB               	addwfc	(_USB1msTickCount+1)& (0+255),f,b	;volatile
 18257  005120  23CC               	addwfc	(_USB1msTickCount+2)& (0+255),f,b	;volatile
 18258  005122  23CD               	addwfc	(_USB1msTickCount+3)& (0+255),f,b	;volatile
 18259                           
 18260                           ; BSR set to: 2
 18261                           ;usb_device.c: 3034: if(USBBusIsSuspended == 0)
 18262  005124  0101               	movlb	1	; () banked
 18263  005126  51FC               	movf	_USBBusIsSuspended& (0+255),w,b	;volatile
 18264  005128  A4D8               	btfss	status,2,c
 18265  00512A  0012               	return	
 18266                           
 18267                           ; BSR set to: 1
 18268                           ;usb_device.c: 3035: {
 18269                           ;usb_device.c: 3036: USBTicksSinceSuspendEnd++;
 18270  00512C  2BF6               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b	;volatile
 18271                           
 18272                           ; BSR set to: 1
 18273                           ;usb_device.c: 3038: if(USBTicksSinceSuspendEnd == 0)
 18274  00512E  51F6               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b	;volatile
 18275  005130  A4D8               	btfss	status,2,c
 18276  005132  0012               	return	
 18277                           
 18278                           ; BSR set to: 1
 18279                           ;usb_device.c: 3039: {
 18280                           ;usb_device.c: 3040: USBTicksSinceSuspendEnd = 255;
 18281  005134  69F6               	setf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 18282                           
 18283                           ; BSR set to: 1
 18284  005136  0012               	return	
 18285  005138                     __end_of_USBIncrement1msInternalTimers:
 18286                           	opt stack 0
 18287                           pclatu	equ	0xFFB
 18288                           pclath	equ	0xFFA
 18289                           tblptru	equ	0xFF8
 18290                           tblptrh	equ	0xFF7
 18291                           tblptrl	equ	0xFF6
 18292                           tablat	equ	0xFF5
 18293                           prodh	equ	0xFF4
 18294                           prodl	equ	0xFF3
 18295                           intcon	equ	0xFF2
 18296                           indf0	equ	0xFEF
 18297                           postinc0	equ	0xFEE
 18298                           fsr0h	equ	0xFEA
 18299                           fsr0l	equ	0xFE9
 18300                           wreg	equ	0xFE8
 18301                           indf1	equ	0xFE7
 18302                           postdec1	equ	0xFE5
 18303                           fsr1h	equ	0xFE2
 18304                           fsr1l	equ	0xFE1
 18305                           indf2	equ	0xFDF
 18306                           postinc2	equ	0xFDE
 18307                           postdec2	equ	0xFDD
 18308                           plusw2	equ	0xFDB
 18309                           fsr2h	equ	0xFDA
 18310                           fsr2l	equ	0xFD9
 18311                           status	equ	0xFD8
 18312                           
 18313 ;; *************** function _USBCtrlEPService *****************
 18314 ;; Defined at:
 18315 ;;		line 2372 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 18316 ;; Parameters:    Size  Location     Type
 18317 ;;		None
 18318 ;; Auto vars:     Size  Location     Type
 18319 ;;		None
 18320 ;; Return value:  Size  Location     Type
 18321 ;;                  1    wreg      void 
 18322 ;; Registers used:
 18323 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18324 ;; Tracked objects:
 18325 ;;		On entry : 0/0
 18326 ;;		On exit  : 0/0
 18327 ;;		Unchanged: 0/0
 18328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18329 ;;      Params:         0       0       0       0       0       0       0       0       0
 18330 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18331 ;;      Temps:          1       0       0       0       0       0       0       0       0
 18332 ;;      Totals:         1       0       0       0       0       0       0       0       0
 18333 ;;Total ram usage:        1 bytes
 18334 ;; Hardware stack levels used:    1
 18335 ;; Hardware stack levels required when called:    7
 18336 ;; This function calls:
 18337 ;;		_USBCtrlTrfInHandler
 18338 ;;		_USBCtrlTrfOutHandler
 18339 ;;		_USBCtrlTrfSetupHandler
 18340 ;;		_memcpy
 18341 ;; This function is called by:
 18342 ;;		_USBDeviceTasks
 18343 ;; This function uses a non-reentrant model
 18344 ;;
 18345                           
 18346                           	psect	text69
 18347  00426E                     __ptext69:
 18348                           	opt stack 0
 18349  00426E                     _USBCtrlEPService:
 18350                           	opt stack 16
 18351                           
 18352                           ;usb_device.c: 2378: USBStatusStageTimeoutCounter = (uint8_t)45;
 18353                           
 18354                           ; BSR set to: 1
 18355                           ;incstack = 0
 18356  00426E  0E2D               	movlw	45
 18357  004270  6E54               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 18358                           
 18359                           ;usb_device.c: 2382: if((USTATcopy.Val & ~0x02) == 0x00)
 18360  004272  C05D  F01B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 18361  004276  0EFD               	movlw	253
 18362  004278  161B               	andwf	??_USBCtrlEPService,f,c
 18363  00427A  A4D8               	btfss	status,2,c
 18364  00427C  D03B               	goto	i2l534
 18365                           
 18366                           ;usb_device.c: 2383: {
 18367                           ;usb_device.c: 2386: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 18368  00427E  C05D  F01B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 18369  004282  90D8               	bcf	status,0,c
 18370  004284  321B               	rrcf	??_USBCtrlEPService,f,c
 18371  004286  0E3F               	movlw	63
 18372  004288  161B               	andwf	??_USBCtrlEPService,f,c
 18373  00428A  501B               	movf	??_USBCtrlEPService,w,c
 18374  00428C  0D04               	mullw	4
 18375  00428E  0E00               	movlw	0
 18376  004290  24F3               	addwf	prodl,w,c
 18377  004292  6E50               	movwf	_pBDTEntryEP0OutCurrent,c
 18378  004294  0E04               	movlw	4
 18379  004296  20F4               	addwfc	prodh,w,c
 18380  004298  6E51               	movwf	_pBDTEntryEP0OutCurrent+1,c
 18381                           
 18382                           ;usb_device.c: 2394: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 18383  00429A  C050  F04E         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 18384  00429E  C051  F04F         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 18385                           
 18386                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 18387  0042A2  0E04               	movlw	4
 18388  0042A4  184E               	xorwf	_pBDTEntryEP0OutNext,w,c
 18389  0042A6  6E4E               	movwf	_pBDTEntryEP0OutNext,c
 18390  0042A8  504F               	movf	_pBDTEntryEP0OutNext+1,w,c
 18391  0042AA  6E4F               	movwf	_pBDTEntryEP0OutNext+1,c
 18392                           
 18393                           ;usb_device.c: 2399: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 18394  0042AC  C050  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 18395  0042B0  C051  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 18396  0042B4  30DF               	rrcf	indf2,w,c
 18397  0042B6  32E8               	rrcf	wreg,f,c
 18398  0042B8  0B0F               	andlw	15
 18399  0042BA  0A0D               	xorlw	13
 18400  0042BC  A4D8               	btfss	status,2,c
 18401  0042BE  D017               	goto	i2l535
 18402                           
 18403                           ;usb_device.c: 2400: {
 18404                           ;usb_device.c: 2405: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void *)(pBDTEntryEP0OutCurr
      +                          ent->ADR)), 8);
 18405  0042C0  0E30               	movlw	48
 18406  0042C2  6E01               	movwf	memcpy@d1,c
 18407  0042C4  0E04               	movlw	4
 18408  0042C6  6E02               	movwf	memcpy@d1+1,c
 18409  0042C8  EE20 F002          	lfsr	2,2
 18410  0042CC  5050               	movf	_pBDTEntryEP0OutCurrent,w,c
 18411  0042CE  26D9               	addwf	fsr2l,f,c
 18412  0042D0  5051               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 18413  0042D2  22DA               	addwfc	fsr2h,f,c
 18414  0042D4  CFDE F003          	movff	postinc2,memcpy@s1
 18415  0042D8  CFDD F004          	movff	postdec2,memcpy@s1+1
 18416  0042DC  0E00               	movlw	0
 18417  0042DE  6E06               	movwf	memcpy@n+1,c
 18418  0042E0  0E08               	movlw	8
 18419  0042E2  6E05               	movwf	memcpy@n,c
 18420  0042E4  EC3A  F026         	call	_memcpy	;wreg free
 18421                           
 18422                           ;usb_device.c: 2408: USBCtrlTrfSetupHandler();
 18423  0042E8  EC15  F022         	call	_USBCtrlTrfSetupHandler	;wreg free
 18424                           
 18425                           ;usb_device.c: 2409: }
 18426  0042EC  0012               	return	
 18427  0042EE                     i2l535:
 18428                           
 18429                           ;usb_device.c: 2410: else
 18430                           ;usb_device.c: 2411: {
 18431                           ;usb_device.c: 2413: USBCtrlTrfOutHandler();
 18432  0042EE  ECD4  F024         	call	_USBCtrlTrfOutHandler	;wreg free
 18433                           
 18434                           ;usb_device.c: 2414: }
 18435                           ;usb_device.c: 2415: }
 18436  0042F2  0012               	return	
 18437  0042F4                     i2l534:
 18438                           
 18439                           ;usb_device.c: 2416: else if((USTATcopy.Val & ~0x02) == 0x04)
 18440  0042F4  505D               	movf	_USTATcopy,w,c	;volatile
 18441  0042F6  0BFD               	andlw	253
 18442  0042F8  0A04               	xorlw	4
 18443  0042FA  A4D8               	btfss	status,2,c
 18444  0042FC  0012               	return	
 18445                           
 18446                           ;usb_device.c: 2417: {
 18447                           ;usb_device.c: 2420: USBCtrlTrfInHandler();
 18448  0042FE  EC47  F01E         	call	_USBCtrlTrfInHandler	;wreg free
 18449  004302  0012               	return	
 18450  004304                     __end_of_USBCtrlEPService:
 18451                           	opt stack 0
 18452                           pclatu	equ	0xFFB
 18453                           pclath	equ	0xFFA
 18454                           tblptru	equ	0xFF8
 18455                           tblptrh	equ	0xFF7
 18456                           tblptrl	equ	0xFF6
 18457                           tablat	equ	0xFF5
 18458                           prodh	equ	0xFF4
 18459                           prodl	equ	0xFF3
 18460                           intcon	equ	0xFF2
 18461                           indf0	equ	0xFEF
 18462                           postinc0	equ	0xFEE
 18463                           fsr0h	equ	0xFEA
 18464                           fsr0l	equ	0xFE9
 18465                           wreg	equ	0xFE8
 18466                           indf1	equ	0xFE7
 18467                           postdec1	equ	0xFE5
 18468                           fsr1h	equ	0xFE2
 18469                           fsr1l	equ	0xFE1
 18470                           indf2	equ	0xFDF
 18471                           postinc2	equ	0xFDE
 18472                           postdec2	equ	0xFDD
 18473                           plusw2	equ	0xFDB
 18474                           fsr2h	equ	0xFDA
 18475                           fsr2l	equ	0xFD9
 18476                           status	equ	0xFD8
 18477                           
 18478 ;; *************** function _memcpy *****************
 18479 ;; Defined at:
 18480 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\memcpy.c"
 18481 ;; Parameters:    Size  Location     Type
 18482 ;;  d1              2    0[COMRAM] PTR void 
 18483 ;;		 -> receivePacket(100), response(100), SetupPkt(8), 
 18484 ;;  s1              2    2[COMRAM] PTR const void 
 18485 ;;		 -> recebeByte@frameData(100), CtrlTrfData(8), RAM(2047), SetupPkt(8), 
 18486 ;;  n               2    4[COMRAM] unsigned int 
 18487 ;; Auto vars:     Size  Location     Type
 18488 ;;  s               2    8[COMRAM] PTR const unsigned char 
 18489 ;;		 -> recebeByte@frameData(100), CtrlTrfData(8), RAM(2047), SetupPkt(8), 
 18490 ;;  d               2    6[COMRAM] PTR unsigned char 
 18491 ;;		 -> receivePacket(100), response(100), SetupPkt(8), 
 18492 ;;  tmp             1   10[COMRAM] unsigned char 
 18493 ;; Return value:  Size  Location     Type
 18494 ;;                  2    0[COMRAM] PTR void 
 18495 ;; Registers used:
 18496 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18497 ;; Tracked objects:
 18498 ;;		On entry : 0/0
 18499 ;;		On exit  : 0/0
 18500 ;;		Unchanged: 0/0
 18501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18502 ;;      Params:         6       0       0       0       0       0       0       0       0
 18503 ;;      Locals:         5       0       0       0       0       0       0       0       0
 18504 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18505 ;;      Totals:        11       0       0       0       0       0       0       0       0
 18506 ;;Total ram usage:       11 bytes
 18507 ;; Hardware stack levels used:    1
 18508 ;; This function calls:
 18509 ;;		Nothing
 18510 ;; This function is called by:
 18511 ;;		_USBCtrlEPService
 18512 ;;		_recebeByte
 18513 ;; This function uses a non-reentrant model
 18514 ;;
 18515                           
 18516                           	psect	text70
 18517  004C74                     __ptext70:
 18518                           	opt stack 0
 18519  004C74                     _memcpy:
 18520                           	opt stack 22
 18521                           
 18522                           ;incstack = 0
 18523  004C74  C003  F009         	movff	memcpy@s1,memcpy@s
 18524  004C78  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
 18525  004C7C  C001  F007         	movff	memcpy@d1,memcpy@d
 18526  004C80  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
 18527  004C84  D010               	goto	i2l2919
 18528  004C86                     i2l7889:
 18529  004C86  C009  FFD9         	movff	memcpy@s,fsr2l
 18530  004C8A  C00A  FFDA         	movff	memcpy@s+1,fsr2h
 18531  004C8E  50DF               	movf	indf2,w,c
 18532  004C90  6E0B               	movwf	memcpy@tmp,c
 18533  004C92  4A09               	infsnz	memcpy@s,f,c
 18534  004C94  2A0A               	incf	memcpy@s+1,f,c
 18535  004C96  C007  FFD9         	movff	memcpy@d,fsr2l
 18536  004C9A  C008  FFDA         	movff	memcpy@d+1,fsr2h
 18537  004C9E  C00B  FFDF         	movff	memcpy@tmp,indf2
 18538  004CA2  4A07               	infsnz	memcpy@d,f,c
 18539  004CA4  2A08               	incf	memcpy@d+1,f,c
 18540  004CA6                     i2l2919:
 18541  004CA6  0605               	decf	memcpy@n,f,c
 18542  004CA8  A0D8               	btfss	status,0,c
 18543  004CAA  0606               	decf	memcpy@n+1,f,c
 18544  004CAC  2805               	incf	memcpy@n,w,c
 18545  004CAE  E1EB               	bnz	i2l7889
 18546  004CB0  2806               	incf	memcpy@n+1,w,c
 18547  004CB2  B4D8               	btfsc	status,2,c
 18548  004CB4  0012               	return	
 18549  004CB6  D7E7               	goto	i2l2920
 18550  004CB8                     __end_of_memcpy:
 18551                           	opt stack 0
 18552                           pclatu	equ	0xFFB
 18553                           pclath	equ	0xFFA
 18554                           tblptru	equ	0xFF8
 18555                           tblptrh	equ	0xFF7
 18556                           tblptrl	equ	0xFF6
 18557                           tablat	equ	0xFF5
 18558                           prodh	equ	0xFF4
 18559                           prodl	equ	0xFF3
 18560                           intcon	equ	0xFF2
 18561                           indf0	equ	0xFEF
 18562                           postinc0	equ	0xFEE
 18563                           fsr0h	equ	0xFEA
 18564                           fsr0l	equ	0xFE9
 18565                           wreg	equ	0xFE8
 18566                           indf1	equ	0xFE7
 18567                           postdec1	equ	0xFE5
 18568                           fsr1h	equ	0xFE2
 18569                           fsr1l	equ	0xFE1
 18570                           indf2	equ	0xFDF
 18571                           postinc2	equ	0xFDE
 18572                           postdec2	equ	0xFDD
 18573                           plusw2	equ	0xFDB
 18574                           fsr2h	equ	0xFDA
 18575                           fsr2l	equ	0xFD9
 18576                           status	equ	0xFD8
 18577                           
 18578 ;; *************** function _USBCtrlTrfSetupHandler *****************
 18579 ;; Defined at:
 18580 ;;		line 2465 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 18581 ;; Parameters:    Size  Location     Type
 18582 ;;		None
 18583 ;; Auto vars:     Size  Location     Type
 18584 ;;		None
 18585 ;; Return value:  Size  Location     Type
 18586 ;;                  1    wreg      void 
 18587 ;; Registers used:
 18588 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18589 ;; Tracked objects:
 18590 ;;		On entry : 0/0
 18591 ;;		On exit  : 0/0
 18592 ;;		Unchanged: 0/0
 18593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18594 ;;      Params:         0       0       0       0       0       0       0       0       0
 18595 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18596 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18597 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18598 ;;Total ram usage:        0 bytes
 18599 ;; Hardware stack levels used:    1
 18600 ;; Hardware stack levels required when called:    6
 18601 ;; This function calls:
 18602 ;;		_USBCheckStdRequest
 18603 ;;		_USBCtrlEPServiceComplete
 18604 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 18605 ;; This function is called by:
 18606 ;;		_USBCtrlEPService
 18607 ;; This function uses a non-reentrant model
 18608 ;;
 18609                           
 18610                           	psect	text71
 18611  00442A                     __ptext71:
 18612                           	opt stack 0
 18613  00442A                     _USBCtrlTrfSetupHandler:
 18614                           	opt stack 16
 18615                           
 18616                           ;usb_device.c: 2470: shortPacketStatus = 0;
 18617                           
 18618                           ;incstack = 0
 18619  00442A  0E00               	movlw	0
 18620  00442C  6E57               	movwf	_shortPacketStatus,c	;volatile
 18621                           
 18622                           ;usb_device.c: 2471: USBDeferStatusStagePacket = 0;
 18623  00442E  0E00               	movlw	0
 18624  004430  6E53               	movwf	_USBDeferStatusStagePacket,c	;volatile
 18625                           
 18626                           ;usb_device.c: 2472: USBDeferINDataStagePackets = 0;
 18627  004432  0E00               	movlw	0
 18628  004434  0101               	movlb	1	; () banked
 18629  004436  6FF8               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 18630                           
 18631                           ;usb_device.c: 2473: USBDeferOUTDataStagePackets = 0;
 18632  004438  0E00               	movlw	0
 18633  00443A  6FF7               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 18634                           
 18635                           ;usb_device.c: 2474: BothEP0OutUOWNsSet = 0;
 18636  00443C  0E00               	movlw	0
 18637  00443E  6FFB               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 18638                           
 18639                           ;usb_device.c: 2475: controlTransferState = 0;
 18640  004440  0E00               	movlw	0
 18641  004442  6E56               	movwf	_controlTransferState,c	;volatile
 18642                           
 18643                           ; BSR set to: 1
 18644                           ;usb_device.c: 2484: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 18645  004444  C046  FFD9         	movff	_pBDTEntryIn,fsr2l
 18646  004448  C047  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18647  00444C  0E7F               	movlw	127
 18648  00444E  16DF               	andwf	indf2,f,c
 18649                           
 18650                           ; BSR set to: 1
 18651                           ;usb_device.c: 2486: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 18652  004450  0E04               	movlw	4
 18653  004452  1846               	xorwf	_pBDTEntryIn,w,c
 18654  004454  6E46               	movwf	_pBDTEntryIn,c
 18655  004456  5047               	movf	_pBDTEntryIn+1,w,c
 18656  004458  6E47               	movwf	_pBDTEntryIn+1,c
 18657                           
 18658                           ; BSR set to: 1
 18659                           ;usb_device.c: 2487: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 18660  00445A  C046  FFD9         	movff	_pBDTEntryIn,fsr2l
 18661  00445E  C047  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18662  004462  0E7F               	movlw	127
 18663  004464  16DF               	andwf	indf2,f,c
 18664                           
 18665                           ; BSR set to: 1
 18666                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 18667  004466  0E04               	movlw	4
 18668  004468  1846               	xorwf	_pBDTEntryIn,w,c
 18669  00446A  6E46               	movwf	_pBDTEntryIn,c
 18670  00446C  5047               	movf	_pBDTEntryIn+1,w,c
 18671  00446E  6E47               	movwf	_pBDTEntryIn+1,c
 18672                           
 18673                           ; BSR set to: 1
 18674                           ;usb_device.c: 2489: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 18675  004470  C04E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18676  004474  C04F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18677  004478  0E7F               	movlw	127
 18678  00447A  16DF               	andwf	indf2,f,c
 18679                           
 18680                           ; BSR set to: 1
 18681                           ;usb_device.c: 2491: inPipes[0].info.Val = 0;
 18682  00447C  0E00               	movlw	0
 18683  00447E  6E43               	movwf	_inPipes+3,c	;volatile
 18684                           
 18685                           ; BSR set to: 1
 18686                           ;usb_device.c: 2492: inPipes[0].wCount.Val = 0;
 18687  004480  0E00               	movlw	0
 18688  004482  6E45               	movwf	_inPipes+5,c	;volatile
 18689  004484  0E00               	movlw	0
 18690  004486  6E44               	movwf	_inPipes+4,c	;volatile
 18691                           
 18692                           ; BSR set to: 1
 18693                           ;usb_device.c: 2493: outPipes[0].info.Val = 0;
 18694  004488  0E00               	movlw	0
 18695  00448A  6E3B               	movwf	_outPipes+3,c	;volatile
 18696                           
 18697                           ; BSR set to: 1
 18698                           ;usb_device.c: 2494: outPipes[0].wCount.Val = 0;
 18699  00448C  0E00               	movlw	0
 18700  00448E  6E3D               	movwf	_outPipes+5,c	;volatile
 18701  004490  0E00               	movlw	0
 18702  004492  6E3C               	movwf	_outPipes+4,c	;volatile
 18703                           
 18704                           ; BSR set to: 1
 18705                           ;usb_device.c: 2500: USBCheckStdRequest();
 18706  004494  EC13  F01D         	call	_USBCheckStdRequest	;wreg free
 18707                           
 18708                           ;usb_device.c: 2501: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 18709  004498  0E00               	movlw	0
 18710  00449A  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 18711  00449C  0E03               	movlw	3
 18712  00449E  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 18713  0044A0  0E00               	movlw	0
 18714  0044A2  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 18715  0044A4  0E00               	movlw	0
 18716  0044A6  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 18717  0044A8  0E00               	movlw	0
 18718  0044AA  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 18719  0044AC  0E00               	movlw	0
 18720  0044AE  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 18721  0044B0  EC03  F025         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 18722                           
 18723                           ;usb_device.c: 2514: USBCtrlEPServiceComplete();
 18724  0044B4  EC4D  F01A         	call	_USBCtrlEPServiceComplete	;wreg free
 18725  0044B8  0012               	return		;funcret
 18726  0044BA                     __end_of_USBCtrlTrfSetupHandler:
 18727                           	opt stack 0
 18728                           pclatu	equ	0xFFB
 18729                           pclath	equ	0xFFA
 18730                           tblptru	equ	0xFF8
 18731                           tblptrh	equ	0xFF7
 18732                           tblptrl	equ	0xFF6
 18733                           tablat	equ	0xFF5
 18734                           prodh	equ	0xFF4
 18735                           prodl	equ	0xFF3
 18736                           intcon	equ	0xFF2
 18737                           indf0	equ	0xFEF
 18738                           postinc0	equ	0xFEE
 18739                           fsr0h	equ	0xFEA
 18740                           fsr0l	equ	0xFE9
 18741                           wreg	equ	0xFE8
 18742                           indf1	equ	0xFE7
 18743                           postdec1	equ	0xFE5
 18744                           fsr1h	equ	0xFE2
 18745                           fsr1l	equ	0xFE1
 18746                           indf2	equ	0xFDF
 18747                           postinc2	equ	0xFDE
 18748                           postdec2	equ	0xFDD
 18749                           plusw2	equ	0xFDB
 18750                           fsr2h	equ	0xFDA
 18751                           fsr2l	equ	0xFD9
 18752                           status	equ	0xFD8
 18753                           
 18754 ;; *************** function _USBCtrlEPServiceComplete *****************
 18755 ;; Defined at:
 18756 ;;		line 1616 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 18757 ;; Parameters:    Size  Location     Type
 18758 ;;		None
 18759 ;; Auto vars:     Size  Location     Type
 18760 ;;		None
 18761 ;; Return value:  Size  Location     Type
 18762 ;;                  1    wreg      void 
 18763 ;; Registers used:
 18764 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 18765 ;; Tracked objects:
 18766 ;;		On entry : 0/0
 18767 ;;		On exit  : 0/0
 18768 ;;		Unchanged: 0/0
 18769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18770 ;;      Params:         0       0       0       0       0       0       0       0       0
 18771 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18772 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18773 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18774 ;;Total ram usage:        0 bytes
 18775 ;; Hardware stack levels used:    1
 18776 ;; Hardware stack levels required when called:    2
 18777 ;; This function calls:
 18778 ;;		_USBCtrlEPAllowDataStage
 18779 ;;		_USBCtrlEPAllowStatusStage
 18780 ;; This function is called by:
 18781 ;;		_USBCtrlTrfSetupHandler
 18782 ;; This function uses a non-reentrant model
 18783 ;;
 18784                           
 18785                           	psect	text72
 18786  00349A                     __ptext72:
 18787                           	opt stack 0
 18788  00349A                     _USBCtrlEPServiceComplete:
 18789                           	opt stack 19
 18790                           
 18791                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
 18792                           
 18793                           ;incstack = 0
 18794  00349A  986D               	bcf	3949,4,c	;volatile
 18795                           
 18796                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
 18797  00349C  BE43               	btfsc	_inPipes+3,7,c	;volatile
 18798  00349E  D03A               	goto	i2l444
 18799                           
 18800                           ;usb_device.c: 1629: {
 18801                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
 18802  0034A0  AE3B               	btfss	_outPipes+3,7,c	;volatile
 18803  0034A2  D00D               	goto	i2l445
 18804                           
 18805                           ;usb_device.c: 1631: {
 18806                           ;usb_device.c: 1632: controlTransferState = 2;
 18807  0034A4  0E02               	movlw	2
 18808  0034A6  6E56               	movwf	_controlTransferState,c	;volatile
 18809                           
 18810                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
 18811  0034A8  0101               	movlb	1	; () banked
 18812  0034AA  51F7               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 18813  0034AC  B4D8               	btfsc	status,2,c
 18814                           
 18815                           ; BSR set to: 1
 18816                           ;usb_device.c: 1644: {
 18817                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
 18818  0034AE  ECEB  F020         	call	_USBCtrlEPAllowDataStage	;wreg free
 18819                           
 18820                           ;usb_device.c: 1646: }
 18821                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
 18822  0034B2  0E00               	movlw	0
 18823  0034B4  0101               	movlb	1	; () banked
 18824  0034B6  6FF9               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 18825                           
 18826                           ; BSR set to: 1
 18827                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
 18828  0034B8  0E00               	movlw	0
 18829  0034BA  6FFA               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 18830                           
 18831                           ;usb_device.c: 1652: }
 18832  0034BC  0012               	return	
 18833  0034BE                     i2l445:
 18834                           
 18835                           ;usb_device.c: 1653: else
 18836                           ;usb_device.c: 1654: {
 18837                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
 18838                           
 18839                           ; BSR set to: 1
 18840  0034BE  EE20 F001          	lfsr	2,1
 18841  0034C2  504E               	movf	_pBDTEntryEP0OutNext,w,c
 18842  0034C4  26D9               	addwf	fsr2l,f,c
 18843  0034C6  504F               	movf	_pBDTEntryEP0OutNext+1,w,c
 18844  0034C8  22DA               	addwfc	fsr2h,f,c
 18845  0034CA  0E08               	movlw	8
 18846  0034CC  6EDF               	movwf	indf2,c
 18847                           
 18848                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 18849  0034CE  EE20 F002          	lfsr	2,2
 18850  0034D2  504E               	movf	_pBDTEntryEP0OutNext,w,c
 18851  0034D4  26D9               	addwf	fsr2l,f,c
 18852  0034D6  504F               	movf	_pBDTEntryEP0OutNext+1,w,c
 18853  0034D8  22DA               	addwfc	fsr2h,f,c
 18854  0034DA  0E30               	movlw	48
 18855  0034DC  6EDE               	movwf	postinc2,c
 18856  0034DE  0E04               	movlw	4
 18857  0034E0  6EDD               	movwf	postdec2,c
 18858                           
 18859                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 18860  0034E2  C04E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18861  0034E6  C04F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18862  0034EA  0E0C               	movlw	12
 18863  0034EC  6EDF               	movwf	indf2,c
 18864                           
 18865                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 18866  0034EE  C04E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18867  0034F2  C04F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18868  0034F6  0E00               	movlw	0
 18869  0034F8  8EDB               	bsf	plusw2,7,c
 18870                           
 18871                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
 18872  0034FA  C046  FFD9         	movff	_pBDTEntryIn,fsr2l
 18873  0034FE  C047  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18874  003502  0E04               	movlw	4
 18875  003504  6EDF               	movwf	indf2,c
 18876                           
 18877                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
 18878  003506  C046  FFD9         	movff	_pBDTEntryIn,fsr2l
 18879  00350A  C047  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18880  00350E  0E00               	movlw	0
 18881  003510  8EDB               	bsf	plusw2,7,c
 18882                           
 18883                           ;usb_device.c: 1665: }
 18884                           ;usb_device.c: 1666: }
 18885  003512  0012               	return	
 18886  003514                     i2l444:
 18887                           
 18888                           ;usb_device.c: 1667: else
 18889                           ;usb_device.c: 1668: {
 18890                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
 18891  003514  0104               	movlb	4	; () banked
 18892  003516  AF30               	btfss	48,7,b	;volatile
 18893  003518  D012               	goto	i2l449
 18894                           
 18895                           ; BSR set to: 4
 18896                           ;usb_device.c: 1670: {
 18897                           ;usb_device.c: 1671: controlTransferState = 1;
 18898  00351A  0E01               	movlw	1
 18899  00351C  6E56               	movwf	_controlTransferState,c	;volatile
 18900                           
 18901                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
 18902  00351E  0101               	movlb	1	; () banked
 18903  003520  51F8               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 18904  003522  B4D8               	btfsc	status,2,c
 18905                           
 18906                           ; BSR set to: 1
 18907                           ;usb_device.c: 1686: {
 18908                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
 18909  003524  ECEB  F020         	call	_USBCtrlEPAllowDataStage	;wreg free
 18910                           
 18911                           ;usb_device.c: 1688: }
 18912                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
 18913  003528  0E00               	movlw	0
 18914  00352A  0101               	movlb	1	; () banked
 18915  00352C  6FF9               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 18916                           
 18917                           ; BSR set to: 1
 18918                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
 18919  00352E  0E00               	movlw	0
 18920  003530  6FFA               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 18921                           
 18922                           ; BSR set to: 1
 18923                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
 18924  003532  5053               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 18925  003534  A4D8               	btfss	status,2,c
 18926  003536  0012               	return	
 18927                           
 18928                           ; BSR set to: 1
 18929                           ;usb_device.c: 1713: {
 18930                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
 18931  003538  ECE5  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
 18932                           
 18933                           ;usb_device.c: 1715: }
 18934                           ;usb_device.c: 1716: }
 18935  00353C  0012               	return	
 18936  00353E                     i2l449:
 18937                           
 18938                           ;usb_device.c: 1717: else
 18939                           ;usb_device.c: 1718: {
 18940                           ;usb_device.c: 1729: controlTransferState = 2;
 18941  00353E  0E02               	movlw	2
 18942  003540  6E56               	movwf	_controlTransferState,c	;volatile
 18943                           
 18944                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
 18945  003542  EE20 F001          	lfsr	2,1
 18946  003546  504E               	movf	_pBDTEntryEP0OutNext,w,c
 18947  003548  26D9               	addwf	fsr2l,f,c
 18948  00354A  504F               	movf	_pBDTEntryEP0OutNext+1,w,c
 18949  00354C  22DA               	addwfc	fsr2h,f,c
 18950  00354E  0E08               	movlw	8
 18951  003550  6EDF               	movwf	indf2,c
 18952                           
 18953                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 18954  003552  EE20 F002          	lfsr	2,2
 18955  003556  504E               	movf	_pBDTEntryEP0OutNext,w,c
 18956  003558  26D9               	addwf	fsr2l,f,c
 18957  00355A  504F               	movf	_pBDTEntryEP0OutNext+1,w,c
 18958  00355C  22DA               	addwfc	fsr2h,f,c
 18959  00355E  0E30               	movlw	48
 18960  003560  6EDE               	movwf	postinc2,c
 18961  003562  0E04               	movlw	4
 18962  003564  6EDD               	movwf	postdec2,c
 18963                           
 18964                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 18965  003566  C04E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18966  00356A  C04F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18967  00356E  0E04               	movlw	4
 18968  003570  6EDF               	movwf	indf2,c
 18969                           
 18970                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 18971  003572  C04E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18972  003576  C04F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18973  00357A  0E00               	movlw	0
 18974  00357C  8EDB               	bsf	plusw2,7,c
 18975                           
 18976                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
 18977  00357E  0E00               	movlw	0
 18978  003580  0101               	movlb	1	; () banked
 18979  003582  6FF9               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 18980                           
 18981                           ; BSR set to: 1
 18982                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
 18983  003584  0E00               	movlw	0
 18984  003586  6FFA               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 18985                           
 18986                           ; BSR set to: 1
 18987                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
 18988  003588  5053               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 18989  00358A  A4D8               	btfss	status,2,c
 18990  00358C  0012               	return	
 18991                           
 18992                           ; BSR set to: 1
 18993                           ;usb_device.c: 1741: {
 18994                           ;usb_device.c: 1742: USBCtrlEPAllowStatusStage();
 18995  00358E  ECE5  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
 18996  003592  0012               	return	
 18997  003594                     __end_of_USBCtrlEPServiceComplete:
 18998                           	opt stack 0
 18999                           pclatu	equ	0xFFB
 19000                           pclath	equ	0xFFA
 19001                           tblptru	equ	0xFF8
 19002                           tblptrh	equ	0xFF7
 19003                           tblptrl	equ	0xFF6
 19004                           tablat	equ	0xFF5
 19005                           prodh	equ	0xFF4
 19006                           prodl	equ	0xFF3
 19007                           intcon	equ	0xFF2
 19008                           indf0	equ	0xFEF
 19009                           postinc0	equ	0xFEE
 19010                           fsr0h	equ	0xFEA
 19011                           fsr0l	equ	0xFE9
 19012                           wreg	equ	0xFE8
 19013                           indf1	equ	0xFE7
 19014                           postdec1	equ	0xFE5
 19015                           fsr1h	equ	0xFE2
 19016                           fsr1l	equ	0xFE1
 19017                           indf2	equ	0xFDF
 19018                           postinc2	equ	0xFDE
 19019                           postdec2	equ	0xFDD
 19020                           plusw2	equ	0xFDB
 19021                           fsr2h	equ	0xFDA
 19022                           fsr2l	equ	0xFD9
 19023                           status	equ	0xFD8
 19024                           
 19025 ;; *************** function _USBCtrlEPAllowDataStage *****************
 19026 ;; Defined at:
 19027 ;;		line 1488 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 19028 ;; Parameters:    Size  Location     Type
 19029 ;;		None
 19030 ;; Auto vars:     Size  Location     Type
 19031 ;;		None
 19032 ;; Return value:  Size  Location     Type
 19033 ;;                  1    wreg      void 
 19034 ;; Registers used:
 19035 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19036 ;; Tracked objects:
 19037 ;;		On entry : 0/0
 19038 ;;		On exit  : 0/0
 19039 ;;		Unchanged: 0/0
 19040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19041 ;;      Params:         0       0       0       0       0       0       0       0       0
 19042 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19043 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19044 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19045 ;;Total ram usage:        0 bytes
 19046 ;; Hardware stack levels used:    1
 19047 ;; Hardware stack levels required when called:    1
 19048 ;; This function calls:
 19049 ;;		_USBCtrlTrfTxService
 19050 ;; This function is called by:
 19051 ;;		_USBCtrlEPServiceComplete
 19052 ;; This function uses a non-reentrant model
 19053 ;;
 19054                           
 19055                           	psect	text73
 19056  0041D6                     __ptext73:
 19057                           	opt stack 0
 19058  0041D6                     _USBCtrlEPAllowDataStage:
 19059                           	opt stack 19
 19060                           
 19061                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
 19062                           
 19063                           ;incstack = 0
 19064  0041D6  0E00               	movlw	0
 19065  0041D8  0101               	movlb	1	; () banked
 19066  0041DA  6FF8               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 19067                           
 19068                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
 19069  0041DC  0E00               	movlw	0
 19070  0041DE  6FF7               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 19071                           
 19072                           ; BSR set to: 1
 19073                           ;usb_device.c: 1493: if(controlTransferState == 2)
 19074  0041E0  0E02               	movlw	2
 19075  0041E2  1856               	xorwf	_controlTransferState,w,c	;volatile
 19076  0041E4  A4D8               	btfss	status,2,c
 19077  0041E6  D01F               	goto	i2l433
 19078                           
 19079                           ; BSR set to: 1
 19080                           ;usb_device.c: 1494: {
 19081                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
 19082  0041E8  EE20 F001          	lfsr	2,1
 19083  0041EC  504E               	movf	_pBDTEntryEP0OutNext,w,c
 19084  0041EE  26D9               	addwf	fsr2l,f,c
 19085  0041F0  504F               	movf	_pBDTEntryEP0OutNext+1,w,c
 19086  0041F2  22DA               	addwfc	fsr2h,f,c
 19087  0041F4  0E08               	movlw	8
 19088  0041F6  6EDF               	movwf	indf2,c
 19089                           
 19090                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 19091  0041F8  EE20 F002          	lfsr	2,2
 19092  0041FC  504E               	movf	_pBDTEntryEP0OutNext,w,c
 19093  0041FE  26D9               	addwf	fsr2l,f,c
 19094  004200  504F               	movf	_pBDTEntryEP0OutNext+1,w,c
 19095  004202  22DA               	addwfc	fsr2h,f,c
 19096  004204  0E38               	movlw	56
 19097  004206  6EDE               	movwf	postinc2,c
 19098  004208  0E04               	movlw	4
 19099  00420A  6EDD               	movwf	postdec2,c
 19100                           
 19101                           ; BSR set to: 1
 19102                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 19103  00420C  C04E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19104  004210  C04F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19105  004214  0E48               	movlw	72
 19106  004216  6EDF               	movwf	indf2,c
 19107                           
 19108                           ; BSR set to: 1
 19109                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 19110  004218  C04E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19111  00421C  C04F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19112  004220  0E00               	movlw	0
 19113  004222  8EDB               	bsf	plusw2,7,c
 19114                           
 19115                           ;usb_device.c: 1500: }
 19116  004224  0012               	return	
 19117  004226                     i2l433:
 19118                           
 19119                           ; BSR set to: 1
 19120                           ;usb_device.c: 1501: else
 19121                           ;usb_device.c: 1502: {
 19122                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 19123                           
 19124                           ; BSR set to: 1
 19125  004226  5044               	movf	_inPipes+4,w,c	;volatile
 19126  004228  0104               	movlb	4	; () banked
 19127  00422A  5D36               	subwf	54,w,b	;volatile
 19128  00422C  5045               	movf	_inPipes+5,w,c	;volatile
 19129  00422E  5937               	subwfb	55,w,b	;volatile
 19130  004230  B0D8               	btfsc	status,0,c
 19131  004232  D004               	goto	i2l435
 19132                           
 19133                           ; BSR set to: 4
 19134                           ;usb_device.c: 1506: {
 19135                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
 19136  004234  C436 F044          	movff	1078,_inPipes+4	;volatile
 19137  004238  C437 F045          	movff	1079,_inPipes+5	;volatile
 19138  00423C                     i2l435:
 19139                           
 19140                           ; BSR set to: 4
 19141                           ;usb_device.c: 1508: }
 19142                           ;usb_device.c: 1509: USBCtrlTrfTxService();
 19143                           
 19144                           ; BSR set to: 4
 19145  00423C  EC7F  F01D         	call	_USBCtrlTrfTxService	;wreg free
 19146                           
 19147                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 19148  004240  EE20 F002          	lfsr	2,2
 19149  004244  5046               	movf	_pBDTEntryIn,w,c
 19150  004246  26D9               	addwf	fsr2l,f,c
 19151  004248  5047               	movf	_pBDTEntryIn+1,w,c
 19152  00424A  22DA               	addwfc	fsr2h,f,c
 19153  00424C  0E38               	movlw	56
 19154  00424E  6EDE               	movwf	postinc2,c
 19155  004250  0E04               	movlw	4
 19156  004252  6EDD               	movwf	postdec2,c
 19157                           
 19158                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 19159  004254  C046  FFD9         	movff	_pBDTEntryIn,fsr2l
 19160  004258  C047  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19161  00425C  0E48               	movlw	72
 19162  00425E  6EDF               	movwf	indf2,c
 19163                           
 19164                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
 19165  004260  C046  FFD9         	movff	_pBDTEntryIn,fsr2l
 19166  004264  C047  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19167  004268  0E00               	movlw	0
 19168  00426A  8EDB               	bsf	plusw2,7,c
 19169  00426C  0012               	return	
 19170  00426E                     __end_of_USBCtrlEPAllowDataStage:
 19171                           	opt stack 0
 19172                           pclatu	equ	0xFFB
 19173                           pclath	equ	0xFFA
 19174                           tblptru	equ	0xFF8
 19175                           tblptrh	equ	0xFF7
 19176                           tblptrl	equ	0xFF6
 19177                           tablat	equ	0xFF5
 19178                           prodh	equ	0xFF4
 19179                           prodl	equ	0xFF3
 19180                           intcon	equ	0xFF2
 19181                           indf0	equ	0xFEF
 19182                           postinc0	equ	0xFEE
 19183                           fsr0h	equ	0xFEA
 19184                           fsr0l	equ	0xFE9
 19185                           wreg	equ	0xFE8
 19186                           indf1	equ	0xFE7
 19187                           postdec1	equ	0xFE5
 19188                           fsr1h	equ	0xFE2
 19189                           fsr1l	equ	0xFE1
 19190                           indf2	equ	0xFDF
 19191                           postinc2	equ	0xFDE
 19192                           postdec2	equ	0xFDD
 19193                           plusw2	equ	0xFDB
 19194                           fsr2h	equ	0xFDA
 19195                           fsr2l	equ	0xFD9
 19196                           status	equ	0xFD8
 19197                           
 19198 ;; *************** function _USBCheckStdRequest *****************
 19199 ;; Defined at:
 19200 ;;		line 2686 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 19201 ;; Parameters:    Size  Location     Type
 19202 ;;		None
 19203 ;; Auto vars:     Size  Location     Type
 19204 ;;		None
 19205 ;; Return value:  Size  Location     Type
 19206 ;;                  1    wreg      void 
 19207 ;; Registers used:
 19208 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19209 ;; Tracked objects:
 19210 ;;		On entry : 0/0
 19211 ;;		On exit  : 0/0
 19212 ;;		Unchanged: 0/0
 19213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19214 ;;      Params:         0       0       0       0       0       0       0       0       0
 19215 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19216 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19217 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19218 ;;Total ram usage:        0 bytes
 19219 ;; Hardware stack levels used:    1
 19220 ;; Hardware stack levels required when called:    5
 19221 ;; This function calls:
 19222 ;;		_USBStdFeatureReqHandler
 19223 ;;		_USBStdGetDscHandler
 19224 ;;		_USBStdGetStatusHandler
 19225 ;;		_USBStdSetCfgHandler
 19226 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 19227 ;; This function is called by:
 19228 ;;		_USBCtrlTrfSetupHandler
 19229 ;; This function uses a non-reentrant model
 19230 ;;
 19231                           
 19232                           	psect	text74
 19233  003A26                     __ptext74:
 19234                           	opt stack 0
 19235  003A26                     _USBCheckStdRequest:
 19236                           	opt stack 16
 19237                           
 19238                           ;usb_device.c: 2688: if(SetupPkt.RequestType != (0x00>>5)) return;
 19239                           
 19240                           ;incstack = 0
 19241  003A26  0104               	movlb	4	; () banked
 19242  003A28  3930               	swapf	48,w,b	;volatile
 19243  003A2A  32E8               	rrcf	wreg,f,c
 19244  003A2C  0B03               	andlw	3
 19245  003A2E  0900               	iorlw	0
 19246  003A30  A4D8               	btfss	status,2,c
 19247  003A32  0012               	return	
 19248  003A34  D042               	goto	i2l568
 19249  003A36                     i2l569:
 19250                           
 19251                           ; BSR set to: 4
 19252                           ;usb_device.c: 2693: inPipes[0].info.bits.busy = 1;
 19253  003A36  8E43               	bsf	_inPipes+3,7,c	;volatile
 19254                           
 19255                           ; BSR set to: 4
 19256                           ;usb_device.c: 2694: USBDeviceState = ADR_PENDING_STATE;
 19257  003A38  0E08               	movlw	8
 19258  003A3A  6E58               	movwf	_USBDeviceState,c	;volatile
 19259                           
 19260                           ;usb_device.c: 2696: break;
 19261  003A3C  0012               	return	
 19262  003A3E                     
 19263                           ; BSR set to: 4
 19264                           ;usb_device.c: 2698: USBStdGetDscHandler();
 19265                           
 19266                           ; BSR set to: 4
 19267  003A3E  ECB4  F017         	call	_USBStdGetDscHandler	;wreg free
 19268                           
 19269                           ;usb_device.c: 2699: break;
 19270  003A42  0012               	return	
 19271  003A44                     
 19272                           ;usb_device.c: 2701: USBStdSetCfgHandler();
 19273  003A44  ECA5  F01C         	call	_USBStdSetCfgHandler	;wreg free
 19274                           
 19275                           ;usb_device.c: 2702: break;
 19276  003A48  0012               	return	
 19277  003A4A                     
 19278                           ;usb_device.c: 2704: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 19279  003A4A  0E5E               	movlw	low _USBActiveConfiguration
 19280  003A4C  6E40               	movwf	_inPipes,c	;volatile
 19281  003A4E  0E00               	movlw	high _USBActiveConfiguration
 19282  003A50  6E41               	movwf	_inPipes+1,c	;volatile
 19283                           
 19284                           ;usb_device.c: 2705: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 19285  003A52  8043               	bsf	_inPipes+3,0,c	;volatile
 19286                           
 19287                           ;usb_device.c: 2706: inPipes[0].wCount.v[0] = 1;
 19288  003A54  0E01               	movlw	1
 19289  003A56  6E44               	movwf	_inPipes+4,c	;volatile
 19290                           
 19291                           ;usb_device.c: 2707: inPipes[0].info.bits.busy = 1;
 19292  003A58  8E43               	bsf	_inPipes+3,7,c	;volatile
 19293                           
 19294                           ;usb_device.c: 2708: break;
 19295  003A5A  0012               	return	
 19296  003A5C                     
 19297                           ;usb_device.c: 2710: USBStdGetStatusHandler();
 19298  003A5C  EC9B  F020         	call	_USBStdGetStatusHandler	;wreg free
 19299                           
 19300                           ;usb_device.c: 2711: break;
 19301  003A60  0012               	return	
 19302  003A62                     
 19303                           ;usb_device.c: 2713: case 3:
 19304                           ;usb_device.c: 2714: USBStdFeatureReqHandler();
 19305  003A62  EC54  F00F         	call	_USBStdFeatureReqHandler	;wreg free
 19306                           
 19307                           ;usb_device.c: 2715: break;
 19308  003A66  0012               	return	
 19309  003A68                     
 19310                           ;usb_device.c: 2717: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 19311  003A68  0104               	movlb	4	; () banked
 19312  003A6A  5134               	movf	52,w,b	;volatile
 19313  003A6C  0D01               	mullw	1
 19314  003A6E  0EFC               	movlw	low _USBAlternateInterface
 19315  003A70  24F3               	addwf	prodl,w,c
 19316  003A72  6E40               	movwf	_inPipes,c	;volatile
 19317  003A74  0E02               	movlw	high _USBAlternateInterface
 19318  003A76  20F4               	addwfc	prodh,w,c
 19319  003A78  6E41               	movwf	_inPipes+1,c	;volatile
 19320                           
 19321                           ; BSR set to: 4
 19322                           ;usb_device.c: 2718: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 19323  003A7A  8043               	bsf	_inPipes+3,0,c	;volatile
 19324                           
 19325                           ; BSR set to: 4
 19326                           ;usb_device.c: 2719: inPipes[0].wCount.v[0] = 1;
 19327  003A7C  0E01               	movlw	1
 19328  003A7E  6E44               	movwf	_inPipes+4,c	;volatile
 19329                           
 19330                           ; BSR set to: 4
 19331                           ;usb_device.c: 2720: inPipes[0].info.bits.busy = 1;
 19332  003A80  8E43               	bsf	_inPipes+3,7,c	;volatile
 19333                           
 19334                           ;usb_device.c: 2721: break;
 19335  003A82  0012               	return	
 19336  003A84                     i2l578:
 19337                           
 19338                           ; BSR set to: 4
 19339                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
 19340  003A84  8E43               	bsf	_inPipes+3,7,c	;volatile
 19341                           
 19342                           ; BSR set to: 4
 19343                           ;usb_device.c: 2724: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 19344  003A86  5134               	movf	52,w,b	;volatile
 19345  003A88  0D01               	mullw	1
 19346  003A8A  0EFC               	movlw	low _USBAlternateInterface
 19347  003A8C  24F3               	addwf	prodl,w,c
 19348  003A8E  6ED9               	movwf	fsr2l,c
 19349  003A90  0E02               	movlw	high _USBAlternateInterface
 19350  003A92  20F4               	addwfc	prodh,w,c
 19351  003A94  6EDA               	movwf	fsr2h,c
 19352  003A96  C432 FFDF          	movff	1074,indf2	;volatile
 19353                           
 19354                           ;usb_device.c: 2725: break;
 19355  003A9A  0012               	return	
 19356  003A9C                     
 19357                           ; BSR set to: 4
 19358                           ;usb_device.c: 2727: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 19359                           
 19360                           ; BSR set to: 4
 19361  003A9C  0E00               	movlw	0
 19362  003A9E  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 19363  003AA0  0E02               	movlw	2
 19364  003AA2  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 19365  003AA4  0E00               	movlw	0
 19366  003AA6  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 19367  003AA8  0E00               	movlw	0
 19368  003AAA  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 19369  003AAC  0E00               	movlw	0
 19370  003AAE  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 19371  003AB0  0E00               	movlw	0
 19372  003AB2  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 19373  003AB4  EC03  F025         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 19374                           
 19375                           ;usb_device.c: 2732: }
 19376                           
 19377                           ;usb_device.c: 2731: break;
 19378                           
 19379                           ;usb_device.c: 2730: default:
 19380                           
 19381                           ;usb_device.c: 2729: case 12:
 19382                           
 19383                           ;usb_device.c: 2728: break;
 19384  003AB8  0012               	return	
 19385  003ABA                     i2l568:
 19386  003ABA  0104               	movlb	4	; () banked
 19387  003ABC  5131               	movf	49,w,b	;volatile
 19388                           
 19389                           ; Switch size 1, requested type "space"
 19390                           ; Number of cases is 11, Range of values is 0 to 12
 19391                           ; switch strategies available:
 19392                           ; Name         Instructions Cycles
 19393                           ; simple_byte           34    18 (average)
 19394                           ;	Chosen strategy is simple_byte
 19395  003ABE  0A00               	xorlw	0	; case 0
 19396  003AC0  B4D8               	btfsc	status,2,c
 19397  003AC2  D7CC               	goto	i2l574
 19398  003AC4  0A01               	xorlw	1	; case 1
 19399  003AC6  B4D8               	btfsc	status,2,c
 19400  003AC8  D7CC               	goto	i2l575
 19401  003ACA  0A02               	xorlw	2	; case 3
 19402  003ACC  B4D8               	btfsc	status,2,c
 19403  003ACE  D7C9               	goto	i2l575
 19404  003AD0  0A06               	xorlw	6	; case 5
 19405  003AD2  B4D8               	btfsc	status,2,c
 19406  003AD4  D7B0               	goto	i2l569
 19407  003AD6  0A03               	xorlw	3	; case 6
 19408  003AD8  B4D8               	btfsc	status,2,c
 19409  003ADA  D7B1               	goto	i2l571
 19410  003ADC  0A01               	xorlw	1	; case 7
 19411  003ADE  B4D8               	btfsc	status,2,c
 19412  003AE0  D7DD               	goto	i2l579
 19413  003AE2  0A0F               	xorlw	15	; case 8
 19414  003AE4  B4D8               	btfsc	status,2,c
 19415  003AE6  D7B1               	goto	i2l573
 19416  003AE8  0A01               	xorlw	1	; case 9
 19417  003AEA  B4D8               	btfsc	status,2,c
 19418  003AEC  D7AB               	goto	i2l572
 19419  003AEE  0A03               	xorlw	3	; case 10
 19420  003AF0  B4D8               	btfsc	status,2,c
 19421  003AF2  D7BA               	goto	i2l577
 19422  003AF4  0A01               	xorlw	1	; case 11
 19423  003AF6  B4D8               	btfsc	status,2,c
 19424  003AF8  D7C5               	goto	i2l578
 19425  003AFA  0A07               	xorlw	7	; case 12
 19426  003AFC  0012               	return	
 19427  003AFE                     __end_of_USBCheckStdRequest:
 19428                           	opt stack 0
 19429                           pclatu	equ	0xFFB
 19430                           pclath	equ	0xFFA
 19431                           tblptru	equ	0xFF8
 19432                           tblptrh	equ	0xFF7
 19433                           tblptrl	equ	0xFF6
 19434                           tablat	equ	0xFF5
 19435                           prodh	equ	0xFF4
 19436                           prodl	equ	0xFF3
 19437                           intcon	equ	0xFF2
 19438                           indf0	equ	0xFEF
 19439                           postinc0	equ	0xFEE
 19440                           fsr0h	equ	0xFEA
 19441                           fsr0l	equ	0xFE9
 19442                           wreg	equ	0xFE8
 19443                           indf1	equ	0xFE7
 19444                           postdec1	equ	0xFE5
 19445                           fsr1h	equ	0xFE2
 19446                           fsr1l	equ	0xFE1
 19447                           indf2	equ	0xFDF
 19448                           postinc2	equ	0xFDE
 19449                           postdec2	equ	0xFDD
 19450                           plusw2	equ	0xFDB
 19451                           fsr2h	equ	0xFDA
 19452                           fsr2l	equ	0xFD9
 19453                           status	equ	0xFD8
 19454                           
 19455 ;; *************** function _USBStdSetCfgHandler *****************
 19456 ;; Defined at:
 19457 ;;		line 1968 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 19458 ;; Parameters:    Size  Location     Type
 19459 ;;		None
 19460 ;; Auto vars:     Size  Location     Type
 19461 ;;  i               1   20[COMRAM] unsigned char 
 19462 ;; Return value:  Size  Location     Type
 19463 ;;                  1    wreg      void 
 19464 ;; Registers used:
 19465 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19466 ;; Tracked objects:
 19467 ;;		On entry : 0/0
 19468 ;;		On exit  : 0/0
 19469 ;;		Unchanged: 0/0
 19470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19471 ;;      Params:         0       0       0       0       0       0       0       0       0
 19472 ;;      Locals:         1       0       0       0       0       0       0       0       0
 19473 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19474 ;;      Totals:         1       0       0       0       0       0       0       0       0
 19475 ;;Total ram usage:        1 bytes
 19476 ;; Hardware stack levels used:    1
 19477 ;; Hardware stack levels required when called:    4
 19478 ;; This function calls:
 19479 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 19480 ;;		i2_memset
 19481 ;; This function is called by:
 19482 ;;		_USBCheckStdRequest
 19483 ;; This function uses a non-reentrant model
 19484 ;;
 19485                           
 19486                           	psect	text75
 19487  00394A                     __ptext75:
 19488                           	opt stack 0
 19489  00394A                     _USBStdSetCfgHandler:
 19490                           	opt stack 16
 19491                           
 19492                           ;usb_device.c: 1970: uint8_t i;
 19493                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
 19494                           
 19495                           ;incstack = 0
 19496  00394A  8E43               	bsf	_inPipes+3,7,c	;volatile
 19497                           
 19498                           ;usb_device.c: 1976: memset((void*)&UEP1,0x00,(2));;
 19499  00394C  0E71               	movlw	113
 19500  00394E  6E01               	movwf	i2memset@p1,c
 19501  003950  0E0F               	movlw	15
 19502  003952  6E02               	movwf	i2memset@p1+1,c
 19503  003954  0E00               	movlw	0
 19504  003956  6E04               	movwf	i2memset@c+1,c
 19505  003958  0E00               	movlw	0
 19506  00395A  6E03               	movwf	i2memset@c,c
 19507  00395C  0E00               	movlw	0
 19508  00395E  6E06               	movwf	i2memset@n+1,c
 19509  003960  0E02               	movlw	2
 19510  003962  6E05               	movwf	i2memset@n,c
 19511  003964  EC04  F028         	call	i2_memset	;wreg free
 19512                           
 19513                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 19514  003968  0E00               	movlw	0
 19515  00396A  6E01               	movwf	i2memset@p1,c
 19516  00396C  0E04               	movlw	4
 19517  00396E  6E02               	movwf	i2memset@p1+1,c
 19518  003970  0E00               	movlw	0
 19519  003972  6E04               	movwf	i2memset@c+1,c
 19520  003974  0E00               	movlw	0
 19521  003976  6E03               	movwf	i2memset@c,c
 19522  003978  0E00               	movlw	0
 19523  00397A  6E06               	movwf	i2memset@n+1,c
 19524  00397C  0E30               	movlw	48
 19525  00397E  6E05               	movwf	i2memset@n,c
 19526  003980  EC04  F028         	call	i2_memset	;wreg free
 19527                           
 19528                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
 19529  003984  8C6D               	bsf	3949,6,c	;volatile
 19530                           
 19531                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
 19532  003986  0E00               	movlw	0
 19533  003988  6E15               	movwf	USBStdSetCfgHandler@i,c
 19534  00398A                     i2l7249:
 19535  00398A  0E02               	movlw	2
 19536  00398C  6415               	cpfsgt	USBStdSetCfgHandler@i,c
 19537  00398E  D001               	goto	i2l485
 19538  003990  D016               	goto	i2u570_40
 19539  003992                     i2l485:
 19540                           
 19541                           ;usb_device.c: 1988: {
 19542                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
 19543  003992  5015               	movf	USBStdSetCfgHandler@i,w,c
 19544  003994  0D01               	mullw	1
 19545  003996  0EDB               	movlw	low _ep_data_in
 19546  003998  24F3               	addwf	prodl,w,c
 19547  00399A  6ED9               	movwf	fsr2l,c
 19548  00399C  0E02               	movlw	high _ep_data_in
 19549  00399E  20F4               	addwfc	prodh,w,c
 19550  0039A0  6EDA               	movwf	fsr2h,c
 19551  0039A2  0E00               	movlw	0
 19552  0039A4  6EDF               	movwf	indf2,c
 19553                           
 19554                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
 19555  0039A6  5015               	movf	USBStdSetCfgHandler@i,w,c
 19556  0039A8  0D01               	mullw	1
 19557  0039AA  0ED8               	movlw	low _ep_data_out
 19558  0039AC  24F3               	addwf	prodl,w,c
 19559  0039AE  6ED9               	movwf	fsr2l,c
 19560  0039B0  0E02               	movlw	high _ep_data_out
 19561  0039B2  20F4               	addwfc	prodh,w,c
 19562  0039B4  6EDA               	movwf	fsr2h,c
 19563  0039B6  0E00               	movlw	0
 19564  0039B8  6EDF               	movwf	indf2,c
 19565  0039BA  2A15               	incf	USBStdSetCfgHandler@i,f,c
 19566  0039BC  D7E6               	goto	i2l7249
 19567  0039BE                     i2u570_40:
 19568                           
 19569                           ;usb_device.c: 1991: }
 19570                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
 19571  0039BE  0EFC               	movlw	low _USBAlternateInterface
 19572  0039C0  6E01               	movwf	i2memset@p1,c
 19573  0039C2  0E02               	movlw	high _USBAlternateInterface
 19574  0039C4  6E02               	movwf	i2memset@p1+1,c
 19575  0039C6  0E00               	movlw	0
 19576  0039C8  6E04               	movwf	i2memset@c+1,c
 19577  0039CA  0E00               	movlw	0
 19578  0039CC  6E03               	movwf	i2memset@c,c
 19579  0039CE  0E00               	movlw	0
 19580  0039D0  6E06               	movwf	i2memset@n+1,c
 19581  0039D2  0E02               	movlw	2
 19582  0039D4  6E05               	movwf	i2memset@n,c
 19583  0039D6  EC04  F028         	call	i2_memset	;wreg free
 19584                           
 19585                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
 19586  0039DA  9C6D               	bcf	3949,6,c	;volatile
 19587                           
 19588                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 19589  0039DC  0E08               	movlw	8
 19590  0039DE  6E46               	movwf	_pBDTEntryIn,c
 19591  0039E0  0E04               	movlw	4
 19592  0039E2  6E47               	movwf	_pBDTEntryIn+1,c
 19593                           
 19594                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 19595  0039E4  0E00               	movlw	0
 19596  0039E6  6E50               	movwf	_pBDTEntryEP0OutCurrent,c
 19597  0039E8  0E04               	movlw	4
 19598  0039EA  6E51               	movwf	_pBDTEntryEP0OutCurrent+1,c
 19599                           
 19600                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 19601  0039EC  C050  F04E         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 19602  0039F0  C051  F04F         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 19603                           
 19604                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 19605  0039F4  C432 F05E          	movff	1074,_USBActiveConfiguration	;volatile
 19606                           
 19607                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
 19608  0039F8  505E               	movf	_USBActiveConfiguration,w,c	;volatile
 19609  0039FA  A4D8               	btfss	status,2,c
 19610  0039FC  D003               	goto	i2l487
 19611                           
 19612                           ;usb_device.c: 2010: {
 19613                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
 19614  0039FE  0E10               	movlw	16
 19615  003A00  6E58               	movwf	_USBDeviceState,c	;volatile
 19616                           
 19617                           ;usb_device.c: 2013: }
 19618  003A02  0012               	return	
 19619  003A04                     i2l487:
 19620                           
 19621                           ;usb_device.c: 2014: else
 19622                           ;usb_device.c: 2015: {
 19623                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 19624  003A04  0E00               	movlw	0
 19625  003A06  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 19626  003A08  0E01               	movlw	1
 19627  003A0A  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 19628  003A0C  0E5E               	movlw	low _USBActiveConfiguration
 19629  003A0E  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 19630  003A10  0E00               	movlw	high _USBActiveConfiguration
 19631  003A12  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 19632  003A14  0E00               	movlw	0
 19633  003A16  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 19634  003A18  0E01               	movlw	1
 19635  003A1A  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 19636  003A1C  EC03  F025         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 19637                           
 19638                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
 19639  003A20  0E20               	movlw	32
 19640  003A22  6E58               	movwf	_USBDeviceState,c	;volatile
 19641  003A24  0012               	return	
 19642  003A26                     __end_of_USBStdSetCfgHandler:
 19643                           	opt stack 0
 19644                           pclatu	equ	0xFFB
 19645                           pclath	equ	0xFFA
 19646                           tblptru	equ	0xFF8
 19647                           tblptrh	equ	0xFF7
 19648                           tblptrl	equ	0xFF6
 19649                           tablat	equ	0xFF5
 19650                           prodh	equ	0xFF4
 19651                           prodl	equ	0xFF3
 19652                           intcon	equ	0xFF2
 19653                           indf0	equ	0xFEF
 19654                           postinc0	equ	0xFEE
 19655                           fsr0h	equ	0xFEA
 19656                           fsr0l	equ	0xFE9
 19657                           wreg	equ	0xFE8
 19658                           indf1	equ	0xFE7
 19659                           postdec1	equ	0xFE5
 19660                           fsr1h	equ	0xFE2
 19661                           fsr1l	equ	0xFE1
 19662                           indf2	equ	0xFDF
 19663                           postinc2	equ	0xFDE
 19664                           postdec2	equ	0xFDD
 19665                           plusw2	equ	0xFDB
 19666                           fsr2h	equ	0xFDA
 19667                           fsr2l	equ	0xFD9
 19668                           status	equ	0xFD8
 19669                           
 19670 ;; *************** function i2_memset *****************
 19671 ;; Defined at:
 19672 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\memset.c"
 19673 ;; Parameters:    Size  Location     Type
 19674 ;;  p1              2    0[COMRAM] PTR void 
 19675 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 19676 ;;  c               2    2[COMRAM] int 
 19677 ;;  n               2    4[COMRAM] unsigned int 
 19678 ;; Auto vars:     Size  Location     Type
 19679 ;;  memset          2    6[COMRAM] PTR unsigned char 
 19680 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 19681 ;; Return value:  Size  Location     Type
 19682 ;;                  2    0[COMRAM] PTR void 
 19683 ;; Registers used:
 19684 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19685 ;; Tracked objects:
 19686 ;;		On entry : 0/0
 19687 ;;		On exit  : 0/0
 19688 ;;		Unchanged: 0/0
 19689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19690 ;;      Params:         6       0       0       0       0       0       0       0       0
 19691 ;;      Locals:         2       0       0       0       0       0       0       0       0
 19692 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19693 ;;      Totals:         8       0       0       0       0       0       0       0       0
 19694 ;;Total ram usage:        8 bytes
 19695 ;; Hardware stack levels used:    1
 19696 ;; This function calls:
 19697 ;;		Nothing
 19698 ;; This function is called by:
 19699 ;;		_USBStdSetCfgHandler
 19700 ;;		i2_USBDeviceInit
 19701 ;; This function uses a non-reentrant model
 19702 ;;
 19703                           
 19704                           	psect	text76
 19705  005008                     __ptext76:
 19706                           	opt stack 0
 19707  005008                     i2_memset:
 19708                           	opt stack 22
 19709                           
 19710                           ;incstack = 0
 19711  005008  C001  F007         	movff	i2memset@p1,i2memset@p
 19712  00500C  C002  F008         	movff	i2memset@p1+1,i2memset@p+1
 19713  005010  D008               	goto	i2l2925
 19714  005012                     i2l7179:
 19715  005012  C007  FFD9         	movff	i2memset@p,fsr2l
 19716  005016  C008  FFDA         	movff	i2memset@p+1,fsr2h
 19717  00501A  C003  FFDF         	movff	i2memset@c,indf2
 19718  00501E  4A07               	infsnz	i2memset@p,f,c
 19719  005020  2A08               	incf	i2memset@p+1,f,c
 19720  005022                     i2l2925:
 19721  005022  0605               	decf	i2memset@n,f,c
 19722  005024  A0D8               	btfss	status,0,c
 19723  005026  0606               	decf	i2memset@n+1,f,c
 19724  005028  2805               	incf	i2memset@n,w,c
 19725  00502A  E1F3               	bnz	i2l7179
 19726  00502C  2806               	incf	i2memset@n+1,w,c
 19727  00502E  B4D8               	btfsc	status,2,c
 19728  005030  0012               	return	
 19729  005032  D7EF               	goto	i2l2926
 19730  005034                     __end_ofi2_memset:
 19731                           	opt stack 0
 19732                           pclatu	equ	0xFFB
 19733                           pclath	equ	0xFFA
 19734                           tblptru	equ	0xFF8
 19735                           tblptrh	equ	0xFF7
 19736                           tblptrl	equ	0xFF6
 19737                           tablat	equ	0xFF5
 19738                           prodh	equ	0xFF4
 19739                           prodl	equ	0xFF3
 19740                           intcon	equ	0xFF2
 19741                           indf0	equ	0xFEF
 19742                           postinc0	equ	0xFEE
 19743                           fsr0h	equ	0xFEA
 19744                           fsr0l	equ	0xFE9
 19745                           wreg	equ	0xFE8
 19746                           indf1	equ	0xFE7
 19747                           postdec1	equ	0xFE5
 19748                           fsr1h	equ	0xFE2
 19749                           fsr1l	equ	0xFE1
 19750                           indf2	equ	0xFDF
 19751                           postinc2	equ	0xFDE
 19752                           postdec2	equ	0xFDD
 19753                           plusw2	equ	0xFDB
 19754                           fsr2h	equ	0xFDA
 19755                           fsr2l	equ	0xFD9
 19756                           status	equ	0xFD8
 19757                           
 19758 ;; *************** function _USBStdGetStatusHandler *****************
 19759 ;; Defined at:
 19760 ;;		line 2129 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 19761 ;; Parameters:    Size  Location     Type
 19762 ;;		None
 19763 ;; Auto vars:     Size  Location     Type
 19764 ;;  p               2    1[COMRAM] PTR struct __BDT
 19765 ;;		 -> RAM(2047), NULL(0), BDT(48), 
 19766 ;; Return value:  Size  Location     Type
 19767 ;;                  1    wreg      void 
 19768 ;; Registers used:
 19769 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 19770 ;; Tracked objects:
 19771 ;;		On entry : 0/0
 19772 ;;		On exit  : 0/0
 19773 ;;		Unchanged: 0/0
 19774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19775 ;;      Params:         0       0       0       0       0       0       0       0       0
 19776 ;;      Locals:         2       0       0       0       0       0       0       0       0
 19777 ;;      Temps:          1       0       0       0       0       0       0       0       0
 19778 ;;      Totals:         3       0       0       0       0       0       0       0       0
 19779 ;;Total ram usage:        3 bytes
 19780 ;; Hardware stack levels used:    1
 19781 ;; This function calls:
 19782 ;;		Nothing
 19783 ;; This function is called by:
 19784 ;;		_USBCheckStdRequest
 19785 ;; This function uses a non-reentrant model
 19786 ;;
 19787                           
 19788                           	psect	text77
 19789  004136                     __ptext77:
 19790                           	opt stack 0
 19791  004136                     _USBStdGetStatusHandler:
 19792                           	opt stack 20
 19793                           
 19794                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
 19795                           
 19796                           ;incstack = 0
 19797  004136  0E00               	movlw	0
 19798  004138  0104               	movlb	4	; () banked
 19799  00413A  6F38               	movwf	56,b	;volatile
 19800                           
 19801                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
 19802  00413C  0E00               	movlw	0
 19803  00413E  6F39               	movwf	57,b	;volatile
 19804                           
 19805                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
 19806  004140  D035               	goto	i2l506
 19807  004142                     i2l507:
 19808                           
 19809                           ; BSR set to: 4
 19810                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
 19811  004142  8E43               	bsf	_inPipes+3,7,c	;volatile
 19812                           
 19813                           ; BSR set to: 4
 19814                           ;usb_device.c: 2145: }
 19815                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
 19816                           
 19817                           ; BSR set to: 4
 19818                           
 19819                           ; BSR set to: 4
 19820                           ;usb_device.c: 2143: {
 19821                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
 19822                           
 19823                           ;usb_device.c: 2142: if(0 == 1)
 19824  004144  0101               	movlb	1	; () banked
 19825  004146  05FD               	decf	_RemoteWakeup& (0+255),w,b	;volatile
 19826  004148  A4D8               	btfss	status,2,c
 19827  00414A  D03B               	goto	i2l510
 19828                           
 19829                           ; BSR set to: 1
 19830                           ;usb_device.c: 2148: {
 19831                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
 19832  00414C  0104               	movlb	4	; () banked
 19833  00414E  8338               	bsf	56,1,b	;volatile
 19834                           
 19835                           ; BSR set to: 4
 19836                           ;usb_device.c: 2150: }
 19837                           ;usb_device.c: 2151: break;
 19838  004150  D038               	goto	i2l510
 19839  004152                     i2l511:
 19840                           
 19841                           ; BSR set to: 4
 19842                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
 19843  004152  8E43               	bsf	_inPipes+3,7,c	;volatile
 19844                           
 19845                           ;usb_device.c: 2154: break;
 19846  004154  D036               	goto	i2l510
 19847  004156                     i2l512:
 19848                           
 19849                           ; BSR set to: 4
 19850                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
 19851  004156  8E43               	bsf	_inPipes+3,7,c	;volatile
 19852                           
 19853                           ;usb_device.c: 2160: {
 19854                           ;usb_device.c: 2161: BDT_ENTRY *p;
 19855                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
 19856  004158  BF34               	btfsc	52,7,b	;volatile
 19857  00415A  D00A               	goto	i2l513
 19858                           
 19859                           ; BSR set to: 4
 19860                           ;usb_device.c: 2164: {
 19861                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 19862  00415C  5134               	movf	52,w,b	;volatile
 19863  00415E  0B0F               	andlw	15
 19864  004160  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 19865  004162  5001               	movf	??_USBStdGetStatusHandler,w,c
 19866  004164  0D02               	mullw	2
 19867  004166  0EC4               	movlw	low _pBDTEntryOut
 19868  004168  24F3               	addwf	prodl,w,c
 19869  00416A  6ED9               	movwf	fsr2l,c
 19870  00416C  0E02               	movlw	high _pBDTEntryOut
 19871  00416E  D009               	goto	L15
 19872  004170                     i2l513:
 19873                           
 19874                           ; BSR set to: 4
 19875                           ;usb_device.c: 2167: else
 19876                           ;usb_device.c: 2168: {
 19877                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 19878                           
 19879                           ; BSR set to: 4
 19880  004170  5134               	movf	52,w,b	;volatile
 19881  004172  0B0F               	andlw	15
 19882  004174  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 19883  004176  5001               	movf	??_USBStdGetStatusHandler,w,c
 19884  004178  0D02               	mullw	2
 19885  00417A  0E46               	movlw	low _pBDTEntryIn
 19886  00417C  24F3               	addwf	prodl,w,c
 19887  00417E  6ED9               	movwf	fsr2l,c
 19888  004180  0E00               	movlw	high _pBDTEntryIn
 19889  004182                     L15:
 19890  004182  20F4               	addwfc	prodh,w,c
 19891  004184  6EDA               	movwf	fsr2h,c
 19892  004186  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 19893  00418A  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 19894                           
 19895                           ; BSR set to: 4
 19896                           ;usb_device.c: 2170: }
 19897                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 19898                           
 19899                           ; BSR set to: 4
 19900  00418E  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 19901  004192  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 19902  004196  AEDF               	btfss	indf2,7,c
 19903  004198  D014               	goto	i2l510
 19904                           
 19905                           ; BSR set to: 4
 19906  00419A  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 19907  00419E  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 19908  0041A2  A4DF               	btfss	indf2,2,c
 19909  0041A4  D00E               	goto	i2l510
 19910                           
 19911                           ; BSR set to: 4
 19912                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
 19913  0041A6  0E01               	movlw	1
 19914  0041A8  6F38               	movwf	56,b	;volatile
 19915                           
 19916                           ; BSR set to: 4
 19917                           ;usb_device.c: 2175: }
 19918                           ;usb_device.c: 2176: }
 19919                           
 19920                           ; BSR set to: 4
 19921                           ;usb_device.c: 2174: break;
 19922  0041AA  D00B               	goto	i2l510
 19923  0041AC                     i2l506:
 19924                           
 19925                           ; BSR set to: 4
 19926                           
 19927                           ; BSR set to: 4
 19928  0041AC  5130               	movf	48,w,b	;volatile
 19929  0041AE  0B1F               	andlw	31
 19930                           
 19931                           ; Switch size 1, requested type "space"
 19932                           ; Number of cases is 3, Range of values is 0 to 2
 19933                           ; switch strategies available:
 19934                           ; Name         Instructions Cycles
 19935                           ; simple_byte           10     6 (average)
 19936                           ;	Chosen strategy is simple_byte
 19937  0041B0  0A00               	xorlw	0	; case 0
 19938  0041B2  B4D8               	btfsc	status,2,c
 19939  0041B4  D7C6               	goto	i2l507
 19940  0041B6  0A01               	xorlw	1	; case 1
 19941  0041B8  B4D8               	btfsc	status,2,c
 19942  0041BA  D7CB               	goto	i2l511
 19943  0041BC  0A03               	xorlw	3	; case 2
 19944  0041BE  B4D8               	btfsc	status,2,c
 19945  0041C0  D7CA               	goto	i2l512
 19946  0041C2                     i2l510:
 19947                           
 19948                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
 19949  0041C2  AE43               	btfss	_inPipes+3,7,c	;volatile
 19950  0041C4  0012               	return	
 19951                           
 19952                           ;usb_device.c: 2179: {
 19953                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 19954  0041C6  0E38               	movlw	56
 19955  0041C8  6E40               	movwf	_inPipes,c	;volatile
 19956  0041CA  0E04               	movlw	4
 19957  0041CC  6E41               	movwf	_inPipes+1,c	;volatile
 19958                           
 19959                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 19960  0041CE  8043               	bsf	_inPipes+3,0,c	;volatile
 19961                           
 19962                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
 19963  0041D0  0E02               	movlw	2
 19964  0041D2  6E44               	movwf	_inPipes+4,c	;volatile
 19965  0041D4  0012               	return	
 19966  0041D6                     __end_of_USBStdGetStatusHandler:
 19967                           	opt stack 0
 19968                           pclatu	equ	0xFFB
 19969                           pclath	equ	0xFFA
 19970                           tblptru	equ	0xFF8
 19971                           tblptrh	equ	0xFF7
 19972                           tblptrl	equ	0xFF6
 19973                           tablat	equ	0xFF5
 19974                           prodh	equ	0xFF4
 19975                           prodl	equ	0xFF3
 19976                           intcon	equ	0xFF2
 19977                           indf0	equ	0xFEF
 19978                           postinc0	equ	0xFEE
 19979                           fsr0h	equ	0xFEA
 19980                           fsr0l	equ	0xFE9
 19981                           wreg	equ	0xFE8
 19982                           indf1	equ	0xFE7
 19983                           postdec1	equ	0xFE5
 19984                           fsr1h	equ	0xFE2
 19985                           fsr1l	equ	0xFE1
 19986                           indf2	equ	0xFDF
 19987                           postinc2	equ	0xFDE
 19988                           postdec2	equ	0xFDD
 19989                           plusw2	equ	0xFDB
 19990                           fsr2h	equ	0xFDA
 19991                           fsr2l	equ	0xFD9
 19992                           status	equ	0xFD8
 19993                           
 19994 ;; *************** function _USBStdGetDscHandler *****************
 19995 ;; Defined at:
 19996 ;;		line 2043 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 19997 ;; Parameters:    Size  Location     Type
 19998 ;;		None
 19999 ;; Auto vars:     Size  Location     Type
 20000 ;;		None
 20001 ;; Return value:  Size  Location     Type
 20002 ;;                  1    wreg      void 
 20003 ;; Registers used:
 20004 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 20005 ;; Tracked objects:
 20006 ;;		On entry : 0/0
 20007 ;;		On exit  : 0/0
 20008 ;;		Unchanged: 0/0
 20009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20010 ;;      Params:         0       0       0       0       0       0       0       0       0
 20011 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20012 ;;      Temps:          2       0       0       0       0       0       0       0       0
 20013 ;;      Totals:         2       0       0       0       0       0       0       0       0
 20014 ;;Total ram usage:        2 bytes
 20015 ;; Hardware stack levels used:    1
 20016 ;; This function calls:
 20017 ;;		Nothing
 20018 ;; This function is called by:
 20019 ;;		_USBCheckStdRequest
 20020 ;; This function uses a non-reentrant model
 20021 ;;
 20022                           
 20023                           	psect	text78
 20024  002F68                     __ptext78:
 20025                           	opt stack 0
 20026  002F68                     _USBStdGetDscHandler:
 20027                           	opt stack 20
 20028                           
 20029                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
 20030                           
 20031                           ;incstack = 0
 20032  002F68  0E80               	movlw	128
 20033  002F6A  0104               	movlb	4	; () banked
 20034  002F6C  1930               	xorwf	48,w,b	;volatile
 20035  002F6E  A4D8               	btfss	status,2,c
 20036  002F70  0012               	return	
 20037                           
 20038                           ; BSR set to: 4
 20039                           ;usb_device.c: 2046: {
 20040                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 20041  002F72  0EC0               	movlw	192
 20042  002F74  6E43               	movwf	_inPipes+3,c	;volatile
 20043                           
 20044                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
 20045  002F76  D079               	goto	i2l493
 20046  002F78                     
 20047                           ; BSR set to: 4
 20048                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 20049                           
 20050                           ; BSR set to: 4
 20051  002F78  0EEC               	movlw	low _device_dsc
 20052  002F7A  6E40               	movwf	_inPipes,c	;volatile
 20053  002F7C  0E7D               	movlw	high _device_dsc
 20054  002F7E  6E41               	movwf	_inPipes+1,c	;volatile
 20055                           
 20056                           ; BSR set to: 4
 20057                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
 20058  002F80  0E00               	movlw	0
 20059  002F82  6E45               	movwf	_inPipes+5,c	;volatile
 20060  002F84  0E12               	movlw	18
 20061  002F86  6E44               	movwf	_inPipes+4,c	;volatile
 20062                           
 20063                           ;usb_device.c: 2058: break;
 20064  002F88  0012               	return	
 20065  002F8A                     
 20066                           ; BSR set to: 4
 20067                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
 20068                           
 20069                           ; BSR set to: 4
 20070  002F8A  5132               	movf	50,w,b	;volatile
 20071  002F8C  A4D8               	btfss	status,2,c
 20072  002F8E  D03D               	goto	i2l497
 20073                           
 20074                           ; BSR set to: 4
 20075                           ;usb_device.c: 2064: {
 20076                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 20077  002F90  5132               	movf	50,w,b	;volatile
 20078  002F92  0D02               	mullw	2
 20079  002F94  0E3F               	movlw	low _USB_CD_Ptr
 20080  002F96  24F3               	addwf	prodl,w,c
 20081  002F98  6EF6               	movwf	tblptrl,c
 20082  002F9A  0E7D               	movlw	high _USB_CD_Ptr
 20083  002F9C  20F4               	addwfc	prodh,w,c
 20084  002F9E  6EF7               	movwf	tblptrh,c
 20085  002FA0                     	if	0	;There are less than 3 active tblptr bytes
 20086  002FA0                     	endif
 20087  002FA0  0009               	tblrd		*+
 20088  002FA2  CFF5 F040          	movff	tablat,_inPipes	;volatile
 20089  002FA6  000A               	tblrd		*-
 20090  002FA8  CFF5 F041          	movff	tablat,_inPipes+1	;volatile
 20091                           
 20092                           ; BSR set to: 4
 20093                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 20094  002FAC  0E02               	movlw	2
 20095  002FAE  2440               	addwf	_inPipes,w,c	;volatile
 20096  002FB0  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 20097  002FB2  0E00               	movlw	0
 20098  002FB4  2041               	addwfc	_inPipes+1,w,c	;volatile
 20099  002FB6  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 20100  002FB8  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 20101  002FBC  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 20102  002FC0  6AF8               	clrf	tblptru,c
 20103  002FC2  0E07               	movlw	(high __ramtop+-1)
 20104  002FC4  64F7               	cpfsgt	tblptrh,c
 20105  002FC6  D003               	bra	i2u574_47
 20106  002FC8  0008               	tblrd		*
 20107  002FCA  50F5               	movf	tablat,w,c
 20108  002FCC  D005               	bra	i2u574_40
 20109  002FCE                     i2u574_47:
 20110  002FCE  CFF6 FFE9          	movff	tblptrl,fsr0l
 20111  002FD2  CFF7 FFEA          	movff	tblptrh,fsr0h
 20112  002FD6  50EF               	movf	indf0,w,c
 20113  002FD8                     i2u574_40:
 20114  002FD8  6E44               	movwf	_inPipes+4,c	;volatile
 20115                           
 20116                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 20117  002FDA  0E03               	movlw	3
 20118  002FDC  2440               	addwf	_inPipes,w,c	;volatile
 20119  002FDE  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 20120  002FE0  0E00               	movlw	0
 20121  002FE2  2041               	addwfc	_inPipes+1,w,c	;volatile
 20122  002FE4  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 20123  002FE6  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 20124  002FEA  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 20125  002FEE  6AF8               	clrf	tblptru,c
 20126  002FF0  0E07               	movlw	(high __ramtop+-1)
 20127  002FF2  64F7               	cpfsgt	tblptrh,c
 20128  002FF4  D003               	bra	i2u575_47
 20129  002FF6  0008               	tblrd		*
 20130  002FF8  50F5               	movf	tablat,w,c
 20131  002FFA  D005               	bra	i2u575_40
 20132  002FFC                     i2u575_47:
 20133  002FFC  CFF6 FFE9          	movff	tblptrl,fsr0l
 20134  003000  CFF7 FFEA          	movff	tblptrh,fsr0h
 20135  003004  50EF               	movf	indf0,w,c
 20136  003006                     i2u575_40:
 20137  003006  6E45               	movwf	_inPipes+5,c	;volatile
 20138                           
 20139                           ;usb_device.c: 2076: }
 20140  003008  0012               	return	
 20141  00300A                     i2l497:
 20142                           
 20143                           ;usb_device.c: 2077: else
 20144                           ;usb_device.c: 2078: {
 20145                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
 20146  00300A  0E00               	movlw	0
 20147  00300C  6E43               	movwf	_inPipes+3,c	;volatile
 20148                           
 20149                           ;usb_device.c: 2080: }
 20150                           ;usb_device.c: 2081: break;
 20151  00300E  0012               	return	
 20152  003010                     
 20153                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
 20154  003010  0E03               	movlw	3
 20155  003012  0104               	movlb	4	; () banked
 20156  003014  6132               	cpfslt	50,b	;volatile
 20157  003016  D023               	goto	i2l500
 20158                           
 20159                           ; BSR set to: 4
 20160                           ;usb_device.c: 2087: {
 20161                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 20162  003018  5132               	movf	50,w,b	;volatile
 20163  00301A  0D02               	mullw	2
 20164  00301C  0E39               	movlw	low _USB_SD_Ptr
 20165  00301E  24F3               	addwf	prodl,w,c
 20166  003020  6EF6               	movwf	tblptrl,c
 20167  003022  0E7D               	movlw	high _USB_SD_Ptr
 20168  003024  20F4               	addwfc	prodh,w,c
 20169  003026  6EF7               	movwf	tblptrh,c
 20170  003028                     	if	0	;There are less than 3 active tblptr bytes
 20171  003028                     	endif
 20172  003028  0009               	tblrd		*+
 20173  00302A  CFF5 F040          	movff	tablat,_inPipes	;volatile
 20174  00302E  000A               	tblrd		*-
 20175  003030  CFF5 F041          	movff	tablat,_inPipes+1	;volatile
 20176                           
 20177                           ; BSR set to: 4
 20178                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 20179  003034  C040  FFF6         	movff	_inPipes,tblptrl	;volatile
 20180  003038  C041  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 20181  00303C  6AF8               	clrf	tblptru,c
 20182  00303E  0E07               	movlw	(high __ramtop+-1)
 20183  003040  64F7               	cpfsgt	tblptrh,c
 20184  003042  D003               	bra	i2u577_47
 20185  003044  0008               	tblrd		*
 20186  003046  50F5               	movf	tablat,w,c
 20187  003048  D005               	bra	i2u577_40
 20188  00304A                     i2u577_47:
 20189  00304A  CFF6 FFE9          	movff	tblptrl,fsr0l
 20190  00304E  CFF7 FFEA          	movff	tblptrh,fsr0h
 20191  003052  50EF               	movf	indf0,w,c
 20192  003054                     i2u577_40:
 20193  003054  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 20194  003056  5001               	movf	??_USBStdGetDscHandler,w,c
 20195  003058  6E44               	movwf	_inPipes+4,c	;volatile
 20196  00305A  6A45               	clrf	_inPipes+5,c	;volatile
 20197                           
 20198                           ;usb_device.c: 2092: }
 20199  00305C  0012               	return	
 20200  00305E                     i2l500:
 20201                           
 20202                           ;usb_device.c: 2102: else
 20203                           ;usb_device.c: 2103: {
 20204                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
 20205  00305E  0E00               	movlw	0
 20206  003060  6E43               	movwf	_inPipes+3,c	;volatile
 20207                           
 20208                           ;usb_device.c: 2105: }
 20209                           ;usb_device.c: 2106: break;
 20210  003062  0012               	return	
 20211  003064                     
 20212                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
 20213  003064  0E00               	movlw	0
 20214  003066  6E43               	movwf	_inPipes+3,c	;volatile
 20215                           
 20216                           ;usb_device.c: 2110: }
 20217                           
 20218                           ;usb_device.c: 2109: break;
 20219  003068  0012               	return	
 20220  00306A                     i2l493:
 20221  00306A  0104               	movlb	4	; () banked
 20222  00306C  5133               	movf	51,w,b	;volatile
 20223                           
 20224                           ; Switch size 1, requested type "space"
 20225                           ; Number of cases is 3, Range of values is 1 to 3
 20226                           ; switch strategies available:
 20227                           ; Name         Instructions Cycles
 20228                           ; simple_byte           10     6 (average)
 20229                           ;	Chosen strategy is simple_byte
 20230  00306E  0A01               	xorlw	1	; case 1
 20231  003070  B4D8               	btfsc	status,2,c
 20232  003072  D782               	goto	i2l494
 20233  003074  0A03               	xorlw	3	; case 2
 20234  003076  B4D8               	btfsc	status,2,c
 20235  003078  D788               	goto	i2l496
 20236  00307A  0A01               	xorlw	1	; case 3
 20237  00307C  B4D8               	btfsc	status,2,c
 20238  00307E  D7C8               	goto	i2l499
 20239  003080  D7F1               	goto	i2l502
 20240  003082                     __end_of_USBStdGetDscHandler:
 20241                           	opt stack 0
 20242                           pclatu	equ	0xFFB
 20243                           pclath	equ	0xFFA
 20244                           tblptru	equ	0xFF8
 20245                           tblptrh	equ	0xFF7
 20246                           tblptrl	equ	0xFF6
 20247                           tablat	equ	0xFF5
 20248                           prodh	equ	0xFF4
 20249                           prodl	equ	0xFF3
 20250                           intcon	equ	0xFF2
 20251                           indf0	equ	0xFEF
 20252                           postinc0	equ	0xFEE
 20253                           fsr0h	equ	0xFEA
 20254                           fsr0l	equ	0xFE9
 20255                           wreg	equ	0xFE8
 20256                           indf1	equ	0xFE7
 20257                           postdec1	equ	0xFE5
 20258                           fsr1h	equ	0xFE2
 20259                           fsr1l	equ	0xFE1
 20260                           indf2	equ	0xFDF
 20261                           postinc2	equ	0xFDE
 20262                           postdec2	equ	0xFDD
 20263                           plusw2	equ	0xFDB
 20264                           fsr2h	equ	0xFDA
 20265                           fsr2l	equ	0xFD9
 20266                           status	equ	0xFD8
 20267                           
 20268 ;; *************** function _USBStdFeatureReqHandler *****************
 20269 ;; Defined at:
 20270 ;;		line 2754 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 20271 ;; Parameters:    Size  Location     Type
 20272 ;;		None
 20273 ;; Auto vars:     Size  Location     Type
 20274 ;;  p               2   24[COMRAM] PTR struct __BDT
 20275 ;;		 -> RAM(2047), NULL(0), BDT(48), 
 20276 ;;  pUEP            2   21[COMRAM] PTR unsigned char 
 20277 ;;		 -> UEP0(1), 
 20278 ;;  current_ep_d    1   23[COMRAM] struct .
 20279 ;; Return value:  Size  Location     Type
 20280 ;;                  1    wreg      void 
 20281 ;; Registers used:
 20282 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20283 ;; Tracked objects:
 20284 ;;		On entry : 0/0
 20285 ;;		On exit  : 0/0
 20286 ;;		Unchanged: 0/0
 20287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20288 ;;      Params:         0       0       0       0       0       0       0       0       0
 20289 ;;      Locals:         5       0       0       0       0       0       0       0       0
 20290 ;;      Temps:          1       0       0       0       0       0       0       0       0
 20291 ;;      Totals:         6       0       0       0       0       0       0       0       0
 20292 ;;Total ram usage:        6 bytes
 20293 ;; Hardware stack levels used:    1
 20294 ;; Hardware stack levels required when called:    4
 20295 ;; This function calls:
 20296 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 20297 ;; This function is called by:
 20298 ;;		_USBCheckStdRequest
 20299 ;; This function uses a non-reentrant model
 20300 ;;
 20301                           
 20302                           	psect	text79
 20303  001EA8                     __ptext79:
 20304                           	opt stack 0
 20305  001EA8                     _USBStdFeatureReqHandler:
 20306                           	opt stack 16
 20307                           
 20308                           ;usb_device.c: 2756: BDT_ENTRY *p;
 20309                           ;usb_device.c: 2757: EP_STATUS current_ep_data;
 20310                           ;usb_device.c: 2761: unsigned char* pUEP;
 20311                           ;usb_device.c: 2799: if((SetupPkt.bFeature == 1)&&
 20312                           ;usb_device.c: 2800: (SetupPkt.Recipient == (0x00)))
 20313                           
 20314                           ;incstack = 0
 20315  001EA8  0104               	movlb	4	; () banked
 20316  001EAA  0532               	decf	50,w,b	;volatile
 20317  001EAC  A4D8               	btfss	status,2,c
 20318  001EAE  D00F               	goto	i2l586
 20319                           
 20320                           ; BSR set to: 4
 20321  001EB0  5130               	movf	48,w,b	;volatile
 20322  001EB2  0B1F               	andlw	31
 20323  001EB4  0900               	iorlw	0
 20324  001EB6  A4D8               	btfss	status,2,c
 20325  001EB8  D00A               	goto	i2l586
 20326                           
 20327                           ; BSR set to: 4
 20328                           ;usb_device.c: 2801: {
 20329                           ;usb_device.c: 2802: inPipes[0].info.bits.busy = 1;
 20330  001EBA  8E43               	bsf	_inPipes+3,7,c	;volatile
 20331                           
 20332                           ; BSR set to: 4
 20333                           ;usb_device.c: 2803: if(SetupPkt.bRequest == 3)
 20334  001EBC  0E03               	movlw	3
 20335  001EBE  1931               	xorwf	49,w,b	;volatile
 20336  001EC0  A4D8               	btfss	status,2,c
 20337  001EC2  D002               	goto	i2l585
 20338                           
 20339                           ; BSR set to: 4
 20340                           ;usb_device.c: 2804: RemoteWakeup = 1;
 20341  001EC4  0E01               	movlw	1
 20342  001EC6  D001               	goto	L16
 20343  001EC8                     i2l585:
 20344                           
 20345                           ;usb_device.c: 2805: else
 20346                           ;usb_device.c: 2806: RemoteWakeup = 0;
 20347                           
 20348                           ; BSR set to: 1
 20349  001EC8  0E00               	movlw	0
 20350  001ECA                     L16:
 20351  001ECA  0101               	movlb	1	; () banked
 20352  001ECC  6FFD               	movwf	_RemoteWakeup& (0+255),b	;volatile
 20353  001ECE                     i2l586:
 20354                           
 20355                           ;usb_device.c: 2807: }
 20356                           ;usb_device.c: 2810: if((SetupPkt.bFeature == 0)&&
 20357                           ;usb_device.c: 2811: (SetupPkt.Recipient == (0x02))&&
 20358                           ;usb_device.c: 2812: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 20359                           ;usb_device.c: 2813: (USBDeviceState == CONFIGURED_STATE))
 20360                           
 20361                           ; BSR set to: 1
 20362  001ECE  0104               	movlb	4	; () banked
 20363  001ED0  5132               	movf	50,w,b	;volatile
 20364  001ED2  A4D8               	btfss	status,2,c
 20365  001ED4  0012               	return	
 20366                           
 20367                           ; BSR set to: 4
 20368  001ED6  5130               	movf	48,w,b	;volatile
 20369  001ED8  0B1F               	andlw	31
 20370  001EDA  0A02               	xorlw	2
 20371  001EDC  A4D8               	btfss	status,2,c
 20372  001EDE  0012               	return	
 20373                           
 20374                           ; BSR set to: 4
 20375  001EE0  5134               	movf	52,w,b	;volatile
 20376  001EE2  0B0F               	andlw	15
 20377  001EE4  0900               	iorlw	0
 20378  001EE6  B4D8               	btfsc	status,2,c
 20379  001EE8  0012               	return	
 20380                           
 20381                           ; BSR set to: 4
 20382  001EEA  5134               	movf	52,w,b	;volatile
 20383  001EEC  0B0F               	andlw	15
 20384  001EEE  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 20385  001EF0  0E03               	movlw	3
 20386  001EF2  6015               	cpfslt	??_USBStdFeatureReqHandler,c
 20387  001EF4  0012               	return	
 20388                           
 20389                           ; BSR set to: 4
 20390  001EF6  0E20               	movlw	32
 20391  001EF8  1858               	xorwf	_USBDeviceState,w,c	;volatile
 20392  001EFA  A4D8               	btfss	status,2,c
 20393  001EFC  0012               	return	
 20394                           
 20395                           ; BSR set to: 4
 20396                           ;usb_device.c: 2814: {
 20397                           ;usb_device.c: 2817: inPipes[0].info.bits.busy = 1;
 20398  001EFE  8E43               	bsf	_inPipes+3,7,c	;volatile
 20399                           
 20400                           ;usb_device.c: 2820: if(SetupPkt.EPDir == 0)
 20401  001F00  BF34               	btfsc	52,7,b	;volatile
 20402  001F02  D019               	goto	i2l588
 20403                           
 20404                           ; BSR set to: 4
 20405                           ;usb_device.c: 2821: {
 20406                           ;usb_device.c: 2822: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 20407  001F04  5134               	movf	52,w,b	;volatile
 20408  001F06  0B0F               	andlw	15
 20409  001F08  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 20410  001F0A  5015               	movf	??_USBStdFeatureReqHandler,w,c
 20411  001F0C  0D02               	mullw	2
 20412  001F0E  0EC4               	movlw	low _pBDTEntryOut
 20413  001F10  24F3               	addwf	prodl,w,c
 20414  001F12  6ED9               	movwf	fsr2l,c
 20415  001F14  0E02               	movlw	high _pBDTEntryOut
 20416  001F16  20F4               	addwfc	prodh,w,c
 20417  001F18  6EDA               	movwf	fsr2h,c
 20418  001F1A  CFDE F019          	movff	postinc2,USBStdFeatureReqHandler@p
 20419  001F1E  CFDD F01A          	movff	postdec2,USBStdFeatureReqHandler@p+1
 20420                           
 20421                           ;usb_device.c: 2823: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 20422  001F22  5134               	movf	52,w,b	;volatile
 20423  001F24  0B0F               	andlw	15
 20424  001F26  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 20425  001F28  5015               	movf	??_USBStdFeatureReqHandler,w,c
 20426  001F2A  0D01               	mullw	1
 20427  001F2C  0ED8               	movlw	low _ep_data_out
 20428  001F2E  24F3               	addwf	prodl,w,c
 20429  001F30  6ED9               	movwf	fsr2l,c
 20430  001F32  0E02               	movlw	high _ep_data_out
 20431  001F34  D018               	goto	L17
 20432  001F36                     i2l588:
 20433                           
 20434                           ; BSR set to: 4
 20435                           ;usb_device.c: 2825: else
 20436                           ;usb_device.c: 2826: {
 20437                           ;usb_device.c: 2827: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 20438                           
 20439                           ; BSR set to: 4
 20440  001F36  5134               	movf	52,w,b	;volatile
 20441  001F38  0B0F               	andlw	15
 20442  001F3A  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 20443  001F3C  5015               	movf	??_USBStdFeatureReqHandler,w,c
 20444  001F3E  0D02               	mullw	2
 20445  001F40  0E46               	movlw	low _pBDTEntryIn
 20446  001F42  24F3               	addwf	prodl,w,c
 20447  001F44  6ED9               	movwf	fsr2l,c
 20448  001F46  0E00               	movlw	high _pBDTEntryIn
 20449  001F48  20F4               	addwfc	prodh,w,c
 20450  001F4A  6EDA               	movwf	fsr2h,c
 20451  001F4C  CFDE F019          	movff	postinc2,USBStdFeatureReqHandler@p
 20452  001F50  CFDD F01A          	movff	postdec2,USBStdFeatureReqHandler@p+1
 20453                           
 20454                           ;usb_device.c: 2828: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 20455  001F54  5134               	movf	52,w,b	;volatile
 20456  001F56  0B0F               	andlw	15
 20457  001F58  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 20458  001F5A  5015               	movf	??_USBStdFeatureReqHandler,w,c
 20459  001F5C  0D01               	mullw	1
 20460  001F5E  0EDB               	movlw	low _ep_data_in
 20461  001F60  24F3               	addwf	prodl,w,c
 20462  001F62  6ED9               	movwf	fsr2l,c
 20463  001F64  0E02               	movlw	high _ep_data_in
 20464  001F66                     L17:
 20465  001F66  20F4               	addwfc	prodh,w,c
 20466  001F68  6EDA               	movwf	fsr2h,c
 20467  001F6A  50DF               	movf	indf2,w,c
 20468  001F6C  6E18               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 20469                           
 20470                           ; BSR set to: 4
 20471                           ;usb_device.c: 2829: }
 20472                           ;usb_device.c: 2835: if(current_ep_data.bits.ping_pong_state == 0)
 20473                           
 20474                           ; BSR set to: 4
 20475  001F6E  B018               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 20476  001F70  D006               	goto	i2l590
 20477                           
 20478                           ; BSR set to: 4
 20479                           ;usb_device.c: 2836: {
 20480                           ;usb_device.c: 2837: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 20481  001F72  0EFB               	movlw	251
 20482  001F74  1419               	andwf	USBStdFeatureReqHandler@p,w,c
 20483  001F76  6E19               	movwf	USBStdFeatureReqHandler@p,c
 20484  001F78  0EFF               	movlw	255
 20485  001F7A  141A               	andwf	USBStdFeatureReqHandler@p+1,w,c
 20486  001F7C  D004               	goto	L18
 20487  001F7E                     i2l590:
 20488                           
 20489                           ; BSR set to: 4
 20490                           ;usb_device.c: 2839: else
 20491                           ;usb_device.c: 2840: {
 20492                           ;usb_device.c: 2841: p = (BDT_ENTRY*)(((uintptr_t)p) | 0x0004);
 20493                           
 20494                           ; BSR set to: 4
 20495  001F7E  0E04               	movlw	4
 20496  001F80  1019               	iorwf	USBStdFeatureReqHandler@p,w,c
 20497  001F82  6E19               	movwf	USBStdFeatureReqHandler@p,c
 20498  001F84  501A               	movf	USBStdFeatureReqHandler@p+1,w,c
 20499  001F86                     L18:
 20500  001F86  6E1A               	movwf	USBStdFeatureReqHandler@p+1,c
 20501                           
 20502                           ; BSR set to: 4
 20503                           ;usb_device.c: 2842: }
 20504                           ;usb_device.c: 2847: if(SetupPkt.EPDir == 0)
 20505                           
 20506                           ; BSR set to: 4
 20507  001F88  BF34               	btfsc	52,7,b	;volatile
 20508  001F8A  D00A               	goto	i2l592
 20509                           
 20510                           ; BSR set to: 4
 20511                           ;usb_device.c: 2848: {
 20512                           ;usb_device.c: 2849: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 20513  001F8C  5134               	movf	52,w,b	;volatile
 20514  001F8E  0B0F               	andlw	15
 20515  001F90  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 20516  001F92  5015               	movf	??_USBStdFeatureReqHandler,w,c
 20517  001F94  0D02               	mullw	2
 20518  001F96  0EC4               	movlw	low _pBDTEntryOut
 20519  001F98  24F3               	addwf	prodl,w,c
 20520  001F9A  6ED9               	movwf	fsr2l,c
 20521  001F9C  0E02               	movlw	high _pBDTEntryOut
 20522  001F9E  D009               	goto	L19
 20523  001FA0                     i2l592:
 20524                           
 20525                           ; BSR set to: 4
 20526                           ;usb_device.c: 2851: else
 20527                           ;usb_device.c: 2852: {
 20528                           ;usb_device.c: 2853: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 20529                           
 20530                           ; BSR set to: 4
 20531  001FA0  5134               	movf	52,w,b	;volatile
 20532  001FA2  0B0F               	andlw	15
 20533  001FA4  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 20534  001FA6  5015               	movf	??_USBStdFeatureReqHandler,w,c
 20535  001FA8  0D02               	mullw	2
 20536  001FAA  0E46               	movlw	low _pBDTEntryIn
 20537  001FAC  24F3               	addwf	prodl,w,c
 20538  001FAE  6ED9               	movwf	fsr2l,c
 20539  001FB0  0E00               	movlw	high _pBDTEntryIn
 20540  001FB2                     L19:
 20541  001FB2  20F4               	addwfc	prodh,w,c
 20542  001FB4  6EDA               	movwf	fsr2h,c
 20543  001FB6  C019  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 20544  001FBA  C01A  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 20545                           
 20546                           ; BSR set to: 4
 20547                           ;usb_device.c: 2854: }
 20548                           ;usb_device.c: 2857: if(SetupPkt.bRequest == 3)
 20549                           
 20550                           ; BSR set to: 4
 20551  001FBE  0E03               	movlw	3
 20552  001FC0  1931               	xorwf	49,w,b	;volatile
 20553  001FC2  A4D8               	btfss	status,2,c
 20554  001FC4  D02D               	goto	i2l594
 20555                           
 20556                           ; BSR set to: 4
 20557                           ;usb_device.c: 2858: {
 20558                           ;usb_device.c: 2859: if(p->STAT.UOWN == 1)
 20559  001FC6  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 20560  001FCA  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 20561  001FCE  AEDF               	btfss	indf2,7,c
 20562  001FD0  D01A               	goto	i2l597
 20563                           
 20564                           ; BSR set to: 4
 20565                           ;usb_device.c: 2860: {
 20566                           ;usb_device.c: 2863: if(SetupPkt.EPDir == 0)
 20567  001FD2  BF34               	btfsc	52,7,b	;volatile
 20568  001FD4  D00A               	goto	i2l596
 20569                           
 20570                           ; BSR set to: 4
 20571                           ;usb_device.c: 2864: {
 20572                           ;usb_device.c: 2865: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 20573  001FD6  5134               	movf	52,w,b	;volatile
 20574  001FD8  0B0F               	andlw	15
 20575  001FDA  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 20576  001FDC  5015               	movf	??_USBStdFeatureReqHandler,w,c
 20577  001FDE  0D01               	mullw	1
 20578  001FE0  0ED8               	movlw	low _ep_data_out
 20579  001FE2  24F3               	addwf	prodl,w,c
 20580  001FE4  6ED9               	movwf	fsr2l,c
 20581  001FE6  0E02               	movlw	high _ep_data_out
 20582  001FE8  D00A               	goto	L20
 20583  001FEA                     i2l596:
 20584                           
 20585                           ;usb_device.c: 2867: else
 20586                           ;usb_device.c: 2868: {
 20587                           ;usb_device.c: 2869: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 20588                           
 20589                           ; BSR set to: 2
 20590  001FEA  0104               	movlb	4	; () banked
 20591  001FEC  5134               	movf	52,w,b	;volatile
 20592  001FEE  0B0F               	andlw	15
 20593  001FF0  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 20594  001FF2  5015               	movf	??_USBStdFeatureReqHandler,w,c
 20595  001FF4  0D01               	mullw	1
 20596  001FF6  0EDB               	movlw	low _ep_data_in
 20597  001FF8  24F3               	addwf	prodl,w,c
 20598  001FFA  6ED9               	movwf	fsr2l,c
 20599  001FFC  0E02               	movlw	high _ep_data_in
 20600  001FFE                     L20:
 20601  001FFE  20F4               	addwfc	prodh,w,c
 20602  002000  6EDA               	movwf	fsr2h,c
 20603  002002  0102               	movlb	2	; () banked
 20604  002004  82DF               	bsf	indf2,1,c
 20605  002006                     i2l597:
 20606                           
 20607                           ;usb_device.c: 2870: }
 20608                           ;usb_device.c: 2871: }
 20609                           ;usb_device.c: 2874: p->STAT.Val |= 0x04;
 20610                           
 20611                           ; BSR set to: 2
 20612                           
 20613                           ; BSR set to: 2
 20614  002006  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 20615  00200A  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 20616  00200E  0E00               	movlw	0
 20617  002010  84DB               	bsf	plusw2,2,c
 20618                           
 20619                           ;usb_device.c: 2875: p->STAT.Val |= 0x80;
 20620  002012  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 20621  002016  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 20622  00201A  0E00               	movlw	0
 20623  00201C  8EDB               	bsf	plusw2,7,c
 20624                           
 20625                           ;usb_device.c: 2876: }
 20626  00201E  0012               	return	
 20627  002020                     i2l594:
 20628                           
 20629                           ;usb_device.c: 2877: else
 20630                           ;usb_device.c: 2878: {
 20631                           ;usb_device.c: 2882: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 20632  002020  0E04               	movlw	4
 20633  002022  1819               	xorwf	USBStdFeatureReqHandler@p,w,c
 20634  002024  6E19               	movwf	USBStdFeatureReqHandler@p,c
 20635  002026  501A               	movf	USBStdFeatureReqHandler@p+1,w,c
 20636  002028  6E1A               	movwf	USBStdFeatureReqHandler@p+1,c
 20637                           
 20638                           ;usb_device.c: 2884: if(p->STAT.UOWN == 1)
 20639  00202A  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 20640  00202E  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 20641  002032  AEDF               	btfss	indf2,7,c
 20642  002034  D01B               	goto	i2l599
 20643                           
 20644                           ;usb_device.c: 2885: {
 20645                           ;usb_device.c: 2888: p->STAT.Val &= (~0x80);
 20646  002036  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 20647  00203A  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 20648  00203E  0E7F               	movlw	127
 20649  002040  16DF               	andwf	indf2,f,c
 20650                           
 20651                           ;usb_device.c: 2889: p->STAT.Val |= 0x40;
 20652  002042  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 20653  002046  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 20654  00204A  0E00               	movlw	0
 20655  00204C  8CDB               	bsf	plusw2,6,c
 20656                           
 20657                           ;usb_device.c: 2890: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 20658  00204E  0E00               	movlw	0
 20659  002050  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 20660  002052  0E05               	movlw	5
 20661  002054  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 20662  002056  C019  F00F         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 20663  00205A  C01A  F010         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 20664  00205E  0E00               	movlw	0
 20665  002060  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 20666  002062  0E02               	movlw	2
 20667  002064  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 20668  002066  EC03  F025         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 20669                           
 20670                           ;usb_device.c: 2891: }
 20671  00206A  D006               	goto	i2l600
 20672  00206C                     i2l599:
 20673                           
 20674                           ;usb_device.c: 2892: else
 20675                           ;usb_device.c: 2893: {
 20676                           ;usb_device.c: 2895: p->STAT.Val |= 0x40;
 20677  00206C  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 20678  002070  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 20679  002074  0E00               	movlw	0
 20680  002076  8CDB               	bsf	plusw2,6,c
 20681  002078                     i2l600:
 20682                           
 20683                           ;usb_device.c: 2896: }
 20684                           ;usb_device.c: 2900: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 20685  002078  0E04               	movlw	4
 20686  00207A  1819               	xorwf	USBStdFeatureReqHandler@p,w,c
 20687  00207C  6E19               	movwf	USBStdFeatureReqHandler@p,c
 20688  00207E  501A               	movf	USBStdFeatureReqHandler@p+1,w,c
 20689  002080  6E1A               	movwf	USBStdFeatureReqHandler@p+1,c
 20690                           
 20691                           ;usb_device.c: 2906: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 20692  002082  B218               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 20693  002084  D006               	goto	i2u599_40
 20694  002086  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 20695  00208A  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 20696  00208E  AEDF               	btfss	indf2,7,c
 20697  002090  D030               	goto	i2l601
 20698  002092                     i2u599_40:
 20699                           
 20700                           ;usb_device.c: 2907: {
 20701                           ;usb_device.c: 2908: if(SetupPkt.EPDir == 0)
 20702  002092  0104               	movlb	4	; () banked
 20703  002094  BF34               	btfsc	52,7,b	;volatile
 20704  002096  D00A               	goto	i2l604
 20705                           
 20706                           ; BSR set to: 4
 20707                           ;usb_device.c: 2909: {
 20708                           ;usb_device.c: 2910: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 20709  002098  5134               	movf	52,w,b	;volatile
 20710  00209A  0B0F               	andlw	15
 20711  00209C  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 20712  00209E  5015               	movf	??_USBStdFeatureReqHandler,w,c
 20713  0020A0  0D01               	mullw	1
 20714  0020A2  0ED8               	movlw	low _ep_data_out
 20715  0020A4  24F3               	addwf	prodl,w,c
 20716  0020A6  6ED9               	movwf	fsr2l,c
 20717  0020A8  0E02               	movlw	high _ep_data_out
 20718  0020AA  D00A               	goto	L21
 20719  0020AC                     i2l604:
 20720                           
 20721                           ;usb_device.c: 2912: else
 20722                           ;usb_device.c: 2913: {
 20723                           ;usb_device.c: 2914: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 20724                           
 20725                           ; BSR set to: 2
 20726  0020AC  0104               	movlb	4	; () banked
 20727  0020AE  5134               	movf	52,w,b	;volatile
 20728  0020B0  0B0F               	andlw	15
 20729  0020B2  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 20730  0020B4  5015               	movf	??_USBStdFeatureReqHandler,w,c
 20731  0020B6  0D01               	mullw	1
 20732  0020B8  0EDB               	movlw	low _ep_data_in
 20733  0020BA  24F3               	addwf	prodl,w,c
 20734  0020BC  6ED9               	movwf	fsr2l,c
 20735  0020BE  0E02               	movlw	high _ep_data_in
 20736  0020C0                     L21:
 20737  0020C0  20F4               	addwfc	prodh,w,c
 20738  0020C2  6EDA               	movwf	fsr2h,c
 20739  0020C4  0102               	movlb	2	; () banked
 20740  0020C6  92DF               	bcf	indf2,1,c
 20741                           
 20742                           ; BSR set to: 2
 20743                           ;usb_device.c: 2915: }
 20744                           ;usb_device.c: 2917: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 20745                           
 20746                           ; BSR set to: 2
 20747  0020C8  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 20748  0020CC  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 20749  0020D0  0E3B               	movlw	59
 20750  0020D2  16DF               	andwf	indf2,f,c
 20751                           
 20752                           ; BSR set to: 2
 20753                           ;usb_device.c: 2920: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 20754  0020D4  0E00               	movlw	0
 20755  0020D6  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 20756  0020D8  0E05               	movlw	5
 20757  0020DA  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 20758  0020DC  C019  F00F         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 20759  0020E0  C01A  F010         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 20760  0020E4  0E00               	movlw	0
 20761  0020E6  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 20762  0020E8  0E02               	movlw	2
 20763  0020EA  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 20764  0020EC  EC03  F025         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 20765                           
 20766                           ;usb_device.c: 2921: }
 20767  0020F0  D006               	goto	i2l606
 20768  0020F2                     i2l601:
 20769                           
 20770                           ;usb_device.c: 2922: else
 20771                           ;usb_device.c: 2923: {
 20772                           ;usb_device.c: 2925: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 20773  0020F2  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 20774  0020F6  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 20775  0020FA  0E3B               	movlw	59
 20776  0020FC  16DF               	andwf	indf2,f,c
 20777  0020FE                     i2l606:
 20778                           
 20779                           ;usb_device.c: 2926: }
 20780                           ;usb_device.c: 2973: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 20781  0020FE  0104               	movlb	4	; () banked
 20782  002100  5134               	movf	52,w,b	;volatile
 20783  002102  0B0F               	andlw	15
 20784  002104  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 20785  002106  5015               	movf	??_USBStdFeatureReqHandler,w,c
 20786  002108  0D01               	mullw	1
 20787  00210A  0E70               	movlw	112
 20788  00210C  24F3               	addwf	prodl,w,c
 20789  00210E  6E16               	movwf	USBStdFeatureReqHandler@pUEP,c
 20790  002110  0E0F               	movlw	15
 20791  002112  20F4               	addwfc	prodh,w,c
 20792  002114  6E17               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 20793                           
 20794                           ; BSR set to: 4
 20795                           ;usb_device.c: 2977: *pUEP &= ~0x0001;
 20796  002116  C016  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 20797  00211A  C017  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 20798  00211E  0EFE               	movlw	254
 20799  002120  16DF               	andwf	indf2,f,c
 20800                           
 20801                           ; BSR set to: 4
 20802  002122  0012               	return	
 20803  002124                     __end_of_USBStdFeatureReqHandler:
 20804                           	opt stack 0
 20805                           pclatu	equ	0xFFB
 20806                           pclath	equ	0xFFA
 20807                           tblptru	equ	0xFF8
 20808                           tblptrh	equ	0xFF7
 20809                           tblptrl	equ	0xFF6
 20810                           tablat	equ	0xFF5
 20811                           prodh	equ	0xFF4
 20812                           prodl	equ	0xFF3
 20813                           intcon	equ	0xFF2
 20814                           indf0	equ	0xFEF
 20815                           postinc0	equ	0xFEE
 20816                           fsr0h	equ	0xFEA
 20817                           fsr0l	equ	0xFE9
 20818                           wreg	equ	0xFE8
 20819                           indf1	equ	0xFE7
 20820                           postdec1	equ	0xFE5
 20821                           fsr1h	equ	0xFE2
 20822                           fsr1l	equ	0xFE1
 20823                           indf2	equ	0xFDF
 20824                           postinc2	equ	0xFDE
 20825                           postdec2	equ	0xFDD
 20826                           plusw2	equ	0xFDB
 20827                           fsr2h	equ	0xFDA
 20828                           fsr2l	equ	0xFD9
 20829                           status	equ	0xFD8
 20830                           
 20831 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 20832 ;; Defined at:
 20833 ;;		line 29 in file "usb/usb_events.c"
 20834 ;; Parameters:    Size  Location     Type
 20835 ;;  event           2   12[COMRAM] enum E4179
 20836 ;;  pdata           2   14[COMRAM] PTR void 
 20837 ;;		 -> RAM(2047), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 20838 ;;		 -> BDT(48), 
 20839 ;;  size            2   16[COMRAM] unsigned int 
 20840 ;; Auto vars:     Size  Location     Type
 20841 ;;		None
 20842 ;; Return value:  Size  Location     Type
 20843 ;;                  1    wreg      unsigned char 
 20844 ;; Registers used:
 20845 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20846 ;; Tracked objects:
 20847 ;;		On entry : 0/0
 20848 ;;		On exit  : 0/0
 20849 ;;		Unchanged: 0/0
 20850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20851 ;;      Params:         6       0       0       0       0       0       0       0       0
 20852 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20853 ;;      Temps:          2       0       0       0       0       0       0       0       0
 20854 ;;      Totals:         8       0       0       0       0       0       0       0       0
 20855 ;;Total ram usage:        8 bytes
 20856 ;; Hardware stack levels used:    1
 20857 ;; Hardware stack levels required when called:    3
 20858 ;; This function calls:
 20859 ;;		_CDCInitEP
 20860 ;;		_USBCheckCDCRequest
 20861 ;; This function is called by:
 20862 ;;		_USBDeviceTasks
 20863 ;;		_USBStdSetCfgHandler
 20864 ;;		_USBSuspend
 20865 ;;		_USBWakeFromSuspend
 20866 ;;		_USBCtrlTrfSetupHandler
 20867 ;;		_USBCheckStdRequest
 20868 ;;		_USBStdFeatureReqHandler
 20869 ;; This function uses a non-reentrant model
 20870 ;;
 20871                           
 20872                           	psect	text80
 20873  004A06                     __ptext80:
 20874                           	opt stack 0
 20875  004A06                     _USER_USB_CALLBACK_EVENT_HANDLER:
 20876                           	opt stack 20
 20877                           
 20878                           ;usb_events.c: 31: switch( (int) event )
 20879                           
 20880                           ;incstack = 0
 20881  004A06  D006               	goto	i2l205
 20882  004A08                     
 20883                           ;usb_events.c: 56: CDCInitEP();
 20884  004A08  EC42  F024         	call	_CDCInitEP	;wreg free
 20885                           
 20886                           ;usb_events.c: 60: break;
 20887                           
 20888                           ;usb_events.c: 59: case EVENT_SET_DESCRIPTOR:
 20889                           
 20890                           ;usb_events.c: 57: break;
 20891  004A0C  0012               	return	
 20892  004A0E                     
 20893                           ;usb_events.c: 65: USBCheckCDCRequest();
 20894  004A0E  ECA9  F01F         	call	_USBCheckCDCRequest	;wreg free
 20895                           
 20896                           ;usb_events.c: 76: }
 20897                           
 20898                           ;usb_events.c: 75: break;
 20899                           
 20900                           ;usb_events.c: 74: default:
 20901                           
 20902                           ;usb_events.c: 72: break;
 20903                           
 20904                           ;usb_events.c: 71: case EVENT_TRANSFER_TERMINATED:
 20905                           
 20906                           ;usb_events.c: 69: break;
 20907                           
 20908                           ;usb_events.c: 68: case EVENT_BUS_ERROR:
 20909                           
 20910                           ;usb_events.c: 66: break;
 20911  004A12  0012               	return	
 20912  004A14                     i2l205:
 20913  004A14  C00D  F013         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 20914  004A18  C00E  F014         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 20915                           
 20916                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 20917                           ; Switch size 1, requested type "space"
 20918                           ; Number of cases is 2, Range of values is 0 to 127
 20919                           ; switch strategies available:
 20920                           ; Name         Instructions Cycles
 20921                           ; simple_byte            7     4 (average)
 20922                           ;	Chosen strategy is simple_byte
 20923  004A1C  5014               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 20924  004A1E  0A00               	xorlw	0	; case 0
 20925  004A20  B4D8               	btfsc	status,2,c
 20926  004A22  D004               	goto	i2l10711
 20927  004A24  0A7F               	xorlw	127	; case 127
 20928  004A26  A4D8               	btfss	status,2,c
 20929  004A28  0012               	return	
 20930  004A2A  D018               	goto	i2l10713
 20931  004A2C                     i2l10711:
 20932                           
 20933                           ; Switch size 1, requested type "space"
 20934                           ; Number of cases is 8, Range of values is 1 to 117
 20935                           ; switch strategies available:
 20936                           ; Name         Instructions Cycles
 20937                           ; simple_byte           25    13 (average)
 20938                           ;	Chosen strategy is simple_byte
 20939  004A2C  5013               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 20940  004A2E  0A01               	xorlw	1	; case 1
 20941  004A30  B4D8               	btfsc	status,2,c
 20942  004A32  D7EA               	goto	i2l211
 20943  004A34  0A03               	xorlw	3	; case 2
 20944  004A36  B4D8               	btfsc	status,2,c
 20945  004A38  0012               	return	
 20946  004A3A  0A01               	xorlw	1	; case 3
 20947  004A3C  B4D8               	btfsc	status,2,c
 20948  004A3E  D7E7               	goto	i2l213
 20949  004A40  0A06               	xorlw	6	; case 5
 20950  004A42  B4D8               	btfsc	status,2,c
 20951  004A44  0012               	return	
 20952  004A46  0A77               	xorlw	119	; case 114
 20953  004A48  B4D8               	btfsc	status,2,c
 20954  004A4A  0012               	return	
 20955  004A4C  0A01               	xorlw	1	; case 115
 20956  004A4E  B4D8               	btfsc	status,2,c
 20957  004A50  0012               	return	
 20958  004A52  0A07               	xorlw	7	; case 116
 20959  004A54  B4D8               	btfsc	status,2,c
 20960  004A56  0012               	return	
 20961  004A58  0A01               	xorlw	1	; case 117
 20962  004A5A  0012               	return	
 20963  004A5C                     i2l10713:
 20964                           
 20965                           ; Switch size 1, requested type "space"
 20966                           ; Number of cases is 1, Range of values is 255 to 255
 20967                           ; switch strategies available:
 20968                           ; Name         Instructions Cycles
 20969                           ; simple_byte            4     3 (average)
 20970                           ;	Chosen strategy is simple_byte
 20971  004A5C  5013               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 20972  004A5E  0AFF               	xorlw	255	; case 255
 20973  004A60  0012               	return	
 20974  004A62                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 20975                           	opt stack 0
 20976                           pclatu	equ	0xFFB
 20977                           pclath	equ	0xFFA
 20978                           tblptru	equ	0xFF8
 20979                           tblptrh	equ	0xFF7
 20980                           tblptrl	equ	0xFF6
 20981                           tablat	equ	0xFF5
 20982                           prodh	equ	0xFF4
 20983                           prodl	equ	0xFF3
 20984                           intcon	equ	0xFF2
 20985                           indf0	equ	0xFEF
 20986                           postinc0	equ	0xFEE
 20987                           fsr0h	equ	0xFEA
 20988                           fsr0l	equ	0xFE9
 20989                           wreg	equ	0xFE8
 20990                           indf1	equ	0xFE7
 20991                           postdec1	equ	0xFE5
 20992                           fsr1h	equ	0xFE2
 20993                           fsr1l	equ	0xFE1
 20994                           indf2	equ	0xFDF
 20995                           postinc2	equ	0xFDE
 20996                           postdec2	equ	0xFDD
 20997                           plusw2	equ	0xFDB
 20998                           fsr2h	equ	0xFDA
 20999                           fsr2l	equ	0xFD9
 21000                           status	equ	0xFD8
 21001                           
 21002 ;; *************** function _USBCheckCDCRequest *****************
 21003 ;; Defined at:
 21004 ;;		line 147 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device_cdc.c"
 21005 ;; Parameters:    Size  Location     Type
 21006 ;;		None
 21007 ;; Auto vars:     Size  Location     Type
 21008 ;;		None
 21009 ;; Return value:  Size  Location     Type
 21010 ;;                  1    wreg      void 
 21011 ;; Registers used:
 21012 ;;		wreg, status,2, status,0
 21013 ;; Tracked objects:
 21014 ;;		On entry : 0/0
 21015 ;;		On exit  : 0/0
 21016 ;;		Unchanged: 0/0
 21017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21018 ;;      Params:         0       0       0       0       0       0       0       0       0
 21019 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21020 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21021 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21022 ;;Total ram usage:        0 bytes
 21023 ;; Hardware stack levels used:    1
 21024 ;; This function calls:
 21025 ;;		Nothing
 21026 ;; This function is called by:
 21027 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 21028 ;; This function uses a non-reentrant model
 21029 ;;
 21030                           
 21031                           	psect	text81
 21032  003F52                     __ptext81:
 21033                           	opt stack 0
 21034  003F52                     _USBCheckCDCRequest:
 21035                           	opt stack 22
 21036                           
 21037                           ;usb_device_cdc.c: 152: if(SetupPkt.Recipient != (0x01)) return;
 21038                           
 21039                           ;incstack = 0
 21040  003F52  0104               	movlb	4	; () banked
 21041  003F54  5130               	movf	48,w,b	;volatile
 21042  003F56  0B1F               	andlw	31
 21043  003F58  06E8               	decf	wreg,f,c
 21044  003F5A  A4D8               	btfss	status,2,c
 21045  003F5C  0012               	return	
 21046                           
 21047                           ; BSR set to: 4
 21048                           ;usb_device_cdc.c: 157: if(SetupPkt.RequestType != (0x20>>5)) return;
 21049                           
 21050                           ; BSR set to: 4
 21051                           
 21052                           ; BSR set to: 4
 21053  003F5E  3930               	swapf	48,w,b	;volatile
 21054  003F60  32E8               	rrcf	wreg,f,c
 21055  003F62  0B03               	andlw	3
 21056  003F64  06E8               	decf	wreg,f,c
 21057  003F66  A4D8               	btfss	status,2,c
 21058  003F68  0012               	return	
 21059                           
 21060                           ; BSR set to: 4
 21061                           ;usb_device_cdc.c: 163: if((SetupPkt.bIntfID != 0x0)&&
 21062                           ;usb_device_cdc.c: 164: (SetupPkt.bIntfID != 0x01)) return;
 21063                           
 21064                           ; BSR set to: 4
 21065                           
 21066                           ; BSR set to: 4
 21067  003F6A  5134               	movf	52,w,b	;volatile
 21068  003F6C  B4D8               	btfsc	status,2,c
 21069  003F6E  D032               	goto	i2l742
 21070                           
 21071                           ; BSR set to: 4
 21072  003F70  0534               	decf	52,w,b	;volatile
 21073  003F72  A4D8               	btfss	status,2,c
 21074  003F74  0012               	return	
 21075  003F76  D02E               	goto	i2l742
 21076  003F78                     
 21077                           ; BSR set to: 4
 21078                           ;usb_device_cdc.c: 171: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 21079                           
 21080                           ; BSR set to: 4
 21081  003F78  0EA6               	movlw	low _dummy_encapsulated_cmd_response
 21082  003F7A  6E40               	movwf	_inPipes,c	;volatile
 21083  003F7C  0E03               	movlw	high _dummy_encapsulated_cmd_response
 21084  003F7E  6E41               	movwf	_inPipes+1,c	;volatile
 21085                           
 21086                           ; BSR set to: 4
 21087                           ;usb_device_cdc.c: 172: inPipes[0].wCount.Val = 0x08;
 21088  003F80  0E00               	movlw	0
 21089  003F82  6E45               	movwf	_inPipes+5,c	;volatile
 21090  003F84  0E08               	movlw	8
 21091  003F86  6E44               	movwf	_inPipes+4,c	;volatile
 21092                           
 21093                           ; BSR set to: 4
 21094                           ;usb_device_cdc.c: 173: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 21095  003F88  8043               	bsf	_inPipes+3,0,c	;volatile
 21096                           
 21097                           ; BSR set to: 4
 21098                           ;usb_device_cdc.c: 174: inPipes[0].info.bits.busy = 1;
 21099  003F8A  8E43               	bsf	_inPipes+3,7,c	;volatile
 21100                           
 21101                           ;usb_device_cdc.c: 175: break;
 21102  003F8C  0012               	return	
 21103  003F8E                     
 21104                           ; BSR set to: 4
 21105                           ;usb_device_cdc.c: 178: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 21106                           
 21107                           ; BSR set to: 4
 21108  003F8E  0EA6               	movlw	low _dummy_encapsulated_cmd_response
 21109  003F90  6E40               	movwf	_inPipes,c	;volatile
 21110  003F92  0E03               	movlw	high _dummy_encapsulated_cmd_response
 21111  003F94  6E41               	movwf	_inPipes+1,c	;volatile
 21112                           
 21113                           ; BSR set to: 4
 21114                           ;usb_device_cdc.c: 179: inPipes[0].info.bits.busy = 1;
 21115  003F96  8E43               	bsf	_inPipes+3,7,c	;volatile
 21116                           
 21117                           ;usb_device_cdc.c: 180: break;
 21118  003F98  0012               	return	
 21119  003F9A                     i2l746:
 21120                           
 21121                           ; BSR set to: 4
 21122                           ;usb_device_cdc.c: 185: outPipes[0].wCount.Val = SetupPkt.wLength;
 21123  003F9A  C436 F03C          	movff	1078,_outPipes+4	;volatile
 21124  003F9E  C437 F03D          	movff	1079,_outPipes+5	;volatile
 21125                           
 21126                           ; BSR set to: 4
 21127                           ;usb_device_cdc.c: 186: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 21128  003FA2  0EAE               	movlw	low _line_coding
 21129  003FA4  6E38               	movwf	_outPipes,c	;volatile
 21130  003FA6  0E03               	movlw	high _line_coding
 21131  003FA8  6E39               	movwf	_outPipes+1,c	;volatile
 21132                           
 21133                           ;usb_device_cdc.c: 187: outPipes[0].pFunc = (0);
 21134  003FAA  0E00               	movlw	0
 21135  003FAC  6E3E               	movwf	_outPipes+6,c	;volatile
 21136  003FAE  0E00               	movlw	0
 21137  003FB0  6E3F               	movwf	_outPipes+7,c	;volatile
 21138                           
 21139                           ; BSR set to: 4
 21140                           ;usb_device_cdc.c: 188: outPipes[0].info.bits.busy = 1;
 21141  003FB2  8E3B               	bsf	_outPipes+3,7,c	;volatile
 21142                           
 21143                           ;usb_device_cdc.c: 189: break;
 21144  003FB4  0012               	return	
 21145  003FB6                     
 21146                           ; BSR set to: 4
 21147                           ;usb_device_cdc.c: 192: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 21148                           
 21149                           ; BSR set to: 4
 21150  003FB6  0EAE               	movlw	low _line_coding
 21151  003FB8  6E40               	movwf	_inPipes,c	;volatile
 21152  003FBA  0E03               	movlw	high _line_coding
 21153  003FBC  6E41               	movwf	_inPipes+1,c	;volatile
 21154                           
 21155                           ; BSR set to: 4
 21156  003FBE  0E00               	movlw	0
 21157  003FC0  6E45               	movwf	_inPipes+5,c	;volatile
 21158  003FC2  0E07               	movlw	7
 21159  003FC4  6E44               	movwf	_inPipes+4,c	;volatile
 21160                           
 21161                           ; BSR set to: 4
 21162  003FC6  0EC1               	movlw	193
 21163  003FC8  6E43               	movwf	_inPipes+3,c	;volatile
 21164                           
 21165                           ;usb_device_cdc.c: 196: break;
 21166  003FCA  0012               	return	
 21167  003FCC                     i2l748:
 21168                           
 21169                           ; BSR set to: 4
 21170                           ;usb_device_cdc.c: 199: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 21171  003FCC  C432 F2EE          	movff	1074,_control_signal_bitmap	;volatile
 21172                           
 21173                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
 21174  003FD0  8E43               	bsf	_inPipes+3,7,c	;volatile
 21175                           
 21176                           ; BSR set to: 4
 21177                           ;usb_device_cdc.c: 258: }
 21178                           
 21179                           ; BSR set to: 4
 21180                           ;usb_device_cdc.c: 257: break;
 21181                           
 21182                           ;usb_device_cdc.c: 256: default:
 21183                           
 21184                           ;usb_device_cdc.c: 232: break;
 21185  003FD2  0012               	return	
 21186  003FD4                     i2l742:
 21187                           
 21188                           ; BSR set to: 4
 21189                           
 21190                           ; BSR set to: 4
 21191  003FD4  5131               	movf	49,w,b	;volatile
 21192                           
 21193                           ; Switch size 1, requested type "space"
 21194                           ; Number of cases is 5, Range of values is 0 to 34
 21195                           ; switch strategies available:
 21196                           ; Name         Instructions Cycles
 21197                           ; simple_byte           16     9 (average)
 21198                           ;	Chosen strategy is simple_byte
 21199  003FD6  0A00               	xorlw	0	; case 0
 21200  003FD8  B4D8               	btfsc	status,2,c
 21201  003FDA  D7CE               	goto	i2l743
 21202  003FDC  0A01               	xorlw	1	; case 1
 21203  003FDE  B4D8               	btfsc	status,2,c
 21204  003FE0  D7D6               	goto	i2l745
 21205  003FE2  0A21               	xorlw	33	; case 32
 21206  003FE4  B4D8               	btfsc	status,2,c
 21207  003FE6  D7D9               	goto	i2l746
 21208  003FE8  0A01               	xorlw	1	; case 33
 21209  003FEA  B4D8               	btfsc	status,2,c
 21210  003FEC  D7E4               	goto	i2l747
 21211  003FEE  0A03               	xorlw	3	; case 34
 21212  003FF0  A4D8               	btfss	status,2,c
 21213  003FF2  0012               	return	
 21214  003FF4  D7EB               	goto	i2l748
 21215  003FF6                     __end_of_USBCheckCDCRequest:
 21216                           	opt stack 0
 21217                           pclatu	equ	0xFFB
 21218                           pclath	equ	0xFFA
 21219                           tblptru	equ	0xFF8
 21220                           tblptrh	equ	0xFF7
 21221                           tblptrl	equ	0xFF6
 21222                           tablat	equ	0xFF5
 21223                           prodh	equ	0xFF4
 21224                           prodl	equ	0xFF3
 21225                           intcon	equ	0xFF2
 21226                           indf0	equ	0xFEF
 21227                           postinc0	equ	0xFEE
 21228                           fsr0h	equ	0xFEA
 21229                           fsr0l	equ	0xFE9
 21230                           wreg	equ	0xFE8
 21231                           indf1	equ	0xFE7
 21232                           postdec1	equ	0xFE5
 21233                           fsr1h	equ	0xFE2
 21234                           fsr1l	equ	0xFE1
 21235                           indf2	equ	0xFDF
 21236                           postinc2	equ	0xFDE
 21237                           postdec2	equ	0xFDD
 21238                           plusw2	equ	0xFDB
 21239                           fsr2h	equ	0xFDA
 21240                           fsr2l	equ	0xFD9
 21241                           status	equ	0xFD8
 21242                           
 21243 ;; *************** function _CDCInitEP *****************
 21244 ;; Defined at:
 21245 ;;		line 294 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device_cdc.c"
 21246 ;; Parameters:    Size  Location     Type
 21247 ;;		None
 21248 ;; Auto vars:     Size  Location     Type
 21249 ;;		None
 21250 ;; Return value:  Size  Location     Type
 21251 ;;                  1    wreg      void 
 21252 ;; Registers used:
 21253 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21254 ;; Tracked objects:
 21255 ;;		On entry : 0/0
 21256 ;;		On exit  : 0/0
 21257 ;;		Unchanged: 0/0
 21258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21259 ;;      Params:         0       0       0       0       0       0       0       0       0
 21260 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21261 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21262 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21263 ;;Total ram usage:        0 bytes
 21264 ;; Hardware stack levels used:    1
 21265 ;; Hardware stack levels required when called:    2
 21266 ;; This function calls:
 21267 ;;		_USBEnableEndpoint
 21268 ;;		i2_USBTransferOnePacket
 21269 ;; This function is called by:
 21270 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 21271 ;; This function uses a non-reentrant model
 21272 ;;
 21273                           
 21274                           	psect	text82
 21275  004884                     __ptext82:
 21276                           	opt stack 0
 21277  004884                     _CDCInitEP:
 21278                           	opt stack 20
 21279                           
 21280                           ;usb_device_cdc.c: 297: line_coding.dwDTERate = 19200;
 21281                           
 21282                           ; BSR set to: 4
 21283                           ;incstack = 0
 21284  004884  0E00               	movlw	0
 21285  004886  0103               	movlb	3	; () banked
 21286  004888  6FAE               	movwf	_line_coding& (0+255),b
 21287  00488A  0E4B               	movlw	75
 21288  00488C  6FAF               	movwf	(_line_coding+1)& (0+255),b
 21289  00488E  0E00               	movlw	0
 21290  004890  6FB0               	movwf	(_line_coding+2)& (0+255),b
 21291  004892  0E00               	movlw	0
 21292  004894  6FB1               	movwf	(_line_coding+3)& (0+255),b
 21293                           
 21294                           ;usb_device_cdc.c: 298: line_coding.bCharFormat = 0x00;
 21295  004896  0E00               	movlw	0
 21296  004898  6FB2               	movwf	(_line_coding+4)& (0+255),b
 21297                           
 21298                           ;usb_device_cdc.c: 299: line_coding.bParityType = 0x00;
 21299  00489A  0E00               	movlw	0
 21300  00489C  6FB3               	movwf	(_line_coding+5)& (0+255),b
 21301                           
 21302                           ;usb_device_cdc.c: 300: line_coding.bDataBits = 0x08;
 21303  00489E  0E08               	movlw	8
 21304  0048A0  6FB4               	movwf	(_line_coding+6)& (0+255),b
 21305                           
 21306                           ;usb_device_cdc.c: 302: cdc_rx_len = 0;
 21307  0048A2  0E00               	movlw	0
 21308  0048A4  0101               	movlb	1	; () banked
 21309  0048A6  6FF5               	movwf	_cdc_rx_len& (0+255),b
 21310                           
 21311                           ; BSR set to: 1
 21312                           ;usb_device_cdc.c: 315: USBEnableEndpoint(1,0x02|0x10|0x08);
 21313  0048A8  0E1A               	movlw	26
 21314  0048AA  6E09               	movwf	USBEnableEndpoint@options,c
 21315  0048AC  0E01               	movlw	1
 21316  0048AE  ECFE  F026         	call	_USBEnableEndpoint
 21317                           
 21318                           ;usb_device_cdc.c: 316: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 21319  0048B2  0E1E               	movlw	30
 21320  0048B4  6E09               	movwf	USBEnableEndpoint@options,c
 21321  0048B6  0E02               	movlw	2
 21322  0048B8  ECFE  F026         	call	_USBEnableEndpoint
 21323                           
 21324                           ;usb_device_cdc.c: 318: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 21325  0048BC  0E00               	movlw	0
 21326  0048BE  6E01               	movwf	i2USBTransferOnePacket@dir,c
 21327  0048C0  0E40               	movlw	64
 21328  0048C2  6E02               	movwf	i2USBTransferOnePacket@data,c
 21329  0048C4  0E05               	movlw	5
 21330  0048C6  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 21331  0048C8  0E40               	movlw	64
 21332  0048CA  6E04               	movwf	i2USBTransferOnePacket@len,c
 21333  0048CC  0E02               	movlw	2
 21334  0048CE  ECCC  F019         	call	i2_USBTransferOnePacket
 21335  0048D2  C001  F1F1         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 21336  0048D6  C002  F1F2         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 21337                           
 21338                           ;usb_device_cdc.c: 319: CDCDataInHandle = (0);
 21339  0048DA  0E00               	movlw	0
 21340  0048DC  0102               	movlb	2	; () banked
 21341  0048DE  6FDE               	movwf	_CDCDataInHandle& (0+255),b
 21342  0048E0  0E00               	movlw	0
 21343  0048E2  6FDF               	movwf	(_CDCDataInHandle+1)& (0+255),b
 21344                           
 21345                           ; BSR set to: 2
 21346                           ;usb_device_cdc.c: 346: cdc_trf_state = 0;
 21347  0048E4  0E00               	movlw	0
 21348  0048E6  6FF0               	movwf	_cdc_trf_state& (0+255),b
 21349                           
 21350                           ; BSR set to: 2
 21351  0048E8  0012               	return		;funcret
 21352  0048EA                     __end_of_CDCInitEP:
 21353                           	opt stack 0
 21354                           pclatu	equ	0xFFB
 21355                           pclath	equ	0xFFA
 21356                           tblptru	equ	0xFF8
 21357                           tblptrh	equ	0xFF7
 21358                           tblptrl	equ	0xFF6
 21359                           tablat	equ	0xFF5
 21360                           prodh	equ	0xFF4
 21361                           prodl	equ	0xFF3
 21362                           intcon	equ	0xFF2
 21363                           indf0	equ	0xFEF
 21364                           postinc0	equ	0xFEE
 21365                           fsr0h	equ	0xFEA
 21366                           fsr0l	equ	0xFE9
 21367                           wreg	equ	0xFE8
 21368                           indf1	equ	0xFE7
 21369                           postdec1	equ	0xFE5
 21370                           fsr1h	equ	0xFE2
 21371                           fsr1l	equ	0xFE1
 21372                           indf2	equ	0xFDF
 21373                           postinc2	equ	0xFDE
 21374                           postdec2	equ	0xFDD
 21375                           plusw2	equ	0xFDB
 21376                           fsr2h	equ	0xFDA
 21377                           fsr2l	equ	0xFD9
 21378                           status	equ	0xFD8
 21379                           
 21380 ;; *************** function i2_USBTransferOnePacket *****************
 21381 ;; Defined at:
 21382 ;;		line 995 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 21383 ;; Parameters:    Size  Location     Type
 21384 ;;  ep              1    wreg     unsigned char 
 21385 ;;  dir             1    0[COMRAM] unsigned char 
 21386 ;;  data            2    1[COMRAM] PTR unsigned char 
 21387 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 21388 ;;  len             1    3[COMRAM] unsigned char 
 21389 ;; Auto vars:     Size  Location     Type
 21390 ;;  ep              1    8[COMRAM] unsigned char 
 21391 ;;  USBTransferO    2    9[COMRAM] PTR volatile struct __BD
 21392 ;;		 -> RAM(2047), NULL(0), BDT(48), 
 21393 ;; Return value:  Size  Location     Type
 21394 ;;                  2    0[COMRAM] PTR void 
 21395 ;; Registers used:
 21396 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21397 ;; Tracked objects:
 21398 ;;		On entry : 0/0
 21399 ;;		On exit  : 0/0
 21400 ;;		Unchanged: 0/0
 21401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21402 ;;      Params:         4       0       0       0       0       0       0       0       0
 21403 ;;      Locals:         3       0       0       0       0       0       0       0       0
 21404 ;;      Temps:          4       0       0       0       0       0       0       0       0
 21405 ;;      Totals:        11       0       0       0       0       0       0       0       0
 21406 ;;Total ram usage:       11 bytes
 21407 ;; Hardware stack levels used:    1
 21408 ;; This function calls:
 21409 ;;		Nothing
 21410 ;; This function is called by:
 21411 ;;		_CDCInitEP
 21412 ;; This function uses a non-reentrant model
 21413 ;;
 21414                           
 21415                           	psect	text83
 21416  003398                     __ptext83:
 21417                           	opt stack 0
 21418  003398                     i2_USBTransferOnePacket:
 21419                           	opt stack 21
 21420                           
 21421                           ; BSR set to: 2
 21422                           ;incstack = 0
 21423                           ;i2USBTransferOnePacket@ep stored from wreg
 21424  003398  6E09               	movwf	i2USBTransferOnePacket@ep,c
 21425                           
 21426                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 21427                           ;usb_device.c: 1000: if(dir != 0)
 21428  00339A  5001               	movf	i2USBTransferOnePacket@dir,w,c
 21429  00339C  B4D8               	btfsc	status,2,c
 21430  00339E  D007               	goto	i2l397
 21431                           
 21432                           ;usb_device.c: 1001: {
 21433                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 21434  0033A0  5009               	movf	i2USBTransferOnePacket@ep,w,c
 21435  0033A2  0D02               	mullw	2
 21436  0033A4  0E46               	movlw	low _pBDTEntryIn
 21437  0033A6  24F3               	addwf	prodl,w,c
 21438  0033A8  6ED9               	movwf	fsr2l,c
 21439  0033AA  0E00               	movlw	high _pBDTEntryIn
 21440  0033AC  D006               	goto	L22
 21441  0033AE                     i2l397:
 21442                           
 21443                           ;usb_device.c: 1005: else
 21444                           ;usb_device.c: 1006: {
 21445                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 21446  0033AE  5009               	movf	i2USBTransferOnePacket@ep,w,c
 21447  0033B0  0D02               	mullw	2
 21448  0033B2  0EC4               	movlw	low _pBDTEntryOut
 21449  0033B4  24F3               	addwf	prodl,w,c
 21450  0033B6  6ED9               	movwf	fsr2l,c
 21451  0033B8  0E02               	movlw	high _pBDTEntryOut
 21452  0033BA                     L22:
 21453  0033BA  20F4               	addwfc	prodh,w,c
 21454  0033BC  6EDA               	movwf	fsr2h,c
 21455  0033BE  CFDE F00A          	movff	postinc2,i2USBTransferOnePacket@handle
 21456  0033C2  CFDD F00B          	movff	postdec2,i2USBTransferOnePacket@handle+1
 21457                           
 21458                           ;usb_device.c: 1009: }
 21459                           ;usb_device.c: 1013: if(handle == 0)
 21460  0033C6  500A               	movf	i2USBTransferOnePacket@handle,w,c
 21461  0033C8  100B               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 21462  0033CA  A4D8               	btfss	status,2,c
 21463  0033CC  D005               	goto	i2l399
 21464                           
 21465                           ;usb_device.c: 1014: {
 21466                           ;usb_device.c: 1015: return 0;
 21467  0033CE  0E00               	movlw	0
 21468  0033D0  6E01               	movwf	?i2_USBTransferOnePacket,c
 21469  0033D2  0E00               	movlw	0
 21470  0033D4  6E02               	movwf	?i2_USBTransferOnePacket+1,c
 21471  0033D6  0012               	return	
 21472  0033D8                     i2l399:
 21473                           
 21474                           ;usb_device.c: 1016: }
 21475                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 21476  0033D8  EE20 F002          	lfsr	2,2
 21477  0033DC  500A               	movf	i2USBTransferOnePacket@handle,w,c
 21478  0033DE  26D9               	addwf	fsr2l,f,c
 21479  0033E0  500B               	movf	i2USBTransferOnePacket@handle+1,w,c
 21480  0033E2  22DA               	addwfc	fsr2h,f,c
 21481  0033E4  C002  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 21482  0033E8  C003  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 21483                           
 21484                           ;usb_device.c: 1030: handle->CNT = len;
 21485  0033EC  EE20 F001          	lfsr	2,1
 21486  0033F0  500A               	movf	i2USBTransferOnePacket@handle,w,c
 21487  0033F2  26D9               	addwf	fsr2l,f,c
 21488  0033F4  500B               	movf	i2USBTransferOnePacket@handle+1,w,c
 21489  0033F6  22DA               	addwfc	fsr2h,f,c
 21490  0033F8  C004  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 21491                           
 21492                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 21493  0033FC  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 21494  003400  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 21495  003404  0E40               	movlw	64
 21496  003406  16DF               	andwf	indf2,f,c
 21497                           
 21498                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 21499  003408  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 21500  00340C  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 21501  003410  0E00               	movlw	0
 21502  003412  86DB               	bsf	plusw2,3,c
 21503                           
 21504                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 21505  003414  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 21506  003418  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 21507  00341C  0E00               	movlw	0
 21508  00341E  8EDB               	bsf	plusw2,7,c
 21509                           
 21510                           ;usb_device.c: 1036: if(dir != 0)
 21511  003420  5001               	movf	i2USBTransferOnePacket@dir,w,c
 21512  003422  B4D8               	btfsc	status,2,c
 21513  003424  D018               	goto	i2l401
 21514                           
 21515                           ;usb_device.c: 1037: {
 21516                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
 21517  003426  5009               	movf	i2USBTransferOnePacket@ep,w,c
 21518  003428  0D02               	mullw	2
 21519  00342A  0E46               	movlw	low _pBDTEntryIn
 21520  00342C  24F3               	addwf	prodl,w,c
 21521  00342E  6ED9               	movwf	fsr2l,c
 21522  003430  0E00               	movlw	high _pBDTEntryIn
 21523  003432  20F4               	addwfc	prodh,w,c
 21524  003434  6EDA               	movwf	fsr2h,c
 21525  003436  CFDE F005          	movff	postinc2,??i2_USBTransferOnePacket
 21526  00343A  CFDD F006          	movff	postdec2,??i2_USBTransferOnePacket+1
 21527  00343E  0E04               	movlw	4
 21528  003440  1805               	xorwf	??i2_USBTransferOnePacket,w,c
 21529  003442  6E07               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 21530  003444  5006               	movf	??i2_USBTransferOnePacket+1,w,c
 21531  003446  6E08               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 21532  003448  5009               	movf	i2USBTransferOnePacket@ep,w,c
 21533  00344A  0D02               	mullw	2
 21534  00344C  0E46               	movlw	low _pBDTEntryIn
 21535  00344E  24F3               	addwf	prodl,w,c
 21536  003450  6ED9               	movwf	fsr2l,c
 21537  003452  0E00               	movlw	high _pBDTEntryIn
 21538  003454  D017               	goto	L23
 21539  003456                     i2l401:
 21540                           
 21541                           ;usb_device.c: 1041: else
 21542                           ;usb_device.c: 1042: {
 21543                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
 21544  003456  5009               	movf	i2USBTransferOnePacket@ep,w,c
 21545  003458  0D02               	mullw	2
 21546  00345A  0EC4               	movlw	low _pBDTEntryOut
 21547  00345C  24F3               	addwf	prodl,w,c
 21548  00345E  6ED9               	movwf	fsr2l,c
 21549  003460  0E02               	movlw	high _pBDTEntryOut
 21550  003462  20F4               	addwfc	prodh,w,c
 21551  003464  6EDA               	movwf	fsr2h,c
 21552  003466  CFDE F005          	movff	postinc2,??i2_USBTransferOnePacket
 21553  00346A  CFDD F006          	movff	postdec2,??i2_USBTransferOnePacket+1
 21554  00346E  0E04               	movlw	4
 21555  003470  1805               	xorwf	??i2_USBTransferOnePacket,w,c
 21556  003472  6E07               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 21557  003474  5006               	movf	??i2_USBTransferOnePacket+1,w,c
 21558  003476  6E08               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 21559  003478  5009               	movf	i2USBTransferOnePacket@ep,w,c
 21560  00347A  0D02               	mullw	2
 21561  00347C  0EC4               	movlw	low _pBDTEntryOut
 21562  00347E  24F3               	addwf	prodl,w,c
 21563  003480  6ED9               	movwf	fsr2l,c
 21564  003482  0E02               	movlw	high _pBDTEntryOut
 21565  003484                     L23:
 21566  003484  20F4               	addwfc	prodh,w,c
 21567  003486  6EDA               	movwf	fsr2h,c
 21568  003488  C007  FFDE         	movff	??i2_USBTransferOnePacket+2,postinc2
 21569  00348C  C008  FFDD         	movff	??i2_USBTransferOnePacket+3,postdec2
 21570                           
 21571                           ;usb_device.c: 1045: }
 21572                           ;usb_device.c: 1046: return (void*)handle;
 21573  003490  C00A  F001         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 21574  003494  C00B  F002         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 21575  003498  0012               	return	
 21576  00349A                     __end_ofi2_USBTransferOnePacket:
 21577                           	opt stack 0
 21578                           pclatu	equ	0xFFB
 21579                           pclath	equ	0xFFA
 21580                           tblptru	equ	0xFF8
 21581                           tblptrh	equ	0xFF7
 21582                           tblptrl	equ	0xFF6
 21583                           tablat	equ	0xFF5
 21584                           prodh	equ	0xFF4
 21585                           prodl	equ	0xFF3
 21586                           intcon	equ	0xFF2
 21587                           indf0	equ	0xFEF
 21588                           postinc0	equ	0xFEE
 21589                           fsr0h	equ	0xFEA
 21590                           fsr0l	equ	0xFE9
 21591                           wreg	equ	0xFE8
 21592                           indf1	equ	0xFE7
 21593                           postdec1	equ	0xFE5
 21594                           fsr1h	equ	0xFE2
 21595                           fsr1l	equ	0xFE1
 21596                           indf2	equ	0xFDF
 21597                           postinc2	equ	0xFDE
 21598                           postdec2	equ	0xFDD
 21599                           plusw2	equ	0xFDB
 21600                           fsr2h	equ	0xFDA
 21601                           fsr2l	equ	0xFD9
 21602                           status	equ	0xFD8
 21603                           
 21604 ;; *************** function _USBEnableEndpoint *****************
 21605 ;; Defined at:
 21606 ;;		line 878 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 21607 ;; Parameters:    Size  Location     Type
 21608 ;;  ep              1    wreg     unsigned char 
 21609 ;;  options         1    8[COMRAM] unsigned char 
 21610 ;; Auto vars:     Size  Location     Type
 21611 ;;  ep              1   11[COMRAM] unsigned char 
 21612 ;;  p               2    9[COMRAM] PTR unsigned char 
 21613 ;;		 -> UEP0(1), 
 21614 ;; Return value:  Size  Location     Type
 21615 ;;                  1    wreg      void 
 21616 ;; Registers used:
 21617 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21618 ;; Tracked objects:
 21619 ;;		On entry : 0/0
 21620 ;;		On exit  : 0/0
 21621 ;;		Unchanged: 0/0
 21622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21623 ;;      Params:         1       0       0       0       0       0       0       0       0
 21624 ;;      Locals:         3       0       0       0       0       0       0       0       0
 21625 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21626 ;;      Totals:         4       0       0       0       0       0       0       0       0
 21627 ;;Total ram usage:        4 bytes
 21628 ;; Hardware stack levels used:    1
 21629 ;; Hardware stack levels required when called:    1
 21630 ;; This function calls:
 21631 ;;		_USBConfigureEndpoint
 21632 ;; This function is called by:
 21633 ;;		_CDCInitEP
 21634 ;; This function uses a non-reentrant model
 21635 ;;
 21636                           
 21637                           	psect	text84
 21638  004DFC                     __ptext84:
 21639                           	opt stack 0
 21640  004DFC                     _USBEnableEndpoint:
 21641                           	opt stack 20
 21642                           
 21643                           ;incstack = 0
 21644                           ;USBEnableEndpoint@ep stored from wreg
 21645  004DFC  6E0C               	movwf	USBEnableEndpoint@ep,c
 21646                           
 21647                           ;usb_device.c: 880: unsigned char* p;
 21648                           ;usb_device.c: 884: if(options & 0x04)
 21649  004DFE  A409               	btfss	USBEnableEndpoint@options,2,c
 21650  004E00  D005               	goto	i2l392
 21651                           
 21652                           ;usb_device.c: 885: {
 21653                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 21654  004E02  0E00               	movlw	0
 21655  004E04  6E01               	movwf	USBConfigureEndpoint@direction,c
 21656  004E06  500C               	movf	USBEnableEndpoint@ep,w,c
 21657  004E08  EC82  F021         	call	_USBConfigureEndpoint
 21658  004E0C                     i2l392:
 21659                           
 21660                           ;usb_device.c: 887: }
 21661                           ;usb_device.c: 888: if(options & 0x02)
 21662  004E0C  A209               	btfss	USBEnableEndpoint@options,1,c
 21663  004E0E  D005               	goto	i2l393
 21664                           
 21665                           ;usb_device.c: 889: {
 21666                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 21667  004E10  0E01               	movlw	1
 21668  004E12  6E01               	movwf	USBConfigureEndpoint@direction,c
 21669  004E14  500C               	movf	USBEnableEndpoint@ep,w,c
 21670  004E16  EC82  F021         	call	_USBConfigureEndpoint
 21671  004E1A                     i2l393:
 21672                           
 21673                           ;usb_device.c: 891: }
 21674                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 21675  004E1A  500C               	movf	USBEnableEndpoint@ep,w,c
 21676  004E1C  0D01               	mullw	1
 21677  004E1E  0E70               	movlw	112
 21678  004E20  24F3               	addwf	prodl,w,c
 21679  004E22  6E0A               	movwf	USBEnableEndpoint@p,c
 21680  004E24  0E0F               	movlw	15
 21681  004E26  20F4               	addwfc	prodh,w,c
 21682  004E28  6E0B               	movwf	USBEnableEndpoint@p+1,c
 21683                           
 21684                           ;usb_device.c: 901: *p = options;
 21685  004E2A  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 21686  004E2E  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 21687  004E32  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 21688  004E36  0012               	return		;funcret
 21689  004E38                     __end_of_USBEnableEndpoint:
 21690                           	opt stack 0
 21691                           pclatu	equ	0xFFB
 21692                           pclath	equ	0xFFA
 21693                           tblptru	equ	0xFF8
 21694                           tblptrh	equ	0xFF7
 21695                           tblptrl	equ	0xFF6
 21696                           tablat	equ	0xFF5
 21697                           prodh	equ	0xFF4
 21698                           prodl	equ	0xFF3
 21699                           intcon	equ	0xFF2
 21700                           indf0	equ	0xFEF
 21701                           postinc0	equ	0xFEE
 21702                           fsr0h	equ	0xFEA
 21703                           fsr0l	equ	0xFE9
 21704                           wreg	equ	0xFE8
 21705                           indf1	equ	0xFE7
 21706                           postdec1	equ	0xFE5
 21707                           fsr1h	equ	0xFE2
 21708                           fsr1l	equ	0xFE1
 21709                           indf2	equ	0xFDF
 21710                           postinc2	equ	0xFDE
 21711                           postdec2	equ	0xFDD
 21712                           plusw2	equ	0xFDB
 21713                           fsr2h	equ	0xFDA
 21714                           fsr2l	equ	0xFD9
 21715                           status	equ	0xFD8
 21716                           
 21717 ;; *************** function _USBConfigureEndpoint *****************
 21718 ;; Defined at:
 21719 ;;		line 1543 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 21720 ;; Parameters:    Size  Location     Type
 21721 ;;  EPNum           1    wreg     unsigned char 
 21722 ;;  direction       1    0[COMRAM] unsigned char 
 21723 ;; Auto vars:     Size  Location     Type
 21724 ;;  EPNum           1    5[COMRAM] unsigned char 
 21725 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 21726 ;;		 -> BDT(48), 
 21727 ;; Return value:  Size  Location     Type
 21728 ;;                  1    wreg      void 
 21729 ;; Registers used:
 21730 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21731 ;; Tracked objects:
 21732 ;;		On entry : 0/0
 21733 ;;		On exit  : 0/0
 21734 ;;		Unchanged: 0/0
 21735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21736 ;;      Params:         1       0       0       0       0       0       0       0       0
 21737 ;;      Locals:         3       0       0       0       0       0       0       0       0
 21738 ;;      Temps:          4       0       0       0       0       0       0       0       0
 21739 ;;      Totals:         8       0       0       0       0       0       0       0       0
 21740 ;;Total ram usage:        8 bytes
 21741 ;; Hardware stack levels used:    1
 21742 ;; This function calls:
 21743 ;;		Nothing
 21744 ;; This function is called by:
 21745 ;;		_USBEnableEndpoint
 21746 ;; This function uses a non-reentrant model
 21747 ;;
 21748                           
 21749                           	psect	text85
 21750  004304                     __ptext85:
 21751                           	opt stack 0
 21752  004304                     _USBConfigureEndpoint:
 21753                           	opt stack 20
 21754                           
 21755                           ;incstack = 0
 21756                           ;USBConfigureEndpoint@EPNum stored from wreg
 21757  004304  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 21758                           
 21759                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
 21760                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
 21761  004306  0E00               	movlw	0
 21762  004308  6E07               	movwf	USBConfigureEndpoint@handle,c
 21763  00430A  0E04               	movlw	4
 21764  00430C  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 21765                           
 21766                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
 21767  00430E  5001               	movf	USBConfigureEndpoint@direction,w,c
 21768  004310  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 21769  004312  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 21770  004314  90D8               	bcf	status,0,c
 21771  004316  3602               	rlcf	??_USBConfigureEndpoint,f,c
 21772  004318  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 21773  00431A  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 21774  00431C  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 21775  00431E  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 21776  004320  90D8               	bcf	status,0,c
 21777  004322  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 21778  004324  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 21779  004326  90D8               	bcf	status,0,c
 21780  004328  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 21781  00432A  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 21782  00432C  5002               	movf	??_USBConfigureEndpoint,w,c
 21783  00432E  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 21784  004330  5003               	movf	??_USBConfigureEndpoint+1,w,c
 21785  004332  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 21786  004334  90D8               	bcf	status,0,c
 21787  004336  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 21788  004338  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 21789  00433A  90D8               	bcf	status,0,c
 21790  00433C  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 21791  00433E  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 21792  004340  5004               	movf	??_USBConfigureEndpoint+2,w,c
 21793  004342  2607               	addwf	USBConfigureEndpoint@handle,f,c
 21794  004344  5005               	movf	??_USBConfigureEndpoint+3,w,c
 21795  004346  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 21796                           
 21797                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
 21798  004348  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 21799  00434C  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 21800  004350  9EDF               	bcf	indf2,7,c
 21801                           
 21802                           ;usb_device.c: 1557: if(direction == 0)
 21803  004352  5001               	movf	USBConfigureEndpoint@direction,w,c
 21804  004354  A4D8               	btfss	status,2,c
 21805  004356  D007               	goto	i2l439
 21806                           
 21807                           ;usb_device.c: 1558: {
 21808                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
 21809  004358  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 21810  00435A  0D02               	mullw	2
 21811  00435C  0EC4               	movlw	low _pBDTEntryOut
 21812  00435E  24F3               	addwf	prodl,w,c
 21813  004360  6ED9               	movwf	fsr2l,c
 21814  004362  0E02               	movlw	high _pBDTEntryOut
 21815  004364  D006               	goto	L24
 21816  004366                     i2l439:
 21817                           
 21818                           ;usb_device.c: 1561: else
 21819                           ;usb_device.c: 1562: {
 21820                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
 21821  004366  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 21822  004368  0D02               	mullw	2
 21823  00436A  0E46               	movlw	low _pBDTEntryIn
 21824  00436C  24F3               	addwf	prodl,w,c
 21825  00436E  6ED9               	movwf	fsr2l,c
 21826  004370  0E00               	movlw	high _pBDTEntryIn
 21827  004372                     L24:
 21828  004372  20F4               	addwfc	prodh,w,c
 21829  004374  6EDA               	movwf	fsr2h,c
 21830  004376  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 21831  00437A  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 21832                           
 21833                           ;usb_device.c: 1564: }
 21834                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
 21835  00437E  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 21836  004382  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 21837  004386  9CDF               	bcf	indf2,6,c
 21838                           
 21839                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
 21840  004388  EE20 F004          	lfsr	2,4
 21841  00438C  5007               	movf	USBConfigureEndpoint@handle,w,c
 21842  00438E  26D9               	addwf	fsr2l,f,c
 21843  004390  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 21844  004392  22DA               	addwfc	fsr2h,f,c
 21845  004394  8CDF               	bsf	indf2,6,c
 21846  004396  0012               	return		;funcret
 21847  004398                     __end_of_USBConfigureEndpoint:
 21848                           	opt stack 0
 21849                           pclatu	equ	0xFFB
 21850                           pclath	equ	0xFFA
 21851                           tblptru	equ	0xFF8
 21852                           tblptrh	equ	0xFF7
 21853                           tblptrl	equ	0xFF6
 21854                           tablat	equ	0xFF5
 21855                           prodh	equ	0xFF4
 21856                           prodl	equ	0xFF3
 21857                           intcon	equ	0xFF2
 21858                           indf0	equ	0xFEF
 21859                           postinc0	equ	0xFEE
 21860                           fsr0h	equ	0xFEA
 21861                           fsr0l	equ	0xFE9
 21862                           wreg	equ	0xFE8
 21863                           indf1	equ	0xFE7
 21864                           postdec1	equ	0xFE5
 21865                           fsr1h	equ	0xFE2
 21866                           fsr1l	equ	0xFE1
 21867                           indf2	equ	0xFDF
 21868                           postinc2	equ	0xFDE
 21869                           postdec2	equ	0xFDD
 21870                           plusw2	equ	0xFDB
 21871                           fsr2h	equ	0xFDA
 21872                           fsr2l	equ	0xFD9
 21873                           status	equ	0xFD8
 21874                           
 21875 ;; *************** function _USBCtrlTrfOutHandler *****************
 21876 ;; Defined at:
 21877 ;;		line 2538 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 21878 ;; Parameters:    Size  Location     Type
 21879 ;;		None
 21880 ;; Auto vars:     Size  Location     Type
 21881 ;;		None
 21882 ;; Return value:  Size  Location     Type
 21883 ;;                  1    wreg      void 
 21884 ;; Registers used:
 21885 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21886 ;; Tracked objects:
 21887 ;;		On entry : 0/0
 21888 ;;		On exit  : 0/0
 21889 ;;		Unchanged: 0/0
 21890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21891 ;;      Params:         0       0       0       0       0       0       0       0       0
 21892 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21893 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21894 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21895 ;;Total ram usage:        0 bytes
 21896 ;; Hardware stack levels used:    1
 21897 ;; Hardware stack levels required when called:    2
 21898 ;; This function calls:
 21899 ;;		_USBCtrlTrfRxService
 21900 ;; This function is called by:
 21901 ;;		_USBCtrlEPService
 21902 ;; This function uses a non-reentrant model
 21903 ;;
 21904                           
 21905                           	psect	text86
 21906  0049A8                     __ptext86:
 21907                           	opt stack 0
 21908  0049A8                     _USBCtrlTrfOutHandler:
 21909                           	opt stack 20
 21910                           
 21911                           ;usb_device.c: 2540: if(controlTransferState == 2)
 21912                           
 21913                           ;incstack = 0
 21914  0049A8  0E02               	movlw	2
 21915  0049AA  1856               	xorwf	_controlTransferState,w,c	;volatile
 21916  0049AC  A4D8               	btfss	status,2,c
 21917  0049AE  D003               	goto	i2l545
 21918                           
 21919                           ;usb_device.c: 2541: {
 21920                           ;usb_device.c: 2542: USBCtrlTrfRxService();
 21921  0049B0  EC41  F018         	call	_USBCtrlTrfRxService	;wreg free
 21922                           
 21923                           ;usb_device.c: 2543: }
 21924  0049B4  0012               	return	
 21925  0049B6                     i2l545:
 21926                           
 21927                           ;usb_device.c: 2544: else
 21928                           ;usb_device.c: 2545: {
 21929                           ;usb_device.c: 2548: controlTransferState = 0;
 21930  0049B6  0E00               	movlw	0
 21931  0049B8  6E56               	movwf	_controlTransferState,c	;volatile
 21932                           
 21933                           ;usb_device.c: 2555: if(BothEP0OutUOWNsSet == 0)
 21934  0049BA  0101               	movlb	1	; () banked
 21935  0049BC  51FB               	movf	_BothEP0OutUOWNsSet& (0+255),w,b	;volatile
 21936  0049BE  A4D8               	btfss	status,2,c
 21937  0049C0  D01F               	goto	i2l547
 21938                           
 21939                           ; BSR set to: 1
 21940                           ;usb_device.c: 2556: {
 21941                           ;usb_device.c: 2557: pBDTEntryEP0OutNext->CNT = 8;
 21942  0049C2  EE20 F001          	lfsr	2,1
 21943  0049C6  504E               	movf	_pBDTEntryEP0OutNext,w,c
 21944  0049C8  26D9               	addwf	fsr2l,f,c
 21945  0049CA  504F               	movf	_pBDTEntryEP0OutNext+1,w,c
 21946  0049CC  22DA               	addwfc	fsr2h,f,c
 21947  0049CE  0E08               	movlw	8
 21948  0049D0  6EDF               	movwf	indf2,c
 21949                           
 21950                           ;usb_device.c: 2558: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 21951  0049D2  EE20 F002          	lfsr	2,2
 21952  0049D6  504E               	movf	_pBDTEntryEP0OutNext,w,c
 21953  0049D8  26D9               	addwf	fsr2l,f,c
 21954  0049DA  504F               	movf	_pBDTEntryEP0OutNext+1,w,c
 21955  0049DC  22DA               	addwfc	fsr2h,f,c
 21956  0049DE  0E30               	movlw	48
 21957  0049E0  6EDE               	movwf	postinc2,c
 21958  0049E2  0E04               	movlw	4
 21959  0049E4  6EDD               	movwf	postdec2,c
 21960                           
 21961                           ; BSR set to: 1
 21962                           ;usb_device.c: 2559: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 21963  0049E6  C04E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21964  0049EA  C04F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21965  0049EE  0E0C               	movlw	12
 21966  0049F0  6EDF               	movwf	indf2,c
 21967                           
 21968                           ; BSR set to: 1
 21969                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 21970  0049F2  C04E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21971  0049F6  C04F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21972  0049FA  0E00               	movlw	0
 21973  0049FC  8EDB               	bsf	plusw2,7,c
 21974                           
 21975                           ;usb_device.c: 2561: }
 21976  0049FE  0012               	return	
 21977  004A00                     i2l547:
 21978                           
 21979                           ; BSR set to: 1
 21980                           ;usb_device.c: 2562: else
 21981                           ;usb_device.c: 2563: {
 21982                           ;usb_device.c: 2564: BothEP0OutUOWNsSet = 0;
 21983                           
 21984                           ; BSR set to: 1
 21985  004A00  0E00               	movlw	0
 21986  004A02  6FFB               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 21987                           
 21988                           ; BSR set to: 1
 21989  004A04  0012               	return	
 21990  004A06                     __end_of_USBCtrlTrfOutHandler:
 21991                           	opt stack 0
 21992                           pclatu	equ	0xFFB
 21993                           pclath	equ	0xFFA
 21994                           tblptru	equ	0xFF8
 21995                           tblptrh	equ	0xFF7
 21996                           tblptrl	equ	0xFF6
 21997                           tablat	equ	0xFF5
 21998                           prodh	equ	0xFF4
 21999                           prodl	equ	0xFF3
 22000                           intcon	equ	0xFF2
 22001                           indf0	equ	0xFEF
 22002                           postinc0	equ	0xFEE
 22003                           fsr0h	equ	0xFEA
 22004                           fsr0l	equ	0xFE9
 22005                           wreg	equ	0xFE8
 22006                           indf1	equ	0xFE7
 22007                           postdec1	equ	0xFE5
 22008                           fsr1h	equ	0xFE2
 22009                           fsr1l	equ	0xFE1
 22010                           indf2	equ	0xFDF
 22011                           postinc2	equ	0xFDE
 22012                           postdec2	equ	0xFDD
 22013                           plusw2	equ	0xFDB
 22014                           fsr2h	equ	0xFDA
 22015                           fsr2l	equ	0xFD9
 22016                           status	equ	0xFD8
 22017                           
 22018 ;; *************** function _USBCtrlTrfRxService *****************
 22019 ;; Defined at:
 22020 ;;		line 1852 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 22021 ;; Parameters:    Size  Location     Type
 22022 ;;		None
 22023 ;; Auto vars:     Size  Location     Type
 22024 ;;  byteToRead      1    1[COMRAM] unsigned char 
 22025 ;;  i               1    0[COMRAM] unsigned char 
 22026 ;; Return value:  Size  Location     Type
 22027 ;;                  1    wreg      void 
 22028 ;; Registers used:
 22029 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22030 ;; Tracked objects:
 22031 ;;		On entry : 0/0
 22032 ;;		On exit  : 0/0
 22033 ;;		Unchanged: 0/0
 22034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22035 ;;      Params:         0       0       0       0       0       0       0       0       0
 22036 ;;      Locals:         2       0       0       0       0       0       0       0       0
 22037 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22038 ;;      Totals:         2       0       0       0       0       0       0       0       0
 22039 ;;Total ram usage:        2 bytes
 22040 ;; Hardware stack levels used:    1
 22041 ;; Hardware stack levels required when called:    1
 22042 ;; This function calls:
 22043 ;;		_USBCtrlEPAllowStatusStage
 22044 ;; This function is called by:
 22045 ;;		_USBCtrlTrfOutHandler
 22046 ;; This function uses a non-reentrant model
 22047 ;;
 22048                           
 22049                           	psect	text87
 22050  003082                     __ptext87:
 22051                           	opt stack 0
 22052  003082                     _USBCtrlTrfRxService:
 22053                           	opt stack 20
 22054                           
 22055                           ;usb_device.c: 1854: uint8_t byteToRead;
 22056                           ;usb_device.c: 1855: uint8_t i;
 22057                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 22058                           
 22059                           ;incstack = 0
 22060  003082  EE20 F001          	lfsr	2,1
 22061  003086  5050               	movf	_pBDTEntryEP0OutCurrent,w,c
 22062  003088  26D9               	addwf	fsr2l,f,c
 22063  00308A  5051               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 22064  00308C  22DA               	addwfc	fsr2h,f,c
 22065  00308E  50DF               	movf	indf2,w,c
 22066  003090  6E02               	movwf	USBCtrlTrfRxService@byteToRead,c
 22067                           
 22068                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
 22069  003092  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 22070  003094  5C3C               	subwf	_outPipes+4,w,c	;volatile
 22071  003096  0E00               	movlw	0
 22072  003098  583D               	subwfb	_outPipes+5,w,c	;volatile
 22073  00309A  A0D8               	btfss	status,0,c
 22074                           
 22075                           ;usb_device.c: 1866: {
 22076                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
 22077  00309C  C03C  F002         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 22078                           
 22079                           ;usb_device.c: 1868: }
 22080                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
 22081  0030A0  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 22082  0030A2  5E3C               	subwf	_outPipes+4,f,c	;volatile
 22083  0030A4  0E00               	movlw	0
 22084  0030A6  5A3D               	subwfb	_outPipes+5,f,c	;volatile
 22085                           
 22086                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
 22087  0030A8  0E00               	movlw	0
 22088  0030AA  6E01               	movwf	USBCtrlTrfRxService@i,c
 22089  0030AC  D011               	goto	i2l473
 22090  0030AE                     
 22091                           ;usb_device.c: 1875: {
 22092                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 22093  0030AE  5001               	movf	USBCtrlTrfRxService@i,w,c
 22094  0030B0  0D01               	mullw	1
 22095  0030B2  0E38               	movlw	56
 22096  0030B4  24F3               	addwf	prodl,w,c
 22097  0030B6  6ED9               	movwf	fsr2l,c
 22098  0030B8  0E04               	movlw	4
 22099  0030BA  20F4               	addwfc	prodh,w,c
 22100  0030BC  6EDA               	movwf	fsr2h,c
 22101  0030BE  C038  FFE1         	movff	_outPipes,fsr1l	;volatile
 22102  0030C2  C039  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 22103  0030C6  CFDF FFE7          	movff	indf2,indf1
 22104  0030CA  4A38               	infsnz	_outPipes,f,c	;volatile
 22105  0030CC  2A39               	incf	_outPipes+1,f,c	;volatile
 22106  0030CE  2A01               	incf	USBCtrlTrfRxService@i,f,c
 22107  0030D0                     i2l473:
 22108  0030D0  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 22109  0030D2  5C01               	subwf	USBCtrlTrfRxService@i,w,c
 22110  0030D4  A0D8               	btfss	status,0,c
 22111  0030D6  D7EB               	goto	i2l474
 22112                           
 22113                           ;usb_device.c: 1877: }
 22114                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
 22115  0030D8  503C               	movf	_outPipes+4,w,c	;volatile
 22116  0030DA  103D               	iorwf	_outPipes+5,w,c	;volatile
 22117  0030DC  B4D8               	btfsc	status,2,c
 22118  0030DE  D032               	goto	i2l476
 22119                           
 22120                           ;usb_device.c: 1882: {
 22121                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
 22122  0030E0  EE20 F001          	lfsr	2,1
 22123  0030E4  504E               	movf	_pBDTEntryEP0OutNext,w,c
 22124  0030E6  26D9               	addwf	fsr2l,f,c
 22125  0030E8  504F               	movf	_pBDTEntryEP0OutNext+1,w,c
 22126  0030EA  22DA               	addwfc	fsr2h,f,c
 22127  0030EC  0E08               	movlw	8
 22128  0030EE  6EDF               	movwf	indf2,c
 22129                           
 22130                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 22131  0030F0  EE20 F002          	lfsr	2,2
 22132  0030F4  504E               	movf	_pBDTEntryEP0OutNext,w,c
 22133  0030F6  26D9               	addwf	fsr2l,f,c
 22134  0030F8  504F               	movf	_pBDTEntryEP0OutNext+1,w,c
 22135  0030FA  22DA               	addwfc	fsr2h,f,c
 22136  0030FC  0E38               	movlw	56
 22137  0030FE  6EDE               	movwf	postinc2,c
 22138  003100  0E04               	movlw	4
 22139  003102  6EDD               	movwf	postdec2,c
 22140                           
 22141                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 22142  003104  C050  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 22143  003108  C051  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 22144  00310C  BCDF               	btfsc	indf2,6,c
 22145  00310E  D00D               	goto	i2l477
 22146                           
 22147                           ;usb_device.c: 1886: {
 22148                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 22149  003110  C04E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22150  003114  C04F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22151  003118  0E48               	movlw	72
 22152  00311A  6EDF               	movwf	indf2,c
 22153                           
 22154                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 22155  00311C  C04E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22156  003120  C04F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22157  003124  0E00               	movlw	0
 22158  003126  8EDB               	bsf	plusw2,7,c
 22159                           
 22160                           ;usb_device.c: 1889: }
 22161  003128  0012               	return	
 22162  00312A                     i2l477:
 22163                           
 22164                           ;usb_device.c: 1890: else
 22165                           ;usb_device.c: 1891: {
 22166                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 22167  00312A  C04E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22168  00312E  C04F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22169  003132  0E08               	movlw	8
 22170  003134  6EDF               	movwf	indf2,c
 22171                           
 22172                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 22173  003136  C04E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22174  00313A  C04F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22175  00313E  0E00               	movlw	0
 22176  003140  8EDB               	bsf	plusw2,7,c
 22177                           
 22178                           ;usb_device.c: 1894: }
 22179                           ;usb_device.c: 1895: }
 22180  003142  0012               	return	
 22181  003144                     i2l476:
 22182                           
 22183                           ;usb_device.c: 1896: else
 22184                           ;usb_device.c: 1897: {
 22185                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 22186  003144  EE20 F001          	lfsr	2,1
 22187  003148  504E               	movf	_pBDTEntryEP0OutNext,w,c
 22188  00314A  26D9               	addwf	fsr2l,f,c
 22189  00314C  504F               	movf	_pBDTEntryEP0OutNext+1,w,c
 22190  00314E  22DA               	addwfc	fsr2h,f,c
 22191  003150  0E08               	movlw	8
 22192  003152  6EDF               	movwf	indf2,c
 22193                           
 22194                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 22195  003154  EE20 F002          	lfsr	2,2
 22196  003158  504E               	movf	_pBDTEntryEP0OutNext,w,c
 22197  00315A  26D9               	addwf	fsr2l,f,c
 22198  00315C  504F               	movf	_pBDTEntryEP0OutNext+1,w,c
 22199  00315E  22DA               	addwfc	fsr2h,f,c
 22200  003160  0E30               	movlw	48
 22201  003162  6EDE               	movwf	postinc2,c
 22202  003164  0E04               	movlw	4
 22203  003166  6EDD               	movwf	postdec2,c
 22204                           
 22205                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 22206  003168  C04E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22207  00316C  C04F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22208  003170  0E04               	movlw	4
 22209  003172  6EDF               	movwf	indf2,c
 22210                           
 22211                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 22212  003174  C04E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22213  003178  C04F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22214  00317C  0E00               	movlw	0
 22215  00317E  8EDB               	bsf	plusw2,7,c
 22216                           
 22217                           ;usb_device.c: 1926: }
 22218                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
 22219                           
 22220                           ;usb_device.c: 1915: {
 22221                           ;usb_device.c: 1921: outPipes[0].pFunc();
 22222  003180  9E3B               	bcf	_outPipes+3,7,c	;volatile
 22223                           
 22224                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
 22225  003182  5053               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 22226  003184  A4D8               	btfss	status,2,c
 22227  003186  0012               	return	
 22228                           
 22229                           ;usb_device.c: 1942: {
 22230                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
 22231  003188  ECE5  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
 22232  00318C  0012               	return	
 22233  00318E                     __end_of_USBCtrlTrfRxService:
 22234                           	opt stack 0
 22235                           pclatu	equ	0xFFB
 22236                           pclath	equ	0xFFA
 22237                           tblptru	equ	0xFF8
 22238                           tblptrh	equ	0xFF7
 22239                           tblptrl	equ	0xFF6
 22240                           tablat	equ	0xFF5
 22241                           prodh	equ	0xFF4
 22242                           prodl	equ	0xFF3
 22243                           intcon	equ	0xFF2
 22244                           indf0	equ	0xFEF
 22245                           postinc0	equ	0xFEE
 22246                           fsr0h	equ	0xFEA
 22247                           fsr0l	equ	0xFE9
 22248                           wreg	equ	0xFE8
 22249                           indf1	equ	0xFE7
 22250                           postdec1	equ	0xFE5
 22251                           fsr1h	equ	0xFE2
 22252                           fsr1l	equ	0xFE1
 22253                           indf2	equ	0xFDF
 22254                           postinc2	equ	0xFDE
 22255                           postdec2	equ	0xFDD
 22256                           plusw2	equ	0xFDB
 22257                           fsr2h	equ	0xFDA
 22258                           fsr2l	equ	0xFD9
 22259                           status	equ	0xFD8
 22260                           
 22261 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 22262 ;; Defined at:
 22263 ;;		line 1416 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 22264 ;; Parameters:    Size  Location     Type
 22265 ;;		None
 22266 ;; Auto vars:     Size  Location     Type
 22267 ;;		None
 22268 ;; Return value:  Size  Location     Type
 22269 ;;                  1    wreg      void 
 22270 ;; Registers used:
 22271 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22272 ;; Tracked objects:
 22273 ;;		On entry : 0/0
 22274 ;;		On exit  : 0/0
 22275 ;;		Unchanged: 0/0
 22276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22277 ;;      Params:         0       0       0       0       0       0       0       0       0
 22278 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22279 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22280 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22281 ;;Total ram usage:        0 bytes
 22282 ;; Hardware stack levels used:    1
 22283 ;; This function calls:
 22284 ;;		Nothing
 22285 ;; This function is called by:
 22286 ;;		_USBDeviceTasks
 22287 ;;		_USBCtrlEPServiceComplete
 22288 ;;		_USBCtrlTrfRxService
 22289 ;; This function uses a non-reentrant model
 22290 ;;
 22291                           
 22292                           	psect	text88
 22293  003BCA                     __ptext88:
 22294                           	opt stack 0
 22295  003BCA                     _USBCtrlEPAllowStatusStage:
 22296                           	opt stack 20
 22297                           
 22298                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
 22299                           
 22300                           ;incstack = 0
 22301  003BCA  0101               	movlb	1	; () banked
 22302  003BCC  51FA               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 22303  003BCE  A4D8               	btfss	status,2,c
 22304  003BD0  0012               	return	
 22305                           
 22306                           ; BSR set to: 1
 22307                           ;usb_device.c: 1424: {
 22308                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
 22309  003BD2  0E01               	movlw	1
 22310  003BD4  6FFA               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 22311                           
 22312                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
 22313  003BD6  51F9               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 22314  003BD8  A4D8               	btfss	status,2,c
 22315  003BDA  0012               	return	
 22316                           
 22317                           ; BSR set to: 1
 22318                           ;usb_device.c: 1427: {
 22319                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
 22320  003BDC  0E01               	movlw	1
 22321  003BDE  6FF9               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 22322                           
 22323                           ; BSR set to: 1
 22324                           ;usb_device.c: 1432: if(controlTransferState == 2)
 22325  003BE0  0E02               	movlw	2
 22326  003BE2  1856               	xorwf	_controlTransferState,w,c	;volatile
 22327  003BE4  A4D8               	btfss	status,2,c
 22328  003BE6  D015               	goto	i2l427
 22329                           
 22330                           ; BSR set to: 1
 22331                           ;usb_device.c: 1433: {
 22332                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
 22333  003BE8  EE20 F001          	lfsr	2,1
 22334  003BEC  5046               	movf	_pBDTEntryIn,w,c
 22335  003BEE  26D9               	addwf	fsr2l,f,c
 22336  003BF0  5047               	movf	_pBDTEntryIn+1,w,c
 22337  003BF2  22DA               	addwfc	fsr2h,f,c
 22338  003BF4  0E00               	movlw	0
 22339  003BF6  6EDF               	movwf	indf2,c
 22340                           
 22341                           ; BSR set to: 1
 22342                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 22343  003BF8  C046  FFD9         	movff	_pBDTEntryIn,fsr2l
 22344  003BFC  C047  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22345  003C00  0E48               	movlw	72
 22346  003C02  6EDF               	movwf	indf2,c
 22347                           
 22348                           ; BSR set to: 1
 22349                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
 22350  003C04  C046  FFD9         	movff	_pBDTEntryIn,fsr2l
 22351  003C08  C047  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22352  003C0C  0E00               	movlw	0
 22353  003C0E  8EDB               	bsf	plusw2,7,c
 22354                           
 22355                           ;usb_device.c: 1437: }
 22356  003C10  0012               	return	
 22357  003C12                     i2l427:
 22358                           
 22359                           ; BSR set to: 1
 22360                           ;usb_device.c: 1438: else if(controlTransferState == 1)
 22361                           
 22362                           ; BSR set to: 1
 22363  003C12  0456               	decf	_controlTransferState,w,c	;volatile
 22364  003C14  A4D8               	btfss	status,2,c
 22365  003C16  0012               	return	
 22366                           
 22367                           ; BSR set to: 1
 22368                           ;usb_device.c: 1439: {
 22369                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
 22370  003C18  0E00               	movlw	0
 22371  003C1A  6FFB               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 22372                           
 22373                           ; BSR set to: 1
 22374                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
 22375  003C1C  EE20 F001          	lfsr	2,1
 22376  003C20  5050               	movf	_pBDTEntryEP0OutCurrent,w,c
 22377  003C22  26D9               	addwf	fsr2l,f,c
 22378  003C24  5051               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 22379  003C26  22DA               	addwfc	fsr2h,f,c
 22380  003C28  0E08               	movlw	8
 22381  003C2A  6EDF               	movwf	indf2,c
 22382                           
 22383                           ; BSR set to: 1
 22384                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 22385  003C2C  EE20 F002          	lfsr	2,2
 22386  003C30  5050               	movf	_pBDTEntryEP0OutCurrent,w,c
 22387  003C32  26D9               	addwf	fsr2l,f,c
 22388  003C34  5051               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 22389  003C36  22DA               	addwfc	fsr2h,f,c
 22390  003C38  0E30               	movlw	48
 22391  003C3A  6EDE               	movwf	postinc2,c
 22392  003C3C  0E04               	movlw	4
 22393  003C3E  6EDD               	movwf	postdec2,c
 22394                           
 22395                           ; BSR set to: 1
 22396                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 22397  003C40  C050  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 22398  003C44  C051  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 22399  003C48  0E04               	movlw	4
 22400  003C4A  6EDF               	movwf	indf2,c
 22401                           
 22402                           ; BSR set to: 1
 22403                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 22404  003C4C  C050  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 22405  003C50  C051  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 22406  003C54  0E00               	movlw	0
 22407  003C56  8EDB               	bsf	plusw2,7,c
 22408                           
 22409                           ; BSR set to: 1
 22410                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
 22411  003C58  0E01               	movlw	1
 22412  003C5A  6FFB               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 22413                           
 22414                           ; BSR set to: 1
 22415                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
 22416  003C5C  EE20 F001          	lfsr	2,1
 22417  003C60  504E               	movf	_pBDTEntryEP0OutNext,w,c
 22418  003C62  26D9               	addwf	fsr2l,f,c
 22419  003C64  504F               	movf	_pBDTEntryEP0OutNext+1,w,c
 22420  003C66  22DA               	addwfc	fsr2h,f,c
 22421  003C68  0E08               	movlw	8
 22422  003C6A  6EDF               	movwf	indf2,c
 22423                           
 22424                           ; BSR set to: 1
 22425                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 22426  003C6C  EE20 F002          	lfsr	2,2
 22427  003C70  504E               	movf	_pBDTEntryEP0OutNext,w,c
 22428  003C72  26D9               	addwf	fsr2l,f,c
 22429  003C74  504F               	movf	_pBDTEntryEP0OutNext+1,w,c
 22430  003C76  22DA               	addwfc	fsr2h,f,c
 22431  003C78  0E30               	movlw	48
 22432  003C7A  6EDE               	movwf	postinc2,c
 22433  003C7C  0E04               	movlw	4
 22434  003C7E  6EDD               	movwf	postdec2,c
 22435                           
 22436                           ; BSR set to: 1
 22437                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 22438  003C80  C04E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22439  003C84  C04F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22440  003C88  0E80               	movlw	128
 22441  003C8A  6EDF               	movwf	indf2,c
 22442                           
 22443                           ; BSR set to: 1
 22444                           
 22445                           ; BSR set to: 1
 22446                           
 22447                           ; BSR set to: 1
 22448  003C8C  0012               	return	
 22449  003C8E                     __end_of_USBCtrlEPAllowStatusStage:
 22450                           	opt stack 0
 22451                           pclatu	equ	0xFFB
 22452                           pclath	equ	0xFFA
 22453                           tblptru	equ	0xFF8
 22454                           tblptrh	equ	0xFF7
 22455                           tblptrl	equ	0xFF6
 22456                           tablat	equ	0xFF5
 22457                           prodh	equ	0xFF4
 22458                           prodl	equ	0xFF3
 22459                           intcon	equ	0xFF2
 22460                           indf0	equ	0xFEF
 22461                           postinc0	equ	0xFEE
 22462                           fsr0h	equ	0xFEA
 22463                           fsr0l	equ	0xFE9
 22464                           wreg	equ	0xFE8
 22465                           indf1	equ	0xFE7
 22466                           postdec1	equ	0xFE5
 22467                           fsr1h	equ	0xFE2
 22468                           fsr1l	equ	0xFE1
 22469                           indf2	equ	0xFDF
 22470                           postinc2	equ	0xFDE
 22471                           postdec2	equ	0xFDD
 22472                           plusw2	equ	0xFDB
 22473                           fsr2h	equ	0xFDA
 22474                           fsr2l	equ	0xFD9
 22475                           status	equ	0xFD8
 22476                           
 22477 ;; *************** function _USBCtrlTrfInHandler *****************
 22478 ;; Defined at:
 22479 ;;		line 2592 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 22480 ;; Parameters:    Size  Location     Type
 22481 ;;		None
 22482 ;; Auto vars:     Size  Location     Type
 22483 ;;  lastDTS         1    1[COMRAM] unsigned char 
 22484 ;; Return value:  Size  Location     Type
 22485 ;;                  1    wreg      void 
 22486 ;; Registers used:
 22487 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22488 ;; Tracked objects:
 22489 ;;		On entry : 0/0
 22490 ;;		On exit  : 0/0
 22491 ;;		Unchanged: 0/0
 22492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22493 ;;      Params:         0       0       0       0       0       0       0       0       0
 22494 ;;      Locals:         1       0       0       0       0       0       0       0       0
 22495 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22496 ;;      Totals:         1       0       0       0       0       0       0       0       0
 22497 ;;Total ram usage:        1 bytes
 22498 ;; Hardware stack levels used:    1
 22499 ;; Hardware stack levels required when called:    1
 22500 ;; This function calls:
 22501 ;;		_USBCtrlTrfTxService
 22502 ;; This function is called by:
 22503 ;;		_USBCtrlEPService
 22504 ;; This function uses a non-reentrant model
 22505 ;;
 22506                           
 22507                           	psect	text89
 22508  003C8E                     __ptext89:
 22509                           	opt stack 0
 22510  003C8E                     _USBCtrlTrfInHandler:
 22511                           	opt stack 21
 22512                           
 22513                           ;usb_device.c: 2594: uint8_t lastDTS;
 22514                           ;usb_device.c: 2596: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 22515                           
 22516                           ; BSR set to: 1
 22517                           ;incstack = 0
 22518  003C8E  C046  FFD9         	movff	_pBDTEntryIn,fsr2l
 22519  003C92  C047  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22520  003C96  0E00               	movlw	0
 22521  003C98  BCDF               	btfsc	indf2,6,c
 22522  003C9A  0E01               	movlw	1
 22523  003C9C  6E02               	movwf	USBCtrlTrfInHandler@lastDTS,c
 22524                           
 22525                           ;usb_device.c: 2599: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 22526  003C9E  0E04               	movlw	4
 22527  003CA0  1846               	xorwf	_pBDTEntryIn,w,c
 22528  003CA2  6E46               	movwf	_pBDTEntryIn,c
 22529  003CA4  5047               	movf	_pBDTEntryIn+1,w,c
 22530  003CA6  6E47               	movwf	_pBDTEntryIn+1,c
 22531                           
 22532                           ;usb_device.c: 2604: if(USBDeviceState == ADR_PENDING_STATE)
 22533  003CA8  0E08               	movlw	8
 22534  003CAA  1858               	xorwf	_USBDeviceState,w,c	;volatile
 22535  003CAC  A4D8               	btfss	status,2,c
 22536  003CAE  D00B               	goto	i2l554
 22537                           
 22538                           ;usb_device.c: 2605: {
 22539                           ;usb_device.c: 2606: UADDR = (SetupPkt.bDevADR & 0x7F);
 22540  003CB0  0104               	movlb	4	; () banked
 22541  003CB2  5132               	movf	50,w,b	;volatile
 22542  003CB4  0B7F               	andlw	127
 22543  003CB6  6E6E               	movwf	3950,c	;volatile
 22544                           
 22545                           ; BSR set to: 4
 22546                           ;usb_device.c: 2607: if(UADDR != 0u)
 22547  003CB8  506E               	movf	3950,w,c	;volatile
 22548  003CBA  B4D8               	btfsc	status,2,c
 22549  003CBC  D002               	goto	i2l553
 22550                           
 22551                           ; BSR set to: 4
 22552                           ;usb_device.c: 2608: {
 22553                           ;usb_device.c: 2609: USBDeviceState=ADDRESS_STATE;
 22554  003CBE  0E10               	movlw	16
 22555  003CC0  D001               	goto	L25
 22556  003CC2                     i2l553:
 22557                           
 22558                           ; BSR set to: 4
 22559                           ;usb_device.c: 2611: else
 22560                           ;usb_device.c: 2612: {
 22561                           ;usb_device.c: 2613: USBDeviceState=DEFAULT_STATE;
 22562                           
 22563                           ; BSR set to: 4
 22564  003CC2  0E04               	movlw	4
 22565  003CC4                     L25:
 22566  003CC4  6E58               	movwf	_USBDeviceState,c	;volatile
 22567  003CC6                     i2l554:
 22568                           
 22569                           ;usb_device.c: 2614: }
 22570                           ;usb_device.c: 2615: }
 22571                           ;usb_device.c: 2618: if(controlTransferState == 1)
 22572                           
 22573                           ; BSR set to: 4
 22574                           
 22575                           ; BSR set to: 4
 22576  003CC6  0456               	decf	_controlTransferState,w,c	;volatile
 22577  003CC8  A4D8               	btfss	status,2,c
 22578  003CCA  D03A               	goto	i2l555
 22579                           
 22580                           ;usb_device.c: 2619: {
 22581                           ;usb_device.c: 2620: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 22582  003CCC  EE20 F002          	lfsr	2,2
 22583  003CD0  5046               	movf	_pBDTEntryIn,w,c
 22584  003CD2  26D9               	addwf	fsr2l,f,c
 22585  003CD4  5047               	movf	_pBDTEntryIn+1,w,c
 22586  003CD6  22DA               	addwfc	fsr2h,f,c
 22587  003CD8  0E38               	movlw	56
 22588  003CDA  6EDE               	movwf	postinc2,c
 22589  003CDC  0E04               	movlw	4
 22590  003CDE  6EDD               	movwf	postdec2,c
 22591                           
 22592                           ;usb_device.c: 2621: USBCtrlTrfTxService();
 22593  003CE0  EC7F  F01D         	call	_USBCtrlTrfTxService	;wreg free
 22594                           
 22595                           ;usb_device.c: 2627: if(shortPacketStatus == 2)
 22596  003CE4  0E02               	movlw	2
 22597  003CE6  1857               	xorwf	_shortPacketStatus,w,c	;volatile
 22598  003CE8  A4D8               	btfss	status,2,c
 22599  003CEA  D00D               	goto	i2l556
 22600                           
 22601                           ;usb_device.c: 2628: {
 22602                           ;usb_device.c: 2631: pBDTEntryIn[0]->STAT.Val = 0x04;
 22603  003CEC  C046  FFD9         	movff	_pBDTEntryIn,fsr2l
 22604  003CF0  C047  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22605  003CF4  0E04               	movlw	4
 22606  003CF6  6EDF               	movwf	indf2,c
 22607                           
 22608                           ;usb_device.c: 2632: pBDTEntryIn[0]->STAT.Val |= 0x80;
 22609  003CF8  C046  FFD9         	movff	_pBDTEntryIn,fsr2l
 22610  003CFC  C047  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22611  003D00  0E00               	movlw	0
 22612  003D02  8EDB               	bsf	plusw2,7,c
 22613                           
 22614                           ;usb_device.c: 2633: }
 22615  003D04  0012               	return	
 22616  003D06                     i2l556:
 22617                           
 22618                           ;usb_device.c: 2634: else
 22619                           ;usb_device.c: 2635: {
 22620                           ;usb_device.c: 2636: if(lastDTS == 0)
 22621  003D06  5002               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 22622  003D08  A4D8               	btfss	status,2,c
 22623  003D0A  D00D               	goto	i2l558
 22624                           
 22625                           ;usb_device.c: 2637: {
 22626                           ;usb_device.c: 2638: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 22627  003D0C  C046  FFD9         	movff	_pBDTEntryIn,fsr2l
 22628  003D10  C047  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22629  003D14  0E48               	movlw	72
 22630  003D16  6EDF               	movwf	indf2,c
 22631                           
 22632                           ;usb_device.c: 2639: pBDTEntryIn[0]->STAT.Val |= 0x80;
 22633  003D18  C046  FFD9         	movff	_pBDTEntryIn,fsr2l
 22634  003D1C  C047  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22635  003D20  0E00               	movlw	0
 22636  003D22  8EDB               	bsf	plusw2,7,c
 22637                           
 22638                           ;usb_device.c: 2640: }
 22639  003D24  0012               	return	
 22640  003D26                     i2l558:
 22641                           
 22642                           ;usb_device.c: 2641: else
 22643                           ;usb_device.c: 2642: {
 22644                           ;usb_device.c: 2643: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 22645  003D26  C046  FFD9         	movff	_pBDTEntryIn,fsr2l
 22646  003D2A  C047  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22647  003D2E  0E08               	movlw	8
 22648  003D30  6EDF               	movwf	indf2,c
 22649                           
 22650                           ;usb_device.c: 2644: pBDTEntryIn[0]->STAT.Val |= 0x80;
 22651  003D32  C046  FFD9         	movff	_pBDTEntryIn,fsr2l
 22652  003D36  C047  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22653  003D3A  0E00               	movlw	0
 22654  003D3C  8EDB               	bsf	plusw2,7,c
 22655                           
 22656                           ;usb_device.c: 2645: }
 22657                           ;usb_device.c: 2646: }
 22658                           ;usb_device.c: 2647: }
 22659  003D3E  0012               	return	
 22660  003D40                     i2l555:
 22661                           
 22662                           ;usb_device.c: 2648: else
 22663                           ;usb_device.c: 2649: {
 22664                           ;usb_device.c: 2653: if(outPipes[0].info.bits.busy == 1)
 22665  003D40  BE3B               	btfsc	_outPipes+3,7,c	;volatile
 22666                           
 22667                           ;usb_device.c: 2658: }
 22668                           ;usb_device.c: 2659: outPipes[0].info.bits.busy = 0;
 22669                           
 22670                           ;usb_device.c: 2656: {
 22671                           ;usb_device.c: 2657: outPipes[0].pFunc();
 22672  003D42  9E3B               	bcf	_outPipes+3,7,c	;volatile
 22673                           
 22674                           ;usb_device.c: 2660: }
 22675                           ;usb_device.c: 2662: controlTransferState = 0;
 22676  003D44  0E00               	movlw	0
 22677  003D46  6E56               	movwf	_controlTransferState,c	;volatile
 22678  003D48  0012               	return	
 22679  003D4A                     __end_of_USBCtrlTrfInHandler:
 22680                           	opt stack 0
 22681                           pclatu	equ	0xFFB
 22682                           pclath	equ	0xFFA
 22683                           tblptru	equ	0xFF8
 22684                           tblptrh	equ	0xFF7
 22685                           tblptrl	equ	0xFF6
 22686                           tablat	equ	0xFF5
 22687                           prodh	equ	0xFF4
 22688                           prodl	equ	0xFF3
 22689                           intcon	equ	0xFF2
 22690                           indf0	equ	0xFEF
 22691                           postinc0	equ	0xFEE
 22692                           fsr0h	equ	0xFEA
 22693                           fsr0l	equ	0xFE9
 22694                           wreg	equ	0xFE8
 22695                           indf1	equ	0xFE7
 22696                           postdec1	equ	0xFE5
 22697                           fsr1h	equ	0xFE2
 22698                           fsr1l	equ	0xFE1
 22699                           indf2	equ	0xFDF
 22700                           postinc2	equ	0xFDE
 22701                           postdec2	equ	0xFDD
 22702                           plusw2	equ	0xFDB
 22703                           fsr2h	equ	0xFDA
 22704                           fsr2l	equ	0xFD9
 22705                           status	equ	0xFD8
 22706                           
 22707 ;; *************** function _USBCtrlTrfTxService *****************
 22708 ;; Defined at:
 22709 ;;		line 1771 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 22710 ;; Parameters:    Size  Location     Type
 22711 ;;		None
 22712 ;; Auto vars:     Size  Location     Type
 22713 ;;  byteToSend      1    0[COMRAM] unsigned char 
 22714 ;; Return value:  Size  Location     Type
 22715 ;;                  1    wreg      void 
 22716 ;; Registers used:
 22717 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 22718 ;; Tracked objects:
 22719 ;;		On entry : 0/0
 22720 ;;		On exit  : 0/0
 22721 ;;		Unchanged: 0/0
 22722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22723 ;;      Params:         0       0       0       0       0       0       0       0       0
 22724 ;;      Locals:         1       0       0       0       0       0       0       0       0
 22725 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22726 ;;      Totals:         1       0       0       0       0       0       0       0       0
 22727 ;;Total ram usage:        1 bytes
 22728 ;; Hardware stack levels used:    1
 22729 ;; This function calls:
 22730 ;;		Nothing
 22731 ;; This function is called by:
 22732 ;;		_USBCtrlEPAllowDataStage
 22733 ;;		_USBCtrlTrfInHandler
 22734 ;; This function uses a non-reentrant model
 22735 ;;
 22736                           
 22737                           	psect	text90
 22738  003AFE                     __ptext90:
 22739                           	opt stack 0
 22740  003AFE                     _USBCtrlTrfTxService:
 22741                           	opt stack 19
 22742                           
 22743                           ;usb_device.c: 1773: uint8_t byteToSend;
 22744                           ;usb_device.c: 1777: byteToSend = 8;
 22745                           
 22746                           ;incstack = 0
 22747  003AFE  0E08               	movlw	8
 22748  003B00  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 22749                           
 22750                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
 22751  003B02  5045               	movf	_inPipes+5,w,c	;volatile
 22752  003B04  E110               	bnz	i2l7147
 22753  003B06  0E08               	movlw	8
 22754  003B08  5C44               	subwf	_inPipes+4,w,c	;volatile
 22755  003B0A  B0D8               	btfsc	status,0,c
 22756  003B0C  D00C               	goto	i2l460
 22757                           
 22758                           ;usb_device.c: 1779: {
 22759                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
 22760  003B0E  C044  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 22761                           
 22762                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
 22763  003B12  5057               	movf	_shortPacketStatus,w,c	;volatile
 22764  003B14  A4D8               	btfss	status,2,c
 22765  003B16  D002               	goto	i2l458
 22766                           
 22767                           ;usb_device.c: 1788: {
 22768                           ;usb_device.c: 1789: shortPacketStatus = 1;
 22769  003B18  0E01               	movlw	1
 22770  003B1A  D004               	goto	L26
 22771  003B1C                     i2l458:
 22772                           
 22773                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
 22774  003B1C  0457               	decf	_shortPacketStatus,w,c	;volatile
 22775  003B1E  A4D8               	btfss	status,2,c
 22776  003B20  D002               	goto	i2l460
 22777                           
 22778                           ;usb_device.c: 1792: {
 22779                           ;usb_device.c: 1793: shortPacketStatus = 2;
 22780  003B22  0E02               	movlw	2
 22781  003B24                     L26:
 22782  003B24  6E57               	movwf	_shortPacketStatus,c	;volatile
 22783  003B26                     i2l460:
 22784  003B26                     i2l7147:
 22785                           
 22786                           ;usb_device.c: 1794: }
 22787                           ;usb_device.c: 1795: }
 22788                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
 22789  003B26  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 22790  003B28  5E44               	subwf	_inPipes+4,f,c	;volatile
 22791  003B2A  0E00               	movlw	0
 22792  003B2C  5A45               	subwfb	_inPipes+5,f,c	;volatile
 22793                           
 22794                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
 22795  003B2E  EE20 F001          	lfsr	2,1
 22796  003B32  5046               	movf	_pBDTEntryIn,w,c
 22797  003B34  26D9               	addwf	fsr2l,f,c
 22798  003B36  5047               	movf	_pBDTEntryIn+1,w,c
 22799  003B38  22DA               	addwfc	fsr2h,f,c
 22800  003B3A  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 22801                           
 22802                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
 22803  003B3E  0E38               	movlw	56
 22804  003B40  0102               	movlb	2	; () banked
 22805  003B42  6FE0               	movwf	_pDst& (0+255),b
 22806  003B44  0E04               	movlw	4
 22807  003B46  6FE1               	movwf	(_pDst+1)& (0+255),b
 22808                           
 22809                           ; BSR set to: 2
 22810                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 22811  003B48  A043               	btfss	_inPipes+3,0,c	;volatile
 22812  003B4A  D01C               	goto	i2l462
 22813  003B4C  D03A               	goto	i2l466
 22814  003B4E                     
 22815                           ; BSR set to: 2
 22816                           ;usb_device.c: 1812: {
 22817                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
 22818                           
 22819                           ; BSR set to: 2
 22820  003B4E  C040  FFF6         	movff	_inPipes,tblptrl	;volatile
 22821  003B52  C041  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 22822  003B56  6AF8               	clrf	tblptru,c
 22823  003B58  C2E0  FFD9         	movff	_pDst,fsr2l
 22824  003B5C  C2E1  FFDA         	movff	_pDst+1,fsr2h
 22825  003B60  0E07               	movlw	(high __ramtop+-1)
 22826  003B62  64F7               	cpfsgt	tblptrh,c
 22827  003B64  D003               	bra	i2u558_47
 22828  003B66  0008               	tblrd		*
 22829  003B68  50F5               	movf	tablat,w,c
 22830  003B6A  D005               	bra	i2u558_40
 22831  003B6C                     i2u558_47:
 22832  003B6C  CFF6 FFE9          	movff	tblptrl,fsr0l
 22833  003B70  CFF7 FFEA          	movff	tblptrh,fsr0h
 22834  003B74  50EF               	movf	indf0,w,c
 22835  003B76                     i2u558_40:
 22836  003B76  6EDF               	movwf	indf2,c
 22837  003B78  4A40               	infsnz	_inPipes,f,c	;volatile
 22838  003B7A  2A41               	incf	_inPipes+1,f,c	;volatile
 22839  003B7C  0102               	movlb	2	; () banked
 22840  003B7E  4BE0               	infsnz	_pDst& (0+255),f,b
 22841  003B80  2BE1               	incf	(_pDst+1)& (0+255),f,b
 22842                           
 22843                           ; BSR set to: 2
 22844                           ;usb_device.c: 1814: byteToSend--;
 22845  003B82  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 22846  003B84                     i2l462:
 22847                           
 22848                           ; BSR set to: 2
 22849                           
 22850                           ; BSR set to: 2
 22851  003B84  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 22852  003B86  B4D8               	btfsc	status,2,c
 22853  003B88  0012               	return	
 22854  003B8A  D7E1               	goto	i2l463
 22855  003B8C                     
 22856                           ; BSR set to: 2
 22857                           ;usb_device.c: 1820: {
 22858                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
 22859                           
 22860                           ; BSR set to: 2
 22861  003B8C  C040  FFF6         	movff	_inPipes,tblptrl	;volatile
 22862  003B90  C041  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 22863  003B94  6AF8               	clrf	tblptru,c
 22864  003B96  C2E0  FFD9         	movff	_pDst,fsr2l
 22865  003B9A  C2E1  FFDA         	movff	_pDst+1,fsr2h
 22866  003B9E  0E07               	movlw	(high __ramtop+-1)
 22867  003BA0  64F7               	cpfsgt	tblptrh,c
 22868  003BA2  D003               	bra	i2u560_47
 22869  003BA4  0008               	tblrd		*
 22870  003BA6  50F5               	movf	tablat,w,c
 22871  003BA8  D005               	bra	i2u560_40
 22872  003BAA                     i2u560_47:
 22873  003BAA  CFF6 FFE9          	movff	tblptrl,fsr0l
 22874  003BAE  CFF7 FFEA          	movff	tblptrh,fsr0h
 22875  003BB2  50EF               	movf	indf0,w,c
 22876  003BB4                     i2u560_40:
 22877  003BB4  6EDF               	movwf	indf2,c
 22878  003BB6  4A40               	infsnz	_inPipes,f,c	;volatile
 22879  003BB8  2A41               	incf	_inPipes+1,f,c	;volatile
 22880  003BBA  0102               	movlb	2	; () banked
 22881  003BBC  4BE0               	infsnz	_pDst& (0+255),f,b
 22882  003BBE  2BE1               	incf	(_pDst+1)& (0+255),f,b
 22883                           
 22884                           ; BSR set to: 2
 22885                           ;usb_device.c: 1822: byteToSend--;
 22886  003BC0  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 22887  003BC2                     i2l466:
 22888                           
 22889                           ; BSR set to: 2
 22890                           
 22891                           ; BSR set to: 2
 22892  003BC2  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 22893  003BC4  B4D8               	btfsc	status,2,c
 22894  003BC6  0012               	return	
 22895  003BC8  D7E1               	goto	i2l467
 22896  003BCA                     __end_of_USBCtrlTrfTxService:
 22897                           	opt stack 0
 22898                           pclatu	equ	0xFFB
 22899                           pclath	equ	0xFFA
 22900                           tblptru	equ	0xFF8
 22901                           tblptrh	equ	0xFF7
 22902                           tblptrl	equ	0xFF6
 22903                           tablat	equ	0xFF5
 22904                           prodh	equ	0xFF4
 22905                           prodl	equ	0xFF3
 22906                           intcon	equ	0xFF2
 22907                           indf0	equ	0xFEF
 22908                           postinc0	equ	0xFEE
 22909                           fsr0h	equ	0xFEA
 22910                           fsr0l	equ	0xFE9
 22911                           wreg	equ	0xFE8
 22912                           indf1	equ	0xFE7
 22913                           postdec1	equ	0xFE5
 22914                           fsr1h	equ	0xFE2
 22915                           fsr1l	equ	0xFE1
 22916                           indf2	equ	0xFDF
 22917                           postinc2	equ	0xFDE
 22918                           postdec2	equ	0xFDD
 22919                           plusw2	equ	0xFDB
 22920                           fsr2h	equ	0xFDA
 22921                           fsr2l	equ	0xFD9
 22922                           status	equ	0xFD8
 22923                           pclatu	equ	0xFFB
 22924                           pclath	equ	0xFFA
 22925                           tblptru	equ	0xFF8
 22926                           tblptrh	equ	0xFF7
 22927                           tblptrl	equ	0xFF6
 22928                           tablat	equ	0xFF5
 22929                           prodh	equ	0xFF4
 22930                           prodl	equ	0xFF3
 22931                           intcon	equ	0xFF2
 22932                           indf0	equ	0xFEF
 22933                           postinc0	equ	0xFEE
 22934                           fsr0h	equ	0xFEA
 22935                           fsr0l	equ	0xFE9
 22936                           wreg	equ	0xFE8
 22937                           indf1	equ	0xFE7
 22938                           postdec1	equ	0xFE5
 22939                           fsr1h	equ	0xFE2
 22940                           fsr1l	equ	0xFE1
 22941                           indf2	equ	0xFDF
 22942                           postinc2	equ	0xFDE
 22943                           postdec2	equ	0xFDD
 22944                           plusw2	equ	0xFDB
 22945                           fsr2h	equ	0xFDA
 22946                           fsr2l	equ	0xFD9
 22947                           status	equ	0xFD8
 22948                           
 22949                           	psect	rparam
 22950  0000                     pclatu	equ	0xFFB
 22951                           pclath	equ	0xFFA
 22952                           tblptru	equ	0xFF8
 22953                           tblptrh	equ	0xFF7
 22954                           tblptrl	equ	0xFF6
 22955                           tablat	equ	0xFF5
 22956                           prodh	equ	0xFF4
 22957                           prodl	equ	0xFF3
 22958                           intcon	equ	0xFF2
 22959                           indf0	equ	0xFEF
 22960                           postinc0	equ	0xFEE
 22961                           fsr0h	equ	0xFEA
 22962                           fsr0l	equ	0xFE9
 22963                           wreg	equ	0xFE8
 22964                           indf1	equ	0xFE7
 22965                           postdec1	equ	0xFE5
 22966                           fsr1h	equ	0xFE2
 22967                           fsr1l	equ	0xFE1
 22968                           indf2	equ	0xFDF
 22969                           postinc2	equ	0xFDE
 22970                           postdec2	equ	0xFDD
 22971                           plusw2	equ	0xFDB
 22972                           fsr2h	equ	0xFDA
 22973                           fsr2l	equ	0xFD9
 22974                           status	equ	0xFD8
 22975                           
 22976                           	psect	temp
 22977  00005F                     btemp:
 22978                           	opt stack 0
 22979  00005F                     	ds	1
 22980  0000                     int$flags	set	btemp
 22981  0000                     wtemp6	set	btemp+1
 22982                           pclatu	equ	0xFFB
 22983                           pclath	equ	0xFFA
 22984                           tblptru	equ	0xFF8
 22985                           tblptrh	equ	0xFF7
 22986                           tblptrl	equ	0xFF6
 22987                           tablat	equ	0xFF5
 22988                           prodh	equ	0xFF4
 22989                           prodl	equ	0xFF3
 22990                           intcon	equ	0xFF2
 22991                           indf0	equ	0xFEF
 22992                           postinc0	equ	0xFEE
 22993                           fsr0h	equ	0xFEA
 22994                           fsr0l	equ	0xFE9
 22995                           wreg	equ	0xFE8
 22996                           indf1	equ	0xFE7
 22997                           postdec1	equ	0xFE5
 22998                           fsr1h	equ	0xFE2
 22999                           fsr1l	equ	0xFE1
 23000                           indf2	equ	0xFDF
 23001                           postinc2	equ	0xFDE
 23002                           postdec2	equ	0xFDD
 23003                           plusw2	equ	0xFDB
 23004                           fsr2h	equ	0xFDA
 23005                           fsr2l	equ	0xFD9
 23006                           status	equ	0xFD8


Data Sizes:
    Strings     375
    Constant    485
    Data        31
    BSS         897
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     55      94
    BANK0           160    160     160
    BANK1           256    237     256
    BANK2           256    196     255
    BANK3           256      0     211
    BANK4           192      0     100
    BANK5           128      0     100
    BANK6           256      0     200
    BANK7           256      0     200

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMl[48]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_20(CODE[16]), STR_19(CODE[7]), STR_18(CODE[14]), STR_17(CODE[8]), 
		 -> STR_16(CODE[8]), STR_15(CODE[10]), STR_14(CODE[17]), STR_13(CODE[11]), 
		 -> STR_12(CODE[5]), STR_11(CODE[32]), STR_10(CODE[7]), STR_9(CODE[11]), 
		 -> STR_8(CODE[11]), STR_7(CODE[14]), STR_6(CODE[3]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 100
		 -> recebeByteLoRaWan@frameData(BANK4[100]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 200
		 -> recebeByteLoRaWan@frameData(BANK4[100]), SYS(CODE[5]), MAC(CODE[5]), TxLoRaWan@comando(BANK1[200]), 
		 -> DataRate@comando(BANK1[200]), SetBandWidth@comando(BANK1[200]), SetSpreadingFactor@comando(BANK1[200]), MacSave@comando(BANK1[200]), 
		 -> AdaptiveDataRate@comando(BANK1[200]), SetChannelLoRaWan@comando(BANK1[200]), MAC_JOIN_OTAA(CODE[10]), SYS_RESET(CODE[6]), 
		 -> STR_20(CODE[16]), STR_19(CODE[7]), STR_18(CODE[14]), STR_17(CODE[8]), 
		 -> STR_16(CODE[8]), STR_15(CODE[10]), STR_14(CODE[17]), STR_13(CODE[11]), 
		 -> STR_12(CODE[5]), STR_11(CODE[32]), STR_10(CODE[7]), STR_9(CODE[11]), 
		 -> STR_8(CODE[11]), STR_7(CODE[14]), STR_6(CODE[3]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 200
		 -> recebeByteLoRaWan@frameData(BANK4[100]), SYS(CODE[5]), MAC(CODE[5]), TxLoRaWan@comando(BANK1[200]), 
		 -> DataRate@comando(BANK1[200]), SetBandWidth@comando(BANK1[200]), SetSpreadingFactor@comando(BANK1[200]), MacSave@comando(BANK1[200]), 
		 -> AdaptiveDataRate@comando(BANK1[200]), SetChannelLoRaWan@comando(BANK1[200]), MAC_JOIN_OTAA(CODE[10]), SYS_RESET(CODE[6]), 
		 -> STR_20(CODE[16]), STR_19(CODE[7]), STR_18(CODE[14]), STR_17(CODE[8]), 
		 -> STR_16(CODE[8]), STR_15(CODE[10]), STR_14(CODE[17]), STR_13(CODE[11]), 
		 -> STR_12(CODE[5]), STR_11(CODE[32]), STR_10(CODE[7]), STR_9(CODE[11]), 
		 -> STR_8(CODE[11]), STR_7(CODE[14]), STR_6(CODE[3]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 100
		 -> recebeByteLoRaWan@frameData(BANK4[100]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 200
		 -> frameBuffer(BANK7[200]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 200
		 -> frameBuffer(BANK7[200]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_20(CODE[16]), STR_19(CODE[7]), STR_18(CODE[14]), STR_17(CODE[8]), 
		 -> STR_16(CODE[8]), STR_15(CODE[10]), STR_14(CODE[17]), STR_13(CODE[11]), 
		 -> STR_12(CODE[5]), STR_11(CODE[32]), STR_10(CODE[7]), STR_9(CODE[11]), 
		 -> STR_8(CODE[11]), STR_7(CODE[14]), STR_6(CODE[3]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 100
		 -> recebeByteLoRaWan@frameData(BANK4[100]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 30
		 -> TxLoRaWan@hex(BANK1[4]), addSensorFloat@f(COMRAM[30]), addSensorInt@f(COMRAM[30]), addSensorStr@f(COMRAM[30]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 200
		 -> TxLoRaWan@comando(BANK1[200]), frameBuffer(BANK7[200]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 200
		 -> TxLoRaWan@comando(BANK1[200]), frameBuffer(BANK7[200]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 100
		 -> receivePacket(BANK5[100]), response(BANK3[100]), SetupPkt(BIGRAMhl[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 100
		 -> receivePacket(BANK5[100]), response(BANK3[100]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 2047
		 -> recebeByte@frameData(BANK6[100]), CtrlTrfData(BIGRAMhl[8]), RAM(DATA[2047]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 2047
		 -> recebeByte@frameData(BANK6[100]), CtrlTrfData(BIGRAMhl[8]), RAM(DATA[2047]), SetupPkt(BIGRAMhl[8]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_31(CODE[7]), MAC_TX_UNCNF(CODE[9]), MAC_TX_CNF(CODE[7]), MAC_SET_DR(CODE[7]), 
		 -> MAC_SET_BW(CODE[13]), MAC_SET_SF(CODE[16]), MAC_SAVE(CODE[5]), MAC_SET_ADR(CODE[8]), 
		 -> MAC_SET_CH_STATUS(CODE[14]), STATE_ON(CODE[3]), STATE_OFF(CODE[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 93
		 -> STR_30(CODE[5]), STR_29(CODE[7]), STR_28(CODE[7]), STR_27(CODE[6]), 
		 -> STR_26(CODE[6]), STR_25(CODE[5]), STR_24(CODE[3]), STR_23(CODE[6]), 
		 -> STR_22(CODE[10]), STR_21(CODE[9]), STR_5(CODE[7]), STR_4(CODE[8]), 
		 -> STR_3(CODE[7]), STR_2(CODE[17]), STR_1(CODE[93]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 200
		 -> TxLoRaWan@hex(BANK1[4]), TxLoRaWan@comando(BANK1[200]), DataRate@comando(BANK1[200]), SetBandWidth@comando(BANK1[200]), 
		 -> SetSpreadingFactor@comando(BANK1[200]), MacSave@comando(BANK1[200]), AdaptiveDataRate@comando(BANK1[200]), SetChannelLoRaWan@comando(BANK1[200]), 
		 -> addSensorFloat@f(COMRAM[30]), addSensorInt@f(COMRAM[30]), addSensorStr@f(COMRAM[30]), frameBuffer(BANK7[200]), 
		 -> main@data(BANK2[150]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 200
		 -> frameBuffer(BANK7[200]), 

    enviaComando@cmd	PTR const unsigned char  size(2) Largest target is 200
		 -> TxLoRaWan@comando(BANK1[200]), DataRate@comando(BANK1[200]), SetBandWidth@comando(BANK1[200]), SetSpreadingFactor@comando(BANK1[200]), 
		 -> MacSave@comando(BANK1[200]), AdaptiveDataRate@comando(BANK1[200]), SetChannelLoRaWan@comando(BANK1[200]), MAC_JOIN_OTAA(CODE[10]), 
		 -> SYS_RESET(CODE[6]), 

    TxLoRaWan@data	PTR const unsigned char  size(2) Largest target is 21
		 -> main@dadoPoco(BANK2[21]), 

    AdaptiveDataRate@state	PTR const unsigned char  size(2) Largest target is 4
		 -> STATE_ON(CODE[3]), STATE_OFF(CODE[4]), 

    MSG_LORAWAN	PTR const unsigned char [15] size(2) Largest target is 32
		 -> STR_20(CODE[16]), STR_19(CODE[7]), STR_18(CODE[14]), STR_17(CODE[8]), 
		 -> STR_16(CODE[8]), STR_15(CODE[10]), STR_14(CODE[17]), STR_13(CODE[11]), 
		 -> STR_12(CODE[5]), STR_11(CODE[32]), STR_10(CODE[7]), STR_9(CODE[11]), 
		 -> STR_8(CODE[11]), STR_7(CODE[14]), STR_6(CODE[3]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 200
		 -> TxLoRaWan@comando(BANK1[200]), frameBuffer(BANK7[200]), 

    putsUSBUSART@data	PTR unsigned char  size(2) Largest target is 150
		 -> main@data(BANK2[150]), 

    putsUSBUSART@pData	PTR unsigned char  size(2) Largest target is 150
		 -> main@data(BANK2[150]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S2342_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S2342_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S2342_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S2342_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 100
		 -> receivePacket(BANK5[100]), response(BANK3[100]), SetupPkt(BIGRAMhl[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BIGRAMhl[64]), cdc_data_rx(BIGRAMhh[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S521$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S511$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S511$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S487$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S487$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S487$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S487$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _SYS_InterruptHigh in COMRAM

    _SYS_InterruptHigh->_USBDeviceTasks
    _recebeByteLoRaWan->_strncmp
    _converter->_toupper
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    _main->_TxLoRaWan
    _setup_uart->___lldiv
    _le_pulsos->_retornaDado
    _le_AD->___ftdiv
    ___ftdiv->___ftmul
    ___awtoft->___ftpack
    _verificaUSB->_CDCTxService
    _CDCTxService->_USBTransferOnePacket
    _USBDeviceInit->_memset
    _TxLoRaWan->_sprintf
    _ResetModuloLoRaWan->_enviaComando
    _JoinLoRaWan->_enviaComando
    _SetSpreadingFactor->_sprintf
    _SetChannelLoRaWan->_sprintf
    _SetBandWidth->_sprintf
    _MacSave->_sprintf
    _DataRate->_sprintf
    _AdaptiveDataRate->_sprintf
    _sprintf->___fttol
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___ftadd
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->_le_AD
    ___ftsub->___ftadd
    ___ftadd->___wmul
    _enviaComando->_parseLoRaWan
    _parseLoRaWan->_millis

Critical Paths under _SYS_InterruptHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_TxLoRaWan
    _TxLoRaWan->_sprintf
    _SetSpreadingFactor->_sprintf
    _SetChannelLoRaWan->_sprintf
    _SetBandWidth->_sprintf
    _MacSave->_sprintf
    _DataRate->_sprintf
    _AdaptiveDataRate->_sprintf

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _SYS_InterruptHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _SYS_InterruptHigh in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               206   206      0  758434
                                            150 BANK0     10    10      0
                                              0 BANK2    196   196      0
                   _AdaptiveDataRate
                           _DataRate
                            _MacSave
                       _SetBandWidth
                  _SetChannelLoRaWan
                 _SetSpreadingFactor
                          _TxLoRaWan
                      _USBDeviceInit
                            ___ftmul
                            ___fttol
                              _delay
                              _le_AD
                          _le_pulsos
                             _millis
                              _putch
                       _putsUSBUSART
                        _retornaDado
                           _setup_AD
                         _setup_ccp1
                       _setup_pulsos
                         _setup_uart
                            _sprintf
                        _verificaUSB
 ---------------------------------------------------------------------------------
 (1) _setup_uart                                           8     4      4    1409
                                             13 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (1) _setup_pulsos                                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup_ccp1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup_AD                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _putsUSBUSART                                         5     3      2     202
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _le_pulsos                                            9     5      4     492
                                              5 BANK0      9     5      4
                        _retornaDado (ARG)
 ---------------------------------------------------------------------------------
 (1) _le_AD                                               18    15      3   17964
                                             62 BANK0     18    15      3
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    3544
                                             47 BANK0     15     9      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             4     1      3    3114
                                              8 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _delay                                               16    12      4    1927
                                             13 BANK0     16    12      4
                             _millis
                        _verificaUSB
 ---------------------------------------------------------------------------------
 (1) _verificaUSB                                          0     0      0    1770
                       _CDCTxService
                    _USBDeviceAttach
                    _USBDeviceDetach
 ---------------------------------------------------------------------------------
 (2) _USBDeviceDetach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CDCTxService                                         2     2      0    1770
                                             11 BANK0      2     2      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBTransferOnePacket                                11     7      4    1633
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1132
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     930
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _TxLoRaWan                                          212   208      4  102249
                                            145 BANK0      5     1      4
                                             30 BANK1    207   207      0
                        _JoinLoRaWan
                 _ResetModuloLoRaWan
                       _enviaComando
                       _parseLoRaWan
                        _retornaDado
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (2) _strcat                                               6     2      4     810
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _retornaDado                                          5     4      1    6520
                                              0 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (2) _ResetModuloLoRaWan                                   1     1      0    2640
                                             39 BANK0      1     1      0
                       _enviaComando
 ---------------------------------------------------------------------------------
 (2) _JoinLoRaWan                                          1     1      0    2757
                                             39 BANK0      1     1      0
                       _enviaComando
                       _parseLoRaWan
 ---------------------------------------------------------------------------------
 (1) _SetSpreadingFactor                                 202   202      0   88420
                                             30 BANK1    202   202      0
                       _enviaComando
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _SetChannelLoRaWan                                  203   202      1   88664
                                            145 BANK0      1     0      1
                                             30 BANK1    202   202      0
                       _enviaComando
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _SetBandWidth                                       205   203      2   88598
                                            145 BANK0      3     1      2
                                             30 BANK1    202   202      0
                       _enviaComando
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _MacSave                                            201   201      0   88398
                                             30 BANK1    201   201      0
                       _enviaComando
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _DataRate                                           205   203      2   88509
                                            145 BANK0      3     1      2
                                             30 BANK1    202   202      0
                       _enviaComando
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _AdaptiveDataRate                                   203   201      2   88598
                                            145 BANK0      2     0      2
                                             30 BANK1    201   201      0
                       _enviaComando
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             81    37     44   85691
                                             95 BANK0     50     6     44
                                              0 BANK1     30    30      0
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                                7     4      3   21604
                                             47 BANK0      7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              10     7      3   21406
                                             47 BANK0     10     7      3
                            ___awdiv
                            ___awmod
                            ___ftadd (ARG)
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4   10745
                                             14 BANK0      6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    6438
                                             32 BANK0     15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1898
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    2080
                                              6 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         15     9      6     481
                                              0 BANK0     15     9      6
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          12     6      6     624
                                              0 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             9     5      4    3092
                                              8 BANK0      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     871
                                             13 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8    1230
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     697
                                             80 BANK0     15    11      4
                            ___ftmul (ARG)
                              _le_AD (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    5035
                                             32 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    4638
                                             20 BANK0     12     6      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2934
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     134
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     670
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (2) _enviaComando                                        11     8      3    2617
                                             28 BANK0     11     8      3
                    _initRecebeDados
                       _parseLoRaWan
                              _putch
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               6     4      2     672
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _putch                                                1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _parseLoRaWan                                        20    20      0     117
                                              8 BANK0     20    20      0
                             _millis
 ---------------------------------------------------------------------------------
 (1) _millis                                               8     4      4      23
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _initRecebeDados                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _SYS_InterruptHigh                                   27    27      0   33452
                                             28 COMRAM    27    27      0
                     _USBDeviceTasks
                              _getch
                  _recebeByteLoRaWan
 ---------------------------------------------------------------------------------
 (7) _recebeByteLoRaWan                                   10    10      0    2515
                                              9 COMRAM    10    10      0
                          _converter
                             _strcmp
                             _strcpy
                            _strncmp
                           i2_strlen
 ---------------------------------------------------------------------------------
 (8) i2_strlen                                             6     4      2     220
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) _strncmp                                              9     3      6     668
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (8) _strcpy                                               6     2      4     253
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) _strcmp                                               6     2      4     269
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) _converter                                            5     4      1     675
                                              1 COMRAM     5     4      1
                            _toupper
 ---------------------------------------------------------------------------------
 (9) _toupper                                              1     1      0      67
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _getch                                                3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (7) _USBDeviceTasks                                       1     1      0   30623
                                             27 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (8) i2_USBDeviceInit                                      1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (8) _USBWakeFromSuspend                                   0     0      0    3879
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBSuspend                                           0     0      0    3879
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBStallHandler                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPService                                     1     1      0   18330
                                             26 COMRAM     1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (9) _memcpy                                              11     5      6    1478
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfSetupHandler                               0     0      0   16623
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (10) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (11) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (10) _USBCheckStdRequest                                  0     0      0   12652
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (11) _USBStdSetCfgHandler                                 1     1      0    4377
                                             20 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (9) i2_memset                                             8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (11) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (11) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (11) _USBStdFeatureReqHandler                             6     6      0    4350
                                             20 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6    3879
                                             12 COMRAM     8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (9) _USBCheckCDCRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _CDCInitEP                                            0     0      0    1187
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (10) i2_USBTransferOnePacket                             11     7      4     454
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (10) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (11) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfOutHandler                                 0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (10) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (11) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfInHandler                                  1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (12) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AdaptiveDataRate
     _enviaComando
       _initRecebeDados
       _parseLoRaWan
         _millis
       _putch
       _strlen
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _le_AD (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _DataRate
     _enviaComando
       _initRecebeDados
       _parseLoRaWan
         _millis
       _putch
       _strlen
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _le_AD (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _MacSave
     _enviaComando
       _initRecebeDados
       _parseLoRaWan
         _millis
       _putch
       _strlen
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _le_AD (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _SetBandWidth
     _enviaComando
       _initRecebeDados
       _parseLoRaWan
         _millis
       _putch
       _strlen
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _le_AD (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _SetChannelLoRaWan
     _enviaComando
       _initRecebeDados
       _parseLoRaWan
         _millis
       _putch
       _strlen
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _le_AD (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _SetSpreadingFactor
     _enviaComando
       _initRecebeDados
       _parseLoRaWan
         _millis
       _putch
       _strlen
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _le_AD (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _TxLoRaWan
     _JoinLoRaWan
       _enviaComando
         _initRecebeDados
         _parseLoRaWan
           _millis
         _putch
         _strlen
       _parseLoRaWan
         _millis
     _ResetModuloLoRaWan
       _enviaComando
         _initRecebeDados
         _parseLoRaWan
           _millis
         _putch
         _strlen
     _enviaComando
       _initRecebeDados
       _parseLoRaWan
         _millis
       _putch
       _strlen
     _parseLoRaWan
       _millis
     _retornaDado
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _le_AD (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     _strcat
   _USBDeviceInit
     _memset
   ___ftmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftpack (ARG)
     ___wmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
   ___fttol
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _le_AD (ARG)
       ___awtoft
         ___ftpack
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   _delay
     _millis
     _verificaUSB
       _CDCTxService
         _USBTransferOnePacket
       _USBDeviceAttach
       _USBDeviceDetach
   _le_AD
     ___awtoft
       ___ftpack
     ___ftadd
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   _le_pulsos
     _retornaDado (ARG)
   _millis
   _putch
   _putsUSBUSART
   _retornaDado
   _setup_AD
   _setup_ccp1
   _setup_pulsos
   _setup_uart
     ___lldiv
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftneg
     ___ftsub
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _le_AD (ARG)
         ___awtoft
           ___ftpack
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___lltoft
       ___ftpack
     ___wmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftadd (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   _verificaUSB
     _CDCTxService
       _USBTransferOnePacket
     _USBDeviceAttach
     _USBDeviceDetach

 _SYS_InterruptHigh (ROOT)
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _USBCheckCDCRequest
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _USBCheckCDCRequest
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _USBCheckCDCRequest
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _memcpy
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _USBCheckCDCRequest
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _USBCheckCDCRequest
     _USER_USB_CALLBACK_EVENT_HANDLER
       _CDCInitEP
         _USBEnableEndpoint
           _USBConfigureEndpoint
         i2_USBTransferOnePacket
       _USBCheckCDCRequest
     i2_USBDeviceInit
       i2_memset
   _getch
   _recebeByteLoRaWan
     _converter
       _toupper
     _strcmp
     _strcpy
     _strncmp
     i2_strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            3FF      0       0      23        0.0%
BIGRAMhh           280      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0      C8      20       78.1%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0      C8      18       78.1%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      D3      11       82.4%
BITBANK2           100      0       0       8        0.0%
BANK2              100     C4      FF       9       99.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100     ED     100       7      100.0%
BIGRAMhl            C0      0       0      22        0.0%
BITBANK4            C0      0       0      12        0.0%
BANK4               C0      0      64      13       52.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     A0      A0       5      100.0%
BITBANK5            80      0       0      14        0.0%
BANK5               80      0      64      15       78.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     37      5E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     628      16        0.0%
DATA                 0      0     628       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Wed Feb 13 12:16:15 2019

                              _USB_SD_Ptr 7D39                              ___awdiv@sign 006B  
                             __CFG_BOR$ON 000000                                        _cs 01F3  
                recebeByte@estadoRecepcao 02ED                             _USBDeviceInit 2702  
                     ___wmul@multiplicand 0070                               __CFG_BORV$0 000000  
                      __size_of_CDCInitEP 0066                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                              _putsUSBUSART 4B0A  
                            ___ftadd@exp1 007F                              ___ftadd@exp2 007E  
    USER_USB_CALLBACK_EVENT_HANDLER@event 000D      USER_USB_CALLBACK_EVENT_HANDLER@pdata 000F  
                            ___ftadd@sign 007D                                       l401 3250  
                                     l420 4F40               __end_of_USBStdGetDscHandler 3082  
                                     l360 276E                                       l362 27A8  
                                     l419 4F42                                       l358 2748  
                                     l800 2D8C                                       l810 2E14  
                                     l802 2DCE                                       l811 2E1A  
                                     l803 2DAC                                       l397 31A8  
                                     l806 2DFA                                       l399 31D2  
                                     l807 2DD8                                       l780 4B26  
                                     _BDT 000400                                       l792 2D2E  
                                     l794 2D3A                                       l954 4F5A  
                                     l778 4B18                                       l795 2D44  
                                     l963 46E6                                       l971 0CE6  
                                     l796 2D74                                       l956 4F66  
                                     l964 46E2                                       l957 4F74  
                                     l981 11E6                                       l973 0D46  
                                     l798 2E3A                                       l974 11F8  
                                     l799 2D88                                       l975 108C  
                                     l984 11D6                                       l976 107A  
                                     l986 11F4                                       l978 10AC  
                                     l987 12C2                                       l979 109A  
                                     _MAC 7E62                              __CFG_CPB$OFF 000000  
                            __CFG_CPD$OFF 000000                                       _UIE 000F69  
                                     _UIR 000F68                                       _SYS 7E58  
                                     _aaa 02F2                   __end_of_initRecebeDados 516C  
                              _USBSuspend 4FDA                              ___awmod@sign 0065  
                    USBStdSetCfgHandler@i 0015                                       prod 000FF3  
                                     wreg 000FE8                            _USBDeviceTasks 2AB8  
                          _USBDeviceState 0058                     ??_USBCtrlTrfRxService 0001  
                __size_ofi2_USBDeviceInit 013E                  USBEnableEndpoint@options 0009  
                            __CFG_LVP$OFF 000000                              ___ftdiv@cntr 0098  
                            ___ftdiv@sign 009D                              __CFG_WDT$OFF 000000  
                                    l2000 4928                                      l2011 4E9C  
                                    l2015 47E0                                      l2103 1666  
                                    l2016 4804                                      l2008 4EA0  
                                    l2112 16CC                                      l2009 4E8A  
                                    l2105 16A2                                      l2042 176A  
                                    l2122 1720                                      l2035 13B6  
                                    l2140 329A                                      l2132 17AA  
                                    l2060 14CE                                      l2044 1426  
                                    l2036 13DA                                      l2141 32C0  
                                    l2125 17BC                                      l2037 176E  
                                    l2117 1708                                      l2150 3336  
                                    l2142 32A6                                      l2310 227C  
                                    l2134 17B8                                      l2126 1792  
                                    l2038 13E2                                      l2055 1492  
                                    l2039 1402                                      l2144 332C  
                                    l2320 19D6                                      l2400 0744  
                                    l2128 17A4                                      l2048 1468  
                                    l2161 3F4E                                      l2145 32DC  
                                    l2313 2352                                      l2321 1B34  
                                    l2401 072A                                      l2065 14EA  
                                    l2146 3300                                      l2410 08D6  
                                    l2330 005C                                      l2074 1550  
                                    l2139 331C                                      l2147 32E6  
                                    l2323 1BEC                                      l2403 0768  
                                    l2331 0052                                      l2067 1526  
                                    l2156 3ECC                                      l2316 19FC  
                                    l2420 09BA                                      l2412 0972  
                                    l2404 076C                                      l2084 15A8  
                                    l2157 3F32                                      l2149 336C  
                                    l2317 191E                                      l2413 0936  
                                    l2405 0790                                      l2093 160E  
                                    l2430 0A72                                      l2406 08CA  
                                    l2350 012C                                      l2342 00F6  
                                    l2086 15E4                                      l2431 0AA0  
                                    l2407 07E2                                      l2351 013C  
                                    l2343 00FC                                      l2327 0020  
                                    l3055 4BB2                                      l2079 158C  
                                    l2432 0AAA                                      l2344 0238  
                                    l2360 01A8                                      l2352 0136  
                                    l2336 008C                                      l2328 003E  
                                    l3056 4BAC                                      l2433 0AFE  
                                    l2425 0A48                                      l2417 0994  
                                    l2409 08F0                                      l2442 0B52  
                                    l2434 0AD8                                      l2426 09F6  
                                    l2370 03BC                                      l2354 0178  
                                    l3058 4BCC                                      l2098 164A  
                                    l2443 0C78                                      l2419 0A32  
                                    l2371 03FC                                      l2339 01E4  
                                    l2363 01DE                                      l2347 0100  
                                    l3059 4BC2                                      l2620 44D0  
                                    l2364 08FA                                      l2372 04CA  
                                    l2356 0194                USBConfigureEndpoint@handle 0007  
                                    l2621 44E0                                      l2445 0C50  
                                    l2381 0530                                      l2365 028A  
                                    l2357 0182                                      l2349 0104  
                                    l3078 4A72                                      l2446 0B60  
                                    l2390 0608                                      l3079 4A6C  
                                    l2623 44FE                                      l2375 0472  
                                    l2367 0328                                      l2359 01C8  
                                    l2624 44F6                                      l2640 478E  
                                    l2448 0C66                                      l2368 0392  
                                    l2801 35C2                                      l2641 4798  
                                    l2633 4754                                      l2449 0BE0  
                                    l2393 064E                                      l2385 05B4  
                                    l2730 2624                                      l2810 3652  
                                    l2642 47A6                                      l2634 4760  
                                    l2394 0634                                      l2386 05D6  
                                    l1770 2D04                                      l1762 2BF6  
                                    l2715 25A8                                      l2803 363A  
                                    l2627 451E                                      l1763 2C00  
                                    l2724 2638                                      l2812 367A  
                                    l2804 362A                                      l2652 2E5E  
                                    l2628 4528                                      l2636 4776  
                                    l1764 2C20                                      l1860 3872  
                                    l2741 2690                                      l2629 4536  
                                    l2637 476E                                      l2397 071E  
                                    l2389 0622                                      l2742 26AC  
                                    l2654 2E7C                                      l2398 0684  
                                    l2750 37D4                                      l1862 3936  
                                    l2743 26DC                                      l2719 25D2  
                                    l2655 2EBE                                      l2751 3812  
                                    l1767 2C24                                      l1863 389C  
                                    l2664 2F50                                      l2656 2EEE  
                                    l2760 2A40                                      l2816 510E  
                                    l2648 4E4E                                      l2752 3838  
                                    l7001 4426                                      l2729 262E  
                                    l2809 365E                                      l2665 2F44  
                                    l1769 2C6E                                      l1865 38C6  
                                    l2690 3DD0                                      l2738 266C  
                                    l2842 45F6                                      l2658 2F2C  
                                    l2762 2A7C                                      l2691 3DC6  
                                    l2739 2662                                      l2843 45EA  
                                    l2659 2F1C                                      l2763 2A6C  
                                    l1859 391A                                      l1867 38F0  
                                    l2684 3D74                                      l2852 483C  
                                    l2756 29B2                                      l2780 36B6  
                                    l2748 37AC                                      l2773 43CA  
                                    l2685 3D6A                                      l2853 4830  
                                    l2925 4F98                                      l2774 43FA  
                                    l2846 462A                                      l2758 29DE  
                                    l2782 36DE                                      l2926 4F86  
                                    l2791 509A                                      l2687 3DA8  
                                    l2847 4638                                      l2863 495E  
                                    l2759 2A18                                      l2783 3710  
                                    l2688 3D92                                      l2856 4864  
                                    l2864 4952                                      l2768 2AA0  
                                    l2784 3720                                      l2857 4872  
                                    l2769 2A94                                      l2786 3738  
                                    l2787 3748                                      l2797 4D12  
                                    _ADIE 007CEE                                      _ADIF 007CF6  
                                    l8405 4F86                                      l7623 51A2  
             __size_of_ResetModuloLoRaWan 0026                                      l9411 27A0  
                                    l8701 0634                                      l8811 09FA  
                                    l8571 0182                                      _ADON 007E10  
                                    l8725 072A                                      l8645 0448  
                                    l8637 03FC                                      l9383 2740  
                                    l8665 0534                                      l8577 01A8  
                                    l9545 2C10                                      l8693 0608  
                                    l9557 2C4A                                      l8797 09BE  
                                    l8879 0C50                                      STR_1 7E88  
                                    STR_2 7F27                                      STR_3 7FDD  
                                    STR_4 7FB2                                      STR_5 7FD6  
                                    STR_6 7F96                                      STR_7 7F48  
                                    STR_8 7F64                                      STR_9 7F7A  
                                    _GIEH 007F97                                      u6020 3D5C  
                                    u6300 4A92                                      u6060 3DDA  
                                    u7101 2996                                      u6321 2566  
                                    u7121 29C2                                      u6307 4A88  
                                    u6331 257A                                      _RCIE 007CED  
                                    u6420 2602                                      _RCIF 007CF5  
                                    u7311 35A6                                      u6280 3F40  
                                    u6360 259A                                      u7400 45FA  
                                    u7330 35E0                                      u7250 2F56  
                                    u8210 0C8A                                      u9010 2764  
                                    u6531 369E                                      u6460 2640  
                                    u7180 2AA6                                      u6620 4502  
                                    u8220 0CA8                                      u9100 3E22  
                                    u6390 25C4                                      u7430 4840  
                                    u9110 3E3C                                      u7335 35D8  
                                    u6551 36C6                     ??_USBCtrlTrfTxService 0001  
                                    u9040 2804                                      u9120 3E56  
                                    u6490 2674                                      u7370 3664  
                                    u7610 4F70                                      u8180 0B06  
                                    u9300 1414                                      u9108 3E26  
                                    u8190 0B28                                      u9070 4B40  
                                    u9118 3E40                                      _UCFG 000F6F  
                                    u6680 477A                                      u7800 040E  
                                    u8360 507E                                      u6920 2E02  
                                    u9128 3E5A                                      u7634 491E  
                                    u9170 2C4A                                      u9090 3E08  
                                    i2l99 24F2                                      u7635 491A  
                                    u8380 4E98                                      _UEP0 000F70  
                                    u8461 3794                                      _UEP1 000F71  
                                    u7830 0448                                      u7750 02C4  
                                    u9270 13F0                                      u8481 37BC  
                                    u9185 2C4E                                      u7930 065C  
                                    u9098 3E0C                                      u7755 02BA  
                                    _UEIE 000F6B                                      u6990 3362  
                                    u7870 056C                                      u7790 03CE  
                                    u7960 0752                                      u7970 0762  
                                    u6997 3358                                      u9840 177A  
                                    _UEIR 000F6A                                      _UCON 000F6D  
                                    u9850 17A0                                      _TXIF 007CF4  
                            __CFG_PWRT$ON 000000                           _CDCDataInHandle 02DE  
  USBStdFeatureReqHandler@current_ep_data 0018                                      _pDst 02E0  
                                    _data 0600                           _USBDeviceDetach 5190  
                                    _main 0CB6                              ___ftpack@arg 0060  
                       JoinLoRaWan@status 0087                  ??i2_USBTransferOnePacket 0005  
                            ___ftpack@exp 0063                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      indf0 000FEF  
                                    fsr2h 000FDA                                      fsr0l 000FE9  
                                    indf1 000FE7                               _BaudRateGen 0326  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    fsr2l 000FD9                           _USBDeviceAttach 4F18  
                                    btemp 005F                                      prodh 000FF4  
                                    prodl 000FF3                                      start 000E  
                           __CFG_IESO$OFF 000000                              _sprintf$5721 0100  
              __end_of_USBCheckStdRequest 3AFE                           __end_of_MacSave 4EE2  
                            main@dadoPoco 02AF                    ??_USBCtrlTrfOutHandler 0003  
                           __CFG_MCLRE$ON 000000                              ___ftmul@cntr 008D  
                            ___param_bank 000000                              ___ftmul@sign 008E  
               ??_USBStdFeatureReqHandler 0015                             ??_JoinLoRaWan 0087  
                            __channelMask 031E                             le_AD@corrente 00A6  
                ??_USBStdGetStatusHandler 0001                              ___fttol@exp1 00BE  
                        __end_of_MAC_SAVE 7E62                              ___fttol@lval 00BA  
                          ?_USBDeviceInit 0001                             ?_enviaComando 007C  
                           __CFG_PLLDIV$5 000000                                     l10131 0D16  
                                   l10119 0CD6                     AdaptiveDataRate@state 00F1  
                            _sourceMacLow 033E                                     ?_main 0001  
                         __end_of___awdiv 4540                                     _EEADR 000FA9  
                         __end_of___ftadd 2702                                     STR_10 7FCF  
                                   STR_11 7EE5                                     STR_20 7F38  
                                   STR_12 7FFA                                     STR_21 7F99  
                                   STR_13 7F6F                                     STR_30 7FF0  
                                   STR_22 7F85                                     STR_14 7F16  
                                   STR_23 7FEA                                     STR_31 7FBA  
                                   STR_15 7F8F                                     STR_24 7FED  
                                   STR_32 7F05                                     STR_16 7FA2  
                                   STR_25 7FF5                                     STR_17 7FAA  
                                   STR_26 7FE4                                     STR_18 7F56  
                                   STR_27 7FE4                                     STR_19 7FC8  
                                   STR_28 7FC1                           __end_of___awmod 47B0  
                                   STR_29 7FC1         __size_of_USBCtrlEPServiceComplete 00FA  
                         __end_of___ftdiv 386A                           __end_of___ftneg 50A8  
                         __end_of___lldiv 464A                                     u10305 0F92  
                                   u10315 0FAC                           __end_of___ftmul 3782  
                                   u10421 1322                                     u10325 1040  
                                   u10270 0D16                                     u10335 105A  
                                   _T0CON 000FD5                                     u10265 0CF2  
                                   u10266 0CF4                           ___awdiv@divisor 0068  
                                   u10285 0D68                                     u10286 0D6A  
                                   _T1CON 000FCD                           __end_of___llmod 4884  
                  __end_of_USBDeviceTasks 2BE6                           __end_of___ftsub 4D3C  
                         __end_of___fttol 368C                                     u10837 0D00  
                                   _T3CON 000FB1                 ?_USBCtrlEPServiceComplete 0001  
                          __CFG_DEBUG$OFF 000000                                     i2l100 2460  
                                   i2l101 248C                                     i2l102 24BA  
                                   i2l103 24E8                                     i2l105 2502  
                                   i2l211 4A08                                     i2l107 2508  
                                   i2l205 4A14                                     i2l213 4A0E  
                                   i2l401 3456                                     i2l500 305E  
                                   i2l502 3064                                     i2l510 41C2  
                                   i2l511 4152                                     i2l600 2078  
                                   i2l512 4156                                     i2l520 4D7A  
                                   i2l360 28AE                                     i2l601 20F2  
                                   i2l513 4170                                     i2l433 4226  
                                   i2l521 4D78                                     i2l506 41AC  
                                   i2l362 28E6                                     i2l370 2AE0  
                                   i2l427 3C12                                     i2l507 4142  
                                   i2l435 423C                                     i2l460 3B26  
                                   i2l604 20AC                                     i2l444 3514  
                                   i2l380 2B6C                                     i2l372 2AF2  
                                   i2l445 34BE                                     i2l373 2AFC  
                                   i2l462 3B84                                     i2l606 20FE  
                                   i2l534 42F4                                     i2l358 2888  
                                   i2l382 2B7C                                     i2l463 3B4E  
                                   i2l439 4366                                     i2l535 42EE  
                                   i2l375 2B20                                     i2l392 4E0C  
                                   i2l528 4F0C                                     i2l368 2ACC  
                                   i2l553 3CC2                                     i2l473 30D0  
                                   i2l545 49B6                                     i2l393 4E1A  
                                   i2l449 353E                                     i2l529 4F0A  
                                   i2l385 2BA2                                     i2l377 2B34  
                                   i2l369 2AD8                                     i2l466 3BC2  
                                   i2l458 3B1C                                     i2l554 3CC6  
                                   i2l474 30AE                                     i2l378 2B3E  
                                   i2l467 3B8C                                     i2l555 3D40  
                                   i2l547 4A00                                     i2l571 3A3E  
                                   i2l387 2BC2                                     i2l379 2B62  
                                   i2l556 3D06                                     i2l476 3144  
                                   i2l572 3A44                                     i2l477 312A  
                                   i2l397 33AE                                     i2l493 306A  
                                   i2l485 3992                                     i2l573 3A4A  
                                   i2l389 2BDE                                     i2l558 3D26  
                                   i2l742 3FD4                                     i2l590 1F7E  
                                   i2l494 2F78                                     i2l574 3A5C  
                                   i2l399 33D8                                     i2l743 3F78  
                                   i2l487 3A04                                     i2l575 3A62  
                                   i2l592 1FA0                                     i2l496 2F8A  
                                   i2l568 3ABA                                     i2l745 3F8E  
                                   i2l585 1EC8                                     i2l497 300A  
                                   i2l577 3A68                                     i2l569 3A36  
                                   i2l746 3F9A                                     i2l594 2020  
                                   i2l586 1ECE                                     i2l578 3A84  
                                   i2l747 3FB6                                     i2l499 3010  
                                   i2l579 3A9C                                     i2l748 3FCC  
                                   i2l596 1FEA                                     i2l588 1F36  
                                   i2l597 2006                                     i2l599 206C  
                                   _UADDR 000F6E                           ___awdiv@counter 006A  
                                   _RCREG 000FAE                                     _RCSTA 000FAB  
                                   _TMR1H 000FCF                                     _TMR1L 000FCE  
                                   _SPBRG 000FAF                             __CFG_USBDIV$2 000000  
                                   _USBIE 007D05                                     _USTAT 000F6C  
                                   _TXREG 000FAD        __size_of_USBCtrlEPAllowStatusStage 00C4  
                            ___lltoft@exp 0070                            __CFG_FCMEN$OFF 000000  
         __end_of_USBCtrlEPAllowDataStage 426E                                     _sd000 7E67  
                                   _sd001 7DB8                                     _sd002 7D84  
          ?_USBIncrement1msInternalTimers 0001                                     _dig_1 02E8  
                                   _dig_2 02E6                                     _dig_3 02E4  
                                   _dig_4 02E2                                     _le_AD 2BE6  
                           ___awtoft@sign 006B                                     _delay 46CC  
                              i2memset@p1 0001                          __end_of_STATE_ON 7E72  
                                   _getch 50CE                           __end_of_dpowers 7CCB  
                                   _scale 17DA                           __end_of_isdigit 5116  
                                   _ticks 032A                             ___ftpack@sign 0064  
                                   _putch 519E                                     main@i 02A8  
              __size_of_SetChannelLoRaWan 006C                                     pclath 000FFA  
                                   tablat 000FF5                             _gs_encryption 7E7A  
                                   plusw2 000FDB                         __end_of_CDCInitEP 48EA  
                                   status 000FD8                          __end_of_DataRate 4C74  
                                   wtemp6 0060                           __end_of_sprintf 0CB6  
                         __end_of_strncmp 46CC                           __end_of_toupper 5180  
                        __end_ofi2_memset 5034                            _tamanhoCommand 01ED  
            __size_of_USBStdSetCfgHandler 00DC                          __end_ofi2_strlen 4B0A  
                           setup_uart@brg 0071                           __initialization 3FF6  
                            __end_of_main 1384                     _control_signal_bitmap 02EE  
                          ??_enviaComando 007F                 __size_of_USBCtrlEPService 0096  
                                  ??_main 00F6                             ___fttol@sign1 00B9  
                     __end_of_JoinLoRaWan 4EAC                             __activetblptr 000002  
                         ?_USBDeviceTasks 0001                    SetChannelLoRaWan@canal 01E7  
                             ?_USBSuspend 0001                        recebeByte@sizeData 004C  
                    __size_of__tdiv_to_l_ 0134                          ?_initRecebeDados 0001  
                              i2strlen@cp 0005                        recebeByteLoRaWan@b 0010  
                      recebeByteLoRaWan@i 0011                              _cdc_mem_type 02EF  
                 __end_of_USBDeviceDetach 519E                             _sourceMacHigh 033A  
                           ?_SetBandWidth 00F1                                    ?_le_AD 009E  
                                  ?_delay 006D                    AdaptiveDataRate@status 01E6  
                                  ?_getch 0001                   __end_of_USBDeviceAttach 4F4C  
                                  _ADCON0 000FC2                                    _ADCON1 000FC1  
                                  _ADCON2 000FC0                          _CDCDataOutHandle 01F1  
                                  _CCP1IE 007CEA                                    _CCP1IF 007CF2  
                        ___llmod@dividend 006D                                    ?_scale 008F  
                                  _ADRESH 000FC4                                    _ADRESL 000FC3  
                                  _EEDATA 000FA8                                    _CCPR1H 000FBF  
                                  _CCPR1L 000FBE                                    _EECON2 000FA7  
                        ___awdiv@dividend 0066                          __end_of___awtoft 4E72  
                                  ?_putch 0001                          __end_of___ftpack 3DFA  
                        __end_of___lltoft 49A8                     __size_of_CDCTxService 012C  
                                  i2l1107 50D6                                    i2l1109 50F0  
                                  i2l1341 45A6                                    i2l1343 45B8  
                                  i2l1344 45C2                                    i2l1336 4570  
                                  i2l1338 4582                                    i2l1339 4594  
                                  i2l2171 1CD0                                    i2l2180 1D80  
                                  i2l2172 1C98                                    i2l2173 1CCE  
                                  i2l2190 1E70                                    i2l3064 4B64  
                                  i2l3072 4FBE                                    i2l2184 1E32  
                                  i2l2176 1D16                                    i2l3065 4B5C  
                                  i2l3073 4FB6                                    i2l2185 1DC2  
                                  i2l2186 1E2E                                    i2l2178 1DA0  
                                  i2l2179 1D52                                    i2l3084 46B2  
                                  i2l3093 517C                                    i2l3085 464C  
                                  i2l2189 1E8E                                    i2l3086 46AA  
                                  i2l3078 4AC6                                    i2l3079 4AC2  
                                  i2l2920 4C86                                    i2l2925 5022  
                                  i2l2926 5012                                    i2l2919 4CA6  
                              TxLoRaWan@i 01EC                                    i2l7147 3B26  
                                  i2l9003 464C                                    i2l7249 398A  
                                  i2l7179 5012                                    i2l9119 28DE  
                                  i2l9091 2880                                    i2l9343 2B74  
                                  i2l7889 4C86                                    _PAN_ID 02EA  
                           CDCTxService@i 006B                                 ??_MacSave 00F1  
                                  _TMR0IE 007F95                                    _TMR1IE 007CE8  
                                  _SPBRGH 000FB0                  i2USBTransferOnePacket@ep 0009  
                       ??i2_USBDeviceInit 0009           __size_ofi2_USBTransferOnePacket 0102  
                          __CFG_VREGEN$ON 000000                       retornaDado@dadoByte 0064  
                       _shortPacketStatus 0057                            __CFG_XINST$OFF 000000  
                        __end_of__powers_ 7CF2                           USBDeviceTasks@i 001C  
                            _write_values 7E7E               USBStdFeatureReqHandler@pUEP 0016  
                USBTransferOnePacket@data 0061                USBCtrlTrfInHandler@lastDTS 0002  
                         ??_USBDeviceInit 0068                                    ___ftge 4398  
                                  ___wmul 5034                                 ??___awdiv 006A  
                SetSpreadingFactor@status 01E6                                 ??___ftadd 007A  
                          __CFG_STVREN$ON 000000                                 ??___awmod 0064  
                               ??___ftdiv 0095                                 ??___ftneg 0063  
                       __end_of_STATE_OFF 7E6F                                 ??___lldiv 0068  
                               ??___ftmul 0086                                 ??___llmod 0075  
                               ??___ftsub 0086                                 ??___fttol 00B4  
                       _USBEnableEndpoint 4DFC           __size_of_USBStdGetStatusHandler 00A0  
                                  le_AD@i 00AC                                    _gs_pan 7E82  
                                  _memcpy 4C74                                    _memset 4F7C  
                                  _fround 2124                                    _millis 50A8  
                                  clear_0 402E                                    clear_1 403A  
                                  clear_2 4046                                    clear_3 4052  
                                  clear_4 405E                                    clear_5 406A  
                                  clear_6 4076                                    clear_7 4082  
                        ___awdiv@quotient 006C                           ___awmod@divisor 0062  
                         ___awmod@counter 0064                        __size_of_TxLoRaWan 0456  
                      ?_USBEnableEndpoint 0009                              ?_retornaDado 0060  
                            converter@aux 0004                                    main@dr 02AD  
                                  main@sf 02A0                                    _strcat 4BA2  
                                  _strcmp 4B5A                                    _strcpy 4FAC  
                                  _strlen 4A62                 __size_of_AdaptiveDataRate 003E  
                   ___ftmul@f3_as_product 008A             __size_of_USBTransferOnePacket 0106  
                               ??_isdigit 0060                              _CDCTxService 2D12  
                        __end_of_setup_AD 5190                              __mediumconst 7CA2  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                            ??_SetBandWidth 00F3  
                     ??_USBEnableEndpoint 000A                      __end_of_MAC_TX_UNCNF 7E3C  
                 recebeByteLoRaWan@i_4714 0013                                 ??_sprintf 00EB  
                             _CtrlTrfData 000438                                 ??_strncmp 0007  
                               ??_toupper 0001                         __end_of_SYS_RESET 7E58  
                      setup_uart@baudRate 006D                      _controlTransferState 0056  
                           ?_parseLoRaWan 0001                                __accesstop 0060  
                 __end_of__initialization 4088                              ?_verificaUSB 0001  
                         __CFG_PBADEN$OFF 000000                                ___ftadd@f1 0074  
                              ___ftadd@f2 0077                                ___ftge@ff1 0060  
                              ___ftge@ff2 0063                             ___rparam_used 000001  
                              ___ftdiv@f1 008F                                ___ftdiv@f2 0092  
                              ___ftdiv@f3 0099                  __size_of_USBStallHandler 0042  
                              ___ftneg@f1 0060                                ___awtoft@c 0068  
                     __size_of_USBSuspend 002E                                ___ftmul@f1 0080  
                              ___ftmul@f2 0083                       recebeByte@frameData 0664  
              __end_of_get_preambleid_900 7E74                __end_of_set_preambleid_900 7E76  
                              ___ftsub@f1 0080                                ___ftsub@f2 0083  
                              ___fttol@f1 00B0                            __pcstackCOMRAM 0001  
               __end_of_USBEnableEndpoint 4E38                             __end_of_sd000 7E6B  
                           __end_of_sd001 7DEC                             __end_of_sd002 7DB8  
                             _JoinLoRaWan 4E72                              __pidataBANK2 51AC  
                            __pidataBANK3 5138                             __end_of_le_AD 2D12  
                           __end_of_delay 473E                                ___lltoft@c 0068  
        __size_of_USBCtrlEPAllowDataStage 0098                             __end_of_getch 50F4  
                           __end_of_scale 1C12             __size_of_USBConfigureEndpoint 0094  
                         _retries_sending 02F4                             __end_of_putch 51AC  
                              _le_AD$5717 00A3               __end_of_USBCtrlTrfInHandler 3D4A  
                       _MAC_SET_CH_STATUS 7E0E                    i2_USBTransferOnePacket 3398  
                         _responseLoRaWan 01FE                                __div_to_l_ 2E3E  
                               ?_DataRate 00F1                                _cdc_notice 0314  
                               ?i2_memset 0001                                _cdc_rx_len 01F5  
                              _cdc_tx_len 0052                            main@deltaTempo 02A1  
                      __end_of_MAC_SET_DR 7E4B                        __end_of_MAC_SET_BW 7E29  
                                 ??_le_AD 00A1                        __end_of_MAC_SET_SF 7E0E  
                                 ??_delay 0071                                 ?i2_strlen 0001  
                ??_USBCtrlTrfSetupHandler 001B                          ?_USBDeviceDetach 0001  
                 _USBTicksSinceSuspendEnd 01F6                                   ??_getch 0001  
                         __div_to_l_@exp1 006B               __size_of_SetSpreadingFactor 0040  
                         __div_to_l_@cntr 006A                          ?_USBDeviceAttach 0001  
                                 ??_scale 0092                           __div_to_l_@quot 0066  
                      __end_of_MAC_TX_CNF 7E52                    _USBStdGetStatusHandler 4136  
                            sprintf@width 0119                                   ??_putch 0060  
                         le_AD@leituraAux 00AA                        __size_of_converter 0086  
                          ??_parseLoRaWan 0068                      __end_of_enviaComando 3398  
                              __pbssBANK1 01ED                                __pbssBANK2 02C4  
                              __pbssBANK3 0300                                __pbssBANK4 0440  
                              __pbssBANK5 0580                                __pbssBANK6 0600  
                              __pbssBANK7 0700                        __size_of_le_pulsos 00E0  
                   recebeByteLoRaWan@port 000F                         __end_of_TxLoRaWan 17DA  
                 SetChannelLoRaWan@ligado 00F1                            _novaMsgLoRaWan 0059  
                 AdaptiveDataRate@comando 011E                             __div_to_l_@f1 0060  
                           __div_to_l_@f2 0063               __size_of_USBWakeFromSuspend 0036  
                             _pBDTEntryIn 0046                   SetChannelLoRaWan@status 01E6  
        __end_of_USBCtrlEPServiceComplete 3594               __size_of_USBCheckCDCRequest 00A4  
                    USBCtrlTrfRxService@i 0001                                   ?___ftge 0060  
                                 ?___wmul 006E                 __end_of_MAC_SET_CH_STATUS 7E1C  
                      SetBandWidth@status 01E6                                   _CCP1CON 000FBD  
                                 ?_memcpy 0001                                   ?_memset 0060  
                                 ?_fround 008F                                   ?_millis 0060  
                              _device_dsc 7DEC                                 ?___awtoft 0068  
                               ?___ftpack 0060                          _USBCtrlEPService 426E  
                              _ep_data_in 02DB                                 ?___lltoft 0068  
                                 ?_strcat 0060                                   ?_strcmp 0001  
                                 ?_strcpy 0001                                   ?_strlen 0060  
             __end_of_USBCtrlTrfRxService 318E                        _USBCheckStdRequest 3A26  
                     le_pulsos@freqPulses 0069                         _configDescriptor1 7D41  
                                 i2l10711 4A2C                                   i2l10713 4A5C  
                              ??_DataRate 00F3                         _tamDadosRecebidos 005B  
                                 _GO_DONE 007E11                                ??i2_memset 0007  
             __end_of_USBCtrlTrfTxService 3BCA                       _USBStdSetCfgHandler 394A  
              __end_of_ResetModuloLoRaWan 5082                                ??i2_strlen 0003  
                        _discovery_status 02F5                       ?_USBCheckStdRequest 0001  
            __size_of_USBStdGetDscHandler 011A                                   _UIEbits 000F69  
                                 _UIRbits 000F68                                _gs_channel 7E80  
                           _cdc_trf_state 02F0                                   _MacSave 4EAC  
                         putsUSBUSART@len 0064                     __end_of_MAC_JOIN_OTAA 7E33  
                                 _pCDCDst 02D2                                   _pCDCSrc 02D5  
                       __end_of__npowers_ 7D19                                   __Hparam 0000  
         ??_USBIncrement1msInternalTimers 0001                      ?_USBStdSetCfgHandler 0001  
                               _CDCInitEP 4884                                _scale$5720 0092  
                                 __Lparam 0000                __size_of_USBEnableEndpoint 003C  
                    __end_of_SetBandWidth 4C2E                                 ?_setup_AD 0001  
                    ??_USBCheckStdRequest 001B                   enviaComando@tipoComando 007E  
                         __size_of___ftge 0092             __size_of_USBCtrlTrfOutHandler 005E  
                                 ___awdiv 44BA                                   ___ftadd 2554  
                                 ___awmod 473E                                   ___ftdiv 3782  
                                 ___ftneg 5082                                   ___lldiv 45C6  
                        ??_USBDeviceTasks 001C                           __size_of___wmul 0028  
                                 ___ftmul 368C                                   ___llmod 481C  
                                 ___ftsub 4CFA                                   ___fttol 3594  
                       ??_USBStallHandler 0001                         __end_of_converter 45C6  
                                 _channel 02F7                                   __pcinit 3FF6  
                       __end_of_le_pulsos 394A                           __size_of_memcpy 0044  
                              ??___awtoft 006B                                ??___ftpack 0065  
                         __size_of_memset 0030                           __size_of_fround 0270  
               __end_of_configDescriptor1 7D84                           __size_of_millis 0026  
                                 __ramtop 0800                                ??___lltoft 006C  
                                 __ptext0 0CB6                                   __ptext1 4096  
                                 __ptext2 3DFA                                   __ptext3 4CB8  
                                 __ptext4 5180                                   __ptext5 4B0A  
                                 __ptext6 386A                                   __ptext7 2BE6  
                                 __ptext8 3782                                   __ptext9 4E38  
                                 _inPipes 0040                                   _command 005C  
             _USBDeferOUTDataStagePackets 01F7                          _AdaptiveDataRate 4DBE  
                         __size_of_strcat 0046                           __size_of_strcmp 0048  
                         __size_of_strcpy 002E                           __size_of_strlen 0056  
                   SYS_InterruptHigh@dig1 0030                     SYS_InterruptHigh@dig2 0032  
                   SYS_InterruptHigh@dig3 0034                     SYS_InterruptHigh@dig4 0036  
                       __end_of_hexpowers 7D39                               ?__div_to_l_ 0060  
                                 _dpowers 7CA3                              ??_USBSuspend 0015  
                                 _isdigit 50F4                      __size_of_retornaDado 0060  
                                 delay@to 0079                          ___awmod@dividend 0060  
                           _receivePacket 0580                           i2_USBDeviceInit 2846  
                        i2USBDeviceInit@i 0009                                   getch@RC 0002  
                           converter@aux2 0005                        __end_of_USB_CD_Ptr 7D41  
                                 _sprintf 0012           __size_of_USBCtrlTrfSetupHandler 0090  
                                 _strncmp 464A                            __pintcode_body 2394  
                                 _toupper 516C                      end_of_initialization 4088  
                           TxLoRaWan@data 00F2                             TxLoRaWan@conf 01E6  
                      __end_of_USB_SD_Ptr 7D3F                                   memcpy@d 0007  
                                 memcpy@n 0005                                   memcpy@s 0009  
                     _pBDTEntryEP0OutNext 004E                                   memset@c 0062  
                                 memset@n 0064                                   memset@p 0066  
                           __Lmediumconst 7CA2                                   int_func 2394  
                         _USB1msTickCount 02CA           _dummy_encapsulated_cmd_response 03A6  
                                 millis@m 0064                                 i2u1000_40 2410  
                               i2u1001_40 2422                                 i2u1000_48 2412  
                               i2u1002_40 2434                                 i2u1001_48 2424  
                               i2u1003_40 244C                                 i2u1002_48 2436  
                               i2u1005_40 2476                                 i2u1007_40 24A4  
                               i2u1009_40 24D2                  ?_USBStdFeatureReqHandler 0001  
                           enviaComando@i 0081                     ??_USBStdSetCfgHandler 0015  
                         ___lldiv@divisor 0064                      __size_of_verificaUSB 0030  
                              ?_CDCInitEP 0001                           ___lldiv@counter 006C  
                      parseLoRaWan@status 007A                  recebeByte@escapeCaracter 01F4  
                      __end_of_USBSuspend 5008                   _USBCtrlEPAllowDataStage 41D6  
                               _RCSTAbits 000FAB                                ??_setup_AD 0060  
                                 postdec1 000FE5                                   postdec2 000FDD  
                            _MAC_TX_UNCNF 7E33                                   postinc0 000FEE  
                                 postinc2 000FDE                             MacSave@status 01E6  
                _USBCtrlEPServiceComplete 349A                            __tdiv_to_l_@f1 0060  
                          __tdiv_to_l_@f2 0063                       _get_channelmask_900 7E76  
                                 strcmp@r 0006                       _set_channelmask_900 7E78  
                                 strlen@s 0060                      __end_of_parseLoRaWan 3F52  
                           ??__tdiv_to_l_ 0066                _USBStatusStageEnabledFlag1 01FA  
              _USBStatusStageEnabledFlag2 01F9                        USBEnableEndpoint@p 000A  
                               _PORTCbits 000F82                                 _PORTDbits 000F83  
                               _PORTEbits 000F84                                 _STATE_OFF 7E6B  
                              _setup_ccp1 4CB8                             le_pulsos@freq 006A  
                           le_pulsos@modo 0065                                _setup_uart 4096  
                   __size_of_enviaComando 0104                                 _TRISCbits 000F94  
                               _TRISDbits 000F95                                 _TRISEbits 000F96  
                           ?_setup_pulsos 0001                                main@Fcanal 02AA  
                      _BothEP0OutUOWNsSet 01FB                                main@Icanal 029F  
                              main@i_3270 02AB                                main@i_3271 02AC  
               USBConfigureEndpoint@EPNum 0006                ?_USBCtrlEPAllowStatusStage 0001  
     USER_USB_CALLBACK_EVENT_HANDLER@size 0011                                 _USTATcopy 005D  
                __size_of_initRecebeDados 0016              __end_of_USBTransferOnePacket 3294  
                             ___ftdiv@exp 009C                                 _TXSTAbits 000FAC  
                               _SYS_RESET 7E52                       __size_of__div_to_l_ 012A  
                             ___ftmul@exp 0089                              ?_JoinLoRaWan 0001  
                  _USBCtrlTrfSetupHandler 442A                              le_AD@leitura 00AE  
                       putsUSBUSART@pData 0062                   ?i2_USBTransferOnePacket 0001  
                   __end_of_USBDeviceInit 2846                            __end_of___ftge 442A  
   __end_of_USBIncrement1msInternalTimers 5138    __size_of_USBIncrement1msInternalTimers 0022  
           _USBIncrement1msInternalTimers 5116                            __end_of___wmul 505C  
                            _enviaComando 3294                               _BAUDCONbits 000FB8  
                 __end_ofi2_USBDeviceInit 2984                             ?_putsUSBUSART 0060  
                          __end_of_gs_pan 7E84                                 i2memset@c 0003  
                               i2memset@n 0005                                 i2memset@p 0007  
                          __end_of_memcpy 4CB8                            __end_of_memset 4FAC  
                          __end_of_fround 2394                            __end_of_millis 50CE  
                       _USBBusIsSuspended 01FC                        _get_preambleid_900 7E72  
                      _set_preambleid_900 7E74                            __end_of_strcat 4BE8  
                          __end_of_strcmp 4BA2                            __end_of_strcpy 4FDA  
                          __end_of_strlen 4AB8                       start_initialization 3FF6  
                          ??_setup_pulsos 0060                   ?_USBStdGetStatusHandler 0001  
                         DataRate@comando 011E                               __end_of_MAC 7E67  
           USBCtrlTrfRxService@byteToRead 0002                               __end_of_SYS 7E5D  
                     __end_of__tdiv_to_l_ 2AB8                         __size_of_DataRate 0046  
                        TxLoRaWan@comando 011E                               _cdc_data_rx 000540  
                             _cdc_data_tx 000500                         __size_ofi2_memset 002C  
            __end_of_USBConfigureEndpoint 4398                          TxLoRaWan@tamData 00F4  
         __end_of_USBStdFeatureReqHandler 2124         __end_of_USBCtrlEPAllowStatusStage 3C8E  
                       __size_ofi2_strlen 0052                                 i2strlen@s 0001  
                __end_of_USBCtrlEPService 4304                           ___llmod@divisor 0071  
                   __size_of_SetBandWidth 0046                           ___llmod@counter 0075  
               ??_USBCtrlEPAllowDataStage 0002                               ??_CDCInitEP 000D  
                          USBDeviceInit@i 0068                        retornaDado@dadoBit 0060  
                               _TxLoRaWan 1384                    _pBDTEntryEP0OutCurrent 0050  
                 USBTransferOnePacket@dir 0060                   USBTransferOnePacket@len 0063  
          __end_ofi2_USBTransferOnePacket 349A                                  ??___ftge 0066  
                     __end_of_MAC_SET_ADR 7E44                                  ??___wmul 0072  
                     _USBStdGetDscHandler 2F68                               __pdataBANK2 02FE  
                             __pdataBANK3 03B5                          __CFG_LPT1OSC$OFF 000000  
                                ??_memcpy 0007                                  ??_memset 0066  
                          ??_putsUSBUSART 0062                                  ??_fround 0092  
                                ??_millis 0064                             sprintf@tmpval 010C  
                                ??_strcat 0064                  ResetModuloLoRaWan@status 0087  
                                ??_strcmp 0005                                  ??_strcpy 0005  
                                ??_strlen 0062                               ?_setup_ccp1 0001  
               recebeByteLoRaWan@tamMsgRx 0012                    _USBActiveConfiguration 005E  
                              fround@prec 0098            __end_of_USBStdGetStatusHandler 41D6  
                             ?_setup_uart 006D                         __size_of___awtoft 003A  
                       __size_of___ftpack 00B0                         __size_of___lltoft 005E  
                             __pbssCOMRAM 0038                __end_of_SetSpreadingFactor 4DBE  
                       _recebeByteLoRaWan 1C12                             __pcstackBANK0 0060  
                           __pcstackBANK1 0100                             __pcstackBANK2 0200  
            __size_of_USBCtrlTrfInHandler 00BC                      __end_of_set_link_key 7E7E  
                SetChannelLoRaWan@comando 011E                              _SetBandWidth 4BE8  
                      ?_recebeByteLoRaWan 0001                              _isdigit$5161 0061  
                    ?_USBStdGetDscHandler 0001                     __end_of_gs_encryption 7E7C  
                          SetBandWidth@bw 00F1                __end_of_USBWakeFromSuspend 4F18  
                                ?_MacSave 0001                               sprintf@flag 011B  
                             sprintf@fval 0116                               sprintf@prec 010A  
                         _USBStallHandler 4D3C                       ??_recebeByteLoRaWan 000A  
                            _pBDTEntryOut 02C4                  __end_of_AdaptiveDataRate 4DFC  
              __end_of_USBCheckCDCRequest 3FF6                      recebeByteLoRaWan@len 000E  
                __size_of_USBDeviceDetach 000E                  __size_of_USBDeviceAttach 0034  
                      _ResetModuloLoRaWan 505C                                 _main$5716 02A5  
                       ??_initRecebeDados 0060                                ?_TxLoRaWan 00F1  
                   __size_of_parseLoRaWan 00AC                       SetBandWidth@comando 011E  
                               __pintcode 0008                             __pmediumconst 7CA2  
                                ?___awdiv 0066                                  ?___ftadd 0074  
                                ?___awmod 0060                                  ?___ftdiv 008F  
                                ?___ftneg 0060                                  ?___lldiv 0060  
                                ?___ftmul 0080                                  ?___llmod 006D  
                                ?___ftsub 0080                                 __npowers_ 7CF2  
                                ?___fttol 00B0                       ?_ResetModuloLoRaWan 0001  
                      enviaComando@i_4700 0083                        enviaComando@i_4701 0085  
                       __size_of_setup_AD 0010                               __preambleID 02FB  
                        ?i2_USBDeviceInit 0001                               __tdiv_to_l_ 2984  
               __end_of_recebeByteLoRaWan 1EA8                             __send_retries 02FE  
                            ??__div_to_l_ 0066                      _USBTransferOnePacket 318E  
                               _converter 4540                                  ?_isdigit 0001  
                               _le_pulsos 386A              __end_of_USBCtrlTrfOutHandler 4A06  
                               _hexpowers 7D19                     ??_USBStdGetDscHandler 0001  
                             _ep_data_out 02D8                            __size_of_le_AD 012C  
                          __size_of_delay 0072                            __size_of_getch 0026  
                 parseLoRaWan@intervalMAX 0078                                  ?_sprintf 00BF  
            __size_of_USBCtrlTrfRxService 010C                      ??_ResetModuloLoRaWan 0087  
                          __size_of_scale 0438             USBConfigureEndpoint@direction 0001  
                                ?_strncmp 0001                                  ?_toupper 0001  
                          __size_of_putch 000E                                 delay@time 006D  
                                _MAC_SAVE 7E5D              __size_of_USBCtrlTrfTxService 00CC  
                            _parseLoRaWan 3EA6                            ___wmul@product 0072  
                                _LATDbits 000F8C                               _MAC_SET_ADR 7E3C  
                            TxLoRaWan@hex 01E8                ??_USBCtrlEPServiceComplete 0002  
                                _IPR1bits 000F9F                                  _IPR2bits 000FA2  
                                _PIE2bits 000FA0                       __size_of_setup_ccp1 0042  
                               _numPacote 02F1                       __size_of_setup_uart 00A0  
                      __end_of__div_to_l_ 2F68                                  _PIR2bits 000FA1  
                                i2u560_40 3BB4                                  i2u560_47 3BAA  
                                i2u570_40 39BE                                  i2u558_40 3B76  
                                i2u574_40 2FD8                      __end_of_setup_pulsos 3EA6  
                                i2u558_47 3B6C                                  i2u574_47 2FCE  
                                i2u575_40 3006                                  i2u575_47 2FFC  
                                i2u577_40 3054                                  i2u577_47 304A  
                                i2u842_40 4B96                                  i2u844_40 4678  
                                i2u853_40 28A4                                  i2u599_40 2092  
                                i2u856_40 2942                                  i2u857_40 4AE6  
                                i2u873_40 1E94                                  i2u857_47 4ADC  
                                i2u875_40 1EA2                                  i2u869_40 1DBE  
                                _RCONbits 000FD0                                  i2u899_40 2BE2  
                        __CFG_WDTPS$32768 000000                                  i2u999_40 23FE  
                                _UEP0bits 000F70                                  i2u999_48 2400  
              _USBDeferINDataStagePackets 01F8               __size_of_USBCheckStdRequest 00D8  
                                _UCONbits 000F6D                                  _STATE_ON 7E6F  
                    _USBConfigureEndpoint 4304                      __size_of_JoinLoRaWan 003A  
                               getch@data 0003                               _frameBuffer 0700  
                           ??_retornaDado 0061          __size_of_USBStdFeatureReqHandler 027C  
                        _get_own_mac_high 7E84                         ___wmul@multiplier 006E  
                   ?_USBTransferOnePacket 0060                         _SYS_InterruptHigh 0008  
                             _encryptMode 02F3                                ?_converter 0002  
                                _DataRate 4C2E                             ?_CDCTxService 0001  
                              ?_le_pulsos 0065                              _RemoteWakeup 01FD  
                               main@pisca 02AE                                 main@tempo 0297  
                                i2_memset 5008                          main@tempoTimeOut 029B  
                      ?_SYS_InterruptHigh 0001                          putsUSBUSART@data 0060  
                 __end_of_USBStallHandler 4D7E                                  i2_strlen 4AB8  
                               copy_data0 400A                               _freqPulses1 02CE  
                             _freqPulses2 0336                               _freqPulses3 0332  
                             _freqPulses4 032E               ??_USBCtrlEPAllowStatusStage 0001  
             __end_of_USBStdSetCfgHandler 3A26                       ??_SYS_InterruptHigh 001D  
                    __end_of_putsUSBUSART 4B5A                             ??_verificaUSB 006D  
                      __end_of_device_dsc 7DFE                          __size_of_MacSave 0036  
                              _EECON1bits 000FA6                            DataRate@status 01E6  
                 ?_USBCtrlTrfSetupHandler 0001                           TxLoRaWan@status 01E7  
                 USBStdGetStatusHandler@p 0002                                  __Hrparam 0000  
                             ??_TxLoRaWan 00F5                                 memcpy@tmp 000B  
                                __Lrparam 0000                    USBTransferOnePacket@ep 0068  
                                _SetupPkt 000430                recebeByteLoRaWan@frameData 0440  
                       ??_USBDeviceDetach 0060                     ?_USBConfigureEndpoint 0001  
                       ??_USBDeviceAttach 0060                          __size_of___awdiv 0086  
                        __size_of___ftadd 01AE                          __size_of___awmod 0072  
                        __size_of___ftdiv 00E8                          __size_of___ftneg 0026  
                        __size_of___lldiv 0084                          __size_of___ftmul 00F6  
                        __size_of___llmod 0068                          __size_of___ftsub 0042  
                        __size_of___fttol 00F8                                  ___awtoft 4E38  
                                ___ftpack 3D4A                 __end_of_SYS_InterruptHigh 2554  
                             _fround$5718 0095                               _fround$5719 0092  
                                ___lltoft 494A                               _line_coding 03AE  
              __size_of_recebeByteLoRaWan 0296                        __end_of_gs_channel 7E82  
                          ??_CDCTxService 006B                                sprintf@idx 0103  
                              sprintf@len 0106                                sprintf@exp 0110  
                              sprintf@val 0112                                strcat@from 0062  
                        __size_of_isdigit 0022                   __size_of_USBDeviceTasks 012E  
                     __end_of_retornaDado 494A                           enviaComando@cmd 007C  
                                __ptext10 46CC                                  __ptext11 4F4C  
                                __ptext20 48EA                                  __ptext12 5190  
                                __ptext21 505C                                  __ptext13 4F18  
                                __ptext30 17DA                                  __ptext22 4E72  
                                __ptext14 2D12                                  __ptext31 50F4  
                                __ptext23 4D7E                                  __ptext15 318E  
                                __ptext40 481C                                  __ptext32 2124  
                                __ptext24 47B0                                  __ptext16 2702  
                                __ptext41 45C6                                  __ptext33 5034  
                                __ptext25 4BE8                                  __ptext17 4F7C  
                                __ptext50 519E                                  __ptext42 3594  
                                __ptext34 368C                                  __ptext26 4EAC  
                                __ptext18 1384                                  __ptext51 3EA6  
                                __ptext43 4CFA                                  __ptext35 473E  
                                __ptext27 4C2E                                  __ptext19 4BA2  
                                __ptext60 4540                                  __ptext52 50A8  
                                __ptext44 2554                                  __ptext36 44BA  
                                __ptext28 4DBE                                  __ptext61 516C  
                                __ptext53 5156                                  __ptext45 3D4A  
                                __ptext37 2984                                  __ptext29 0012  
                                __ptext70 4C74                                  __ptext62 50CE  
                                __ptext46 5082                                  __ptext38 2E3E  
                                __ptext71 442A                                  __ptext63 2AB8  
                                __ptext55 1C12                                  __ptext47 4398  
                                __ptext39 494A                                  __ptext80 4A06  
                                __ptext72 349A                                  __ptext64 2846  
                                __ptext56 4AB8                                  __ptext48 3294  
                                __ptext81 3F52                                  __ptext73 41D6  
                                __ptext65 4EE2                                  __ptext57 464A  
                                __ptext49 4A62                                  __ptext90 3AFE  
                                __ptext82 4884                                  __ptext74 3A26  
                                __ptext66 4FDA                                  __ptext58 4FAC  
                                __ptext83 3398                                  __ptext75 394A  
                                __ptext67 4D3C                                  __ptext59 4B5A  
                                __ptext84 4DFC                                  __ptext76 5008  
                                __ptext68 5116                                  __ptext85 4304  
                                __ptext77 4136                                  __ptext69 426E  
                                __ptext86 49A8                                  __ptext78 2F68  
                                __ptext87 3082                                  __ptext79 1EA8  
                                __ptext88 3BCA                                  __ptext89 3C8E  
                                __powers_ 7CCB             recebeByte@checksumRecebimento 02EC  
                        __size_of_sprintf 0CA4                          __size_of_strncmp 0082  
                        __size_of_toupper 0014                                strcpy@from 0003  
                          _dadosRecebidos 0300                                  _error_AT 02FA  
                                _error_RX 02F8                                  _error_TX 01FF  
                    parseLoRaWan@previous 0074            __end_of_USBCtrlTrfSetupHandler 44BA  
                           __size_of_main 06CE                         ?_USBCtrlEPService 0001  
                                _tamFrame 005A                                strncmp@len 0005  
                              DataRate@dr 00F1                        ??_USBCtrlEPService 001B  
                              _MAC_SET_DR 7E44                                _MAC_SET_BW 7E1C  
                           _MAC_JOIN_OTAA 7E29                                _MAC_SET_SF 7DFE  
                     _USBCtrlTrfInHandler 3C8E                                _MAC_TX_CNF 7E4B  
                     __end_of_verificaUSB 4F7C                                  _response 0342  
                                _setup_AD 5180                                  _outPipes 0038  
                            _set_link_key 7E7C                      _USBCtrlTrfOutHandler 49A8  
                                int$flags 005F                 _USBCtrlEPAllowStatusStage 3BCA  
                          converter@conv1 0006                            converter@conv2 0002  
                         _get_own_mac_low 7E86                                  _protocol 02F9  
                                main@data 0200                            converter@resul 0003  
                                main@resp 0296                    ??_USBTransferOnePacket 0064  
                            ??_setup_ccp1 0060                               _MSG_LORAWAN 03B5  
                   __CFG_CPUDIV$OSC1_PLL2 000000                              ??_setup_uart 0071  
               _USBDeferStatusStagePacket 0053                  CDCTxService@byte_to_send 006C  
                               putch@data 0060                               ??_converter 0003  
             __end_of_get_channelmask_900 7E78                               ??_le_pulsos 0069  
                              _INTCONbits 000FF2               __end_of_set_channelmask_900 7E7A  
                          TxLoRaWan@porta 00F1                      ?_USBCtrlTrfInHandler 0001  
                                memcpy@d1 0001                                  memcpy@s1 0003  
                         _delivery_status 02F6             USBCtrlTrfTxService@byteToSend 0001  
                                isdigit@c 0062                                  memset@p1 0060  
                                scale@scl 0095                          ?_USBStallHandler 0001  
                USBStdFeatureReqHandler@p 0019                           _initRecebeDados 5156  
                                intlevel2 0000                                 sprintf@ap 0108  
                               sprintf@cp 0104                          __tdiv_to_l_@exp1 006E  
                               sprintf@sp 00BF                          __tdiv_to_l_@cntr 006D  
                  __size_of_USBDeviceInit 0144                          __tdiv_to_l_@quot 0069  
 __end_of_USER_USB_CALLBACK_EVENT_HANDLER 4A62  __size_of_USER_USB_CALLBACK_EVENT_HANDLER 005C  
       ??_USER_USB_CALLBACK_EVENT_HANDLER 0013          ?_USER_USB_CALLBACK_EVENT_HANDLER 000D  
         _USER_USB_CALLBACK_EVENT_HANDLER 4A06              i2USBTransferOnePacket@handle 000A  
                        ___lldiv@dividend 0060                     __size_of_setup_pulsos 00AC  
                       _SetChannelLoRaWan 47B0                        _SetSpreadingFactor 4D7E  
                       ?_AdaptiveDataRate 00F1                       parseLoRaWan@timeout 007B  
                          MacSave@comando 011E                        ?_SetChannelLoRaWan 00F1  
                               strncmp@s1 0001                                 strncmp@s2 0003  
                      __end_of_setup_ccp1 4CFA                        __end_of_setup_uart 4136  
                      ??_AdaptiveDataRate 00F3                i2USBTransferOnePacket@data 0002  
                  ??_USBConfigureEndpoint 0002                     ?_USBCtrlTrfOutHandler 0001  
                   retornaDado@selectDado 0063                       ?_SetSpreadingFactor 0001  
                     _USBCtrlTrfRxService 3082                        _USBWakeFromSuspend 4EE2  
                     ??_SetChannelLoRaWan 00F2                   _USBStdFeatureReqHandler 1EA8  
                      _USBCheckCDCRequest 3F52                       _USBCtrlTrfTxService 3AFE  
                    SetSpreadingFactor@sf 01E7                __size_of_SYS_InterruptHigh 254C  
                            ?__tdiv_to_l_ 0060                               _retornaDado 48EA  
                         le_AD@AnalogPort 00A9                                  sprintf@c 011D  
                                sprintf@f 00C1                                  strcat@cp 0064  
               recebeByte@tamanhoMensagem 01EF                                  strcat@to 0060  
                     ?_USBWakeFromSuspend 0001                                  strcmp@s1 0001  
                                strcmp@s2 0003                          ___lldiv@quotient 0068  
                   ??_USBCtrlTrfInHandler 0002                                  strcpy@cp 0005  
                                strlen@cp 0064                                  strcpy@to 0001  
                   _USBAlternateInterface 02FC                                  toupper@c 0001  
                     ?_USBCheckCDCRequest 0001                      __end_of_write_values 7E80  
               i2USBTransferOnePacket@dir 0001                 i2USBTransferOnePacket@len 0004  
                            _setup_pulsos 3DFA                       USBEnableEndpoint@ep 000C  
                         _endpoint_number 0055                     __size_of_putsUSBUSART 0050  
                    ??_SetSpreadingFactor 00F1                      ?_USBCtrlTrfRxService 0001  
               __end_of_SetChannelLoRaWan 481C                        __CFG_FOSC$HSPLL_HS 000000  
                ?_USBCtrlEPAllowDataStage 0001                      ?_USBCtrlTrfTxService 0001  
               SetSpreadingFactor@comando 011E                               _verificaUSB 4F4C  
                __end_of_get_own_mac_high 7E86              _USBStatusStageTimeoutCounter 0054  
                    ??_USBWakeFromSuspend 0015                USBTransferOnePacket@handle 0069  
                    __end_of_CDCTxService 2E3E                   __end_of_get_own_mac_low 7E88  
                    ??_USBCheckCDCRequest 0001                                _USB_CD_Ptr 7D3F  
