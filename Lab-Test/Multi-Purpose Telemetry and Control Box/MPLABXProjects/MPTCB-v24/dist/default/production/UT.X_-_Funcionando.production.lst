

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Thu Mar 07 12:09:57 2019

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    22                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	text0,global,reloc=2,class=CODE,delta=1
    24                           	psect	text1,global,reloc=2,class=CODE,delta=1
    25                           	psect	text2,global,reloc=2,class=CODE,delta=1
    26                           	psect	text3,global,reloc=2,class=CODE,delta=1
    27                           	psect	text4,global,reloc=2,class=CODE,delta=1
    28                           	psect	text5,global,reloc=2,class=CODE,delta=1
    29                           	psect	text6,global,reloc=2,class=CODE,delta=1
    30                           	psect	text7,global,reloc=2,class=CODE,delta=1
    31                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text10,global,reloc=2,class=CODE,delta=1
    34                           	psect	text11,global,reloc=2,class=CODE,delta=1
    35                           	psect	text12,global,reloc=2,class=CODE,delta=1
    36                           	psect	text13,global,reloc=2,class=CODE,delta=1
    37                           	psect	text14,global,reloc=2,class=CODE,delta=1
    38                           	psect	text15,global,reloc=2,class=CODE,delta=1
    39                           	psect	text16,global,reloc=2,class=CODE,delta=1
    40                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text18,global,reloc=2,class=CODE,delta=1
    42                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text20,global,reloc=2,class=CODE,delta=1
    44                           	psect	text21,global,reloc=2,class=CODE,delta=1
    45                           	psect	text22,global,reloc=2,class=CODE,delta=1
    46                           	psect	text23,global,reloc=2,class=CODE,delta=1
    47                           	psect	text24,global,reloc=2,class=CODE,delta=1
    48                           	psect	text25,global,reloc=2,class=CODE,delta=1
    49                           	psect	text26,global,reloc=2,class=CODE,delta=1
    50                           	psect	text27,global,reloc=2,class=CODE,delta=1
    51                           	psect	text28,global,reloc=2,class=CODE,delta=1
    52                           	psect	text29,global,reloc=2,class=CODE,delta=1
    53                           	psect	text30,global,reloc=2,class=CODE,delta=1
    54                           	psect	text31,global,reloc=2,class=CODE,delta=1
    55                           	psect	text32,global,reloc=2,class=CODE,delta=1
    56                           	psect	text33,global,reloc=2,class=CODE,delta=1
    57                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text35,global,reloc=2,class=CODE,delta=1
    59                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text51,global,reloc=2,class=CODE,delta=1
    75                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text53,global,reloc=2,class=CODE,delta=1
    77                           	psect	text54,global,reloc=2,class=CODE,delta=1
    78                           	psect	text55,global,reloc=2,class=CODE,delta=1
    79                           	psect	text56,global,reloc=2,class=CODE,delta=1
    80                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    81                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=1
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,delta=1
   107                           	psect	text83,global,reloc=2,class=CODE,delta=1
   108                           	psect	text84,global,reloc=2,class=CODE,delta=1
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1
   110                           	psect	text86,global,reloc=2,class=CODE,delta=1
   111                           	psect	text87,global,reloc=2,class=CODE,delta=1
   112                           	psect	text88,global,reloc=2,class=CODE,delta=1
   113                           	psect	text89,global,reloc=2,class=CODE,delta=1
   114                           	psect	text90,global,reloc=2,class=CODE,delta=1
   115                           	psect	text91,global,reloc=2,class=CODE,delta=1
   116                           	psect	text92,global,reloc=2,class=CODE,delta=1
   117                           	psect	text93,global,reloc=2,class=CODE,delta=1
   118                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   119                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   120                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   121                           	dabs	1,0x400,48,_BDT
   122                           	dabs	1,0x500,64,_cdc_data_tx
   123                           	dabs	1,0x438,8,_CtrlTrfData
   124                           	dabs	1,0x430,8,_SetupPkt
   125                           	dabs	1,0x540,64,_cdc_data_rx
   126  0000                     
   127                           ; Version 1.44
   128                           ; Generated 14/09/2017 GMT
   129                           ; 
   130                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   131                           ; All rights reserved.
   132                           ; 
   133                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   134                           ; 
   135                           ; Redistribution and use in source and binary forms, with or without modification, are
   136                           ; permitted provided that the following conditions are met:
   137                           ; 
   138                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   139                           ;        conditions and the following disclaimer.
   140                           ; 
   141                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   142                           ;        of conditions and the following disclaimer in the documentation and/or other
   143                           ;        materials provided with the distribution.
   144                           ; 
   145                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   146                           ;        software without specific prior written permission.
   147                           ; 
   148                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   149                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   150                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   151                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   152                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   153                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   154                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   155                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   156                           ; 
   157                           ; 
   158                           ; Code-generator required, PIC18F4550 Definitions
   159                           ; 
   160                           ; SFR Addresses
   161  0000                     
   162                           	psect	idataBANK2
   163  005712                     __pidataBANK2:
   164                           	opt stack 0
   165                           
   166                           ;initializer for __send_retries
   167  005712  03                 	db	3
   168                           
   169                           	psect	idataBANK3
   170  00569E                     __pidataBANK3:
   171                           	opt stack 0
   172                           
   173                           ;initializer for _MSG_LORAWAN
   174  00569E  91                 	db	low (STR_15+7)
   175  00569F  7F                 	db	high (STR_15+7)
   176  0056A0  43                 	db	low STR_7
   177  0056A1  7F                 	db	high STR_7
   178  0056A2  5F                 	db	low STR_8
   179  0056A3  7F                 	db	high STR_8
   180  0056A4  75                 	db	low STR_9
   181  0056A5  7F                 	db	high STR_9
   182  0056A6  CA                 	db	low STR_10
   183  0056A7  7F                 	db	high STR_10
   184  0056A8  E0                 	db	low STR_11
   185  0056A9  7E                 	db	high STR_11
   186  0056AA  F5                 	db	low STR_12
   187  0056AB  7F                 	db	high STR_12
   188  0056AC  6A                 	db	low STR_13
   189  0056AD  7F                 	db	high STR_13
   190  0056AE  22                 	db	low STR_14
   191  0056AF  7F                 	db	high STR_14
   192  0056B0  8A                 	db	low STR_15
   193  0056B1  7F                 	db	high STR_15
   194  0056B2  9D                 	db	low STR_16
   195  0056B3  7F                 	db	high STR_16
   196  0056B4  A5                 	db	low STR_17
   197  0056B5  7F                 	db	high STR_17
   198  0056B6  51                 	db	low STR_18
   199  0056B7  7F                 	db	high STR_18
   200  0056B8  C3                 	db	low STR_19
   201  0056B9  7F                 	db	high STR_19
   202  0056BA  33                 	db	low STR_20
   203  0056BB  7F                 	db	high STR_20
   204                           
   205                           	psect	mediumconst
   206  007BFA                     __pmediumconst:
   207                           	opt stack 0
   208  007BFA  00                 	db	0
   209  007BFB                     _dpowers:
   210                           	opt stack 0
   211  007BFB  0001               	dw	1
   212  007BFD  0000               	dw	0
   213  007BFF  000A               	dw	10
   214  007C01  0000               	dw	0
   215  007C03  0064               	dw	100
   216  007C05  0000               	dw	0
   217  007C07  03E8               	dw	1000
   218  007C09  0000               	dw	0
   219  007C0B  2710               	dw	10000
   220  007C0D  0000               	dw	0
   221  007C0F  86A0               	dw	34464
   222  007C11  0001               	dw	1
   223  007C13  4240               	dw	16960
   224  007C15  000F               	dw	15
   225  007C17  9680               	dw	38528
   226  007C19  0098               	dw	152
   227  007C1B  E100               	dw	57600
   228  007C1D  05F5               	dw	1525
   229  007C1F  CA00               	dw	51712
   230  007C21  3B9A               	dw	15258
   231  007C23                     __end_of_dpowers:
   232                           	opt stack 0
   233  007C23                     __powers_:
   234                           	opt stack 0
   235  007C23  00                 	db	0
   236  007C24  80                 	db	128
   237  007C25  3F                 	db	63
   238  007C26  00                 	db	0
   239  007C27  20                 	db	32
   240  007C28  41                 	db	65
   241  007C29  00                 	db	0
   242  007C2A  C8                 	db	200
   243  007C2B  42                 	db	66
   244  007C2C  00                 	db	0
   245  007C2D  7A                 	db	122
   246  007C2E  44                 	db	68
   247  007C2F  40                 	db	64
   248  007C30  1C                 	db	28
   249  007C31  46                 	db	70
   250  007C32  50                 	db	80
   251  007C33  C3                 	db	195
   252  007C34  47                 	db	71
   253  007C35  24                 	db	36
   254  007C36  74                 	db	116
   255  007C37  49                 	db	73
   256  007C38  97                 	db	151
   257  007C39  18                 	db	24
   258  007C3A  4B                 	db	75
   259  007C3B  BC                 	db	188
   260  007C3C  BE                 	db	190
   261  007C3D  4C                 	db	76
   262  007C3E  6B                 	db	107
   263  007C3F  6E                 	db	110
   264  007C40  4E                 	db	78
   265  007C41  03                 	db	3
   266  007C42  15                 	db	21
   267  007C43  50                 	db	80
   268  007C44  79                 	db	121
   269  007C45  AD                 	db	173
   270  007C46  60                 	db	96
   271  007C47  F3                 	db	243
   272  007C48  49                 	db	73
   273  007C49  71                 	db	113
   274  007C4A                     __end_of__powers_:
   275                           	opt stack 0
   276  007C4A                     __npowers_:
   277                           	opt stack 0
   278  007C4A  00                 	db	0
   279  007C4B  80                 	db	128
   280  007C4C  3F                 	db	63
   281  007C4D  CD                 	db	205
   282  007C4E  CC                 	db	204
   283  007C4F  3D                 	db	61
   284  007C50  D7                 	db	215
   285  007C51  23                 	db	35
   286  007C52  3C                 	db	60
   287  007C53  12                 	db	18
   288  007C54  83                 	db	131
   289  007C55  3A                 	db	58
   290  007C56  B7                 	db	183
   291  007C57  D1                 	db	209
   292  007C58  38                 	db	56
   293  007C59  C6                 	db	198
   294  007C5A  27                 	db	39
   295  007C5B  37                 	db	55
   296  007C5C  38                 	db	56
   297  007C5D  86                 	db	134
   298  007C5E  35                 	db	53
   299  007C5F  C0                 	db	192
   300  007C60  D6                 	db	214
   301  007C61  33                 	db	51
   302  007C62  CC                 	db	204
   303  007C63  2B                 	db	43
   304  007C64  32                 	db	50
   305  007C65  70                 	db	112
   306  007C66  89                 	db	137
   307  007C67  30                 	db	48
   308  007C68  E7                 	db	231
   309  007C69  DB                 	db	219
   310  007C6A  2E                 	db	46
   311  007C6B  E5                 	db	229
   312  007C6C  3C                 	db	60
   313  007C6D  1E                 	db	30
   314  007C6E  42                 	db	66
   315  007C6F  A2                 	db	162
   316  007C70  0D                 	db	13
   317  007C71                     __end_of__npowers_:
   318                           	opt stack 0
   319  007C71                     _hexpowers:
   320                           	opt stack 0
   321  007C71  0001               	dw	1
   322  007C73  0000               	dw	0
   323  007C75  0010               	dw	16
   324  007C77  0000               	dw	0
   325  007C79  0100               	dw	256
   326  007C7B  0000               	dw	0
   327  007C7D  1000               	dw	4096
   328  007C7F  0000               	dw	0
   329  007C81  0000               	dw	0
   330  007C83  0001               	dw	1
   331  007C85  0000               	dw	0
   332  007C87  0010               	dw	16
   333  007C89  0000               	dw	0
   334  007C8B  0100               	dw	256
   335  007C8D  0000               	dw	0
   336  007C8F  1000               	dw	4096
   337  007C91                     __end_of_hexpowers:
   338                           	opt stack 0
   339  007C91                     _USB_SD_Ptr:
   340                           	opt stack 0
   341  007C91  F2                 	db	low _sd000
   342  007C92  7D                 	db	high _sd000
   343  007C93  10                 	db	low _sd001
   344  007C94  7D                 	db	high _sd001
   345  007C95  DC                 	db	low _sd002
   346  007C96  7C                 	db	high _sd002
   347  007C97                     __end_of_USB_SD_Ptr:
   348                           	opt stack 0
   349  007C97                     _USB_CD_Ptr:
   350                           	opt stack 0
   351  007C97  99                 	db	low _configDescriptor1
   352  007C98  7C                 	db	high _configDescriptor1
   353  007C99                     __end_of_USB_CD_Ptr:
   354                           	opt stack 0
   355  007C99                     _configDescriptor1:
   356                           	opt stack 0
   357  007C99  09                 	db	9
   358  007C9A  02                 	db	2
   359  007C9B  43                 	db	67
   360  007C9C  00                 	db	0
   361  007C9D  02                 	db	2
   362  007C9E  01                 	db	1
   363  007C9F  00                 	db	0
   364  007CA0  C0                 	db	192
   365  007CA1  32                 	db	50
   366  007CA2  09                 	db	9
   367  007CA3  04                 	db	4
   368  007CA4  00                 	db	0
   369  007CA5  00                 	db	0
   370  007CA6  01                 	db	1
   371  007CA7  02                 	db	2
   372  007CA8  02                 	db	2
   373  007CA9  01                 	db	1
   374  007CAA  00                 	db	0
   375  007CAB  05                 	db	5
   376  007CAC  24                 	db	36
   377  007CAD  00                 	db	0
   378  007CAE  10                 	db	16
   379  007CAF  01                 	db	1
   380  007CB0  04                 	db	4
   381  007CB1  24                 	db	36
   382  007CB2  02                 	db	2
   383  007CB3  02                 	db	2
   384  007CB4  05                 	db	5
   385  007CB5  24                 	db	36
   386  007CB6  06                 	db	6
   387  007CB7  00                 	db	0
   388  007CB8  01                 	db	1
   389  007CB9  05                 	db	5
   390  007CBA  24                 	db	36
   391  007CBB  01                 	db	1
   392  007CBC  00                 	db	0
   393  007CBD  01                 	db	1
   394  007CBE  07                 	db	7
   395  007CBF  05                 	db	5
   396  007CC0  81                 	db	129
   397  007CC1  03                 	db	3
   398  007CC2  08                 	db	8
   399  007CC3  00                 	db	0
   400  007CC4  02                 	db	2
   401  007CC5  09                 	db	9
   402  007CC6  04                 	db	4
   403  007CC7  01                 	db	1
   404  007CC8  00                 	db	0
   405  007CC9  02                 	db	2
   406  007CCA  0A                 	db	10
   407  007CCB  00                 	db	0
   408  007CCC  00                 	db	0
   409  007CCD  00                 	db	0
   410  007CCE  07                 	db	7
   411  007CCF  05                 	db	5
   412  007CD0  02                 	db	2
   413  007CD1  02                 	db	2
   414  007CD2  40                 	db	64
   415  007CD3  00                 	db	0
   416  007CD4  00                 	db	0
   417  007CD5  07                 	db	7
   418  007CD6  05                 	db	5
   419  007CD7  82                 	db	130
   420  007CD8  02                 	db	2
   421  007CD9  40                 	db	64
   422  007CDA  00                 	db	0
   423  007CDB  00                 	db	0
   424  007CDC                     __end_of_configDescriptor1:
   425                           	opt stack 0
   426  007CDC                     _sd002:
   427                           	opt stack 0
   428  007CDC  34                 	db	52
   429  007CDD  03                 	db	3
   430  007CDE  0043               	dw	67
   431  007CE0  0044               	dw	68
   432  007CE2  0043               	dw	67
   433  007CE4  0020               	dw	32
   434  007CE6  0052               	dw	82
   435  007CE8  0053               	dw	83
   436  007CEA  002D               	dw	45
   437  007CEC  0032               	dw	50
   438  007CEE  0033               	dw	51
   439  007CF0  0032               	dw	50
   440  007CF2  0020               	dw	32
   441  007CF4  0045               	dw	69
   442  007CF6  006D               	dw	109
   443  007CF8  0075               	dw	117
   444  007CFA  006C               	dw	108
   445  007CFC  0061               	dw	97
   446  007CFE  0074               	dw	116
   447  007D00  0069               	dw	105
   448  007D02  006F               	dw	111
   449  007D04  006E               	dw	110
   450  007D06  0020               	dw	32
   451  007D08  0044               	dw	68
   452  007D0A  0065               	dw	101
   453  007D0C  006D               	dw	109
   454  007D0E  006F               	dw	111
   455  007D10                     __end_of_sd002:
   456                           	opt stack 0
   457  007D10                     _sd001:
   458                           	opt stack 0
   459  007D10  34                 	db	52
   460  007D11  03                 	db	3
   461  007D12  004D               	dw	77
   462  007D14  0069               	dw	105
   463  007D16  0063               	dw	99
   464  007D18  0072               	dw	114
   465  007D1A  006F               	dw	111
   466  007D1C  0063               	dw	99
   467  007D1E  0068               	dw	104
   468  007D20  0069               	dw	105
   469  007D22  0070               	dw	112
   470  007D24  0020               	dw	32
   471  007D26  0054               	dw	84
   472  007D28  0065               	dw	101
   473  007D2A  0063               	dw	99
   474  007D2C  0068               	dw	104
   475  007D2E  006E               	dw	110
   476  007D30  006F               	dw	111
   477  007D32  006C               	dw	108
   478  007D34  006F               	dw	111
   479  007D36  0067               	dw	103
   480  007D38  0079               	dw	121
   481  007D3A  0020               	dw	32
   482  007D3C  0049               	dw	73
   483  007D3E  006E               	dw	110
   484  007D40  0063               	dw	99
   485  007D42  002E               	dw	46
   486  007D44                     __end_of_sd001:
   487                           	opt stack 0
   488  007D44                     _device_dsc:
   489                           	opt stack 0
   490  007D44  12                 	db	18
   491  007D45  01                 	db	1
   492  007D46  0200               	dw	512
   493  007D48  02                 	db	2
   494  007D49  00                 	db	0
   495  007D4A  00                 	db	0
   496  007D4B  08                 	db	8
   497  007D4C  04D8               	dw	1240
   498  007D4E  000A               	dw	10
   499  007D50  0100               	dw	256
   500  007D52  01                 	db	1
   501  007D53  02                 	db	2
   502  007D54  00                 	db	0
   503  007D55  01                 	db	1
   504  007D56                     __end_of_device_dsc:
   505                           	opt stack 0
   506  007D56                     _MAC_SET_SF:
   507                           	opt stack 0
   508  007D56  72                 	db	114
   509  007D57  61                 	db	97
   510  007D58  64                 	db	100
   511  007D59  69                 	db	105
   512  007D5A  6F                 	db	111
   513  007D5B  20                 	db	32
   514  007D5C  73                 	db	115
   515  007D5D  65                 	db	101
   516  007D5E  74                 	db	116
   517  007D5F  20                 	db	32
   518  007D60  73                 	db	115
   519  007D61  66                 	db	102
   520  007D62  20                 	db	32
   521  007D63  53                 	db	83
   522  007D64  46                 	db	70
   523  007D65  00                 	db	0
   524  007D66                     __end_of_MAC_SET_SF:
   525                           	opt stack 0
   526  007D66                     _MAC_SET_CH_STATUS:
   527                           	opt stack 0
   528  007D66  73                 	db	115
   529  007D67  65                 	db	101
   530  007D68  74                 	db	116
   531  007D69  20                 	db	32
   532  007D6A  63                 	db	99
   533  007D6B  68                 	db	104
   534  007D6C  20                 	db	32
   535  007D6D  73                 	db	115
   536  007D6E  74                 	db	116
   537  007D6F  61                 	db	97
   538  007D70  74                 	db	116
   539  007D71  75                 	db	117
   540  007D72  73                 	db	115
   541  007D73  00                 	db	0
   542  007D74                     __end_of_MAC_SET_CH_STATUS:
   543                           	opt stack 0
   544  007D74                     _MAC_SET_BW:
   545                           	opt stack 0
   546  007D74  72                 	db	114
   547  007D75  61                 	db	97
   548  007D76  64                 	db	100
   549  007D77  69                 	db	105
   550  007D78  6F                 	db	111
   551  007D79  20                 	db	32
   552  007D7A  73                 	db	115
   553  007D7B  65                 	db	101
   554  007D7C  74                 	db	116
   555  007D7D  20                 	db	32
   556  007D7E  62                 	db	98
   557  007D7F  77                 	db	119
   558  007D80  00                 	db	0
   559  007D81                     __end_of_MAC_SET_BW:
   560                           	opt stack 0
   561  007D81                     _MAC_SET_APPKEY:
   562                           	opt stack 0
   563  007D81  73                 	db	115
   564  007D82  65                 	db	101
   565  007D83  74                 	db	116
   566  007D84  20                 	db	32
   567  007D85  61                 	db	97
   568  007D86  70                 	db	112
   569  007D87  70                 	db	112
   570  007D88  6B                 	db	107
   571  007D89  65                 	db	101
   572  007D8A  79                 	db	121
   573  007D8B  00                 	db	0
   574  007D8C                     __end_of_MAC_SET_APPKEY:
   575                           	opt stack 0
   576  007D8C                     _MAC_SET_APPEUI:
   577                           	opt stack 0
   578  007D8C  73                 	db	115
   579  007D8D  65                 	db	101
   580  007D8E  74                 	db	116
   581  007D8F  20                 	db	32
   582  007D90  61                 	db	97
   583  007D91  70                 	db	112
   584  007D92  70                 	db	112
   585  007D93  65                 	db	101
   586  007D94  75                 	db	117
   587  007D95  69                 	db	105
   588  007D96  00                 	db	0
   589  007D97                     __end_of_MAC_SET_APPEUI:
   590                           	opt stack 0
   591  007D97                     _MAC_SET_DEVEUI:
   592                           	opt stack 0
   593  007D97  73                 	db	115
   594  007D98  65                 	db	101
   595  007D99  74                 	db	116
   596  007D9A  20                 	db	32
   597  007D9B  64                 	db	100
   598  007D9C  65                 	db	101
   599  007D9D  76                 	db	118
   600  007D9E  65                 	db	101
   601  007D9F  75                 	db	117
   602  007DA0  69                 	db	105
   603  007DA1  00                 	db	0
   604  007DA2                     __end_of_MAC_SET_DEVEUI:
   605                           	opt stack 0
   606  007DA2                     _MAC_GET_DNCTR:
   607                           	opt stack 0
   608  007DA2  67                 	db	103
   609  007DA3  65                 	db	101
   610  007DA4  74                 	db	116
   611  007DA5  20                 	db	32
   612  007DA6  64                 	db	100
   613  007DA7  6E                 	db	110
   614  007DA8  63                 	db	99
   615  007DA9  74                 	db	116
   616  007DAA  72                 	db	114
   617  007DAB  00                 	db	0
   618  007DAC                     __end_of_MAC_GET_DNCTR:
   619                           	opt stack 0
   620  007DAC                     _MAC_JOIN_OTAA:
   621                           	opt stack 0
   622  007DAC  6A                 	db	106
   623  007DAD  6F                 	db	111
   624  007DAE  69                 	db	105
   625  007DAF  6E                 	db	110
   626  007DB0  20                 	db	32
   627  007DB1  6F                 	db	111
   628  007DB2  74                 	db	116
   629  007DB3  61                 	db	97
   630  007DB4  61                 	db	97
   631  007DB5  00                 	db	0
   632  007DB6                     __end_of_MAC_JOIN_OTAA:
   633                           	opt stack 0
   634  007DB6                     _MAC_TX_UNCNF:
   635                           	opt stack 0
   636  007DB6  74                 	db	116
   637  007DB7  78                 	db	120
   638  007DB8  20                 	db	32
   639  007DB9  75                 	db	117
   640  007DBA  6E                 	db	110
   641  007DBB  63                 	db	99
   642  007DBC  6E                 	db	110
   643  007DBD  66                 	db	102
   644  007DBE  00                 	db	0
   645  007DBF                     __end_of_MAC_TX_UNCNF:
   646                           	opt stack 0
   647  007DBF                     _MAC_GET_ADR:
   648                           	opt stack 0
   649  007DBF  67                 	db	103
   650  007DC0  65                 	db	101
   651  007DC1  74                 	db	116
   652  007DC2  20                 	db	32
   653  007DC3  61                 	db	97
   654  007DC4  64                 	db	100
   655  007DC5  72                 	db	114
   656  007DC6  00                 	db	0
   657  007DC7                     __end_of_MAC_GET_ADR:
   658                           	opt stack 0
   659  007DC7                     _MAC_SET_ADR:
   660                           	opt stack 0
   661  007DC7  73                 	db	115
   662  007DC8  65                 	db	101
   663  007DC9  74                 	db	116
   664  007DCA  20                 	db	32
   665  007DCB  61                 	db	97
   666  007DCC  64                 	db	100
   667  007DCD  72                 	db	114
   668  007DCE  00                 	db	0
   669  007DCF                     __end_of_MAC_SET_ADR:
   670                           	opt stack 0
   671  007DCF                     _MAC_SET_DR:
   672                           	opt stack 0
   673  007DCF  73                 	db	115
   674  007DD0  65                 	db	101
   675  007DD1  74                 	db	116
   676  007DD2  20                 	db	32
   677  007DD3  64                 	db	100
   678  007DD4  72                 	db	114
   679  007DD5  00                 	db	0
   680  007DD6                     __end_of_MAC_SET_DR:
   681                           	opt stack 0
   682  007DD6                     _MAC_TX_CNF:
   683                           	opt stack 0
   684  007DD6  74                 	db	116
   685  007DD7  78                 	db	120
   686  007DD8  20                 	db	32
   687  007DD9  63                 	db	99
   688  007DDA  6E                 	db	110
   689  007DDB  66                 	db	102
   690  007DDC  00                 	db	0
   691  007DDD                     __end_of_MAC_TX_CNF:
   692                           	opt stack 0
   693  007DDD                     _SYS_RESET:
   694                           	opt stack 0
   695  007DDD  72                 	db	114
   696  007DDE  65                 	db	101
   697  007DDF  73                 	db	115
   698  007DE0  65                 	db	101
   699  007DE1  74                 	db	116
   700  007DE2  00                 	db	0
   701  007DE3                     __end_of_SYS_RESET:
   702                           	opt stack 0
   703  007DE3                     _SYS:
   704                           	opt stack 0
   705  007DE3  73                 	db	115
   706  007DE4  79                 	db	121
   707  007DE5  73                 	db	115
   708  007DE6  20                 	db	32
   709  007DE7  00                 	db	0
   710  007DE8                     __end_of_SYS:
   711                           	opt stack 0
   712  007DE8                     _MAC_SAVE:
   713                           	opt stack 0
   714  007DE8  73                 	db	115
   715  007DE9  61                 	db	97
   716  007DEA  76                 	db	118
   717  007DEB  65                 	db	101
   718  007DEC  00                 	db	0
   719  007DED                     __end_of_MAC_SAVE:
   720                           	opt stack 0
   721  007DED                     _MAC:
   722                           	opt stack 0
   723  007DED  6D                 	db	109
   724  007DEE  61                 	db	97
   725  007DEF  63                 	db	99
   726  007DF0  20                 	db	32
   727  007DF1  00                 	db	0
   728  007DF2                     __end_of_MAC:
   729                           	opt stack 0
   730  007DF2                     _sd000:
   731                           	opt stack 0
   732  007DF2  04                 	db	4
   733  007DF3  03                 	db	3
   734  007DF4  0409               	dw	1033
   735  007DF6                     __end_of_sd000:
   736                           	opt stack 0
   737  007DF6                     _STATE_OFF:
   738                           	opt stack 0
   739  007DF6  6F                 	db	111
   740  007DF7  66                 	db	102
   741  007DF8  66                 	db	102
   742  007DF9  00                 	db	0
   743  007DFA                     __end_of_STATE_OFF:
   744                           	opt stack 0
   745  007DFA                     _STATE_ON:
   746                           	opt stack 0
   747  007DFA  6F                 	db	111
   748  007DFB  6E                 	db	110
   749  007DFC  00                 	db	0
   750  007DFD                     __end_of_STATE_ON:
   751                           	opt stack 0
   752  007DFD                     _get_preambleid_900:
   753                           	opt stack 0
   754  007DFD  48                 	db	72
   755  007DFE  50                 	db	80
   756  007DFF                     __end_of_get_preambleid_900:
   757                           	opt stack 0
   758  007DFF                     _set_preambleid_900:
   759                           	opt stack 0
   760  007DFF  48                 	db	72
   761  007E00  50                 	db	80
   762  007E01                     __end_of_set_preambleid_900:
   763                           	opt stack 0
   764  007E01                     _get_channelmask_900:
   765                           	opt stack 0
   766  007E01  43                 	db	67
   767  007E02  4D                 	db	77
   768  007E03                     __end_of_get_channelmask_900:
   769                           	opt stack 0
   770  007E03                     _set_channelmask_900:
   771                           	opt stack 0
   772  007E03  43                 	db	67
   773  007E04  4D                 	db	77
   774  007E05                     __end_of_set_channelmask_900:
   775                           	opt stack 0
   776  007E05                     _gs_encryption:
   777                           	opt stack 0
   778  007E05  45                 	db	69
   779  007E06  45                 	db	69
   780  007E07                     __end_of_gs_encryption:
   781                           	opt stack 0
   782  007E07                     _set_link_key:
   783                           	opt stack 0
   784  007E07  4B                 	db	75
   785  007E08  59                 	db	89
   786  007E09                     __end_of_set_link_key:
   787                           	opt stack 0
   788  007E09                     _write_values:
   789                           	opt stack 0
   790  007E09  57                 	db	87
   791  007E0A  52                 	db	82
   792  007E0B                     __end_of_write_values:
   793                           	opt stack 0
   794  007E0B                     _gs_channel:
   795                           	opt stack 0
   796  007E0B  43                 	db	67
   797  007E0C  48                 	db	72
   798  007E0D                     __end_of_gs_channel:
   799                           	opt stack 0
   800  007E0D                     _gs_pan:
   801                           	opt stack 0
   802  007E0D  49                 	db	73
   803  007E0E  44                 	db	68
   804  007E0F                     __end_of_gs_pan:
   805                           	opt stack 0
   806  007E0F                     _get_own_mac_high:
   807                           	opt stack 0
   808  007E0F  53                 	db	83
   809  007E10  48                 	db	72
   810  007E11                     __end_of_get_own_mac_high:
   811                           	opt stack 0
   812  007E11                     _get_own_mac_low:
   813                           	opt stack 0
   814  007E11  53                 	db	83
   815  007E12  4C                 	db	76
   816  007E13                     __end_of_get_own_mac_low:
   817                           	opt stack 0
   818  0000                     _EECON2	set	4007
   819  0000                     _EECON1bits	set	4006
   820  0000                     _EEDATA	set	4008
   821  0000                     _EEADR	set	4009
   822  0000                     _ADRESL	set	4035
   823  0000                     _ADRESH	set	4036
   824  0000                     _ADCON0	set	4034
   825  0000                     _ADCON2	set	4032
   826  0000                     _ADCON1	set	4033
   827  0000                     _IPR1bits	set	3999
   828  0000                     _CCP1CON	set	4029
   829  0000                     _CCPR1L	set	4030
   830  0000                     _CCPR1H	set	4031
   831  0000                     _TMR1L	set	4046
   832  0000                     _TMR1H	set	4047
   833  0000                     _T3CON	set	4017
   834  0000                     _T0CON	set	4053
   835  0000                     _T1CON	set	4045
   836  0000                     _RCREG	set	4014
   837  0000                     _RCSTA	set	4011
   838  0000                     _TXREG	set	4013
   839  0000                     _RCSTAbits	set	4011
   840  0000                     _SPBRGH	set	4016
   841  0000                     _SPBRG	set	4015
   842  0000                     _BAUDCONbits	set	4024
   843  0000                     _TXSTAbits	set	4012
   844  0000                     _TRISCbits	set	3988
   845  0000                     _LATDbits	set	3980
   846  0000                     _PORTEbits	set	3972
   847  0000                     _TRISDbits	set	3989
   848  0000                     _TRISEbits	set	3990
   849  0000                     _UEP0bits	set	3952
   850  0000                     _INTCONbits	set	4082
   851  0000                     _IPR2bits	set	4002
   852  0000                     _RCONbits	set	4048
   853  0000                     _PORTCbits	set	3970
   854  0000                     _UCON	set	3949
   855  0000                     _USTAT	set	3948
   856  0000                     _PIR2bits	set	4001
   857  0000                     _UIEbits	set	3945
   858  0000                     _UIRbits	set	3944
   859  0000                     _UADDR	set	3950
   860  0000                     _UCONbits	set	3949
   861  0000                     _UIE	set	3945
   862  0000                     _UEIE	set	3947
   863  0000                     _UCFG	set	3951
   864  0000                     _UIR	set	3944
   865  0000                     _UEIR	set	3946
   866  0000                     _PIE2bits	set	4000
   867  0000                     _PORTDbits	set	3971
   868  0000                     _UEP1	set	3953
   869  0000                     _UEP0	set	3952
   870  0000                     _GO_DONE	set	32273
   871  0000                     _ADIE	set	31982
   872  0000                     _ADIF	set	31990
   873  0000                     _ADON	set	32272
   874  0000                     _TMR0IE	set	32661
   875  0000                     _GIEH	set	32663
   876  0000                     _TMR1IE	set	31976
   877  0000                     _TXIF	set	31988
   878  0000                     _USBIE	set	32005
   879  0000                     _RCIF	set	31989
   880  0000                     _RCIE	set	31981
   881  0000                     _CCP1IE	set	31978
   882  0000                     _CCP1IF	set	31986
   883  007E13                     STR_1:
   884                           
   885                           ; BSR set to: 3
   886  007E13  72                 	db	114	;'r'
   887  007E14  65                 	db	101	;'e'
   888  007E15  73                 	db	115	;'s'
   889  007E16  70                 	db	112	;'p'
   890  007E17  6F                 	db	111	;'o'
   891  007E18  73                 	db	115	;'s'
   892  007E19  74                 	db	116	;'t'
   893  007E1A  61                 	db	97	;'a'
   894  007E1B  3A                 	db	58	;':'
   895  007E1C  20                 	db	32
   896  007E1D  25                 	db	37
   897  007E1E  32                 	db	50	;'2'
   898  007E1F  58                 	db	88	;'X'
   899  007E20  20                 	db	32
   900  007E21  25                 	db	37
   901  007E22  32                 	db	50	;'2'
   902  007E23  58                 	db	88	;'X'
   903  007E24  20                 	db	32
   904  007E25  25                 	db	37
   905  007E26  32                 	db	50	;'2'
   906  007E27  58                 	db	88	;'X'
   907  007E28  20                 	db	32
   908  007E29  25                 	db	37
   909  007E2A  32                 	db	50	;'2'
   910  007E2B  58                 	db	88	;'X'
   911  007E2C  20                 	db	32
   912  007E2D  25                 	db	37
   913  007E2E  32                 	db	50	;'2'
   914  007E2F  58                 	db	88	;'X'
   915  007E30  20                 	db	32
   916  007E31  25                 	db	37
   917  007E32  32                 	db	50	;'2'
   918  007E33  58                 	db	88	;'X'
   919  007E34  20                 	db	32
   920  007E35  25                 	db	37
   921  007E36  32                 	db	50	;'2'
   922  007E37  58                 	db	88	;'X'
   923  007E38  20                 	db	32
   924  007E39  25                 	db	37
   925  007E3A  32                 	db	50	;'2'
   926  007E3B  58                 	db	88	;'X'
   927  007E3C  20                 	db	32
   928  007E3D  25                 	db	37
   929  007E3E  32                 	db	50	;'2'
   930  007E3F  58                 	db	88	;'X'
   931  007E40  20                 	db	32
   932  007E41  25                 	db	37
   933  007E42  32                 	db	50	;'2'
   934  007E43  58                 	db	88	;'X'
   935  007E44  20                 	db	32
   936  007E45  20                 	db	32
   937  007E46  25                 	db	37
   938  007E47  64                 	db	100	;'d'
   939  007E48  20                 	db	32
   940  007E49  20                 	db	32
   941  007E4A  25                 	db	37
   942  007E4B  64                 	db	100	;'d'
   943  007E4C  20                 	db	32
   944  007E4D  20                 	db	32
   945  007E4E  25                 	db	37
   946  007E4F  64                 	db	100	;'d'
   947  007E50  20                 	db	32
   948  007E51  20                 	db	32
   949  007E52  25                 	db	37
   950  007E53  64                 	db	100	;'d'
   951  007E54  20                 	db	32
   952  007E55  20                 	db	32
   953  007E56  25                 	db	37
   954  007E57  64                 	db	100	;'d'
   955  007E58  20                 	db	32
   956  007E59  20                 	db	32
   957  007E5A  25                 	db	37
   958  007E5B  64                 	db	100	;'d'
   959  007E5C  20                 	db	32
   960  007E5D  20                 	db	32
   961  007E5E  25                 	db	37
   962  007E5F  64                 	db	100	;'d'
   963  007E60  20                 	db	32
   964  007E61  20                 	db	32
   965  007E62  25                 	db	37
   966  007E63  64                 	db	100	;'d'
   967  007E64  20                 	db	32
   968  007E65  20                 	db	32
   969  007E66  25                 	db	37
   970  007E67  64                 	db	100	;'d'
   971  007E68  20                 	db	32
   972  007E69  20                 	db	32
   973  007E6A  25                 	db	37
   974  007E6B  64                 	db	100	;'d'
   975  007E6C  20                 	db	32
   976  007E6D  20                 	db	32
   977  007E6E  25                 	db	37
   978  007E6F  64                 	db	100	;'d'
   979  007E70  20                 	db	32
   980  007E71  20                 	db	32
   981  007E72  25                 	db	37
   982  007E73  64                 	db	100	;'d'
   983  007E74  20                 	db	32
   984  007E75  0A                 	db	10
   985  007E76  0D                 	db	13
   986  007E77  00                 	db	0
   987  007E78                     STR_24:
   988                           
   989                           ; BSR set to: 3
   990  007E78  25                 	db	37
   991  007E79  73                 	db	115	;'s'
   992  007E7A  20                 	db	32
   993  007E7B  25                 	db	37
   994  007E7C  2E                 	db	46
   995  007E7D  32                 	db	50	;'2'
   996  007E7E  78                 	db	120	;'x'
   997  007E7F  25                 	db	37
   998  007E80  2E                 	db	46
   999  007E81  32                 	db	50	;'2'
  1000  007E82  78                 	db	120	;'x'
  1001  007E83  25                 	db	37
  1002  007E84  2E                 	db	46
  1003  007E85  32                 	db	50	;'2'
  1004  007E86  78                 	db	120	;'x'
  1005  007E87  25                 	db	37
  1006  007E88  2E                 	db	46
  1007  007E89  32                 	db	50	;'2'
  1008  007E8A  78                 	db	120	;'x'
  1009  007E8B  25                 	db	37
  1010  007E8C  2E                 	db	46
  1011  007E8D  32                 	db	50	;'2'
  1012  007E8E  78                 	db	120	;'x'
  1013  007E8F  25                 	db	37
  1014  007E90  2E                 	db	46
  1015  007E91  32                 	db	50	;'2'
  1016  007E92  78                 	db	120	;'x'
  1017  007E93  25                 	db	37
  1018  007E94  2E                 	db	46
  1019  007E95  32                 	db	50	;'2'
  1020  007E96  78                 	db	120	;'x'
  1021  007E97  25                 	db	37
  1022  007E98  2E                 	db	46
  1023  007E99  32                 	db	50	;'2'
  1024  007E9A  78                 	db	120	;'x'
  1025  007E9B  25                 	db	37
  1026  007E9C  2E                 	db	46
  1027  007E9D  32                 	db	50	;'2'
  1028  007E9E  78                 	db	120	;'x'
  1029  007E9F  25                 	db	37
  1030  007EA0  2E                 	db	46
  1031  007EA1  32                 	db	50	;'2'
  1032  007EA2  78                 	db	120	;'x'
  1033  007EA3  25                 	db	37
  1034  007EA4  2E                 	db	46
  1035  007EA5  32                 	db	50	;'2'
  1036  007EA6  78                 	db	120	;'x'
  1037  007EA7  25                 	db	37
  1038  007EA8  2E                 	db	46
  1039  007EA9  32                 	db	50	;'2'
  1040  007EAA  78                 	db	120	;'x'
  1041  007EAB  25                 	db	37
  1042  007EAC  2E                 	db	46
  1043  007EAD  32                 	db	50	;'2'
  1044  007EAE  78                 	db	120	;'x'
  1045  007EAF  25                 	db	37
  1046  007EB0  2E                 	db	46
  1047  007EB1  32                 	db	50	;'2'
  1048  007EB2  78                 	db	120	;'x'
  1049  007EB3  25                 	db	37
  1050  007EB4  2E                 	db	46
  1051  007EB5  32                 	db	50	;'2'
  1052  007EB6  78                 	db	120	;'x'
  1053  007EB7  25                 	db	37
  1054  007EB8  2E                 	db	46
  1055  007EB9  32                 	db	50	;'2'
  1056  007EBA  78                 	db	120	;'x'
  1057  007EBB  00                 	db	0
  1058  007EBC                     STR_22:
  1059                           
  1060                           ; BSR set to: 3
  1061  007EBC  25                 	db	37
  1062  007EBD  73                 	db	115	;'s'
  1063  007EBE  20                 	db	32
  1064  007EBF  25                 	db	37
  1065  007EC0  2E                 	db	46
  1066  007EC1  32                 	db	50	;'2'
  1067  007EC2  78                 	db	120	;'x'
  1068  007EC3  25                 	db	37
  1069  007EC4  2E                 	db	46
  1070  007EC5  32                 	db	50	;'2'
  1071  007EC6  78                 	db	120	;'x'
  1072  007EC7  25                 	db	37
  1073  007EC8  2E                 	db	46
  1074  007EC9  32                 	db	50	;'2'
  1075  007ECA  78                 	db	120	;'x'
  1076  007ECB  25                 	db	37
  1077  007ECC  2E                 	db	46
  1078  007ECD  32                 	db	50	;'2'
  1079  007ECE  78                 	db	120	;'x'
  1080  007ECF  25                 	db	37
  1081  007ED0  2E                 	db	46
  1082  007ED1  32                 	db	50	;'2'
  1083  007ED2  78                 	db	120	;'x'
  1084  007ED3  25                 	db	37
  1085  007ED4  2E                 	db	46
  1086  007ED5  32                 	db	50	;'2'
  1087  007ED6  78                 	db	120	;'x'
  1088  007ED7  25                 	db	37
  1089  007ED8  2E                 	db	46
  1090  007ED9  32                 	db	50	;'2'
  1091  007EDA  78                 	db	120	;'x'
  1092  007EDB  25                 	db	37
  1093  007EDC  2E                 	db	46
  1094  007EDD  32                 	db	50	;'2'
  1095  007EDE  78                 	db	120	;'x'
  1096  007EDF  00                 	db	0
  1097  007EE0                     STR_11:
  1098                           
  1099                           ; BSR set to: 3
  1100  007EE0  66                 	db	102	;'f'
  1101  007EE1  72                 	db	114	;'r'
  1102  007EE2  61                 	db	97	;'a'
  1103  007EE3  6D                 	db	109	;'m'
  1104  007EE4  65                 	db	101	;'e'
  1105  007EE5  5F                 	db	95	;'_'
  1106  007EE6  63                 	db	99	;'c'
  1107  007EE7  6F                 	db	111	;'o'
  1108  007EE8  75                 	db	117	;'u'
  1109  007EE9  6E                 	db	110	;'n'
  1110  007EEA  74                 	db	116	;'t'
  1111  007EEB  65                 	db	101	;'e'
  1112  007EEC  72                 	db	114	;'r'
  1113  007EED  5F                 	db	95	;'_'
  1114  007EEE  65                 	db	101	;'e'
  1115  007EEF  72                 	db	114	;'r'
  1116  007EF0  72                 	db	114	;'r'
  1117  007EF1  5F                 	db	95	;'_'
  1118  007EF2  72                 	db	114	;'r'
  1119  007EF3  65                 	db	101	;'e'
  1120  007EF4  6A                 	db	106	;'j'
  1121  007EF5  6F                 	db	111	;'o'
  1122  007EF6  69                 	db	105	;'i'
  1123  007EF7  6E                 	db	110	;'n'
  1124  007EF8  5F                 	db	95	;'_'
  1125  007EF9  6E                 	db	110	;'n'
  1126  007EFA  65                 	db	101	;'e'
  1127  007EFB  65                 	db	101	;'e'
  1128  007EFC  64                 	db	100	;'d'
  1129  007EFD  65                 	db	101	;'e'
  1130  007EFE  64                 	db	100	;'d'
  1131  007EFF  00                 	db	0
  1132  007F00                     STR_37:
  1133                           
  1134                           ; BSR set to: 3
  1135  007F00  30                 	db	48	;'0'
  1136  007F01  31                 	db	49	;'1'
  1137  007F02  32                 	db	50	;'2'
  1138  007F03  33                 	db	51	;'3'
  1139  007F04  34                 	db	52	;'4'
  1140  007F05  35                 	db	53	;'5'
  1141  007F06  36                 	db	54	;'6'
  1142  007F07  37                 	db	55	;'7'
  1143  007F08  38                 	db	56	;'8'
  1144  007F09  39                 	db	57	;'9'
  1145  007F0A  41                 	db	65	;'A'
  1146  007F0B  42                 	db	66	;'B'
  1147  007F0C  43                 	db	67	;'C'
  1148  007F0D  44                 	db	68	;'D'
  1149  007F0E  45                 	db	69	;'E'
  1150  007F0F  46                 	db	70	;'F'
  1151  007F10  00                 	db	0
  1152  007F11                     STR_38:
  1153                           
  1154                           ; BSR set to: 3
  1155  007F11  30                 	db	48	;'0'
  1156  007F12  31                 	db	49	;'1'
  1157  007F13  32                 	db	50	;'2'
  1158  007F14  33                 	db	51	;'3'
  1159  007F15  34                 	db	52	;'4'
  1160  007F16  35                 	db	53	;'5'
  1161  007F17  36                 	db	54	;'6'
  1162  007F18  37                 	db	55	;'7'
  1163  007F19  38                 	db	56	;'8'
  1164  007F1A  39                 	db	57	;'9'
  1165  007F1B  61                 	db	97	;'a'
  1166  007F1C  62                 	db	98	;'b'
  1167  007F1D  63                 	db	99	;'c'
  1168  007F1E  64                 	db	100	;'d'
  1169  007F1F  65                 	db	101	;'e'
  1170  007F20  66                 	db	102	;'f'
  1171  007F21  00                 	db	0
  1172  007F22                     STR_14:
  1173                           
  1174                           ; BSR set to: 3
  1175  007F22  69                 	db	105	;'i'
  1176  007F23  6E                 	db	110	;'n'
  1177  007F24  76                 	db	118	;'v'
  1178  007F25  61                 	db	97	;'a'
  1179  007F26  6C                 	db	108	;'l'
  1180  007F27  69                 	db	105	;'i'
  1181  007F28  64                 	db	100	;'d'
  1182  007F29  5F                 	db	95	;'_'
  1183  007F2A  64                 	db	100	;'d'
  1184  007F2B  61                 	db	97	;'a'
  1185  007F2C  74                 	db	116	;'t'
  1186  007F2D  61                 	db	97	;'a'
  1187  007F2E  5F                 	db	95	;'_'
  1188  007F2F  6C                 	db	108	;'l'
  1189  007F30  65                 	db	101	;'e'
  1190  007F31  6E                 	db	110	;'n'
  1191  007F32  00                 	db	0
  1192  007F33                     STR_20:
  1193                           
  1194                           ; BSR set to: 3
  1195  007F33  61                 	db	97	;'a'
  1196  007F34  63                 	db	99	;'c'
  1197  007F35  63                 	db	99	;'c'
  1198  007F36  65                 	db	101	;'e'
  1199  007F37  70                 	db	112	;'p'
  1200  007F38  74                 	db	116	;'t'
  1201  007F39  65                 	db	101	;'e'
  1202  007F3A  64                 	db	100	;'d'
  1203  007F3B  52                 	db	82	;'R'
  1204  007F3C  4E                 	db	78	;'N'
  1205  007F3D  32                 	db	50	;'2'
  1206  007F3E  39                 	db	57	;'9'
  1207  007F3F  30                 	db	48	;'0'
  1208  007F40  33                 	db	51	;'3'
  1209  007F41  20                 	db	32
  1210  007F42  00                 	db	0
  1211  007F43                     STR_7:
  1212                           
  1213                           ; BSR set to: 3
  1214  007F43  69                 	db	105	;'i'
  1215  007F44  6E                 	db	110	;'n'
  1216  007F45  76                 	db	118	;'v'
  1217  007F46  61                 	db	97	;'a'
  1218  007F47  6C                 	db	108	;'l'
  1219  007F48  69                 	db	105	;'i'
  1220  007F49  64                 	db	100	;'d'
  1221  007F4A  5F                 	db	95	;'_'
  1222  007F4B  70                 	db	112	;'p'
  1223  007F4C  61                 	db	97	;'a'
  1224  007F4D  72                 	db	114	;'r'
  1225  007F4E  61                 	db	97	;'a'
  1226  007F4F  6D                 	db	109	;'m'
  1227  007F50  00                 	db	0
  1228  007F51                     STR_18:
  1229                           
  1230                           ; BSR set to: 3
  1231  007F51  6B                 	db	107	;'k'
  1232  007F52  65                 	db	101	;'e'
  1233  007F53  79                 	db	121	;'y'
  1234  007F54  73                 	db	115	;'s'
  1235  007F55  5F                 	db	95	;'_'
  1236  007F56  6E                 	db	110	;'n'
  1237  007F57  6F                 	db	111	;'o'
  1238  007F58  74                 	db	116	;'t'
  1239  007F59  5F                 	db	95	;'_'
  1240  007F5A  69                 	db	105	;'i'
  1241  007F5B  6E                 	db	110	;'n'
  1242  007F5C  69                 	db	105	;'i'
  1243  007F5D  74                 	db	116	;'t'
  1244  007F5E  00                 	db	0
  1245  007F5F                     STR_8:
  1246                           
  1247                           ; BSR set to: 3
  1248  007F5F  6E                 	db	110	;'n'
  1249  007F60  6F                 	db	111	;'o'
  1250  007F61  74                 	db	116	;'t'
  1251  007F62  5F                 	db	95	;'_'
  1252  007F63  6A                 	db	106	;'j'
  1253  007F64  6F                 	db	111	;'o'
  1254  007F65  69                 	db	105	;'i'
  1255  007F66  6E                 	db	110	;'n'
  1256  007F67  65                 	db	101	;'e'
  1257  007F68  64                 	db	100	;'d'
  1258  007F69  00                 	db	0
  1259  007F6A                     STR_13:
  1260                           
  1261                           ; BSR set to: 3
  1262  007F6A  6D                 	db	109	;'m'
  1263  007F6B  61                 	db	97	;'a'
  1264  007F6C  63                 	db	99	;'c'
  1265  007F6D  5F                 	db	95	;'_'
  1266  007F6E  70                 	db	112	;'p'
  1267  007F6F  61                 	db	97	;'a'
  1268  007F70  75                 	db	117	;'u'
  1269  007F71  73                 	db	115	;'s'
  1270  007F72  65                 	db	101	;'e'
  1271  007F73  64                 	db	100	;'d'
  1272  007F74  00                 	db	0
  1273  007F75                     STR_9:
  1274                           
  1275                           ; BSR set to: 3
  1276  007F75  6E                 	db	110	;'n'
  1277  007F76  6F                 	db	111	;'o'
  1278  007F77  5F                 	db	95	;'_'
  1279  007F78  66                 	db	102	;'f'
  1280  007F79  72                 	db	114	;'r'
  1281  007F7A  65                 	db	101	;'e'
  1282  007F7B  65                 	db	101	;'e'
  1283  007F7C  5F                 	db	95	;'_'
  1284  007F7D  63                 	db	99	;'c'
  1285  007F7E  68                 	db	104	;'h'
  1286  007F7F  00                 	db	0
  1287  007F80                     STR_26:
  1288                           
  1289                           ; BSR set to: 3
  1290  007F80  25                 	db	37
  1291  007F81  73                 	db	115	;'s'
  1292  007F82  20                 	db	32
  1293  007F83  25                 	db	37
  1294  007F84  64                 	db	100	;'d'
  1295  007F85  20                 	db	32
  1296  007F86  6F                 	db	111	;'o'
  1297  007F87  66                 	db	102	;'f'
  1298  007F88  66                 	db	102	;'f'
  1299  007F89  00                 	db	0
  1300  007F8A                     STR_15:
  1301                           
  1302                           ; BSR set to: 3
  1303  007F8A  6D                 	db	109	;'m'
  1304  007F8B  61                 	db	97	;'a'
  1305  007F8C  63                 	db	99	;'c'
  1306  007F8D  5F                 	db	95	;'_'
  1307  007F8E  74                 	db	116	;'t'
  1308  007F8F  78                 	db	120	;'x'
  1309  007F90  5F                 	db	95	;'_'
  1310  007F91  6F                 	db	111	;'o'
  1311  007F92  6B                 	db	107	;'k'
  1312  007F93  00                 	db	0
  1313  007F94                     STR_25:
  1314                           
  1315                           ; BSR set to: 3
  1316  007F94  25                 	db	37
  1317  007F95  73                 	db	115	;'s'
  1318  007F96  20                 	db	32
  1319  007F97  25                 	db	37
  1320  007F98  64                 	db	100	;'d'
  1321  007F99  20                 	db	32
  1322  007F9A  6F                 	db	111	;'o'
  1323  007F9B  6E                 	db	110	;'n'
  1324  007F9C  00                 	db	0
  1325  007F9D                     STR_16:
  1326                           
  1327                           ; BSR set to: 3
  1328  007F9D  6D                 	db	109	;'m'
  1329  007F9E  61                 	db	97	;'a'
  1330  007F9F  63                 	db	99	;'c'
  1331  007FA0  5F                 	db	95	;'_'
  1332  007FA1  72                 	db	114	;'r'
  1333  007FA2  78                 	db	120	;'x'
  1334  007FA3  20                 	db	32
  1335  007FA4  00                 	db	0
  1336  007FA5                     STR_17:
  1337                           
  1338                           ; BSR set to: 3
  1339  007FA5  6D                 	db	109	;'m'
  1340  007FA6  61                 	db	97	;'a'
  1341  007FA7  63                 	db	99	;'c'
  1342  007FA8  5F                 	db	95	;'_'
  1343  007FA9  65                 	db	101	;'e'
  1344  007FAA  72                 	db	114	;'r'
  1345  007FAB  72                 	db	114	;'r'
  1346  007FAC  00                 	db	0
  1347  007FAD                     
  1348                           ; BSR set to: 3
  1349  007FAD  25                 	db	37
  1350  007FAE  73                 	db	115	;'s'
  1351  007FAF  3A                 	db	58	;':'
  1352  007FB0  25                 	db	37
  1353  007FB1  6C                 	db	108	;'l'
  1354  007FB2  75                 	db	117	;'u'
  1355  007FB3  23                 	db	35
  1356  007FB4  00                 	db	0
  1357  007FB5                     STR_36:
  1358                           
  1359                           ; BSR set to: 3
  1360  007FB5  28                 	db	40
  1361  007FB6  6E                 	db	110	;'n'
  1362  007FB7  75                 	db	117	;'u'
  1363  007FB8  6C                 	db	108	;'l'
  1364  007FB9  6C                 	db	108	;'l'
  1365  007FBA  29                 	db	41
  1366  007FBB  00                 	db	0
  1367  007FBC                     STR_33:
  1368                           
  1369                           ; BSR set to: 3
  1370  007FBC  25                 	db	37
  1371  007FBD  73                 	db	115	;'s'
  1372  007FBE  20                 	db	32
  1373  007FBF  25                 	db	37
  1374  007FC0  64                 	db	100	;'d'
  1375  007FC1  20                 	db	32
  1376  007FC2  00                 	db	0
  1377  007FC3                     STR_19:
  1378                           
  1379                           ; BSR set to: 3
  1380  007FC3  64                 	db	100	;'d'
  1381  007FC4  65                 	db	101	;'e'
  1382  007FC5  6E                 	db	110	;'n'
  1383  007FC6  69                 	db	105	;'i'
  1384  007FC7  65                 	db	101	;'e'
  1385  007FC8  64                 	db	100	;'d'
  1386  007FC9  00                 	db	0
  1387  007FCA                     STR_10:
  1388                           
  1389                           ; BSR set to: 3
  1390  007FCA  73                 	db	115	;'s'
  1391  007FCB  69                 	db	105	;'i'
  1392  007FCC  6C                 	db	108	;'l'
  1393  007FCD  65                 	db	101	;'e'
  1394  007FCE  6E                 	db	110	;'n'
  1395  007FCF  74                 	db	116	;'t'
  1396  007FD0  00                 	db	0
  1397  007FD1                     
  1398                           ; BSR set to: 3
  1399  007FD1  25                 	db	37
  1400  007FD2  73                 	db	115	;'s'
  1401  007FD3  3A                 	db	58	;':'
  1402  007FD4  25                 	db	37
  1403  007FD5  66                 	db	102	;'f'
  1404  007FD6  23                 	db	35
  1405  007FD7  00                 	db	0
  1406  007FD8                     
  1407                           ; BSR set to: 3
  1408  007FD8  25                 	db	37
  1409  007FD9  73                 	db	115	;'s'
  1410  007FDA  3A                 	db	58	;':'
  1411  007FDB  25                 	db	37
  1412  007FDC  73                 	db	115	;'s'
  1413  007FDD  23                 	db	35
  1414  007FDE  00                 	db	0
  1415  007FDF                     STR_31:
  1416                           
  1417                           ; BSR set to: 3
  1418  007FDF  25                 	db	37
  1419  007FE0  73                 	db	115	;'s'
  1420  007FE1  20                 	db	32
  1421  007FE2  25                 	db	37
  1422  007FE3  64                 	db	100	;'d'
  1423  007FE4  00                 	db	0
  1424  007FE5                     STR_27:
  1425                           
  1426                           ; BSR set to: 3
  1427  007FE5  25                 	db	37
  1428  007FE6  73                 	db	115	;'s'
  1429  007FE7  20                 	db	32
  1430  007FE8  25                 	db	37
  1431  007FE9  73                 	db	115	;'s'
  1432  007FEA  00                 	db	0
  1433  007FEB                     STR_35:
  1434                           
  1435                           ; BSR set to: 3
  1436  007FEB  25                 	db	37
  1437  007FEC  30                 	db	48	;'0'
  1438  007FED  32                 	db	50	;'2'
  1439  007FEE  58                 	db	88	;'X'
  1440  007FEF  00                 	db	0
  1441  007FF0                     STR_30:
  1442                           
  1443                           ; BSR set to: 3
  1444  007FF0  25                 	db	37
  1445  007FF1  73                 	db	115	;'s'
  1446  007FF2  25                 	db	37
  1447  007FF3  64                 	db	100	;'d'
  1448  007FF4  00                 	db	0
  1449  007FF5                     STR_12:
  1450                           
  1451                           ; BSR set to: 3
  1452  007FF5  62                 	db	98	;'b'
  1453  007FF6  75                 	db	117	;'u'
  1454  007FF7  73                 	db	115	;'s'
  1455  007FF8  79                 	db	121	;'y'
  1456  007FF9  00                 	db	0
  1457  007FFA                     
  1458                           ; BSR set to: 3
  1459  007FFA  25                 	db	37
  1460  007FFB  78                 	db	120	;'x'
  1461  007FFC  25                 	db	37
  1462  007FFD  78                 	db	120	;'x'
  1463  007FFE  00                 	db	0
  1464  0000                     
  1465                           ; #config settings
  1466  007FFF  00                 	db	0	; dummy byte at the end
  1467  0000                     
  1468                           	psect	cinit
  1469  00446A                     __pcinit:
  1470                           	opt stack 0
  1471  00446A                     start_initialization:
  1472                           	opt stack 0
  1473  00446A                     __initialization:
  1474                           	opt stack 0
  1475                           
  1476                           ; Initialize objects allocated to BANK3 (30 bytes)
  1477                           ; load TBLPTR registers with __pidataBANK3
  1478  00446A  0E9E               	movlw	low __pidataBANK3
  1479  00446C  6EF6               	movwf	tblptrl,c
  1480  00446E  0E56               	movlw	high __pidataBANK3
  1481  004470  6EF7               	movwf	tblptrh,c
  1482  004472  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1483  004474  6EF8               	movwf	tblptru,c
  1484  004476  EE03  F0C5         	lfsr	0,__pdataBANK3
  1485  00447A  EE10 F01E          	lfsr	1,30
  1486  00447E                     copy_data0:
  1487  00447E  0009               	tblrd		*+
  1488  004480  CFF5 FFEE          	movff	tablat,postinc0
  1489  004484  50E5               	movf	postdec1,w,c
  1490  004486  50E1               	movf	fsr1l,w,c
  1491  004488  E1FA               	bnz	copy_data0
  1492                           
  1493                           ; Initialize objects allocated to BANK2 (1 bytes)
  1494                           ; load TBLPTR registers with __pidataBANK2
  1495  00448A  0E12               	movlw	low __pidataBANK2
  1496  00448C  6EF6               	movwf	tblptrl,c
  1497  00448E  0E57               	movlw	high __pidataBANK2
  1498  004490  6EF7               	movwf	tblptrh,c
  1499  004492  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1500  004494  6EF8               	movwf	tblptru,c
  1501  004496  0009               	tblrd		*+	;fetch initializer
  1502  004498  CFF5 F2FE          	movff	tablat,__pdataBANK2
  1503                           
  1504                           ; Clear objects allocated to BANK7 (200 bytes)
  1505  00449C  EE07  F000         	lfsr	0,__pbssBANK7
  1506  0044A0  0EC8               	movlw	200
  1507  0044A2                     clear_0:
  1508  0044A2  6AEE               	clrf	postinc0,c
  1509  0044A4  06E8               	decf	wreg,f,c
  1510  0044A6  E1FD               	bnz	clear_0
  1511                           
  1512                           ; Clear objects allocated to BANK6 (200 bytes)
  1513  0044A8  EE06  F000         	lfsr	0,__pbssBANK6
  1514  0044AC  0EC8               	movlw	200
  1515  0044AE                     clear_1:
  1516  0044AE  6AEE               	clrf	postinc0,c
  1517  0044B0  06E8               	decf	wreg,f,c
  1518  0044B2  E1FD               	bnz	clear_1
  1519                           
  1520                           ; Clear objects allocated to BANK3 (197 bytes)
  1521  0044B4  EE03  F000         	lfsr	0,__pbssBANK3
  1522  0044B8  0EC5               	movlw	197
  1523  0044BA                     clear_2:
  1524  0044BA  6AEE               	clrf	postinc0,c
  1525  0044BC  06E8               	decf	wreg,f,c
  1526  0044BE  E1FD               	bnz	clear_2
  1527                           
  1528                           ; Clear objects allocated to BANK2 (54 bytes)
  1529  0044C0  EE02  F0C8         	lfsr	0,__pbssBANK2
  1530  0044C4  0E36               	movlw	54
  1531  0044C6                     clear_3:
  1532  0044C6  6AEE               	clrf	postinc0,c
  1533  0044C8  06E8               	decf	wreg,f,c
  1534  0044CA  E1FD               	bnz	clear_3
  1535                           
  1536                           ; Clear objects allocated to BANK1 (17 bytes)
  1537  0044CC  EE01  F0EF         	lfsr	0,__pbssBANK1
  1538  0044D0  0E11               	movlw	17
  1539  0044D2                     clear_4:
  1540  0044D2  6AEE               	clrf	postinc0,c
  1541  0044D4  06E8               	decf	wreg,f,c
  1542  0044D6  E1FD               	bnz	clear_4
  1543                           
  1544                           ; Clear objects allocated to BANK4 (100 bytes)
  1545  0044D8  EE04  F040         	lfsr	0,__pbssBANK4
  1546  0044DC  0E64               	movlw	100
  1547  0044DE                     clear_5:
  1548  0044DE  6AEE               	clrf	postinc0,c
  1549  0044E0  06E8               	decf	wreg,f,c
  1550  0044E2  E1FD               	bnz	clear_5
  1551                           
  1552                           ; Clear objects allocated to BANK5 (100 bytes)
  1553  0044E4  EE05  F080         	lfsr	0,__pbssBANK5
  1554  0044E8  0E64               	movlw	100
  1555  0044EA                     clear_6:
  1556  0044EA  6AEE               	clrf	postinc0,c
  1557  0044EC  06E8               	decf	wreg,f,c
  1558  0044EE  E1FD               	bnz	clear_6
  1559                           
  1560                           ; Clear objects allocated to COMRAM (39 bytes)
  1561  0044F0  EE00  F038         	lfsr	0,__pbssCOMRAM
  1562  0044F4  0E27               	movlw	39
  1563  0044F6                     clear_7:
  1564  0044F6  6AEE               	clrf	postinc0,c
  1565  0044F8  06E8               	decf	wreg,f,c
  1566  0044FA  E1FD               	bnz	clear_7
  1567  0044FC                     end_of_initialization:
  1568                           	opt stack 0
  1569  0044FC                     __end_of__initialization:
  1570                           	opt stack 0
  1571  0044FC  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1572  0044FE  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1573  004500  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1574  004502  6EF8               	movwf	tblptru,c
  1575  004504  0100               	movlb	0
  1576  004506  EF08  F007         	goto	_main	;jump to C main() function
  1577                           tblptru	equ	0xFF8
  1578                           tblptrh	equ	0xFF7
  1579                           tblptrl	equ	0xFF6
  1580                           tablat	equ	0xFF5
  1581                           postinc0	equ	0xFEE
  1582                           wreg	equ	0xFE8
  1583                           postdec1	equ	0xFE5
  1584                           fsr1l	equ	0xFE1
  1585                           
  1586                           	psect	bssCOMRAM
  1587  000038                     __pbssCOMRAM:
  1588                           	opt stack 0
  1589  000038                     _outPipes:
  1590                           	opt stack 0
  1591  000038                     	ds	8
  1592  000040                     _inPipes:
  1593                           	opt stack 0
  1594  000040                     	ds	6
  1595  000046                     _pBDTEntryIn:
  1596                           	opt stack 0
  1597  000046                     	ds	6
  1598  00004C                     recebeByte@sizeData:
  1599                           	opt stack 0
  1600  00004C                     	ds	2
  1601  00004E                     _pBDTEntryEP0OutNext:
  1602                           	opt stack 0
  1603  00004E                     	ds	2
  1604  000050                     _pBDTEntryEP0OutCurrent:
  1605                           	opt stack 0
  1606  000050                     	ds	2
  1607  000052                     _cdc_tx_len:
  1608                           	opt stack 0
  1609  000052                     	ds	1
  1610  000053                     _USBDeferStatusStagePacket:
  1611                           	opt stack 0
  1612  000053                     	ds	1
  1613  000054                     _USBStatusStageTimeoutCounter:
  1614                           	opt stack 0
  1615  000054                     	ds	1
  1616  000055                     _endpoint_number:
  1617                           	opt stack 0
  1618  000055                     	ds	1
  1619  000056                     _controlTransferState:
  1620                           	opt stack 0
  1621  000056                     	ds	1
  1622  000057                     _shortPacketStatus:
  1623                           	opt stack 0
  1624  000057                     	ds	1
  1625  000058                     _USBDeviceState:
  1626                           	opt stack 0
  1627  000058                     	ds	1
  1628  000059                     _novaMsgLoRaWan:
  1629                           	opt stack 0
  1630  000059                     	ds	1
  1631  00005A                     _tamFrame:
  1632                           	opt stack 0
  1633  00005A                     	ds	1
  1634  00005B                     _tamDadosRecebidos:
  1635                           	opt stack 0
  1636  00005B                     	ds	1
  1637  00005C                     _command:
  1638                           	opt stack 0
  1639  00005C                     	ds	1
  1640  00005D                     _USTATcopy:
  1641                           	opt stack 0
  1642  00005D                     	ds	1
  1643  00005E                     _USBActiveConfiguration:
  1644                           	opt stack 0
  1645  00005E                     	ds	1
  1646                           tblptru	equ	0xFF8
  1647                           tblptrh	equ	0xFF7
  1648                           tblptrl	equ	0xFF6
  1649                           tablat	equ	0xFF5
  1650                           postinc0	equ	0xFEE
  1651                           wreg	equ	0xFE8
  1652                           postdec1	equ	0xFE5
  1653                           fsr1l	equ	0xFE1
  1654                           
  1655                           	psect	bssBANK1
  1656  0001EF                     __pbssBANK1:
  1657                           	opt stack 0
  1658  0001EF                     _tamanhoCommand:
  1659                           	opt stack 0
  1660  0001EF                     	ds	2
  1661  0001F1                     recebeByte@tamanhoMensagem:
  1662                           	opt stack 0
  1663  0001F1                     	ds	2
  1664  0001F3                     _CDCDataOutHandle:
  1665                           	opt stack 0
  1666  0001F3                     	ds	2
  1667  0001F5                     recebeByte@escapeCaracter:
  1668                           	opt stack 0
  1669  0001F5                     	ds	1
  1670  0001F6                     _cdc_rx_len:
  1671                           	opt stack 0
  1672  0001F6                     	ds	1
  1673  0001F7                     _USBStatusStageEnabledFlag1:
  1674                           	opt stack 0
  1675  0001F7                     	ds	1
  1676  0001F8                     _BothEP0OutUOWNsSet:
  1677                           	opt stack 0
  1678  0001F8                     	ds	1
  1679  0001F9                     _USBBusIsSuspended:
  1680                           	opt stack 0
  1681  0001F9                     	ds	1
  1682  0001FA                     _RemoteWakeup:
  1683                           	opt stack 0
  1684  0001FA                     	ds	1
  1685  0001FB                     _pulsos4:
  1686                           	opt stack 0
  1687  0001FB                     	ds	1
  1688  0001FC                     _pulsos3:
  1689                           	opt stack 0
  1690  0001FC                     	ds	1
  1691  0001FD                     _pulsos2:
  1692                           	opt stack 0
  1693  0001FD                     	ds	1
  1694  0001FE                     _responseLoRaWan:
  1695                           	opt stack 0
  1696  0001FE                     	ds	1
  1697  0001FF                     _error_TX:
  1698                           	opt stack 0
  1699  0001FF                     	ds	1
  1700                           tblptru	equ	0xFF8
  1701                           tblptrh	equ	0xFF7
  1702                           tblptrl	equ	0xFF6
  1703                           tablat	equ	0xFF5
  1704                           postinc0	equ	0xFEE
  1705                           wreg	equ	0xFE8
  1706                           postdec1	equ	0xFE5
  1707                           fsr1l	equ	0xFE1
  1708                           
  1709                           	psect	bssBANK2
  1710  0002C8                     __pbssBANK2:
  1711                           	opt stack 0
  1712  0002C8                     _pBDTEntryOut:
  1713                           	opt stack 0
  1714  0002C8                     	ds	6
  1715  0002CE                     _USB1msTickCount:
  1716                           	opt stack 0
  1717  0002CE                     	ds	4
  1718  0002D2                     _ep_data_out:
  1719                           	opt stack 0
  1720  0002D2                     	ds	3
  1721  0002D5                     _ep_data_in:
  1722                           	opt stack 0
  1723  0002D5                     	ds	3
  1724  0002D8                     _CDCDataInHandle:
  1725                           	opt stack 0
  1726  0002D8                     	ds	2
  1727  0002DA                     _dig_3:
  1728                           	opt stack 0
  1729  0002DA                     	ds	2
  1730  0002DC                     _dig_2:
  1731                           	opt stack 0
  1732  0002DC                     	ds	2
  1733  0002DE                     _dig_1:
  1734                           	opt stack 0
  1735  0002DE                     	ds	2
  1736  0002E0                     _cs:
  1737                           	opt stack 0
  1738  0002E0                     	ds	1
  1739  0002E1                     recebeByte@checksumRecebimento:
  1740                           	opt stack 0
  1741  0002E1                     	ds	1
  1742  0002E2                     recebeByte@estadoRecepcao:
  1743                           	opt stack 0
  1744  0002E2                     	ds	1
  1745  0002E3                     _control_signal_bitmap:
  1746                           	opt stack 0
  1747  0002E3                     	ds	1
  1748  0002E4                     _cdc_mem_type:
  1749                           	opt stack 0
  1750  0002E4                     	ds	1
  1751  0002E5                     _cdc_trf_state:
  1752                           	opt stack 0
  1753  0002E5                     	ds	1
  1754  0002E6                     _USBTicksSinceSuspendEnd:
  1755                           	opt stack 0
  1756  0002E6                     	ds	1
  1757  0002E7                     _USBDeferOUTDataStagePackets:
  1758                           	opt stack 0
  1759  0002E7                     	ds	1
  1760  0002E8                     _USBDeferINDataStagePackets:
  1761                           	opt stack 0
  1762  0002E8                     	ds	1
  1763  0002E9                     _USBStatusStageEnabledFlag2:
  1764                           	opt stack 0
  1765  0002E9                     	ds	1
  1766  0002EA                     _pulsos1:
  1767                           	opt stack 0
  1768  0002EA                     	ds	1
  1769  0002EB                     _nivel2:
  1770                           	opt stack 0
  1771  0002EB                     	ds	1
  1772  0002EC                     _nivel1:
  1773                           	opt stack 0
  1774  0002EC                     	ds	1
  1775  0002ED                     _teste1:
  1776                           	opt stack 0
  1777  0002ED                     	ds	1
  1778  0002EE                     _teste0:
  1779                           	opt stack 0
  1780  0002EE                     	ds	1
  1781  0002EF                     _feedback2:
  1782                           	opt stack 0
  1783  0002EF                     	ds	1
  1784  0002F0                     _feedback1:
  1785                           	opt stack 0
  1786  0002F0                     	ds	1
  1787  0002F1                     _numPacote:
  1788                           	opt stack 0
  1789  0002F1                     	ds	1
  1790  0002F2                     _aaa:
  1791                           	opt stack 0
  1792  0002F2                     	ds	1
  1793  0002F3                     _encryptMode:
  1794                           	opt stack 0
  1795  0002F3                     	ds	1
  1796  0002F4                     _retries_sending:
  1797                           	opt stack 0
  1798  0002F4                     	ds	1
  1799  0002F5                     _discovery_status:
  1800                           	opt stack 0
  1801  0002F5                     	ds	1
  1802  0002F6                     _delivery_status:
  1803                           	opt stack 0
  1804  0002F6                     	ds	1
  1805  0002F7                     _channel:
  1806                           	opt stack 0
  1807  0002F7                     	ds	1
  1808  0002F8                     _error_RX:
  1809                           	opt stack 0
  1810  0002F8                     	ds	1
  1811  0002F9                     _protocol:
  1812                           	opt stack 0
  1813  0002F9                     	ds	1
  1814  0002FA                     _error_AT:
  1815                           	opt stack 0
  1816  0002FA                     	ds	1
  1817  0002FB                     __preambleID:
  1818                           	opt stack 0
  1819  0002FB                     	ds	1
  1820  0002FC                     _USBAlternateInterface:
  1821                           	opt stack 0
  1822  0002FC                     	ds	2
  1823                           tblptru	equ	0xFF8
  1824                           tblptrh	equ	0xFF7
  1825                           tblptrl	equ	0xFF6
  1826                           tablat	equ	0xFF5
  1827                           postinc0	equ	0xFEE
  1828                           wreg	equ	0xFE8
  1829                           postdec1	equ	0xFE5
  1830                           fsr1l	equ	0xFE1
  1831                           
  1832                           	psect	dataBANK2
  1833  0002FE                     __pdataBANK2:
  1834                           	opt stack 0
  1835  0002FE                     __send_retries:
  1836                           	opt stack 0
  1837  0002FE                     	ds	1
  1838                           tblptru	equ	0xFF8
  1839                           tblptrh	equ	0xFF7
  1840                           tblptrl	equ	0xFF6
  1841                           tablat	equ	0xFF5
  1842                           postinc0	equ	0xFEE
  1843                           wreg	equ	0xFE8
  1844                           postdec1	equ	0xFE5
  1845                           fsr1l	equ	0xFE1
  1846                           
  1847                           	psect	bssBANK3
  1848  000300                     __pbssBANK3:
  1849                           	opt stack 0
  1850  000300                     _dadosRecebidos:
  1851                           	opt stack 0
  1852  000300                     	ds	20
  1853  000314                     _cdc_notice:
  1854                           	opt stack 0
  1855  000314                     	ds	10
  1856  00031E                     __channelMask:
  1857                           	opt stack 0
  1858  00031E                     	ds	8
  1859  000326                     _BaudRateGen:
  1860                           	opt stack 0
  1861  000326                     	ds	4
  1862  00032A                     _ticks:
  1863                           	opt stack 0
  1864  00032A                     	ds	4
  1865  00032E                     _freqPulses4:
  1866                           	opt stack 0
  1867  00032E                     	ds	4
  1868  000332                     _freqPulses3:
  1869                           	opt stack 0
  1870  000332                     	ds	4
  1871  000336                     _freqPulses2:
  1872                           	opt stack 0
  1873  000336                     	ds	4
  1874  00033A                     _freqPulses1:
  1875                           	opt stack 0
  1876  00033A                     	ds	4
  1877  00033E                     _sourceMacHigh:
  1878                           	opt stack 0
  1879  00033E                     	ds	4
  1880  000342                     _sourceMacLow:
  1881                           	opt stack 0
  1882  000342                     	ds	4
  1883  000346                     _pCDCDst:
  1884                           	opt stack 0
  1885  000346                     	ds	3
  1886  000349                     _pCDCSrc:
  1887                           	opt stack 0
  1888  000349                     	ds	3
  1889  00034C                     _pDst:
  1890                           	opt stack 0
  1891  00034C                     	ds	2
  1892  00034E                     _dig_4:
  1893                           	opt stack 0
  1894  00034E                     	ds	2
  1895  000350                     _PAN_ID:
  1896                           	opt stack 0
  1897  000350                     	ds	2
  1898  000352                     _response:
  1899                           	opt stack 0
  1900  000352                     	ds	100
  1901  0003B6                     _dummy_encapsulated_cmd_response:
  1902                           	opt stack 0
  1903  0003B6                     	ds	8
  1904  0003BE                     _line_coding:
  1905                           	opt stack 0
  1906  0003BE                     	ds	7
  1907                           tblptru	equ	0xFF8
  1908                           tblptrh	equ	0xFF7
  1909                           tblptrl	equ	0xFF6
  1910                           tablat	equ	0xFF5
  1911                           postinc0	equ	0xFEE
  1912                           wreg	equ	0xFE8
  1913                           postdec1	equ	0xFE5
  1914                           fsr1l	equ	0xFE1
  1915                           
  1916                           	psect	dataBANK3
  1917  0003C5                     __pdataBANK3:
  1918                           	opt stack 0
  1919  0003C5                     _MSG_LORAWAN:
  1920                           	opt stack 0
  1921  0003C5                     	ds	30
  1922                           tblptru	equ	0xFF8
  1923                           tblptrh	equ	0xFF7
  1924                           tblptrl	equ	0xFF6
  1925                           tablat	equ	0xFF5
  1926                           postinc0	equ	0xFEE
  1927                           wreg	equ	0xFE8
  1928                           postdec1	equ	0xFE5
  1929                           fsr1l	equ	0xFE1
  1930                           
  1931                           	psect	bssBANK4
  1932  000440                     __pbssBANK4:
  1933                           	opt stack 0
  1934  000440                     recebeByteLoRaWan@frameData:
  1935                           	opt stack 0
  1936  000440                     	ds	100
  1937                           tblptru	equ	0xFF8
  1938                           tblptrh	equ	0xFF7
  1939                           tblptrl	equ	0xFF6
  1940                           tablat	equ	0xFF5
  1941                           postinc0	equ	0xFEE
  1942                           wreg	equ	0xFE8
  1943                           postdec1	equ	0xFE5
  1944                           fsr1l	equ	0xFE1
  1945                           
  1946                           	psect	bssBANK5
  1947  000580                     __pbssBANK5:
  1948                           	opt stack 0
  1949  000580                     _receivePacket:
  1950                           	opt stack 0
  1951  000580                     	ds	100
  1952                           tblptru	equ	0xFF8
  1953                           tblptrh	equ	0xFF7
  1954                           tblptrl	equ	0xFF6
  1955                           tablat	equ	0xFF5
  1956                           postinc0	equ	0xFEE
  1957                           wreg	equ	0xFE8
  1958                           postdec1	equ	0xFE5
  1959                           fsr1l	equ	0xFE1
  1960                           
  1961                           	psect	bssBANK6
  1962  000600                     __pbssBANK6:
  1963                           	opt stack 0
  1964  000600                     _data:
  1965                           	opt stack 0
  1966  000600                     	ds	100
  1967  000664                     recebeByte@frameData:
  1968                           	opt stack 0
  1969  000664                     	ds	100
  1970                           tblptru	equ	0xFF8
  1971                           tblptrh	equ	0xFF7
  1972                           tblptrl	equ	0xFF6
  1973                           tablat	equ	0xFF5
  1974                           postinc0	equ	0xFEE
  1975                           wreg	equ	0xFE8
  1976                           postdec1	equ	0xFE5
  1977                           fsr1l	equ	0xFE1
  1978                           
  1979                           	psect	bssBANK7
  1980  000700                     __pbssBANK7:
  1981                           	opt stack 0
  1982  000700                     _frameBuffer:
  1983                           	opt stack 0
  1984  000700                     	ds	200
  1985                           tblptru	equ	0xFF8
  1986                           tblptrh	equ	0xFF7
  1987                           tblptrl	equ	0xFF6
  1988                           tablat	equ	0xFF5
  1989                           postinc0	equ	0xFEE
  1990                           wreg	equ	0xFE8
  1991                           postdec1	equ	0xFE5
  1992                           fsr1l	equ	0xFE1
  1993                           
  1994                           	psect	cstackBANK2
  1995  000200                     __pcstackBANK2:
  1996                           	opt stack 0
  1997  000200                     main@data:
  1998                           	opt stack 0
  1999                           
  2000                           ; 150 bytes @ 0x0
  2001  000200                     	ds	150
  2002  000296                     main@tempo:
  2003                           	opt stack 0
  2004                           
  2005                           ; 4 bytes @ 0x96
  2006  000296                     	ds	4
  2007  00029A                     main@tempoTimeOut:
  2008                           	opt stack 0
  2009                           
  2010                           ; 4 bytes @ 0x9A
  2011  00029A                     	ds	4
  2012  00029E                     main@Icanal:
  2013                           	opt stack 0
  2014                           
  2015                           ; 1 bytes @ 0x9E
  2016  00029E                     	ds	1
  2017  00029F                     main@sf:
  2018                           	opt stack 0
  2019                           
  2020                           ; 1 bytes @ 0x9F
  2021  00029F                     	ds	1
  2022  0002A0                     main@resp:
  2023                           	opt stack 0
  2024                           
  2025                           ; 1 bytes @ 0xA0
  2026  0002A0                     	ds	1
  2027  0002A1                     main@contador:
  2028                           	opt stack 0
  2029                           
  2030                           ; 1 bytes @ 0xA1
  2031  0002A1                     	ds	1
  2032  0002A2                     main@deltaTempo:
  2033                           	opt stack 0
  2034                           
  2035                           ; 4 bytes @ 0xA2
  2036  0002A2                     	ds	4
  2037  0002A6                     _main$5888:
  2038                           	opt stack 0
  2039                           
  2040                           ; 3 bytes @ 0xA6
  2041  0002A6                     	ds	3
  2042  0002A9                     main@i:
  2043                           	opt stack 0
  2044                           
  2045                           ; 2 bytes @ 0xA9
  2046  0002A9                     	ds	2
  2047  0002AB                     main@Fcanal:
  2048                           	opt stack 0
  2049                           
  2050                           ; 1 bytes @ 0xAB
  2051  0002AB                     	ds	1
  2052  0002AC                     main@i_3325:
  2053                           	opt stack 0
  2054                           
  2055                           ; 1 bytes @ 0xAC
  2056  0002AC                     	ds	1
  2057  0002AD                     main@i_3326:
  2058                           	opt stack 0
  2059                           
  2060                           ; 1 bytes @ 0xAD
  2061  0002AD                     	ds	1
  2062  0002AE                     main@dr:
  2063                           	opt stack 0
  2064                           
  2065                           ; 1 bytes @ 0xAE
  2066  0002AE                     	ds	1
  2067  0002AF                     main@pisca:
  2068                           	opt stack 0
  2069                           
  2070                           ; 1 bytes @ 0xAF
  2071  0002AF                     	ds	1
  2072  0002B0                     main@i_3312:
  2073                           	opt stack 0
  2074                           
  2075                           ; 1 bytes @ 0xB0
  2076  0002B0                     	ds	1
  2077  0002B1                     main@i_3313:
  2078                           	opt stack 0
  2079                           
  2080                           ; 1 bytes @ 0xB1
  2081  0002B1                     	ds	1
  2082  0002B2                     main@dadoPoco:
  2083                           	opt stack 0
  2084                           
  2085                           ; 22 bytes @ 0xB2
  2086  0002B2                     	ds	22
  2087                           tblptru	equ	0xFF8
  2088                           tblptrh	equ	0xFF7
  2089                           tblptrl	equ	0xFF6
  2090                           tablat	equ	0xFF5
  2091                           postinc0	equ	0xFEE
  2092                           wreg	equ	0xFE8
  2093                           postdec1	equ	0xFE5
  2094                           fsr1l	equ	0xFE1
  2095                           
  2096                           	psect	cstackBANK1
  2097  000100                     __pcstackBANK1:
  2098                           	opt stack 0
  2099  000100                     _sprintf$5893:
  2100                           	opt stack 0
  2101                           
  2102                           ; 3 bytes @ 0x0
  2103  000100                     	ds	3
  2104  000103                     _sprintf$5101:
  2105                           	opt stack 0
  2106                           
  2107                           ; 2 bytes @ 0x3
  2108  000103                     	ds	2
  2109  000105                     sprintf@idx:
  2110                           	opt stack 0
  2111                           
  2112                           ; 1 bytes @ 0x5
  2113  000105                     	ds	1
  2114  000106                     sprintf@cp:
  2115                           	opt stack 0
  2116                           
  2117                           ; 2 bytes @ 0x6
  2118  000106                     	ds	2
  2119  000108                     sprintf@len:
  2120                           	opt stack 0
  2121                           
  2122                           ; 2 bytes @ 0x8
  2123  000108                     	ds	2
  2124  00010A                     sprintf@ap:
  2125                           	opt stack 0
  2126                           
  2127                           ; 2 bytes @ 0xA
  2128  00010A                     	ds	2
  2129  00010C                     sprintf@tmpval:
  2130                           	opt stack 0
  2131                           
  2132                           ; 4 bytes @ 0xC
  2133  00010C                     	ds	4
  2134  000110                     sprintf@exp:
  2135                           	opt stack 0
  2136                           
  2137                           ; 2 bytes @ 0x10
  2138  000110                     	ds	2
  2139  000112                     sprintf@val:
  2140                           	opt stack 0
  2141                           
  2142                           ; 4 bytes @ 0x12
  2143  000112                     	ds	4
  2144  000116                     sprintf@fval:
  2145                           	opt stack 0
  2146                           
  2147                           ; 3 bytes @ 0x16
  2148  000116                     	ds	3
  2149  000119                     sprintf@width:
  2150                           	opt stack 0
  2151                           
  2152                           ; 2 bytes @ 0x19
  2153  000119                     	ds	2
  2154  00011B                     sprintf@flag:
  2155                           	opt stack 0
  2156                           
  2157                           ; 2 bytes @ 0x1B
  2158  00011B                     	ds	2
  2159  00011D                     sprintf@prec:
  2160                           	opt stack 0
  2161                           
  2162                           ; 2 bytes @ 0x1D
  2163  00011D                     	ds	2
  2164  00011F                     sprintf@c:
  2165                           	opt stack 0
  2166                           
  2167                           ; 1 bytes @ 0x1F
  2168  00011F                     	ds	1
  2169  000120                     SetDevEUI@comando:
  2170                           	opt stack 0
  2171  000120                     SetAppEUI@comando:
  2172                           	opt stack 0
  2173  000120                     SetAppKey@comando:
  2174                           	opt stack 0
  2175  000120                     SetChannelLoRaWan@comando:
  2176                           	opt stack 0
  2177  000120                     SetAdr@comando:
  2178                           	opt stack 0
  2179  000120                     MacSave@comando:
  2180                           	opt stack 0
  2181  000120                     SetSpreadingFactor@comando:
  2182                           	opt stack 0
  2183  000120                     SetBandWidth@comando:
  2184                           	opt stack 0
  2185  000120                     DataRate@comando:
  2186                           	opt stack 0
  2187  000120                     TxLoRaWan@comando:
  2188                           	opt stack 0
  2189                           
  2190                           ; 200 bytes @ 0x20
  2191  000120                     	ds	200
  2192  0001E8                     SetDevEUI@status:
  2193                           	opt stack 0
  2194  0001E8                     SetAppEUI@status:
  2195                           	opt stack 0
  2196  0001E8                     SetAppKey@status:
  2197                           	opt stack 0
  2198  0001E8                     SetChannelLoRaWan@status:
  2199                           	opt stack 0
  2200  0001E8                     SetAdr@status:
  2201                           	opt stack 0
  2202  0001E8                     MacSave@status:
  2203                           	opt stack 0
  2204  0001E8                     SetSpreadingFactor@status:
  2205                           	opt stack 0
  2206  0001E8                     TxLoRaWan@conf:
  2207                           	opt stack 0
  2208  0001E8                     SetBandWidth@status:
  2209                           	opt stack 0
  2210  0001E8                     DataRate@status:
  2211                           	opt stack 0
  2212                           
  2213                           ; 2 bytes @ 0xE8
  2214  0001E8                     	ds	1
  2215  0001E9                     SetChannelLoRaWan@canal:
  2216                           	opt stack 0
  2217  0001E9                     SetSpreadingFactor@sf:
  2218                           	opt stack 0
  2219  0001E9                     TxLoRaWan@status:
  2220                           	opt stack 0
  2221                           
  2222                           ; 1 bytes @ 0xE9
  2223  0001E9                     	ds	1
  2224  0001EA                     TxLoRaWan@hex:
  2225                           	opt stack 0
  2226                           
  2227                           ; 4 bytes @ 0xEA
  2228  0001EA                     	ds	4
  2229  0001EE                     TxLoRaWan@i:
  2230                           	opt stack 0
  2231                           
  2232                           ; 1 bytes @ 0xEE
  2233  0001EE                     	ds	1
  2234                           tblptru	equ	0xFF8
  2235                           tblptrh	equ	0xFF7
  2236                           tblptrl	equ	0xFF6
  2237                           tablat	equ	0xFF5
  2238                           postinc0	equ	0xFEE
  2239                           wreg	equ	0xFE8
  2240                           postdec1	equ	0xFE5
  2241                           fsr1l	equ	0xFE1
  2242                           
  2243                           	psect	cstackBANK0
  2244  000060                     __pcstackBANK0:
  2245                           	opt stack 0
  2246  000060                     ??_setup_pulsos:
  2247  000060                     ??_isdigit:
  2248  000060                     ?_USBTransferOnePacket:
  2249                           	opt stack 0
  2250  000060                     ?_strlen:
  2251                           	opt stack 0
  2252  000060                     ?___awmod:
  2253                           	opt stack 0
  2254  000060                     ?___ftpack:
  2255                           	opt stack 0
  2256  000060                     ?___ftneg:
  2257                           	opt stack 0
  2258  000060                     ?_millis:
  2259                           	opt stack 0
  2260  000060                     ?__tdiv_to_l_:
  2261                           	opt stack 0
  2262  000060                     ?__div_to_l_:
  2263                           	opt stack 0
  2264  000060                     ?___lldiv:
  2265                           	opt stack 0
  2266  000060                     USBTransferOnePacket@dir:
  2267                           	opt stack 0
  2268  000060                     putch@data:
  2269                           	opt stack 0
  2270  000060                     retornaDado@dadoBit:
  2271                           	opt stack 0
  2272  000060                     putsUSBUSART@data:
  2273                           	opt stack 0
  2274  000060                     ___awmod@dividend:
  2275                           	opt stack 0
  2276  000060                     memset@p1:
  2277                           	opt stack 0
  2278  000060                     strcat@to:
  2279                           	opt stack 0
  2280  000060                     strlen@s:
  2281                           	opt stack 0
  2282  000060                     __div_to_l_@f1:
  2283                           	opt stack 0
  2284  000060                     ___ftpack@arg:
  2285                           	opt stack 0
  2286  000060                     __tdiv_to_l_@f1:
  2287                           	opt stack 0
  2288  000060                     ___ftge@ff1:
  2289                           	opt stack 0
  2290  000060                     ___ftneg@f1:
  2291                           	opt stack 0
  2292  000060                     ___lldiv@dividend:
  2293                           	opt stack 0
  2294                           
  2295                           ; 4 bytes @ 0x0
  2296  000060                     	ds	1
  2297  000061                     ??_retornaDado:
  2298  000061                     _isdigit$5327:
  2299                           	opt stack 0
  2300  000061                     USBTransferOnePacket@data:
  2301                           	opt stack 0
  2302                           
  2303                           ; 2 bytes @ 0x1
  2304  000061                     	ds	1
  2305  000062                     ??_strlen:
  2306  000062                     isdigit@c:
  2307                           	opt stack 0
  2308  000062                     putsUSBUSART@pData:
  2309                           	opt stack 0
  2310  000062                     ___awmod@divisor:
  2311                           	opt stack 0
  2312  000062                     memset@c:
  2313                           	opt stack 0
  2314  000062                     strcat@from:
  2315                           	opt stack 0
  2316                           
  2317                           ; 2 bytes @ 0x2
  2318  000062                     	ds	1
  2319  000063                     USBTransferOnePacket@len:
  2320                           	opt stack 0
  2321  000063                     retornaDado@selectDado:
  2322                           	opt stack 0
  2323  000063                     ___ftpack@exp:
  2324                           	opt stack 0
  2325  000063                     __div_to_l_@f2:
  2326                           	opt stack 0
  2327  000063                     __tdiv_to_l_@f2:
  2328                           	opt stack 0
  2329  000063                     ___ftge@ff2:
  2330                           	opt stack 0
  2331                           
  2332                           ; 3 bytes @ 0x3
  2333  000063                     	ds	1
  2334  000064                     ??_USBTransferOnePacket:
  2335  000064                     putsUSBUSART@len:
  2336                           	opt stack 0
  2337  000064                     retornaDado@dadoByte:
  2338                           	opt stack 0
  2339  000064                     ___awmod@counter:
  2340                           	opt stack 0
  2341  000064                     ___ftpack@sign:
  2342                           	opt stack 0
  2343  000064                     memset@n:
  2344                           	opt stack 0
  2345  000064                     strcat@cp:
  2346                           	opt stack 0
  2347  000064                     strlen@cp:
  2348                           	opt stack 0
  2349  000064                     millis@m:
  2350                           	opt stack 0
  2351  000064                     ___lldiv@divisor:
  2352                           	opt stack 0
  2353                           
  2354                           ; 4 bytes @ 0x4
  2355  000064                     	ds	1
  2356  000065                     ??___ftpack:
  2357  000065                     ?_le_pulsos:
  2358                           	opt stack 0
  2359  000065                     le_pulsos@modo:
  2360                           	opt stack 0
  2361  000065                     ___awmod@sign:
  2362                           	opt stack 0
  2363                           
  2364                           ; 1 bytes @ 0x5
  2365  000065                     	ds	1
  2366  000066                     ??__tdiv_to_l_:
  2367  000066                     ??___ftge:
  2368  000066                     ?___awdiv:
  2369                           	opt stack 0
  2370  000066                     ___awdiv@dividend:
  2371                           	opt stack 0
  2372  000066                     memset@p:
  2373                           	opt stack 0
  2374  000066                     __div_to_l_@quot:
  2375                           	opt stack 0
  2376                           
  2377                           ; 4 bytes @ 0x6
  2378  000066                     	ds	2
  2379  000068                     ??_parseLoRaWan:
  2380  000068                     ?___awtoft:
  2381                           	opt stack 0
  2382  000068                     ?___lltoft:
  2383                           	opt stack 0
  2384  000068                     USBDeviceInit@i:
  2385                           	opt stack 0
  2386  000068                     USBTransferOnePacket@ep:
  2387                           	opt stack 0
  2388  000068                     ___awdiv@divisor:
  2389                           	opt stack 0
  2390  000068                     ___awtoft@c:
  2391                           	opt stack 0
  2392  000068                     ___lldiv@quotient:
  2393                           	opt stack 0
  2394  000068                     ___lltoft@c:
  2395                           	opt stack 0
  2396                           
  2397                           ; 4 bytes @ 0x8
  2398  000068                     	ds	1
  2399  000069                     le_pulsos@freqPulses:
  2400                           	opt stack 0
  2401  000069                     USBTransferOnePacket@handle:
  2402                           	opt stack 0
  2403  000069                     __tdiv_to_l_@quot:
  2404                           	opt stack 0
  2405                           
  2406                           ; 4 bytes @ 0x9
  2407  000069                     	ds	1
  2408  00006A                     ___awdiv@counter:
  2409                           	opt stack 0
  2410  00006A                     __div_to_l_@cntr:
  2411                           	opt stack 0
  2412  00006A                     le_pulsos@freq:
  2413                           	opt stack 0
  2414                           
  2415                           ; 4 bytes @ 0xA
  2416  00006A                     	ds	1
  2417  00006B                     CDCTxService@i:
  2418                           	opt stack 0
  2419  00006B                     ___awdiv@sign:
  2420                           	opt stack 0
  2421  00006B                     ___awtoft@sign:
  2422                           	opt stack 0
  2423  00006B                     __div_to_l_@exp1:
  2424                           	opt stack 0
  2425                           
  2426                           ; 1 bytes @ 0xB
  2427  00006B                     	ds	1
  2428  00006C                     ??___lltoft:
  2429  00006C                     CDCTxService@byte_to_send:
  2430                           	opt stack 0
  2431  00006C                     ___lldiv@counter:
  2432                           	opt stack 0
  2433  00006C                     ___awdiv@quotient:
  2434                           	opt stack 0
  2435                           
  2436                           ; 2 bytes @ 0xC
  2437  00006C                     	ds	1
  2438  00006D                     ?___llmod:
  2439                           	opt stack 0
  2440  00006D                     __tdiv_to_l_@cntr:
  2441                           	opt stack 0
  2442  00006D                     delay@time:
  2443                           	opt stack 0
  2444  00006D                     setup_uart@baudRate:
  2445                           	opt stack 0
  2446  00006D                     ___llmod@dividend:
  2447                           	opt stack 0
  2448                           
  2449                           ; 4 bytes @ 0xD
  2450  00006D                     	ds	1
  2451  00006E                     ?___wmul:
  2452                           	opt stack 0
  2453  00006E                     __tdiv_to_l_@exp1:
  2454                           	opt stack 0
  2455  00006E                     ___wmul@multiplier:
  2456                           	opt stack 0
  2457                           
  2458                           ; 2 bytes @ 0xE
  2459  00006E                     	ds	2
  2460  000070                     ___lltoft@exp:
  2461                           	opt stack 0
  2462  000070                     ___wmul@multiplicand:
  2463                           	opt stack 0
  2464                           
  2465                           ; 2 bytes @ 0x10
  2466  000070                     	ds	1
  2467  000071                     ??_delay:
  2468  000071                     setup_uart@brg:
  2469                           	opt stack 0
  2470  000071                     ___llmod@divisor:
  2471                           	opt stack 0
  2472                           
  2473                           ; 4 bytes @ 0x11
  2474  000071                     	ds	1
  2475  000072                     ___wmul@product:
  2476                           	opt stack 0
  2477                           
  2478                           ; 2 bytes @ 0x12
  2479  000072                     	ds	2
  2480  000074                     ?___ftadd:
  2481                           	opt stack 0
  2482  000074                     ___ftadd@f1:
  2483                           	opt stack 0
  2484  000074                     parseLoRaWan@previous:
  2485                           	opt stack 0
  2486                           
  2487                           ; 4 bytes @ 0x14
  2488  000074                     	ds	1
  2489  000075                     ___llmod@counter:
  2490                           	opt stack 0
  2491                           
  2492                           ; 1 bytes @ 0x15
  2493  000075                     	ds	2
  2494  000077                     ___ftadd@f2:
  2495                           	opt stack 0
  2496                           
  2497                           ; 3 bytes @ 0x17
  2498  000077                     	ds	1
  2499  000078                     parseLoRaWan@intervalMAX:
  2500                           	opt stack 0
  2501                           
  2502                           ; 2 bytes @ 0x18
  2503  000078                     	ds	1
  2504  000079                     delay@to:
  2505                           	opt stack 0
  2506                           
  2507                           ; 4 bytes @ 0x19
  2508  000079                     	ds	1
  2509  00007A                     ??___ftadd:
  2510  00007A                     parseLoRaWan@status:
  2511                           	opt stack 0
  2512                           
  2513                           ; 1 bytes @ 0x1A
  2514  00007A                     	ds	1
  2515  00007B                     parseLoRaWan@timeout:
  2516                           	opt stack 0
  2517                           
  2518                           ; 1 bytes @ 0x1B
  2519  00007B                     	ds	1
  2520  00007C                     enviaComando@cmd:
  2521                           	opt stack 0
  2522                           
  2523                           ; 2 bytes @ 0x1C
  2524  00007C                     	ds	1
  2525  00007D                     ___ftadd@sign:
  2526                           	opt stack 0
  2527                           
  2528                           ; 1 bytes @ 0x1D
  2529  00007D                     	ds	1
  2530  00007E                     enviaComando@tipoComando:
  2531                           	opt stack 0
  2532  00007E                     ___ftadd@exp2:
  2533                           	opt stack 0
  2534                           
  2535                           ; 1 bytes @ 0x1E
  2536  00007E                     	ds	1
  2537  00007F                     ??_enviaComando:
  2538  00007F                     ___ftadd@exp1:
  2539                           	opt stack 0
  2540                           
  2541                           ; 1 bytes @ 0x1F
  2542  00007F                     	ds	1
  2543  000080                     ?___ftmul:
  2544                           	opt stack 0
  2545  000080                     ?___ftsub:
  2546                           	opt stack 0
  2547  000080                     ___ftmul@f1:
  2548                           	opt stack 0
  2549  000080                     ___ftsub@f1:
  2550                           	opt stack 0
  2551                           
  2552                           ; 3 bytes @ 0x20
  2553  000080                     	ds	1
  2554  000081                     enviaComando@i:
  2555                           	opt stack 0
  2556                           
  2557                           ; 2 bytes @ 0x21
  2558  000081                     	ds	2
  2559  000083                     enviaComando@i_4852:
  2560                           	opt stack 0
  2561  000083                     ___ftmul@f2:
  2562                           	opt stack 0
  2563  000083                     ___ftsub@f2:
  2564                           	opt stack 0
  2565                           
  2566                           ; 3 bytes @ 0x23
  2567  000083                     	ds	2
  2568  000085                     enviaComando@i_4853:
  2569                           	opt stack 0
  2570                           
  2571                           ; 2 bytes @ 0x25
  2572  000085                     	ds	1
  2573  000086                     ??___ftmul:
  2574  000086                     
  2575                           ; 1 bytes @ 0x26
  2576  000086                     	ds	1
  2577  000087                     ResetModuloLoRaWan@status:
  2578                           	opt stack 0
  2579  000087                     JoinLoRaWan@status:
  2580                           	opt stack 0
  2581                           
  2582                           ; 1 bytes @ 0x27
  2583  000087                     	ds	2
  2584  000089                     ___ftmul@exp:
  2585                           	opt stack 0
  2586                           
  2587                           ; 1 bytes @ 0x29
  2588  000089                     	ds	1
  2589  00008A                     ___ftmul@f3_as_product:
  2590                           	opt stack 0
  2591                           
  2592                           ; 3 bytes @ 0x2A
  2593  00008A                     	ds	3
  2594  00008D                     ___ftmul@cntr:
  2595                           	opt stack 0
  2596                           
  2597                           ; 1 bytes @ 0x2D
  2598  00008D                     	ds	1
  2599  00008E                     ___ftmul@sign:
  2600                           	opt stack 0
  2601                           
  2602                           ; 1 bytes @ 0x2E
  2603  00008E                     	ds	1
  2604  00008F                     ?___ftdiv:
  2605                           	opt stack 0
  2606  00008F                     ?_fround:
  2607                           	opt stack 0
  2608  00008F                     ?_scale:
  2609                           	opt stack 0
  2610  00008F                     ___ftdiv@f1:
  2611                           	opt stack 0
  2612                           
  2613                           ; 3 bytes @ 0x2F
  2614  00008F                     	ds	3
  2615  000092                     ___ftdiv@f2:
  2616                           	opt stack 0
  2617  000092                     _fround$5891:
  2618                           	opt stack 0
  2619  000092                     _scale$5892:
  2620                           	opt stack 0
  2621                           
  2622                           ; 3 bytes @ 0x32
  2623  000092                     	ds	3
  2624  000095                     ??___ftdiv:
  2625  000095                     scale@scl:
  2626                           	opt stack 0
  2627  000095                     _fround$5890:
  2628                           	opt stack 0
  2629                           
  2630                           ; 3 bytes @ 0x35
  2631  000095                     	ds	3
  2632  000098                     fround@prec:
  2633                           	opt stack 0
  2634  000098                     ___ftdiv@cntr:
  2635                           	opt stack 0
  2636                           
  2637                           ; 1 bytes @ 0x38
  2638  000098                     	ds	1
  2639  000099                     ___ftdiv@f3:
  2640                           	opt stack 0
  2641                           
  2642                           ; 3 bytes @ 0x39
  2643  000099                     	ds	3
  2644  00009C                     ___ftdiv@exp:
  2645                           	opt stack 0
  2646                           
  2647                           ; 1 bytes @ 0x3C
  2648  00009C                     	ds	1
  2649  00009D                     ___ftdiv@sign:
  2650                           	opt stack 0
  2651                           
  2652                           ; 1 bytes @ 0x3D
  2653  00009D                     	ds	1
  2654  00009E                     ?_le_AD:
  2655                           	opt stack 0
  2656                           
  2657                           ; 3 bytes @ 0x3E
  2658  00009E                     	ds	3
  2659  0000A1                     ??_le_AD:
  2660                           
  2661                           ; 1 bytes @ 0x41
  2662  0000A1                     	ds	2
  2663  0000A3                     _le_AD$5889:
  2664                           	opt stack 0
  2665                           
  2666                           ; 3 bytes @ 0x43
  2667  0000A3                     	ds	3
  2668  0000A6                     le_AD@corrente:
  2669                           	opt stack 0
  2670                           
  2671                           ; 3 bytes @ 0x46
  2672  0000A6                     	ds	3
  2673  0000A9                     le_AD@AnalogPort:
  2674                           	opt stack 0
  2675                           
  2676                           ; 1 bytes @ 0x49
  2677  0000A9                     	ds	1
  2678  0000AA                     le_AD@leituraAux:
  2679                           	opt stack 0
  2680                           
  2681                           ; 2 bytes @ 0x4A
  2682  0000AA                     	ds	2
  2683  0000AC                     le_AD@i:
  2684                           	opt stack 0
  2685                           
  2686                           ; 2 bytes @ 0x4C
  2687  0000AC                     	ds	2
  2688  0000AE                     le_AD@leitura:
  2689                           	opt stack 0
  2690                           
  2691                           ; 2 bytes @ 0x4E
  2692  0000AE                     	ds	2
  2693  0000B0                     ?___fttol:
  2694                           	opt stack 0
  2695  0000B0                     ___fttol@f1:
  2696                           	opt stack 0
  2697                           
  2698                           ; 3 bytes @ 0x50
  2699  0000B0                     	ds	4
  2700  0000B4                     ??___fttol:
  2701                           
  2702                           ; 1 bytes @ 0x54
  2703  0000B4                     	ds	5
  2704  0000B9                     ___fttol@sign1:
  2705                           	opt stack 0
  2706                           
  2707                           ; 1 bytes @ 0x59
  2708  0000B9                     	ds	1
  2709  0000BA                     ___fttol@lval:
  2710                           	opt stack 0
  2711                           
  2712                           ; 4 bytes @ 0x5A
  2713  0000BA                     	ds	4
  2714  0000BE                     ___fttol@exp1:
  2715                           	opt stack 0
  2716                           
  2717                           ; 1 bytes @ 0x5E
  2718  0000BE                     	ds	1
  2719  0000BF                     ?_sprintf:
  2720                           	opt stack 0
  2721  0000BF                     sprintf@sp:
  2722                           	opt stack 0
  2723                           
  2724                           ; 2 bytes @ 0x5F
  2725  0000BF                     	ds	2
  2726  0000C1                     sprintf@f:
  2727                           	opt stack 0
  2728                           
  2729                           ; 2 bytes @ 0x61
  2730  0000C1                     	ds	42
  2731  0000EB                     ??_sprintf:
  2732                           
  2733                           ; 1 bytes @ 0x8B
  2734  0000EB                     	ds	6
  2735  0000F1                     SetChannelLoRaWan@ligado:
  2736                           	opt stack 0
  2737  0000F1                     TxLoRaWan@porta:
  2738                           	opt stack 0
  2739  0000F1                     SetAdr@state:
  2740                           	opt stack 0
  2741  0000F1                     SetBandWidth@bw:
  2742                           	opt stack 0
  2743  0000F1                     DataRate@dr:
  2744                           	opt stack 0
  2745                           
  2746                           ; 2 bytes @ 0x91
  2747  0000F1                     	ds	1
  2748  0000F2                     TxLoRaWan@data:
  2749                           	opt stack 0
  2750                           
  2751                           ; 2 bytes @ 0x92
  2752  0000F2                     	ds	1
  2753  0000F3                     ??_DataRate:
  2754  0000F3                     ??_SetBandWidth:
  2755                           
  2756                           ; 1 bytes @ 0x93
  2757  0000F3                     	ds	1
  2758  0000F4                     TxLoRaWan@tamData:
  2759                           	opt stack 0
  2760                           
  2761                           ; 1 bytes @ 0x94
  2762  0000F4                     	ds	1
  2763  0000F5                     ??_TxLoRaWan:
  2764                           
  2765                           ; 1 bytes @ 0x95
  2766  0000F5                     	ds	1
  2767  0000F6                     ??_main:
  2768                           
  2769                           ; 1 bytes @ 0x96
  2770  0000F6                     	ds	10
  2771                           tblptru	equ	0xFF8
  2772                           tblptrh	equ	0xFF7
  2773                           tblptrl	equ	0xFF6
  2774                           tablat	equ	0xFF5
  2775                           postinc0	equ	0xFEE
  2776                           wreg	equ	0xFE8
  2777                           postdec1	equ	0xFE5
  2778                           fsr1l	equ	0xFE1
  2779                           
  2780                           	psect	cstackCOMRAM
  2781  000001                     __pcstackCOMRAM:
  2782                           	opt stack 0
  2783  000001                     ??_getch:
  2784  000001                     ??_USBStdGetDscHandler:
  2785  000001                     ??_USBStdGetStatusHandler:
  2786  000001                     ?_strcmp:
  2787                           	opt stack 0
  2788  000001                     ?_strncmp:
  2789                           	opt stack 0
  2790  000001                     ?i2_USBTransferOnePacket:
  2791                           	opt stack 0
  2792  000001                     ?i2_strlen:
  2793                           	opt stack 0
  2794  000001                     USBConfigureEndpoint@direction:
  2795                           	opt stack 0
  2796  000001                     USBCtrlTrfTxService@byteToSend:
  2797                           	opt stack 0
  2798  000001                     USBCtrlTrfRxService@i:
  2799                           	opt stack 0
  2800  000001                     toupper@c:
  2801                           	opt stack 0
  2802  000001                     i2USBTransferOnePacket@dir:
  2803                           	opt stack 0
  2804  000001                     memcpy@d1:
  2805                           	opt stack 0
  2806  000001                     strcmp@s1:
  2807                           	opt stack 0
  2808  000001                     strcpy@to:
  2809                           	opt stack 0
  2810  000001                     strncmp@s1:
  2811                           	opt stack 0
  2812  000001                     i2memset@p1:
  2813                           	opt stack 0
  2814  000001                     i2strlen@s:
  2815                           	opt stack 0
  2816                           
  2817                           ; 2 bytes @ 0x0
  2818  000001                     	ds	1
  2819  000002                     ??_USBConfigureEndpoint:
  2820  000002                     USBCtrlTrfRxService@byteToRead:
  2821                           	opt stack 0
  2822  000002                     USBCtrlTrfInHandler@lastDTS:
  2823                           	opt stack 0
  2824  000002                     getch@RC:
  2825                           	opt stack 0
  2826  000002                     converter@conv2:
  2827                           	opt stack 0
  2828  000002                     USBStdGetStatusHandler@p:
  2829                           	opt stack 0
  2830  000002                     i2USBTransferOnePacket@data:
  2831                           	opt stack 0
  2832                           
  2833                           ; 2 bytes @ 0x1
  2834  000002                     	ds	1
  2835  000003                     ??i2_strlen:
  2836  000003                     getch@data:
  2837                           	opt stack 0
  2838  000003                     converter@resul:
  2839                           	opt stack 0
  2840  000003                     memcpy@s1:
  2841                           	opt stack 0
  2842  000003                     strcmp@s2:
  2843                           	opt stack 0
  2844  000003                     strcpy@from:
  2845                           	opt stack 0
  2846  000003                     strncmp@s2:
  2847                           	opt stack 0
  2848  000003                     i2memset@c:
  2849                           	opt stack 0
  2850                           
  2851                           ; 2 bytes @ 0x2
  2852  000003                     	ds	1
  2853  000004                     converter@aux:
  2854                           	opt stack 0
  2855  000004                     i2USBTransferOnePacket@len:
  2856                           	opt stack 0
  2857                           
  2858                           ; 1 bytes @ 0x3
  2859  000004                     	ds	1
  2860  000005                     ??_strcmp:
  2861  000005                     ??i2_USBTransferOnePacket:
  2862  000005                     converter@aux2:
  2863                           	opt stack 0
  2864  000005                     memcpy@n:
  2865                           	opt stack 0
  2866  000005                     strcpy@cp:
  2867                           	opt stack 0
  2868  000005                     strncmp@len:
  2869                           	opt stack 0
  2870  000005                     i2memset@n:
  2871                           	opt stack 0
  2872  000005                     i2strlen@cp:
  2873                           	opt stack 0
  2874                           
  2875                           ; 2 bytes @ 0x4
  2876  000005                     	ds	1
  2877  000006                     USBConfigureEndpoint@EPNum:
  2878                           	opt stack 0
  2879  000006                     converter@conv1:
  2880                           	opt stack 0
  2881  000006                     strcmp@r:
  2882                           	opt stack 0
  2883                           
  2884                           ; 1 bytes @ 0x5
  2885  000006                     	ds	1
  2886  000007                     ??_strncmp:
  2887  000007                     USBConfigureEndpoint@handle:
  2888                           	opt stack 0
  2889  000007                     memcpy@d:
  2890                           	opt stack 0
  2891  000007                     i2memset@p:
  2892                           	opt stack 0
  2893                           
  2894                           ; 2 bytes @ 0x6
  2895  000007                     	ds	2
  2896  000009                     USBEnableEndpoint@options:
  2897                           	opt stack 0
  2898  000009                     i2USBDeviceInit@i:
  2899                           	opt stack 0
  2900  000009                     i2USBTransferOnePacket@ep:
  2901                           	opt stack 0
  2902  000009                     memcpy@s:
  2903                           	opt stack 0
  2904                           
  2905                           ; 2 bytes @ 0x8
  2906  000009                     	ds	1
  2907  00000A                     ??_recebeByteLoRaWan:
  2908  00000A                     USBEnableEndpoint@p:
  2909                           	opt stack 0
  2910  00000A                     i2USBTransferOnePacket@handle:
  2911                           	opt stack 0
  2912                           
  2913                           ; 2 bytes @ 0x9
  2914  00000A                     	ds	1
  2915  00000B                     memcpy@tmp:
  2916                           	opt stack 0
  2917                           
  2918                           ; 1 bytes @ 0xA
  2919  00000B                     	ds	1
  2920  00000C                     USBEnableEndpoint@ep:
  2921                           	opt stack 0
  2922                           
  2923                           ; 1 bytes @ 0xB
  2924  00000C                     	ds	1
  2925  00000D                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  2926                           	opt stack 0
  2927                           
  2928                           ; 2 bytes @ 0xC
  2929  00000D                     	ds	1
  2930  00000E                     recebeByteLoRaWan@len:
  2931                           	opt stack 0
  2932                           
  2933                           ; 1 bytes @ 0xD
  2934  00000E                     	ds	1
  2935  00000F                     recebeByteLoRaWan@port:
  2936                           	opt stack 0
  2937  00000F                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  2938                           	opt stack 0
  2939                           
  2940                           ; 2 bytes @ 0xE
  2941  00000F                     	ds	1
  2942  000010                     recebeByteLoRaWan@b:
  2943                           	opt stack 0
  2944                           
  2945                           ; 1 bytes @ 0xF
  2946  000010                     	ds	1
  2947  000011                     recebeByteLoRaWan@i:
  2948                           	opt stack 0
  2949  000011                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  2950                           	opt stack 0
  2951                           
  2952                           ; 2 bytes @ 0x10
  2953  000011                     	ds	1
  2954  000012                     recebeByteLoRaWan@tamMsgRx:
  2955                           	opt stack 0
  2956                           
  2957                           ; 1 bytes @ 0x11
  2958  000012                     	ds	1
  2959  000013                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  2960  000013                     recebeByteLoRaWan@i_4866:
  2961                           	opt stack 0
  2962                           
  2963                           ; 1 bytes @ 0x12
  2964  000013                     	ds	2
  2965  000015                     ??_USBStdFeatureReqHandler:
  2966  000015                     USBStdSetCfgHandler@i:
  2967                           	opt stack 0
  2968                           
  2969                           ; 1 bytes @ 0x14
  2970  000015                     	ds	1
  2971  000016                     USBStdFeatureReqHandler@pUEP:
  2972                           	opt stack 0
  2973                           
  2974                           ; 2 bytes @ 0x15
  2975  000016                     	ds	2
  2976  000018                     USBStdFeatureReqHandler@current_ep_data:
  2977                           	opt stack 0
  2978                           
  2979                           ; 1 bytes @ 0x17
  2980  000018                     	ds	1
  2981  000019                     USBStdFeatureReqHandler@p:
  2982                           	opt stack 0
  2983                           
  2984                           ; 2 bytes @ 0x18
  2985  000019                     	ds	2
  2986  00001B                     ??_USBCtrlEPService:
  2987  00001B                     
  2988                           ; 1 bytes @ 0x1A
  2989  00001B                     	ds	1
  2990  00001C                     USBDeviceTasks@i:
  2991                           	opt stack 0
  2992                           
  2993                           ; 1 bytes @ 0x1B
  2994  00001C                     	ds	1
  2995  00001D                     ??_SYS_InterruptHigh:
  2996                           
  2997                           ; 1 bytes @ 0x1C
  2998  00001D                     	ds	19
  2999  000030                     SYS_InterruptHigh@dig1:
  3000                           	opt stack 0
  3001                           
  3002                           ; 2 bytes @ 0x2F
  3003  000030                     	ds	2
  3004  000032                     SYS_InterruptHigh@dig2:
  3005                           	opt stack 0
  3006                           
  3007                           ; 2 bytes @ 0x31
  3008  000032                     	ds	2
  3009  000034                     SYS_InterruptHigh@dig3:
  3010                           	opt stack 0
  3011                           
  3012                           ; 2 bytes @ 0x33
  3013  000034                     	ds	2
  3014  000036                     SYS_InterruptHigh@dig4:
  3015                           	opt stack 0
  3016                           
  3017                           ; 2 bytes @ 0x35
  3018  000036                     	ds	2
  3019                           tblptru	equ	0xFF8
  3020                           tblptrh	equ	0xFF7
  3021                           tblptrl	equ	0xFF6
  3022                           tablat	equ	0xFF5
  3023                           postinc0	equ	0xFEE
  3024                           wreg	equ	0xFE8
  3025                           postdec1	equ	0xFE5
  3026                           fsr1l	equ	0xFE1
  3027                           
  3028 ;;
  3029 ;;Main: autosize = 0, tempsize = 10, incstack = 0, save=0
  3030 ;;
  3031 ;; *************** function _main *****************
  3032 ;; Defined at:
  3033 ;;		line 42 in file "UT.c"
  3034 ;; Parameters:    Size  Location     Type
  3035 ;;		None
  3036 ;; Auto vars:     Size  Location     Type
  3037 ;;  sf              1  159[BANK2 ] unsigned char 
  3038 ;;  dr              1  174[BANK2 ] unsigned char 
  3039 ;;  i               1  173[BANK2 ] unsigned char 
  3040 ;;  i               1  172[BANK2 ] unsigned char 
  3041 ;;  tempoTimeOut    4  154[BANK2 ] unsigned long 
  3042 ;;  data          150    0[BANK2 ] unsigned char [150]
  3043 ;;  Fcanal          1  171[BANK2 ] unsigned char 
  3044 ;;  Icanal          1  158[BANK2 ] unsigned char 
  3045 ;;  deltaTempo      4  162[BANK2 ] unsigned long 
  3046 ;;  tempo           4  150[BANK2 ] unsigned long 
  3047 ;;  resp            1  160[BANK2 ] unsigned char 
  3048 ;;  i               1  177[BANK2 ] unsigned char 
  3049 ;;  i               1  176[BANK2 ] unsigned char 
  3050 ;;  i               2  169[BANK2 ] int 
  3051 ;;  dadoPoco       22  178[BANK2 ] struct .
  3052 ;;  pisca           1  175[BANK2 ] unsigned char 
  3053 ;;  contador        1  161[BANK2 ] unsigned char 
  3054 ;; Return value:  Size  Location     Type
  3055 ;;                  1    wreg      void 
  3056 ;; Registers used:
  3057 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3058 ;; Tracked objects:
  3059 ;;		On entry : 0/0
  3060 ;;		On exit  : 0/0
  3061 ;;		Unchanged: 0/0
  3062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3063 ;;      Params:         0       0       0       0       0       0       0       0       0
  3064 ;;      Locals:         0       0       0     200       0       0       0       0       0
  3065 ;;      Temps:          0      10       0       0       0       0       0       0       0
  3066 ;;      Totals:         0      10       0     200       0       0       0       0       0
  3067 ;;Total ram usage:      210 bytes
  3068 ;; Hardware stack levels required when called:   15
  3069 ;; This function calls:
  3070 ;;		_DataRate
  3071 ;;		_MacSave
  3072 ;;		_SetAdr
  3073 ;;		_SetAppEUI
  3074 ;;		_SetAppKey
  3075 ;;		_SetBandWidth
  3076 ;;		_SetChannelLoRaWan
  3077 ;;		_SetDevEUI
  3078 ;;		_SetSpreadingFactor
  3079 ;;		_TxLoRaWan
  3080 ;;		_USBDeviceInit
  3081 ;;		___ftmul
  3082 ;;		___fttol
  3083 ;;		_delay
  3084 ;;		_le_AD
  3085 ;;		_le_pulsos
  3086 ;;		_millis
  3087 ;;		_putch
  3088 ;;		_putsUSBUSART
  3089 ;;		_retornaDado
  3090 ;;		_setup_AD
  3091 ;;		_setup_ccp1
  3092 ;;		_setup_pulsos
  3093 ;;		_setup_uart
  3094 ;;		_sprintf
  3095 ;;		_verificaUSB
  3096 ;; This function is called by:
  3097 ;;		Startup code after reset
  3098 ;; This function uses a non-reentrant model
  3099 ;;
  3100                           
  3101                           	psect	text0
  3102  000E10                     __ptext0:
  3103                           	opt stack 0
  3104  000E10                     _main:
  3105                           	opt stack 16
  3106                           
  3107                           ;UT.c: 43: uint8_t contador;
  3108                           ;UT.c: 44: uint8_t pisca=0;
  3109                           
  3110                           ;incstack = 0
  3111  000E10  0E00               	movlw	0
  3112  000E12  0102               	movlb	2	; () banked
  3113  000E14  6FAF               	movwf	main@pisca& (0+255),b
  3114                           
  3115                           ; BSR set to: 2
  3116                           ;UT.c: 46: TRISEbits.RE2=0;
  3117  000E16  9496               	bcf	3990,2,c	;volatile
  3118                           
  3119                           ; BSR set to: 2
  3120                           ;UT.c: 47: PORTDbits.RD4=0;
  3121  000E18  9883               	bcf	3971,4,c	;volatile
  3122                           
  3123                           ; BSR set to: 2
  3124                           ;UT.c: 48: TRISDbits.RD4=0;
  3125  000E1A  9895               	bcf	3989,4,c	;volatile
  3126                           
  3127                           ; BSR set to: 2
  3128                           ;UT.c: 49: PORTDbits.RD5=0;
  3129  000E1C  9A83               	bcf	3971,5,c	;volatile
  3130                           
  3131                           ; BSR set to: 2
  3132                           ;UT.c: 50: TRISDbits.RD5=0;
  3133  000E1E  9A95               	bcf	3989,5,c	;volatile
  3134                           
  3135                           ; BSR set to: 2
  3136                           ;UT.c: 51: PORTDbits.RD6=0;
  3137  000E20  9C83               	bcf	3971,6,c	;volatile
  3138                           
  3139                           ; BSR set to: 2
  3140                           ;UT.c: 52: TRISDbits.RD6=0;
  3141  000E22  9C95               	bcf	3989,6,c	;volatile
  3142                           
  3143                           ; BSR set to: 2
  3144                           ;UT.c: 53: PORTDbits.RD7=0;
  3145  000E24  9E83               	bcf	3971,7,c	;volatile
  3146                           
  3147                           ; BSR set to: 2
  3148                           ;UT.c: 54: TRISDbits.RD7=0;
  3149  000E26  9E95               	bcf	3989,7,c	;volatile
  3150                           
  3151                           ;UT.c: 57: for (int i=0;i<25;i++)
  3152  000E28  0E00               	movlw	0
  3153  000E2A  6FAA               	movwf	(main@i+1)& (0+255),b
  3154  000E2C  0E00               	movlw	0
  3155  000E2E  6FA9               	movwf	main@i& (0+255),b
  3156  000E30                     l10524:
  3157                           
  3158                           ; BSR set to: 2
  3159  000E30  BFAA               	btfsc	(main@i+1)& (0+255),7,b
  3160  000E32  D006               	goto	l1057
  3161  000E34  51AA               	movf	(main@i+1)& (0+255),w,b
  3162  000E36  E11C               	bnz	l10536
  3163  000E38  0E19               	movlw	25
  3164  000E3A  5DA9               	subwf	main@i& (0+255),w,b
  3165  000E3C  B0D8               	btfsc	status,0,c
  3166  000E3E  D018               	goto	u10800
  3167  000E40                     l1057:
  3168                           
  3169                           ; BSR set to: 2
  3170                           ;UT.c: 58: {
  3171                           ;UT.c: 59: pisca ^= 1;
  3172                           
  3173                           ; BSR set to: 2
  3174  000E40  0E01               	movlw	1
  3175  000E42  1BAF               	xorwf	main@pisca& (0+255),f,b
  3176                           
  3177                           ; BSR set to: 2
  3178                           ;UT.c: 60: PORTEbits.RE2 = pisca;
  3179  000E44  B1AF               	btfsc	main@pisca& (0+255),0,b
  3180  000E46  D002               	bra	u10795
  3181  000E48  9484               	bcf	3972,2,c	;volatile
  3182  000E4A  D001               	bra	u10796
  3183  000E4C                     u10795:
  3184  000E4C  8484               	bsf	3972,2,c	;volatile
  3185  000E4E                     u10796:
  3186                           
  3187                           ;UT.c: 61: _delay((unsigned long)((200)*(48000000/4000.0)));
  3188  000E4E  0E0D               	movlw	13
  3189  000E50  0100               	movlb	0	; () banked
  3190  000E52  6FF7               	movwf	(??_main+1)& (0+255),b
  3191  000E54  0E2D               	movlw	45
  3192  000E56  6FF6               	movwf	??_main& (0+255),b
  3193  000E58  0ED7               	movlw	215
  3194  000E5A                     u11457:
  3195  000E5A  2EE8               	decfsz	wreg,f,c
  3196  000E5C  D7FE               	bra	u11457
  3197  000E5E  2FF6               	decfsz	??_main& (0+255),f,b
  3198  000E60  D7FC               	bra	u11457
  3199  000E62  2FF7               	decfsz	(??_main+1)& (0+255),f,b
  3200  000E64  D7FA               	bra	u11457
  3201  000E66  D000               	nop2	
  3202  000E68  0102               	movlb	2	; () banked
  3203  000E6A  4BA9               	infsnz	main@i& (0+255),f,b
  3204  000E6C  2BAA               	incf	(main@i+1)& (0+255),f,b
  3205  000E6E  D7E0               	goto	l10524
  3206  000E70                     u10800:
  3207  000E70                     l10536:
  3208                           
  3209                           ; BSR set to: 2
  3210                           ;UT.c: 62: }
  3211                           ;UT.c: 69: setup_uart(57600);
  3212  000E70  0E00               	movlw	0
  3213  000E72  0100               	movlb	0	; () banked
  3214  000E74  6F6D               	movwf	setup_uart@baudRate& (0+255),b
  3215  000E76  0EE1               	movlw	225
  3216  000E78  6F6E               	movwf	(setup_uart@baudRate+1)& (0+255),b
  3217  000E7A  0E00               	movlw	0
  3218  000E7C  6F6F               	movwf	(setup_uart@baudRate+2)& (0+255),b
  3219  000E7E  0E00               	movlw	0
  3220  000E80  6F70               	movwf	(setup_uart@baudRate+3)& (0+255),b
  3221  000E82  EC85  F022         	call	_setup_uart	;wreg free
  3222                           
  3223                           ;UT.c: 72: USBDeviceInit();
  3224  000E86  EC59  F015         	call	_USBDeviceInit	;wreg free
  3225                           
  3226                           ;UT.c: 73: setup_AD();
  3227  000E8A  EC73  F02B         	call	_setup_AD	;wreg free
  3228                           
  3229                           ;UT.c: 74: setup_pulsos();
  3230  000E8E  EC8E  F021         	call	_setup_pulsos	;wreg free
  3231                           
  3232                           ;UT.c: 75: setup_ccp1();
  3233  000E92  EC0D  F029         	call	_setup_ccp1	;wreg free
  3234                           
  3235                           ;UT.c: 77: verificaUSB();
  3236  000E96  EC57  F02A         	call	_verificaUSB	;wreg free
  3237                           
  3238                           ;UT.c: 97: struct
  3239                           ;UT.c: 98: {
  3240                           ;UT.c: 99: uint8_t feedback1;
  3241                           ;UT.c: 100: uint8_t feedback2;
  3242                           ;UT.c: 101: uint16_t nivel1;
  3243                           ;UT.c: 102: uint16_t nivel2;
  3244                           ;UT.c: 103: uint32_t pulsos1;
  3245                           ;UT.c: 104: uint32_t pulsos2;
  3246                           ;UT.c: 105: uint32_t pulsos3;
  3247                           ;UT.c: 106: uint32_t pulsos4;
  3248                           ;UT.c: 107: } dadoPoco;
  3249                           ;UT.c: 109: putch(0x34);
  3250  000E9A  0E34               	movlw	52
  3251  000E9C  EC82  F02B         	call	_putch
  3252                           
  3253                           ;UT.c: 111: for (uint8_t i=0; i<48; i++){
  3254  000EA0  0E00               	movlw	0
  3255  000EA2  0102               	movlb	2	; () banked
  3256  000EA4  6FB0               	movwf	main@i_3312& (0+255),b
  3257  000EA6                     l10552:
  3258                           
  3259                           ; BSR set to: 2
  3260  000EA6  0E2F               	movlw	47
  3261  000EA8  65B0               	cpfsgt	main@i_3312& (0+255),b
  3262  000EAA  D001               	goto	l1059
  3263  000EAC  D00A               	goto	u10820
  3264  000EAE                     l1059:
  3265                           
  3266                           ; BSR set to: 2
  3267                           ;UT.c: 112: SetChannelLoRaWan (i,0);
  3268                           
  3269                           ; BSR set to: 2
  3270  000EAE  0E00               	movlw	0
  3271  000EB0  0100               	movlb	0	; () banked
  3272  000EB2  6FF1               	movwf	SetChannelLoRaWan@ligado& (0+255),b
  3273  000EB4  0102               	movlb	2	; () banked
  3274  000EB6  51B0               	movf	main@i_3312& (0+255),w,b
  3275  000EB8  EC89  F026         	call	_SetChannelLoRaWan
  3276  000EBC  0102               	movlb	2	; () banked
  3277  000EBE  2BB0               	incf	main@i_3312& (0+255),f,b
  3278  000EC0  D7F2               	goto	l10552
  3279  000EC2                     u10820:
  3280                           
  3281                           ; BSR set to: 2
  3282                           ;UT.c: 113: }
  3283                           ;UT.c: 114: for (uint8_t i=48; i<=63; i++){
  3284                           
  3285                           ; BSR set to: 2
  3286  000EC2  0E30               	movlw	48
  3287  000EC4  6FB1               	movwf	main@i_3313& (0+255),b
  3288  000EC6                     l10564:
  3289                           
  3290                           ; BSR set to: 2
  3291  000EC6  0E3F               	movlw	63
  3292  000EC8  65B1               	cpfsgt	main@i_3313& (0+255),b
  3293  000ECA  D001               	goto	l1061
  3294  000ECC  D00A               	goto	u10840
  3295  000ECE                     l1061:
  3296                           
  3297                           ; BSR set to: 2
  3298                           ;UT.c: 115: SetChannelLoRaWan (i,1);
  3299                           
  3300                           ; BSR set to: 2
  3301  000ECE  0E01               	movlw	1
  3302  000ED0  0100               	movlb	0	; () banked
  3303  000ED2  6FF1               	movwf	SetChannelLoRaWan@ligado& (0+255),b
  3304  000ED4  0102               	movlb	2	; () banked
  3305  000ED6  51B1               	movf	main@i_3313& (0+255),w,b
  3306  000ED8  EC89  F026         	call	_SetChannelLoRaWan
  3307  000EDC  0102               	movlb	2	; () banked
  3308  000EDE  2BB1               	incf	main@i_3313& (0+255),f,b
  3309  000EE0  D7F2               	goto	l10564
  3310  000EE2                     u10840:
  3311                           
  3312                           ; BSR set to: 2
  3313                           ;UT.c: 116: }
  3314                           ;UT.c: 118: DataRate(1);
  3315                           
  3316                           ; BSR set to: 2
  3317  000EE2  0E00               	movlw	0
  3318  000EE4  0100               	movlb	0	; () banked
  3319  000EE6  6FF2               	movwf	(DataRate@dr+1)& (0+255),b
  3320  000EE8  0E01               	movlw	1
  3321  000EEA  6FF1               	movwf	DataRate@dr& (0+255),b
  3322  000EEC  ECC8  F028         	call	_DataRate	;wreg free
  3323                           
  3324                           ;UT.c: 119: SetAdr(STATE_OFF);
  3325  000EF0  0EF6               	movlw	low _STATE_OFF
  3326  000EF2  0100               	movlb	0	; () banked
  3327  000EF4  6FF1               	movwf	SetAdr@state& (0+255),b
  3328  000EF6  0E7D               	movlw	high _STATE_OFF
  3329  000EF8  6FF2               	movwf	(SetAdr@state+1)& (0+255),b
  3330  000EFA  EC90  F029         	call	_SetAdr	;wreg free
  3331                           
  3332                           ;UT.c: 120: SetDevEUI();
  3333  000EFE  ECA1  F025         	call	_SetDevEUI	;wreg free
  3334                           
  3335                           ;UT.c: 121: SetAppEUI();
  3336  000F02  ECDC  F025         	call	_SetAppEUI	;wreg free
  3337                           
  3338                           ;UT.c: 122: SetAppKey();
  3339  000F06  EC85  F020         	call	_SetAppKey	;wreg free
  3340                           
  3341                           ;UT.c: 123: MacSave();
  3342  000F0A  EC07  F02A         	call	_MacSave	;wreg free
  3343  000F0E                     
  3344                           ;UT.c: 126: {
  3345                           ;UT.c: 127: uint32_t tempo=millis();
  3346  000F0E  EC06  F02B         	call	_millis	;wreg free
  3347  000F12  C060  F296         	movff	?_millis,main@tempo
  3348  000F16  C061  F297         	movff	?_millis+1,main@tempo+1
  3349  000F1A  C062  F298         	movff	?_millis+2,main@tempo+2
  3350  000F1E  C063  F299         	movff	?_millis+3,main@tempo+3
  3351                           
  3352                           ;UT.c: 128: pisca ^= 1;
  3353  000F22  0E01               	movlw	1
  3354  000F24  0102               	movlb	2	; () banked
  3355  000F26  1BAF               	xorwf	main@pisca& (0+255),f,b
  3356                           
  3357                           ; BSR set to: 2
  3358                           ;UT.c: 129: PORTEbits.RE2 = pisca;
  3359  000F28  B1AF               	btfsc	main@pisca& (0+255),0,b
  3360  000F2A  D002               	bra	u10855
  3361  000F2C  9484               	bcf	3972,2,c	;volatile
  3362  000F2E  D001               	bra	u10856
  3363  000F30                     u10855:
  3364  000F30  8484               	bsf	3972,2,c	;volatile
  3365  000F32                     u10856:
  3366                           
  3367                           ;UT.c: 141: dadoPoco.nivel1 =(uint16_t)(le_AD(0)*1000.0);
  3368  000F32  0E00               	movlw	0
  3369  000F34  EC64  F018         	call	_le_AD
  3370  000F38  C09E  F2A6         	movff	?_le_AD,_main$5888
  3371  000F3C  C09F  F2A7         	movff	?_le_AD+1,_main$5888+1
  3372  000F40  C0A0  F2A8         	movff	?_le_AD+2,_main$5888+2
  3373                           
  3374                           ;UT.c: 141: dadoPoco.nivel1 =(uint16_t)(le_AD(0)*1000.0);
  3375  000F44  0E00               	movlw	0
  3376  000F46  0100               	movlb	0	; () banked
  3377  000F48  6F83               	movwf	___ftmul@f2& (0+255),b
  3378  000F4A  0E7A               	movlw	122
  3379  000F4C  6F84               	movwf	(___ftmul@f2+1)& (0+255),b
  3380  000F4E  0E44               	movlw	68
  3381  000F50  6F85               	movwf	(___ftmul@f2+2)& (0+255),b
  3382  000F52  C2A6  F080         	movff	_main$5888,___ftmul@f1
  3383  000F56  C2A7  F081         	movff	_main$5888+1,___ftmul@f1+1
  3384  000F5A  C2A8  F082         	movff	_main$5888+2,___ftmul@f1+2
  3385  000F5E  EC24  F01D         	call	___ftmul	;wreg free
  3386  000F62  C080  F0B0         	movff	?___ftmul,___fttol@f1
  3387  000F66  C081  F0B1         	movff	?___ftmul+1,___fttol@f1+1
  3388  000F6A  C082  F0B2         	movff	?___ftmul+2,___fttol@f1+2
  3389  000F6E  ECA8  F01C         	call	___fttol	;wreg free
  3390  000F72  C0B0  F2B4         	movff	?___fttol,main@dadoPoco+2
  3391  000F76  C0B1  F2B5         	movff	?___fttol+1,main@dadoPoco+3
  3392                           
  3393                           ;UT.c: 142: dadoPoco.nivel2 =(uint16_t)(le_AD(1)*1000.0);
  3394  000F7A  0E01               	movlw	1
  3395  000F7C  EC64  F018         	call	_le_AD
  3396  000F80  C09E  F2A6         	movff	?_le_AD,_main$5888
  3397  000F84  C09F  F2A7         	movff	?_le_AD+1,_main$5888+1
  3398  000F88  C0A0  F2A8         	movff	?_le_AD+2,_main$5888+2
  3399                           
  3400                           ;UT.c: 142: dadoPoco.nivel2 =(uint16_t)(le_AD(1)*1000.0);
  3401  000F8C  0E00               	movlw	0
  3402  000F8E  0100               	movlb	0	; () banked
  3403  000F90  6F83               	movwf	___ftmul@f2& (0+255),b
  3404  000F92  0E7A               	movlw	122
  3405  000F94  6F84               	movwf	(___ftmul@f2+1)& (0+255),b
  3406  000F96  0E44               	movlw	68
  3407  000F98  6F85               	movwf	(___ftmul@f2+2)& (0+255),b
  3408  000F9A  C2A6  F080         	movff	_main$5888,___ftmul@f1
  3409  000F9E  C2A7  F081         	movff	_main$5888+1,___ftmul@f1+1
  3410  000FA2  C2A8  F082         	movff	_main$5888+2,___ftmul@f1+2
  3411  000FA6  EC24  F01D         	call	___ftmul	;wreg free
  3412  000FAA  C080  F0B0         	movff	?___ftmul,___fttol@f1
  3413  000FAE  C081  F0B1         	movff	?___ftmul+1,___fttol@f1+1
  3414  000FB2  C082  F0B2         	movff	?___ftmul+2,___fttol@f1+2
  3415  000FB6  ECA8  F01C         	call	___fttol	;wreg free
  3416  000FBA  C0B0  F2B6         	movff	?___fttol,main@dadoPoco+4
  3417  000FBE  C0B1  F2B7         	movff	?___fttol+1,main@dadoPoco+5
  3418                           
  3419                           ;UT.c: 143: dadoPoco.pulsos1 =le_pulsos(1,retornaDado(1,0));
  3420  000FC2  0E00               	movlw	0
  3421  000FC4  0100               	movlb	0	; () banked
  3422  000FC6  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3423  000FC8  0E01               	movlw	1
  3424  000FCA  EC26  F027         	call	_retornaDado
  3425  000FCE  0100               	movlb	0	; () banked
  3426  000FD0  6F65               	movwf	le_pulsos@modo& (0+255),b
  3427  000FD2  0E01               	movlw	1
  3428  000FD4  EC13  F01E         	call	_le_pulsos
  3429  000FD8  C065  F2B8         	movff	?_le_pulsos,main@dadoPoco+6
  3430  000FDC  C066  F2B9         	movff	?_le_pulsos+1,main@dadoPoco+7
  3431  000FE0  C067  F2BA         	movff	?_le_pulsos+2,main@dadoPoco+8
  3432  000FE4  C068  F2BB         	movff	?_le_pulsos+3,main@dadoPoco+9
  3433                           
  3434                           ;UT.c: 144: dadoPoco.pulsos2 =le_pulsos(2,retornaDado(1,1));
  3435  000FE8  0E01               	movlw	1
  3436  000FEA  0100               	movlb	0	; () banked
  3437  000FEC  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3438  000FEE  0E01               	movlw	1
  3439  000FF0  EC26  F027         	call	_retornaDado
  3440  000FF4  0100               	movlb	0	; () banked
  3441  000FF6  6F65               	movwf	le_pulsos@modo& (0+255),b
  3442  000FF8  0E02               	movlw	2
  3443  000FFA  EC13  F01E         	call	_le_pulsos
  3444  000FFE  C065  F2BC         	movff	?_le_pulsos,main@dadoPoco+10
  3445  001002  C066  F2BD         	movff	?_le_pulsos+1,main@dadoPoco+11
  3446  001006  C067  F2BE         	movff	?_le_pulsos+2,main@dadoPoco+12
  3447  00100A  C068  F2BF         	movff	?_le_pulsos+3,main@dadoPoco+13
  3448                           
  3449                           ;UT.c: 145: dadoPoco.pulsos3 =le_pulsos(3,retornaDado(1,2));
  3450  00100E  0E02               	movlw	2
  3451  001010  0100               	movlb	0	; () banked
  3452  001012  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3453  001014  0E01               	movlw	1
  3454  001016  EC26  F027         	call	_retornaDado
  3455  00101A  0100               	movlb	0	; () banked
  3456  00101C  6F65               	movwf	le_pulsos@modo& (0+255),b
  3457  00101E  0E03               	movlw	3
  3458  001020  EC13  F01E         	call	_le_pulsos
  3459  001024  C065  F2C0         	movff	?_le_pulsos,main@dadoPoco+14
  3460  001028  C066  F2C1         	movff	?_le_pulsos+1,main@dadoPoco+15
  3461  00102C  C067  F2C2         	movff	?_le_pulsos+2,main@dadoPoco+16
  3462  001030  C068  F2C3         	movff	?_le_pulsos+3,main@dadoPoco+17
  3463                           
  3464                           ;UT.c: 146: dadoPoco.pulsos4 =le_pulsos(4,retornaDado(1,3));
  3465  001034  0E03               	movlw	3
  3466  001036  0100               	movlb	0	; () banked
  3467  001038  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3468  00103A  0E01               	movlw	1
  3469  00103C  EC26  F027         	call	_retornaDado
  3470  001040  0100               	movlb	0	; () banked
  3471  001042  6F65               	movwf	le_pulsos@modo& (0+255),b
  3472  001044  0E04               	movlw	4
  3473  001046  EC13  F01E         	call	_le_pulsos
  3474  00104A  C065  F2C4         	movff	?_le_pulsos,main@dadoPoco+18
  3475  00104E  C066  F2C5         	movff	?_le_pulsos+1,main@dadoPoco+19
  3476  001052  C067  F2C6         	movff	?_le_pulsos+2,main@dadoPoco+20
  3477  001056  C068  F2C7         	movff	?_le_pulsos+3,main@dadoPoco+21
  3478                           
  3479                           ;UT.c: 148: nivel1 = dadoPoco.nivel1;
  3480  00105A  C2B4  F2EC         	movff	main@dadoPoco+2,_nivel1
  3481                           
  3482                           ;UT.c: 149: nivel2 = dadoPoco.nivel2;
  3483  00105E  C2B6  F2EB         	movff	main@dadoPoco+4,_nivel2
  3484                           
  3485                           ;UT.c: 150: pulsos1 = dadoPoco.pulsos1;
  3486  001062  C2B8  F2EA         	movff	main@dadoPoco+6,_pulsos1
  3487                           
  3488                           ;UT.c: 151: pulsos2 = dadoPoco.pulsos2;
  3489  001066  C2BC  F1FD         	movff	main@dadoPoco+10,_pulsos2
  3490                           
  3491                           ;UT.c: 152: pulsos3 = dadoPoco.pulsos3;
  3492  00106A  C2C0  F1FC         	movff	main@dadoPoco+14,_pulsos3
  3493                           
  3494                           ;UT.c: 153: pulsos4 = dadoPoco.pulsos4;
  3495  00106E  C2C4  F1FB         	movff	main@dadoPoco+18,_pulsos4
  3496                           
  3497                           ;UT.c: 155: LATDbits.LATD4 = retornaDado(0,0);
  3498  001072  0E00               	movlw	0
  3499  001074  0100               	movlb	0	; () banked
  3500  001076  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3501  001078  0E00               	movlw	0
  3502  00107A  EC26  F027         	call	_retornaDado
  3503  00107E  0100               	movlb	0	; () banked
  3504  001080  6FF6               	movwf	??_main& (0+255),b
  3505  001082  3BF6               	swapf	??_main& (0+255),f,b
  3506  001084  508C               	movf	3980,w,c	;volatile
  3507  001086  19F6               	xorwf	??_main& (0+255),w,b
  3508  001088  0BEF               	andlw	-17
  3509  00108A  19F6               	xorwf	??_main& (0+255),w,b
  3510  00108C  6E8C               	movwf	3980,c	;volatile
  3511                           
  3512                           ; BSR set to: 0
  3513                           ;UT.c: 156: LATDbits.LATD5 = retornaDado(0,3);
  3514  00108E  0E03               	movlw	3
  3515  001090  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3516  001092  0E00               	movlw	0
  3517  001094  EC26  F027         	call	_retornaDado
  3518  001098  0100               	movlb	0	; () banked
  3519  00109A  6FF6               	movwf	??_main& (0+255),b
  3520  00109C  3BF6               	swapf	??_main& (0+255),f,b
  3521  00109E  47F6               	rlncf	??_main& (0+255),f,b
  3522  0010A0  508C               	movf	3980,w,c	;volatile
  3523  0010A2  19F6               	xorwf	??_main& (0+255),w,b
  3524  0010A4  0BDF               	andlw	-33
  3525  0010A6  19F6               	xorwf	??_main& (0+255),w,b
  3526  0010A8  6E8C               	movwf	3980,c	;volatile
  3527                           
  3528                           ; BSR set to: 0
  3529                           ;UT.c: 157: LATDbits.LATD6 = retornaDado(0,2);
  3530  0010AA  0E02               	movlw	2
  3531  0010AC  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3532  0010AE  0E00               	movlw	0
  3533  0010B0  EC26  F027         	call	_retornaDado
  3534  0010B4  0100               	movlb	0	; () banked
  3535  0010B6  6FF6               	movwf	??_main& (0+255),b
  3536  0010B8  3BF6               	swapf	??_main& (0+255),f,b
  3537  0010BA  47F6               	rlncf	??_main& (0+255),f,b
  3538  0010BC  47F6               	rlncf	??_main& (0+255),f,b
  3539  0010BE  508C               	movf	3980,w,c	;volatile
  3540  0010C0  19F6               	xorwf	??_main& (0+255),w,b
  3541  0010C2  0BBF               	andlw	-65
  3542  0010C4  19F6               	xorwf	??_main& (0+255),w,b
  3543  0010C6  6E8C               	movwf	3980,c	;volatile
  3544                           
  3545                           ; BSR set to: 0
  3546                           ;UT.c: 158: LATDbits.LATD7 = retornaDado(0,1);
  3547  0010C8  0E01               	movlw	1
  3548  0010CA  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3549  0010CC  0E00               	movlw	0
  3550  0010CE  EC26  F027         	call	_retornaDado
  3551  0010D2  0100               	movlb	0	; () banked
  3552  0010D4  6FF6               	movwf	??_main& (0+255),b
  3553  0010D6  33F6               	rrcf	??_main& (0+255),f,b
  3554  0010D8  33F6               	rrcf	??_main& (0+255),f,b
  3555  0010DA  508C               	movf	3980,w,c	;volatile
  3556  0010DC  19F6               	xorwf	??_main& (0+255),w,b
  3557  0010DE  0B7F               	andlw	-129
  3558  0010E0  19F6               	xorwf	??_main& (0+255),w,b
  3559  0010E2  6E8C               	movwf	3980,c	;volatile
  3560                           
  3561                           ; BSR set to: 0
  3562                           ;UT.c: 160: feedback1 = (feedback1 & (~(1))) | (retornaDado(0,0));
  3563  0010E4  0E00               	movlw	0
  3564  0010E6  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3565  0010E8  0E00               	movlw	0
  3566  0010EA  EC26  F027         	call	_retornaDado
  3567  0010EE  0100               	movlb	0	; () banked
  3568  0010F0  6FF6               	movwf	??_main& (0+255),b
  3569  0010F2  0102               	movlb	2	; () banked
  3570  0010F4  51F0               	movf	_feedback1& (0+255),w,b
  3571  0010F6  0BFE               	andlw	254
  3572  0010F8  0100               	movlb	0	; () banked
  3573  0010FA  11F6               	iorwf	??_main& (0+255),w,b
  3574  0010FC  0102               	movlb	2	; () banked
  3575  0010FE  6FF0               	movwf	_feedback1& (0+255),b
  3576                           
  3577                           ; BSR set to: 2
  3578                           ;UT.c: 161: feedback1 = (feedback1 & (~(1<<1))) | (retornaDado(0,3)<<1);
  3579  001100  0E03               	movlw	3
  3580  001102  0100               	movlb	0	; () banked
  3581  001104  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3582  001106  0E00               	movlw	0
  3583  001108  EC26  F027         	call	_retornaDado
  3584  00110C  0100               	movlb	0	; () banked
  3585  00110E  6FF6               	movwf	??_main& (0+255),b
  3586  001110  90D8               	bcf	status,0,c
  3587  001112  35F6               	rlcf	??_main& (0+255),w,b
  3588  001114  6FF7               	movwf	(??_main+1)& (0+255),b
  3589  001116  0102               	movlb	2	; () banked
  3590  001118  51F0               	movf	_feedback1& (0+255),w,b
  3591  00111A  0BFD               	andlw	253
  3592  00111C  0100               	movlb	0	; () banked
  3593  00111E  11F7               	iorwf	(??_main+1)& (0+255),w,b
  3594  001120  0102               	movlb	2	; () banked
  3595  001122  6FF0               	movwf	_feedback1& (0+255),b
  3596                           
  3597                           ; BSR set to: 2
  3598                           ;UT.c: 162: feedback1 = (feedback1 & (~(1<<2))) | (retornaDado(0,2)<<2);
  3599  001124  0E02               	movlw	2
  3600  001126  0100               	movlb	0	; () banked
  3601  001128  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3602  00112A  0E00               	movlw	0
  3603  00112C  EC26  F027         	call	_retornaDado
  3604  001130  0100               	movlb	0	; () banked
  3605  001132  6FF6               	movwf	??_main& (0+255),b
  3606  001134  90D8               	bcf	status,0,c
  3607  001136  37F6               	rlcf	??_main& (0+255),f,b
  3608  001138  90D8               	bcf	status,0,c
  3609  00113A  37F6               	rlcf	??_main& (0+255),f,b
  3610  00113C  0102               	movlb	2	; () banked
  3611  00113E  51F0               	movf	_feedback1& (0+255),w,b
  3612  001140  0BFB               	andlw	251
  3613  001142  0100               	movlb	0	; () banked
  3614  001144  11F6               	iorwf	??_main& (0+255),w,b
  3615  001146  0102               	movlb	2	; () banked
  3616  001148  6FF0               	movwf	_feedback1& (0+255),b
  3617                           
  3618                           ; BSR set to: 2
  3619                           ;UT.c: 163: feedback1 = (feedback1 & (~(1<<3))) | (retornaDado(0,1)<<3);
  3620  00114A  0E01               	movlw	1
  3621  00114C  0100               	movlb	0	; () banked
  3622  00114E  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3623  001150  0E00               	movlw	0
  3624  001152  EC26  F027         	call	_retornaDado
  3625  001156  0100               	movlb	0	; () banked
  3626  001158  6FF6               	movwf	??_main& (0+255),b
  3627  00115A  90D8               	bcf	status,0,c
  3628  00115C  37F6               	rlcf	??_main& (0+255),f,b
  3629  00115E  90D8               	bcf	status,0,c
  3630  001160  37F6               	rlcf	??_main& (0+255),f,b
  3631  001162  90D8               	bcf	status,0,c
  3632  001164  37F6               	rlcf	??_main& (0+255),f,b
  3633  001166  0102               	movlb	2	; () banked
  3634  001168  51F0               	movf	_feedback1& (0+255),w,b
  3635  00116A  0BF7               	andlw	247
  3636  00116C  0100               	movlb	0	; () banked
  3637  00116E  11F6               	iorwf	??_main& (0+255),w,b
  3638  001170  0102               	movlb	2	; () banked
  3639  001172  6FF0               	movwf	_feedback1& (0+255),b
  3640                           
  3641                           ; BSR set to: 2
  3642                           ;UT.c: 164: feedback1 = (feedback1 & (~(1<<4))) | (retornaDado(1,4)<<4);
  3643  001174  0E04               	movlw	4
  3644  001176  0100               	movlb	0	; () banked
  3645  001178  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3646  00117A  0E01               	movlw	1
  3647  00117C  EC26  F027         	call	_retornaDado
  3648  001180  0100               	movlb	0	; () banked
  3649  001182  6FF6               	movwf	??_main& (0+255),b
  3650  001184  3BF6               	swapf	??_main& (0+255),f,b
  3651  001186  0EF0               	movlw	240
  3652  001188  17F6               	andwf	??_main& (0+255),f,b
  3653  00118A  0102               	movlb	2	; () banked
  3654  00118C  51F0               	movf	_feedback1& (0+255),w,b
  3655  00118E  0BEF               	andlw	239
  3656  001190  0100               	movlb	0	; () banked
  3657  001192  11F6               	iorwf	??_main& (0+255),w,b
  3658  001194  0102               	movlb	2	; () banked
  3659  001196  6FF0               	movwf	_feedback1& (0+255),b
  3660                           
  3661                           ; BSR set to: 2
  3662                           ;UT.c: 165: feedback1 = (feedback1 & (~(1<<5))) | (retornaDado(1,5)<<5);
  3663  001198  0E05               	movlw	5
  3664  00119A  0100               	movlb	0	; () banked
  3665  00119C  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3666  00119E  0E01               	movlw	1
  3667  0011A0  EC26  F027         	call	_retornaDado
  3668  0011A4  0100               	movlb	0	; () banked
  3669  0011A6  6FF6               	movwf	??_main& (0+255),b
  3670  0011A8  0E05               	movlw	5
  3671  0011AA  6FF7               	movwf	(??_main+1)& (0+255),b
  3672  0011AC                     u10865:
  3673  0011AC  90D8               	bcf	status,0,c
  3674  0011AE  37F6               	rlcf	??_main& (0+255),f,b
  3675  0011B0  2FF7               	decfsz	(??_main+1)& (0+255),f,b
  3676  0011B2  D7FC               	goto	u10865
  3677  0011B4  0102               	movlb	2	; () banked
  3678  0011B6  51F0               	movf	_feedback1& (0+255),w,b
  3679  0011B8  0BDF               	andlw	223
  3680  0011BA  0100               	movlb	0	; () banked
  3681  0011BC  11F6               	iorwf	??_main& (0+255),w,b
  3682  0011BE  0102               	movlb	2	; () banked
  3683  0011C0  6FF0               	movwf	_feedback1& (0+255),b
  3684                           
  3685                           ; BSR set to: 2
  3686                           ;UT.c: 166: feedback2 = (feedback2 & (~(1))) | (retornaDado(5,6));
  3687  0011C2  0E06               	movlw	6
  3688  0011C4  0100               	movlb	0	; () banked
  3689  0011C6  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3690  0011C8  0E05               	movlw	5
  3691  0011CA  EC26  F027         	call	_retornaDado
  3692  0011CE  0100               	movlb	0	; () banked
  3693  0011D0  6FF6               	movwf	??_main& (0+255),b
  3694  0011D2  0102               	movlb	2	; () banked
  3695  0011D4  51EF               	movf	_feedback2& (0+255),w,b
  3696  0011D6  0BFE               	andlw	254
  3697  0011D8  0100               	movlb	0	; () banked
  3698  0011DA  11F6               	iorwf	??_main& (0+255),w,b
  3699  0011DC  0102               	movlb	2	; () banked
  3700  0011DE  6FEF               	movwf	_feedback2& (0+255),b
  3701                           
  3702                           ; BSR set to: 2
  3703                           ;UT.c: 167: feedback2 = (feedback2 & (~(1<<1))) | (retornaDado(5,7)<<1);
  3704  0011E0  0E07               	movlw	7
  3705  0011E2  0100               	movlb	0	; () banked
  3706  0011E4  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3707  0011E6  0E05               	movlw	5
  3708  0011E8  EC26  F027         	call	_retornaDado
  3709  0011EC  0100               	movlb	0	; () banked
  3710  0011EE  6FF6               	movwf	??_main& (0+255),b
  3711  0011F0  90D8               	bcf	status,0,c
  3712  0011F2  35F6               	rlcf	??_main& (0+255),w,b
  3713  0011F4  6FF7               	movwf	(??_main+1)& (0+255),b
  3714  0011F6  0102               	movlb	2	; () banked
  3715  0011F8  51EF               	movf	_feedback2& (0+255),w,b
  3716  0011FA  0BFD               	andlw	253
  3717  0011FC  0100               	movlb	0	; () banked
  3718  0011FE  11F7               	iorwf	(??_main+1)& (0+255),w,b
  3719  001200  0102               	movlb	2	; () banked
  3720  001202  6FEF               	movwf	_feedback2& (0+255),b
  3721                           
  3722                           ; BSR set to: 2
  3723                           ;UT.c: 168: feedback2 = (feedback2 & (~(1<<2))) | (retornaDado(5,4)<<2);
  3724  001204  0E04               	movlw	4
  3725  001206  0100               	movlb	0	; () banked
  3726  001208  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3727  00120A  0E05               	movlw	5
  3728  00120C  EC26  F027         	call	_retornaDado
  3729  001210  0100               	movlb	0	; () banked
  3730  001212  6FF6               	movwf	??_main& (0+255),b
  3731  001214  90D8               	bcf	status,0,c
  3732  001216  37F6               	rlcf	??_main& (0+255),f,b
  3733  001218  90D8               	bcf	status,0,c
  3734  00121A  37F6               	rlcf	??_main& (0+255),f,b
  3735  00121C  0102               	movlb	2	; () banked
  3736  00121E  51EF               	movf	_feedback2& (0+255),w,b
  3737  001220  0BFB               	andlw	251
  3738  001222  0100               	movlb	0	; () banked
  3739  001224  11F6               	iorwf	??_main& (0+255),w,b
  3740  001226  0102               	movlb	2	; () banked
  3741  001228  6FEF               	movwf	_feedback2& (0+255),b
  3742                           
  3743                           ; BSR set to: 2
  3744                           ;UT.c: 169: feedback2 = (feedback2 & (~(1<<3))) | (retornaDado(5,5)<<3);
  3745  00122A  0E05               	movlw	5
  3746  00122C  0100               	movlb	0	; () banked
  3747  00122E  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3748  001230  0E05               	movlw	5
  3749  001232  EC26  F027         	call	_retornaDado
  3750  001236  0100               	movlb	0	; () banked
  3751  001238  6FF6               	movwf	??_main& (0+255),b
  3752  00123A  90D8               	bcf	status,0,c
  3753  00123C  37F6               	rlcf	??_main& (0+255),f,b
  3754  00123E  90D8               	bcf	status,0,c
  3755  001240  37F6               	rlcf	??_main& (0+255),f,b
  3756  001242  90D8               	bcf	status,0,c
  3757  001244  37F6               	rlcf	??_main& (0+255),f,b
  3758  001246  0102               	movlb	2	; () banked
  3759  001248  51EF               	movf	_feedback2& (0+255),w,b
  3760  00124A  0BF7               	andlw	247
  3761  00124C  0100               	movlb	0	; () banked
  3762  00124E  11F6               	iorwf	??_main& (0+255),w,b
  3763  001250  0102               	movlb	2	; () banked
  3764  001252  6FEF               	movwf	_feedback2& (0+255),b
  3765                           
  3766                           ; BSR set to: 2
  3767                           ;UT.c: 170: feedback2 = (feedback2 & (~(1<<4))) | (retornaDado(5,2)<<4);
  3768  001254  0E02               	movlw	2
  3769  001256  0100               	movlb	0	; () banked
  3770  001258  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3771  00125A  0E05               	movlw	5
  3772  00125C  EC26  F027         	call	_retornaDado
  3773  001260  0100               	movlb	0	; () banked
  3774  001262  6FF6               	movwf	??_main& (0+255),b
  3775  001264  3BF6               	swapf	??_main& (0+255),f,b
  3776  001266  0EF0               	movlw	240
  3777  001268  17F6               	andwf	??_main& (0+255),f,b
  3778  00126A  0102               	movlb	2	; () banked
  3779  00126C  51EF               	movf	_feedback2& (0+255),w,b
  3780  00126E  0BEF               	andlw	239
  3781  001270  0100               	movlb	0	; () banked
  3782  001272  11F6               	iorwf	??_main& (0+255),w,b
  3783  001274  0102               	movlb	2	; () banked
  3784  001276  6FEF               	movwf	_feedback2& (0+255),b
  3785                           
  3786                           ; BSR set to: 2
  3787                           ;UT.c: 171: feedback2 = (feedback2 & (~(1<<5))) | (retornaDado(5,3)<<5);
  3788  001278  0E03               	movlw	3
  3789  00127A  0100               	movlb	0	; () banked
  3790  00127C  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3791  00127E  0E05               	movlw	5
  3792  001280  EC26  F027         	call	_retornaDado
  3793  001284  0100               	movlb	0	; () banked
  3794  001286  6FF6               	movwf	??_main& (0+255),b
  3795  001288  0E05               	movlw	5
  3796  00128A  6FF7               	movwf	(??_main+1)& (0+255),b
  3797  00128C                     u10875:
  3798  00128C  90D8               	bcf	status,0,c
  3799  00128E  37F6               	rlcf	??_main& (0+255),f,b
  3800  001290  2FF7               	decfsz	(??_main+1)& (0+255),f,b
  3801  001292  D7FC               	goto	u10875
  3802  001294  0102               	movlb	2	; () banked
  3803  001296  51EF               	movf	_feedback2& (0+255),w,b
  3804  001298  0BDF               	andlw	223
  3805  00129A  0100               	movlb	0	; () banked
  3806  00129C  11F6               	iorwf	??_main& (0+255),w,b
  3807  00129E  0102               	movlb	2	; () banked
  3808  0012A0  6FEF               	movwf	_feedback2& (0+255),b
  3809                           
  3810                           ; BSR set to: 2
  3811                           ;UT.c: 172: feedback2 = (feedback2 & (~(1<<6))) | (retornaDado(5,0)<<6);
  3812  0012A2  0E00               	movlw	0
  3813  0012A4  0100               	movlb	0	; () banked
  3814  0012A6  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3815  0012A8  0E05               	movlw	5
  3816  0012AA  EC26  F027         	call	_retornaDado
  3817  0012AE  0100               	movlb	0	; () banked
  3818  0012B0  6FF6               	movwf	??_main& (0+255),b
  3819  0012B2  0E06               	movlw	6
  3820  0012B4  6FF7               	movwf	(??_main+1)& (0+255),b
  3821  0012B6                     u10885:
  3822  0012B6  90D8               	bcf	status,0,c
  3823  0012B8  37F6               	rlcf	??_main& (0+255),f,b
  3824  0012BA  2FF7               	decfsz	(??_main+1)& (0+255),f,b
  3825  0012BC  D7FC               	goto	u10885
  3826  0012BE  0102               	movlb	2	; () banked
  3827  0012C0  51EF               	movf	_feedback2& (0+255),w,b
  3828  0012C2  0BBF               	andlw	191
  3829  0012C4  0100               	movlb	0	; () banked
  3830  0012C6  11F6               	iorwf	??_main& (0+255),w,b
  3831  0012C8  0102               	movlb	2	; () banked
  3832  0012CA  6FEF               	movwf	_feedback2& (0+255),b
  3833                           
  3834                           ; BSR set to: 2
  3835                           ;UT.c: 173: feedback2 = (feedback2 & (~(1<<7))) | (retornaDado(5,1)<<7);
  3836  0012CC  0E01               	movlw	1
  3837  0012CE  0100               	movlb	0	; () banked
  3838  0012D0  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3839  0012D2  0E05               	movlw	5
  3840  0012D4  EC26  F027         	call	_retornaDado
  3841  0012D8  0100               	movlb	0	; () banked
  3842  0012DA  6FF6               	movwf	??_main& (0+255),b
  3843  0012DC  0E00               	movlw	0
  3844  0012DE  B1F6               	btfsc	??_main& (0+255),0,b
  3845  0012E0  0E80               	movlw	128
  3846  0012E2  6FF6               	movwf	??_main& (0+255),b
  3847  0012E4  0102               	movlb	2	; () banked
  3848  0012E6  51EF               	movf	_feedback2& (0+255),w,b
  3849  0012E8  0B7F               	andlw	127
  3850  0012EA  0100               	movlb	0	; () banked
  3851  0012EC  11F6               	iorwf	??_main& (0+255),w,b
  3852  0012EE  0102               	movlb	2	; () banked
  3853  0012F0  6FEF               	movwf	_feedback2& (0+255),b
  3854                           
  3855                           ; BSR set to: 2
  3856                           ;UT.c: 175: if (retornaDado(0,4) == 1){
  3857  0012F2  0E04               	movlw	4
  3858  0012F4  0100               	movlb	0	; () banked
  3859  0012F6  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3860  0012F8  0E00               	movlw	0
  3861  0012FA  EC26  F027         	call	_retornaDado
  3862  0012FE  06E8               	decf	wreg,f,c
  3863  001300  A4D8               	btfss	status,2,c
  3864  001302  D170               	goto	l1064
  3865                           
  3866                           ;UT.c: 176: uint8_t Icanal = retornaDado(6,6)<<6 | retornaDado(6,5)<<5 | retornaDado(6,4
      +                          )<<4 | retornaDado(6,3)<<3 | retornaDado(6,2)<<2 | retornaDado(6,1)<<1 | retornaDado(6,0
      +                          );
  3867  001304  0E00               	movlw	0
  3868  001306  0100               	movlb	0	; () banked
  3869  001308  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3870  00130A  0E06               	movlw	6
  3871  00130C  EC26  F027         	call	_retornaDado
  3872  001310  0100               	movlb	0	; () banked
  3873  001312  6FF6               	movwf	??_main& (0+255),b
  3874  001314  0E01               	movlw	1
  3875  001316  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3876  001318  0E06               	movlw	6
  3877  00131A  EC26  F027         	call	_retornaDado
  3878  00131E  0100               	movlb	0	; () banked
  3879  001320  6FF7               	movwf	(??_main+1)& (0+255),b
  3880  001322  90D8               	bcf	status,0,c
  3881  001324  35F7               	rlcf	(??_main+1)& (0+255),w,b
  3882  001326  6FF8               	movwf	(??_main+2)& (0+255),b
  3883  001328  0E02               	movlw	2
  3884  00132A  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3885  00132C  0E06               	movlw	6
  3886  00132E  EC26  F027         	call	_retornaDado
  3887  001332  0100               	movlb	0	; () banked
  3888  001334  6FF9               	movwf	(??_main+3)& (0+255),b
  3889  001336  90D8               	bcf	status,0,c
  3890  001338  37F9               	rlcf	(??_main+3)& (0+255),f,b
  3891  00133A  90D8               	bcf	status,0,c
  3892  00133C  37F9               	rlcf	(??_main+3)& (0+255),f,b
  3893  00133E  0E03               	movlw	3
  3894  001340  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3895  001342  0E06               	movlw	6
  3896  001344  EC26  F027         	call	_retornaDado
  3897  001348  0100               	movlb	0	; () banked
  3898  00134A  6FFA               	movwf	(??_main+4)& (0+255),b
  3899  00134C  90D8               	bcf	status,0,c
  3900  00134E  37FA               	rlcf	(??_main+4)& (0+255),f,b
  3901  001350  90D8               	bcf	status,0,c
  3902  001352  37FA               	rlcf	(??_main+4)& (0+255),f,b
  3903  001354  90D8               	bcf	status,0,c
  3904  001356  37FA               	rlcf	(??_main+4)& (0+255),f,b
  3905  001358  0E04               	movlw	4
  3906  00135A  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3907  00135C  0E06               	movlw	6
  3908  00135E  EC26  F027         	call	_retornaDado
  3909  001362  0100               	movlb	0	; () banked
  3910  001364  6FFB               	movwf	(??_main+5)& (0+255),b
  3911  001366  3BFB               	swapf	(??_main+5)& (0+255),f,b
  3912  001368  0EF0               	movlw	240
  3913  00136A  17FB               	andwf	(??_main+5)& (0+255),f,b
  3914  00136C  0E05               	movlw	5
  3915  00136E  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3916  001370  0E06               	movlw	6
  3917  001372  EC26  F027         	call	_retornaDado
  3918  001376  0100               	movlb	0	; () banked
  3919  001378  6FFC               	movwf	(??_main+6)& (0+255),b
  3920  00137A  0E05               	movlw	5
  3921  00137C  6FFD               	movwf	(??_main+7)& (0+255),b
  3922  00137E                     u10905:
  3923  00137E  90D8               	bcf	status,0,c
  3924  001380  37FC               	rlcf	(??_main+6)& (0+255),f,b
  3925  001382  2FFD               	decfsz	(??_main+7)& (0+255),f,b
  3926  001384  D7FC               	goto	u10905
  3927  001386  0E06               	movlw	6
  3928  001388  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3929  00138A  0E06               	movlw	6
  3930  00138C  EC26  F027         	call	_retornaDado
  3931  001390  0100               	movlb	0	; () banked
  3932  001392  6FFE               	movwf	(??_main+8)& (0+255),b
  3933  001394  0E06               	movlw	6
  3934  001396  6FFF               	movwf	(??_main+9)& (0+255),b
  3935  001398                     u10915:
  3936  001398  90D8               	bcf	status,0,c
  3937  00139A  37FE               	rlcf	(??_main+8)& (0+255),f,b
  3938  00139C  2FFF               	decfsz	(??_main+9)& (0+255),f,b
  3939  00139E  D7FC               	goto	u10915
  3940  0013A0  51FE               	movf	(??_main+8)& (0+255),w,b
  3941  0013A2  11FC               	iorwf	(??_main+6)& (0+255),w,b
  3942  0013A4  11FB               	iorwf	(??_main+5)& (0+255),w,b
  3943  0013A6  11FA               	iorwf	(??_main+4)& (0+255),w,b
  3944  0013A8  11F9               	iorwf	(??_main+3)& (0+255),w,b
  3945  0013AA  11F8               	iorwf	(??_main+2)& (0+255),w,b
  3946  0013AC  11F6               	iorwf	??_main& (0+255),w,b
  3947  0013AE  0102               	movlb	2	; () banked
  3948  0013B0  6F9E               	movwf	main@Icanal& (0+255),b
  3949                           
  3950                           ;UT.c: 177: uint8_t Fcanal = retornaDado(7,6)<<6 | retornaDado(7,5)<<5 | retornaDado(7,4
      +                          )<<4 | retornaDado(7,3)<<3 | retornaDado(7,2)<<2 | retornaDado(7,1)<<1 | retornaDado(7,0
      +                          );
  3951  0013B2  0E00               	movlw	0
  3952  0013B4  0100               	movlb	0	; () banked
  3953  0013B6  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3954  0013B8  0E07               	movlw	7
  3955  0013BA  EC26  F027         	call	_retornaDado
  3956  0013BE  0100               	movlb	0	; () banked
  3957  0013C0  6FF6               	movwf	??_main& (0+255),b
  3958  0013C2  0E01               	movlw	1
  3959  0013C4  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3960  0013C6  0E07               	movlw	7
  3961  0013C8  EC26  F027         	call	_retornaDado
  3962  0013CC  0100               	movlb	0	; () banked
  3963  0013CE  6FF7               	movwf	(??_main+1)& (0+255),b
  3964  0013D0  90D8               	bcf	status,0,c
  3965  0013D2  35F7               	rlcf	(??_main+1)& (0+255),w,b
  3966  0013D4  6FF8               	movwf	(??_main+2)& (0+255),b
  3967  0013D6  0E02               	movlw	2
  3968  0013D8  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3969  0013DA  0E07               	movlw	7
  3970  0013DC  EC26  F027         	call	_retornaDado
  3971  0013E0  0100               	movlb	0	; () banked
  3972  0013E2  6FF9               	movwf	(??_main+3)& (0+255),b
  3973  0013E4  90D8               	bcf	status,0,c
  3974  0013E6  37F9               	rlcf	(??_main+3)& (0+255),f,b
  3975  0013E8  90D8               	bcf	status,0,c
  3976  0013EA  37F9               	rlcf	(??_main+3)& (0+255),f,b
  3977  0013EC  0E03               	movlw	3
  3978  0013EE  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3979  0013F0  0E07               	movlw	7
  3980  0013F2  EC26  F027         	call	_retornaDado
  3981  0013F6  0100               	movlb	0	; () banked
  3982  0013F8  6FFA               	movwf	(??_main+4)& (0+255),b
  3983  0013FA  90D8               	bcf	status,0,c
  3984  0013FC  37FA               	rlcf	(??_main+4)& (0+255),f,b
  3985  0013FE  90D8               	bcf	status,0,c
  3986  001400  37FA               	rlcf	(??_main+4)& (0+255),f,b
  3987  001402  90D8               	bcf	status,0,c
  3988  001404  37FA               	rlcf	(??_main+4)& (0+255),f,b
  3989  001406  0E04               	movlw	4
  3990  001408  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3991  00140A  0E07               	movlw	7
  3992  00140C  EC26  F027         	call	_retornaDado
  3993  001410  0100               	movlb	0	; () banked
  3994  001412  6FFB               	movwf	(??_main+5)& (0+255),b
  3995  001414  3BFB               	swapf	(??_main+5)& (0+255),f,b
  3996  001416  0EF0               	movlw	240
  3997  001418  17FB               	andwf	(??_main+5)& (0+255),f,b
  3998  00141A  0E05               	movlw	5
  3999  00141C  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  4000  00141E  0E07               	movlw	7
  4001  001420  EC26  F027         	call	_retornaDado
  4002  001424  0100               	movlb	0	; () banked
  4003  001426  6FFC               	movwf	(??_main+6)& (0+255),b
  4004  001428  0E05               	movlw	5
  4005  00142A  6FFD               	movwf	(??_main+7)& (0+255),b
  4006  00142C                     u10925:
  4007  00142C  90D8               	bcf	status,0,c
  4008  00142E  37FC               	rlcf	(??_main+6)& (0+255),f,b
  4009  001430  2FFD               	decfsz	(??_main+7)& (0+255),f,b
  4010  001432  D7FC               	goto	u10925
  4011  001434  0E06               	movlw	6
  4012  001436  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  4013  001438  0E07               	movlw	7
  4014  00143A  EC26  F027         	call	_retornaDado
  4015  00143E  0100               	movlb	0	; () banked
  4016  001440  6FFE               	movwf	(??_main+8)& (0+255),b
  4017  001442  0E06               	movlw	6
  4018  001444  6FFF               	movwf	(??_main+9)& (0+255),b
  4019  001446                     u10935:
  4020  001446  90D8               	bcf	status,0,c
  4021  001448  37FE               	rlcf	(??_main+8)& (0+255),f,b
  4022  00144A  2FFF               	decfsz	(??_main+9)& (0+255),f,b
  4023  00144C  D7FC               	goto	u10935
  4024  00144E  51FE               	movf	(??_main+8)& (0+255),w,b
  4025  001450  11FC               	iorwf	(??_main+6)& (0+255),w,b
  4026  001452  11FB               	iorwf	(??_main+5)& (0+255),w,b
  4027  001454  11FA               	iorwf	(??_main+4)& (0+255),w,b
  4028  001456  11F9               	iorwf	(??_main+3)& (0+255),w,b
  4029  001458  11F8               	iorwf	(??_main+2)& (0+255),w,b
  4030  00145A  11F6               	iorwf	??_main& (0+255),w,b
  4031  00145C  0102               	movlb	2	; () banked
  4032  00145E  6FAB               	movwf	main@Fcanal& (0+255),b
  4033                           
  4034                           ; BSR set to: 2
  4035                           ;UT.c: 178: for (uint8_t i=0; i<Fcanal; i++){
  4036  001460  0E00               	movlw	0
  4037  001462  6FAC               	movwf	main@i_3325& (0+255),b
  4038  001464  D009               	goto	l1065
  4039  001466                     
  4040                           ; BSR set to: 2
  4041                           ;UT.c: 179: SetChannelLoRaWan (i,0);
  4042                           
  4043                           ; BSR set to: 2
  4044  001466  0E00               	movlw	0
  4045  001468  0100               	movlb	0	; () banked
  4046  00146A  6FF1               	movwf	SetChannelLoRaWan@ligado& (0+255),b
  4047  00146C  0102               	movlb	2	; () banked
  4048  00146E  51AC               	movf	main@i_3325& (0+255),w,b
  4049  001470  EC89  F026         	call	_SetChannelLoRaWan
  4050  001474  0102               	movlb	2	; () banked
  4051  001476  2BAC               	incf	main@i_3325& (0+255),f,b
  4052  001478                     l1065:
  4053                           
  4054                           ; BSR set to: 2
  4055                           
  4056                           ; BSR set to: 2
  4057  001478  51AB               	movf	main@Fcanal& (0+255),w,b
  4058  00147A  5DAC               	subwf	main@i_3325& (0+255),w,b
  4059  00147C  A0D8               	btfss	status,0,c
  4060  00147E  D7F3               	goto	l1066
  4061                           
  4062                           ; BSR set to: 2
  4063                           ;UT.c: 180: }
  4064                           ;UT.c: 181: for (uint8_t i=Icanal; i<=Fcanal; i++){
  4065  001480  C29E  F2AD         	movff	main@Icanal,main@i_3326
  4066  001484  D009               	goto	l1068
  4067  001486                     
  4068                           ; BSR set to: 2
  4069                           ;UT.c: 182: SetChannelLoRaWan (i,1);
  4070                           
  4071                           ; BSR set to: 2
  4072  001486  0E01               	movlw	1
  4073  001488  0100               	movlb	0	; () banked
  4074  00148A  6FF1               	movwf	SetChannelLoRaWan@ligado& (0+255),b
  4075  00148C  0102               	movlb	2	; () banked
  4076  00148E  51AD               	movf	main@i_3326& (0+255),w,b
  4077  001490  EC89  F026         	call	_SetChannelLoRaWan
  4078  001494  0102               	movlb	2	; () banked
  4079  001496  2BAD               	incf	main@i_3326& (0+255),f,b
  4080  001498                     l1068:
  4081                           
  4082                           ; BSR set to: 2
  4083                           
  4084                           ; BSR set to: 2
  4085  001498  51AD               	movf	main@i_3326& (0+255),w,b
  4086  00149A  5DAB               	subwf	main@Fcanal& (0+255),w,b
  4087  00149C  B0D8               	btfsc	status,0,c
  4088  00149E  D7F3               	goto	l1069
  4089                           
  4090                           ; BSR set to: 2
  4091                           ;UT.c: 183: }
  4092                           ;UT.c: 184: if (retornaDado(0,7) == 1){
  4093                           
  4094                           ; BSR set to: 2
  4095  0014A0  0E07               	movlw	7
  4096  0014A2  0100               	movlb	0	; () banked
  4097  0014A4  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  4098  0014A6  0E00               	movlw	0
  4099  0014A8  EC26  F027         	call	_retornaDado
  4100  0014AC  06E8               	decf	wreg,f,c
  4101  0014AE  A4D8               	btfss	status,2,c
  4102  0014B0  D090               	goto	l1071
  4103                           
  4104                           ;UT.c: 185: SetAdr(STATE_OFF);
  4105  0014B2  0EF6               	movlw	low _STATE_OFF
  4106  0014B4  0100               	movlb	0	; () banked
  4107  0014B6  6FF1               	movwf	SetAdr@state& (0+255),b
  4108  0014B8  0E7D               	movlw	high _STATE_OFF
  4109  0014BA  6FF2               	movwf	(SetAdr@state+1)& (0+255),b
  4110  0014BC  EC90  F029         	call	_SetAdr	;wreg free
  4111                           
  4112                           ;UT.c: 186: uint8_t dr = retornaDado(2,3)<<3 | retornaDado(2,2)<<2 | retornaDado(2,1)<<1
      +                           | retornaDado(2,0);
  4113  0014C0  0E00               	movlw	0
  4114  0014C2  0100               	movlb	0	; () banked
  4115  0014C4  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  4116  0014C6  0E02               	movlw	2
  4117  0014C8  EC26  F027         	call	_retornaDado
  4118  0014CC  0100               	movlb	0	; () banked
  4119  0014CE  6FF6               	movwf	??_main& (0+255),b
  4120  0014D0  0E01               	movlw	1
  4121  0014D2  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  4122  0014D4  0E02               	movlw	2
  4123  0014D6  EC26  F027         	call	_retornaDado
  4124  0014DA  0100               	movlb	0	; () banked
  4125  0014DC  6FF7               	movwf	(??_main+1)& (0+255),b
  4126  0014DE  90D8               	bcf	status,0,c
  4127  0014E0  35F7               	rlcf	(??_main+1)& (0+255),w,b
  4128  0014E2  6FF8               	movwf	(??_main+2)& (0+255),b
  4129  0014E4  0E02               	movlw	2
  4130  0014E6  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  4131  0014E8  0E02               	movlw	2
  4132  0014EA  EC26  F027         	call	_retornaDado
  4133  0014EE  0100               	movlb	0	; () banked
  4134  0014F0  6FF9               	movwf	(??_main+3)& (0+255),b
  4135  0014F2  90D8               	bcf	status,0,c
  4136  0014F4  37F9               	rlcf	(??_main+3)& (0+255),f,b
  4137  0014F6  90D8               	bcf	status,0,c
  4138  0014F8  37F9               	rlcf	(??_main+3)& (0+255),f,b
  4139  0014FA  0E03               	movlw	3
  4140  0014FC  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  4141  0014FE  0E02               	movlw	2
  4142  001500  EC26  F027         	call	_retornaDado
  4143  001504  0100               	movlb	0	; () banked
  4144  001506  6FFA               	movwf	(??_main+4)& (0+255),b
  4145  001508  90D8               	bcf	status,0,c
  4146  00150A  37FA               	rlcf	(??_main+4)& (0+255),f,b
  4147  00150C  90D8               	bcf	status,0,c
  4148  00150E  37FA               	rlcf	(??_main+4)& (0+255),f,b
  4149  001510  90D8               	bcf	status,0,c
  4150  001512  35FA               	rlcf	(??_main+4)& (0+255),w,b
  4151  001514  11F9               	iorwf	(??_main+3)& (0+255),w,b
  4152  001516  11F8               	iorwf	(??_main+2)& (0+255),w,b
  4153  001518  11F6               	iorwf	??_main& (0+255),w,b
  4154  00151A  0102               	movlb	2	; () banked
  4155  00151C  6FAE               	movwf	main@dr& (0+255),b
  4156                           
  4157                           ; BSR set to: 2
  4158                           ;UT.c: 189: DataRate(dr);
  4159                           
  4160                           ; BSR set to: 2
  4161                           
  4162                           ; BSR set to: 2
  4163                           ;UT.c: 188: dr++;
  4164                           
  4165                           ; BSR set to: 2
  4166                           
  4167                           ;UT.c: 187: if (sizeof(dadoPoco)<11 && dr==0)
  4168  00151E  C2AE  F0F1         	movff	main@dr,DataRate@dr
  4169  001522  0100               	movlb	0	; () banked
  4170  001524  6BF2               	clrf	(DataRate@dr+1)& (0+255),b
  4171  001526  ECC8  F028         	call	_DataRate	;wreg free
  4172                           
  4173                           ;UT.c: 190: if (retornaDado(0,5) == 1){
  4174  00152A  0E05               	movlw	5
  4175  00152C  0100               	movlb	0	; () banked
  4176  00152E  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  4177  001530  0E00               	movlw	0
  4178  001532  EC26  F027         	call	_retornaDado
  4179  001536  06E8               	decf	wreg,f,c
  4180  001538  A4D8               	btfss	status,2,c
  4181  00153A  D052               	goto	l1076
  4182                           
  4183                           ;UT.c: 191: uint8_t sf = retornaDado(2,7)<<3 | retornaDado(2,6)<<2 | retornaDado(2,5)<<1
      +                           | retornaDado(2,4);
  4184  00153C  0E04               	movlw	4
  4185  00153E  0100               	movlb	0	; () banked
  4186  001540  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  4187  001542  0E02               	movlw	2
  4188  001544  EC26  F027         	call	_retornaDado
  4189  001548  0100               	movlb	0	; () banked
  4190  00154A  6FF6               	movwf	??_main& (0+255),b
  4191  00154C  0E05               	movlw	5
  4192  00154E  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  4193  001550  0E02               	movlw	2
  4194  001552  EC26  F027         	call	_retornaDado
  4195  001556  0100               	movlb	0	; () banked
  4196  001558  6FF7               	movwf	(??_main+1)& (0+255),b
  4197  00155A  90D8               	bcf	status,0,c
  4198  00155C  35F7               	rlcf	(??_main+1)& (0+255),w,b
  4199  00155E  6FF8               	movwf	(??_main+2)& (0+255),b
  4200  001560  0E06               	movlw	6
  4201  001562  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  4202  001564  0E02               	movlw	2
  4203  001566  EC26  F027         	call	_retornaDado
  4204  00156A  0100               	movlb	0	; () banked
  4205  00156C  6FF9               	movwf	(??_main+3)& (0+255),b
  4206  00156E  90D8               	bcf	status,0,c
  4207  001570  37F9               	rlcf	(??_main+3)& (0+255),f,b
  4208  001572  90D8               	bcf	status,0,c
  4209  001574  37F9               	rlcf	(??_main+3)& (0+255),f,b
  4210  001576  0E07               	movlw	7
  4211  001578  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  4212  00157A  0E02               	movlw	2
  4213  00157C  EC26  F027         	call	_retornaDado
  4214  001580  0100               	movlb	0	; () banked
  4215  001582  6FFA               	movwf	(??_main+4)& (0+255),b
  4216  001584  90D8               	bcf	status,0,c
  4217  001586  37FA               	rlcf	(??_main+4)& (0+255),f,b
  4218  001588  90D8               	bcf	status,0,c
  4219  00158A  37FA               	rlcf	(??_main+4)& (0+255),f,b
  4220  00158C  90D8               	bcf	status,0,c
  4221  00158E  35FA               	rlcf	(??_main+4)& (0+255),w,b
  4222  001590  11F9               	iorwf	(??_main+3)& (0+255),w,b
  4223  001592  11F8               	iorwf	(??_main+2)& (0+255),w,b
  4224  001594  11F6               	iorwf	??_main& (0+255),w,b
  4225  001596  0102               	movlb	2	; () banked
  4226  001598  6F9F               	movwf	main@sf& (0+255),b
  4227                           
  4228                           ; BSR set to: 2
  4229                           ;UT.c: 192: SetSpreadingFactor (sf);
  4230  00159A  519F               	movf	main@sf& (0+255),w,b
  4231  00159C  EC70  F029         	call	_SetSpreadingFactor
  4232                           
  4233                           ;UT.c: 193: if (retornaDado(0,6) == 0)
  4234  0015A0  0E06               	movlw	6
  4235  0015A2  0100               	movlb	0	; () banked
  4236  0015A4  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  4237  0015A6  0E00               	movlw	0
  4238  0015A8  EC26  F027         	call	_retornaDado
  4239  0015AC  0900               	iorlw	0
  4240  0015AE  A4D8               	btfss	status,2,c
  4241  0015B0  D008               	goto	l1074
  4242                           
  4243                           ;UT.c: 194: SetBandWidth (125);
  4244  0015B2  0E00               	movlw	0
  4245  0015B4  0100               	movlb	0	; () banked
  4246  0015B6  6FF2               	movwf	(SetBandWidth@bw+1)& (0+255),b
  4247  0015B8  0E7D               	movlw	125
  4248  0015BA  6FF1               	movwf	SetBandWidth@bw& (0+255),b
  4249  0015BC  ECA5  F028         	call	_SetBandWidth	;wreg free
  4250  0015C0  D00F               	goto	l1076
  4251  0015C2                     l1074:
  4252                           
  4253                           ;UT.c: 195: else
  4254                           ;UT.c: 196: SetBandWidth (500);
  4255  0015C2  0E01               	movlw	1
  4256  0015C4  0100               	movlb	0	; () banked
  4257  0015C6  6FF2               	movwf	(SetBandWidth@bw+1)& (0+255),b
  4258  0015C8  0EF4               	movlw	244
  4259  0015CA  6FF1               	movwf	SetBandWidth@bw& (0+255),b
  4260  0015CC  ECA5  F028         	call	_SetBandWidth	;wreg free
  4261                           
  4262                           ;UT.c: 197: }}
  4263  0015D0  D007               	goto	l1076
  4264  0015D2                     l1071:
  4265                           
  4266                           ;UT.c: 198: else
  4267                           ;UT.c: 199: SetAdr(STATE_ON);
  4268  0015D2  0EFA               	movlw	low _STATE_ON
  4269  0015D4  0100               	movlb	0	; () banked
  4270  0015D6  6FF1               	movwf	SetAdr@state& (0+255),b
  4271  0015D8  0E7D               	movlw	high _STATE_ON
  4272  0015DA  6FF2               	movwf	(SetAdr@state+1)& (0+255),b
  4273  0015DC  EC90  F029         	call	_SetAdr	;wreg free
  4274  0015E0                     l1076:
  4275                           
  4276                           ;UT.c: 200: MacSave();
  4277  0015E0  EC07  F02A         	call	_MacSave	;wreg free
  4278  0015E4                     l1064:
  4279                           
  4280                           ;UT.c: 201: }
  4281                           ;UT.c: 203: dadoPoco.feedback1=feedback1;
  4282  0015E4  C2F0  F2B2         	movff	_feedback1,main@dadoPoco
  4283                           
  4284                           ;UT.c: 204: dadoPoco.feedback2=feedback2;
  4285  0015E8  C2EF  F2B3         	movff	_feedback2,main@dadoPoco+1
  4286                           
  4287                           ;UT.c: 206: uint8_t resp=TxLoRaWan(1, 3, (const uint8_t*)&dadoPoco, sizeof(dadoPoco));
  4288  0015EC  0E03               	movlw	3
  4289  0015EE  0100               	movlb	0	; () banked
  4290  0015F0  6FF1               	movwf	TxLoRaWan@porta& (0+255),b
  4291  0015F2  0EB2               	movlw	low main@dadoPoco
  4292  0015F4  6FF2               	movwf	TxLoRaWan@data& (0+255),b
  4293  0015F6  0E02               	movlw	high main@dadoPoco
  4294  0015F8  6FF3               	movwf	(TxLoRaWan@data+1)& (0+255),b
  4295  0015FA  0E16               	movlw	22
  4296  0015FC  6FF4               	movwf	TxLoRaWan@tamData& (0+255),b
  4297  0015FE  0E01               	movlw	1
  4298  001600  ECF4  F00D         	call	_TxLoRaWan
  4299  001604  0102               	movlb	2	; () banked
  4300  001606  6FA0               	movwf	main@resp& (0+255),b
  4301                           
  4302                           ; BSR set to: 2
  4303                           ;UT.c: 208: if (resp == 0){
  4304  001608  51A0               	movf	main@resp& (0+255),w,b
  4305  00160A  A4D8               	btfss	status,2,c
  4306  00160C  D017               	goto	l1078
  4307                           
  4308                           ; BSR set to: 2
  4309                           ;UT.c: 209: contador++;
  4310  00160E  2BA1               	incf	main@contador& (0+255),f,b
  4311                           
  4312                           ; BSR set to: 2
  4313                           ;UT.c: 210: if (contador > 2 ){
  4314  001610  0E02               	movlw	2
  4315  001612  65A1               	cpfsgt	main@contador& (0+255),b
  4316  001614  D013               	goto	l1078
  4317                           
  4318                           ; BSR set to: 2
  4319                           ;UT.c: 211: SetAdr(STATE_OFF);
  4320  001616  0EF6               	movlw	low _STATE_OFF
  4321  001618  0100               	movlb	0	; () banked
  4322  00161A  6FF1               	movwf	SetAdr@state& (0+255),b
  4323  00161C  0E7D               	movlw	high _STATE_OFF
  4324  00161E  6FF2               	movwf	(SetAdr@state+1)& (0+255),b
  4325  001620  EC90  F029         	call	_SetAdr	;wreg free
  4326                           
  4327                           ;UT.c: 212: DataRate(1);
  4328  001624  0E00               	movlw	0
  4329  001626  0100               	movlb	0	; () banked
  4330  001628  6FF2               	movwf	(DataRate@dr+1)& (0+255),b
  4331  00162A  0E01               	movlw	1
  4332  00162C  6FF1               	movwf	DataRate@dr& (0+255),b
  4333  00162E  ECC8  F028         	call	_DataRate	;wreg free
  4334                           
  4335                           ;UT.c: 213: MacSave();
  4336  001632  EC07  F02A         	call	_MacSave	;wreg free
  4337                           
  4338                           ;UT.c: 214: contador=0;
  4339  001636  0E00               	movlw	0
  4340  001638  0102               	movlb	2	; () banked
  4341  00163A  6FA1               	movwf	main@contador& (0+255),b
  4342  00163C                     l1078:
  4343                           
  4344                           ; BSR set to: 2
  4345                           ;UT.c: 215: }
  4346                           ;UT.c: 216: }
  4347                           ;UT.c: 222: if (verificaUSB() && (cdc_trf_state == 0))
  4348                           
  4349                           ; BSR set to: 2
  4350                           
  4351                           ; BSR set to: 2
  4352  00163C  EC57  F02A         	call	_verificaUSB	;wreg free
  4353  001640  0900               	iorlw	0
  4354  001642  B4D8               	btfsc	status,2,c
  4355  001644  D052               	goto	l1079
  4356  001646  0102               	movlb	2	; () banked
  4357  001648  51E5               	movf	_cdc_trf_state& (0+255),w,b
  4358  00164A  A4D8               	btfss	status,2,c
  4359  00164C  D04E               	goto	l1079
  4360                           
  4361                           ; BSR set to: 2
  4362                           ;UT.c: 223: {
  4363                           ;UT.c: 224: char data[150];
  4364                           ;UT.c: 226: sprintf(data,"resposta: %2X %2X %2X %2X %2X %2X %2X %2X %2X %2X  %d  %d  %d 
      +                           %d  %d  %d  %d  %d  %d  %d  %d  %d \n\r",
  4365                           ;UT.c: 227: dadosRecebidos[0].data,
  4366                           ;UT.c: 228: dadosRecebidos[1].data,
  4367                           ;UT.c: 229: dadosRecebidos[2].data,
  4368                           ;UT.c: 230: dadosRecebidos[3].data,
  4369                           ;UT.c: 231: dadosRecebidos[4].data,
  4370                           ;UT.c: 232: dadosRecebidos[5].data,
  4371                           ;UT.c: 233: dadosRecebidos[6].data,
  4372                           ;UT.c: 234: dadosRecebidos[7].data,
  4373                           ;UT.c: 235: dadosRecebidos[8].data,
  4374                           ;UT.c: 236: dadosRecebidos[9].data,
  4375  00164E  0E00               	movlw	low main@data
  4376  001650  0100               	movlb	0	; () banked
  4377  001652  6FBF               	movwf	sprintf@sp& (0+255),b
  4378  001654  0E02               	movlw	high main@data
  4379  001656  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  4380  001658  0E13               	movlw	low STR_1
  4381  00165A  6FC1               	movwf	sprintf@f& (0+255),b
  4382  00165C  0E7E               	movlw	high STR_1
  4383  00165E  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  4384  001660  C301  F0C3         	movff	_dadosRecebidos+1,?_sprintf+4	;volatile
  4385  001664  6BC4               	clrf	(?_sprintf+5)& (0+255),b
  4386  001666  C303  F0C5         	movff	_dadosRecebidos+3,?_sprintf+6	;volatile
  4387  00166A  6BC6               	clrf	(?_sprintf+7)& (0+255),b
  4388  00166C  C305  F0C7         	movff	_dadosRecebidos+5,?_sprintf+8	;volatile
  4389  001670  6BC8               	clrf	(?_sprintf+9)& (0+255),b
  4390  001672  C307  F0C9         	movff	_dadosRecebidos+7,?_sprintf+10	;volatile
  4391  001676  6BCA               	clrf	(?_sprintf+11)& (0+255),b
  4392  001678  C309  F0CB         	movff	_dadosRecebidos+9,?_sprintf+12	;volatile
  4393  00167C  6BCC               	clrf	(?_sprintf+13)& (0+255),b
  4394  00167E  C30B  F0CD         	movff	_dadosRecebidos+11,?_sprintf+14	;volatile
  4395  001682  6BCE               	clrf	(?_sprintf+15)& (0+255),b
  4396  001684  C30D  F0CF         	movff	_dadosRecebidos+13,?_sprintf+16	;volatile
  4397  001688  6BD0               	clrf	(?_sprintf+17)& (0+255),b
  4398  00168A  C30F  F0D1         	movff	_dadosRecebidos+15,?_sprintf+18	;volatile
  4399  00168E  6BD2               	clrf	(?_sprintf+19)& (0+255),b
  4400  001690  C311  F0D3         	movff	_dadosRecebidos+17,?_sprintf+20	;volatile
  4401  001694  6BD4               	clrf	(?_sprintf+21)& (0+255),b
  4402  001696  C313  F0D5         	movff	_dadosRecebidos+19,?_sprintf+22	;volatile
  4403  00169A  6BD6               	clrf	(?_sprintf+23)& (0+255),b
  4404  00169C  C300  F0D7         	movff	_dadosRecebidos,?_sprintf+24	;volatile
  4405  0016A0  6BD8               	clrf	(?_sprintf+25)& (0+255),b
  4406  0016A2  C302  F0D9         	movff	_dadosRecebidos+2,?_sprintf+26	;volatile
  4407  0016A6  6BDA               	clrf	(?_sprintf+27)& (0+255),b
  4408  0016A8  C304  F0DB         	movff	_dadosRecebidos+4,?_sprintf+28	;volatile
  4409  0016AC  6BDC               	clrf	(?_sprintf+29)& (0+255),b
  4410  0016AE  C306  F0DD         	movff	_dadosRecebidos+6,?_sprintf+30	;volatile
  4411  0016B2  6BDE               	clrf	(?_sprintf+31)& (0+255),b
  4412  0016B4  C308  F0DF         	movff	_dadosRecebidos+8,?_sprintf+32	;volatile
  4413  0016B8  6BE0               	clrf	(?_sprintf+33)& (0+255),b
  4414  0016BA  C30A  F0E1         	movff	_dadosRecebidos+10,?_sprintf+34	;volatile
  4415  0016BE  6BE2               	clrf	(?_sprintf+35)& (0+255),b
  4416  0016C0  C30C  F0E3         	movff	_dadosRecebidos+12,?_sprintf+36	;volatile
  4417  0016C4  6BE4               	clrf	(?_sprintf+37)& (0+255),b
  4418  0016C6  C30E  F0E5         	movff	_dadosRecebidos+14,?_sprintf+38	;volatile
  4419  0016CA  6BE6               	clrf	(?_sprintf+39)& (0+255),b
  4420  0016CC  C310  F0E7         	movff	_dadosRecebidos+16,?_sprintf+40	;volatile
  4421  0016D0  6BE8               	clrf	(?_sprintf+41)& (0+255),b
  4422  0016D2  C2EA  F0E9         	movff	_pulsos1,?_sprintf+42
  4423  0016D6  6BEA               	clrf	(?_sprintf+43)& (0+255),b
  4424  0016D8  EC09  F000         	call	_sprintf	;wreg free
  4425                           
  4426                           ;UT.c: 248: putsUSBUSART(data);
  4427  0016DC  0E00               	movlw	low main@data
  4428  0016DE  0100               	movlb	0	; () banked
  4429  0016E0  6F60               	movwf	putsUSBUSART@data& (0+255),b
  4430  0016E2  0E02               	movlw	high main@data
  4431  0016E4  6F61               	movwf	(putsUSBUSART@data+1)& (0+255),b
  4432  0016E6  EC36  F028         	call	_putsUSBUSART	;wreg free
  4433  0016EA                     l1079:
  4434                           
  4435                           ;UT.c: 249: }
  4436                           ;UT.c: 250: uint32_t deltaTempo=(millis()-tempo);
  4437  0016EA  C296  F0F6         	movff	main@tempo,??_main
  4438  0016EE  C297  F0F7         	movff	main@tempo+1,??_main+1
  4439  0016F2  C298  F0F8         	movff	main@tempo+2,??_main+2
  4440  0016F6  C299  F0F9         	movff	main@tempo+3,??_main+3
  4441  0016FA  0100               	movlb	0	; () banked
  4442  0016FC  1FF6               	comf	??_main& (0+255),f,b
  4443  0016FE  1FF7               	comf	(??_main+1)& (0+255),f,b
  4444  001700  1FF8               	comf	(??_main+2)& (0+255),f,b
  4445  001702  1FF9               	comf	(??_main+3)& (0+255),f,b
  4446  001704  2BF6               	incf	??_main& (0+255),f,b
  4447  001706  0E00               	movlw	0
  4448  001708  23F7               	addwfc	(??_main+1)& (0+255),f,b
  4449  00170A  23F8               	addwfc	(??_main+2)& (0+255),f,b
  4450  00170C  23F9               	addwfc	(??_main+3)& (0+255),f,b
  4451  00170E  EC06  F02B         	call	_millis	;wreg free
  4452  001712  0100               	movlb	0	; () banked
  4453  001714  51F6               	movf	??_main& (0+255),w,b
  4454  001716  2560               	addwf	?_millis& (0+255),w,b
  4455  001718  0102               	movlb	2	; () banked
  4456  00171A  6FA2               	movwf	main@deltaTempo& (0+255),b
  4457  00171C  0100               	movlb	0	; () banked
  4458  00171E  51F7               	movf	(??_main+1)& (0+255),w,b
  4459  001720  2161               	addwfc	(?_millis+1)& (0+255),w,b
  4460  001722  0102               	movlb	2	; () banked
  4461  001724  6FA3               	movwf	(main@deltaTempo+1)& (0+255),b
  4462  001726  0100               	movlb	0	; () banked
  4463  001728  51F8               	movf	(??_main+2)& (0+255),w,b
  4464  00172A  2162               	addwfc	(?_millis+2)& (0+255),w,b
  4465  00172C  0102               	movlb	2	; () banked
  4466  00172E  6FA4               	movwf	(main@deltaTempo+2)& (0+255),b
  4467  001730  0100               	movlb	0	; () banked
  4468  001732  51F9               	movf	(??_main+3)& (0+255),w,b
  4469  001734  2163               	addwfc	(?_millis+3)& (0+255),w,b
  4470  001736  0102               	movlb	2	; () banked
  4471  001738  6FA5               	movwf	(main@deltaTempo+3)& (0+255),b
  4472                           
  4473                           ; BSR set to: 2
  4474                           ;UT.c: 251: if (deltaTempo<30000)
  4475  00173A  51A5               	movf	(main@deltaTempo+3)& (0+255),w,b
  4476  00173C  11A4               	iorwf	(main@deltaTempo+2)& (0+255),w,b
  4477  00173E  E105               	bnz	u11041
  4478  001740  0E30               	movlw	48
  4479  001742  5DA2               	subwf	main@deltaTempo& (0+255),w,b
  4480  001744  0E75               	movlw	117
  4481  001746  59A3               	subwfb	(main@deltaTempo+1)& (0+255),w,b
  4482  001748  B0D8               	btfsc	status,0,c
  4483  00174A                     u11041:
  4484  00174A  EF87  F007         	goto	l1063
  4485                           
  4486                           ; BSR set to: 2
  4487                           ;UT.c: 252: {
  4488                           ;UT.c: 253: uint32_t tempoTimeOut=30000-deltaTempo;
  4489  00174E  C2A2  F0F6         	movff	main@deltaTempo,??_main
  4490  001752  C2A3  F0F7         	movff	main@deltaTempo+1,??_main+1
  4491  001756  C2A4  F0F8         	movff	main@deltaTempo+2,??_main+2
  4492  00175A  C2A5  F0F9         	movff	main@deltaTempo+3,??_main+3
  4493  00175E  0100               	movlb	0	; () banked
  4494  001760  1FF6               	comf	??_main& (0+255),f,b
  4495  001762  1FF7               	comf	(??_main+1)& (0+255),f,b
  4496  001764  1FF8               	comf	(??_main+2)& (0+255),f,b
  4497  001766  1FF9               	comf	(??_main+3)& (0+255),f,b
  4498  001768  2BF6               	incf	??_main& (0+255),f,b
  4499  00176A  0E00               	movlw	0
  4500  00176C  23F7               	addwfc	(??_main+1)& (0+255),f,b
  4501  00176E  23F8               	addwfc	(??_main+2)& (0+255),f,b
  4502  001770  23F9               	addwfc	(??_main+3)& (0+255),f,b
  4503  001772  0E30               	movlw	48
  4504  001774  25F6               	addwf	??_main& (0+255),w,b
  4505  001776  0102               	movlb	2	; () banked
  4506  001778  6F9A               	movwf	main@tempoTimeOut& (0+255),b
  4507  00177A  0E75               	movlw	117
  4508  00177C  0100               	movlb	0	; () banked
  4509  00177E  21F7               	addwfc	(??_main+1)& (0+255),w,b
  4510  001780  0102               	movlb	2	; () banked
  4511  001782  6F9B               	movwf	(main@tempoTimeOut+1)& (0+255),b
  4512  001784  0E00               	movlw	0
  4513  001786  0100               	movlb	0	; () banked
  4514  001788  21F8               	addwfc	(??_main+2)& (0+255),w,b
  4515  00178A  0102               	movlb	2	; () banked
  4516  00178C  6F9C               	movwf	(main@tempoTimeOut+2)& (0+255),b
  4517  00178E  0E00               	movlw	0
  4518  001790  0100               	movlb	0	; () banked
  4519  001792  21F9               	addwfc	(??_main+3)& (0+255),w,b
  4520  001794  0102               	movlb	2	; () banked
  4521  001796  6F9D               	movwf	(main@tempoTimeOut+3)& (0+255),b
  4522                           
  4523                           ; BSR set to: 2
  4524                           ;UT.c: 254: delay(tempoTimeOut);
  4525  001798  C29A  F06D         	movff	main@tempoTimeOut,delay@time
  4526  00179C  C29B  F06E         	movff	main@tempoTimeOut+1,delay@time+1
  4527  0017A0  C29C  F06F         	movff	main@tempoTimeOut+2,delay@time+2
  4528  0017A4  C29D  F070         	movff	main@tempoTimeOut+3,delay@time+3
  4529  0017A8  EC17  F026         	call	_delay	;wreg free
  4530  0017AC  EF87  F007         	goto	l1063
  4531  0017B0                     __end_of_main:
  4532                           	opt stack 0
  4533                           tblptru	equ	0xFF8
  4534                           tblptrh	equ	0xFF7
  4535                           tblptrl	equ	0xFF6
  4536                           tablat	equ	0xFF5
  4537                           postinc0	equ	0xFEE
  4538                           wreg	equ	0xFE8
  4539                           postdec1	equ	0xFE5
  4540                           fsr1l	equ	0xFE1
  4541                           status	equ	0xFD8
  4542                           
  4543 ;; *************** function _setup_uart *****************
  4544 ;; Defined at:
  4545 ;;		line 13 in file "uart/uart.c"
  4546 ;; Parameters:    Size  Location     Type
  4547 ;;  baudRate        4   13[BANK0 ] unsigned long 
  4548 ;; Auto vars:     Size  Location     Type
  4549 ;;  brg             4   17[BANK0 ] unsigned long 
  4550 ;; Return value:  Size  Location     Type
  4551 ;;                  1    wreg      void 
  4552 ;; Registers used:
  4553 ;;		wreg, status,2, status,0, cstack
  4554 ;; Tracked objects:
  4555 ;;		On entry : 0/0
  4556 ;;		On exit  : 0/0
  4557 ;;		Unchanged: 0/0
  4558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4559 ;;      Params:         0       4       0       0       0       0       0       0       0
  4560 ;;      Locals:         0       4       0       0       0       0       0       0       0
  4561 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4562 ;;      Totals:         0       8       0       0       0       0       0       0       0
  4563 ;;Total ram usage:        8 bytes
  4564 ;; Hardware stack levels used:    1
  4565 ;; Hardware stack levels required when called:   11
  4566 ;; This function calls:
  4567 ;;		___lldiv
  4568 ;; This function is called by:
  4569 ;;		_main
  4570 ;; This function uses a non-reentrant model
  4571 ;;
  4572                           
  4573                           	psect	text1
  4574  00450A                     __ptext1:
  4575                           	opt stack 0
  4576  00450A                     _setup_uart:
  4577                           	opt stack 19
  4578                           
  4579                           ;uart.c: 15: uint32_t brg;
  4580                           ;uart.c: 17: PORTCbits.RC6=1;
  4581                           
  4582                           ;incstack = 0
  4583  00450A  8C82               	bsf	3970,6,c	;volatile
  4584                           
  4585                           ;uart.c: 18: TRISCbits.RC6=0;
  4586  00450C  9C94               	bcf	3988,6,c	;volatile
  4587                           
  4588                           ;uart.c: 20: PORTCbits.RC7=1;
  4589  00450E  8E82               	bsf	3970,7,c	;volatile
  4590                           
  4591                           ;uart.c: 21: TRISCbits.RC7=1;
  4592  004510  8E94               	bsf	3988,7,c	;volatile
  4593                           
  4594                           ;uart.c: 23: TXSTAbits.BRGH=1;
  4595  004512  84AC               	bsf	4012,2,c	;volatile
  4596                           
  4597                           ;uart.c: 24: BAUDCONbits.BRG16=1;
  4598  004514  86B8               	bsf	4024,3,c	;volatile
  4599                           
  4600                           ;uart.c: 25: brg = ((48000000*10/4)/(baudRate)-5);
  4601  004516  0E00               	movlw	0
  4602  004518  0100               	movlb	0	; () banked
  4603  00451A  6F60               	movwf	___lldiv@dividend& (0+255),b
  4604  00451C  0E0E               	movlw	14
  4605  00451E  6F61               	movwf	(___lldiv@dividend+1)& (0+255),b
  4606  004520  0E27               	movlw	39
  4607  004522  6F62               	movwf	(___lldiv@dividend+2)& (0+255),b
  4608  004524  0E07               	movlw	7
  4609  004526  6F63               	movwf	(___lldiv@dividend+3)& (0+255),b
  4610  004528  C06D  F064         	movff	setup_uart@baudRate,___lldiv@divisor
  4611  00452C  C06E  F065         	movff	setup_uart@baudRate+1,___lldiv@divisor+1
  4612  004530  C06F  F066         	movff	setup_uart@baudRate+2,___lldiv@divisor+2
  4613  004534  C070  F067         	movff	setup_uart@baudRate+3,___lldiv@divisor+3
  4614  004538  EC1E  F025         	call	___lldiv	;wreg free
  4615  00453C  0EFB               	movlw	251
  4616  00453E  0100               	movlb	0	; () banked
  4617  004540  2560               	addwf	?___lldiv& (0+255),w,b
  4618  004542  6F71               	movwf	setup_uart@brg& (0+255),b
  4619  004544  0EFF               	movlw	255
  4620  004546  2161               	addwfc	(?___lldiv+1)& (0+255),w,b
  4621  004548  6F72               	movwf	(setup_uart@brg+1)& (0+255),b
  4622  00454A  0EFF               	movlw	255
  4623  00454C  2162               	addwfc	(?___lldiv+2)& (0+255),w,b
  4624  00454E  6F73               	movwf	(setup_uart@brg+2)& (0+255),b
  4625  004550  0EFF               	movlw	255
  4626  004552  2163               	addwfc	(?___lldiv+3)& (0+255),w,b
  4627  004554  6F74               	movwf	(setup_uart@brg+3)& (0+255),b
  4628                           
  4629                           ;uart.c: 26: brg /= 10;
  4630  004556  C071  F060         	movff	setup_uart@brg,___lldiv@dividend
  4631  00455A  C072  F061         	movff	setup_uart@brg+1,___lldiv@dividend+1
  4632  00455E  C073  F062         	movff	setup_uart@brg+2,___lldiv@dividend+2
  4633  004562  C074  F063         	movff	setup_uart@brg+3,___lldiv@dividend+3
  4634  004566  0E0A               	movlw	10
  4635  004568  6F64               	movwf	___lldiv@divisor& (0+255),b
  4636  00456A  0E00               	movlw	0
  4637  00456C  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  4638  00456E  0E00               	movlw	0
  4639  004570  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  4640  004572  0E00               	movlw	0
  4641  004574  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  4642  004576  EC1E  F025         	call	___lldiv	;wreg free
  4643  00457A  C060  F071         	movff	?___lldiv,setup_uart@brg
  4644  00457E  C061  F072         	movff	?___lldiv+1,setup_uart@brg+1
  4645  004582  C062  F073         	movff	?___lldiv+2,setup_uart@brg+2
  4646  004586  C063  F074         	movff	?___lldiv+3,setup_uart@brg+3
  4647                           
  4648                           ;uart.c: 27: SPBRG=(uint8_t)brg;
  4649  00458A  C071  FFAF         	movff	setup_uart@brg,4015	;volatile
  4650                           
  4651                           ;uart.c: 28: SPBRGH=(uint8_t)(brg >> 8);
  4652  00458E  C072  FFB0         	movff	setup_uart@brg+1,4016	;volatile
  4653                           
  4654                           ;uart.c: 30: TXSTAbits.SYNC=0;
  4655  004592  98AC               	bcf	4012,4,c	;volatile
  4656                           
  4657                           ;uart.c: 31: TXSTAbits.SENDB=0;
  4658  004594  96AC               	bcf	4012,3,c	;volatile
  4659                           
  4660                           ;uart.c: 32: RCSTAbits.SPEN=1;
  4661  004596  8EAB               	bsf	4011,7,c	;volatile
  4662                           
  4663                           ;uart.c: 34: BAUDCONbits.TXCKP=0;
  4664  004598  98B8               	bcf	4024,4,c	;volatile
  4665                           
  4666                           ;uart.c: 35: BAUDCONbits.RXDTP=0;
  4667  00459A  9AB8               	bcf	4024,5,c	;volatile
  4668                           
  4669                           ;uart.c: 36: BAUDCONbits.ABDEN=0;
  4670  00459C  90B8               	bcf	4024,0,c	;volatile
  4671                           
  4672                           ;uart.c: 37: TXSTAbits.TX9=0;
  4673  00459E  9CAC               	bcf	4012,6,c	;volatile
  4674                           
  4675                           ;uart.c: 38: RCSTAbits.RX9=0;
  4676  0045A0  9CAB               	bcf	4011,6,c	;volatile
  4677                           
  4678                           ;uart.c: 40: RCSTAbits.CREN=1;
  4679  0045A2  88AB               	bsf	4011,4,c	;volatile
  4680                           
  4681                           ;uart.c: 41: TXSTAbits.TXEN=1;
  4682  0045A4  8AAC               	bsf	4012,5,c	;volatile
  4683                           
  4684                           ;uart.c: 43: RCIE=1;
  4685  0045A6  8A9D               	bsf	3997,5,c	;volatile
  4686  0045A8  0012               	return		;funcret
  4687  0045AA                     __end_of_setup_uart:
  4688                           	opt stack 0
  4689                           tblptru	equ	0xFF8
  4690                           tblptrh	equ	0xFF7
  4691                           tblptrl	equ	0xFF6
  4692                           tablat	equ	0xFF5
  4693                           postinc0	equ	0xFEE
  4694                           wreg	equ	0xFE8
  4695                           postdec1	equ	0xFE5
  4696                           fsr1l	equ	0xFE1
  4697                           status	equ	0xFD8
  4698                           
  4699 ;; *************** function _setup_pulsos *****************
  4700 ;; Defined at:
  4701 ;;		line 10 in file "Pulses.c"
  4702 ;; Parameters:    Size  Location     Type
  4703 ;;		None
  4704 ;; Auto vars:     Size  Location     Type
  4705 ;;		None
  4706 ;; Return value:  Size  Location     Type
  4707 ;;                  1    wreg      void 
  4708 ;; Registers used:
  4709 ;;		wreg, status,2
  4710 ;; Tracked objects:
  4711 ;;		On entry : 0/0
  4712 ;;		On exit  : 0/0
  4713 ;;		Unchanged: 0/0
  4714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4715 ;;      Params:         0       0       0       0       0       0       0       0       0
  4716 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4717 ;;      Temps:          0       1       0       0       0       0       0       0       0
  4718 ;;      Totals:         0       1       0       0       0       0       0       0       0
  4719 ;;Total ram usage:        1 bytes
  4720 ;; Hardware stack levels used:    1
  4721 ;; Hardware stack levels required when called:   10
  4722 ;; This function calls:
  4723 ;;		Nothing
  4724 ;; This function is called by:
  4725 ;;		_main
  4726 ;; This function uses a non-reentrant model
  4727 ;;
  4728                           
  4729                           	psect	text2
  4730  00431C                     __ptext2:
  4731                           	opt stack 0
  4732  00431C                     _setup_pulsos:
  4733                           	opt stack 20
  4734                           
  4735                           ;Pulses.c: 12: TRISDbits.RD0=1;
  4736                           
  4737                           ;incstack = 0
  4738  00431C  8095               	bsf	3989,0,c	;volatile
  4739                           
  4740                           ;Pulses.c: 13: dig_1=PORTDbits.RD0;
  4741  00431E  A083               	btfss	3971,0,c	;volatile
  4742  004320  D004               	goto	u9520
  4743  004322  0100               	movlb	0	; () banked
  4744  004324  6B60               	clrf	??_setup_pulsos& (0+255),b
  4745  004326  2B60               	incf	??_setup_pulsos& (0+255),f,b
  4746  004328  D002               	goto	u9528
  4747  00432A                     u9520:
  4748  00432A  0100               	movlb	0	; () banked
  4749  00432C  6B60               	clrf	??_setup_pulsos& (0+255),b
  4750  00432E                     u9528:
  4751  00432E  5160               	movf	??_setup_pulsos& (0+255),w,b
  4752  004330  0102               	movlb	2	; () banked
  4753  004332  6FDE               	movwf	_dig_1& (0+255),b	;volatile
  4754  004334  6BDF               	clrf	(_dig_1+1)& (0+255),b	;volatile
  4755                           
  4756                           ; BSR set to: 2
  4757                           ;Pulses.c: 14: TRISDbits.RD1=1;
  4758  004336  8295               	bsf	3989,1,c	;volatile
  4759                           
  4760                           ;Pulses.c: 15: dig_2=PORTDbits.RD1;
  4761  004338  A283               	btfss	3971,1,c	;volatile
  4762  00433A  D004               	goto	u9530
  4763  00433C  0100               	movlb	0	; () banked
  4764  00433E  6B60               	clrf	??_setup_pulsos& (0+255),b
  4765  004340  2B60               	incf	??_setup_pulsos& (0+255),f,b
  4766  004342  D002               	goto	u9538
  4767  004344                     u9530:
  4768  004344  0100               	movlb	0	; () banked
  4769  004346  6B60               	clrf	??_setup_pulsos& (0+255),b
  4770  004348                     u9538:
  4771  004348  5160               	movf	??_setup_pulsos& (0+255),w,b
  4772  00434A  0102               	movlb	2	; () banked
  4773  00434C  6FDC               	movwf	_dig_2& (0+255),b	;volatile
  4774  00434E  6BDD               	clrf	(_dig_2+1)& (0+255),b	;volatile
  4775                           
  4776                           ; BSR set to: 2
  4777                           ;Pulses.c: 16: TRISDbits.RD2=1;
  4778  004350  8495               	bsf	3989,2,c	;volatile
  4779                           
  4780                           ;Pulses.c: 17: dig_3=PORTDbits.RD2;
  4781  004352  A483               	btfss	3971,2,c	;volatile
  4782  004354  D004               	goto	u9540
  4783  004356  0100               	movlb	0	; () banked
  4784  004358  6B60               	clrf	??_setup_pulsos& (0+255),b
  4785  00435A  2B60               	incf	??_setup_pulsos& (0+255),f,b
  4786  00435C  D002               	goto	u9548
  4787  00435E                     u9540:
  4788  00435E  0100               	movlb	0	; () banked
  4789  004360  6B60               	clrf	??_setup_pulsos& (0+255),b
  4790  004362                     u9548:
  4791  004362  5160               	movf	??_setup_pulsos& (0+255),w,b
  4792  004364  0102               	movlb	2	; () banked
  4793  004366  6FDA               	movwf	_dig_3& (0+255),b	;volatile
  4794  004368  6BDB               	clrf	(_dig_3+1)& (0+255),b	;volatile
  4795                           
  4796                           ; BSR set to: 2
  4797                           ;Pulses.c: 18: TRISDbits.RD3=1;
  4798  00436A  8695               	bsf	3989,3,c	;volatile
  4799                           
  4800                           ;Pulses.c: 19: dig_4=PORTDbits.RD3;
  4801  00436C  A683               	btfss	3971,3,c	;volatile
  4802  00436E  D004               	goto	u9550
  4803  004370  0100               	movlb	0	; () banked
  4804  004372  6B60               	clrf	??_setup_pulsos& (0+255),b
  4805  004374  2B60               	incf	??_setup_pulsos& (0+255),f,b
  4806  004376  D002               	goto	u9558
  4807  004378                     u9550:
  4808  004378  0100               	movlb	0	; () banked
  4809  00437A  6B60               	clrf	??_setup_pulsos& (0+255),b
  4810  00437C                     u9558:
  4811  00437C  5160               	movf	??_setup_pulsos& (0+255),w,b
  4812  00437E  0103               	movlb	3	; () banked
  4813  004380  6F4E               	movwf	_dig_4& (0+255),b	;volatile
  4814  004382  6B4F               	clrf	(_dig_4+1)& (0+255),b	;volatile
  4815                           
  4816                           ;Pulses.c: 20: freqPulses1=0;
  4817  004384  0E00               	movlw	0
  4818  004386  6F3A               	movwf	_freqPulses1& (0+255),b	;volatile
  4819  004388  0E00               	movlw	0
  4820  00438A  6F3B               	movwf	(_freqPulses1+1)& (0+255),b	;volatile
  4821  00438C  0E00               	movlw	0
  4822  00438E  6F3C               	movwf	(_freqPulses1+2)& (0+255),b	;volatile
  4823  004390  0E00               	movlw	0
  4824  004392  6F3D               	movwf	(_freqPulses1+3)& (0+255),b	;volatile
  4825                           
  4826                           ;Pulses.c: 21: freqPulses2=0;
  4827  004394  0E00               	movlw	0
  4828  004396  6F36               	movwf	_freqPulses2& (0+255),b	;volatile
  4829  004398  0E00               	movlw	0
  4830  00439A  6F37               	movwf	(_freqPulses2+1)& (0+255),b	;volatile
  4831  00439C  0E00               	movlw	0
  4832  00439E  6F38               	movwf	(_freqPulses2+2)& (0+255),b	;volatile
  4833  0043A0  0E00               	movlw	0
  4834  0043A2  6F39               	movwf	(_freqPulses2+3)& (0+255),b	;volatile
  4835                           
  4836                           ;Pulses.c: 22: freqPulses3=0;
  4837  0043A4  0E00               	movlw	0
  4838  0043A6  6F32               	movwf	_freqPulses3& (0+255),b	;volatile
  4839  0043A8  0E00               	movlw	0
  4840  0043AA  6F33               	movwf	(_freqPulses3+1)& (0+255),b	;volatile
  4841  0043AC  0E00               	movlw	0
  4842  0043AE  6F34               	movwf	(_freqPulses3+2)& (0+255),b	;volatile
  4843  0043B0  0E00               	movlw	0
  4844  0043B2  6F35               	movwf	(_freqPulses3+3)& (0+255),b	;volatile
  4845                           
  4846                           ;Pulses.c: 23: freqPulses4=0;
  4847  0043B4  0E00               	movlw	0
  4848  0043B6  6F2E               	movwf	_freqPulses4& (0+255),b	;volatile
  4849  0043B8  0E00               	movlw	0
  4850  0043BA  6F2F               	movwf	(_freqPulses4+1)& (0+255),b	;volatile
  4851  0043BC  0E00               	movlw	0
  4852  0043BE  6F30               	movwf	(_freqPulses4+2)& (0+255),b	;volatile
  4853  0043C0  0E00               	movlw	0
  4854  0043C2  6F31               	movwf	(_freqPulses4+3)& (0+255),b	;volatile
  4855                           
  4856                           ; BSR set to: 3
  4857  0043C4  0012               	return		;funcret
  4858  0043C6                     __end_of_setup_pulsos:
  4859                           	opt stack 0
  4860                           tblptru	equ	0xFF8
  4861                           tblptrh	equ	0xFF7
  4862                           tblptrl	equ	0xFF6
  4863                           tablat	equ	0xFF5
  4864                           postinc0	equ	0xFEE
  4865                           wreg	equ	0xFE8
  4866                           postdec1	equ	0xFE5
  4867                           fsr1l	equ	0xFE1
  4868                           status	equ	0xFD8
  4869                           
  4870 ;; *************** function _setup_ccp1 *****************
  4871 ;; Defined at:
  4872 ;;		line 27 in file "Timer.c"
  4873 ;; Parameters:    Size  Location     Type
  4874 ;;		None
  4875 ;; Auto vars:     Size  Location     Type
  4876 ;;		None
  4877 ;; Return value:  Size  Location     Type
  4878 ;;                  1    wreg      void 
  4879 ;; Registers used:
  4880 ;;		wreg, status,2
  4881 ;; Tracked objects:
  4882 ;;		On entry : 0/0
  4883 ;;		On exit  : 0/0
  4884 ;;		Unchanged: 0/0
  4885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4886 ;;      Params:         0       0       0       0       0       0       0       0       0
  4887 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4888 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4889 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4890 ;;Total ram usage:        0 bytes
  4891 ;; Hardware stack levels used:    1
  4892 ;; Hardware stack levels required when called:   10
  4893 ;; This function calls:
  4894 ;;		Nothing
  4895 ;; This function is called by:
  4896 ;;		_main
  4897 ;; This function uses a non-reentrant model
  4898 ;;
  4899                           
  4900                           	psect	text3
  4901  00521A                     __ptext3:
  4902                           	opt stack 0
  4903  00521A                     _setup_ccp1:
  4904                           	opt stack 20
  4905                           
  4906                           ;Timer.c: 29: aaa = 1;
  4907                           
  4908                           ; BSR set to: 3
  4909                           ;incstack = 0
  4910  00521A  0E01               	movlw	1
  4911  00521C  0102               	movlb	2	; () banked
  4912  00521E  6FF2               	movwf	_aaa& (0+255),b
  4913                           
  4914                           ; BSR set to: 2
  4915                           ;Timer.c: 30: GIEH = 0;
  4916  005220  9EF2               	bcf	intcon,7,c	;volatile
  4917                           
  4918                           ;Timer.c: 31: T3CON=0b10111000;
  4919  005222  0EB8               	movlw	184
  4920  005224  6EB1               	movwf	4017,c	;volatile
  4921                           
  4922                           ;Timer.c: 32: TMR1H=0x00;
  4923  005226  0E00               	movlw	0
  4924  005228  6ECF               	movwf	4047,c	;volatile
  4925                           
  4926                           ;Timer.c: 33: TMR1L=0x00;
  4927  00522A  0E00               	movlw	0
  4928  00522C  6ECE               	movwf	4046,c	;volatile
  4929                           
  4930                           ;Timer.c: 34: CCPR1H=0x05;
  4931  00522E  0E05               	movlw	5
  4932  005230  6EBF               	movwf	4031,c	;volatile
  4933                           
  4934                           ;Timer.c: 35: CCPR1L=0xDC;
  4935  005232  0EDC               	movlw	220
  4936  005234  6EBE               	movwf	4030,c	;volatile
  4937                           
  4938                           ;Timer.c: 36: ticks=0;
  4939  005236  0E00               	movlw	0
  4940  005238  0103               	movlb	3	; () banked
  4941  00523A  6F2A               	movwf	_ticks& (0+255),b	;volatile
  4942  00523C  0E00               	movlw	0
  4943  00523E  6F2B               	movwf	(_ticks+1)& (0+255),b	;volatile
  4944  005240  0E00               	movlw	0
  4945  005242  6F2C               	movwf	(_ticks+2)& (0+255),b	;volatile
  4946  005244  0E00               	movlw	0
  4947  005246  6F2D               	movwf	(_ticks+3)& (0+255),b	;volatile
  4948                           
  4949                           ; BSR set to: 3
  4950                           ;Timer.c: 38: CCP1IF=0;
  4951  005248  949E               	bcf	3998,2,c	;volatile
  4952                           
  4953                           ;Timer.c: 39: T1CON=0b11110001;
  4954  00524A  0EF1               	movlw	241
  4955  00524C  6ECD               	movwf	4045,c	;volatile
  4956                           
  4957                           ;Timer.c: 40: CCP1CON = 0b00001011;
  4958  00524E  0E0B               	movlw	11
  4959  005250  6EBD               	movwf	4029,c	;volatile
  4960                           
  4961                           ; BSR set to: 3
  4962                           ;Timer.c: 41: CCP1IE=1;
  4963  005252  849D               	bsf	3997,2,c	;volatile
  4964                           
  4965                           ; BSR set to: 3
  4966                           ;Timer.c: 42: IPR1bits.CCP1IP=1;
  4967  005254  849F               	bsf	3999,2,c	;volatile
  4968                           
  4969                           ; BSR set to: 3
  4970                           ;Timer.c: 43: RCONbits.IPEN = 1;
  4971  005256  8ED0               	bsf	4048,7,c	;volatile
  4972                           
  4973                           ; BSR set to: 3
  4974                           ;Timer.c: 44: GIEH = 1;
  4975  005258  8EF2               	bsf	intcon,7,c	;volatile
  4976                           
  4977                           ; BSR set to: 3
  4978  00525A  0012               	return		;funcret
  4979  00525C                     __end_of_setup_ccp1:
  4980                           	opt stack 0
  4981                           tblptru	equ	0xFF8
  4982                           tblptrh	equ	0xFF7
  4983                           tblptrl	equ	0xFF6
  4984                           tablat	equ	0xFF5
  4985                           intcon	equ	0xFF2
  4986                           postinc0	equ	0xFEE
  4987                           wreg	equ	0xFE8
  4988                           postdec1	equ	0xFE5
  4989                           fsr1l	equ	0xFE1
  4990                           status	equ	0xFD8
  4991                           
  4992 ;; *************** function _setup_AD *****************
  4993 ;; Defined at:
  4994 ;;		line 10 in file "AD.c"
  4995 ;; Parameters:    Size  Location     Type
  4996 ;;		None
  4997 ;; Auto vars:     Size  Location     Type
  4998 ;;		None
  4999 ;; Return value:  Size  Location     Type
  5000 ;;                  1    wreg      void 
  5001 ;; Registers used:
  5002 ;;		wreg, status,2
  5003 ;; Tracked objects:
  5004 ;;		On entry : 0/0
  5005 ;;		On exit  : 0/0
  5006 ;;		Unchanged: 0/0
  5007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5008 ;;      Params:         0       0       0       0       0       0       0       0       0
  5009 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5010 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5011 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5012 ;;Total ram usage:        0 bytes
  5013 ;; Hardware stack levels used:    1
  5014 ;; Hardware stack levels required when called:   10
  5015 ;; This function calls:
  5016 ;;		Nothing
  5017 ;; This function is called by:
  5018 ;;		_main
  5019 ;; This function uses a non-reentrant model
  5020 ;;
  5021                           
  5022                           	psect	text4
  5023  0056E6                     __ptext4:
  5024                           	opt stack 0
  5025  0056E6                     _setup_AD:
  5026                           	opt stack 20
  5027                           
  5028                           ;AD.c: 12: ADON=0;
  5029                           
  5030                           ; BSR set to: 3
  5031                           ;incstack = 0
  5032  0056E6  90C2               	bcf	4034,0,c	;volatile
  5033                           
  5034                           ;AD.c: 13: ADCON1=0b00001101;
  5035  0056E8  0E0D               	movlw	13
  5036  0056EA  6EC1               	movwf	4033,c	;volatile
  5037                           
  5038                           ;AD.c: 14: ADCON2=0b10111110;
  5039  0056EC  0EBE               	movlw	190
  5040  0056EE  6EC0               	movwf	4032,c	;volatile
  5041                           
  5042                           ;AD.c: 16: ADIF=0;
  5043  0056F0  9C9E               	bcf	3998,6,c	;volatile
  5044                           
  5045                           ;AD.c: 17: ADIE=0;
  5046  0056F2  9C9D               	bcf	3997,6,c	;volatile
  5047  0056F4  0012               	return		;funcret
  5048  0056F6                     __end_of_setup_AD:
  5049                           	opt stack 0
  5050                           tblptru	equ	0xFF8
  5051                           tblptrh	equ	0xFF7
  5052                           tblptrl	equ	0xFF6
  5053                           tablat	equ	0xFF5
  5054                           intcon	equ	0xFF2
  5055                           postinc0	equ	0xFEE
  5056                           wreg	equ	0xFE8
  5057                           postdec1	equ	0xFE5
  5058                           fsr1l	equ	0xFE1
  5059                           status	equ	0xFD8
  5060                           
  5061 ;; *************** function _putsUSBUSART *****************
  5062 ;; Defined at:
  5063 ;;		line 629 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device_cdc.c"
  5064 ;; Parameters:    Size  Location     Type
  5065 ;;  data            2    0[BANK0 ] PTR unsigned char 
  5066 ;;		 -> main@data(150), 
  5067 ;; Auto vars:     Size  Location     Type
  5068 ;;  pData           2    2[BANK0 ] PTR unsigned char 
  5069 ;;		 -> main@data(150), 
  5070 ;;  len             1    4[BANK0 ] unsigned char 
  5071 ;; Return value:  Size  Location     Type
  5072 ;;                  1    wreg      void 
  5073 ;; Registers used:
  5074 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5075 ;; Tracked objects:
  5076 ;;		On entry : 0/0
  5077 ;;		On exit  : 0/0
  5078 ;;		Unchanged: 0/0
  5079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5080 ;;      Params:         0       2       0       0       0       0       0       0       0
  5081 ;;      Locals:         0       3       0       0       0       0       0       0       0
  5082 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5083 ;;      Totals:         0       5       0       0       0       0       0       0       0
  5084 ;;Total ram usage:        5 bytes
  5085 ;; Hardware stack levels used:    1
  5086 ;; Hardware stack levels required when called:   10
  5087 ;; This function calls:
  5088 ;;		Nothing
  5089 ;; This function is called by:
  5090 ;;		_main
  5091 ;; This function uses a non-reentrant model
  5092 ;;
  5093                           
  5094                           	psect	text5
  5095  00506C                     __ptext5:
  5096                           	opt stack 0
  5097  00506C                     _putsUSBUSART:
  5098                           	opt stack 20
  5099                           
  5100                           ;usb_device_cdc.c: 631: uint8_t len;
  5101                           ;usb_device_cdc.c: 632: char *pData;
  5102                           ;usb_device_cdc.c: 657: {PIE2bits.USBIE = 0;};
  5103                           
  5104                           ;incstack = 0
  5105  00506C  9AA0               	bcf	4000,5,c	;volatile
  5106                           
  5107                           ;usb_device_cdc.c: 658: if(cdc_trf_state != 0)
  5108  00506E  0102               	movlb	2	; () banked
  5109  005070  51E5               	movf	_cdc_trf_state& (0+255),w,b
  5110  005072  B4D8               	btfsc	status,2,c
  5111  005074  D002               	goto	l838
  5112                           
  5113                           ; BSR set to: 2
  5114                           ;usb_device_cdc.c: 659: {
  5115                           ;usb_device_cdc.c: 660: {PIE2bits.USBIE = 1;};
  5116  005076  8AA0               	bsf	4000,5,c	;volatile
  5117                           
  5118                           ;usb_device_cdc.c: 661: return;
  5119  005078  0012               	return	
  5120  00507A                     l838:
  5121                           
  5122                           ; BSR set to: 2
  5123                           ;usb_device_cdc.c: 662: }
  5124                           ;usb_device_cdc.c: 668: len = 0;
  5125                           
  5126                           ; BSR set to: 2
  5127  00507A  0E00               	movlw	0
  5128  00507C  0100               	movlb	0	; () banked
  5129  00507E  6F64               	movwf	putsUSBUSART@len& (0+255),b
  5130                           
  5131                           ; BSR set to: 0
  5132                           ;usb_device_cdc.c: 669: pData = data;
  5133  005080  C060  F062         	movff	putsUSBUSART@data,putsUSBUSART@pData
  5134  005084  C061  F063         	movff	putsUSBUSART@data+1,putsUSBUSART@pData+1
  5135  005088                     
  5136                           ; BSR set to: 0
  5137                           ;usb_device_cdc.c: 671: {
  5138                           ;usb_device_cdc.c: 672: len++;
  5139                           
  5140                           ; BSR set to: 0
  5141  005088  2B64               	incf	putsUSBUSART@len& (0+255),f,b
  5142                           
  5143                           ; BSR set to: 0
  5144                           ;usb_device_cdc.c: 673: if(len == 255) break;
  5145  00508A  2964               	incf	putsUSBUSART@len& (0+255),w,b
  5146  00508C  B4D8               	btfsc	status,2,c
  5147  00508E  D009               	goto	u9500
  5148                           
  5149                           ; BSR set to: 0
  5150                           ;usb_device_cdc.c: 674: }while(*pData++);
  5151                           
  5152                           ; BSR set to: 0
  5153                           
  5154                           ; BSR set to: 0
  5155  005090  C062  FFD9         	movff	putsUSBUSART@pData,fsr2l
  5156  005094  C063  FFDA         	movff	putsUSBUSART@pData+1,fsr2h
  5157  005098  4B62               	infsnz	putsUSBUSART@pData& (0+255),f,b
  5158  00509A  2B63               	incf	(putsUSBUSART@pData+1)& (0+255),f,b
  5159  00509C  50DF               	movf	indf2,w,c
  5160  00509E  A4D8               	btfss	status,2,c
  5161  0050A0  D7F3               	goto	l840
  5162  0050A2                     u9500:
  5163                           
  5164                           ; BSR set to: 0
  5165                           ;usb_device_cdc.c: 682: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = len; cdc_mem_type 
      +                          = 0x01; cdc_trf_state = 1; };
  5166                           
  5167                           ; BSR set to: 0
  5168  0050A2  C060  F349         	movff	putsUSBUSART@data,_pCDCSrc
  5169  0050A6  C061  F34A         	movff	putsUSBUSART@data+1,_pCDCSrc+1
  5170                           
  5171                           ; BSR set to: 0
  5172  0050AA  C064  F052         	movff	putsUSBUSART@len,_cdc_tx_len
  5173                           
  5174                           ; BSR set to: 0
  5175  0050AE  0E01               	movlw	1
  5176  0050B0  0102               	movlb	2	; () banked
  5177  0050B2  6FE4               	movwf	_cdc_mem_type& (0+255),b
  5178                           
  5179                           ; BSR set to: 2
  5180  0050B4  0E01               	movlw	1
  5181  0050B6  6FE5               	movwf	_cdc_trf_state& (0+255),b
  5182                           
  5183                           ; BSR set to: 2
  5184                           ;usb_device_cdc.c: 683: {PIE2bits.USBIE = 1;};
  5185  0050B8  8AA0               	bsf	4000,5,c	;volatile
  5186                           
  5187                           ; BSR set to: 2
  5188  0050BA  0012               	return		;funcret
  5189  0050BC                     __end_of_putsUSBUSART:
  5190                           	opt stack 0
  5191                           tblptru	equ	0xFF8
  5192                           tblptrh	equ	0xFF7
  5193                           tblptrl	equ	0xFF6
  5194                           tablat	equ	0xFF5
  5195                           intcon	equ	0xFF2
  5196                           postinc0	equ	0xFEE
  5197                           wreg	equ	0xFE8
  5198                           postdec1	equ	0xFE5
  5199                           fsr1l	equ	0xFE1
  5200                           indf2	equ	0xFDF
  5201                           fsr2h	equ	0xFDA
  5202                           fsr2l	equ	0xFD9
  5203                           status	equ	0xFD8
  5204                           
  5205 ;; *************** function _le_pulsos *****************
  5206 ;; Defined at:
  5207 ;;		line 26 in file "Pulses.c"
  5208 ;; Parameters:    Size  Location     Type
  5209 ;;  freqPulses      1    wreg     unsigned char 
  5210 ;;  modo            1    5[BANK0 ] unsigned char 
  5211 ;; Auto vars:     Size  Location     Type
  5212 ;;  freqPulses      1    9[BANK0 ] unsigned char 
  5213 ;;  freq            4   10[BANK0 ] unsigned long 
  5214 ;; Return value:  Size  Location     Type
  5215 ;;                  4    5[BANK0 ] unsigned long 
  5216 ;; Registers used:
  5217 ;;		wreg, status,2, status,0
  5218 ;; Tracked objects:
  5219 ;;		On entry : 0/0
  5220 ;;		On exit  : 0/0
  5221 ;;		Unchanged: 0/0
  5222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5223 ;;      Params:         0       4       0       0       0       0       0       0       0
  5224 ;;      Locals:         0       5       0       0       0       0       0       0       0
  5225 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5226 ;;      Totals:         0       9       0       0       0       0       0       0       0
  5227 ;;Total ram usage:        9 bytes
  5228 ;; Hardware stack levels used:    1
  5229 ;; Hardware stack levels required when called:   10
  5230 ;; This function calls:
  5231 ;;		Nothing
  5232 ;; This function is called by:
  5233 ;;		_main
  5234 ;; This function uses a non-reentrant model
  5235 ;;
  5236                           
  5237                           	psect	text6
  5238  003C26                     __ptext6:
  5239                           	opt stack 0
  5240  003C26                     _le_pulsos:
  5241                           	opt stack 20
  5242                           
  5243                           ; BSR set to: 2
  5244                           ;incstack = 0
  5245                           ;le_pulsos@freqPulses stored from wreg
  5246  003C26  0100               	movlb	0	; () banked
  5247  003C28  6F69               	movwf	le_pulsos@freqPulses& (0+255),b
  5248                           
  5249                           ;Pulses.c: 28: CCP1IE=0;
  5250  003C2A  949D               	bcf	3997,2,c	;volatile
  5251                           
  5252                           ;Pulses.c: 29: uint32_t freq;
  5253                           ;Pulses.c: 30: switch(freqPulses){
  5254  003C2C  D054               	goto	l2071
  5255  003C2E                     l2072:
  5256                           
  5257                           ; BSR set to: 0
  5258                           ;Pulses.c: 32: freq = freqPulses1;
  5259  003C2E  C33A  F06A         	movff	_freqPulses1,le_pulsos@freq	;volatile
  5260  003C32  C33B  F06B         	movff	_freqPulses1+1,le_pulsos@freq+1	;volatile
  5261  003C36  C33C  F06C         	movff	_freqPulses1+2,le_pulsos@freq+2	;volatile
  5262  003C3A  C33D  F06D         	movff	_freqPulses1+3,le_pulsos@freq+3	;volatile
  5263                           
  5264                           ; BSR set to: 0
  5265                           ;Pulses.c: 33: if (!modo)
  5266  003C3E  5165               	movf	le_pulsos@modo& (0+255),w,b
  5267  003C40  A4D8               	btfss	status,2,c
  5268  003C42  D057               	goto	l2074
  5269                           
  5270                           ; BSR set to: 0
  5271                           ;Pulses.c: 34: freqPulses1=0;
  5272  003C44  0E00               	movlw	0
  5273  003C46  0103               	movlb	3	; () banked
  5274  003C48  6F3A               	movwf	_freqPulses1& (0+255),b	;volatile
  5275  003C4A  0E00               	movlw	0
  5276  003C4C  6F3B               	movwf	(_freqPulses1+1)& (0+255),b	;volatile
  5277  003C4E  0E00               	movlw	0
  5278  003C50  6F3C               	movwf	(_freqPulses1+2)& (0+255),b	;volatile
  5279  003C52  0E00               	movlw	0
  5280  003C54  6F3D               	movwf	(_freqPulses1+3)& (0+255),b	;volatile
  5281                           
  5282                           ; BSR set to: 3
  5283                           ;Pulses.c: 35: break;
  5284  003C56  D04D               	goto	l2074
  5285  003C58                     l2075:
  5286                           
  5287                           ; BSR set to: 0
  5288                           ;Pulses.c: 37: freq = freqPulses2;
  5289  003C58  C336  F06A         	movff	_freqPulses2,le_pulsos@freq	;volatile
  5290  003C5C  C337  F06B         	movff	_freqPulses2+1,le_pulsos@freq+1	;volatile
  5291  003C60  C338  F06C         	movff	_freqPulses2+2,le_pulsos@freq+2	;volatile
  5292  003C64  C339  F06D         	movff	_freqPulses2+3,le_pulsos@freq+3	;volatile
  5293                           
  5294                           ; BSR set to: 0
  5295                           ;Pulses.c: 38: if (!modo)
  5296  003C68  5165               	movf	le_pulsos@modo& (0+255),w,b
  5297  003C6A  A4D8               	btfss	status,2,c
  5298  003C6C  D042               	goto	l2074
  5299                           
  5300                           ; BSR set to: 0
  5301                           ;Pulses.c: 39: freqPulses2=0;
  5302  003C6E  0E00               	movlw	0
  5303  003C70  0103               	movlb	3	; () banked
  5304  003C72  6F36               	movwf	_freqPulses2& (0+255),b	;volatile
  5305  003C74  0E00               	movlw	0
  5306  003C76  6F37               	movwf	(_freqPulses2+1)& (0+255),b	;volatile
  5307  003C78  0E00               	movlw	0
  5308  003C7A  6F38               	movwf	(_freqPulses2+2)& (0+255),b	;volatile
  5309  003C7C  0E00               	movlw	0
  5310  003C7E  6F39               	movwf	(_freqPulses2+3)& (0+255),b	;volatile
  5311                           
  5312                           ; BSR set to: 3
  5313                           ;Pulses.c: 40: break;
  5314  003C80  D038               	goto	l2074
  5315  003C82                     l2077:
  5316                           
  5317                           ; BSR set to: 0
  5318                           ;Pulses.c: 42: freq = freqPulses3;
  5319  003C82  C332  F06A         	movff	_freqPulses3,le_pulsos@freq	;volatile
  5320  003C86  C333  F06B         	movff	_freqPulses3+1,le_pulsos@freq+1	;volatile
  5321  003C8A  C334  F06C         	movff	_freqPulses3+2,le_pulsos@freq+2	;volatile
  5322  003C8E  C335  F06D         	movff	_freqPulses3+3,le_pulsos@freq+3	;volatile
  5323                           
  5324                           ; BSR set to: 0
  5325                           ;Pulses.c: 43: if (!modo)
  5326  003C92  5165               	movf	le_pulsos@modo& (0+255),w,b
  5327  003C94  A4D8               	btfss	status,2,c
  5328  003C96  D02D               	goto	l2074
  5329                           
  5330                           ; BSR set to: 0
  5331                           ;Pulses.c: 44: freqPulses3=0;
  5332  003C98  0E00               	movlw	0
  5333  003C9A  0103               	movlb	3	; () banked
  5334  003C9C  6F32               	movwf	_freqPulses3& (0+255),b	;volatile
  5335  003C9E  0E00               	movlw	0
  5336  003CA0  6F33               	movwf	(_freqPulses3+1)& (0+255),b	;volatile
  5337  003CA2  0E00               	movlw	0
  5338  003CA4  6F34               	movwf	(_freqPulses3+2)& (0+255),b	;volatile
  5339  003CA6  0E00               	movlw	0
  5340  003CA8  6F35               	movwf	(_freqPulses3+3)& (0+255),b	;volatile
  5341                           
  5342                           ; BSR set to: 3
  5343                           ;Pulses.c: 45: break;
  5344  003CAA  D023               	goto	l2074
  5345  003CAC                     l2079:
  5346                           
  5347                           ; BSR set to: 0
  5348                           ;Pulses.c: 47: freq = freqPulses4;
  5349  003CAC  C32E  F06A         	movff	_freqPulses4,le_pulsos@freq	;volatile
  5350  003CB0  C32F  F06B         	movff	_freqPulses4+1,le_pulsos@freq+1	;volatile
  5351  003CB4  C330  F06C         	movff	_freqPulses4+2,le_pulsos@freq+2	;volatile
  5352  003CB8  C331  F06D         	movff	_freqPulses4+3,le_pulsos@freq+3	;volatile
  5353                           
  5354                           ; BSR set to: 0
  5355                           ;Pulses.c: 48: if (!modo)
  5356  003CBC  5165               	movf	le_pulsos@modo& (0+255),w,b
  5357  003CBE  A4D8               	btfss	status,2,c
  5358  003CC0  D018               	goto	l2074
  5359                           
  5360                           ; BSR set to: 0
  5361                           ;Pulses.c: 49: freqPulses4=0;
  5362  003CC2  0E00               	movlw	0
  5363  003CC4  0103               	movlb	3	; () banked
  5364  003CC6  6F2E               	movwf	_freqPulses4& (0+255),b	;volatile
  5365  003CC8  0E00               	movlw	0
  5366  003CCA  6F2F               	movwf	(_freqPulses4+1)& (0+255),b	;volatile
  5367  003CCC  0E00               	movlw	0
  5368  003CCE  6F30               	movwf	(_freqPulses4+2)& (0+255),b	;volatile
  5369  003CD0  0E00               	movlw	0
  5370  003CD2  6F31               	movwf	(_freqPulses4+3)& (0+255),b	;volatile
  5371                           
  5372                           ; BSR set to: 3
  5373                           ;Pulses.c: 51: }
  5374                           
  5375                           ; BSR set to: 3
  5376                           ;Pulses.c: 50: break;
  5377  003CD4  D00E               	goto	l2074
  5378  003CD6                     l2071:
  5379                           
  5380                           ; BSR set to: 3
  5381  003CD6  0100               	movlb	0	; () banked
  5382  003CD8  5169               	movf	le_pulsos@freqPulses& (0+255),w,b
  5383                           
  5384                           ; Switch size 1, requested type "space"
  5385                           ; Number of cases is 4, Range of values is 1 to 4
  5386                           ; switch strategies available:
  5387                           ; Name         Instructions Cycles
  5388                           ; simple_byte           13     7 (average)
  5389                           ;	Chosen strategy is simple_byte
  5390  003CDA  0A01               	xorlw	1	; case 1
  5391  003CDC  B4D8               	btfsc	status,2,c
  5392  003CDE  D7A7               	goto	l2072
  5393  003CE0  0A03               	xorlw	3	; case 2
  5394  003CE2  B4D8               	btfsc	status,2,c
  5395  003CE4  D7B9               	goto	l2075
  5396  003CE6  0A01               	xorlw	1	; case 3
  5397  003CE8  B4D8               	btfsc	status,2,c
  5398  003CEA  D7CB               	goto	l2077
  5399  003CEC  0A07               	xorlw	7	; case 4
  5400  003CEE  B4D8               	btfsc	status,2,c
  5401  003CF0  D7DD               	goto	l2079
  5402  003CF2                     l2074:
  5403                           
  5404                           ;Pulses.c: 53: CCP1IE=1;
  5405  003CF2  849D               	bsf	3997,2,c	;volatile
  5406                           
  5407                           ;Pulses.c: 54: return freq;
  5408  003CF4  C06A  F065         	movff	le_pulsos@freq,?_le_pulsos
  5409  003CF8  C06B  F066         	movff	le_pulsos@freq+1,?_le_pulsos+1
  5410  003CFC  C06C  F067         	movff	le_pulsos@freq+2,?_le_pulsos+2
  5411  003D00  C06D  F068         	movff	le_pulsos@freq+3,?_le_pulsos+3
  5412  003D04  0012               	return		;funcret
  5413  003D06                     __end_of_le_pulsos:
  5414                           	opt stack 0
  5415                           tblptru	equ	0xFF8
  5416                           tblptrh	equ	0xFF7
  5417                           tblptrl	equ	0xFF6
  5418                           tablat	equ	0xFF5
  5419                           intcon	equ	0xFF2
  5420                           postinc0	equ	0xFEE
  5421                           wreg	equ	0xFE8
  5422                           postdec1	equ	0xFE5
  5423                           fsr1l	equ	0xFE1
  5424                           indf2	equ	0xFDF
  5425                           fsr2h	equ	0xFDA
  5426                           fsr2l	equ	0xFD9
  5427                           status	equ	0xFD8
  5428                           
  5429 ;; *************** function _le_AD *****************
  5430 ;; Defined at:
  5431 ;;		line 20 in file "AD.c"
  5432 ;; Parameters:    Size  Location     Type
  5433 ;;  AnalogPort      1    wreg     unsigned char 
  5434 ;; Auto vars:     Size  Location     Type
  5435 ;;  AnalogPort      1   73[BANK0 ] unsigned char 
  5436 ;;  i               2   76[BANK0 ] int 
  5437 ;;  corrente        3   70[BANK0 ] float 
  5438 ;;  leitura         2   78[BANK0 ] unsigned int 
  5439 ;;  leituraAux      2   74[BANK0 ] unsigned int 
  5440 ;; Return value:  Size  Location     Type
  5441 ;;                  3   62[BANK0 ] float 
  5442 ;; Registers used:
  5443 ;;		wreg, status,2, status,0, cstack
  5444 ;; Tracked objects:
  5445 ;;		On entry : 0/0
  5446 ;;		On exit  : 0/0
  5447 ;;		Unchanged: 0/0
  5448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5449 ;;      Params:         0       3       0       0       0       0       0       0       0
  5450 ;;      Locals:         0      13       0       0       0       0       0       0       0
  5451 ;;      Temps:          0       2       0       0       0       0       0       0       0
  5452 ;;      Totals:         0      18       0       0       0       0       0       0       0
  5453 ;;Total ram usage:       18 bytes
  5454 ;; Hardware stack levels used:    1
  5455 ;; Hardware stack levels required when called:   12
  5456 ;; This function calls:
  5457 ;;		___awtoft
  5458 ;;		___ftadd
  5459 ;;		___ftdiv
  5460 ;;		___ftmul
  5461 ;; This function is called by:
  5462 ;;		_main
  5463 ;; This function uses a non-reentrant model
  5464 ;;
  5465                           
  5466                           	psect	text7
  5467  0030C8                     __ptext7:
  5468                           	opt stack 0
  5469  0030C8                     _le_AD:
  5470                           	opt stack 18
  5471                           
  5472                           ;incstack = 0
  5473                           ;le_AD@AnalogPort stored from wreg
  5474  0030C8  0100               	movlb	0	; () banked
  5475  0030CA  6FA9               	movwf	le_AD@AnalogPort& (0+255),b
  5476                           
  5477                           ;AD.c: 22: if (AnalogPort == 0){
  5478  0030CC  0100               	movlb	0	; () banked
  5479  0030CE  51A9               	movf	le_AD@AnalogPort& (0+255),w,b
  5480  0030D0  A4D8               	btfss	status,2,c
  5481  0030D2  D002               	goto	l1954
  5482                           
  5483                           ; BSR set to: 0
  5484                           ;AD.c: 23: ADCON0=0b00000001;
  5485  0030D4  0E01               	movlw	1
  5486  0030D6  6EC2               	movwf	4034,c	;volatile
  5487  0030D8                     l1954:
  5488                           
  5489                           ; BSR set to: 0
  5490                           ;AD.c: 24: }
  5491                           ;AD.c: 25: if (AnalogPort == 1){
  5492                           
  5493                           ; BSR set to: 0
  5494  0030D8  05A9               	decf	le_AD@AnalogPort& (0+255),w,b
  5495  0030DA  A4D8               	btfss	status,2,c
  5496  0030DC  D002               	goto	l1955
  5497                           
  5498                           ; BSR set to: 0
  5499                           ;AD.c: 26: ADCON0=0b00000101;
  5500  0030DE  0E05               	movlw	5
  5501  0030E0  6EC2               	movwf	4034,c	;volatile
  5502  0030E2                     l1955:
  5503                           
  5504                           ; BSR set to: 0
  5505                           ;AD.c: 27: }
  5506                           ;AD.c: 35: float corrente;
  5507                           ;AD.c: 37: uint16_t leituraAux;
  5508                           ;AD.c: 38: uint16_t leitura=0;
  5509  0030E2  0E00               	movlw	0
  5510  0030E4  6FAF               	movwf	(le_AD@leitura+1)& (0+255),b
  5511  0030E6  0E00               	movlw	0
  5512  0030E8  6FAE               	movwf	le_AD@leitura& (0+255),b
  5513                           
  5514                           ;AD.c: 40: for (int i=0;i<32;i++)
  5515  0030EA  0E00               	movlw	0
  5516  0030EC  6FAD               	movwf	(le_AD@i+1)& (0+255),b
  5517  0030EE  0E00               	movlw	0
  5518  0030F0  6FAC               	movwf	le_AD@i& (0+255),b
  5519  0030F2                     l10044:
  5520                           
  5521                           ; BSR set to: 0
  5522  0030F2  BFAD               	btfsc	(le_AD@i+1)& (0+255),7,b
  5523  0030F4  D006               	goto	l1956
  5524  0030F6  51AD               	movf	(le_AD@i+1)& (0+255),w,b
  5525  0030F8  E119               	bnz	l10056
  5526  0030FA  0E20               	movlw	32
  5527  0030FC  5DAC               	subwf	le_AD@i& (0+255),w,b
  5528  0030FE  B0D8               	btfsc	status,0,c
  5529  003100  D015               	goto	u9610
  5530  003102                     l1956:
  5531                           
  5532                           ; BSR set to: 0
  5533                           ;AD.c: 41: {
  5534                           ;AD.c: 42: GO_DONE=1;
  5535  003102  82C2               	bsf	4034,1,c	;volatile
  5536                           
  5537                           ;AD.c: 43: __nop();
  5538  003104  F000               	nop	
  5539  003106  B2C2               	btfsc	4034,1,c	;volatile
  5540  003108  D7FE               	goto	l1959
  5541                           
  5542                           ;AD.c: 47: leituraAux=ADRESH;
  5543  00310A  CFC4 F0AA          	movff	4036,le_AD@leituraAux	;volatile
  5544  00310E  0100               	movlb	0	; () banked
  5545  003110  6BAB               	clrf	(le_AD@leituraAux+1)& (0+255),b
  5546                           
  5547                           ; BSR set to: 0
  5548                           ;AD.c: 48: leituraAux=(leituraAux <<8) | ADRESL;
  5549  003112  51AA               	movf	le_AD@leituraAux& (0+255),w,b
  5550  003114  6FA1               	movwf	??_le_AD& (0+255),b
  5551  003116  50C3               	movf	4035,w,c	;volatile
  5552  003118  6FAA               	movwf	le_AD@leituraAux& (0+255),b
  5553  00311A  C0A1  F0AB         	movff	??_le_AD,le_AD@leituraAux+1
  5554                           
  5555                           ; BSR set to: 0
  5556                           ;AD.c: 49: leitura+=leituraAux;
  5557  00311E  51AA               	movf	le_AD@leituraAux& (0+255),w,b
  5558  003120  27AE               	addwf	le_AD@leitura& (0+255),f,b
  5559  003122  51AB               	movf	(le_AD@leituraAux+1)& (0+255),w,b
  5560  003124  23AF               	addwfc	(le_AD@leitura+1)& (0+255),f,b
  5561                           
  5562                           ; BSR set to: 0
  5563  003126  4BAC               	infsnz	le_AD@i& (0+255),f,b
  5564  003128  2BAD               	incf	(le_AD@i+1)& (0+255),f,b
  5565  00312A  D7E3               	goto	l10044
  5566  00312C                     u9610:
  5567  00312C                     l10056:
  5568                           
  5569                           ; BSR set to: 0
  5570                           ;AD.c: 51: }
  5571                           ;AD.c: 53: leitura>>=5;
  5572  00312C  0E05               	movlw	5
  5573  00312E  6FA1               	movwf	??_le_AD& (0+255),b
  5574  003130                     u9625:
  5575  003130  90D8               	bcf	status,0,c
  5576  003132  33AF               	rrcf	(le_AD@leitura+1)& (0+255),f,b
  5577  003134  33AE               	rrcf	le_AD@leitura& (0+255),f,b
  5578  003136  2FA1               	decfsz	??_le_AD& (0+255),f,b
  5579  003138  D7FB               	goto	u9625
  5580                           
  5581                           ;AD.c: 55: if (leitura==0)
  5582  00313A  51AE               	movf	le_AD@leitura& (0+255),w,b
  5583  00313C  11AF               	iorwf	(le_AD@leitura+1)& (0+255),w,b
  5584  00313E  A4D8               	btfss	status,2,c
  5585  003140  D007               	goto	l1961
  5586                           
  5587                           ; BSR set to: 0
  5588                           ;AD.c: 56: corrente=0;
  5589  003142  0E00               	movlw	0
  5590  003144  6FA6               	movwf	le_AD@corrente& (0+255),b
  5591  003146  0E00               	movlw	0
  5592  003148  6FA7               	movwf	(le_AD@corrente+1)& (0+255),b
  5593  00314A  0E00               	movlw	0
  5594  00314C  6FA8               	movwf	(le_AD@corrente+2)& (0+255),b
  5595  00314E  D04B               	goto	l1962
  5596  003150                     l1961:
  5597                           
  5598                           ; BSR set to: 0
  5599                           ;AD.c: 57: else
  5600                           ;AD.c: 58: corrente=((int16_t) leitura-195.0)*16.0/784.0+4.0;
  5601                           
  5602                           ; BSR set to: 0
  5603  003150  0E00               	movlw	0
  5604  003152  6F92               	movwf	___ftdiv@f2& (0+255),b
  5605  003154  0E44               	movlw	68
  5606  003156  6F93               	movwf	(___ftdiv@f2+1)& (0+255),b
  5607  003158  0E44               	movlw	68
  5608  00315A  6F94               	movwf	(___ftdiv@f2+2)& (0+255),b
  5609  00315C  0E00               	movlw	0
  5610  00315E  6F83               	movwf	___ftmul@f2& (0+255),b
  5611  003160  0E80               	movlw	128
  5612  003162  6F84               	movwf	(___ftmul@f2+1)& (0+255),b
  5613  003164  0E41               	movlw	65
  5614  003166  6F85               	movwf	(___ftmul@f2+2)& (0+255),b
  5615  003168  0E00               	movlw	0
  5616  00316A  6F77               	movwf	___ftadd@f2& (0+255),b
  5617  00316C  0E43               	movlw	67
  5618  00316E  6F78               	movwf	(___ftadd@f2+1)& (0+255),b
  5619  003170  0EC3               	movlw	195
  5620  003172  6F79               	movwf	(___ftadd@f2+2)& (0+255),b
  5621  003174  C0AE  F068         	movff	le_AD@leitura,___awtoft@c
  5622  003178  C0AF  F069         	movff	le_AD@leitura+1,___awtoft@c+1
  5623  00317C  ECCD  F029         	call	___awtoft	;wreg free
  5624  003180  C068  F074         	movff	?___awtoft,___ftadd@f1
  5625  003184  C069  F075         	movff	?___awtoft+1,___ftadd@f1+1
  5626  003188  C06A  F076         	movff	?___awtoft+2,___ftadd@f1+2
  5627  00318C  EC82  F014         	call	___ftadd	;wreg free
  5628  003190  C074  F080         	movff	?___ftadd,___ftmul@f1
  5629  003194  C075  F081         	movff	?___ftadd+1,___ftmul@f1+1
  5630  003198  C076  F082         	movff	?___ftadd+2,___ftmul@f1+2
  5631  00319C  EC24  F01D         	call	___ftmul	;wreg free
  5632  0031A0  C080  F08F         	movff	?___ftmul,___ftdiv@f1
  5633  0031A4  C081  F090         	movff	?___ftmul+1,___ftdiv@f1+1
  5634  0031A8  C082  F091         	movff	?___ftmul+2,___ftdiv@f1+2
  5635  0031AC  EC9F  F01D         	call	___ftdiv	;wreg free
  5636  0031B0  C08F  F0A3         	movff	?___ftdiv,_le_AD$5889
  5637  0031B4  C090  F0A4         	movff	?___ftdiv+1,_le_AD$5889+1
  5638  0031B8  C091  F0A5         	movff	?___ftdiv+2,_le_AD$5889+2
  5639                           
  5640                           ;AD.c: 57: else
  5641                           ;AD.c: 58: corrente=((int16_t) leitura-195.0)*16.0/784.0+4.0;
  5642  0031BC  C0A3  F074         	movff	_le_AD$5889,___ftadd@f1
  5643  0031C0  C0A4  F075         	movff	_le_AD$5889+1,___ftadd@f1+1
  5644  0031C4  C0A5  F076         	movff	_le_AD$5889+2,___ftadd@f1+2
  5645  0031C8  0E00               	movlw	0
  5646  0031CA  0100               	movlb	0	; () banked
  5647  0031CC  6F77               	movwf	___ftadd@f2& (0+255),b
  5648  0031CE  0E80               	movlw	128
  5649  0031D0  6F78               	movwf	(___ftadd@f2+1)& (0+255),b
  5650  0031D2  0E40               	movlw	64
  5651  0031D4  6F79               	movwf	(___ftadd@f2+2)& (0+255),b
  5652  0031D6  EC82  F014         	call	___ftadd	;wreg free
  5653  0031DA  C074  F0A6         	movff	?___ftadd,le_AD@corrente
  5654  0031DE  C075  F0A7         	movff	?___ftadd+1,le_AD@corrente+1
  5655  0031E2  C076  F0A8         	movff	?___ftadd+2,le_AD@corrente+2
  5656  0031E6                     l1962:
  5657                           
  5658                           ;AD.c: 60: return corrente;
  5659  0031E6  C0A6  F09E         	movff	le_AD@corrente,?_le_AD
  5660  0031EA  C0A7  F09F         	movff	le_AD@corrente+1,?_le_AD+1
  5661  0031EE  C0A8  F0A0         	movff	le_AD@corrente+2,?_le_AD+2
  5662  0031F2  0012               	return	
  5663  0031F4                     __end_of_le_AD:
  5664                           	opt stack 0
  5665                           tblptru	equ	0xFF8
  5666                           tblptrh	equ	0xFF7
  5667                           tblptrl	equ	0xFF6
  5668                           tablat	equ	0xFF5
  5669                           intcon	equ	0xFF2
  5670                           postinc0	equ	0xFEE
  5671                           wreg	equ	0xFE8
  5672                           postdec1	equ	0xFE5
  5673                           fsr1l	equ	0xFE1
  5674                           indf2	equ	0xFDF
  5675                           fsr2h	equ	0xFDA
  5676                           fsr2l	equ	0xFD9
  5677                           status	equ	0xFD8
  5678                           
  5679 ;; *************** function ___ftdiv *****************
  5680 ;; Defined at:
  5681 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftdiv.c"
  5682 ;; Parameters:    Size  Location     Type
  5683 ;;  f1              3   47[BANK0 ] float 
  5684 ;;  f2              3   50[BANK0 ] float 
  5685 ;; Auto vars:     Size  Location     Type
  5686 ;;  f3              3   57[BANK0 ] float 
  5687 ;;  sign            1   61[BANK0 ] unsigned char 
  5688 ;;  exp             1   60[BANK0 ] unsigned char 
  5689 ;;  cntr            1   56[BANK0 ] unsigned char 
  5690 ;; Return value:  Size  Location     Type
  5691 ;;                  3   47[BANK0 ] float 
  5692 ;; Registers used:
  5693 ;;		wreg, status,2, status,0, cstack
  5694 ;; Tracked objects:
  5695 ;;		On entry : 0/0
  5696 ;;		On exit  : 0/0
  5697 ;;		Unchanged: 0/0
  5698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5699 ;;      Params:         0       6       0       0       0       0       0       0       0
  5700 ;;      Locals:         0       6       0       0       0       0       0       0       0
  5701 ;;      Temps:          0       3       0       0       0       0       0       0       0
  5702 ;;      Totals:         0      15       0       0       0       0       0       0       0
  5703 ;;Total ram usage:       15 bytes
  5704 ;; Hardware stack levels used:    1
  5705 ;; Hardware stack levels required when called:   11
  5706 ;; This function calls:
  5707 ;;		___ftpack
  5708 ;; This function is called by:
  5709 ;;		_le_AD
  5710 ;; This function uses a non-reentrant model
  5711 ;;
  5712                           
  5713                           	psect	text8
  5714  003B3E                     __ptext8:
  5715                           	opt stack 0
  5716  003B3E                     ___ftdiv:
  5717                           	opt stack 18
  5718                           
  5719                           ;incstack = 0
  5720  003B3E  C091  F095         	movff	___ftdiv@f1+2,??___ftdiv
  5721  003B42  0100               	movlb	0	; () banked
  5722  003B44  6B96               	clrf	(??___ftdiv+1)& (0+255),b
  5723  003B46  6B97               	clrf	(??___ftdiv+2)& (0+255),b
  5724  003B48  3590               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  5725  003B4A  3795               	rlcf	??___ftdiv& (0+255),f,b
  5726  003B4C  E301               	bnc	u8891
  5727  003B4E  8196               	bsf	(??___ftdiv+1)& (0+255),0,b
  5728  003B50                     u8891:
  5729  003B50  5195               	movf	??___ftdiv& (0+255),w,b
  5730  003B52  6F9C               	movwf	___ftdiv@exp& (0+255),b
  5731  003B54  519C               	movf	___ftdiv@exp& (0+255),w,b
  5732  003B56  A4D8               	btfss	status,2,c
  5733  003B58  D007               	goto	l3061
  5734                           
  5735                           ; BSR set to: 0
  5736  003B5A  0E00               	movlw	0
  5737  003B5C  6F8F               	movwf	?___ftdiv& (0+255),b
  5738  003B5E  0E00               	movlw	0
  5739  003B60  6F90               	movwf	(?___ftdiv+1)& (0+255),b
  5740  003B62  0E00               	movlw	0
  5741  003B64  6F91               	movwf	(?___ftdiv+2)& (0+255),b
  5742                           
  5743                           ; BSR set to: 0
  5744  003B66  0012               	return	
  5745  003B68                     l3061:
  5746                           
  5747                           ; BSR set to: 0
  5748                           
  5749                           ; BSR set to: 0
  5750  003B68  C094  F095         	movff	___ftdiv@f2+2,??___ftdiv
  5751  003B6C  6B96               	clrf	(??___ftdiv+1)& (0+255),b
  5752  003B6E  6B97               	clrf	(??___ftdiv+2)& (0+255),b
  5753  003B70  3593               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  5754  003B72  3795               	rlcf	??___ftdiv& (0+255),f,b
  5755  003B74  E301               	bnc	u8911
  5756  003B76  8196               	bsf	(??___ftdiv+1)& (0+255),0,b
  5757  003B78                     u8911:
  5758  003B78  5195               	movf	??___ftdiv& (0+255),w,b
  5759  003B7A  6F9D               	movwf	___ftdiv@sign& (0+255),b
  5760  003B7C  519D               	movf	___ftdiv@sign& (0+255),w,b
  5761  003B7E  A4D8               	btfss	status,2,c
  5762  003B80  D007               	goto	l3063
  5763                           
  5764                           ; BSR set to: 0
  5765  003B82  0E00               	movlw	0
  5766  003B84  6F8F               	movwf	?___ftdiv& (0+255),b
  5767  003B86  0E00               	movlw	0
  5768  003B88  6F90               	movwf	(?___ftdiv+1)& (0+255),b
  5769  003B8A  0E00               	movlw	0
  5770  003B8C  6F91               	movwf	(?___ftdiv+2)& (0+255),b
  5771                           
  5772                           ; BSR set to: 0
  5773  003B8E  0012               	return	
  5774  003B90                     l3063:
  5775                           
  5776                           ; BSR set to: 0
  5777                           
  5778                           ; BSR set to: 0
  5779  003B90  0E00               	movlw	0
  5780  003B92  6F99               	movwf	___ftdiv@f3& (0+255),b
  5781  003B94  0E00               	movlw	0
  5782  003B96  6F9A               	movwf	(___ftdiv@f3+1)& (0+255),b
  5783  003B98  0E00               	movlw	0
  5784  003B9A  6F9B               	movwf	(___ftdiv@f3+2)& (0+255),b
  5785                           
  5786                           ; BSR set to: 0
  5787  003B9C  519D               	movf	___ftdiv@sign& (0+255),w,b
  5788  003B9E  0F89               	addlw	137
  5789  003BA0  5F9C               	subwf	___ftdiv@exp& (0+255),f,b
  5790                           
  5791                           ; BSR set to: 0
  5792  003BA2  C091  F09D         	movff	___ftdiv@f1+2,___ftdiv@sign
  5793                           
  5794                           ; BSR set to: 0
  5795  003BA6  5194               	movf	(___ftdiv@f2+2)& (0+255),w,b
  5796  003BA8  1B9D               	xorwf	___ftdiv@sign& (0+255),f,b
  5797                           
  5798                           ; BSR set to: 0
  5799  003BAA  0E80               	movlw	128
  5800  003BAC  179D               	andwf	___ftdiv@sign& (0+255),f,b
  5801                           
  5802                           ; BSR set to: 0
  5803  003BAE  8F90               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  5804                           
  5805                           ; BSR set to: 0
  5806  003BB0  0EFF               	movlw	255
  5807  003BB2  178F               	andwf	___ftdiv@f1& (0+255),f,b
  5808  003BB4  0EFF               	movlw	255
  5809  003BB6  1790               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  5810  003BB8  0E00               	movlw	0
  5811  003BBA  1791               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  5812                           
  5813                           ; BSR set to: 0
  5814  003BBC  8F93               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  5815                           
  5816                           ; BSR set to: 0
  5817  003BBE  0EFF               	movlw	255
  5818  003BC0  1792               	andwf	___ftdiv@f2& (0+255),f,b
  5819  003BC2  0EFF               	movlw	255
  5820  003BC4  1793               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  5821  003BC6  0E00               	movlw	0
  5822  003BC8  1794               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  5823                           
  5824                           ; BSR set to: 0
  5825  003BCA  0E18               	movlw	24
  5826  003BCC  6F98               	movwf	___ftdiv@cntr& (0+255),b
  5827  003BCE                     
  5828                           ; BSR set to: 0
  5829                           
  5830                           ; BSR set to: 0
  5831  003BCE  90D8               	bcf	status,0,c
  5832  003BD0  3799               	rlcf	___ftdiv@f3& (0+255),f,b
  5833  003BD2  379A               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  5834  003BD4  379B               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  5835                           
  5836                           ; BSR set to: 0
  5837  003BD6  5192               	movf	___ftdiv@f2& (0+255),w,b
  5838  003BD8  5D8F               	subwf	___ftdiv@f1& (0+255),w,b
  5839  003BDA  5193               	movf	(___ftdiv@f2+1)& (0+255),w,b
  5840  003BDC  5990               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  5841  003BDE  5194               	movf	(___ftdiv@f2+2)& (0+255),w,b
  5842  003BE0  5991               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  5843  003BE2  A0D8               	btfss	status,0,c
  5844  003BE4  D007               	goto	l3065
  5845                           
  5846                           ; BSR set to: 0
  5847  003BE6  5192               	movf	___ftdiv@f2& (0+255),w,b
  5848  003BE8  5F8F               	subwf	___ftdiv@f1& (0+255),f,b
  5849  003BEA  5193               	movf	(___ftdiv@f2+1)& (0+255),w,b
  5850  003BEC  5B90               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  5851  003BEE  5194               	movf	(___ftdiv@f2+2)& (0+255),w,b
  5852  003BF0  5B91               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  5853                           
  5854                           ; BSR set to: 0
  5855  003BF2  8199               	bsf	___ftdiv@f3& (0+255),0,b
  5856  003BF4                     l3065:
  5857                           
  5858                           ; BSR set to: 0
  5859  003BF4  90D8               	bcf	status,0,c
  5860  003BF6  378F               	rlcf	___ftdiv@f1& (0+255),f,b
  5861  003BF8  3790               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  5862  003BFA  3791               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  5863                           
  5864                           ; BSR set to: 0
  5865  003BFC  2F98               	decfsz	___ftdiv@cntr& (0+255),f,b
  5866  003BFE  D7E7               	goto	l3064
  5867                           
  5868                           ; BSR set to: 0
  5869                           
  5870                           ; BSR set to: 0
  5871  003C00  C099  F060         	movff	___ftdiv@f3,___ftpack@arg
  5872  003C04  C09A  F061         	movff	___ftdiv@f3+1,___ftpack@arg+1
  5873  003C08  C09B  F062         	movff	___ftdiv@f3+2,___ftpack@arg+2
  5874  003C0C  C09C  F063         	movff	___ftdiv@exp,___ftpack@exp
  5875  003C10  C09D  F064         	movff	___ftdiv@sign,___ftpack@sign
  5876  003C14  ECE0  F020         	call	___ftpack	;wreg free
  5877  003C18  C060  F08F         	movff	?___ftpack,?___ftdiv
  5878  003C1C  C061  F090         	movff	?___ftpack+1,?___ftdiv+1
  5879  003C20  C062  F091         	movff	?___ftpack+2,?___ftdiv+2
  5880  003C24  0012               	return	
  5881  003C26                     __end_of___ftdiv:
  5882                           	opt stack 0
  5883                           tblptru	equ	0xFF8
  5884                           tblptrh	equ	0xFF7
  5885                           tblptrl	equ	0xFF6
  5886                           tablat	equ	0xFF5
  5887                           intcon	equ	0xFF2
  5888                           postinc0	equ	0xFEE
  5889                           wreg	equ	0xFE8
  5890                           postdec1	equ	0xFE5
  5891                           fsr1l	equ	0xFE1
  5892                           indf2	equ	0xFDF
  5893                           fsr2h	equ	0xFDA
  5894                           fsr2l	equ	0xFD9
  5895                           status	equ	0xFD8
  5896                           
  5897 ;; *************** function ___awtoft *****************
  5898 ;; Defined at:
  5899 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\awtoft.c"
  5900 ;; Parameters:    Size  Location     Type
  5901 ;;  c               2    8[BANK0 ] int 
  5902 ;; Auto vars:     Size  Location     Type
  5903 ;;  sign            1   11[BANK0 ] unsigned char 
  5904 ;; Return value:  Size  Location     Type
  5905 ;;                  3    8[BANK0 ] float 
  5906 ;; Registers used:
  5907 ;;		wreg, status,2, status,0, cstack
  5908 ;; Tracked objects:
  5909 ;;		On entry : 0/0
  5910 ;;		On exit  : 0/0
  5911 ;;		Unchanged: 0/0
  5912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5913 ;;      Params:         0       3       0       0       0       0       0       0       0
  5914 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5915 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5916 ;;      Totals:         0       4       0       0       0       0       0       0       0
  5917 ;;Total ram usage:        4 bytes
  5918 ;; Hardware stack levels used:    1
  5919 ;; Hardware stack levels required when called:   11
  5920 ;; This function calls:
  5921 ;;		___ftpack
  5922 ;; This function is called by:
  5923 ;;		_le_AD
  5924 ;; This function uses a non-reentrant model
  5925 ;;
  5926                           
  5927                           	psect	text9
  5928  00539A                     __ptext9:
  5929                           	opt stack 0
  5930  00539A                     ___awtoft:
  5931                           	opt stack 18
  5932                           
  5933                           ;incstack = 0
  5934  00539A  0E00               	movlw	0
  5935  00539C  0100               	movlb	0	; () banked
  5936  00539E  6F6B               	movwf	___awtoft@sign& (0+255),b
  5937                           
  5938                           ; BSR set to: 0
  5939  0053A0  AF69               	btfss	(___awtoft@c+1)& (0+255),7,b
  5940  0053A2  D006               	goto	l2961
  5941                           
  5942                           ; BSR set to: 0
  5943  0053A4  6D68               	negf	___awtoft@c& (0+255),b
  5944  0053A6  1F69               	comf	(___awtoft@c+1)& (0+255),f,b
  5945  0053A8  B0D8               	btfsc	status,0,c
  5946  0053AA  2B69               	incf	(___awtoft@c+1)& (0+255),f,b
  5947                           
  5948                           ; BSR set to: 0
  5949  0053AC  0E01               	movlw	1
  5950  0053AE  6F6B               	movwf	___awtoft@sign& (0+255),b
  5951  0053B0                     l2961:
  5952                           
  5953                           ; BSR set to: 0
  5954                           
  5955                           ; BSR set to: 0
  5956  0053B0  C068  F060         	movff	___awtoft@c,___ftpack@arg
  5957  0053B4  C069  F061         	movff	___awtoft@c+1,___ftpack@arg+1
  5958  0053B8  6B62               	clrf	(___ftpack@arg+2)& (0+255),b
  5959  0053BA  0E8E               	movlw	142
  5960  0053BC  6F63               	movwf	___ftpack@exp& (0+255),b
  5961  0053BE  C06B  F064         	movff	___awtoft@sign,___ftpack@sign
  5962  0053C2  ECE0  F020         	call	___ftpack	;wreg free
  5963  0053C6  C060  F068         	movff	?___ftpack,?___awtoft
  5964  0053CA  C061  F069         	movff	?___ftpack+1,?___awtoft+1
  5965  0053CE  C062  F06A         	movff	?___ftpack+2,?___awtoft+2
  5966  0053D2  0012               	return	
  5967  0053D4                     __end_of___awtoft:
  5968                           	opt stack 0
  5969                           tblptru	equ	0xFF8
  5970                           tblptrh	equ	0xFF7
  5971                           tblptrl	equ	0xFF6
  5972                           tablat	equ	0xFF5
  5973                           intcon	equ	0xFF2
  5974                           postinc0	equ	0xFEE
  5975                           wreg	equ	0xFE8
  5976                           postdec1	equ	0xFE5
  5977                           fsr1l	equ	0xFE1
  5978                           indf2	equ	0xFDF
  5979                           fsr2h	equ	0xFDA
  5980                           fsr2l	equ	0xFD9
  5981                           status	equ	0xFD8
  5982                           
  5983 ;; *************** function _delay *****************
  5984 ;; Defined at:
  5985 ;;		line 33 in file "UT.c"
  5986 ;; Parameters:    Size  Location     Type
  5987 ;;  time            4   13[BANK0 ] unsigned long 
  5988 ;; Auto vars:     Size  Location     Type
  5989 ;;  to              4   25[BANK0 ] unsigned long 
  5990 ;; Return value:  Size  Location     Type
  5991 ;;                  1    wreg      void 
  5992 ;; Registers used:
  5993 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5994 ;; Tracked objects:
  5995 ;;		On entry : 0/0
  5996 ;;		On exit  : 0/0
  5997 ;;		Unchanged: 0/0
  5998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5999 ;;      Params:         0       4       0       0       0       0       0       0       0
  6000 ;;      Locals:         0       4       0       0       0       0       0       0       0
  6001 ;;      Temps:          0       8       0       0       0       0       0       0       0
  6002 ;;      Totals:         0      16       0       0       0       0       0       0       0
  6003 ;;Total ram usage:       16 bytes
  6004 ;; Hardware stack levels used:    1
  6005 ;; Hardware stack levels required when called:   13
  6006 ;; This function calls:
  6007 ;;		_millis
  6008 ;;		_verificaUSB
  6009 ;; This function is called by:
  6010 ;;		_main
  6011 ;; This function uses a non-reentrant model
  6012 ;;
  6013                           
  6014                           	psect	text10
  6015  004C2E                     __ptext10:
  6016                           	opt stack 0
  6017  004C2E                     _delay:
  6018                           	opt stack 17
  6019                           
  6020                           ;UT.c: 35: uint32_t to=millis();
  6021                           
  6022                           ;incstack = 0
  6023  004C2E  EC06  F02B         	call	_millis	;wreg free
  6024  004C32  C060  F079         	movff	?_millis,delay@to
  6025  004C36  C061  F07A         	movff	?_millis+1,delay@to+1
  6026  004C3A  C062  F07B         	movff	?_millis+2,delay@to+2
  6027  004C3E  C063  F07C         	movff	?_millis+3,delay@to+3
  6028                           
  6029                           ;UT.c: 36: while ((millis()-to)<time)
  6030  004C42  D002               	goto	l1049
  6031  004C44                     
  6032                           ;UT.c: 37: {
  6033                           ;UT.c: 38: verificaUSB();
  6034  004C44  EC57  F02A         	call	_verificaUSB	;wreg free
  6035  004C48                     l1049:
  6036  004C48  C079  F071         	movff	delay@to,??_delay
  6037  004C4C  C07A  F072         	movff	delay@to+1,??_delay+1
  6038  004C50  C07B  F073         	movff	delay@to+2,??_delay+2
  6039  004C54  C07C  F074         	movff	delay@to+3,??_delay+3
  6040  004C58  0100               	movlb	0	; () banked
  6041  004C5A  1F71               	comf	??_delay& (0+255),f,b
  6042  004C5C  1F72               	comf	(??_delay+1)& (0+255),f,b
  6043  004C5E  1F73               	comf	(??_delay+2)& (0+255),f,b
  6044  004C60  1F74               	comf	(??_delay+3)& (0+255),f,b
  6045  004C62  2B71               	incf	??_delay& (0+255),f,b
  6046  004C64  0E00               	movlw	0
  6047  004C66  2372               	addwfc	(??_delay+1)& (0+255),f,b
  6048  004C68  2373               	addwfc	(??_delay+2)& (0+255),f,b
  6049  004C6A  2374               	addwfc	(??_delay+3)& (0+255),f,b
  6050  004C6C  EC06  F02B         	call	_millis	;wreg free
  6051  004C70  0100               	movlb	0	; () banked
  6052  004C72  5171               	movf	??_delay& (0+255),w,b
  6053  004C74  2560               	addwf	?_millis& (0+255),w,b
  6054  004C76  6F75               	movwf	(??_delay+4)& (0+255),b
  6055  004C78  5172               	movf	(??_delay+1)& (0+255),w,b
  6056  004C7A  2161               	addwfc	(?_millis+1)& (0+255),w,b
  6057  004C7C  6F76               	movwf	(??_delay+5)& (0+255),b
  6058  004C7E  5173               	movf	(??_delay+2)& (0+255),w,b
  6059  004C80  2162               	addwfc	(?_millis+2)& (0+255),w,b
  6060  004C82  6F77               	movwf	(??_delay+6)& (0+255),b
  6061  004C84  5174               	movf	(??_delay+3)& (0+255),w,b
  6062  004C86  2163               	addwfc	(?_millis+3)& (0+255),w,b
  6063  004C88  6F78               	movwf	(??_delay+7)& (0+255),b
  6064  004C8A  516D               	movf	delay@time& (0+255),w,b
  6065  004C8C  5D75               	subwf	(??_delay+4)& (0+255),w,b
  6066  004C8E  516E               	movf	(delay@time+1)& (0+255),w,b
  6067  004C90  5976               	subwfb	(??_delay+5)& (0+255),w,b
  6068  004C92  516F               	movf	(delay@time+2)& (0+255),w,b
  6069  004C94  5977               	subwfb	(??_delay+6)& (0+255),w,b
  6070  004C96  5170               	movf	(delay@time+3)& (0+255),w,b
  6071  004C98  5978               	subwfb	(??_delay+7)& (0+255),w,b
  6072  004C9A  B0D8               	btfsc	status,0,c
  6073  004C9C  0012               	return	
  6074  004C9E  D7D2               	goto	l1050
  6075  004CA0                     __end_of_delay:
  6076                           	opt stack 0
  6077                           tblptru	equ	0xFF8
  6078                           tblptrh	equ	0xFF7
  6079                           tblptrl	equ	0xFF6
  6080                           tablat	equ	0xFF5
  6081                           intcon	equ	0xFF2
  6082                           postinc0	equ	0xFEE
  6083                           wreg	equ	0xFE8
  6084                           postdec1	equ	0xFE5
  6085                           fsr1l	equ	0xFE1
  6086                           indf2	equ	0xFDF
  6087                           fsr2h	equ	0xFDA
  6088                           fsr2l	equ	0xFD9
  6089                           status	equ	0xFD8
  6090                           
  6091 ;; *************** function _verificaUSB *****************
  6092 ;; Defined at:
  6093 ;;		line 13 in file "UT.c"
  6094 ;; Parameters:    Size  Location     Type
  6095 ;;		None
  6096 ;; Auto vars:     Size  Location     Type
  6097 ;;		None
  6098 ;; Return value:  Size  Location     Type
  6099 ;;                  1    wreg      unsigned char 
  6100 ;; Registers used:
  6101 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6102 ;; Tracked objects:
  6103 ;;		On entry : 0/0
  6104 ;;		On exit  : 0/0
  6105 ;;		Unchanged: 0/0
  6106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6107 ;;      Params:         0       0       0       0       0       0       0       0       0
  6108 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6109 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6110 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6111 ;;Total ram usage:        0 bytes
  6112 ;; Hardware stack levels used:    1
  6113 ;; Hardware stack levels required when called:   12
  6114 ;; This function calls:
  6115 ;;		_CDCTxService
  6116 ;;		_USBDeviceAttach
  6117 ;;		_USBDeviceDetach
  6118 ;; This function is called by:
  6119 ;;		_delay
  6120 ;;		_main
  6121 ;; This function uses a non-reentrant model
  6122 ;;
  6123                           
  6124                           	psect	text11
  6125  0054AE                     __ptext11:
  6126                           	opt stack 0
  6127  0054AE                     _verificaUSB:
  6128                           	opt stack 18
  6129                           
  6130                           ;UT.c: 15: if ((USBDeviceState == DETACHED_STATE) && (PORTCbits.RC2 == 1))
  6131                           
  6132                           ; BSR set to: 0
  6133                           ;incstack = 0
  6134  0054AE  5058               	movf	_USBDeviceState,w,c	;volatile
  6135  0054B0  B4D8               	btfsc	status,2,c
  6136  0054B2  A482               	btfss	3970,2,c	;volatile
  6137  0054B4  D003               	goto	l1040
  6138                           
  6139                           ;UT.c: 16: {
  6140                           ;UT.c: 17: USBDeviceAttach();
  6141  0054B6  EC3D  F02A         	call	_USBDeviceAttach	;wreg free
  6142                           
  6143                           ;UT.c: 18: }
  6144  0054BA  D006               	goto	l1042
  6145  0054BC                     l1040:
  6146                           
  6147                           ;UT.c: 19: else if ((USBDeviceState == ATTACHED_STATE) && (PORTCbits.RC2 != 1))
  6148  0054BC  0458               	decf	_USBDeviceState,w,c	;volatile
  6149  0054BE  B4D8               	btfsc	status,2,c
  6150  0054C0  B482               	btfsc	3970,2,c	;volatile
  6151  0054C2  D002               	goto	l1042
  6152                           
  6153                           ;UT.c: 20: {
  6154                           ;UT.c: 21: USBDeviceDetach();
  6155  0054C4  EC7B  F02B         	call	_USBDeviceDetach	;wreg free
  6156  0054C8                     l1042:
  6157                           
  6158                           ;UT.c: 22: }
  6159                           ;UT.c: 24: if ((USBDeviceState < CONFIGURED_STATE) || (UCONbits.SUSPND))
  6160  0054C8  0E1F               	movlw	31
  6161  0054CA  6458               	cpfsgt	_USBDeviceState,c	;volatile
  6162  0054CC  D002               	goto	u7920
  6163  0054CE  A26D               	btfss	3949,1,c	;volatile
  6164  0054D0  D002               	goto	l1043
  6165  0054D2                     u7920:
  6166                           
  6167                           ;UT.c: 25: {
  6168                           ;UT.c: 26: return 0;
  6169  0054D2  0E00               	movlw	0
  6170  0054D4  0012               	return	
  6171  0054D6                     l1043:
  6172                           
  6173                           ;UT.c: 27: }
  6174                           ;UT.c: 29: CDCTxService();
  6175  0054D6  EC36  F017         	call	_CDCTxService	;wreg free
  6176                           
  6177                           ;UT.c: 30: return 1;
  6178  0054DA  0E01               	movlw	1
  6179  0054DC  0012               	return	
  6180  0054DE                     __end_of_verificaUSB:
  6181                           	opt stack 0
  6182                           tblptru	equ	0xFF8
  6183                           tblptrh	equ	0xFF7
  6184                           tblptrl	equ	0xFF6
  6185                           tablat	equ	0xFF5
  6186                           intcon	equ	0xFF2
  6187                           postinc0	equ	0xFEE
  6188                           wreg	equ	0xFE8
  6189                           postdec1	equ	0xFE5
  6190                           fsr1l	equ	0xFE1
  6191                           indf2	equ	0xFDF
  6192                           fsr2h	equ	0xFDA
  6193                           fsr2l	equ	0xFD9
  6194                           status	equ	0xFD8
  6195                           
  6196 ;; *************** function _USBDeviceDetach *****************
  6197 ;; Defined at:
  6198 ;;		line 1247 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
  6199 ;; Parameters:    Size  Location     Type
  6200 ;;		None
  6201 ;; Auto vars:     Size  Location     Type
  6202 ;;		None
  6203 ;; Return value:  Size  Location     Type
  6204 ;;                  1    wreg      void 
  6205 ;; Registers used:
  6206 ;;		wreg, status,2
  6207 ;; Tracked objects:
  6208 ;;		On entry : 0/0
  6209 ;;		On exit  : 0/0
  6210 ;;		Unchanged: 0/0
  6211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6212 ;;      Params:         0       0       0       0       0       0       0       0       0
  6213 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6214 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6215 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6216 ;;Total ram usage:        0 bytes
  6217 ;; Hardware stack levels used:    1
  6218 ;; Hardware stack levels required when called:   10
  6219 ;; This function calls:
  6220 ;;		Nothing
  6221 ;; This function is called by:
  6222 ;;		_verificaUSB
  6223 ;; This function uses a non-reentrant model
  6224 ;;
  6225                           
  6226                           	psect	text12
  6227  0056F6                     __ptext12:
  6228                           	opt stack 0
  6229  0056F6                     _USBDeviceDetach:
  6230                           	opt stack 19
  6231                           
  6232                           ;usb_device.c: 1255: {
  6233                           ;usb_device.c: 1257: UCON = 0;
  6234                           
  6235                           ;incstack = 0
  6236  0056F6  0E00               	movlw	0
  6237  0056F8  6E6D               	movwf	3949,c	;volatile
  6238                           
  6239                           ;usb_device.c: 1260: UIE = 0;
  6240  0056FA  0E00               	movlw	0
  6241  0056FC  6E69               	movwf	3945,c	;volatile
  6242                           
  6243                           ;usb_device.c: 1263: USBDeviceState = DETACHED_STATE;
  6244  0056FE  0E00               	movlw	0
  6245  005700  6E58               	movwf	_USBDeviceState,c	;volatile
  6246  005702  0012               	return	
  6247  005704                     __end_of_USBDeviceDetach:
  6248                           	opt stack 0
  6249                           tblptru	equ	0xFF8
  6250                           tblptrh	equ	0xFF7
  6251                           tblptrl	equ	0xFF6
  6252                           tablat	equ	0xFF5
  6253                           intcon	equ	0xFF2
  6254                           postinc0	equ	0xFEE
  6255                           wreg	equ	0xFE8
  6256                           postdec1	equ	0xFE5
  6257                           fsr1l	equ	0xFE1
  6258                           indf2	equ	0xFDF
  6259                           fsr2h	equ	0xFDA
  6260                           fsr2l	equ	0xFD9
  6261                           status	equ	0xFD8
  6262                           
  6263 ;; *************** function _USBDeviceAttach *****************
  6264 ;; Defined at:
  6265 ;;		line 1352 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
  6266 ;; Parameters:    Size  Location     Type
  6267 ;;		None
  6268 ;; Auto vars:     Size  Location     Type
  6269 ;;		None
  6270 ;; Return value:  Size  Location     Type
  6271 ;;                  1    wreg      void 
  6272 ;; Registers used:
  6273 ;;		wreg, status,2
  6274 ;; Tracked objects:
  6275 ;;		On entry : 0/0
  6276 ;;		On exit  : 0/0
  6277 ;;		Unchanged: 0/0
  6278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6279 ;;      Params:         0       0       0       0       0       0       0       0       0
  6280 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6281 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6282 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6283 ;;Total ram usage:        0 bytes
  6284 ;; Hardware stack levels used:    1
  6285 ;; Hardware stack levels required when called:   10
  6286 ;; This function calls:
  6287 ;;		Nothing
  6288 ;; This function is called by:
  6289 ;;		_verificaUSB
  6290 ;; This function uses a non-reentrant model
  6291 ;;
  6292                           
  6293                           	psect	text13
  6294  00547A                     __ptext13:
  6295                           	opt stack 0
  6296  00547A                     _USBDeviceAttach:
  6297                           	opt stack 19
  6298                           
  6299                           ;usb_device.c: 1355: if(USBDeviceState == DETACHED_STATE)
  6300                           
  6301                           ;incstack = 0
  6302  00547A  5058               	movf	_USBDeviceState,w,c	;volatile
  6303  00547C  A4D8               	btfss	status,2,c
  6304  00547E  0012               	return	
  6305                           
  6306                           ;usb_device.c: 1356: {
  6307                           ;usb_device.c: 1357: if(PORTCbits.RC2 == 1)
  6308  005480  A482               	btfss	3970,2,c	;volatile
  6309  005482  0012               	return	
  6310                           
  6311                           ;usb_device.c: 1358: {
  6312                           ;usb_device.c: 1360: UCON = 0;
  6313  005484  0E00               	movlw	0
  6314  005486  6E6D               	movwf	3949,c	;volatile
  6315                           
  6316                           ;usb_device.c: 1363: UIE = 0;
  6317  005488  0E00               	movlw	0
  6318  00548A  6E69               	movwf	3945,c	;volatile
  6319                           
  6320                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
  6321  00548C  0E16               	movlw	22
  6322  00548E  6E6F               	movwf	3951,c	;volatile
  6323  005490  0E9F               	movlw	159
  6324  005492  6E6B               	movwf	3947,c	;volatile
  6325  005494  0E7B               	movlw	123
  6326  005496  6E69               	movwf	3945,c	;volatile
  6327                           
  6328                           ;usb_device.c: 1369: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
  6329  005498  8ED0               	bsf	4048,7,c	;volatile
  6330  00549A  8AA2               	bsf	4002,5,c	;volatile
  6331  00549C  8AA0               	bsf	4000,5,c	;volatile
  6332  00549E  8EF2               	bsf	intcon,7,c	;volatile
  6333                           
  6334                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  6335  0054A0  D001               	goto	l459
  6336  0054A2                     l460:
  6337  0054A2  866D               	bsf	3949,3,c	;volatile
  6338  0054A4                     l459:
  6339  0054A4  A66D               	btfss	3949,3,c	;volatile
  6340  0054A6  D7FD               	goto	l460
  6341                           
  6342                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
  6343  0054A8  0E01               	movlw	1
  6344  0054AA  6E58               	movwf	_USBDeviceState,c	;volatile
  6345  0054AC  0012               	return	
  6346  0054AE                     __end_of_USBDeviceAttach:
  6347                           	opt stack 0
  6348                           tblptru	equ	0xFF8
  6349                           tblptrh	equ	0xFF7
  6350                           tblptrl	equ	0xFF6
  6351                           tablat	equ	0xFF5
  6352                           intcon	equ	0xFF2
  6353                           postinc0	equ	0xFEE
  6354                           wreg	equ	0xFE8
  6355                           postdec1	equ	0xFE5
  6356                           fsr1l	equ	0xFE1
  6357                           indf2	equ	0xFDF
  6358                           fsr2h	equ	0xFDA
  6359                           fsr2l	equ	0xFD9
  6360                           status	equ	0xFD8
  6361                           
  6362 ;; *************** function _CDCTxService *****************
  6363 ;; Defined at:
  6364 ;;		line 836 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device_cdc.c"
  6365 ;; Parameters:    Size  Location     Type
  6366 ;;		None
  6367 ;; Auto vars:     Size  Location     Type
  6368 ;;  byte_to_send    1   12[BANK0 ] unsigned char 
  6369 ;;  i               1   11[BANK0 ] unsigned char 
  6370 ;; Return value:  Size  Location     Type
  6371 ;;                  1    wreg      void 
  6372 ;; Registers used:
  6373 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6374 ;; Tracked objects:
  6375 ;;		On entry : 0/0
  6376 ;;		On exit  : 0/0
  6377 ;;		Unchanged: 0/0
  6378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6379 ;;      Params:         0       0       0       0       0       0       0       0       0
  6380 ;;      Locals:         0       2       0       0       0       0       0       0       0
  6381 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6382 ;;      Totals:         0       2       0       0       0       0       0       0       0
  6383 ;;Total ram usage:        2 bytes
  6384 ;; Hardware stack levels used:    1
  6385 ;; Hardware stack levels required when called:   11
  6386 ;; This function calls:
  6387 ;;		_USBTransferOnePacket
  6388 ;; This function is called by:
  6389 ;;		_verificaUSB
  6390 ;; This function uses a non-reentrant model
  6391 ;;
  6392                           
  6393                           	psect	text14
  6394  002E6C                     __ptext14:
  6395                           	opt stack 0
  6396  002E6C                     _CDCTxService:
  6397                           	opt stack 18
  6398                           
  6399                           ;usb_device_cdc.c: 838: uint8_t byte_to_send;
  6400                           ;usb_device_cdc.c: 839: uint8_t i;
  6401                           ;usb_device_cdc.c: 841: {PIE2bits.USBIE = 0;};
  6402                           
  6403                           ;incstack = 0
  6404  002E6C  9AA0               	bcf	4000,5,c	;volatile
  6405                           
  6406                           ;usb_device_cdc.c: 843: {};
  6407                           ;usb_device_cdc.c: 845: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
  6408  002E6E  0102               	movlb	2	; () banked
  6409  002E70  51D8               	movf	_CDCDataInHandle& (0+255),w,b
  6410  002E72  11D9               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
  6411  002E74  B4D8               	btfsc	status,2,c
  6412  002E76  D008               	goto	l852
  6413                           
  6414                           ; BSR set to: 2
  6415  002E78  C2D8  FFD9         	movff	_CDCDataInHandle,fsr2l
  6416  002E7C  C2D9  FFDA         	movff	_CDCDataInHandle+1,fsr2h
  6417  002E80  AEDF               	btfss	indf2,7,c
  6418  002E82  D002               	goto	l852
  6419                           
  6420                           ; BSR set to: 2
  6421                           ;usb_device_cdc.c: 846: {
  6422                           ;usb_device_cdc.c: 847: {PIE2bits.USBIE = 1;};
  6423  002E84  8AA0               	bsf	4000,5,c	;volatile
  6424                           
  6425                           ;usb_device_cdc.c: 848: return;
  6426  002E86  0012               	return	
  6427  002E88                     l852:
  6428                           
  6429                           ; BSR set to: 2
  6430                           ;usb_device_cdc.c: 849: }
  6431                           ;usb_device_cdc.c: 856: if(cdc_trf_state == 3)
  6432                           
  6433                           ; BSR set to: 2
  6434  002E88  0E03               	movlw	3
  6435  002E8A  19E5               	xorwf	_cdc_trf_state& (0+255),w,b
  6436  002E8C  A4D8               	btfss	status,2,c
  6437  002E8E  D002               	goto	l854
  6438                           
  6439                           ; BSR set to: 2
  6440                           ;usb_device_cdc.c: 857: cdc_trf_state = 0;
  6441  002E90  0E00               	movlw	0
  6442  002E92  6FE5               	movwf	_cdc_trf_state& (0+255),b
  6443  002E94                     l854:
  6444                           
  6445                           ; BSR set to: 2
  6446                           ;usb_device_cdc.c: 862: if(cdc_trf_state == 0)
  6447  002E94  51E5               	movf	_cdc_trf_state& (0+255),w,b
  6448  002E96  A4D8               	btfss	status,2,c
  6449  002E98  D002               	goto	l855
  6450                           
  6451                           ; BSR set to: 2
  6452                           ;usb_device_cdc.c: 863: {
  6453                           ;usb_device_cdc.c: 864: {PIE2bits.USBIE = 1;};
  6454  002E9A  8AA0               	bsf	4000,5,c	;volatile
  6455                           
  6456                           ;usb_device_cdc.c: 865: return;
  6457  002E9C  0012               	return	
  6458  002E9E                     l855:
  6459                           
  6460                           ; BSR set to: 2
  6461                           ;usb_device_cdc.c: 866: }
  6462                           ;usb_device_cdc.c: 871: if(cdc_trf_state == 2)
  6463                           
  6464                           ; BSR set to: 2
  6465  002E9E  0E02               	movlw	2
  6466  002EA0  19E5               	xorwf	_cdc_trf_state& (0+255),w,b
  6467  002EA2  A4D8               	btfss	status,2,c
  6468  002EA4  D014               	goto	l856
  6469                           
  6470                           ; BSR set to: 2
  6471                           ;usb_device_cdc.c: 872: {
  6472                           ;usb_device_cdc.c: 873: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
  6473  002EA6  0E01               	movlw	1
  6474  002EA8  0100               	movlb	0	; () banked
  6475  002EAA  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
  6476  002EAC  0E00               	movlw	0
  6477  002EAE  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
  6478  002EB0  0E00               	movlw	0
  6479  002EB2  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  6480  002EB4  0E00               	movlw	0
  6481  002EB6  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
  6482  002EB8  0E02               	movlw	2
  6483  002EBA  ECA2  F01A         	call	_USBTransferOnePacket
  6484  002EBE  C060  F2D8         	movff	?_USBTransferOnePacket,_CDCDataInHandle
  6485  002EC2  C061  F2D9         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
  6486                           
  6487                           ;usb_device_cdc.c: 875: cdc_trf_state = 3;
  6488  002EC6  0E03               	movlw	3
  6489  002EC8  0102               	movlb	2	; () banked
  6490  002ECA  6FE5               	movwf	_cdc_trf_state& (0+255),b
  6491                           
  6492                           ;usb_device_cdc.c: 876: }
  6493  002ECC  D064               	goto	l858
  6494  002ECE                     l856:
  6495                           
  6496                           ; BSR set to: 2
  6497                           ;usb_device_cdc.c: 877: else if(cdc_trf_state == 1)
  6498                           
  6499                           ; BSR set to: 2
  6500  002ECE  05E5               	decf	_cdc_trf_state& (0+255),w,b
  6501  002ED0  A4D8               	btfss	status,2,c
  6502  002ED2  D061               	goto	l858
  6503                           
  6504                           ; BSR set to: 2
  6505                           ;usb_device_cdc.c: 878: {
  6506                           ;usb_device_cdc.c: 882: if(cdc_tx_len > sizeof(cdc_data_tx))
  6507  002ED4  0E40               	movlw	64
  6508  002ED6  6452               	cpfsgt	_cdc_tx_len,c
  6509  002ED8  D004               	goto	l859
  6510                           
  6511                           ; BSR set to: 2
  6512                           ;usb_device_cdc.c: 883: byte_to_send = sizeof(cdc_data_tx);
  6513  002EDA  0E40               	movlw	64
  6514  002EDC  0100               	movlb	0	; () banked
  6515  002EDE  6F6C               	movwf	CDCTxService@byte_to_send& (0+255),b
  6516  002EE0  D002               	goto	l860
  6517  002EE2                     l859:
  6518                           
  6519                           ; BSR set to: 2
  6520                           ;usb_device_cdc.c: 884: else
  6521                           ;usb_device_cdc.c: 885: byte_to_send = cdc_tx_len;
  6522  002EE2  C052  F06C         	movff	_cdc_tx_len,CDCTxService@byte_to_send
  6523  002EE6                     l860:
  6524                           
  6525                           ;usb_device_cdc.c: 890: cdc_tx_len = cdc_tx_len - byte_to_send;
  6526                           
  6527                           ; BSR set to: 2
  6528  002EE6  0100               	movlb	0	; () banked
  6529  002EE8  516C               	movf	CDCTxService@byte_to_send& (0+255),w,b
  6530  002EEA  0800               	sublw	0
  6531  002EEC  2452               	addwf	_cdc_tx_len,w,c
  6532  002EEE  6E52               	movwf	_cdc_tx_len,c
  6533                           
  6534                           ;usb_device_cdc.c: 892: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
  6535  002EF0  0E00               	movlw	0
  6536  002EF2  0103               	movlb	3	; () banked
  6537  002EF4  6F46               	movwf	_pCDCDst& (0+255),b
  6538  002EF6  0E05               	movlw	5
  6539  002EF8  6F47               	movwf	(_pCDCDst+1)& (0+255),b
  6540                           
  6541                           ; BSR set to: 3
  6542                           ;usb_device_cdc.c: 894: i = byte_to_send;
  6543  002EFA  C06C  F06B         	movff	CDCTxService@byte_to_send,CDCTxService@i
  6544                           
  6545                           ; BSR set to: 3
  6546                           ;usb_device_cdc.c: 895: if(cdc_mem_type == 0x00)
  6547  002EFE  0102               	movlb	2	; () banked
  6548  002F00  51E4               	movf	_cdc_mem_type& (0+255),w,b
  6549  002F02  B4D8               	btfsc	status,2,c
  6550  002F04  D012               	goto	l862
  6551  002F06  D027               	goto	l866
  6552  002F08                     
  6553                           ;usb_device_cdc.c: 898: {
  6554                           ;usb_device_cdc.c: 899: *pCDCDst.bRam = *pCDCSrc.bRom;
  6555                           
  6556                           ; BSR set to: 2
  6557  002F08  C349  FFD9         	movff	_pCDCSrc,fsr2l
  6558  002F0C  C34A  FFDA         	movff	_pCDCSrc+1,fsr2h
  6559  002F10  C346  FFE1         	movff	_pCDCDst,fsr1l
  6560  002F14  C347  FFE2         	movff	_pCDCDst+1,fsr1h
  6561  002F18  CFDF FFE7          	movff	indf2,indf1
  6562                           
  6563                           ;usb_device_cdc.c: 900: pCDCDst.bRam++;
  6564  002F1C  0103               	movlb	3	; () banked
  6565  002F1E  4B46               	infsnz	_pCDCDst& (0+255),f,b
  6566  002F20  2B47               	incf	(_pCDCDst+1)& (0+255),f,b
  6567                           
  6568                           ; BSR set to: 3
  6569                           ;usb_device_cdc.c: 901: pCDCSrc.bRom++;
  6570  002F22  4B49               	infsnz	_pCDCSrc& (0+255),f,b
  6571  002F24  2B4A               	incf	(_pCDCSrc+1)& (0+255),f,b
  6572                           
  6573                           ; BSR set to: 3
  6574                           ;usb_device_cdc.c: 902: i--;
  6575  002F26  0100               	movlb	0	; () banked
  6576  002F28  076B               	decf	CDCTxService@i& (0+255),f,b
  6577  002F2A                     l862:
  6578                           
  6579                           ; BSR set to: 0
  6580  002F2A  0100               	movlb	0	; () banked
  6581  002F2C  516B               	movf	CDCTxService@i& (0+255),w,b
  6582  002F2E  B4D8               	btfsc	status,2,c
  6583  002F30  D016               	goto	u7230
  6584  002F32  D7EA               	goto	l863
  6585  002F34                     
  6586                           ; BSR set to: 0
  6587                           ;usb_device_cdc.c: 908: {
  6588                           ;usb_device_cdc.c: 909: *pCDCDst.bRam = *pCDCSrc.bRam;
  6589                           
  6590                           ; BSR set to: 0
  6591  002F34  C349  FFD9         	movff	_pCDCSrc,fsr2l
  6592  002F38  C34A  FFDA         	movff	_pCDCSrc+1,fsr2h
  6593  002F3C  C346  FFE1         	movff	_pCDCDst,fsr1l
  6594  002F40  C347  FFE2         	movff	_pCDCDst+1,fsr1h
  6595  002F44  CFDF FFE7          	movff	indf2,indf1
  6596                           
  6597                           ; BSR set to: 0
  6598                           ;usb_device_cdc.c: 910: pCDCDst.bRam++;
  6599  002F48  0103               	movlb	3	; () banked
  6600  002F4A  4B46               	infsnz	_pCDCDst& (0+255),f,b
  6601  002F4C  2B47               	incf	(_pCDCDst+1)& (0+255),f,b
  6602                           
  6603                           ; BSR set to: 3
  6604                           ;usb_device_cdc.c: 911: pCDCSrc.bRam++;
  6605  002F4E  4B49               	infsnz	_pCDCSrc& (0+255),f,b
  6606  002F50  2B4A               	incf	(_pCDCSrc+1)& (0+255),f,b
  6607                           
  6608                           ; BSR set to: 3
  6609                           ;usb_device_cdc.c: 912: i--;
  6610  002F52  0100               	movlb	0	; () banked
  6611  002F54  076B               	decf	CDCTxService@i& (0+255),f,b
  6612  002F56                     l866:
  6613                           
  6614                           ; BSR set to: 0
  6615  002F56  0100               	movlb	0	; () banked
  6616  002F58  516B               	movf	CDCTxService@i& (0+255),w,b
  6617  002F5A  A4D8               	btfss	status,2,c
  6618  002F5C  D7EB               	goto	l867
  6619  002F5E                     u7230:
  6620                           
  6621                           ; BSR set to: 0
  6622                           ;usb_device_cdc.c: 913: }
  6623                           ;usb_device_cdc.c: 914: }
  6624                           ;usb_device_cdc.c: 920: if(cdc_tx_len == 0)
  6625                           
  6626                           ; BSR set to: 0
  6627                           
  6628                           ; BSR set to: 0
  6629  002F5E  5052               	movf	_cdc_tx_len,w,c
  6630  002F60  A4D8               	btfss	status,2,c
  6631  002F62  D009               	goto	l871
  6632                           
  6633                           ; BSR set to: 0
  6634                           ;usb_device_cdc.c: 921: {
  6635                           ;usb_device_cdc.c: 922: if(byte_to_send == 64)
  6636  002F64  0E40               	movlw	64
  6637  002F66  196C               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
  6638  002F68  A4D8               	btfss	status,2,c
  6639  002F6A  D002               	goto	l870
  6640                           
  6641                           ; BSR set to: 0
  6642                           ;usb_device_cdc.c: 923: cdc_trf_state = 2;
  6643  002F6C  0E02               	movlw	2
  6644  002F6E  D001               	goto	L1
  6645  002F70                     l870:
  6646                           
  6647                           ;usb_device_cdc.c: 924: else
  6648                           ;usb_device_cdc.c: 925: cdc_trf_state = 3;
  6649                           
  6650                           ; BSR set to: 2
  6651  002F70  0E03               	movlw	3
  6652  002F72                     L1:
  6653  002F72  0102               	movlb	2	; () banked
  6654  002F74  6FE5               	movwf	_cdc_trf_state& (0+255),b
  6655  002F76                     l871:
  6656                           
  6657                           ;usb_device_cdc.c: 926: }
  6658                           ;usb_device_cdc.c: 927: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
  6659                           
  6660                           ; BSR set to: 2
  6661                           
  6662                           ; BSR set to: 2
  6663  002F76  0E01               	movlw	1
  6664  002F78  0100               	movlb	0	; () banked
  6665  002F7A  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
  6666  002F7C  0E00               	movlw	0
  6667  002F7E  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
  6668  002F80  0E05               	movlw	5
  6669  002F82  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  6670  002F84  C06C  F063         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
  6671  002F88  0E02               	movlw	2
  6672  002F8A  ECA2  F01A         	call	_USBTransferOnePacket
  6673  002F8E  C060  F2D8         	movff	?_USBTransferOnePacket,_CDCDataInHandle
  6674  002F92  C061  F2D9         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
  6675  002F96                     l858:
  6676                           
  6677                           ;usb_device_cdc.c: 929: }
  6678                           ;usb_device_cdc.c: 931: {PIE2bits.USBIE = 1;};
  6679  002F96  8AA0               	bsf	4000,5,c	;volatile
  6680  002F98  0012               	return		;funcret
  6681  002F9A                     __end_of_CDCTxService:
  6682                           	opt stack 0
  6683                           tblptru	equ	0xFF8
  6684                           tblptrh	equ	0xFF7
  6685                           tblptrl	equ	0xFF6
  6686                           tablat	equ	0xFF5
  6687                           intcon	equ	0xFF2
  6688                           postinc0	equ	0xFEE
  6689                           wreg	equ	0xFE8
  6690                           indf1	equ	0xFE7
  6691                           postdec1	equ	0xFE5
  6692                           fsr1h	equ	0xFE2
  6693                           fsr1l	equ	0xFE1
  6694                           indf2	equ	0xFDF
  6695                           fsr2h	equ	0xFDA
  6696                           fsr2l	equ	0xFD9
  6697                           status	equ	0xFD8
  6698                           
  6699 ;; *************** function _USBTransferOnePacket *****************
  6700 ;; Defined at:
  6701 ;;		line 995 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
  6702 ;; Parameters:    Size  Location     Type
  6703 ;;  ep              1    wreg     unsigned char 
  6704 ;;  dir             1    0[BANK0 ] unsigned char 
  6705 ;;  data            2    1[BANK0 ] PTR unsigned char 
  6706 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
  6707 ;;  len             1    3[BANK0 ] unsigned char 
  6708 ;; Auto vars:     Size  Location     Type
  6709 ;;  ep              1    8[BANK0 ] unsigned char 
  6710 ;;  handle          2    9[BANK0 ] PTR volatile struct __BD
  6711 ;;		 -> RAM(2047), NULL(0), BDT(48), 
  6712 ;; Return value:  Size  Location     Type
  6713 ;;                  2    0[BANK0 ] PTR void 
  6714 ;; Registers used:
  6715 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6716 ;; Tracked objects:
  6717 ;;		On entry : 0/0
  6718 ;;		On exit  : 0/0
  6719 ;;		Unchanged: 0/0
  6720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6721 ;;      Params:         0       4       0       0       0       0       0       0       0
  6722 ;;      Locals:         0       3       0       0       0       0       0       0       0
  6723 ;;      Temps:          0       4       0       0       0       0       0       0       0
  6724 ;;      Totals:         0      11       0       0       0       0       0       0       0
  6725 ;;Total ram usage:       11 bytes
  6726 ;; Hardware stack levels used:    1
  6727 ;; Hardware stack levels required when called:   10
  6728 ;; This function calls:
  6729 ;;		Nothing
  6730 ;; This function is called by:
  6731 ;;		_CDCTxService
  6732 ;;		_USBCDCEventHandler
  6733 ;;		_getsUSBUSART
  6734 ;; This function uses a non-reentrant model
  6735 ;;
  6736                           
  6737                           	psect	text15
  6738  003544                     __ptext15:
  6739                           	opt stack 0
  6740  003544                     _USBTransferOnePacket:
  6741                           	opt stack 18
  6742                           
  6743                           ;incstack = 0
  6744                           ;USBTransferOnePacket@ep stored from wreg
  6745  003544  0100               	movlb	0	; () banked
  6746  003546  6F68               	movwf	USBTransferOnePacket@ep& (0+255),b
  6747                           
  6748                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
  6749                           ;usb_device.c: 1000: if(dir != 0)
  6750  003548  0100               	movlb	0	; () banked
  6751  00354A  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
  6752  00354C  B4D8               	btfsc	status,2,c
  6753  00354E  D007               	goto	l437
  6754                           
  6755                           ; BSR set to: 0
  6756                           ;usb_device.c: 1001: {
  6757                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
  6758  003550  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
  6759  003552  0D02               	mullw	2
  6760  003554  0E46               	movlw	low _pBDTEntryIn
  6761  003556  24F3               	addwf	prodl,w,c
  6762  003558  6ED9               	movwf	fsr2l,c
  6763  00355A  0E00               	movlw	high _pBDTEntryIn
  6764  00355C  D006               	goto	L2
  6765  00355E                     l437:
  6766                           
  6767                           ; BSR set to: 0
  6768                           ;usb_device.c: 1005: else
  6769                           ;usb_device.c: 1006: {
  6770                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
  6771                           
  6772                           ; BSR set to: 0
  6773  00355E  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
  6774  003560  0D02               	mullw	2
  6775  003562  0EC8               	movlw	low _pBDTEntryOut
  6776  003564  24F3               	addwf	prodl,w,c
  6777  003566  6ED9               	movwf	fsr2l,c
  6778  003568  0E02               	movlw	high _pBDTEntryOut
  6779  00356A                     L2:
  6780  00356A  20F4               	addwfc	prodh,w,c
  6781  00356C  6EDA               	movwf	fsr2h,c
  6782  00356E  CFDE F069          	movff	postinc2,USBTransferOnePacket@handle
  6783  003572  CFDD F06A          	movff	postdec2,USBTransferOnePacket@handle+1
  6784                           
  6785                           ; BSR set to: 0
  6786                           ;usb_device.c: 1009: }
  6787                           ;usb_device.c: 1013: if(handle == 0)
  6788                           
  6789                           ; BSR set to: 0
  6790  003576  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
  6791  003578  116A               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  6792  00357A  A4D8               	btfss	status,2,c
  6793  00357C  D005               	goto	l439
  6794                           
  6795                           ; BSR set to: 0
  6796                           ;usb_device.c: 1014: {
  6797                           ;usb_device.c: 1015: return 0;
  6798  00357E  0E00               	movlw	0
  6799  003580  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
  6800  003582  0E00               	movlw	0
  6801  003584  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
  6802                           
  6803                           ; BSR set to: 0
  6804  003586  0012               	return	
  6805  003588                     l439:
  6806                           
  6807                           ; BSR set to: 0
  6808                           ;usb_device.c: 1016: }
  6809                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
  6810                           
  6811                           ; BSR set to: 0
  6812  003588  EE20 F002          	lfsr	2,2
  6813  00358C  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
  6814  00358E  26D9               	addwf	fsr2l,f,c
  6815  003590  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  6816  003592  22DA               	addwfc	fsr2h,f,c
  6817  003594  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
  6818  003598  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
  6819                           
  6820                           ;usb_device.c: 1030: handle->CNT = len;
  6821  00359C  EE20 F001          	lfsr	2,1
  6822  0035A0  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
  6823  0035A2  26D9               	addwf	fsr2l,f,c
  6824  0035A4  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  6825  0035A6  22DA               	addwfc	fsr2h,f,c
  6826  0035A8  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
  6827                           
  6828                           ; BSR set to: 0
  6829                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
  6830  0035AC  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  6831  0035B0  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  6832  0035B4  0E40               	movlw	64
  6833  0035B6  16DF               	andwf	indf2,f,c
  6834                           
  6835                           ; BSR set to: 0
  6836                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
  6837  0035B8  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  6838  0035BC  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  6839  0035C0  0E00               	movlw	0
  6840  0035C2  86DB               	bsf	plusw2,3,c
  6841                           
  6842                           ; BSR set to: 0
  6843                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
  6844  0035C4  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  6845  0035C8  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  6846  0035CC  0E00               	movlw	0
  6847  0035CE  8EDB               	bsf	plusw2,7,c
  6848                           
  6849                           ; BSR set to: 0
  6850                           ;usb_device.c: 1036: if(dir != 0)
  6851  0035D0  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
  6852  0035D2  B4D8               	btfsc	status,2,c
  6853  0035D4  D018               	goto	l441
  6854                           
  6855                           ; BSR set to: 0
  6856                           ;usb_device.c: 1037: {
  6857                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
  6858  0035D6  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
  6859  0035D8  0D02               	mullw	2
  6860  0035DA  0E46               	movlw	low _pBDTEntryIn
  6861  0035DC  24F3               	addwf	prodl,w,c
  6862  0035DE  6ED9               	movwf	fsr2l,c
  6863  0035E0  0E00               	movlw	high _pBDTEntryIn
  6864  0035E2  20F4               	addwfc	prodh,w,c
  6865  0035E4  6EDA               	movwf	fsr2h,c
  6866  0035E6  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
  6867  0035EA  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
  6868  0035EE  0E04               	movlw	4
  6869  0035F0  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
  6870  0035F2  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
  6871  0035F4  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
  6872  0035F6  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
  6873  0035F8  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
  6874  0035FA  0D02               	mullw	2
  6875  0035FC  0E46               	movlw	low _pBDTEntryIn
  6876  0035FE  24F3               	addwf	prodl,w,c
  6877  003600  6ED9               	movwf	fsr2l,c
  6878  003602  0E00               	movlw	high _pBDTEntryIn
  6879  003604  D017               	goto	L3
  6880  003606                     l441:
  6881                           
  6882                           ; BSR set to: 0
  6883                           ;usb_device.c: 1041: else
  6884                           ;usb_device.c: 1042: {
  6885                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
  6886                           
  6887                           ; BSR set to: 0
  6888  003606  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
  6889  003608  0D02               	mullw	2
  6890  00360A  0EC8               	movlw	low _pBDTEntryOut
  6891  00360C  24F3               	addwf	prodl,w,c
  6892  00360E  6ED9               	movwf	fsr2l,c
  6893  003610  0E02               	movlw	high _pBDTEntryOut
  6894  003612  20F4               	addwfc	prodh,w,c
  6895  003614  6EDA               	movwf	fsr2h,c
  6896  003616  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
  6897  00361A  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
  6898  00361E  0E04               	movlw	4
  6899  003620  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
  6900  003622  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
  6901  003624  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
  6902  003626  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
  6903  003628  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
  6904  00362A  0D02               	mullw	2
  6905  00362C  0EC8               	movlw	low _pBDTEntryOut
  6906  00362E  24F3               	addwf	prodl,w,c
  6907  003630  6ED9               	movwf	fsr2l,c
  6908  003632  0E02               	movlw	high _pBDTEntryOut
  6909  003634                     L3:
  6910  003634  20F4               	addwfc	prodh,w,c
  6911  003636  6EDA               	movwf	fsr2h,c
  6912  003638  C066  FFDE         	movff	??_USBTransferOnePacket+2,postinc2
  6913  00363C  C067  FFDD         	movff	??_USBTransferOnePacket+3,postdec2
  6914                           
  6915                           ; BSR set to: 0
  6916                           ;usb_device.c: 1045: }
  6917                           ;usb_device.c: 1046: return (void*)handle;
  6918                           
  6919                           ; BSR set to: 0
  6920  003640  C069  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
  6921  003644  C06A  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
  6922  003648  0012               	return	
  6923  00364A                     __end_of_USBTransferOnePacket:
  6924                           	opt stack 0
  6925                           tblptru	equ	0xFF8
  6926                           tblptrh	equ	0xFF7
  6927                           tblptrl	equ	0xFF6
  6928                           tablat	equ	0xFF5
  6929                           prodh	equ	0xFF4
  6930                           prodl	equ	0xFF3
  6931                           intcon	equ	0xFF2
  6932                           postinc0	equ	0xFEE
  6933                           wreg	equ	0xFE8
  6934                           indf1	equ	0xFE7
  6935                           postdec1	equ	0xFE5
  6936                           fsr1h	equ	0xFE2
  6937                           fsr1l	equ	0xFE1
  6938                           indf2	equ	0xFDF
  6939                           postinc2	equ	0xFDE
  6940                           postdec2	equ	0xFDD
  6941                           plusw2	equ	0xFDB
  6942                           fsr2h	equ	0xFDA
  6943                           fsr2l	equ	0xFD9
  6944                           status	equ	0xFD8
  6945                           
  6946 ;; *************** function _USBDeviceInit *****************
  6947 ;; Defined at:
  6948 ;;		line 277 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
  6949 ;; Parameters:    Size  Location     Type
  6950 ;;		None
  6951 ;; Auto vars:     Size  Location     Type
  6952 ;;  i               1    8[BANK0 ] unsigned char 
  6953 ;; Return value:  Size  Location     Type
  6954 ;;                  1    wreg      void 
  6955 ;; Registers used:
  6956 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6957 ;; Tracked objects:
  6958 ;;		On entry : 0/0
  6959 ;;		On exit  : 0/0
  6960 ;;		Unchanged: 0/0
  6961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6962 ;;      Params:         0       0       0       0       0       0       0       0       0
  6963 ;;      Locals:         0       1       0       0       0       0       0       0       0
  6964 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6965 ;;      Totals:         0       1       0       0       0       0       0       0       0
  6966 ;;Total ram usage:        1 bytes
  6967 ;; Hardware stack levels used:    1
  6968 ;; Hardware stack levels required when called:   11
  6969 ;; This function calls:
  6970 ;;		_memset
  6971 ;; This function is called by:
  6972 ;;		_main
  6973 ;; This function uses a non-reentrant model
  6974 ;;
  6975                           
  6976                           	psect	text16
  6977  002AB2                     __ptext16:
  6978                           	opt stack 0
  6979  002AB2                     _USBDeviceInit:
  6980                           	opt stack 19
  6981                           
  6982                           ;usb_device.c: 279: uint8_t i;
  6983                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
  6984                           
  6985                           ; BSR set to: 0
  6986                           ;incstack = 0
  6987  002AB2  9AA0               	bcf	4000,5,c	;volatile
  6988                           
  6989                           ;usb_device.c: 285: ;
  6990                           ;usb_device.c: 288: {UEIR = 0;};
  6991  002AB4  0E00               	movlw	0
  6992  002AB6  6E6A               	movwf	3946,c	;volatile
  6993                           
  6994                           ;usb_device.c: 291: {UIR = 0;};
  6995  002AB8  0E00               	movlw	0
  6996  002ABA  6E68               	movwf	3944,c	;volatile
  6997                           
  6998                           ;usb_device.c: 294: UEP0 = 0;
  6999  002ABC  0E00               	movlw	0
  7000  002ABE  6E70               	movwf	3952,c	;volatile
  7001                           
  7002                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
  7003  002AC0  0E71               	movlw	113
  7004  002AC2  0100               	movlb	0	; () banked
  7005  002AC4  6F60               	movwf	memset@p1& (0+255),b
  7006  002AC6  0E0F               	movlw	15
  7007  002AC8  6F61               	movwf	(memset@p1+1)& (0+255),b
  7008  002ACA  0E00               	movlw	0
  7009  002ACC  6F63               	movwf	(memset@c+1)& (0+255),b
  7010  002ACE  0E00               	movlw	0
  7011  002AD0  6F62               	movwf	memset@c& (0+255),b
  7012  002AD2  0E00               	movlw	0
  7013  002AD4  6F65               	movwf	(memset@n+1)& (0+255),b
  7014  002AD6  0E02               	movlw	2
  7015  002AD8  6F64               	movwf	memset@n& (0+255),b
  7016  002ADA  EC6F  F02A         	call	_memset	;wreg free
  7017                           
  7018                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  7019  002ADE  0E16               	movlw	22
  7020  002AE0  6E6F               	movwf	3951,c	;volatile
  7021  002AE2  0E9F               	movlw	159
  7022  002AE4  6E6B               	movwf	3947,c	;volatile
  7023  002AE6  0E7B               	movlw	123
  7024  002AE8  6E69               	movwf	3945,c	;volatile
  7025                           
  7026                           ;usb_device.c: 301: ;
  7027                           ;usb_device.c: 304: ;
  7028                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  7029  002AEA  0E00               	movlw	0
  7030  002AEC  0100               	movlb	0	; () banked
  7031  002AEE  6F68               	movwf	USBDeviceInit@i& (0+255),b
  7032  002AF0                     l9836:
  7033                           
  7034                           ; BSR set to: 0
  7035  002AF0  0E0B               	movlw	11
  7036  002AF2  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
  7037  002AF4  D001               	goto	l398
  7038  002AF6  D00E               	goto	u9440
  7039  002AF8                     l398:
  7040                           
  7041                           ; BSR set to: 0
  7042                           ;usb_device.c: 308: {
  7043                           ;usb_device.c: 309: BDT[i].Val = 0x00;
  7044                           
  7045                           ; BSR set to: 0
  7046  002AF8  5168               	movf	USBDeviceInit@i& (0+255),w,b
  7047  002AFA  0D04               	mullw	4
  7048  002AFC  0E00               	movlw	0
  7049  002AFE  24F3               	addwf	prodl,w,c
  7050  002B00  6ED9               	movwf	fsr2l,c
  7051  002B02  0E04               	movlw	4
  7052  002B04  20F4               	addwfc	prodh,w,c
  7053  002B06  6EDA               	movwf	fsr2h,c
  7054  002B08  6ADE               	clrf	postinc2,c
  7055  002B0A  6ADE               	clrf	postinc2,c
  7056  002B0C  6ADE               	clrf	postinc2,c
  7057  002B0E  6ADD               	clrf	postdec2,c
  7058                           
  7059                           ; BSR set to: 0
  7060  002B10  2B68               	incf	USBDeviceInit@i& (0+255),f,b
  7061  002B12  D7EE               	goto	l9836
  7062  002B14                     u9440:
  7063                           
  7064                           ; BSR set to: 0
  7065                           ;usb_device.c: 310: }
  7066                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
  7067  002B14  8C6D               	bsf	3949,6,c	;volatile
  7068                           
  7069                           ; BSR set to: 0
  7070                           ;usb_device.c: 316: UADDR = 0x00;
  7071  002B16  0E00               	movlw	0
  7072  002B18  6E6E               	movwf	3950,c	;volatile
  7073                           
  7074                           ; BSR set to: 0
  7075                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
  7076  002B1A  986D               	bcf	3949,4,c	;volatile
  7077                           
  7078                           ; BSR set to: 0
  7079                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
  7080  002B1C  9C6D               	bcf	3949,6,c	;volatile
  7081  002B1E                     
  7082                           ;usb_device.c: 326: {
  7083                           ;usb_device.c: 327: (UIR &= 0xF7);
  7084                           
  7085                           ; BSR set to: 0
  7086  002B1E  9668               	bcf	3944,3,c	;volatile
  7087                           
  7088                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
  7089  002B20  0E00               	movlw	0
  7090  002B22  6E43               	movwf	_inPipes+3,c	;volatile
  7091                           
  7092                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
  7093  002B24  0E00               	movlw	0
  7094  002B26  6E3B               	movwf	_outPipes+3,c	;volatile
  7095                           
  7096                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
  7097  002B28  0E00               	movlw	0
  7098  002B2A  6E3D               	movwf	_outPipes+5,c	;volatile
  7099  002B2C  0E00               	movlw	0
  7100  002B2E  6E3C               	movwf	_outPipes+4,c	;volatile
  7101                           
  7102                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
  7103  002B30  B668               	btfsc	3944,3,c	;volatile
  7104  002B32  D7F5               	goto	l400
  7105                           
  7106                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
  7107  002B34  0E01               	movlw	1
  7108  002B36  0101               	movlb	1	; () banked
  7109  002B38  6FF7               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  7110                           
  7111                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
  7112  002B3A  0E01               	movlw	1
  7113  002B3C  0102               	movlb	2	; () banked
  7114  002B3E  6FE9               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
  7115                           
  7116                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
  7117  002B40  0E00               	movlw	0
  7118  002B42  6FE8               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
  7119                           
  7120                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
  7121  002B44  0E00               	movlw	0
  7122  002B46  6FE7               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
  7123                           
  7124                           ;usb_device.c: 341: USBBusIsSuspended = 0;
  7125  002B48  0E00               	movlw	0
  7126  002B4A  0101               	movlb	1	; () banked
  7127  002B4C  6FF9               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
  7128                           
  7129                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
  7130  002B4E  0E00               	movlw	0
  7131  002B50  0100               	movlb	0	; () banked
  7132  002B52  6F68               	movwf	USBDeviceInit@i& (0+255),b
  7133  002B54                     l9864:
  7134                           
  7135                           ; BSR set to: 0
  7136  002B54  0E02               	movlw	2
  7137  002B56  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
  7138  002B58  D001               	goto	l402
  7139  002B5A  D02E               	goto	u9470
  7140  002B5C                     l402:
  7141                           
  7142                           ; BSR set to: 0
  7143                           ;usb_device.c: 346: {
  7144                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
  7145                           
  7146                           ; BSR set to: 0
  7147  002B5C  5168               	movf	USBDeviceInit@i& (0+255),w,b
  7148  002B5E  0D02               	mullw	2
  7149  002B60  0E46               	movlw	low _pBDTEntryIn
  7150  002B62  24F3               	addwf	prodl,w,c
  7151  002B64  6ED9               	movwf	fsr2l,c
  7152  002B66  0E00               	movlw	high _pBDTEntryIn
  7153  002B68  20F4               	addwfc	prodh,w,c
  7154  002B6A  6EDA               	movwf	fsr2h,c
  7155  002B6C  0E00               	movlw	0
  7156  002B6E  6EDE               	movwf	postinc2,c
  7157  002B70  0E00               	movlw	0
  7158  002B72  6EDD               	movwf	postdec2,c
  7159                           
  7160                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
  7161  002B74  5168               	movf	USBDeviceInit@i& (0+255),w,b
  7162  002B76  0D02               	mullw	2
  7163  002B78  0EC8               	movlw	low _pBDTEntryOut
  7164  002B7A  24F3               	addwf	prodl,w,c
  7165  002B7C  6ED9               	movwf	fsr2l,c
  7166  002B7E  0E02               	movlw	high _pBDTEntryOut
  7167  002B80  20F4               	addwfc	prodh,w,c
  7168  002B82  6EDA               	movwf	fsr2h,c
  7169  002B84  0E00               	movlw	0
  7170  002B86  6EDE               	movwf	postinc2,c
  7171  002B88  0E00               	movlw	0
  7172  002B8A  6EDD               	movwf	postdec2,c
  7173                           
  7174                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
  7175  002B8C  5168               	movf	USBDeviceInit@i& (0+255),w,b
  7176  002B8E  0D01               	mullw	1
  7177  002B90  0ED5               	movlw	low _ep_data_in
  7178  002B92  24F3               	addwf	prodl,w,c
  7179  002B94  6ED9               	movwf	fsr2l,c
  7180  002B96  0E02               	movlw	high _ep_data_in
  7181  002B98  20F4               	addwfc	prodh,w,c
  7182  002B9A  6EDA               	movwf	fsr2h,c
  7183  002B9C  0E00               	movlw	0
  7184  002B9E  6EDF               	movwf	indf2,c
  7185                           
  7186                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
  7187  002BA0  5168               	movf	USBDeviceInit@i& (0+255),w,b
  7188  002BA2  0D01               	mullw	1
  7189  002BA4  0ED2               	movlw	low _ep_data_out
  7190  002BA6  24F3               	addwf	prodl,w,c
  7191  002BA8  6ED9               	movwf	fsr2l,c
  7192  002BAA  0E02               	movlw	high _ep_data_out
  7193  002BAC  20F4               	addwfc	prodh,w,c
  7194  002BAE  6EDA               	movwf	fsr2h,c
  7195  002BB0  0E00               	movlw	0
  7196  002BB2  6EDF               	movwf	indf2,c
  7197                           
  7198                           ; BSR set to: 0
  7199  002BB4  2B68               	incf	USBDeviceInit@i& (0+255),f,b
  7200  002BB6  D7CE               	goto	l9864
  7201  002BB8                     u9470:
  7202                           
  7203                           ; BSR set to: 0
  7204                           ;usb_device.c: 351: }
  7205                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  7206                           
  7207                           ; BSR set to: 0
  7208  002BB8  0E08               	movlw	8
  7209  002BBA  6E46               	movwf	_pBDTEntryIn,c
  7210  002BBC  0E04               	movlw	4
  7211  002BBE  6E47               	movwf	_pBDTEntryIn+1,c
  7212                           
  7213                           ; BSR set to: 0
  7214                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
  7215  002BC0  0E16               	movlw	22
  7216  002BC2  6E70               	movwf	3952,c	;volatile
  7217                           
  7218                           ; BSR set to: 0
  7219                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  7220  002BC4  0E04               	movlw	4
  7221  002BC6  0104               	movlb	4	; () banked
  7222  002BC8  6F03               	movwf	3,b	;volatile
  7223  002BCA  0E30               	movlw	48
  7224  002BCC  6F02               	movwf	2,b	;volatile
  7225                           
  7226                           ; BSR set to: 4
  7227                           ;usb_device.c: 359: BDT[0].CNT = 8;
  7228  002BCE  0E08               	movlw	8
  7229  002BD0  6F01               	movwf	1,b	;volatile
  7230                           
  7231                           ; BSR set to: 4
  7232                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
  7233  002BD2  0E04               	movlw	4
  7234  002BD4  6F00               	movwf	0,b	;volatile
  7235                           
  7236                           ; BSR set to: 4
  7237                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
  7238  002BD6  8F00               	bsf	0,7,b	;volatile
  7239                           
  7240                           ; BSR set to: 4
  7241                           ;usb_device.c: 364: USBActiveConfiguration = 0;
  7242  002BD8  0E00               	movlw	0
  7243  002BDA  6E5E               	movwf	_USBActiveConfiguration,c	;volatile
  7244                           
  7245                           ; BSR set to: 4
  7246                           ;usb_device.c: 366: USB1msTickCount = 0;
  7247  002BDC  0E00               	movlw	0
  7248  002BDE  0102               	movlb	2	; () banked
  7249  002BE0  6FCE               	movwf	_USB1msTickCount& (0+255),b	;volatile
  7250  002BE2  0E00               	movlw	0
  7251  002BE4  6FCF               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
  7252  002BE6  0E00               	movlw	0
  7253  002BE8  6FD0               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
  7254  002BEA  0E00               	movlw	0
  7255  002BEC  6FD1               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
  7256                           
  7257                           ; BSR set to: 2
  7258                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
  7259  002BEE  0E00               	movlw	0
  7260  002BF0  6FE6               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
  7261                           
  7262                           ; BSR set to: 2
  7263                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
  7264  002BF2  0E00               	movlw	0
  7265  002BF4  6E58               	movwf	_USBDeviceState,c	;volatile
  7266                           
  7267                           ; BSR set to: 2
  7268  002BF6  0012               	return		;funcret
  7269  002BF8                     __end_of_USBDeviceInit:
  7270                           	opt stack 0
  7271                           tblptru	equ	0xFF8
  7272                           tblptrh	equ	0xFF7
  7273                           tblptrl	equ	0xFF6
  7274                           tablat	equ	0xFF5
  7275                           prodh	equ	0xFF4
  7276                           prodl	equ	0xFF3
  7277                           intcon	equ	0xFF2
  7278                           postinc0	equ	0xFEE
  7279                           wreg	equ	0xFE8
  7280                           indf1	equ	0xFE7
  7281                           postdec1	equ	0xFE5
  7282                           fsr1h	equ	0xFE2
  7283                           fsr1l	equ	0xFE1
  7284                           indf2	equ	0xFDF
  7285                           postinc2	equ	0xFDE
  7286                           postdec2	equ	0xFDD
  7287                           plusw2	equ	0xFDB
  7288                           fsr2h	equ	0xFDA
  7289                           fsr2l	equ	0xFD9
  7290                           status	equ	0xFD8
  7291                           
  7292 ;; *************** function _memset *****************
  7293 ;; Defined at:
  7294 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\memset.c"
  7295 ;; Parameters:    Size  Location     Type
  7296 ;;  p1              2    0[BANK0 ] PTR void 
  7297 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  7298 ;;  c               2    2[BANK0 ] int 
  7299 ;;  n               2    4[BANK0 ] unsigned int 
  7300 ;; Auto vars:     Size  Location     Type
  7301 ;;  p               2    6[BANK0 ] PTR unsigned char 
  7302 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  7303 ;; Return value:  Size  Location     Type
  7304 ;;                  2    0[BANK0 ] PTR void 
  7305 ;; Registers used:
  7306 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7307 ;; Tracked objects:
  7308 ;;		On entry : 0/0
  7309 ;;		On exit  : 0/0
  7310 ;;		Unchanged: 0/0
  7311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7312 ;;      Params:         0       6       0       0       0       0       0       0       0
  7313 ;;      Locals:         0       2       0       0       0       0       0       0       0
  7314 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7315 ;;      Totals:         0       8       0       0       0       0       0       0       0
  7316 ;;Total ram usage:        8 bytes
  7317 ;; Hardware stack levels used:    1
  7318 ;; Hardware stack levels required when called:   10
  7319 ;; This function calls:
  7320 ;;		Nothing
  7321 ;; This function is called by:
  7322 ;;		_USBDeviceInit
  7323 ;; This function uses a non-reentrant model
  7324 ;;
  7325                           
  7326                           	psect	text17
  7327  0054DE                     __ptext17:
  7328                           	opt stack 0
  7329  0054DE                     _memset:
  7330                           	opt stack 19
  7331                           
  7332                           ; BSR set to: 2
  7333                           ;incstack = 0
  7334  0054DE  C060  F066         	movff	memset@p1,memset@p
  7335  0054E2  C061  F067         	movff	memset@p1+1,memset@p+1
  7336  0054E6  D009               	goto	l3238
  7337  0054E8                     l8808:
  7338  0054E8  C066  FFD9         	movff	memset@p,fsr2l
  7339  0054EC  C067  FFDA         	movff	memset@p+1,fsr2h
  7340  0054F0  C062  FFDF         	movff	memset@c,indf2
  7341  0054F4  0100               	movlb	0	; () banked
  7342  0054F6  4B66               	infsnz	memset@p& (0+255),f,b
  7343  0054F8  2B67               	incf	(memset@p+1)& (0+255),f,b
  7344  0054FA                     l3238:
  7345                           
  7346                           ; BSR set to: 0
  7347  0054FA  0100               	movlb	0	; () banked
  7348  0054FC  0764               	decf	memset@n& (0+255),f,b
  7349  0054FE  A0D8               	btfss	status,0,c
  7350  005500  0765               	decf	(memset@n+1)& (0+255),f,b
  7351  005502  2964               	incf	memset@n& (0+255),w,b
  7352  005504  E1F1               	bnz	l8808
  7353  005506  2965               	incf	(memset@n+1)& (0+255),w,b
  7354  005508  B4D8               	btfsc	status,2,c
  7355  00550A  0012               	return	
  7356  00550C  D7ED               	goto	l3239
  7357  00550E                     __end_of_memset:
  7358                           	opt stack 0
  7359                           tblptru	equ	0xFF8
  7360                           tblptrh	equ	0xFF7
  7361                           tblptrl	equ	0xFF6
  7362                           tablat	equ	0xFF5
  7363                           prodh	equ	0xFF4
  7364                           prodl	equ	0xFF3
  7365                           intcon	equ	0xFF2
  7366                           postinc0	equ	0xFEE
  7367                           wreg	equ	0xFE8
  7368                           indf1	equ	0xFE7
  7369                           postdec1	equ	0xFE5
  7370                           fsr1h	equ	0xFE2
  7371                           fsr1l	equ	0xFE1
  7372                           indf2	equ	0xFDF
  7373                           postinc2	equ	0xFDE
  7374                           postdec2	equ	0xFDD
  7375                           plusw2	equ	0xFDB
  7376                           fsr2h	equ	0xFDA
  7377                           fsr2l	equ	0xFD9
  7378                           status	equ	0xFD8
  7379                           
  7380 ;; *************** function _TxLoRaWan *****************
  7381 ;; Defined at:
  7382 ;;		line 173 in file "LoRaWanCore.c"
  7383 ;; Parameters:    Size  Location     Type
  7384 ;;  conf            1    wreg     unsigned char 
  7385 ;;  porta           1  145[BANK0 ] unsigned char 
  7386 ;;  data            2  146[BANK0 ] PTR const unsigned char 
  7387 ;;		 -> main@dadoPoco(22), 
  7388 ;;  tamData         1  148[BANK0 ] unsigned char 
  7389 ;; Auto vars:     Size  Location     Type
  7390 ;;  conf            1  232[BANK1 ] unsigned char 
  7391 ;;  status          1  233[BANK1 ] unsigned char 
  7392 ;;  i               1  238[BANK1 ] unsigned char 
  7393 ;;  comando       200   32[BANK1 ] unsigned char [200]
  7394 ;;  hex             4  234[BANK1 ] unsigned char [4]
  7395 ;; Return value:  Size  Location     Type
  7396 ;;                  1    wreg      unsigned char 
  7397 ;; Registers used:
  7398 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7399 ;; Tracked objects:
  7400 ;;		On entry : 0/0
  7401 ;;		On exit  : 0/0
  7402 ;;		Unchanged: 0/0
  7403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7404 ;;      Params:         0       4       0       0       0       0       0       0       0
  7405 ;;      Locals:         0       0     207       0       0       0       0       0       0
  7406 ;;      Temps:          0       1       0       0       0       0       0       0       0
  7407 ;;      Totals:         0       5     207       0       0       0       0       0       0
  7408 ;;Total ram usage:      212 bytes
  7409 ;; Hardware stack levels used:    1
  7410 ;; Hardware stack levels required when called:   14
  7411 ;; This function calls:
  7412 ;;		_JoinLoRaWan
  7413 ;;		_ResetModuloLoRaWan
  7414 ;;		_enviaComando
  7415 ;;		_parseLoRaWan
  7416 ;;		_retornaDado
  7417 ;;		_sprintf
  7418 ;;		_strcat
  7419 ;; This function is called by:
  7420 ;;		_main
  7421 ;; This function uses a non-reentrant model
  7422 ;;
  7423                           
  7424                           	psect	text18
  7425  001BE8                     __ptext18:
  7426                           	opt stack 0
  7427  001BE8                     _TxLoRaWan:
  7428                           	opt stack 16
  7429                           
  7430                           ; BSR set to: 0
  7431                           ;incstack = 0
  7432                           ;TxLoRaWan@conf stored from wreg
  7433  001BE8  0101               	movlb	1	; () banked
  7434  001BEA  6FE8               	movwf	TxLoRaWan@conf& (0+255),b
  7435                           
  7436                           ;LoRaWanCore.c: 175: char comando[200];
  7437                           ;LoRaWanCore.c: 176: char hex[4];
  7438                           ;LoRaWanCore.c: 178: if (conf)
  7439  001BEC  0101               	movlb	1	; () banked
  7440  001BEE  51E8               	movf	TxLoRaWan@conf& (0+255),w,b
  7441  001BF0  B4D8               	btfsc	status,2,c
  7442  001BF2  D013               	goto	l2292
  7443                           
  7444                           ; BSR set to: 1
  7445                           ;LoRaWanCore.c: 179: sprintf(comando, "%s %d ", MAC_TX_CNF, porta);
  7446  001BF4  0E20               	movlw	low TxLoRaWan@comando
  7447  001BF6  0100               	movlb	0	; () banked
  7448  001BF8  6FBF               	movwf	sprintf@sp& (0+255),b
  7449  001BFA  0E01               	movlw	high TxLoRaWan@comando
  7450  001BFC  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  7451  001BFE  0EBC               	movlw	low STR_33
  7452  001C00  6FC1               	movwf	sprintf@f& (0+255),b
  7453  001C02  0E7F               	movlw	high STR_33
  7454  001C04  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  7455  001C06  0ED6               	movlw	low _MAC_TX_CNF
  7456  001C08  6FC3               	movwf	(?_sprintf+4)& (0+255),b
  7457  001C0A  0E7D               	movlw	high _MAC_TX_CNF
  7458  001C0C  6FC4               	movwf	(?_sprintf+5)& (0+255),b
  7459  001C0E  C0F1  F0C5         	movff	TxLoRaWan@porta,?_sprintf+6
  7460  001C12  6BC6               	clrf	(?_sprintf+7)& (0+255),b
  7461  001C14  EC09  F000         	call	_sprintf	;wreg free
  7462  001C18  D012               	goto	l2293
  7463  001C1A                     l2292:
  7464                           
  7465                           ;LoRaWanCore.c: 180: else
  7466                           ;LoRaWanCore.c: 181: sprintf(comando, "%s %d ", MAC_TX_UNCNF, porta);
  7467  001C1A  0E20               	movlw	low TxLoRaWan@comando
  7468  001C1C  0100               	movlb	0	; () banked
  7469  001C1E  6FBF               	movwf	sprintf@sp& (0+255),b
  7470  001C20  0E01               	movlw	high TxLoRaWan@comando
  7471  001C22  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  7472  001C24  0EBC               	movlw	low STR_33
  7473  001C26  6FC1               	movwf	sprintf@f& (0+255),b
  7474  001C28  0E7F               	movlw	high STR_33
  7475  001C2A  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  7476  001C2C  0EB6               	movlw	low _MAC_TX_UNCNF
  7477  001C2E  6FC3               	movwf	(?_sprintf+4)& (0+255),b
  7478  001C30  0E7D               	movlw	high _MAC_TX_UNCNF
  7479  001C32  6FC4               	movwf	(?_sprintf+5)& (0+255),b
  7480  001C34  C0F1  F0C5         	movff	TxLoRaWan@porta,?_sprintf+6
  7481  001C38  6BC6               	clrf	(?_sprintf+7)& (0+255),b
  7482  001C3A  EC09  F000         	call	_sprintf	;wreg free
  7483  001C3E                     l2293:
  7484                           
  7485                           ;LoRaWanCore.c: 183: for (uint8_t i=0;i<tamData;i++)
  7486  001C3E  0E00               	movlw	0
  7487  001C40  0101               	movlb	1	; () banked
  7488  001C42  6FEE               	movwf	TxLoRaWan@i& (0+255),b
  7489  001C44  D187               	goto	l2294
  7490  001C46                     
  7491                           ; BSR set to: 1
  7492                           ;LoRaWanCore.c: 184: {
  7493                           ;LoRaWanCore.c: 186: if (i == 2 || i == 3) {
  7494                           
  7495                           ; BSR set to: 1
  7496  001C46  0E02               	movlw	2
  7497  001C48  19EE               	xorwf	TxLoRaWan@i& (0+255),w,b
  7498  001C4A  B4D8               	btfsc	status,2,c
  7499  001C4C  D004               	goto	u9700
  7500                           
  7501                           ; BSR set to: 1
  7502  001C4E  0E03               	movlw	3
  7503  001C50  19EE               	xorwf	TxLoRaWan@i& (0+255),w,b
  7504  001C52  A4D8               	btfss	status,2,c
  7505  001C54  D00E               	goto	l2296
  7506  001C56                     u9700:
  7507                           
  7508                           ; BSR set to: 1
  7509                           ;LoRaWanCore.c: 187: if (retornaDado(1,4) == 1 || nivel1 == 0) {
  7510                           
  7511                           ; BSR set to: 1
  7512  001C56  0E04               	movlw	4
  7513  001C58  0100               	movlb	0	; () banked
  7514  001C5A  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7515  001C5C  0E01               	movlw	1
  7516  001C5E  EC26  F027         	call	_retornaDado
  7517  001C62  06E8               	decf	wreg,f,c
  7518  001C64  B4D8               	btfsc	status,2,c
  7519  001C66  D174               	goto	l2302
  7520  001C68  0102               	movlb	2	; () banked
  7521  001C6A  51EC               	movf	_nivel1& (0+255),w,b
  7522  001C6C                     L4:
  7523  001C6C  B4D8               	btfsc	status,2,c
  7524  001C6E  D170               	goto	l2302
  7525  001C70  D14A               	goto	l2393
  7526  001C72                     l2296:
  7527                           
  7528                           ;LoRaWanCore.c: 189: else if (i == 4 || i == 5 ){
  7529                           
  7530                           ; BSR set to: 2
  7531  001C72  0E04               	movlw	4
  7532  001C74  0101               	movlb	1	; () banked
  7533  001C76  19EE               	xorwf	TxLoRaWan@i& (0+255),w,b
  7534  001C78  B4D8               	btfsc	status,2,c
  7535  001C7A  D004               	goto	u9740
  7536                           
  7537                           ; BSR set to: 1
  7538  001C7C  0E05               	movlw	5
  7539  001C7E  19EE               	xorwf	TxLoRaWan@i& (0+255),w,b
  7540  001C80  A4D8               	btfss	status,2,c
  7541  001C82  D00C               	goto	l2304
  7542  001C84                     u9740:
  7543                           
  7544                           ; BSR set to: 1
  7545                           ;LoRaWanCore.c: 190: if (retornaDado(1,5) == 1 || nivel2 == 0) {
  7546                           
  7547                           ; BSR set to: 1
  7548  001C84  0E05               	movlw	5
  7549  001C86  0100               	movlb	0	; () banked
  7550  001C88  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7551  001C8A  0E01               	movlw	1
  7552  001C8C  EC26  F027         	call	_retornaDado
  7553  001C90  06E8               	decf	wreg,f,c
  7554  001C92  B4D8               	btfsc	status,2,c
  7555  001C94  D15D               	goto	l2302
  7556  001C96  0102               	movlb	2	; () banked
  7557  001C98  51EB               	movf	_nivel2& (0+255),w,b
  7558  001C9A  D7E8               	goto	L4
  7559  001C9C                     l2304:
  7560                           
  7561                           ;LoRaWanCore.c: 193: else if (i == 9){
  7562                           
  7563                           ; BSR set to: 2
  7564  001C9C  0E09               	movlw	9
  7565  001C9E  0101               	movlb	1	; () banked
  7566  001CA0  19EE               	xorwf	TxLoRaWan@i& (0+255),w,b
  7567  001CA2  A4D8               	btfss	status,2,c
  7568  001CA4  D010               	goto	l2311
  7569                           
  7570                           ; BSR set to: 1
  7571                           ;LoRaWanCore.c: 194: if((retornaDado(5,0) == 1) || (retornaDado(5,1) == 1) || pulsos1== 
      +                          0){
  7572  001CA6  0E00               	movlw	0
  7573  001CA8  0100               	movlb	0	; () banked
  7574  001CAA  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7575  001CAC  0E05               	movlw	5
  7576  001CAE  EC26  F027         	call	_retornaDado
  7577  001CB2  06E8               	decf	wreg,f,c
  7578  001CB4  B4D8               	btfsc	status,2,c
  7579  001CB6  D14C               	goto	l2302
  7580  001CB8  0E01               	movlw	1
  7581  001CBA  0100               	movlb	0	; () banked
  7582  001CBC  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7583  001CBE  0E05               	movlw	5
  7584  001CC0  EC26  F027         	call	_retornaDado
  7585  001CC4  D035               	goto	L33
  7586  001CC6                     l2311:
  7587                           
  7588                           ;LoRaWanCore.c: 196: else if (i == 8){
  7589                           
  7590                           ; BSR set to: 2
  7591  001CC6  0E08               	movlw	8
  7592  001CC8  0101               	movlb	1	; () banked
  7593  001CCA  19EE               	xorwf	TxLoRaWan@i& (0+255),w,b
  7594  001CCC  A4D8               	btfss	status,2,c
  7595  001CCE  D010               	goto	l2316
  7596                           
  7597                           ; BSR set to: 1
  7598                           ;LoRaWanCore.c: 197: if((retornaDado(5,0) == 1) || (retornaDado(5,1) == 1) || pulsos1 ==
      +                           0){
  7599  001CD0  0E00               	movlw	0
  7600  001CD2  0100               	movlb	0	; () banked
  7601  001CD4  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7602  001CD6  0E05               	movlw	5
  7603  001CD8  EC26  F027         	call	_retornaDado
  7604  001CDC  06E8               	decf	wreg,f,c
  7605  001CDE  B4D8               	btfsc	status,2,c
  7606  001CE0  D137               	goto	l2302
  7607  001CE2  0E01               	movlw	1
  7608  001CE4  0100               	movlb	0	; () banked
  7609  001CE6  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7610  001CE8  0E05               	movlw	5
  7611  001CEA  EC26  F027         	call	_retornaDado
  7612  001CEE  D020               	goto	L33
  7613  001CF0                     l2316:
  7614                           
  7615                           ;LoRaWanCore.c: 199: else if (i == 7){
  7616                           
  7617                           ; BSR set to: 2
  7618  001CF0  0E07               	movlw	7
  7619  001CF2  0101               	movlb	1	; () banked
  7620  001CF4  19EE               	xorwf	TxLoRaWan@i& (0+255),w,b
  7621  001CF6  A4D8               	btfss	status,2,c
  7622  001CF8  D007               	goto	l2321
  7623                           
  7624                           ; BSR set to: 1
  7625                           ;LoRaWanCore.c: 200: if((retornaDado(5,0) == 1) || pulsos1 == 0){
  7626  001CFA  0E00               	movlw	0
  7627  001CFC  0100               	movlb	0	; () banked
  7628  001CFE  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7629  001D00  0E05               	movlw	5
  7630  001D02  EC26  F027         	call	_retornaDado
  7631  001D06  D014               	goto	L33
  7632  001D08                     l2321:
  7633                           
  7634                           ;LoRaWanCore.c: 202: else if (i == 6){
  7635                           
  7636                           ; BSR set to: 2
  7637  001D08  0E06               	movlw	6
  7638  001D0A  0101               	movlb	1	; () banked
  7639  001D0C  19EE               	xorwf	TxLoRaWan@i& (0+255),w,b
  7640  001D0E  A4D8               	btfss	status,2,c
  7641  001D10  D015               	goto	l2326
  7642                           
  7643                           ; BSR set to: 1
  7644                           ;LoRaWanCore.c: 203: if((retornaDado(5,0) == 1) && (retornaDado(5,1) == 1) || pulsos1 ==
      +                           0){
  7645  001D12  0E00               	movlw	0
  7646  001D14  0100               	movlb	0	; () banked
  7647  001D16  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7648  001D18  0E05               	movlw	5
  7649  001D1A  EC26  F027         	call	_retornaDado
  7650  001D1E  06E8               	decf	wreg,f,c
  7651  001D20  A4D8               	btfss	status,2,c
  7652  001D22  D009               	goto	u9900
  7653  001D24  0E01               	movlw	1
  7654  001D26  0100               	movlb	0	; () banked
  7655  001D28  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7656  001D2A  0E05               	movlw	5
  7657  001D2C  EC26  F027         	call	_retornaDado
  7658  001D30                     L33:
  7659  001D30  06E8               	decf	wreg,f,c
  7660  001D32  B4D8               	btfsc	status,2,c
  7661  001D34  D10D               	goto	l2302
  7662  001D36                     u9900:
  7663  001D36  0102               	movlb	2	; () banked
  7664  001D38  51EA               	movf	_pulsos1& (0+255),w,b
  7665  001D3A  D798               	goto	L4
  7666  001D3C                     l2326:
  7667                           
  7668                           ;LoRaWanCore.c: 206: else if (i == 13){
  7669                           
  7670                           ; BSR set to: 2
  7671  001D3C  0E0D               	movlw	13
  7672  001D3E  0101               	movlb	1	; () banked
  7673  001D40  19EE               	xorwf	TxLoRaWan@i& (0+255),w,b
  7674  001D42  A4D8               	btfss	status,2,c
  7675  001D44  D010               	goto	l2333
  7676                           
  7677                           ; BSR set to: 1
  7678                           ;LoRaWanCore.c: 207: if((retornaDado(5,2) == 1) || (retornaDado(5,3) == 1) || pulsos2 ==
      +                           0){
  7679  001D46  0E02               	movlw	2
  7680  001D48  0100               	movlb	0	; () banked
  7681  001D4A  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7682  001D4C  0E05               	movlw	5
  7683  001D4E  EC26  F027         	call	_retornaDado
  7684  001D52  06E8               	decf	wreg,f,c
  7685  001D54  B4D8               	btfsc	status,2,c
  7686  001D56  D0FC               	goto	l2302
  7687  001D58  0E03               	movlw	3
  7688  001D5A  0100               	movlb	0	; () banked
  7689  001D5C  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7690  001D5E  0E05               	movlw	5
  7691  001D60  EC26  F027         	call	_retornaDado
  7692  001D64  D032               	goto	L34
  7693  001D66                     l2333:
  7694                           
  7695                           ; BSR set to: 1
  7696                           ;LoRaWanCore.c: 209: else if (i == 12){
  7697                           
  7698                           ; BSR set to: 1
  7699  001D66  0E0C               	movlw	12
  7700  001D68  19EE               	xorwf	TxLoRaWan@i& (0+255),w,b
  7701  001D6A  A4D8               	btfss	status,2,c
  7702  001D6C  D010               	goto	l2338
  7703                           
  7704                           ; BSR set to: 1
  7705                           ;LoRaWanCore.c: 210: if((retornaDado(5,2) == 1) || (retornaDado(5,3) == 1) || pulsos2 ==
      +                           0){
  7706  001D6E  0E02               	movlw	2
  7707  001D70  0100               	movlb	0	; () banked
  7708  001D72  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7709  001D74  0E05               	movlw	5
  7710  001D76  EC26  F027         	call	_retornaDado
  7711  001D7A  06E8               	decf	wreg,f,c
  7712  001D7C  B4D8               	btfsc	status,2,c
  7713  001D7E  D0E8               	goto	l2302
  7714  001D80  0E03               	movlw	3
  7715  001D82  0100               	movlb	0	; () banked
  7716  001D84  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7717  001D86  0E05               	movlw	5
  7718  001D88  EC26  F027         	call	_retornaDado
  7719  001D8C  D01E               	goto	L34
  7720  001D8E                     l2338:
  7721                           
  7722                           ; BSR set to: 1
  7723                           ;LoRaWanCore.c: 212: else if (i == 11){
  7724                           
  7725                           ; BSR set to: 1
  7726  001D8E  0E0B               	movlw	11
  7727  001D90  19EE               	xorwf	TxLoRaWan@i& (0+255),w,b
  7728  001D92  A4D8               	btfss	status,2,c
  7729  001D94  D007               	goto	l2343
  7730                           
  7731                           ; BSR set to: 1
  7732                           ;LoRaWanCore.c: 213: if((retornaDado(5,2) == 1) || pulsos2 == 0){
  7733  001D96  0E02               	movlw	2
  7734  001D98  0100               	movlb	0	; () banked
  7735  001D9A  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7736  001D9C  0E05               	movlw	5
  7737  001D9E  EC26  F027         	call	_retornaDado
  7738  001DA2  D013               	goto	L34
  7739  001DA4                     l2343:
  7740                           
  7741                           ; BSR set to: 1
  7742                           ;LoRaWanCore.c: 215: else if (i == 10){
  7743                           
  7744                           ; BSR set to: 1
  7745  001DA4  0E0A               	movlw	10
  7746  001DA6  19EE               	xorwf	TxLoRaWan@i& (0+255),w,b
  7747  001DA8  A4D8               	btfss	status,2,c
  7748  001DAA  D015               	goto	l2348
  7749                           
  7750                           ; BSR set to: 1
  7751                           ;LoRaWanCore.c: 216: if((retornaDado(5,2) == 1) && (retornaDado(5,3) == 1) || pulsos2 ==
      +                           0){
  7752  001DAC  0E02               	movlw	2
  7753  001DAE  0100               	movlb	0	; () banked
  7754  001DB0  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7755  001DB2  0E05               	movlw	5
  7756  001DB4  EC26  F027         	call	_retornaDado
  7757  001DB8  06E8               	decf	wreg,f,c
  7758  001DBA  A4D8               	btfss	status,2,c
  7759  001DBC  D009               	goto	u10050
  7760  001DBE  0E03               	movlw	3
  7761  001DC0  0100               	movlb	0	; () banked
  7762  001DC2  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7763  001DC4  0E05               	movlw	5
  7764  001DC6  EC26  F027         	call	_retornaDado
  7765  001DCA                     L34:
  7766  001DCA  06E8               	decf	wreg,f,c
  7767  001DCC  B4D8               	btfsc	status,2,c
  7768  001DCE  D0C0               	goto	l2302
  7769  001DD0                     u10050:
  7770  001DD0  0101               	movlb	1	; () banked
  7771  001DD2  51FD               	movf	_pulsos2& (0+255),w,b
  7772  001DD4  D74B               	goto	L4
  7773  001DD6                     l2348:
  7774                           
  7775                           ; BSR set to: 1
  7776                           ;LoRaWanCore.c: 219: else if (i == 17){
  7777                           
  7778                           ; BSR set to: 1
  7779  001DD6  0E11               	movlw	17
  7780  001DD8  19EE               	xorwf	TxLoRaWan@i& (0+255),w,b
  7781  001DDA  A4D8               	btfss	status,2,c
  7782  001DDC  D010               	goto	l2355
  7783                           
  7784                           ; BSR set to: 1
  7785                           ;LoRaWanCore.c: 220: if((retornaDado(5,4) == 1) || (retornaDado(5,5) == 1) || pulsos3 ==
      +                           0){
  7786  001DDE  0E04               	movlw	4
  7787  001DE0  0100               	movlb	0	; () banked
  7788  001DE2  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7789  001DE4  0E05               	movlw	5
  7790  001DE6  EC26  F027         	call	_retornaDado
  7791  001DEA  06E8               	decf	wreg,f,c
  7792  001DEC  B4D8               	btfsc	status,2,c
  7793  001DEE  D0B0               	goto	l2302
  7794  001DF0  0E05               	movlw	5
  7795  001DF2  0100               	movlb	0	; () banked
  7796  001DF4  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7797  001DF6  0E05               	movlw	5
  7798  001DF8  EC26  F027         	call	_retornaDado
  7799  001DFC  D032               	goto	L35
  7800  001DFE                     l2355:
  7801                           
  7802                           ; BSR set to: 1
  7803                           ;LoRaWanCore.c: 222: else if (i == 16){
  7804                           
  7805                           ; BSR set to: 1
  7806  001DFE  0E10               	movlw	16
  7807  001E00  19EE               	xorwf	TxLoRaWan@i& (0+255),w,b
  7808  001E02  A4D8               	btfss	status,2,c
  7809  001E04  D010               	goto	l2360
  7810                           
  7811                           ; BSR set to: 1
  7812                           ;LoRaWanCore.c: 223: if((retornaDado(5,4) == 1) || (retornaDado(5,5) == 1) || pulsos3 ==
      +                           0){
  7813  001E06  0E04               	movlw	4
  7814  001E08  0100               	movlb	0	; () banked
  7815  001E0A  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7816  001E0C  0E05               	movlw	5
  7817  001E0E  EC26  F027         	call	_retornaDado
  7818  001E12  06E8               	decf	wreg,f,c
  7819  001E14  B4D8               	btfsc	status,2,c
  7820  001E16  D09C               	goto	l2302
  7821  001E18  0E05               	movlw	5
  7822  001E1A  0100               	movlb	0	; () banked
  7823  001E1C  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7824  001E1E  0E05               	movlw	5
  7825  001E20  EC26  F027         	call	_retornaDado
  7826  001E24  D01E               	goto	L35
  7827  001E26                     l2360:
  7828                           
  7829                           ; BSR set to: 1
  7830                           ;LoRaWanCore.c: 225: else if (i == 15){
  7831                           
  7832                           ; BSR set to: 1
  7833  001E26  0E0F               	movlw	15
  7834  001E28  19EE               	xorwf	TxLoRaWan@i& (0+255),w,b
  7835  001E2A  A4D8               	btfss	status,2,c
  7836  001E2C  D007               	goto	l2365
  7837                           
  7838                           ; BSR set to: 1
  7839                           ;LoRaWanCore.c: 226: if((retornaDado(5,4) == 1) || pulsos3 == 0){
  7840  001E2E  0E04               	movlw	4
  7841  001E30  0100               	movlb	0	; () banked
  7842  001E32  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7843  001E34  0E05               	movlw	5
  7844  001E36  EC26  F027         	call	_retornaDado
  7845  001E3A  D013               	goto	L35
  7846  001E3C                     l2365:
  7847                           
  7848                           ; BSR set to: 1
  7849                           ;LoRaWanCore.c: 228: else if (i == 14){
  7850                           
  7851                           ; BSR set to: 1
  7852  001E3C  0E0E               	movlw	14
  7853  001E3E  19EE               	xorwf	TxLoRaWan@i& (0+255),w,b
  7854  001E40  A4D8               	btfss	status,2,c
  7855  001E42  D015               	goto	l2370
  7856                           
  7857                           ; BSR set to: 1
  7858                           ;LoRaWanCore.c: 229: if((retornaDado(5,4) == 1) && (retornaDado(5,5) == 1) || pulsos3 ==
      +                           0){
  7859  001E44  0E04               	movlw	4
  7860  001E46  0100               	movlb	0	; () banked
  7861  001E48  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7862  001E4A  0E05               	movlw	5
  7863  001E4C  EC26  F027         	call	_retornaDado
  7864  001E50  06E8               	decf	wreg,f,c
  7865  001E52  A4D8               	btfss	status,2,c
  7866  001E54  D009               	goto	u10200
  7867  001E56  0E05               	movlw	5
  7868  001E58  0100               	movlb	0	; () banked
  7869  001E5A  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7870  001E5C  0E05               	movlw	5
  7871  001E5E  EC26  F027         	call	_retornaDado
  7872  001E62                     L35:
  7873  001E62  06E8               	decf	wreg,f,c
  7874  001E64  B4D8               	btfsc	status,2,c
  7875  001E66  D074               	goto	l2302
  7876  001E68                     u10200:
  7877  001E68  0101               	movlb	1	; () banked
  7878  001E6A  51FC               	movf	_pulsos3& (0+255),w,b
  7879  001E6C  D6FF               	goto	L4
  7880  001E6E                     l2370:
  7881                           
  7882                           ; BSR set to: 1
  7883                           ;LoRaWanCore.c: 232: else if (i == 21){
  7884                           
  7885                           ; BSR set to: 1
  7886  001E6E  0E15               	movlw	21
  7887  001E70  19EE               	xorwf	TxLoRaWan@i& (0+255),w,b
  7888  001E72  A4D8               	btfss	status,2,c
  7889  001E74  D010               	goto	l2377
  7890                           
  7891                           ; BSR set to: 1
  7892                           ;LoRaWanCore.c: 233: if((retornaDado(5,6) == 1) || (retornaDado(5,7) == 1) || pulsos4 ==
      +                           0){
  7893  001E76  0E06               	movlw	6
  7894  001E78  0100               	movlb	0	; () banked
  7895  001E7A  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7896  001E7C  0E05               	movlw	5
  7897  001E7E  EC26  F027         	call	_retornaDado
  7898  001E82  06E8               	decf	wreg,f,c
  7899  001E84  B4D8               	btfsc	status,2,c
  7900  001E86  D064               	goto	l2302
  7901  001E88  0E07               	movlw	7
  7902  001E8A  0100               	movlb	0	; () banked
  7903  001E8C  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7904  001E8E  0E05               	movlw	5
  7905  001E90  EC26  F027         	call	_retornaDado
  7906  001E94  D032               	goto	L36
  7907  001E96                     l2377:
  7908                           
  7909                           ; BSR set to: 1
  7910                           ;LoRaWanCore.c: 235: else if (i == 20){
  7911                           
  7912                           ; BSR set to: 1
  7913  001E96  0E14               	movlw	20
  7914  001E98  19EE               	xorwf	TxLoRaWan@i& (0+255),w,b
  7915  001E9A  A4D8               	btfss	status,2,c
  7916  001E9C  D010               	goto	l2382
  7917                           
  7918                           ; BSR set to: 1
  7919                           ;LoRaWanCore.c: 236: if((retornaDado(5,6) == 1) || (retornaDado(5,7) == 1) || pulsos4 ==
      +                           0){
  7920  001E9E  0E06               	movlw	6
  7921  001EA0  0100               	movlb	0	; () banked
  7922  001EA2  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7923  001EA4  0E05               	movlw	5
  7924  001EA6  EC26  F027         	call	_retornaDado
  7925  001EAA  06E8               	decf	wreg,f,c
  7926  001EAC  B4D8               	btfsc	status,2,c
  7927  001EAE  D050               	goto	l2302
  7928  001EB0  0E07               	movlw	7
  7929  001EB2  0100               	movlb	0	; () banked
  7930  001EB4  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7931  001EB6  0E05               	movlw	5
  7932  001EB8  EC26  F027         	call	_retornaDado
  7933  001EBC  D01E               	goto	L36
  7934  001EBE                     l2382:
  7935                           
  7936                           ; BSR set to: 1
  7937                           ;LoRaWanCore.c: 238: else if (i == 19){
  7938                           
  7939                           ; BSR set to: 1
  7940  001EBE  0E13               	movlw	19
  7941  001EC0  19EE               	xorwf	TxLoRaWan@i& (0+255),w,b
  7942  001EC2  A4D8               	btfss	status,2,c
  7943  001EC4  D007               	goto	l2387
  7944                           
  7945                           ; BSR set to: 1
  7946                           ;LoRaWanCore.c: 239: if((retornaDado(5,6) == 1) || pulsos4 == 0){
  7947  001EC6  0E06               	movlw	6
  7948  001EC8  0100               	movlb	0	; () banked
  7949  001ECA  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7950  001ECC  0E05               	movlw	5
  7951  001ECE  EC26  F027         	call	_retornaDado
  7952  001ED2  D013               	goto	L36
  7953  001ED4                     l2387:
  7954                           
  7955                           ; BSR set to: 1
  7956                           ;LoRaWanCore.c: 241: else if (i == 18){
  7957                           
  7958                           ; BSR set to: 1
  7959  001ED4  0E12               	movlw	18
  7960  001ED6  19EE               	xorwf	TxLoRaWan@i& (0+255),w,b
  7961  001ED8  A4D8               	btfss	status,2,c
  7962  001EDA  D015               	goto	l2393
  7963                           
  7964                           ; BSR set to: 1
  7965                           ;LoRaWanCore.c: 242: if((retornaDado(5,6) == 1) && (retornaDado(5,7) == 1) || pulsos4 ==
      +                           0){
  7966  001EDC  0E06               	movlw	6
  7967  001EDE  0100               	movlb	0	; () banked
  7968  001EE0  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7969  001EE2  0E05               	movlw	5
  7970  001EE4  EC26  F027         	call	_retornaDado
  7971  001EE8  06E8               	decf	wreg,f,c
  7972  001EEA  A4D8               	btfss	status,2,c
  7973  001EEC  D009               	goto	u10350
  7974  001EEE  0E07               	movlw	7
  7975  001EF0  0100               	movlb	0	; () banked
  7976  001EF2  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7977  001EF4  0E05               	movlw	5
  7978  001EF6  EC26  F027         	call	_retornaDado
  7979  001EFA                     L36:
  7980  001EFA  06E8               	decf	wreg,f,c
  7981  001EFC  B4D8               	btfsc	status,2,c
  7982  001EFE  D028               	goto	l2302
  7983  001F00                     u10350:
  7984  001F00  0101               	movlb	1	; () banked
  7985  001F02  51FB               	movf	_pulsos4& (0+255),w,b
  7986  001F04  D6B3               	goto	L4
  7987  001F06                     l2393:
  7988                           
  7989                           ;LoRaWanCore.c: 245: sprintf(hex, "%02X", data[i]);
  7990                           
  7991                           ; BSR set to: 1
  7992                           
  7993                           ; BSR set to: 1
  7994                           
  7995                           ; BSR set to: 1
  7996                           
  7997                           ; BSR set to: 1
  7998                           
  7999                           ; BSR set to: 1
  8000                           
  8001                           ; BSR set to: 1
  8002                           
  8003                           ; BSR set to: 1
  8004                           
  8005                           ; BSR set to: 1
  8006                           
  8007                           ; BSR set to: 1
  8008                           
  8009                           ; BSR set to: 1
  8010                           
  8011                           ; BSR set to: 1
  8012                           
  8013                           ; BSR set to: 1
  8014                           
  8015                           ; BSR set to: 1
  8016                           
  8017                           ; BSR set to: 1
  8018                           
  8019                           ; BSR set to: 1
  8020                           
  8021                           ; BSR set to: 1
  8022                           
  8023                           ; BSR set to: 1
  8024                           
  8025                           ; BSR set to: 1
  8026                           
  8027                           ; BSR set to: 1
  8028  001F06  0EEA               	movlw	low TxLoRaWan@hex
  8029  001F08  0100               	movlb	0	; () banked
  8030  001F0A  6FBF               	movwf	sprintf@sp& (0+255),b
  8031  001F0C  0E01               	movlw	high TxLoRaWan@hex
  8032  001F0E  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  8033  001F10  0EEB               	movlw	low STR_35
  8034  001F12  6FC1               	movwf	sprintf@f& (0+255),b
  8035  001F14  0E7F               	movlw	high STR_35
  8036  001F16  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  8037  001F18  0101               	movlb	1	; () banked
  8038  001F1A  51EE               	movf	TxLoRaWan@i& (0+255),w,b
  8039  001F1C  0D01               	mullw	1
  8040  001F1E  50F3               	movf	prodl,w,c
  8041  001F20  0100               	movlb	0	; () banked
  8042  001F22  25F2               	addwf	TxLoRaWan@data& (0+255),w,b
  8043  001F24  6ED9               	movwf	fsr2l,c
  8044  001F26  50F4               	movf	prodh,w,c
  8045  001F28  21F3               	addwfc	(TxLoRaWan@data+1)& (0+255),w,b
  8046  001F2A  6EDA               	movwf	fsr2h,c
  8047  001F2C  50DF               	movf	indf2,w,c
  8048  001F2E  6FF5               	movwf	??_TxLoRaWan& (0+255),b
  8049  001F30  51F5               	movf	??_TxLoRaWan& (0+255),w,b
  8050  001F32  6FC3               	movwf	(?_sprintf+4)& (0+255),b
  8051  001F34  6BC4               	clrf	(?_sprintf+5)& (0+255),b
  8052  001F36  EC09  F000         	call	_sprintf	;wreg free
  8053                           
  8054                           ;LoRaWanCore.c: 246: strcat(comando,hex);
  8055  001F3A  0E20               	movlw	low TxLoRaWan@comando
  8056  001F3C  0100               	movlb	0	; () banked
  8057  001F3E  6F60               	movwf	strcat@to& (0+255),b
  8058  001F40  0E01               	movlw	high TxLoRaWan@comando
  8059  001F42  6F61               	movwf	(strcat@to+1)& (0+255),b
  8060  001F44  0EEA               	movlw	low TxLoRaWan@hex
  8061  001F46  6F62               	movwf	strcat@from& (0+255),b
  8062  001F48  0E01               	movlw	high TxLoRaWan@hex
  8063  001F4A  6F63               	movwf	(strcat@from+1)& (0+255),b
  8064  001F4C  EC82  F028         	call	_strcat	;wreg free
  8065  001F50                     l2302:
  8066  001F50  0101               	movlb	1	; () banked
  8067  001F52  2BEE               	incf	TxLoRaWan@i& (0+255),f,b
  8068  001F54                     l2294:
  8069                           
  8070                           ; BSR set to: 1
  8071                           
  8072                           ; BSR set to: 1
  8073  001F54  0100               	movlb	0	; () banked
  8074  001F56  51F4               	movf	TxLoRaWan@tamData& (0+255),w,b
  8075  001F58  0101               	movlb	1	; () banked
  8076  001F5A  5DEE               	subwf	TxLoRaWan@i& (0+255),w,b
  8077  001F5C  A0D8               	btfss	status,0,c
  8078  001F5E  D673               	goto	l2295
  8079  001F60                     u10370:
  8080                           
  8081                           ;LoRaWanCore.c: 251: {
  8082                           ;LoRaWanCore.c: 252: uint8_t status=enviaComando(comando,0);
  8083                           
  8084                           ; BSR set to: 1
  8085                           
  8086                           ;LoRaWanCore.c: 247: }
  8087                           ;LoRaWanCore.c: 250: while (1)
  8088                           
  8089                           ; BSR set to: 1
  8090  001F60  0E20               	movlw	low TxLoRaWan@comando
  8091  001F62  0100               	movlb	0	; () banked
  8092  001F64  6F7C               	movwf	enviaComando@cmd& (0+255),b
  8093  001F66  0E01               	movlw	high TxLoRaWan@comando
  8094  001F68  6F7D               	movwf	(enviaComando@cmd+1)& (0+255),b
  8095  001F6A  0E00               	movlw	0
  8096  001F6C  6F7E               	movwf	enviaComando@tipoComando& (0+255),b
  8097  001F6E  EC25  F01B         	call	_enviaComando	;wreg free
  8098  001F72  0101               	movlb	1	; () banked
  8099  001F74  6FE9               	movwf	TxLoRaWan@status& (0+255),b
  8100                           
  8101                           ;LoRaWanCore.c: 253: switch (status)
  8102  001F76  D015               	goto	l2400
  8103  001F78                     
  8104                           ; BSR set to: 1
  8105                           ;LoRaWanCore.c: 256: return (parseLoRaWan()==9);
  8106                           
  8107                           ; BSR set to: 1
  8108  001F78  EC38  F021         	call	_parseLoRaWan	;wreg free
  8109  001F7C  0A09               	xorlw	9
  8110  001F7E  A4D8               	btfss	status,2,c
  8111  001F80  D002               	goto	u10380
  8112  001F82  0E01               	movlw	1
  8113  001F84  0012               	return	
  8114  001F86                     u10380:
  8115  001F86  0E00               	movlw	0
  8116  001F88  0012               	return	
  8117  001F8A                     
  8118                           ;LoRaWanCore.c: 258: case 5:
  8119                           ;LoRaWanCore.c: 259: {
  8120                           ;LoRaWanCore.c: 260: if (!JoinLoRaWan())
  8121  001F8A  ECEA  F029         	call	_JoinLoRaWan	;wreg free
  8122  001F8E  D002               	goto	L9
  8123  001F90                     
  8124                           ;LoRaWanCore.c: 265: {
  8125                           ;LoRaWanCore.c: 266: if (!ResetModuloLoRaWan())
  8126  001F90  ECE0  F02A         	call	_ResetModuloLoRaWan	;wreg free
  8127  001F94                     L9:
  8128  001F94  0900               	iorlw	0
  8129  001F96  A4D8               	btfss	status,2,c
  8130  001F98  D7E3               	goto	u10370
  8131                           
  8132                           ;LoRaWanCore.c: 267: return 0;
  8133  001F9A  0E00               	movlw	0
  8134  001F9C  0012               	return	
  8135  001F9E                     
  8136                           ;LoRaWanCore.c: 272: return 0;
  8137  001F9E  0E00               	movlw	0
  8138  001FA0  0012               	return	
  8139  001FA2                     l2400:
  8140  001FA2  0101               	movlb	1	; () banked
  8141  001FA4  51E9               	movf	TxLoRaWan@status& (0+255),w,b
  8142                           
  8143                           ; Switch size 1, requested type "space"
  8144                           ; Number of cases is 4, Range of values is 0 to 6
  8145                           ; switch strategies available:
  8146                           ; Name         Instructions Cycles
  8147                           ; simple_byte           13     7 (average)
  8148                           ;	Chosen strategy is simple_byte
  8149  001FA6  0A00               	xorlw	0	; case 0
  8150  001FA8  B4D8               	btfsc	status,2,c
  8151  001FAA  D7E6               	goto	l2401
  8152  001FAC  0A02               	xorlw	2	; case 2
  8153  001FAE  B4D8               	btfsc	status,2,c
  8154  001FB0  D7EC               	goto	l2403
  8155  001FB2  0A07               	xorlw	7	; case 5
  8156  001FB4  B4D8               	btfsc	status,2,c
  8157  001FB6  D7E9               	goto	l2403
  8158  001FB8  0A03               	xorlw	3	; case 6
  8159  001FBA  B4D8               	btfsc	status,2,c
  8160  001FBC  D7E9               	goto	l2407
  8161  001FBE  D7EF               	goto	l2409
  8162  001FC0                     __end_of_TxLoRaWan:
  8163                           	opt stack 0
  8164                           tblptru	equ	0xFF8
  8165                           tblptrh	equ	0xFF7
  8166                           tblptrl	equ	0xFF6
  8167                           tablat	equ	0xFF5
  8168                           prodh	equ	0xFF4
  8169                           prodl	equ	0xFF3
  8170                           intcon	equ	0xFF2
  8171                           postinc0	equ	0xFEE
  8172                           wreg	equ	0xFE8
  8173                           indf1	equ	0xFE7
  8174                           postdec1	equ	0xFE5
  8175                           fsr1h	equ	0xFE2
  8176                           fsr1l	equ	0xFE1
  8177                           indf2	equ	0xFDF
  8178                           postinc2	equ	0xFDE
  8179                           postdec2	equ	0xFDD
  8180                           plusw2	equ	0xFDB
  8181                           fsr2h	equ	0xFDA
  8182                           fsr2l	equ	0xFD9
  8183                           status	equ	0xFD8
  8184                           
  8185 ;; *************** function _strcat *****************
  8186 ;; Defined at:
  8187 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strcat.c"
  8188 ;; Parameters:    Size  Location     Type
  8189 ;;  to              2    0[BANK0 ] PTR unsigned char 
  8190 ;;		 -> TxLoRaWan@comando(200), frameBuffer(200), 
  8191 ;;  from            2    2[BANK0 ] PTR const unsigned char 
  8192 ;;		 -> TxLoRaWan@hex(4), addSensorFloat@f(30), addSensorInt@f(30), addSensorStr@f(30), 
  8193 ;; Auto vars:     Size  Location     Type
  8194 ;;  cp              2    4[BANK0 ] PTR unsigned char 
  8195 ;;		 -> TxLoRaWan@comando(200), frameBuffer(200), 
  8196 ;; Return value:  Size  Location     Type
  8197 ;;                  2    0[BANK0 ] PTR unsigned char 
  8198 ;; Registers used:
  8199 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8200 ;; Tracked objects:
  8201 ;;		On entry : 0/0
  8202 ;;		On exit  : 0/0
  8203 ;;		Unchanged: 0/0
  8204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8205 ;;      Params:         0       4       0       0       0       0       0       0       0
  8206 ;;      Locals:         0       2       0       0       0       0       0       0       0
  8207 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8208 ;;      Totals:         0       6       0       0       0       0       0       0       0
  8209 ;;Total ram usage:        6 bytes
  8210 ;; Hardware stack levels used:    1
  8211 ;; Hardware stack levels required when called:   10
  8212 ;; This function calls:
  8213 ;;		Nothing
  8214 ;; This function is called by:
  8215 ;;		_TxLoRaWan
  8216 ;;		_addSensorStr
  8217 ;;		_addSensorInt
  8218 ;;		_addSensorFloat
  8219 ;; This function uses a non-reentrant model
  8220 ;;
  8221                           
  8222                           	psect	text19
  8223  005104                     __ptext19:
  8224                           	opt stack 0
  8225  005104                     _strcat:
  8226                           	opt stack 19
  8227                           
  8228                           ;incstack = 0
  8229  005104  C060  F064         	movff	strcat@to,strcat@cp
  8230  005108  C061  F065         	movff	strcat@to+1,strcat@cp+1
  8231  00510C  D003               	goto	l3368
  8232  00510E  0100               	movlb	0	; () banked
  8233  005110  4B64               	infsnz	strcat@cp& (0+255),f,b
  8234  005112  2B65               	incf	(strcat@cp+1)& (0+255),f,b
  8235  005114                     l3368:
  8236                           
  8237                           ; BSR set to: 0
  8238  005114  C064  FFD9         	movff	strcat@cp,fsr2l
  8239  005118  C065  FFDA         	movff	strcat@cp+1,fsr2h
  8240  00511C  50DF               	movf	indf2,w,c
  8241  00511E  B4D8               	btfsc	status,2,c
  8242  005120  D006               	goto	l3371
  8243  005122  D7F5               	goto	l3369
  8244  005124  0100               	movlb	0	; () banked
  8245  005126  4B64               	infsnz	strcat@cp& (0+255),f,b
  8246  005128  2B65               	incf	(strcat@cp+1)& (0+255),f,b
  8247  00512A  4B62               	infsnz	strcat@from& (0+255),f,b
  8248  00512C  2B63               	incf	(strcat@from+1)& (0+255),f,b
  8249  00512E                     l3371:
  8250                           
  8251                           ; BSR set to: 0
  8252  00512E  C062  FFD9         	movff	strcat@from,fsr2l
  8253  005132  C063  FFDA         	movff	strcat@from+1,fsr2h
  8254  005136  C064  FFE1         	movff	strcat@cp,fsr1l
  8255  00513A  C065  FFE2         	movff	strcat@cp+1,fsr1h
  8256  00513E  CFDF FFE7          	movff	indf2,indf1
  8257  005142  50E7               	movf	indf1,w,c
  8258  005144  B4D8               	btfsc	status,2,c
  8259  005146  0012               	return	
  8260  005148  D7ED               	goto	l3372
  8261  00514A                     __end_of_strcat:
  8262                           	opt stack 0
  8263                           tblptru	equ	0xFF8
  8264                           tblptrh	equ	0xFF7
  8265                           tblptrl	equ	0xFF6
  8266                           tablat	equ	0xFF5
  8267                           prodh	equ	0xFF4
  8268                           prodl	equ	0xFF3
  8269                           intcon	equ	0xFF2
  8270                           postinc0	equ	0xFEE
  8271                           wreg	equ	0xFE8
  8272                           indf1	equ	0xFE7
  8273                           postdec1	equ	0xFE5
  8274                           fsr1h	equ	0xFE2
  8275                           fsr1l	equ	0xFE1
  8276                           indf2	equ	0xFDF
  8277                           postinc2	equ	0xFDE
  8278                           postdec2	equ	0xFDD
  8279                           plusw2	equ	0xFDB
  8280                           fsr2h	equ	0xFDA
  8281                           fsr2l	equ	0xFD9
  8282                           status	equ	0xFD8
  8283                           
  8284 ;; *************** function _retornaDado *****************
  8285 ;; Defined at:
  8286 ;;		line 51 in file "LoRaWanCore.c"
  8287 ;; Parameters:    Size  Location     Type
  8288 ;;  dadoByte        1    wreg     unsigned char 
  8289 ;;  dadoBit         1    0[BANK0 ] unsigned char 
  8290 ;; Auto vars:     Size  Location     Type
  8291 ;;  dadoByte        1    4[BANK0 ] unsigned char 
  8292 ;;  selectDado      1    3[BANK0 ] unsigned char 
  8293 ;; Return value:  Size  Location     Type
  8294 ;;                  1    wreg      unsigned char 
  8295 ;; Registers used:
  8296 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8297 ;; Tracked objects:
  8298 ;;		On entry : 0/0
  8299 ;;		On exit  : 0/0
  8300 ;;		Unchanged: 0/0
  8301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8302 ;;      Params:         0       1       0       0       0       0       0       0       0
  8303 ;;      Locals:         0       2       0       0       0       0       0       0       0
  8304 ;;      Temps:          0       2       0       0       0       0       0       0       0
  8305 ;;      Totals:         0       5       0       0       0       0       0       0       0
  8306 ;;Total ram usage:        5 bytes
  8307 ;; Hardware stack levels used:    1
  8308 ;; Hardware stack levels required when called:   10
  8309 ;; This function calls:
  8310 ;;		Nothing
  8311 ;; This function is called by:
  8312 ;;		_main
  8313 ;;		_TxLoRaWan
  8314 ;; This function uses a non-reentrant model
  8315 ;;
  8316                           
  8317                           	psect	text20
  8318  004E4C                     __ptext20:
  8319                           	opt stack 0
  8320  004E4C                     _retornaDado:
  8321                           	opt stack 20
  8322                           
  8323                           ;incstack = 0
  8324                           ;retornaDado@dadoByte stored from wreg
  8325  004E4C  0100               	movlb	0	; () banked
  8326  004E4E  6F64               	movwf	retornaDado@dadoByte& (0+255),b
  8327                           
  8328                           ;LoRaWanCore.c: 52: uint8_t selectDado;
  8329                           ;LoRaWanCore.c: 53: if (dadoBit){
  8330  004E50  0100               	movlb	0	; () banked
  8331  004E52  5160               	movf	retornaDado@dadoBit& (0+255),w,b
  8332  004E54  B4D8               	btfsc	status,2,c
  8333  004E56  D019               	goto	l2242
  8334                           
  8335                           ; BSR set to: 0
  8336                           ;LoRaWanCore.c: 54: selectDado = (dadosRecebidos[dadoByte].data >> dadoBit) & 1;
  8337  004E58  C060  F061         	movff	retornaDado@dadoBit,??_retornaDado
  8338  004E5C  5164               	movf	retornaDado@dadoByte& (0+255),w,b
  8339  004E5E  0D02               	mullw	2
  8340  004E60  0E01               	movlw	1
  8341  004E62  26F3               	addwf	prodl,f,c
  8342  004E64  0E00               	movlw	0
  8343  004E66  22F4               	addwfc	prodh,f,c
  8344  004E68  0E00               	movlw	low _dadosRecebidos
  8345  004E6A  24F3               	addwf	prodl,w,c
  8346  004E6C  6ED9               	movwf	fsr2l,c
  8347  004E6E  0E03               	movlw	high _dadosRecebidos
  8348  004E70  20F4               	addwfc	prodh,w,c
  8349  004E72  6EDA               	movwf	fsr2h,c
  8350  004E74  50DF               	movf	indf2,w,c
  8351  004E76  6F62               	movwf	(??_retornaDado+1)& (0+255),b
  8352  004E78  2B61               	incf	??_retornaDado& (0+255),f,b
  8353  004E7A  D002               	goto	u7944
  8354  004E7C                     u7945:
  8355  004E7C  90D8               	bcf	status,0,c
  8356  004E7E  3362               	rrcf	(??_retornaDado+1)& (0+255),f,b
  8357  004E80                     u7944:
  8358  004E80  2F61               	decfsz	??_retornaDado& (0+255),f,b
  8359  004E82  D7FC               	goto	u7945
  8360  004E84  0100               	movlb	0	; () banked
  8361  004E86  5162               	movf	(??_retornaDado+1)& (0+255),w,b
  8362  004E88  D00D               	goto	L10
  8363  004E8A                     l2242:
  8364                           
  8365                           ; BSR set to: 0
  8366                           ;LoRaWanCore.c: 56: selectDado = (dadosRecebidos[dadoByte].data) & 1;}
  8367                           
  8368                           ; BSR set to: 0
  8369  004E8A  5164               	movf	retornaDado@dadoByte& (0+255),w,b
  8370  004E8C  0D02               	mullw	2
  8371  004E8E  0E01               	movlw	1
  8372  004E90  26F3               	addwf	prodl,f,c
  8373  004E92  0E00               	movlw	0
  8374  004E94  22F4               	addwfc	prodh,f,c
  8375  004E96  0E00               	movlw	low _dadosRecebidos
  8376  004E98  24F3               	addwf	prodl,w,c
  8377  004E9A  6ED9               	movwf	fsr2l,c
  8378  004E9C  0E03               	movlw	high _dadosRecebidos
  8379  004E9E  20F4               	addwfc	prodh,w,c
  8380  004EA0  6EDA               	movwf	fsr2h,c
  8381  004EA2  50DF               	movf	indf2,w,c
  8382  004EA4                     L10:
  8383  004EA4  0B01               	andlw	1
  8384  004EA6  6F63               	movwf	retornaDado@selectDado& (0+255),b
  8385                           
  8386                           ; BSR set to: 0
  8387                           ;LoRaWanCore.c: 57: return selectDado;
  8388                           
  8389                           ; BSR set to: 0
  8390  004EA8  5163               	movf	retornaDado@selectDado& (0+255),w,b
  8391  004EAA  0012               	return	
  8392  004EAC                     __end_of_retornaDado:
  8393                           	opt stack 0
  8394                           tblptru	equ	0xFF8
  8395                           tblptrh	equ	0xFF7
  8396                           tblptrl	equ	0xFF6
  8397                           tablat	equ	0xFF5
  8398                           prodh	equ	0xFF4
  8399                           prodl	equ	0xFF3
  8400                           intcon	equ	0xFF2
  8401                           postinc0	equ	0xFEE
  8402                           wreg	equ	0xFE8
  8403                           indf1	equ	0xFE7
  8404                           postdec1	equ	0xFE5
  8405                           fsr1h	equ	0xFE2
  8406                           fsr1l	equ	0xFE1
  8407                           indf2	equ	0xFDF
  8408                           postinc2	equ	0xFDE
  8409                           postdec2	equ	0xFDD
  8410                           plusw2	equ	0xFDB
  8411                           fsr2h	equ	0xFDA
  8412                           fsr2l	equ	0xFD9
  8413                           status	equ	0xFD8
  8414                           
  8415 ;; *************** function _ResetModuloLoRaWan *****************
  8416 ;; Defined at:
  8417 ;;		line 92 in file "LoRaWanCore.c"
  8418 ;; Parameters:    Size  Location     Type
  8419 ;;		None
  8420 ;; Auto vars:     Size  Location     Type
  8421 ;;  status          1   39[BANK0 ] unsigned char 
  8422 ;; Return value:  Size  Location     Type
  8423 ;;                  1    wreg      unsigned char 
  8424 ;; Registers used:
  8425 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8426 ;; Tracked objects:
  8427 ;;		On entry : 0/0
  8428 ;;		On exit  : 0/0
  8429 ;;		Unchanged: 0/0
  8430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8431 ;;      Params:         0       0       0       0       0       0       0       0       0
  8432 ;;      Locals:         0       1       0       0       0       0       0       0       0
  8433 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8434 ;;      Totals:         0       1       0       0       0       0       0       0       0
  8435 ;;Total ram usage:        1 bytes
  8436 ;; Hardware stack levels used:    1
  8437 ;; Hardware stack levels required when called:   13
  8438 ;; This function calls:
  8439 ;;		_enviaComando
  8440 ;; This function is called by:
  8441 ;;		_TxLoRaWan
  8442 ;; This function uses a non-reentrant model
  8443 ;;
  8444                           
  8445                           	psect	text21
  8446  0055C0                     __ptext21:
  8447                           	opt stack 0
  8448  0055C0                     _ResetModuloLoRaWan:
  8449                           	opt stack 16
  8450                           
  8451                           ;LoRaWanCore.c: 94: uint8_t status;
  8452                           ;LoRaWanCore.c: 96: status=enviaComando(SYS_RESET,1);
  8453                           
  8454                           ; BSR set to: 0
  8455                           ;incstack = 0
  8456  0055C0  0EDD               	movlw	low _SYS_RESET
  8457  0055C2  0100               	movlb	0	; () banked
  8458  0055C4  6F7C               	movwf	enviaComando@cmd& (0+255),b
  8459  0055C6  0E7D               	movlw	high _SYS_RESET
  8460  0055C8  6F7D               	movwf	(enviaComando@cmd+1)& (0+255),b
  8461  0055CA  0E01               	movlw	1
  8462  0055CC  6F7E               	movwf	enviaComando@tipoComando& (0+255),b
  8463  0055CE  EC25  F01B         	call	_enviaComando	;wreg free
  8464  0055D2  0100               	movlb	0	; () banked
  8465  0055D4  6F87               	movwf	ResetModuloLoRaWan@status& (0+255),b
  8466                           
  8467                           ; BSR set to: 0
  8468                           ;LoRaWanCore.c: 97: return (status==15);
  8469  0055D6  0E0F               	movlw	15
  8470  0055D8  1987               	xorwf	ResetModuloLoRaWan@status& (0+255),w,b
  8471  0055DA  A4D8               	btfss	status,2,c
  8472  0055DC  D002               	goto	u8790
  8473  0055DE  0E01               	movlw	1
  8474  0055E0  0012               	return	
  8475  0055E2                     u8790:
  8476  0055E2  0E00               	movlw	0
  8477  0055E4  0012               	return	
  8478  0055E6                     __end_of_ResetModuloLoRaWan:
  8479                           	opt stack 0
  8480                           tblptru	equ	0xFF8
  8481                           tblptrh	equ	0xFF7
  8482                           tblptrl	equ	0xFF6
  8483                           tablat	equ	0xFF5
  8484                           prodh	equ	0xFF4
  8485                           prodl	equ	0xFF3
  8486                           intcon	equ	0xFF2
  8487                           postinc0	equ	0xFEE
  8488                           wreg	equ	0xFE8
  8489                           indf1	equ	0xFE7
  8490                           postdec1	equ	0xFE5
  8491                           fsr1h	equ	0xFE2
  8492                           fsr1l	equ	0xFE1
  8493                           indf2	equ	0xFDF
  8494                           postinc2	equ	0xFDE
  8495                           postdec2	equ	0xFDD
  8496                           plusw2	equ	0xFDB
  8497                           fsr2h	equ	0xFDA
  8498                           fsr2l	equ	0xFD9
  8499                           status	equ	0xFD8
  8500                           
  8501 ;; *************** function _JoinLoRaWan *****************
  8502 ;; Defined at:
  8503 ;;		line 100 in file "LoRaWanCore.c"
  8504 ;; Parameters:    Size  Location     Type
  8505 ;;		None
  8506 ;; Auto vars:     Size  Location     Type
  8507 ;;  status          1   39[BANK0 ] unsigned char 
  8508 ;; Return value:  Size  Location     Type
  8509 ;;                  1    wreg      unsigned char 
  8510 ;; Registers used:
  8511 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8512 ;; Tracked objects:
  8513 ;;		On entry : 0/0
  8514 ;;		On exit  : 0/0
  8515 ;;		Unchanged: 0/0
  8516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8517 ;;      Params:         0       0       0       0       0       0       0       0       0
  8518 ;;      Locals:         0       1       0       0       0       0       0       0       0
  8519 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8520 ;;      Totals:         0       1       0       0       0       0       0       0       0
  8521 ;;Total ram usage:        1 bytes
  8522 ;; Hardware stack levels used:    1
  8523 ;; Hardware stack levels required when called:   13
  8524 ;; This function calls:
  8525 ;;		_enviaComando
  8526 ;;		_parseLoRaWan
  8527 ;; This function is called by:
  8528 ;;		_TxLoRaWan
  8529 ;; This function uses a non-reentrant model
  8530 ;;
  8531                           
  8532                           	psect	text22
  8533  0053D4                     __ptext22:
  8534                           	opt stack 0
  8535  0053D4                     _JoinLoRaWan:
  8536                           	opt stack 16
  8537                           
  8538                           ;LoRaWanCore.c: 102: uint8_t status;
  8539                           ;LoRaWanCore.c: 104: status=enviaComando(MAC_JOIN_OTAA,0);
  8540                           
  8541                           ; BSR set to: 0
  8542                           ;incstack = 0
  8543  0053D4  0EAC               	movlw	low _MAC_JOIN_OTAA
  8544  0053D6  0100               	movlb	0	; () banked
  8545  0053D8  6F7C               	movwf	enviaComando@cmd& (0+255),b
  8546  0053DA  0E7D               	movlw	high _MAC_JOIN_OTAA
  8547  0053DC  6F7D               	movwf	(enviaComando@cmd+1)& (0+255),b
  8548  0053DE  0E00               	movlw	0
  8549  0053E0  6F7E               	movwf	enviaComando@tipoComando& (0+255),b
  8550  0053E2  EC25  F01B         	call	_enviaComando	;wreg free
  8551  0053E6  0100               	movlb	0	; () banked
  8552  0053E8  6F87               	movwf	JoinLoRaWan@status& (0+255),b
  8553                           
  8554                           ;LoRaWanCore.c: 105: switch (status)
  8555  0053EA  D00B               	goto	l2262
  8556  0053EC                     
  8557                           ; BSR set to: 0
  8558                           ;LoRaWanCore.c: 108: return (parseLoRaWan()==0);
  8559                           
  8560                           ; BSR set to: 0
  8561  0053EC  EC38  F021         	call	_parseLoRaWan	;wreg free
  8562  0053F0  0900               	iorlw	0
  8563  0053F2  A4D8               	btfss	status,2,c
  8564  0053F4  D002               	goto	u8810
  8565  0053F6  0E01               	movlw	1
  8566  0053F8  0012               	return	
  8567  0053FA                     u8810:
  8568  0053FA  0E00               	movlw	0
  8569  0053FC  0012               	return	
  8570  0053FE                     
  8571                           ;LoRaWanCore.c: 110: return 0;
  8572  0053FE  0E00               	movlw	0
  8573                           
  8574                           ;LoRaWanCore.c: 111: }
  8575  005400  0012               	return	
  8576  005402                     l2262:
  8577  005402  0100               	movlb	0	; () banked
  8578  005404  5187               	movf	JoinLoRaWan@status& (0+255),w,b
  8579                           
  8580                           ; Switch size 1, requested type "space"
  8581                           ; Number of cases is 1, Range of values is 0 to 0
  8582                           ; switch strategies available:
  8583                           ; Name         Instructions Cycles
  8584                           ; simple_byte            4     3 (average)
  8585                           ;	Chosen strategy is simple_byte
  8586  005406  0A00               	xorlw	0	; case 0
  8587  005408  B4D8               	btfsc	status,2,c
  8588  00540A  D7F0               	goto	l2263
  8589  00540C  D7F8               	goto	l2265
  8590  00540E                     __end_of_JoinLoRaWan:
  8591                           	opt stack 0
  8592                           tblptru	equ	0xFF8
  8593                           tblptrh	equ	0xFF7
  8594                           tblptrl	equ	0xFF6
  8595                           tablat	equ	0xFF5
  8596                           prodh	equ	0xFF4
  8597                           prodl	equ	0xFF3
  8598                           intcon	equ	0xFF2
  8599                           postinc0	equ	0xFEE
  8600                           wreg	equ	0xFE8
  8601                           indf1	equ	0xFE7
  8602                           postdec1	equ	0xFE5
  8603                           fsr1h	equ	0xFE2
  8604                           fsr1l	equ	0xFE1
  8605                           indf2	equ	0xFDF
  8606                           postinc2	equ	0xFDE
  8607                           postdec2	equ	0xFDD
  8608                           plusw2	equ	0xFDB
  8609                           fsr2h	equ	0xFDA
  8610                           fsr2l	equ	0xFD9
  8611                           status	equ	0xFD8
  8612                           
  8613 ;; *************** function _SetSpreadingFactor *****************
  8614 ;; Defined at:
  8615 ;;		line 149 in file "LoRaWanCore.c"
  8616 ;; Parameters:    Size  Location     Type
  8617 ;;  sf              1    wreg     unsigned char 
  8618 ;; Auto vars:     Size  Location     Type
  8619 ;;  sf              1  233[BANK1 ] unsigned char 
  8620 ;;  comando       200   32[BANK1 ] unsigned char [200]
  8621 ;;  status          1  232[BANK1 ] unsigned char 
  8622 ;; Return value:  Size  Location     Type
  8623 ;;                  1    wreg      unsigned char 
  8624 ;; Registers used:
  8625 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8626 ;; Tracked objects:
  8627 ;;		On entry : 0/0
  8628 ;;		On exit  : 0/0
  8629 ;;		Unchanged: 0/0
  8630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8631 ;;      Params:         0       0       0       0       0       0       0       0       0
  8632 ;;      Locals:         0       0     202       0       0       0       0       0       0
  8633 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8634 ;;      Totals:         0       0     202       0       0       0       0       0       0
  8635 ;;Total ram usage:      202 bytes
  8636 ;; Hardware stack levels used:    1
  8637 ;; Hardware stack levels required when called:   14
  8638 ;; This function calls:
  8639 ;;		_enviaComando
  8640 ;;		_sprintf
  8641 ;; This function is called by:
  8642 ;;		_main
  8643 ;; This function uses a non-reentrant model
  8644 ;;
  8645                           
  8646                           	psect	text23
  8647  0052E0                     __ptext23:
  8648                           	opt stack 0
  8649  0052E0                     _SetSpreadingFactor:
  8650                           	opt stack 16
  8651                           
  8652                           ;incstack = 0
  8653                           ;SetSpreadingFactor@sf stored from wreg
  8654  0052E0  0101               	movlb	1	; () banked
  8655  0052E2  6FE9               	movwf	SetSpreadingFactor@sf& (0+255),b
  8656                           
  8657                           ;LoRaWanCore.c: 150: char comando[200];
  8658                           ;LoRaWanCore.c: 152: sprintf(comando, "%s%d", MAC_SET_SF, sf);
  8659  0052E4  0E20               	movlw	low SetSpreadingFactor@comando
  8660  0052E6  0100               	movlb	0	; () banked
  8661  0052E8  6FBF               	movwf	sprintf@sp& (0+255),b
  8662  0052EA  0E01               	movlw	high SetSpreadingFactor@comando
  8663  0052EC  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  8664  0052EE  0EF0               	movlw	low STR_30
  8665  0052F0  6FC1               	movwf	sprintf@f& (0+255),b
  8666  0052F2  0E7F               	movlw	high STR_30
  8667  0052F4  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  8668  0052F6  0E56               	movlw	low _MAC_SET_SF
  8669  0052F8  6FC3               	movwf	(?_sprintf+4)& (0+255),b
  8670  0052FA  0E7D               	movlw	high _MAC_SET_SF
  8671  0052FC  6FC4               	movwf	(?_sprintf+5)& (0+255),b
  8672  0052FE  C1E9  F0C5         	movff	SetSpreadingFactor@sf,?_sprintf+6
  8673  005302  6BC6               	clrf	(?_sprintf+7)& (0+255),b
  8674  005304  EC09  F000         	call	_sprintf	;wreg free
  8675                           
  8676                           ;LoRaWanCore.c: 153: uint8_t status=enviaComando(comando,0);
  8677  005308  0E20               	movlw	low SetSpreadingFactor@comando
  8678  00530A  0100               	movlb	0	; () banked
  8679  00530C  6F7C               	movwf	enviaComando@cmd& (0+255),b
  8680  00530E  0E01               	movlw	high SetSpreadingFactor@comando
  8681  005310  6F7D               	movwf	(enviaComando@cmd+1)& (0+255),b
  8682  005312  0E00               	movlw	0
  8683  005314  6F7E               	movwf	enviaComando@tipoComando& (0+255),b
  8684  005316  EC25  F01B         	call	_enviaComando	;wreg free
  8685  00531A  0101               	movlb	1	; () banked
  8686  00531C  6FE8               	movwf	SetSpreadingFactor@status& (0+255),b
  8687  00531E  0012               	return	
  8688  005320                     __end_of_SetSpreadingFactor:
  8689                           	opt stack 0
  8690                           tblptru	equ	0xFF8
  8691                           tblptrh	equ	0xFF7
  8692                           tblptrl	equ	0xFF6
  8693                           tablat	equ	0xFF5
  8694                           prodh	equ	0xFF4
  8695                           prodl	equ	0xFF3
  8696                           intcon	equ	0xFF2
  8697                           postinc0	equ	0xFEE
  8698                           wreg	equ	0xFE8
  8699                           indf1	equ	0xFE7
  8700                           postdec1	equ	0xFE5
  8701                           fsr1h	equ	0xFE2
  8702                           fsr1l	equ	0xFE1
  8703                           indf2	equ	0xFDF
  8704                           postinc2	equ	0xFDE
  8705                           postdec2	equ	0xFDD
  8706                           plusw2	equ	0xFDB
  8707                           fsr2h	equ	0xFDA
  8708                           fsr2l	equ	0xFD9
  8709                           status	equ	0xFD8
  8710                           
  8711 ;; *************** function _SetDevEUI *****************
  8712 ;; Defined at:
  8713 ;;		line 68 in file "LoRaWanCore.c"
  8714 ;; Parameters:    Size  Location     Type
  8715 ;;		None
  8716 ;; Auto vars:     Size  Location     Type
  8717 ;;  comando       200   32[BANK1 ] unsigned char [200]
  8718 ;;  status          1  232[BANK1 ] unsigned char 
  8719 ;; Return value:  Size  Location     Type
  8720 ;;                  1    wreg      unsigned char 
  8721 ;; Registers used:
  8722 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8723 ;; Tracked objects:
  8724 ;;		On entry : 0/0
  8725 ;;		On exit  : 0/0
  8726 ;;		Unchanged: 0/0
  8727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8728 ;;      Params:         0       0       0       0       0       0       0       0       0
  8729 ;;      Locals:         0       0     201       0       0       0       0       0       0
  8730 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8731 ;;      Totals:         0       0     201       0       0       0       0       0       0
  8732 ;;Total ram usage:      201 bytes
  8733 ;; Hardware stack levels used:    1
  8734 ;; Hardware stack levels required when called:   14
  8735 ;; This function calls:
  8736 ;;		_enviaComando
  8737 ;;		_sprintf
  8738 ;; This function is called by:
  8739 ;;		_main
  8740 ;; This function uses a non-reentrant model
  8741 ;;
  8742                           
  8743                           	psect	text24
  8744  004B42                     __ptext24:
  8745                           	opt stack 0
  8746  004B42                     _SetDevEUI:
  8747                           	opt stack 16
  8748                           
  8749                           ;LoRaWanCore.c: 70: char comando[200];
  8750                           ;LoRaWanCore.c: 71: sprintf(comando, "%s %.2x%.2x%.2x%.2x%.2x%.2x%.2x%.2x", MAC_SET_DEVE
      +                          UI, 0x00,0x04,0xa3,0x0b,0x00,0x1b,0x74,0x76 );
  8751                           
  8752                           ; BSR set to: 1
  8753                           ;incstack = 0
  8754  004B42  0E20               	movlw	low SetDevEUI@comando
  8755  004B44  0100               	movlb	0	; () banked
  8756  004B46  6FBF               	movwf	sprintf@sp& (0+255),b
  8757  004B48  0E01               	movlw	high SetDevEUI@comando
  8758  004B4A  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  8759  004B4C  0EBC               	movlw	low STR_22
  8760  004B4E  6FC1               	movwf	sprintf@f& (0+255),b
  8761  004B50  0E7E               	movlw	high STR_22
  8762  004B52  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  8763  004B54  0E97               	movlw	low _MAC_SET_DEVEUI
  8764  004B56  6FC3               	movwf	(?_sprintf+4)& (0+255),b
  8765  004B58  0E7D               	movlw	high _MAC_SET_DEVEUI
  8766  004B5A  6FC4               	movwf	(?_sprintf+5)& (0+255),b
  8767  004B5C  0E00               	movlw	0
  8768  004B5E  6FC6               	movwf	(?_sprintf+7)& (0+255),b
  8769  004B60  0E00               	movlw	0
  8770  004B62  6FC5               	movwf	(?_sprintf+6)& (0+255),b
  8771  004B64  0E00               	movlw	0
  8772  004B66  6FC8               	movwf	(?_sprintf+9)& (0+255),b
  8773  004B68  0E04               	movlw	4
  8774  004B6A  6FC7               	movwf	(?_sprintf+8)& (0+255),b
  8775  004B6C  0E00               	movlw	0
  8776  004B6E  6FCA               	movwf	(?_sprintf+11)& (0+255),b
  8777  004B70  0EA3               	movlw	163
  8778  004B72  6FC9               	movwf	(?_sprintf+10)& (0+255),b
  8779  004B74  0E00               	movlw	0
  8780  004B76  6FCC               	movwf	(?_sprintf+13)& (0+255),b
  8781  004B78  0E0B               	movlw	11
  8782  004B7A  6FCB               	movwf	(?_sprintf+12)& (0+255),b
  8783  004B7C  0E00               	movlw	0
  8784  004B7E  6FCE               	movwf	(?_sprintf+15)& (0+255),b
  8785  004B80  0E00               	movlw	0
  8786  004B82  6FCD               	movwf	(?_sprintf+14)& (0+255),b
  8787  004B84  0E00               	movlw	0
  8788  004B86  6FD0               	movwf	(?_sprintf+17)& (0+255),b
  8789  004B88  0E1B               	movlw	27
  8790  004B8A  6FCF               	movwf	(?_sprintf+16)& (0+255),b
  8791  004B8C  0E00               	movlw	0
  8792  004B8E  6FD2               	movwf	(?_sprintf+19)& (0+255),b
  8793  004B90  0E74               	movlw	116
  8794  004B92  6FD1               	movwf	(?_sprintf+18)& (0+255),b
  8795  004B94  0E00               	movlw	0
  8796  004B96  6FD4               	movwf	(?_sprintf+21)& (0+255),b
  8797  004B98  0E76               	movlw	118
  8798  004B9A  6FD3               	movwf	(?_sprintf+20)& (0+255),b
  8799  004B9C  EC09  F000         	call	_sprintf	;wreg free
  8800                           
  8801                           ;LoRaWanCore.c: 73: uint8_t status=enviaComando(comando,0);
  8802  004BA0  0E20               	movlw	low SetDevEUI@comando
  8803  004BA2  0100               	movlb	0	; () banked
  8804  004BA4  6F7C               	movwf	enviaComando@cmd& (0+255),b
  8805  004BA6  0E01               	movlw	high SetDevEUI@comando
  8806  004BA8  6F7D               	movwf	(enviaComando@cmd+1)& (0+255),b
  8807  004BAA  0E00               	movlw	0
  8808  004BAC  6F7E               	movwf	enviaComando@tipoComando& (0+255),b
  8809  004BAE  EC25  F01B         	call	_enviaComando	;wreg free
  8810  004BB2  0101               	movlb	1	; () banked
  8811  004BB4  6FE8               	movwf	SetDevEUI@status& (0+255),b
  8812  004BB6  0012               	return	
  8813  004BB8                     __end_of_SetDevEUI:
  8814                           	opt stack 0
  8815                           tblptru	equ	0xFF8
  8816                           tblptrh	equ	0xFF7
  8817                           tblptrl	equ	0xFF6
  8818                           tablat	equ	0xFF5
  8819                           prodh	equ	0xFF4
  8820                           prodl	equ	0xFF3
  8821                           intcon	equ	0xFF2
  8822                           postinc0	equ	0xFEE
  8823                           wreg	equ	0xFE8
  8824                           indf1	equ	0xFE7
  8825                           postdec1	equ	0xFE5
  8826                           fsr1h	equ	0xFE2
  8827                           fsr1l	equ	0xFE1
  8828                           indf2	equ	0xFDF
  8829                           postinc2	equ	0xFDE
  8830                           postdec2	equ	0xFDD
  8831                           plusw2	equ	0xFDB
  8832                           fsr2h	equ	0xFDA
  8833                           fsr2l	equ	0xFD9
  8834                           status	equ	0xFD8
  8835                           
  8836 ;; *************** function _SetChannelLoRaWan *****************
  8837 ;; Defined at:
  8838 ;;		line 114 in file "LoRaWanCore.c"
  8839 ;; Parameters:    Size  Location     Type
  8840 ;;  canal           1    wreg     unsigned char 
  8841 ;;  ligado          1  145[BANK0 ] unsigned char 
  8842 ;; Auto vars:     Size  Location     Type
  8843 ;;  canal           1  233[BANK1 ] unsigned char 
  8844 ;;  comando       200   32[BANK1 ] unsigned char [200]
  8845 ;;  status          1  232[BANK1 ] unsigned char 
  8846 ;; Return value:  Size  Location     Type
  8847 ;;                  1    wreg      unsigned char 
  8848 ;; Registers used:
  8849 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8850 ;; Tracked objects:
  8851 ;;		On entry : 0/0
  8852 ;;		On exit  : 0/0
  8853 ;;		Unchanged: 0/0
  8854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8855 ;;      Params:         0       1       0       0       0       0       0       0       0
  8856 ;;      Locals:         0       0     202       0       0       0       0       0       0
  8857 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8858 ;;      Totals:         0       1     202       0       0       0       0       0       0
  8859 ;;Total ram usage:      203 bytes
  8860 ;; Hardware stack levels used:    1
  8861 ;; Hardware stack levels required when called:   14
  8862 ;; This function calls:
  8863 ;;		_enviaComando
  8864 ;;		_sprintf
  8865 ;; This function is called by:
  8866 ;;		_main
  8867 ;; This function uses a non-reentrant model
  8868 ;;
  8869                           
  8870                           	psect	text25
  8871  004D12                     __ptext25:
  8872                           	opt stack 0
  8873  004D12                     _SetChannelLoRaWan:
  8874                           	opt stack 16
  8875                           
  8876                           ; BSR set to: 1
  8877                           ;incstack = 0
  8878                           ;SetChannelLoRaWan@canal stored from wreg
  8879  004D12  0101               	movlb	1	; () banked
  8880  004D14  6FE9               	movwf	SetChannelLoRaWan@canal& (0+255),b
  8881                           
  8882                           ;LoRaWanCore.c: 116: char comando[200];
  8883                           ;LoRaWanCore.c: 117: if (ligado)
  8884  004D16  0100               	movlb	0	; () banked
  8885  004D18  51F1               	movf	SetChannelLoRaWan@ligado& (0+255),w,b
  8886  004D1A  B4D8               	btfsc	status,2,c
  8887  004D1C  D012               	goto	l2269
  8888                           
  8889                           ; BSR set to: 0
  8890                           ;LoRaWanCore.c: 118: sprintf(comando, "%s %d on", MAC_SET_CH_STATUS, canal);
  8891  004D1E  0E20               	movlw	low SetChannelLoRaWan@comando
  8892  004D20  6FBF               	movwf	sprintf@sp& (0+255),b
  8893  004D22  0E01               	movlw	high SetChannelLoRaWan@comando
  8894  004D24  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  8895  004D26  0E94               	movlw	low STR_25
  8896  004D28  6FC1               	movwf	sprintf@f& (0+255),b
  8897  004D2A  0E7F               	movlw	high STR_25
  8898  004D2C  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  8899  004D2E  0E66               	movlw	low _MAC_SET_CH_STATUS
  8900  004D30  6FC3               	movwf	(?_sprintf+4)& (0+255),b
  8901  004D32  0E7D               	movlw	high _MAC_SET_CH_STATUS
  8902  004D34  6FC4               	movwf	(?_sprintf+5)& (0+255),b
  8903  004D36  C1E9  F0C5         	movff	SetChannelLoRaWan@canal,?_sprintf+6
  8904  004D3A  6BC6               	clrf	(?_sprintf+7)& (0+255),b
  8905  004D3C  EC09  F000         	call	_sprintf	;wreg free
  8906  004D40  D012               	goto	l2270
  8907  004D42                     l2269:
  8908                           
  8909                           ;LoRaWanCore.c: 119: else
  8910                           ;LoRaWanCore.c: 120: sprintf(comando, "%s %d off", MAC_SET_CH_STATUS, canal);
  8911  004D42  0E20               	movlw	low SetChannelLoRaWan@comando
  8912  004D44  0100               	movlb	0	; () banked
  8913  004D46  6FBF               	movwf	sprintf@sp& (0+255),b
  8914  004D48  0E01               	movlw	high SetChannelLoRaWan@comando
  8915  004D4A  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  8916  004D4C  0E80               	movlw	low STR_26
  8917  004D4E  6FC1               	movwf	sprintf@f& (0+255),b
  8918  004D50  0E7F               	movlw	high STR_26
  8919  004D52  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  8920  004D54  0E66               	movlw	low _MAC_SET_CH_STATUS
  8921  004D56  6FC3               	movwf	(?_sprintf+4)& (0+255),b
  8922  004D58  0E7D               	movlw	high _MAC_SET_CH_STATUS
  8923  004D5A  6FC4               	movwf	(?_sprintf+5)& (0+255),b
  8924  004D5C  C1E9  F0C5         	movff	SetChannelLoRaWan@canal,?_sprintf+6
  8925  004D60  6BC6               	clrf	(?_sprintf+7)& (0+255),b
  8926  004D62  EC09  F000         	call	_sprintf	;wreg free
  8927  004D66                     l2270:
  8928                           
  8929                           ;LoRaWanCore.c: 121: uint8_t status=enviaComando(comando,0);
  8930  004D66  0E20               	movlw	low SetChannelLoRaWan@comando
  8931  004D68  0100               	movlb	0	; () banked
  8932  004D6A  6F7C               	movwf	enviaComando@cmd& (0+255),b
  8933  004D6C  0E01               	movlw	high SetChannelLoRaWan@comando
  8934  004D6E  6F7D               	movwf	(enviaComando@cmd+1)& (0+255),b
  8935  004D70  0E00               	movlw	0
  8936  004D72  6F7E               	movwf	enviaComando@tipoComando& (0+255),b
  8937  004D74  EC25  F01B         	call	_enviaComando	;wreg free
  8938  004D78  0101               	movlb	1	; () banked
  8939  004D7A  6FE8               	movwf	SetChannelLoRaWan@status& (0+255),b
  8940  004D7C  0012               	return	
  8941  004D7E                     __end_of_SetChannelLoRaWan:
  8942                           	opt stack 0
  8943                           tblptru	equ	0xFF8
  8944                           tblptrh	equ	0xFF7
  8945                           tblptrl	equ	0xFF6
  8946                           tablat	equ	0xFF5
  8947                           prodh	equ	0xFF4
  8948                           prodl	equ	0xFF3
  8949                           intcon	equ	0xFF2
  8950                           postinc0	equ	0xFEE
  8951                           wreg	equ	0xFE8
  8952                           indf1	equ	0xFE7
  8953                           postdec1	equ	0xFE5
  8954                           fsr1h	equ	0xFE2
  8955                           fsr1l	equ	0xFE1
  8956                           indf2	equ	0xFDF
  8957                           postinc2	equ	0xFDE
  8958                           postdec2	equ	0xFDD
  8959                           plusw2	equ	0xFDB
  8960                           fsr2h	equ	0xFDA
  8961                           fsr2l	equ	0xFD9
  8962                           status	equ	0xFD8
  8963                           
  8964 ;; *************** function _SetBandWidth *****************
  8965 ;; Defined at:
  8966 ;;		line 157 in file "LoRaWanCore.c"
  8967 ;; Parameters:    Size  Location     Type
  8968 ;;  bw              2  145[BANK0 ] unsigned int 
  8969 ;; Auto vars:     Size  Location     Type
  8970 ;;  comando       200   32[BANK1 ] unsigned char [200]
  8971 ;;  status          2  232[BANK1 ] unsigned int 
  8972 ;; Return value:  Size  Location     Type
  8973 ;;                  1    wreg      unsigned char 
  8974 ;; Registers used:
  8975 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8976 ;; Tracked objects:
  8977 ;;		On entry : 0/0
  8978 ;;		On exit  : 0/0
  8979 ;;		Unchanged: 0/0
  8980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8981 ;;      Params:         0       2       0       0       0       0       0       0       0
  8982 ;;      Locals:         0       0     202       0       0       0       0       0       0
  8983 ;;      Temps:          0       1       0       0       0       0       0       0       0
  8984 ;;      Totals:         0       3     202       0       0       0       0       0       0
  8985 ;;Total ram usage:      205 bytes
  8986 ;; Hardware stack levels used:    1
  8987 ;; Hardware stack levels required when called:   14
  8988 ;; This function calls:
  8989 ;;		_enviaComando
  8990 ;;		_sprintf
  8991 ;; This function is called by:
  8992 ;;		_main
  8993 ;; This function uses a non-reentrant model
  8994 ;;
  8995                           
  8996                           	psect	text26
  8997  00514A                     __ptext26:
  8998                           	opt stack 0
  8999  00514A                     _SetBandWidth:
  9000                           	opt stack 16
  9001                           
  9002                           ;LoRaWanCore.c: 158: char comando[200];
  9003                           ;LoRaWanCore.c: 160: sprintf(comando, "%s %d", MAC_SET_BW, bw);
  9004                           
  9005                           ; BSR set to: 1
  9006                           ;incstack = 0
  9007  00514A  0E20               	movlw	low SetBandWidth@comando
  9008  00514C  0100               	movlb	0	; () banked
  9009  00514E  6FBF               	movwf	sprintf@sp& (0+255),b
  9010  005150  0E01               	movlw	high SetBandWidth@comando
  9011  005152  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  9012  005154  0EDF               	movlw	low STR_31
  9013  005156  6FC1               	movwf	sprintf@f& (0+255),b
  9014  005158  0E7F               	movlw	high STR_31
  9015  00515A  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  9016  00515C  0E74               	movlw	low _MAC_SET_BW
  9017  00515E  6FC3               	movwf	(?_sprintf+4)& (0+255),b
  9018  005160  0E7D               	movlw	high _MAC_SET_BW
  9019  005162  6FC4               	movwf	(?_sprintf+5)& (0+255),b
  9020  005164  C0F1  F0C5         	movff	SetBandWidth@bw,?_sprintf+6
  9021  005168  C0F2  F0C6         	movff	SetBandWidth@bw+1,?_sprintf+7
  9022  00516C  EC09  F000         	call	_sprintf	;wreg free
  9023                           
  9024                           ;LoRaWanCore.c: 161: uint16_t status=enviaComando(comando,0);
  9025  005170  0E20               	movlw	low SetBandWidth@comando
  9026  005172  0100               	movlb	0	; () banked
  9027  005174  6F7C               	movwf	enviaComando@cmd& (0+255),b
  9028  005176  0E01               	movlw	high SetBandWidth@comando
  9029  005178  6F7D               	movwf	(enviaComando@cmd+1)& (0+255),b
  9030  00517A  0E00               	movlw	0
  9031  00517C  6F7E               	movwf	enviaComando@tipoComando& (0+255),b
  9032  00517E  EC25  F01B         	call	_enviaComando	;wreg free
  9033  005182  0100               	movlb	0	; () banked
  9034  005184  6FF3               	movwf	??_SetBandWidth& (0+255),b
  9035  005186  51F3               	movf	??_SetBandWidth& (0+255),w,b
  9036  005188  0101               	movlb	1	; () banked
  9037  00518A  6FE8               	movwf	SetBandWidth@status& (0+255),b
  9038  00518C  6BE9               	clrf	(SetBandWidth@status+1)& (0+255),b
  9039  00518E  0012               	return	
  9040  005190                     __end_of_SetBandWidth:
  9041                           	opt stack 0
  9042                           tblptru	equ	0xFF8
  9043                           tblptrh	equ	0xFF7
  9044                           tblptrl	equ	0xFF6
  9045                           tablat	equ	0xFF5
  9046                           prodh	equ	0xFF4
  9047                           prodl	equ	0xFF3
  9048                           intcon	equ	0xFF2
  9049                           postinc0	equ	0xFEE
  9050                           wreg	equ	0xFE8
  9051                           indf1	equ	0xFE7
  9052                           postdec1	equ	0xFE5
  9053                           fsr1h	equ	0xFE2
  9054                           fsr1l	equ	0xFE1
  9055                           indf2	equ	0xFDF
  9056                           postinc2	equ	0xFDE
  9057                           postdec2	equ	0xFDD
  9058                           plusw2	equ	0xFDB
  9059                           fsr2h	equ	0xFDA
  9060                           fsr2l	equ	0xFD9
  9061                           status	equ	0xFD8
  9062                           
  9063 ;; *************** function _SetAppKey *****************
  9064 ;; Defined at:
  9065 ;;		line 83 in file "LoRaWanCore.c"
  9066 ;; Parameters:    Size  Location     Type
  9067 ;;		None
  9068 ;; Auto vars:     Size  Location     Type
  9069 ;;  comando       200   32[BANK1 ] unsigned char [200]
  9070 ;;  status          1  232[BANK1 ] unsigned char 
  9071 ;; Return value:  Size  Location     Type
  9072 ;;                  1    wreg      unsigned char 
  9073 ;; Registers used:
  9074 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9075 ;; Tracked objects:
  9076 ;;		On entry : 0/0
  9077 ;;		On exit  : 0/0
  9078 ;;		Unchanged: 0/0
  9079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9080 ;;      Params:         0       0       0       0       0       0       0       0       0
  9081 ;;      Locals:         0       0     201       0       0       0       0       0       0
  9082 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9083 ;;      Totals:         0       0     201       0       0       0       0       0       0
  9084 ;;Total ram usage:      201 bytes
  9085 ;; Hardware stack levels used:    1
  9086 ;; Hardware stack levels required when called:   14
  9087 ;; This function calls:
  9088 ;;		_enviaComando
  9089 ;;		_sprintf
  9090 ;; This function is called by:
  9091 ;;		_main
  9092 ;; This function uses a non-reentrant model
  9093 ;;
  9094                           
  9095                           	psect	text27
  9096  00410A                     __ptext27:
  9097                           	opt stack 0
  9098  00410A                     _SetAppKey:
  9099                           	opt stack 16
  9100                           
  9101                           ;LoRaWanCore.c: 85: char comando[200];
  9102                           ;LoRaWanCore.c: 86: sprintf(comando, "%s %.2x%.2x%.2x%.2x%.2x%.2x%.2x%.2x%.2x%.2x%.2x%.2
      +                          x%.2x%.2x%.2x%.2x", MAC_SET_APPKEY,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x5
      +                          5,0x55,0x55,0x55,0x55,0x55 );
  9103                           
  9104                           ; BSR set to: 1
  9105                           ;incstack = 0
  9106  00410A  0E20               	movlw	low SetAppKey@comando
  9107  00410C  0100               	movlb	0	; () banked
  9108  00410E  6FBF               	movwf	sprintf@sp& (0+255),b
  9109  004110  0E01               	movlw	high SetAppKey@comando
  9110  004112  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  9111  004114  0E78               	movlw	low STR_24
  9112  004116  6FC1               	movwf	sprintf@f& (0+255),b
  9113  004118  0E7E               	movlw	high STR_24
  9114  00411A  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  9115  00411C  0E81               	movlw	low _MAC_SET_APPKEY
  9116  00411E  6FC3               	movwf	(?_sprintf+4)& (0+255),b
  9117  004120  0E7D               	movlw	high _MAC_SET_APPKEY
  9118  004122  6FC4               	movwf	(?_sprintf+5)& (0+255),b
  9119  004124  0E00               	movlw	0
  9120  004126  6FC6               	movwf	(?_sprintf+7)& (0+255),b
  9121  004128  0E55               	movlw	85
  9122  00412A  6FC5               	movwf	(?_sprintf+6)& (0+255),b
  9123  00412C  0E00               	movlw	0
  9124  00412E  6FC8               	movwf	(?_sprintf+9)& (0+255),b
  9125  004130  0E55               	movlw	85
  9126  004132  6FC7               	movwf	(?_sprintf+8)& (0+255),b
  9127  004134  0E00               	movlw	0
  9128  004136  6FCA               	movwf	(?_sprintf+11)& (0+255),b
  9129  004138  0E55               	movlw	85
  9130  00413A  6FC9               	movwf	(?_sprintf+10)& (0+255),b
  9131  00413C  0E00               	movlw	0
  9132  00413E  6FCC               	movwf	(?_sprintf+13)& (0+255),b
  9133  004140  0E55               	movlw	85
  9134  004142  6FCB               	movwf	(?_sprintf+12)& (0+255),b
  9135  004144  0E00               	movlw	0
  9136  004146  6FCE               	movwf	(?_sprintf+15)& (0+255),b
  9137  004148  0E55               	movlw	85
  9138  00414A  6FCD               	movwf	(?_sprintf+14)& (0+255),b
  9139  00414C  0E00               	movlw	0
  9140  00414E  6FD0               	movwf	(?_sprintf+17)& (0+255),b
  9141  004150  0E55               	movlw	85
  9142  004152  6FCF               	movwf	(?_sprintf+16)& (0+255),b
  9143  004154  0E00               	movlw	0
  9144  004156  6FD2               	movwf	(?_sprintf+19)& (0+255),b
  9145  004158  0E55               	movlw	85
  9146  00415A  6FD1               	movwf	(?_sprintf+18)& (0+255),b
  9147  00415C  0E00               	movlw	0
  9148  00415E  6FD4               	movwf	(?_sprintf+21)& (0+255),b
  9149  004160  0E55               	movlw	85
  9150  004162  6FD3               	movwf	(?_sprintf+20)& (0+255),b
  9151  004164  0E00               	movlw	0
  9152  004166  6FD6               	movwf	(?_sprintf+23)& (0+255),b
  9153  004168  0E55               	movlw	85
  9154  00416A  6FD5               	movwf	(?_sprintf+22)& (0+255),b
  9155  00416C  0E00               	movlw	0
  9156  00416E  6FD8               	movwf	(?_sprintf+25)& (0+255),b
  9157  004170  0E55               	movlw	85
  9158  004172  6FD7               	movwf	(?_sprintf+24)& (0+255),b
  9159  004174  0E00               	movlw	0
  9160  004176  6FDA               	movwf	(?_sprintf+27)& (0+255),b
  9161  004178  0E55               	movlw	85
  9162  00417A  6FD9               	movwf	(?_sprintf+26)& (0+255),b
  9163  00417C  0E00               	movlw	0
  9164  00417E  6FDC               	movwf	(?_sprintf+29)& (0+255),b
  9165  004180  0E55               	movlw	85
  9166  004182  6FDB               	movwf	(?_sprintf+28)& (0+255),b
  9167  004184  0E00               	movlw	0
  9168  004186  6FDE               	movwf	(?_sprintf+31)& (0+255),b
  9169  004188  0E55               	movlw	85
  9170  00418A  6FDD               	movwf	(?_sprintf+30)& (0+255),b
  9171  00418C  0E00               	movlw	0
  9172  00418E  6FE0               	movwf	(?_sprintf+33)& (0+255),b
  9173  004190  0E55               	movlw	85
  9174  004192  6FDF               	movwf	(?_sprintf+32)& (0+255),b
  9175  004194  0E00               	movlw	0
  9176  004196  6FE2               	movwf	(?_sprintf+35)& (0+255),b
  9177  004198  0E55               	movlw	85
  9178  00419A  6FE1               	movwf	(?_sprintf+34)& (0+255),b
  9179  00419C  0E00               	movlw	0
  9180  00419E  6FE4               	movwf	(?_sprintf+37)& (0+255),b
  9181  0041A0  0E55               	movlw	85
  9182  0041A2  6FE3               	movwf	(?_sprintf+36)& (0+255),b
  9183  0041A4  EC09  F000         	call	_sprintf	;wreg free
  9184                           
  9185                           ;LoRaWanCore.c: 88: uint8_t status=enviaComando(comando,0);
  9186  0041A8  0E20               	movlw	low SetAppKey@comando
  9187  0041AA  0100               	movlb	0	; () banked
  9188  0041AC  6F7C               	movwf	enviaComando@cmd& (0+255),b
  9189  0041AE  0E01               	movlw	high SetAppKey@comando
  9190  0041B0  6F7D               	movwf	(enviaComando@cmd+1)& (0+255),b
  9191  0041B2  0E00               	movlw	0
  9192  0041B4  6F7E               	movwf	enviaComando@tipoComando& (0+255),b
  9193  0041B6  EC25  F01B         	call	_enviaComando	;wreg free
  9194  0041BA  0101               	movlb	1	; () banked
  9195  0041BC  6FE8               	movwf	SetAppKey@status& (0+255),b
  9196  0041BE  0012               	return	
  9197  0041C0                     __end_of_SetAppKey:
  9198                           	opt stack 0
  9199                           tblptru	equ	0xFF8
  9200                           tblptrh	equ	0xFF7
  9201                           tblptrl	equ	0xFF6
  9202                           tablat	equ	0xFF5
  9203                           prodh	equ	0xFF4
  9204                           prodl	equ	0xFF3
  9205                           intcon	equ	0xFF2
  9206                           postinc0	equ	0xFEE
  9207                           wreg	equ	0xFE8
  9208                           indf1	equ	0xFE7
  9209                           postdec1	equ	0xFE5
  9210                           fsr1h	equ	0xFE2
  9211                           fsr1l	equ	0xFE1
  9212                           indf2	equ	0xFDF
  9213                           postinc2	equ	0xFDE
  9214                           postdec2	equ	0xFDD
  9215                           plusw2	equ	0xFDB
  9216                           fsr2h	equ	0xFDA
  9217                           fsr2l	equ	0xFD9
  9218                           status	equ	0xFD8
  9219                           
  9220 ;; *************** function _SetAppEUI *****************
  9221 ;; Defined at:
  9222 ;;		line 76 in file "LoRaWanCore.c"
  9223 ;; Parameters:    Size  Location     Type
  9224 ;;		None
  9225 ;; Auto vars:     Size  Location     Type
  9226 ;;  comando       200   32[BANK1 ] unsigned char [200]
  9227 ;;  status          1  232[BANK1 ] unsigned char 
  9228 ;; Return value:  Size  Location     Type
  9229 ;;                  1    wreg      unsigned char 
  9230 ;; Registers used:
  9231 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9232 ;; Tracked objects:
  9233 ;;		On entry : 0/0
  9234 ;;		On exit  : 0/0
  9235 ;;		Unchanged: 0/0
  9236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9237 ;;      Params:         0       0       0       0       0       0       0       0       0
  9238 ;;      Locals:         0       0     201       0       0       0       0       0       0
  9239 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9240 ;;      Totals:         0       0     201       0       0       0       0       0       0
  9241 ;;Total ram usage:      201 bytes
  9242 ;; Hardware stack levels used:    1
  9243 ;; Hardware stack levels required when called:   14
  9244 ;; This function calls:
  9245 ;;		_enviaComando
  9246 ;;		_sprintf
  9247 ;; This function is called by:
  9248 ;;		_main
  9249 ;; This function uses a non-reentrant model
  9250 ;;
  9251                           
  9252                           	psect	text28
  9253  004BB8                     __ptext28:
  9254                           	opt stack 0
  9255  004BB8                     _SetAppEUI:
  9256                           	opt stack 16
  9257                           
  9258                           ;LoRaWanCore.c: 78: char comando[200];
  9259                           ;LoRaWanCore.c: 79: sprintf(comando, "%s %.2x%.2x%.2x%.2x%.2x%.2x%.2x%.2x", MAC_SET_APPE
      +                          UI, 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 );
  9260                           
  9261                           ; BSR set to: 1
  9262                           ;incstack = 0
  9263  004BB8  0E20               	movlw	low SetAppEUI@comando
  9264  004BBA  0100               	movlb	0	; () banked
  9265  004BBC  6FBF               	movwf	sprintf@sp& (0+255),b
  9266  004BBE  0E01               	movlw	high SetAppEUI@comando
  9267  004BC0  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  9268  004BC2  0EBC               	movlw	low STR_22
  9269  004BC4  6FC1               	movwf	sprintf@f& (0+255),b
  9270  004BC6  0E7E               	movlw	high STR_22
  9271  004BC8  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  9272  004BCA  0E8C               	movlw	low _MAC_SET_APPEUI
  9273  004BCC  6FC3               	movwf	(?_sprintf+4)& (0+255),b
  9274  004BCE  0E7D               	movlw	high _MAC_SET_APPEUI
  9275  004BD0  6FC4               	movwf	(?_sprintf+5)& (0+255),b
  9276  004BD2  0E00               	movlw	0
  9277  004BD4  6FC6               	movwf	(?_sprintf+7)& (0+255),b
  9278  004BD6  0E00               	movlw	0
  9279  004BD8  6FC5               	movwf	(?_sprintf+6)& (0+255),b
  9280  004BDA  0E00               	movlw	0
  9281  004BDC  6FC8               	movwf	(?_sprintf+9)& (0+255),b
  9282  004BDE  0E00               	movlw	0
  9283  004BE0  6FC7               	movwf	(?_sprintf+8)& (0+255),b
  9284  004BE2  0E00               	movlw	0
  9285  004BE4  6FCA               	movwf	(?_sprintf+11)& (0+255),b
  9286  004BE6  0E00               	movlw	0
  9287  004BE8  6FC9               	movwf	(?_sprintf+10)& (0+255),b
  9288  004BEA  0E00               	movlw	0
  9289  004BEC  6FCC               	movwf	(?_sprintf+13)& (0+255),b
  9290  004BEE  0E00               	movlw	0
  9291  004BF0  6FCB               	movwf	(?_sprintf+12)& (0+255),b
  9292  004BF2  0E00               	movlw	0
  9293  004BF4  6FCE               	movwf	(?_sprintf+15)& (0+255),b
  9294  004BF6  0E00               	movlw	0
  9295  004BF8  6FCD               	movwf	(?_sprintf+14)& (0+255),b
  9296  004BFA  0E00               	movlw	0
  9297  004BFC  6FD0               	movwf	(?_sprintf+17)& (0+255),b
  9298  004BFE  0E00               	movlw	0
  9299  004C00  6FCF               	movwf	(?_sprintf+16)& (0+255),b
  9300  004C02  0E00               	movlw	0
  9301  004C04  6FD2               	movwf	(?_sprintf+19)& (0+255),b
  9302  004C06  0E00               	movlw	0
  9303  004C08  6FD1               	movwf	(?_sprintf+18)& (0+255),b
  9304  004C0A  0E00               	movlw	0
  9305  004C0C  6FD4               	movwf	(?_sprintf+21)& (0+255),b
  9306  004C0E  0E00               	movlw	0
  9307  004C10  6FD3               	movwf	(?_sprintf+20)& (0+255),b
  9308  004C12  EC09  F000         	call	_sprintf	;wreg free
  9309                           
  9310                           ;LoRaWanCore.c: 80: uint8_t status=enviaComando(comando,0);
  9311  004C16  0E20               	movlw	low SetAppEUI@comando
  9312  004C18  0100               	movlb	0	; () banked
  9313  004C1A  6F7C               	movwf	enviaComando@cmd& (0+255),b
  9314  004C1C  0E01               	movlw	high SetAppEUI@comando
  9315  004C1E  6F7D               	movwf	(enviaComando@cmd+1)& (0+255),b
  9316  004C20  0E00               	movlw	0
  9317  004C22  6F7E               	movwf	enviaComando@tipoComando& (0+255),b
  9318  004C24  EC25  F01B         	call	_enviaComando	;wreg free
  9319  004C28  0101               	movlb	1	; () banked
  9320  004C2A  6FE8               	movwf	SetAppEUI@status& (0+255),b
  9321  004C2C  0012               	return	
  9322  004C2E                     __end_of_SetAppEUI:
  9323                           	opt stack 0
  9324                           tblptru	equ	0xFF8
  9325                           tblptrh	equ	0xFF7
  9326                           tblptrl	equ	0xFF6
  9327                           tablat	equ	0xFF5
  9328                           prodh	equ	0xFF4
  9329                           prodl	equ	0xFF3
  9330                           intcon	equ	0xFF2
  9331                           postinc0	equ	0xFEE
  9332                           wreg	equ	0xFE8
  9333                           indf1	equ	0xFE7
  9334                           postdec1	equ	0xFE5
  9335                           fsr1h	equ	0xFE2
  9336                           fsr1l	equ	0xFE1
  9337                           indf2	equ	0xFDF
  9338                           postinc2	equ	0xFDE
  9339                           postdec2	equ	0xFDD
  9340                           plusw2	equ	0xFDB
  9341                           fsr2h	equ	0xFDA
  9342                           fsr2l	equ	0xFD9
  9343                           status	equ	0xFD8
  9344                           
  9345 ;; *************** function _SetAdr *****************
  9346 ;; Defined at:
  9347 ;;		line 125 in file "LoRaWanCore.c"
  9348 ;; Parameters:    Size  Location     Type
  9349 ;;  state           2  145[BANK0 ] PTR const unsigned char 
  9350 ;;		 -> STATE_ON(3), STATE_OFF(4), 
  9351 ;; Auto vars:     Size  Location     Type
  9352 ;;  comando       200   32[BANK1 ] unsigned char [200]
  9353 ;;  status          1  232[BANK1 ] unsigned char 
  9354 ;; Return value:  Size  Location     Type
  9355 ;;                  1    wreg      unsigned char 
  9356 ;; Registers used:
  9357 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9358 ;; Tracked objects:
  9359 ;;		On entry : 0/0
  9360 ;;		On exit  : 0/0
  9361 ;;		Unchanged: 0/0
  9362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9363 ;;      Params:         0       2       0       0       0       0       0       0       0
  9364 ;;      Locals:         0       0     201       0       0       0       0       0       0
  9365 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9366 ;;      Totals:         0       2     201       0       0       0       0       0       0
  9367 ;;Total ram usage:      203 bytes
  9368 ;; Hardware stack levels used:    1
  9369 ;; Hardware stack levels required when called:   14
  9370 ;; This function calls:
  9371 ;;		_enviaComando
  9372 ;;		_sprintf
  9373 ;; This function is called by:
  9374 ;;		_main
  9375 ;; This function uses a non-reentrant model
  9376 ;;
  9377                           
  9378                           	psect	text29
  9379  005320                     __ptext29:
  9380                           	opt stack 0
  9381  005320                     _SetAdr:
  9382                           	opt stack 16
  9383                           
  9384                           ;LoRaWanCore.c: 126: char comando[200];
  9385                           ;LoRaWanCore.c: 128: sprintf(comando, "%s %s", MAC_SET_ADR, state);
  9386                           
  9387                           ; BSR set to: 1
  9388                           ;incstack = 0
  9389  005320  0E20               	movlw	low SetAdr@comando
  9390  005322  0100               	movlb	0	; () banked
  9391  005324  6FBF               	movwf	sprintf@sp& (0+255),b
  9392  005326  0E01               	movlw	high SetAdr@comando
  9393  005328  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  9394  00532A  0EE5               	movlw	low STR_27
  9395  00532C  6FC1               	movwf	sprintf@f& (0+255),b
  9396  00532E  0E7F               	movlw	high STR_27
  9397  005330  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  9398  005332  0EC7               	movlw	low _MAC_SET_ADR
  9399  005334  6FC3               	movwf	(?_sprintf+4)& (0+255),b
  9400  005336  0E7D               	movlw	high _MAC_SET_ADR
  9401  005338  6FC4               	movwf	(?_sprintf+5)& (0+255),b
  9402  00533A  C0F1  F0C5         	movff	SetAdr@state,?_sprintf+6
  9403  00533E  C0F2  F0C6         	movff	SetAdr@state+1,?_sprintf+7
  9404  005342  EC09  F000         	call	_sprintf	;wreg free
  9405                           
  9406                           ;LoRaWanCore.c: 129: uint8_t status=enviaComando(comando,0);
  9407  005346  0E20               	movlw	low SetAdr@comando
  9408  005348  0100               	movlb	0	; () banked
  9409  00534A  6F7C               	movwf	enviaComando@cmd& (0+255),b
  9410  00534C  0E01               	movlw	high SetAdr@comando
  9411  00534E  6F7D               	movwf	(enviaComando@cmd+1)& (0+255),b
  9412  005350  0E00               	movlw	0
  9413  005352  6F7E               	movwf	enviaComando@tipoComando& (0+255),b
  9414  005354  EC25  F01B         	call	_enviaComando	;wreg free
  9415  005358  0101               	movlb	1	; () banked
  9416  00535A  6FE8               	movwf	SetAdr@status& (0+255),b
  9417  00535C  0012               	return	
  9418  00535E                     __end_of_SetAdr:
  9419                           	opt stack 0
  9420                           tblptru	equ	0xFF8
  9421                           tblptrh	equ	0xFF7
  9422                           tblptrl	equ	0xFF6
  9423                           tablat	equ	0xFF5
  9424                           prodh	equ	0xFF4
  9425                           prodl	equ	0xFF3
  9426                           intcon	equ	0xFF2
  9427                           postinc0	equ	0xFEE
  9428                           wreg	equ	0xFE8
  9429                           indf1	equ	0xFE7
  9430                           postdec1	equ	0xFE5
  9431                           fsr1h	equ	0xFE2
  9432                           fsr1l	equ	0xFE1
  9433                           indf2	equ	0xFDF
  9434                           postinc2	equ	0xFDE
  9435                           postdec2	equ	0xFDD
  9436                           plusw2	equ	0xFDB
  9437                           fsr2h	equ	0xFDA
  9438                           fsr2l	equ	0xFD9
  9439                           status	equ	0xFD8
  9440                           
  9441 ;; *************** function _MacSave *****************
  9442 ;; Defined at:
  9443 ;;		line 141 in file "LoRaWanCore.c"
  9444 ;; Parameters:    Size  Location     Type
  9445 ;;		None
  9446 ;; Auto vars:     Size  Location     Type
  9447 ;;  comando       200   32[BANK1 ] unsigned char [200]
  9448 ;;  status          1  232[BANK1 ] unsigned char 
  9449 ;; Return value:  Size  Location     Type
  9450 ;;                  1    wreg      unsigned char 
  9451 ;; Registers used:
  9452 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9453 ;; Tracked objects:
  9454 ;;		On entry : 0/0
  9455 ;;		On exit  : 0/0
  9456 ;;		Unchanged: 0/0
  9457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9458 ;;      Params:         0       0       0       0       0       0       0       0       0
  9459 ;;      Locals:         0       0     201       0       0       0       0       0       0
  9460 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9461 ;;      Totals:         0       0     201       0       0       0       0       0       0
  9462 ;;Total ram usage:      201 bytes
  9463 ;; Hardware stack levels used:    1
  9464 ;; Hardware stack levels required when called:   14
  9465 ;; This function calls:
  9466 ;;		_enviaComando
  9467 ;;		_sprintf
  9468 ;; This function is called by:
  9469 ;;		_main
  9470 ;; This function uses a non-reentrant model
  9471 ;;
  9472                           
  9473                           	psect	text30
  9474  00540E                     __ptext30:
  9475                           	opt stack 0
  9476  00540E                     _MacSave:
  9477                           	opt stack 16
  9478                           
  9479                           ;LoRaWanCore.c: 142: char comando[200];
  9480                           ;LoRaWanCore.c: 144: sprintf(comando, "%s", MAC_SAVE);
  9481                           
  9482                           ; BSR set to: 1
  9483                           ;incstack = 0
  9484  00540E  0E20               	movlw	low MacSave@comando
  9485  005410  0100               	movlb	0	; () banked
  9486  005412  6FBF               	movwf	sprintf@sp& (0+255),b
  9487  005414  0E01               	movlw	high MacSave@comando
  9488  005416  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  9489  005418  0EE8               	movlw	low (STR_27+3)
  9490  00541A  6FC1               	movwf	sprintf@f& (0+255),b
  9491  00541C  0E7F               	movlw	high (STR_27+3)
  9492  00541E  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  9493  005420  0EE8               	movlw	low _MAC_SAVE
  9494  005422  6FC3               	movwf	(?_sprintf+4)& (0+255),b
  9495  005424  0E7D               	movlw	high _MAC_SAVE
  9496  005426  6FC4               	movwf	(?_sprintf+5)& (0+255),b
  9497  005428  EC09  F000         	call	_sprintf	;wreg free
  9498                           
  9499                           ;LoRaWanCore.c: 145: uint8_t status=enviaComando(comando,0);
  9500  00542C  0E20               	movlw	low MacSave@comando
  9501  00542E  0100               	movlb	0	; () banked
  9502  005430  6F7C               	movwf	enviaComando@cmd& (0+255),b
  9503  005432  0E01               	movlw	high MacSave@comando
  9504  005434  6F7D               	movwf	(enviaComando@cmd+1)& (0+255),b
  9505  005436  0E00               	movlw	0
  9506  005438  6F7E               	movwf	enviaComando@tipoComando& (0+255),b
  9507  00543A  EC25  F01B         	call	_enviaComando	;wreg free
  9508  00543E  0101               	movlb	1	; () banked
  9509  005440  6FE8               	movwf	MacSave@status& (0+255),b
  9510  005442  0012               	return	
  9511  005444                     __end_of_MacSave:
  9512                           	opt stack 0
  9513                           tblptru	equ	0xFF8
  9514                           tblptrh	equ	0xFF7
  9515                           tblptrl	equ	0xFF6
  9516                           tablat	equ	0xFF5
  9517                           prodh	equ	0xFF4
  9518                           prodl	equ	0xFF3
  9519                           intcon	equ	0xFF2
  9520                           postinc0	equ	0xFEE
  9521                           wreg	equ	0xFE8
  9522                           indf1	equ	0xFE7
  9523                           postdec1	equ	0xFE5
  9524                           fsr1h	equ	0xFE2
  9525                           fsr1l	equ	0xFE1
  9526                           indf2	equ	0xFDF
  9527                           postinc2	equ	0xFDE
  9528                           postdec2	equ	0xFDD
  9529                           plusw2	equ	0xFDB
  9530                           fsr2h	equ	0xFDA
  9531                           fsr2l	equ	0xFD9
  9532                           status	equ	0xFD8
  9533                           
  9534 ;; *************** function _DataRate *****************
  9535 ;; Defined at:
  9536 ;;		line 165 in file "LoRaWanCore.c"
  9537 ;; Parameters:    Size  Location     Type
  9538 ;;  dr              2  145[BANK0 ] unsigned int 
  9539 ;; Auto vars:     Size  Location     Type
  9540 ;;  comando       200   32[BANK1 ] unsigned char [200]
  9541 ;;  status          2  232[BANK1 ] unsigned int 
  9542 ;; Return value:  Size  Location     Type
  9543 ;;                  1    wreg      unsigned char 
  9544 ;; Registers used:
  9545 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9546 ;; Tracked objects:
  9547 ;;		On entry : 0/0
  9548 ;;		On exit  : 0/0
  9549 ;;		Unchanged: 0/0
  9550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9551 ;;      Params:         0       2       0       0       0       0       0       0       0
  9552 ;;      Locals:         0       0     202       0       0       0       0       0       0
  9553 ;;      Temps:          0       1       0       0       0       0       0       0       0
  9554 ;;      Totals:         0       3     202       0       0       0       0       0       0
  9555 ;;Total ram usage:      205 bytes
  9556 ;; Hardware stack levels used:    1
  9557 ;; Hardware stack levels required when called:   14
  9558 ;; This function calls:
  9559 ;;		_enviaComando
  9560 ;;		_sprintf
  9561 ;; This function is called by:
  9562 ;;		_main
  9563 ;; This function uses a non-reentrant model
  9564 ;;
  9565                           
  9566                           	psect	text31
  9567  005190                     __ptext31:
  9568                           	opt stack 0
  9569  005190                     _DataRate:
  9570                           	opt stack 16
  9571                           
  9572                           ;LoRaWanCore.c: 166: char comando[200];
  9573                           ;LoRaWanCore.c: 168: sprintf(comando, "%s %d", MAC_SET_DR, dr);
  9574                           
  9575                           ; BSR set to: 1
  9576                           ;incstack = 0
  9577  005190  0E20               	movlw	low DataRate@comando
  9578  005192  0100               	movlb	0	; () banked
  9579  005194  6FBF               	movwf	sprintf@sp& (0+255),b
  9580  005196  0E01               	movlw	high DataRate@comando
  9581  005198  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  9582  00519A  0EDF               	movlw	low STR_31
  9583  00519C  6FC1               	movwf	sprintf@f& (0+255),b
  9584  00519E  0E7F               	movlw	high STR_31
  9585  0051A0  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  9586  0051A2  0ECF               	movlw	low _MAC_SET_DR
  9587  0051A4  6FC3               	movwf	(?_sprintf+4)& (0+255),b
  9588  0051A6  0E7D               	movlw	high _MAC_SET_DR
  9589  0051A8  6FC4               	movwf	(?_sprintf+5)& (0+255),b
  9590  0051AA  C0F1  F0C5         	movff	DataRate@dr,?_sprintf+6
  9591  0051AE  C0F2  F0C6         	movff	DataRate@dr+1,?_sprintf+7
  9592  0051B2  EC09  F000         	call	_sprintf	;wreg free
  9593                           
  9594                           ;LoRaWanCore.c: 169: uint16_t status=enviaComando(comando,0);
  9595  0051B6  0E20               	movlw	low DataRate@comando
  9596  0051B8  0100               	movlb	0	; () banked
  9597  0051BA  6F7C               	movwf	enviaComando@cmd& (0+255),b
  9598  0051BC  0E01               	movlw	high DataRate@comando
  9599  0051BE  6F7D               	movwf	(enviaComando@cmd+1)& (0+255),b
  9600  0051C0  0E00               	movlw	0
  9601  0051C2  6F7E               	movwf	enviaComando@tipoComando& (0+255),b
  9602  0051C4  EC25  F01B         	call	_enviaComando	;wreg free
  9603  0051C8  0100               	movlb	0	; () banked
  9604  0051CA  6FF3               	movwf	??_DataRate& (0+255),b
  9605  0051CC  51F3               	movf	??_DataRate& (0+255),w,b
  9606  0051CE  0101               	movlb	1	; () banked
  9607  0051D0  6FE8               	movwf	DataRate@status& (0+255),b
  9608  0051D2  6BE9               	clrf	(DataRate@status+1)& (0+255),b
  9609  0051D4  0012               	return	
  9610  0051D6                     __end_of_DataRate:
  9611                           	opt stack 0
  9612                           tblptru	equ	0xFF8
  9613                           tblptrh	equ	0xFF7
  9614                           tblptrl	equ	0xFF6
  9615                           tablat	equ	0xFF5
  9616                           prodh	equ	0xFF4
  9617                           prodl	equ	0xFF3
  9618                           intcon	equ	0xFF2
  9619                           postinc0	equ	0xFEE
  9620                           wreg	equ	0xFE8
  9621                           indf1	equ	0xFE7
  9622                           postdec1	equ	0xFE5
  9623                           fsr1h	equ	0xFE2
  9624                           fsr1l	equ	0xFE1
  9625                           indf2	equ	0xFDF
  9626                           postinc2	equ	0xFDE
  9627                           postdec2	equ	0xFDD
  9628                           plusw2	equ	0xFDB
  9629                           fsr2h	equ	0xFDA
  9630                           fsr2l	equ	0xFD9
  9631                           status	equ	0xFD8
  9632                           
  9633 ;; *************** function _sprintf *****************
  9634 ;; Defined at:
  9635 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\doprnt.c"
  9636 ;; Parameters:    Size  Location     Type
  9637 ;;  sp              2   95[BANK0 ] PTR unsigned char 
  9638 ;;		 -> TxLoRaWan@hex(4), TxLoRaWan@comando(200), DataRate@comando(200), SetBandWidth@comando(200), 
  9639 ;;		 -> SetSpreadingFactor@comando(200), MacSave@comando(200), GetAdr@comando(200), SetAdr@comando(200), 
  9640 ;;		 -> SetChannelLoRaWan@comando(200), SetAppKey@comando(200), SetAppEUI@comando(200), SetDevEUI@comando(200), 
  9641 ;;		 -> GetDnctr@comando(200), addSensorFloat@f(30), addSensorInt@f(30), addSensorStr@f(30), 
  9642 ;;		 -> frameBuffer(200), main@data(150), 
  9643 ;;  f               2   97[BANK0 ] PTR const unsigned char 
  9644 ;;		 -> STR_35(5), STR_34(7), STR_33(7), STR_32(6), 
  9645 ;;		 -> STR_31(6), STR_30(5), STR_29(3), STR_28(3), 
  9646 ;;		 -> STR_27(6), STR_26(10), STR_25(9), STR_24(68), 
  9647 ;;		 -> STR_23(36), STR_22(36), STR_21(3), STR_5(7), 
  9648 ;;		 -> STR_4(8), STR_3(7), STR_2(5), STR_1(101), 
  9649 ;; Auto vars:     Size  Location     Type
  9650 ;;  idx             1    5[BANK1 ] unsigned char 
  9651 ;;  val             4   18[BANK1 ] unsigned long 
  9652 ;;  tmpval          4   12[BANK1 ] struct .
  9653 ;;  fval            3   22[BANK1 ] struct .
  9654 ;;  prec            2   29[BANK1 ] int 
  9655 ;;  flag            2   27[BANK1 ] unsigned short 
  9656 ;;  width           2   25[BANK1 ] int 
  9657 ;;  exp             2   16[BANK1 ] int 
  9658 ;;  ap              2   10[BANK1 ] PTR void [1]
  9659 ;;		 -> ?_sprintf(2), 
  9660 ;;  len             2    8[BANK1 ] unsigned int 
  9661 ;;  cp              2    6[BANK1 ] PTR const unsigned char 
  9662 ;;		 -> STR_36(7), MAC_TX_UNCNF(9), MAC_TX_CNF(7), MAC_SET_DR(7), 
  9663 ;;		 -> MAC_SET_BW(13), MAC_SET_SF(16), MAC_SAVE(5), MAC_GET_ADR(8), 
  9664 ;;		 -> MAC_SET_ADR(8), MAC_SET_CH_STATUS(14), MAC_SET_APPKEY(11), MAC_SET_APPEUI(11), 
  9665 ;;		 -> MAC_SET_DEVEUI(11), MAC_GET_DNCTR(10), STATE_ON(3), STATE_OFF(4), 
  9666 ;;  c               1   31[BANK1 ] char 
  9667 ;;  d               1    0        unsigned char 
  9668 ;; Return value:  Size  Location     Type
  9669 ;;                  2   95[BANK0 ] int 
  9670 ;; Registers used:
  9671 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9672 ;; Tracked objects:
  9673 ;;		On entry : 0/0
  9674 ;;		On exit  : 0/0
  9675 ;;		Unchanged: 0/0
  9676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9677 ;;      Params:         0      44       0       0       0       0       0       0       0
  9678 ;;      Locals:         0       0      32       0       0       0       0       0       0
  9679 ;;      Temps:          0       6       0       0       0       0       0       0       0
  9680 ;;      Totals:         0      50      32       0       0       0       0       0       0
  9681 ;;Total ram usage:       82 bytes
  9682 ;; Hardware stack levels used:    1
  9683 ;; Hardware stack levels required when called:   13
  9684 ;; This function calls:
  9685 ;;		___awdiv
  9686 ;;		___ftadd
  9687 ;;		___ftge
  9688 ;;		___ftmul
  9689 ;;		___ftneg
  9690 ;;		___ftsub
  9691 ;;		___fttol
  9692 ;;		___lldiv
  9693 ;;		___llmod
  9694 ;;		___lltoft
  9695 ;;		___wmul
  9696 ;;		__div_to_l_
  9697 ;;		__tdiv_to_l_
  9698 ;;		_fround
  9699 ;;		_isdigit
  9700 ;;		_scale
  9701 ;; This function is called by:
  9702 ;;		_main
  9703 ;;		_SetDevEUI
  9704 ;;		_SetAppEUI
  9705 ;;		_SetAppKey
  9706 ;;		_SetChannelLoRaWan
  9707 ;;		_SetAdr
  9708 ;;		_MacSave
  9709 ;;		_SetSpreadingFactor
  9710 ;;		_SetBandWidth
  9711 ;;		_DataRate
  9712 ;;		_TxLoRaWan
  9713 ;;		_createFrameHeader
  9714 ;;		_addSensorStr
  9715 ;;		_addSensorInt
  9716 ;;		_addSensorFloat
  9717 ;;		_GetDnctr
  9718 ;;		_GetAdr
  9719 ;; This function uses a non-reentrant model
  9720 ;;
  9721                           
  9722                           	psect	text32
  9723  000012                     __ptext32:
  9724                           	opt stack 0
  9725  000012                     _sprintf:
  9726                           	opt stack 17
  9727                           
  9728                           ;doprnt.c: 494: va_list ap;
  9729                           ;doprnt.c: 499: signed char c;
  9730                           ;doprnt.c: 501: int width;
  9731                           ;doprnt.c: 504: int prec;
  9732                           ;doprnt.c: 508: unsigned short flag;
  9733                           ;doprnt.c: 515: char d;
  9734                           ;doprnt.c: 516: double fval;
  9735                           ;doprnt.c: 517: int exp;
  9736                           ;doprnt.c: 523: union {
  9737                           ;doprnt.c: 524: unsigned long vd;
  9738                           ;doprnt.c: 525: double integ;
  9739                           ;doprnt.c: 526: } tmpval;
  9740                           ;doprnt.c: 528: unsigned long val;
  9741                           ;doprnt.c: 529: unsigned len;
  9742                           ;doprnt.c: 530: const char * cp;
  9743                           ;doprnt.c: 533: *ap = __va_start();
  9744                           
  9745                           ; BSR set to: 1
  9746                           ;incstack = 0
  9747  000012  0EC3               	movlw	low (?_sprintf+4)
  9748  000014  0101               	movlb	1	; () banked
  9749  000016  6F0A               	movwf	sprintf@ap& (0+255),b
  9750  000018  0E00               	movlw	high (?_sprintf+4)
  9751  00001A  6F0B               	movwf	(sprintf@ap+1)& (0+255),b
  9752                           
  9753                           ;doprnt.c: 536: while(c = *f++) {
  9754  00001C  EFF2  F006         	goto	u8640
  9755  000020                     
  9756                           ; BSR set to: 1
  9757                           ;doprnt.c: 538: if(c != '%')
  9758                           
  9759                           ; BSR set to: 1
  9760  000020  0E25               	movlw	37
  9761  000022  191F               	xorwf	sprintf@c& (0+255),w,b
  9762  000024  B4D8               	btfsc	status,2,c
  9763  000026  D00B               	goto	l2623
  9764                           
  9765                           ; BSR set to: 1
  9766                           ;doprnt.c: 540: {
  9767                           ;doprnt.c: 541: ((*sp++ = (c)));
  9768  000028  C0BF  FFD9         	movff	sprintf@sp,fsr2l
  9769  00002C  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
  9770  000030  C11F  FFDF         	movff	sprintf@c,indf2
  9771                           
  9772                           ; BSR set to: 1
  9773  000034  0100               	movlb	0	; () banked
  9774  000036  4BBF               	infsnz	sprintf@sp& (0+255),f,b
  9775  000038  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
  9776                           
  9777                           ;doprnt.c: 542: continue;
  9778  00003A  EFF2  F006         	goto	u8640
  9779  00003E                     l2623:
  9780                           
  9781                           ;doprnt.c: 543: }
  9782                           ;doprnt.c: 546: width = 0;
  9783                           
  9784                           ; BSR set to: 0
  9785  00003E  0E00               	movlw	0
  9786  000040  0101               	movlb	1	; () banked
  9787  000042  6F1A               	movwf	(sprintf@width+1)& (0+255),b
  9788  000044  0E00               	movlw	0
  9789  000046  6F19               	movwf	sprintf@width& (0+255),b
  9790                           
  9791                           ;doprnt.c: 548: flag = 0;
  9792  000048  0E00               	movlw	0
  9793  00004A  6F1C               	movwf	(sprintf@flag+1)& (0+255),b
  9794  00004C  0E00               	movlw	0
  9795  00004E  6F1B               	movwf	sprintf@flag& (0+255),b
  9796                           
  9797                           ; BSR set to: 1
  9798                           ;doprnt.c: 551: switch(*f) {
  9799                           
  9800                           ;doprnt.c: 550: for(;;) {
  9801  000050  D005               	goto	l2625
  9802  000052                     
  9803                           ;doprnt.c: 580: flag |= 0x04;
  9804                           
  9805                           ; BSR set to: 1
  9806  000052  0101               	movlb	1	; () banked
  9807  000054  851B               	bsf	sprintf@flag& (0+255),2,b
  9808                           
  9809                           ;doprnt.c: 581: f++;
  9810  000056  0100               	movlb	0	; () banked
  9811  000058  4BC1               	infsnz	sprintf@f& (0+255),f,b
  9812  00005A  2BC2               	incf	(sprintf@f+1)& (0+255),f,b
  9813  00005C                     l2625:
  9814                           
  9815                           ; BSR set to: 0
  9816  00005C  C0C1  FFF6         	movff	sprintf@f,tblptrl
  9817  000060  C0C2  FFF7         	movff	sprintf@f+1,tblptrh
  9818  000064                     	if	0	;tblptru may be non-zero
  9819  000064                     	endif
  9820  000064                     	if	0	;tblptru may be non-zero
  9821  000064                     	endif
  9822  000064  0008               	tblrd		*
  9823  000066  50F5               	movf	tablat,w,c
  9824                           
  9825                           ; Switch size 1, requested type "space"
  9826                           ; Number of cases is 1, Range of values is 48 to 48
  9827                           ; switch strategies available:
  9828                           ; Name         Instructions Cycles
  9829                           ; simple_byte            4     3 (average)
  9830                           ;	Chosen strategy is simple_byte
  9831  000068  0A30               	xorlw	48	; case 48
  9832  00006A  B4D8               	btfsc	status,2,c
  9833  00006C  D7F2               	goto	l2626
  9834                           
  9835                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  9836                           
  9837                           ;doprnt.c: 586: }
  9838                           
  9839                           ;doprnt.c: 585: break;
  9840  00006E  C0C1  FFF6         	movff	sprintf@f,tblptrl
  9841  000072  C0C2  FFF7         	movff	sprintf@f+1,tblptrh
  9842  000076                     	if	0	;tblptru may be non-zero
  9843  000076                     	endif
  9844  000076                     	if	0	;tblptru may be non-zero
  9845  000076                     	endif
  9846  000076  0008               	tblrd		*
  9847  000078  50F5               	movf	tablat,w,c
  9848  00007A  EC3E  F02B         	call	_isdigit
  9849  00007E  A0D8               	btfss	status,0,c
  9850  000080  D039               	goto	u7970
  9851                           
  9852                           ;doprnt.c: 598: width = 0;
  9853  000082  0E00               	movlw	0
  9854  000084  0101               	movlb	1	; () banked
  9855  000086  6F1A               	movwf	(sprintf@width+1)& (0+255),b
  9856  000088  0E00               	movlw	0
  9857  00008A  6F19               	movwf	sprintf@width& (0+255),b
  9858  00008C                     
  9859                           ;doprnt.c: 600: width *= 10;
  9860                           
  9861                           ; BSR set to: 1
  9862  00008C  C119  F06E         	movff	sprintf@width,___wmul@multiplier
  9863  000090  C11A  F06F         	movff	sprintf@width+1,___wmul@multiplier+1
  9864  000094  0E00               	movlw	0
  9865  000096  0100               	movlb	0	; () banked
  9866  000098  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9867  00009A  0E0A               	movlw	10
  9868  00009C  6F70               	movwf	___wmul@multiplicand& (0+255),b
  9869  00009E  ECCC  F02A         	call	___wmul	;wreg free
  9870  0000A2  C06E  F119         	movff	?___wmul,sprintf@width
  9871  0000A6  C06F  F11A         	movff	?___wmul+1,sprintf@width+1
  9872                           
  9873                           ;doprnt.c: 601: width += *f++ - '0';
  9874  0000AA  0ED0               	movlw	208
  9875  0000AC  0100               	movlb	0	; () banked
  9876  0000AE  6FEB               	movwf	??_sprintf& (0+255),b
  9877  0000B0  0EFF               	movlw	255
  9878  0000B2  6FEC               	movwf	(??_sprintf+1)& (0+255),b
  9879  0000B4  C0C1  FFF6         	movff	sprintf@f,tblptrl
  9880  0000B8  C0C2  FFF7         	movff	sprintf@f+1,tblptrh
  9881  0000BC                     	if	0	;tblptru may be non-zero
  9882  0000BC                     	endif
  9883  0000BC                     	if	0	;tblptru may be non-zero
  9884  0000BC                     	endif
  9885  0000BC  0008               	tblrd		*
  9886  0000BE  50F5               	movf	tablat,w,c
  9887  0000C0  6FED               	movwf	(??_sprintf+2)& (0+255),b
  9888  0000C2  6BEE               	clrf	(??_sprintf+3)& (0+255),b
  9889  0000C4  51EB               	movf	??_sprintf& (0+255),w,b
  9890  0000C6  27ED               	addwf	(??_sprintf+2)& (0+255),f,b
  9891  0000C8  51EC               	movf	(??_sprintf+1)& (0+255),w,b
  9892  0000CA  23EE               	addwfc	(??_sprintf+3)& (0+255),f,b
  9893  0000CC  51ED               	movf	(??_sprintf+2)& (0+255),w,b
  9894  0000CE  0101               	movlb	1	; () banked
  9895  0000D0  2719               	addwf	sprintf@width& (0+255),f,b
  9896  0000D2  0100               	movlb	0	; () banked
  9897  0000D4  51EE               	movf	(??_sprintf+3)& (0+255),w,b
  9898  0000D6  0101               	movlb	1	; () banked
  9899  0000D8  231A               	addwfc	(sprintf@width+1)& (0+255),f,b
  9900                           
  9901                           ; BSR set to: 1
  9902  0000DA  0100               	movlb	0	; () banked
  9903  0000DC  4BC1               	infsnz	sprintf@f& (0+255),f,b
  9904  0000DE  2BC2               	incf	(sprintf@f+1)& (0+255),f,b
  9905                           
  9906                           ; BSR set to: 0
  9907                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  9908  0000E0  C0C1  FFF6         	movff	sprintf@f,tblptrl
  9909  0000E4  C0C2  FFF7         	movff	sprintf@f+1,tblptrh
  9910  0000E8                     	if	0	;tblptru may be non-zero
  9911  0000E8                     	endif
  9912  0000E8                     	if	0	;tblptru may be non-zero
  9913  0000E8                     	endif
  9914  0000E8  0008               	tblrd		*
  9915  0000EA  50F5               	movf	tablat,w,c
  9916  0000EC  EC3E  F02B         	call	_isdigit
  9917  0000F0  B0D8               	btfsc	status,0,c
  9918  0000F2  D7CC               	goto	l2631
  9919  0000F4                     u7970:
  9920                           
  9921                           ;doprnt.c: 608: }
  9922                           ;doprnt.c: 611: if(*f == '.') {
  9923  0000F4  C0C1  FFF6         	movff	sprintf@f,tblptrl
  9924  0000F8  C0C2  FFF7         	movff	sprintf@f+1,tblptrh
  9925  0000FC                     	if	0	;tblptru may be non-zero
  9926  0000FC                     	endif
  9927  0000FC                     	if	0	;tblptru may be non-zero
  9928  0000FC                     	endif
  9929  0000FC  0008               	tblrd		*
  9930  0000FE  50F5               	movf	tablat,w,c
  9931  000100  0A2E               	xorlw	46
  9932  000102  A4D8               	btfss	status,2,c
  9933  000104  D037               	goto	l2633
  9934                           
  9935                           ;doprnt.c: 612: flag |= 0x4000;
  9936  000106  0101               	movlb	1	; () banked
  9937  000108  8D1C               	bsf	(sprintf@flag+1)& (0+255),6,b
  9938                           
  9939                           ;doprnt.c: 613: f++;
  9940  00010A  0100               	movlb	0	; () banked
  9941  00010C  4BC1               	infsnz	sprintf@f& (0+255),f,b
  9942  00010E  2BC2               	incf	(sprintf@f+1)& (0+255),f,b
  9943                           
  9944                           ; BSR set to: 0
  9945                           ;doprnt.c: 620: {
  9946                           ;doprnt.c: 621: prec = 0;
  9947  000110  0E00               	movlw	0
  9948  000112  0101               	movlb	1	; () banked
  9949  000114  6F1E               	movwf	(sprintf@prec+1)& (0+255),b
  9950  000116  0E00               	movlw	0
  9951  000118  6F1D               	movwf	sprintf@prec& (0+255),b
  9952                           
  9953                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  9954  00011A  D021               	goto	l2634
  9955  00011C                     
  9956                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  9957                           
  9958                           ; BSR set to: 1
  9959  00011C  C11D  F06E         	movff	sprintf@prec,___wmul@multiplier
  9960  000120  C11E  F06F         	movff	sprintf@prec+1,___wmul@multiplier+1
  9961  000124  0E00               	movlw	0
  9962  000126  0100               	movlb	0	; () banked
  9963  000128  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9964  00012A  0E0A               	movlw	10
  9965  00012C  6F70               	movwf	___wmul@multiplicand& (0+255),b
  9966  00012E  ECCC  F02A         	call	___wmul	;wreg free
  9967  000132  C0C1  FFF6         	movff	sprintf@f,tblptrl
  9968  000136  C0C2  FFF7         	movff	sprintf@f+1,tblptrh
  9969  00013A                     	if	0	;tblptru may be non-zero
  9970  00013A                     	endif
  9971  00013A                     	if	0	;tblptru may be non-zero
  9972  00013A                     	endif
  9973  00013A  0008               	tblrd		*
  9974  00013C  50F5               	movf	tablat,w,c
  9975  00013E  0100               	movlb	0	; () banked
  9976  000140  276E               	addwf	?___wmul& (0+255),f,b
  9977  000142  0E00               	movlw	0
  9978  000144  236F               	addwfc	(?___wmul+1)& (0+255),f,b
  9979  000146  0ED0               	movlw	208
  9980  000148  256E               	addwf	?___wmul& (0+255),w,b
  9981  00014A  0101               	movlb	1	; () banked
  9982  00014C  6F1D               	movwf	sprintf@prec& (0+255),b
  9983  00014E  0EFF               	movlw	255
  9984  000150  0100               	movlb	0	; () banked
  9985  000152  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  9986  000154  0101               	movlb	1	; () banked
  9987  000156  6F1E               	movwf	(sprintf@prec+1)& (0+255),b
  9988                           
  9989                           ; BSR set to: 1
  9990  000158  0100               	movlb	0	; () banked
  9991  00015A  4BC1               	infsnz	sprintf@f& (0+255),f,b
  9992  00015C  2BC2               	incf	(sprintf@f+1)& (0+255),f,b
  9993  00015E                     l2634:
  9994                           
  9995                           ; BSR set to: 0
  9996  00015E  C0C1  FFF6         	movff	sprintf@f,tblptrl
  9997  000162  C0C2  FFF7         	movff	sprintf@f+1,tblptrh
  9998  000166                     	if	0	;tblptru may be non-zero
  9999  000166                     	endif
 10000  000166                     	if	0	;tblptru may be non-zero
 10001  000166                     	endif
 10002  000166  0008               	tblrd		*
 10003  000168  50F5               	movf	tablat,w,c
 10004  00016A  EC3E  F02B         	call	_isdigit
 10005  00016E  A0D8               	btfss	status,0,c
 10006  000170  D08D               	goto	l2639
 10007  000172  D7D4               	goto	l2635
 10008  000174                     l2633:
 10009                           
 10010                           ;doprnt.c: 626: prec = 0;
 10011  000174  0E00               	movlw	0
 10012  000176  0101               	movlb	1	; () banked
 10013  000178  6F1E               	movwf	(sprintf@prec+1)& (0+255),b
 10014  00017A  0E00               	movlw	0
 10015  00017C  6F1D               	movwf	sprintf@prec& (0+255),b
 10016                           
 10017                           ; BSR set to: 1
 10018                           ;doprnt.c: 628: flag |= 0x1000;
 10019  00017E  891C               	bsf	(sprintf@flag+1)& (0+255),4,b
 10020                           
 10021                           ; BSR set to: 1
 10022                           ;doprnt.c: 635: switch(c = *f++) {
 10023                           
 10024                           ;doprnt.c: 630: }
 10025                           ;doprnt.c: 633: loop:
 10026                           
 10027                           ; BSR set to: 1
 10028  000180  D085               	goto	l2639
 10029  000182                     
 10030                           ; BSR set to: 1
 10031                           ;doprnt.c: 643: flag |= 0x10;
 10032                           
 10033                           ; BSR set to: 1
 10034  000182  891B               	bsf	sprintf@flag& (0+255),4,b
 10035                           
 10036                           ;doprnt.c: 644: goto loop;
 10037  000184  D083               	goto	l2639
 10038  000186                     
 10039                           ; BSR set to: 1
 10040                           ;doprnt.c: 663: flag |= 0x400;
 10041                           
 10042                           ; BSR set to: 1
 10043  000186  851C               	bsf	(sprintf@flag+1)& (0+255),2,b
 10044                           
 10045                           ; BSR set to: 1
 10046                           ;doprnt.c: 698: case 'i':
 10047                           ;doprnt.c: 699: break;
 10048                           
 10049                           ; BSR set to: 1
 10050                           
 10051                           ;doprnt.c: 697: case 'd':
 10052                           
 10053                           ;doprnt.c: 664: break;
 10054  000188  D0AB               	goto	l2644
 10055  00018A                     
 10056                           ; BSR set to: 1
 10057                           ;doprnt.c: 714: flag |= 0x20;
 10058                           
 10059                           ; BSR set to: 1
 10060  00018A  8B1B               	bsf	sprintf@flag& (0+255),5,b
 10061  00018C                     l2648:
 10062                           
 10063                           ; BSR set to: 1
 10064                           ;doprnt.c: 721: flag |= 0x80;
 10065  00018C  8F1B               	bsf	sprintf@flag& (0+255),7,b
 10066                           
 10067                           ;doprnt.c: 723: break;
 10068  00018E  D0A8               	goto	l2644
 10069  000190                     
 10070                           ; BSR set to: 1
 10071                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 10072                           
 10073                           ; BSR set to: 1
 10074  000190  C10A  FFD9         	movff	sprintf@ap,fsr2l
 10075  000194  C10B  FFDA         	movff	sprintf@ap+1,fsr2h
 10076  000198  CFDE F106          	movff	postinc2,sprintf@cp
 10077  00019C  CFDD F107          	movff	postdec2,sprintf@cp+1
 10078                           
 10079                           ; BSR set to: 1
 10080  0001A0  0E02               	movlw	2
 10081  0001A2  270A               	addwf	sprintf@ap& (0+255),f,b
 10082  0001A4  0E00               	movlw	0
 10083  0001A6  230B               	addwfc	(sprintf@ap+1)& (0+255),f,b
 10084                           
 10085                           ; BSR set to: 1
 10086                           ;doprnt.c: 740: if(!cp)
 10087  0001A8  5106               	movf	sprintf@cp& (0+255),w,b
 10088  0001AA  1107               	iorwf	(sprintf@cp+1)& (0+255),w,b
 10089  0001AC  A4D8               	btfss	status,2,c
 10090  0001AE  D004               	goto	l2650
 10091                           
 10092                           ; BSR set to: 1
 10093                           ;doprnt.c: 741: cp = "(null)";
 10094  0001B0  0EB5               	movlw	low STR_36
 10095  0001B2  6F06               	movwf	sprintf@cp& (0+255),b
 10096  0001B4  0E7F               	movlw	high STR_36
 10097  0001B6  6F07               	movwf	(sprintf@cp+1)& (0+255),b
 10098  0001B8                     l2650:
 10099                           
 10100                           ; BSR set to: 1
 10101                           ;doprnt.c: 745: len = 0;
 10102                           
 10103                           ; BSR set to: 1
 10104  0001B8  0E00               	movlw	0
 10105  0001BA  6F09               	movwf	(sprintf@len+1)& (0+255),b
 10106  0001BC  0E00               	movlw	0
 10107  0001BE  6F08               	movwf	sprintf@len& (0+255),b
 10108                           
 10109                           ;doprnt.c: 746: while(cp[len])
 10110  0001C0  D003               	goto	l2651
 10111  0001C2                     
 10112                           ;doprnt.c: 747: len++;
 10113                           
 10114                           ; BSR set to: 1
 10115  0001C2  0101               	movlb	1	; () banked
 10116  0001C4  4B08               	infsnz	sprintf@len& (0+255),f,b
 10117  0001C6  2B09               	incf	(sprintf@len+1)& (0+255),f,b
 10118  0001C8                     l2651:
 10119                           
 10120                           ; BSR set to: 1
 10121                           
 10122                           ; BSR set to: 1
 10123  0001C8  5108               	movf	sprintf@len& (0+255),w,b
 10124  0001CA  2506               	addwf	sprintf@cp& (0+255),w,b
 10125  0001CC  0100               	movlb	0	; () banked
 10126  0001CE  6FEB               	movwf	??_sprintf& (0+255),b
 10127  0001D0  0101               	movlb	1	; () banked
 10128  0001D2  5109               	movf	(sprintf@len+1)& (0+255),w,b
 10129  0001D4  2107               	addwfc	(sprintf@cp+1)& (0+255),w,b
 10130  0001D6  0100               	movlb	0	; () banked
 10131  0001D8  6FEC               	movwf	(??_sprintf+1)& (0+255),b
 10132  0001DA  C0EB  FFF6         	movff	??_sprintf,tblptrl
 10133  0001DE  C0EC  FFF7         	movff	??_sprintf+1,tblptrh
 10134  0001E2                     	if	0	;tblptru may be non-zero
 10135  0001E2                     	endif
 10136  0001E2                     	if	0	;tblptru may be non-zero
 10137  0001E2                     	endif
 10138  0001E2  0008               	tblrd		*
 10139  0001E4  50F5               	movf	tablat,w,c
 10140  0001E6  0900               	iorlw	0
 10141  0001E8  A4D8               	btfss	status,2,c
 10142  0001EA  D7EB               	goto	l2652
 10143                           
 10144                           ; BSR set to: 0
 10145                           ;doprnt.c: 753: if(prec && prec < len)
 10146                           
 10147                           ; BSR set to: 0
 10148  0001EC  0101               	movlb	1	; () banked
 10149  0001EE  511D               	movf	sprintf@prec& (0+255),w,b
 10150  0001F0  111E               	iorwf	(sprintf@prec+1)& (0+255),w,b
 10151  0001F2  B4D8               	btfsc	status,2,c
 10152  0001F4  D00A               	goto	l2654
 10153                           
 10154                           ; BSR set to: 1
 10155  0001F6  5108               	movf	sprintf@len& (0+255),w,b
 10156  0001F8  5D1D               	subwf	sprintf@prec& (0+255),w,b
 10157  0001FA  5109               	movf	(sprintf@len+1)& (0+255),w,b
 10158  0001FC  591E               	subwfb	(sprintf@prec+1)& (0+255),w,b
 10159  0001FE  B0D8               	btfsc	status,0,c
 10160  000200  D004               	goto	l2654
 10161                           
 10162                           ; BSR set to: 1
 10163                           ;doprnt.c: 754: len = prec;
 10164  000202  C11D  F108         	movff	sprintf@prec,sprintf@len
 10165  000206  C11E  F109         	movff	sprintf@prec+1,sprintf@len+1
 10166  00020A                     l2654:
 10167                           
 10168                           ; BSR set to: 1
 10169                           ;doprnt.c: 757: if(width > len)
 10170                           
 10171                           ; BSR set to: 1
 10172  00020A  5119               	movf	sprintf@width& (0+255),w,b
 10173  00020C  5D08               	subwf	sprintf@len& (0+255),w,b
 10174  00020E  511A               	movf	(sprintf@width+1)& (0+255),w,b
 10175  000210  5909               	subwfb	(sprintf@len+1)& (0+255),w,b
 10176  000212  B0D8               	btfsc	status,0,c
 10177  000214  D005               	goto	l2655
 10178                           
 10179                           ; BSR set to: 1
 10180                           ;doprnt.c: 758: width -= len;
 10181  000216  5108               	movf	sprintf@len& (0+255),w,b
 10182  000218  5F19               	subwf	sprintf@width& (0+255),f,b
 10183  00021A  5109               	movf	(sprintf@len+1)& (0+255),w,b
 10184  00021C  5B1A               	subwfb	(sprintf@width+1)& (0+255),f,b
 10185  00021E  D00E               	goto	l2657
 10186  000220                     l2655:
 10187                           
 10188                           ; BSR set to: 1
 10189                           ;doprnt.c: 759: else
 10190                           ;doprnt.c: 760: width = 0;
 10191                           
 10192                           ; BSR set to: 1
 10193  000220  0E00               	movlw	0
 10194  000222  6F1A               	movwf	(sprintf@width+1)& (0+255),b
 10195  000224  0E00               	movlw	0
 10196  000226  6F19               	movwf	sprintf@width& (0+255),b
 10197                           
 10198                           ; BSR set to: 1
 10199                           ;doprnt.c: 764: while(width--)
 10200  000228  D009               	goto	l2657
 10201  00022A                     l8996:
 10202                           
 10203                           ; BSR set to: 1
 10204                           ;doprnt.c: 765: ((*sp++ = (' ')));
 10205  00022A  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 10206  00022E  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 10207  000232  0E20               	movlw	32
 10208  000234  6EDF               	movwf	indf2,c
 10209                           
 10210                           ; BSR set to: 1
 10211  000236  0100               	movlb	0	; () banked
 10212  000238  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 10213  00023A  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 10214  00023C                     l2657:
 10215                           
 10216                           ; BSR set to: 0
 10217  00023C  0101               	movlb	1	; () banked
 10218  00023E  0719               	decf	sprintf@width& (0+255),f,b
 10219  000240  A0D8               	btfss	status,0,c
 10220  000242  071A               	decf	(sprintf@width+1)& (0+255),f,b
 10221  000244  2919               	incf	sprintf@width& (0+255),w,b
 10222  000246  E1F1               	bnz	l8996
 10223  000248  291A               	incf	(sprintf@width+1)& (0+255),w,b
 10224  00024A  B4D8               	btfsc	status,2,c
 10225  00024C  D011               	goto	l2660
 10226  00024E  D7ED               	goto	l2658
 10227  000250                     l9002:
 10228                           
 10229                           ; BSR set to: 1
 10230                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
 10231  000250  C106  FFF6         	movff	sprintf@cp,tblptrl
 10232  000254  C107  FFF7         	movff	sprintf@cp+1,tblptrh
 10233  000258                     	if	0	;tblptru may be non-zero
 10234  000258                     	endif
 10235  000258                     	if	0	;tblptru may be non-zero
 10236  000258                     	endif
 10237  000258  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 10238  00025C  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 10239  000260  0008               	tblrd		*
 10240  000262  CFF5 FFDF          	movff	tablat,indf2
 10241                           
 10242                           ; BSR set to: 1
 10243  000266  4B06               	infsnz	sprintf@cp& (0+255),f,b
 10244  000268  2B07               	incf	(sprintf@cp+1)& (0+255),f,b
 10245                           
 10246                           ; BSR set to: 1
 10247  00026A  0100               	movlb	0	; () banked
 10248  00026C  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 10249  00026E  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 10250  000270                     l2660:
 10251                           
 10252                           ; BSR set to: 0
 10253  000270  0101               	movlb	1	; () banked
 10254  000272  0708               	decf	sprintf@len& (0+255),f,b
 10255  000274  A0D8               	btfss	status,0,c
 10256  000276  0709               	decf	(sprintf@len+1)& (0+255),f,b
 10257  000278  2908               	incf	sprintf@len& (0+255),w,b
 10258  00027A  E1EA               	bnz	l9002
 10259  00027C  2909               	incf	(sprintf@len+1)& (0+255),w,b
 10260  00027E  B4D8               	btfsc	status,2,c
 10261  000280  EFF2  F006         	goto	u8640
 10262  000284  D7E5               	goto	l2661
 10263  000286                     
 10264                           ; BSR set to: 1
 10265                           ;doprnt.c: 818: flag |= 0xC0;
 10266                           
 10267                           ; BSR set to: 1
 10268  000286  0EC0               	movlw	192
 10269  000288  131B               	iorwf	sprintf@flag& (0+255),f,b
 10270                           
 10271                           ; BSR set to: 1
 10272                           ;doprnt.c: 822: }
 10273                           
 10274                           ;doprnt.c: 819: break;
 10275  00028A  D02A               	goto	l2644
 10276  00028C                     l2639:
 10277                           
 10278                           ; BSR set to: 1
 10279  00028C  C0C1  FFF6         	movff	sprintf@f,tblptrl
 10280  000290  C0C2  FFF7         	movff	sprintf@f+1,tblptrh
 10281  000294  0100               	movlb	0	; () banked
 10282  000296  4BC1               	infsnz	sprintf@f& (0+255),f,b
 10283  000298  2BC2               	incf	(sprintf@f+1)& (0+255),f,b
 10284  00029A                     	if	0	;tblptru may be non-zero
 10285  00029A                     	endif
 10286  00029A                     	if	0	;tblptru may be non-zero
 10287  00029A                     	endif
 10288  00029A  0008               	tblrd		*
 10289  00029C  CFF5 F11F          	movff	tablat,sprintf@c
 10290  0002A0  0101               	movlb	1	; () banked
 10291  0002A2  511F               	movf	sprintf@c& (0+255),w,b
 10292                           
 10293                           ; Switch size 1, requested type "space"
 10294                           ; Number of cases is 9, Range of values is 0 to 120
 10295                           ; switch strategies available:
 10296                           ; Name         Instructions Cycles
 10297                           ; simple_byte           28    15 (average)
 10298                           ;	Chosen strategy is simple_byte
 10299  0002A4  0A00               	xorlw	0	; case 0
 10300  0002A6  B4D8               	btfsc	status,2,c
 10301  0002A8  EF01  F007         	goto	u8650
 10302  0002AC  0A58               	xorlw	88	; case 88
 10303  0002AE  B4D8               	btfsc	status,2,c
 10304  0002B0  D76C               	goto	l2647
 10305  0002B2  0A3C               	xorlw	60	; case 100
 10306  0002B4  B4D8               	btfsc	status,2,c
 10307  0002B6  D014               	goto	l2644
 10308  0002B8  0A02               	xorlw	2	; case 102
 10309  0002BA  B4D8               	btfsc	status,2,c
 10310  0002BC  D764               	goto	l2643
 10311  0002BE  0A0F               	xorlw	15	; case 105
 10312  0002C0  B4D8               	btfsc	status,2,c
 10313  0002C2  D00E               	goto	l2644
 10314  0002C4  0A05               	xorlw	5	; case 108
 10315  0002C6  B4D8               	btfsc	status,2,c
 10316  0002C8  D75C               	goto	l2642
 10317  0002CA  0A1F               	xorlw	31	; case 115
 10318  0002CC  B4D8               	btfsc	status,2,c
 10319  0002CE  D760               	goto	l2649
 10320  0002D0  0A06               	xorlw	6	; case 117
 10321  0002D2  B4D8               	btfsc	status,2,c
 10322  0002D4  D7D8               	goto	l2664
 10323  0002D6  0A0D               	xorlw	13	; case 120
 10324  0002D8  B4D8               	btfsc	status,2,c
 10325  0002DA  D758               	goto	l2648
 10326  0002DC  EFF2  F006         	goto	u8640
 10327  0002E0                     l2644:
 10328                           
 10329                           ; BSR set to: 1
 10330                           ;doprnt.c: 825: if(flag & (0x700)) {
 10331                           
 10332                           ; BSR set to: 1
 10333  0002E0  0E07               	movlw	7
 10334  0002E2  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
 10335  0002E4  B4D8               	btfsc	status,2,c
 10336  0002E6  D35F               	goto	l2665
 10337                           
 10338                           ; BSR set to: 1
 10339                           ;doprnt.c: 827: if(flag & 0x1000)
 10340  0002E8  A91C               	btfss	(sprintf@flag+1)& (0+255),4,b
 10341  0002EA  D004               	goto	l2666
 10342                           
 10343                           ; BSR set to: 1
 10344                           ;doprnt.c: 829: prec = 6;
 10345  0002EC  0E00               	movlw	0
 10346  0002EE  6F1E               	movwf	(sprintf@prec+1)& (0+255),b
 10347  0002F0  0E06               	movlw	6
 10348  0002F2  6F1D               	movwf	sprintf@prec& (0+255),b
 10349  0002F4                     l2666:
 10350                           
 10351                           ; BSR set to: 1
 10352                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 10353                           
 10354                           ; BSR set to: 1
 10355  0002F4  C10A  FFD9         	movff	sprintf@ap,fsr2l
 10356  0002F8  C10B  FFDA         	movff	sprintf@ap+1,fsr2h
 10357  0002FC  CFDE F116          	movff	postinc2,sprintf@fval
 10358  000300  CFDE F117          	movff	postinc2,sprintf@fval+1
 10359  000304  CFDD F118          	movff	postdec2,sprintf@fval+2
 10360                           
 10361                           ; BSR set to: 1
 10362  000308  0E03               	movlw	3
 10363  00030A  270A               	addwf	sprintf@ap& (0+255),f,b
 10364  00030C  0E00               	movlw	0
 10365  00030E  230B               	addwfc	(sprintf@ap+1)& (0+255),f,b
 10366                           
 10367                           ; BSR set to: 1
 10368                           ;doprnt.c: 831: if(fval < 0.0) {
 10369  000310  AF18               	btfss	(sprintf@fval+2)& (0+255),7,b
 10370  000312  D011               	goto	l2667
 10371                           
 10372                           ; BSR set to: 1
 10373                           ;doprnt.c: 832: fval = -fval;
 10374  000314  C116  F060         	movff	sprintf@fval,___ftneg@f1
 10375  000318  C117  F061         	movff	sprintf@fval+1,___ftneg@f1+1
 10376  00031C  C118  F062         	movff	sprintf@fval+2,___ftneg@f1+2
 10377  000320  ECF3  F02A         	call	___ftneg	;wreg free
 10378  000324  C060  F116         	movff	?___ftneg,sprintf@fval
 10379  000328  C061  F117         	movff	?___ftneg+1,sprintf@fval+1
 10380  00032C  C062  F118         	movff	?___ftneg+2,sprintf@fval+2
 10381                           
 10382                           ;doprnt.c: 833: flag |= 0x03;
 10383  000330  0E03               	movlw	3
 10384  000332  0101               	movlb	1	; () banked
 10385  000334  131B               	iorwf	sprintf@flag& (0+255),f,b
 10386  000336                     l2667:
 10387                           
 10388                           ; BSR set to: 1
 10389                           ;doprnt.c: 834: }
 10390                           ;doprnt.c: 835: exp = 0;
 10391                           
 10392                           ; BSR set to: 1
 10393  000336  0E00               	movlw	0
 10394  000338  6F11               	movwf	(sprintf@exp+1)& (0+255),b
 10395  00033A  0E00               	movlw	0
 10396  00033C  6F10               	movwf	sprintf@exp& (0+255),b
 10397                           
 10398                           ; BSR set to: 1
 10399                           ;doprnt.c: 836: if( fval!=0) {
 10400  00033E  5116               	movf	sprintf@fval& (0+255),w,b
 10401  000340  1117               	iorwf	(sprintf@fval+1)& (0+255),w,b
 10402  000342  1118               	iorwf	(sprintf@fval+2)& (0+255),w,b
 10403  000344  B4D8               	btfsc	status,2,c
 10404  000346  D090               	goto	l2672
 10405                           
 10406                           ; BSR set to: 1
 10407                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
 10408  000348  0E82               	movlw	130
 10409  00034A  0100               	movlb	0	; () banked
 10410  00034C  6FEB               	movwf	??_sprintf& (0+255),b
 10411  00034E  0EFF               	movlw	255
 10412  000350  6FEC               	movwf	(??_sprintf+1)& (0+255),b
 10413  000352  C116  F0ED         	movff	sprintf@fval,??_sprintf+2
 10414  000356  C117  F0EE         	movff	sprintf@fval+1,??_sprintf+3
 10415  00035A  C118  F0EF         	movff	sprintf@fval+2,??_sprintf+4
 10416  00035E  C119  F0F0         	movff	sprintf@fval+3,??_sprintf+5
 10417  000362  0E10               	movlw	16
 10418  000364  D005               	goto	u8110
 10419  000366                     u8115:
 10420  000366  90D8               	bcf	status,0,c
 10421  000368  33F0               	rrcf	(??_sprintf+5)& (0+255),f,b
 10422  00036A  33EF               	rrcf	(??_sprintf+4)& (0+255),f,b
 10423  00036C  33EE               	rrcf	(??_sprintf+3)& (0+255),f,b
 10424  00036E  33ED               	rrcf	(??_sprintf+2)& (0+255),f,b
 10425  000370                     u8110:
 10426  000370  2EE8               	decfsz	wreg,f,c
 10427  000372  D7F9               	goto	u8115
 10428  000374  51ED               	movf	(??_sprintf+2)& (0+255),w,b
 10429  000376  25EB               	addwf	??_sprintf& (0+255),w,b
 10430  000378  0101               	movlb	1	; () banked
 10431  00037A  6F10               	movwf	sprintf@exp& (0+255),b
 10432  00037C  0E00               	movlw	0
 10433  00037E  0100               	movlb	0	; () banked
 10434  000380  21EC               	addwfc	(??_sprintf+1)& (0+255),w,b
 10435  000382  0101               	movlb	1	; () banked
 10436  000384  6F11               	movwf	(sprintf@exp+1)& (0+255),b
 10437                           
 10438                           ; BSR set to: 1
 10439                           ;doprnt.c: 838: exp--;
 10440  000386  0710               	decf	sprintf@exp& (0+255),f,b
 10441  000388  A0D8               	btfss	status,0,c
 10442  00038A  0711               	decf	(sprintf@exp+1)& (0+255),f,b
 10443                           
 10444                           ; BSR set to: 1
 10445                           ;doprnt.c: 839: exp *= 3;
 10446  00038C  C110  F06E         	movff	sprintf@exp,___wmul@multiplier
 10447  000390  C111  F06F         	movff	sprintf@exp+1,___wmul@multiplier+1
 10448  000394  0E00               	movlw	0
 10449  000396  0100               	movlb	0	; () banked
 10450  000398  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10451  00039A  0E03               	movlw	3
 10452  00039C  6F70               	movwf	___wmul@multiplicand& (0+255),b
 10453  00039E  ECCC  F02A         	call	___wmul	;wreg free
 10454  0003A2  C06E  F110         	movff	?___wmul,sprintf@exp
 10455  0003A6  C06F  F111         	movff	?___wmul+1,sprintf@exp+1
 10456                           
 10457                           ;doprnt.c: 840: exp /= 10;
 10458  0003AA  C110  F066         	movff	sprintf@exp,___awdiv@dividend
 10459  0003AE  C111  F067         	movff	sprintf@exp+1,___awdiv@dividend+1
 10460  0003B2  0E00               	movlw	0
 10461  0003B4  0100               	movlb	0	; () banked
 10462  0003B6  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 10463  0003B8  0E0A               	movlw	10
 10464  0003BA  6F68               	movwf	___awdiv@divisor& (0+255),b
 10465  0003BC  EC98  F024         	call	___awdiv	;wreg free
 10466  0003C0  C066  F110         	movff	?___awdiv,sprintf@exp
 10467  0003C4  C067  F111         	movff	?___awdiv+1,sprintf@exp+1
 10468                           
 10469                           ;doprnt.c: 841: if(exp < 0)
 10470  0003C8  0101               	movlb	1	; () banked
 10471  0003CA  AF11               	btfss	(sprintf@exp+1)& (0+255),7,b
 10472  0003CC  D003               	goto	l2669
 10473                           
 10474                           ; BSR set to: 1
 10475                           ;doprnt.c: 842: exp--;
 10476  0003CE  0710               	decf	sprintf@exp& (0+255),f,b
 10477  0003D0  A0D8               	btfss	status,0,c
 10478  0003D2  0711               	decf	(sprintf@exp+1)& (0+255),f,b
 10479  0003D4                     l2669:
 10480                           
 10481                           ; BSR set to: 1
 10482                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 10483                           
 10484                           ; BSR set to: 1
 10485  0003D4  5110               	movf	sprintf@exp& (0+255),w,b
 10486  0003D6  0800               	sublw	0
 10487  0003D8  ECD8  F00B         	call	_scale
 10488  0003DC  C08F  F10C         	movff	?_scale,sprintf@tmpval
 10489  0003E0  C090  F10D         	movff	?_scale+1,sprintf@tmpval+1
 10490  0003E4  C091  F10E         	movff	?_scale+2,sprintf@tmpval+2
 10491                           
 10492                           ;doprnt.c: 847: tmpval.integ *= fval;
 10493  0003E8  C10C  F080         	movff	sprintf@tmpval,___ftmul@f1
 10494  0003EC  C10D  F081         	movff	sprintf@tmpval+1,___ftmul@f1+1
 10495  0003F0  C10E  F082         	movff	sprintf@tmpval+2,___ftmul@f1+2
 10496  0003F4  C116  F083         	movff	sprintf@fval,___ftmul@f2
 10497  0003F8  C117  F084         	movff	sprintf@fval+1,___ftmul@f2+1
 10498  0003FC  C118  F085         	movff	sprintf@fval+2,___ftmul@f2+2
 10499  000400  EC24  F01D         	call	___ftmul	;wreg free
 10500  000404  C080  F10C         	movff	?___ftmul,sprintf@tmpval
 10501  000408  C081  F10D         	movff	?___ftmul+1,sprintf@tmpval+1
 10502  00040C  C082  F10E         	movff	?___ftmul+2,sprintf@tmpval+2
 10503                           
 10504                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 10505  000410  C10C  F060         	movff	sprintf@tmpval,___ftge@ff1
 10506  000414  C10D  F061         	movff	sprintf@tmpval+1,___ftge@ff1+1
 10507  000418  C10E  F062         	movff	sprintf@tmpval+2,___ftge@ff1+2
 10508  00041C  0E00               	movlw	0
 10509  00041E  0100               	movlb	0	; () banked
 10510  000420  6F63               	movwf	___ftge@ff2& (0+255),b
 10511  000422  0E80               	movlw	128
 10512  000424  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
 10513  000426  0E3F               	movlw	63
 10514  000428  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
 10515  00042A  EC06  F024         	call	___ftge	;wreg free
 10516  00042E  0100               	movlb	0	; () banked
 10517  000430  B0D8               	btfsc	status,0,c
 10518  000432  D005               	goto	l2670
 10519                           
 10520                           ; BSR set to: 0
 10521                           ;doprnt.c: 849: exp--;
 10522  000434  0101               	movlb	1	; () banked
 10523  000436  0710               	decf	sprintf@exp& (0+255),f,b
 10524  000438  A0D8               	btfss	status,0,c
 10525  00043A  0711               	decf	(sprintf@exp+1)& (0+255),f,b
 10526  00043C  D015               	goto	l2672
 10527  00043E                     l2670:
 10528                           
 10529                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 10530                           
 10531                           ; BSR set to: 1
 10532  00043E  C10C  F060         	movff	sprintf@tmpval,___ftge@ff1
 10533  000442  C10D  F061         	movff	sprintf@tmpval+1,___ftge@ff1+1
 10534  000446  C10E  F062         	movff	sprintf@tmpval+2,___ftge@ff1+2
 10535  00044A  0E00               	movlw	0
 10536  00044C  0100               	movlb	0	; () banked
 10537  00044E  6F63               	movwf	___ftge@ff2& (0+255),b
 10538  000450  0E20               	movlw	32
 10539  000452  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
 10540  000454  0E41               	movlw	65
 10541  000456  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
 10542  000458  EC06  F024         	call	___ftge	;wreg free
 10543  00045C  0100               	movlb	0	; () banked
 10544  00045E  A0D8               	btfss	status,0,c
 10545  000460  D003               	goto	l2672
 10546                           
 10547                           ; BSR set to: 0
 10548                           ;doprnt.c: 851: exp++;
 10549  000462  0101               	movlb	1	; () banked
 10550  000464  4B10               	infsnz	sprintf@exp& (0+255),f,b
 10551  000466  2B11               	incf	(sprintf@exp+1)& (0+255),f,b
 10552  000468                     l2672:
 10553                           
 10554                           ;doprnt.c: 852: }
 10555                           ;doprnt.c: 1112: if(prec <= 12)
 10556                           
 10557                           ; BSR set to: 1
 10558                           
 10559                           ; BSR set to: 1
 10560                           
 10561                           ; BSR set to: 1
 10562  000468  0101               	movlb	1	; () banked
 10563  00046A  BF1E               	btfsc	(sprintf@prec+1)& (0+255),7,b
 10564  00046C  D006               	goto	u8150
 10565  00046E  511E               	movf	(sprintf@prec+1)& (0+255),w,b
 10566  000470  E11B               	bnz	l9064
 10567  000472  0E0D               	movlw	13
 10568  000474  5D1D               	subwf	sprintf@prec& (0+255),w,b
 10569  000476  B0D8               	btfsc	status,0,c
 10570  000478  D017               	goto	l2673
 10571  00047A                     u8150:
 10572                           
 10573                           ; BSR set to: 1
 10574                           ;doprnt.c: 1113: fval += fround(prec);
 10575  00047A  C116  F074         	movff	sprintf@fval,___ftadd@f1
 10576  00047E  C117  F075         	movff	sprintf@fval+1,___ftadd@f1+1
 10577  000482  C118  F076         	movff	sprintf@fval+2,___ftadd@f1+2
 10578  000486  511D               	movf	sprintf@prec& (0+255),w,b
 10579  000488  EC69  F012         	call	_fround
 10580  00048C  C08F  F077         	movff	?_fround,___ftadd@f2
 10581  000490  C090  F078         	movff	?_fround+1,___ftadd@f2+1
 10582  000494  C091  F079         	movff	?_fround+2,___ftadd@f2+2
 10583  000498  EC82  F014         	call	___ftadd	;wreg free
 10584  00049C  C074  F116         	movff	?___ftadd,sprintf@fval
 10585  0004A0  C075  F117         	movff	?___ftadd+1,sprintf@fval+1
 10586  0004A4  C076  F118         	movff	?___ftadd+2,sprintf@fval+2
 10587  0004A8                     l2673:
 10588  0004A8                     l9064:
 10589                           
 10590                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 10591  0004A8  0101               	movlb	1	; () banked
 10592  0004AA  BF11               	btfsc	(sprintf@exp+1)& (0+255),7,b
 10593  0004AC  D006               	goto	u8160
 10594  0004AE  5111               	movf	(sprintf@exp+1)& (0+255),w,b
 10595  0004B0  E121               	bnz	l9072
 10596  0004B2  0E0A               	movlw	10
 10597  0004B4  5D10               	subwf	sprintf@exp& (0+255),w,b
 10598  0004B6  B0D8               	btfsc	status,0,c
 10599  0004B8  D01D               	goto	u8190
 10600  0004BA                     u8160:
 10601                           
 10602                           ; BSR set to: 1
 10603  0004BA  5116               	movf	sprintf@fval& (0+255),w,b
 10604  0004BC  1117               	iorwf	(sprintf@fval+1)& (0+255),w,b
 10605  0004BE  1118               	iorwf	(sprintf@fval+2)& (0+255),w,b
 10606  0004C0  B4D8               	btfsc	status,2,c
 10607  0004C2  D059               	goto	l2674
 10608                           
 10609                           ; BSR set to: 1
 10610  0004C4  C116  F0B0         	movff	sprintf@fval,___fttol@f1
 10611  0004C8  C117  F0B1         	movff	sprintf@fval+1,___fttol@f1+1
 10612  0004CC  C118  F0B2         	movff	sprintf@fval+2,___fttol@f1+2
 10613  0004D0  ECA8  F01C         	call	___fttol	;wreg free
 10614  0004D4  0100               	movlb	0	; () banked
 10615  0004D6  51B0               	movf	?___fttol& (0+255),w,b
 10616  0004D8  11B1               	iorwf	(?___fttol+1)& (0+255),w,b
 10617  0004DA  11B2               	iorwf	(?___fttol+2)& (0+255),w,b
 10618  0004DC  11B3               	iorwf	(?___fttol+3)& (0+255),w,b
 10619  0004DE  A4D8               	btfss	status,2,c
 10620  0004E0  D04A               	goto	l2674
 10621                           
 10622                           ; BSR set to: 0
 10623  0004E2  0101               	movlb	1	; () banked
 10624  0004E4  BF11               	btfsc	(sprintf@exp+1)& (0+255),7,b
 10625  0004E6  D047               	goto	l2674
 10626  0004E8  5111               	movf	(sprintf@exp+1)& (0+255),w,b
 10627  0004EA  E104               	bnz	l9072
 10628  0004EC  0E02               	movlw	2
 10629  0004EE  5D10               	subwf	sprintf@exp& (0+255),w,b
 10630  0004F0  A0D8               	btfss	status,0,c
 10631  0004F2  D041               	goto	l2674
 10632  0004F4                     u8190:
 10633  0004F4                     l9072:
 10634                           
 10635                           ; BSR set to: 1
 10636                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 10637  0004F4  C10C  F060         	movff	sprintf@tmpval,___ftge@ff1
 10638  0004F8  C10D  F061         	movff	sprintf@tmpval+1,___ftge@ff1+1
 10639  0004FC  C10E  F062         	movff	sprintf@tmpval+2,___ftge@ff1+2
 10640  000500  0E70               	movlw	112
 10641  000502  0100               	movlb	0	; () banked
 10642  000504  6F63               	movwf	___ftge@ff2& (0+255),b
 10643  000506  0E89               	movlw	137
 10644  000508  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
 10645  00050A  0E40               	movlw	64
 10646  00050C  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
 10647  00050E  EC06  F024         	call	___ftge	;wreg free
 10648  000512  0100               	movlb	0	; () banked
 10649  000514  B0D8               	btfsc	status,0,c
 10650  000516  D003               	goto	l2677
 10651                           
 10652                           ; BSR set to: 0
 10653                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 10654  000518  0101               	movlb	1	; () banked
 10655  00051A  0EF7               	movlw	247
 10656  00051C  D002               	goto	L11
 10657  00051E                     l2677:
 10658                           
 10659                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 10660                           
 10661                           ; BSR set to: 1
 10662  00051E  0101               	movlb	1	; () banked
 10663  000520  0EF8               	movlw	248
 10664  000522                     L11:
 10665  000522  2710               	addwf	sprintf@exp& (0+255),f,b
 10666  000524  0EFF               	movlw	255
 10667  000526  2311               	addwfc	(sprintf@exp+1)& (0+255),f,b
 10668                           
 10669                           ; BSR set to: 1
 10670                           ;doprnt.c: 1124: }
 10671                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
 10672                           
 10673                           ; BSR set to: 1
 10674  000528  5110               	movf	sprintf@exp& (0+255),w,b
 10675  00052A  ECD8  F00B         	call	_scale
 10676  00052E  C08F  F10C         	movff	?_scale,sprintf@tmpval
 10677  000532  C090  F10D         	movff	?_scale+1,sprintf@tmpval+1
 10678  000536  C091  F10E         	movff	?_scale+2,sprintf@tmpval+2
 10679                           
 10680                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 10681  00053A  C116  F060         	movff	sprintf@fval,__tdiv_to_l_@f1
 10682  00053E  C117  F061         	movff	sprintf@fval+1,__tdiv_to_l_@f1+1
 10683  000542  C118  F062         	movff	sprintf@fval+2,__tdiv_to_l_@f1+2
 10684  000546  C10C  F063         	movff	sprintf@tmpval,__tdiv_to_l_@f2
 10685  00054A  C10D  F064         	movff	sprintf@tmpval+1,__tdiv_to_l_@f2+1
 10686  00054E  C10E  F065         	movff	sprintf@tmpval+2,__tdiv_to_l_@f2+2
 10687  000552  EC9C  F016         	call	__tdiv_to_l_	;wreg free
 10688  000556  C060  F112         	movff	?__tdiv_to_l_,sprintf@val
 10689  00055A  C061  F113         	movff	?__tdiv_to_l_+1,sprintf@val+1
 10690  00055E  C062  F114         	movff	?__tdiv_to_l_+2,sprintf@val+2
 10691  000562  C063  F115         	movff	?__tdiv_to_l_+3,sprintf@val+3
 10692                           
 10693                           ;doprnt.c: 1129: fval = 0.0;
 10694  000566  0E00               	movlw	0
 10695  000568  0101               	movlb	1	; () banked
 10696  00056A  6F16               	movwf	sprintf@fval& (0+255),b
 10697  00056C  0E00               	movlw	0
 10698  00056E  6F17               	movwf	(sprintf@fval+1)& (0+255),b
 10699  000570  0E00               	movlw	0
 10700  000572  6F18               	movwf	(sprintf@fval+2)& (0+255),b
 10701                           
 10702                           ;doprnt.c: 1130: } else {
 10703  000574  D033               	goto	l2683
 10704  000576                     l2674:
 10705                           
 10706                           ;doprnt.c: 1131: val = (unsigned long)fval;
 10707                           
 10708                           ; BSR set to: 1
 10709  000576  C116  F0B0         	movff	sprintf@fval,___fttol@f1
 10710  00057A  C117  F0B1         	movff	sprintf@fval+1,___fttol@f1+1
 10711  00057E  C118  F0B2         	movff	sprintf@fval+2,___fttol@f1+2
 10712  000582  ECA8  F01C         	call	___fttol	;wreg free
 10713  000586  C0B0  F112         	movff	?___fttol,sprintf@val
 10714  00058A  C0B1  F113         	movff	?___fttol+1,sprintf@val+1
 10715  00058E  C0B2  F114         	movff	?___fttol+2,sprintf@val+2
 10716  000592  C0B3  F115         	movff	?___fttol+3,sprintf@val+3
 10717                           
 10718                           ;doprnt.c: 1132: fval -= (double)val;
 10719  000596  C116  F080         	movff	sprintf@fval,___ftsub@f1
 10720  00059A  C117  F081         	movff	sprintf@fval+1,___ftsub@f1+1
 10721  00059E  C118  F082         	movff	sprintf@fval+2,___ftsub@f1+2
 10722  0005A2  C112  F068         	movff	sprintf@val,___lltoft@c
 10723  0005A6  C113  F069         	movff	sprintf@val+1,___lltoft@c+1
 10724  0005AA  C114  F06A         	movff	sprintf@val+2,___lltoft@c+2
 10725  0005AE  C115  F06B         	movff	sprintf@val+3,___lltoft@c+3
 10726  0005B2  EC56  F027         	call	___lltoft	;wreg free
 10727  0005B6  C068  F083         	movff	?___lltoft,___ftsub@f2
 10728  0005BA  C069  F084         	movff	?___lltoft+1,___ftsub@f2+1
 10729  0005BE  C06A  F085         	movff	?___lltoft+2,___ftsub@f2+2
 10730  0005C2  EC2E  F029         	call	___ftsub	;wreg free
 10731  0005C6  C080  F116         	movff	?___ftsub,sprintf@fval
 10732  0005CA  C081  F117         	movff	?___ftsub+1,sprintf@fval+1
 10733  0005CE  C082  F118         	movff	?___ftsub+2,sprintf@fval+2
 10734                           
 10735                           ;doprnt.c: 1133: exp = 0;
 10736  0005D2  0E00               	movlw	0
 10737  0005D4  0101               	movlb	1	; () banked
 10738  0005D6  6F11               	movwf	(sprintf@exp+1)& (0+255),b
 10739  0005D8  0E00               	movlw	0
 10740  0005DA  6F10               	movwf	sprintf@exp& (0+255),b
 10741  0005DC                     l2683:
 10742                           
 10743                           ; BSR set to: 1
 10744                           ;doprnt.c: 1134: }
 10745                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 10746                           
 10747                           ; BSR set to: 1
 10748  0005DC  0E01               	movlw	1
 10749  0005DE  6F1F               	movwf	sprintf@c& (0+255),b
 10750  0005E0                     l9092:
 10751                           
 10752                           ; BSR set to: 1
 10753  0005E0  0E0A               	movlw	10
 10754  0005E2  191F               	xorwf	sprintf@c& (0+255),w,b
 10755  0005E4  B4D8               	btfsc	status,2,c
 10756  0005E6  D018               	goto	u8230
 10757                           
 10758                           ; BSR set to: 1
 10759                           ;doprnt.c: 1137: if(val < dpowers[c])
 10760                           
 10761                           ; BSR set to: 1
 10762                           
 10763                           ; BSR set to: 1
 10764  0005E8  511F               	movf	sprintf@c& (0+255),w,b
 10765  0005EA  0D04               	mullw	4
 10766  0005EC  0EFB               	movlw	low _dpowers
 10767  0005EE  24F3               	addwf	prodl,w,c
 10768  0005F0  6EF6               	movwf	tblptrl,c
 10769  0005F2  0E7B               	movlw	high _dpowers
 10770  0005F4  20F4               	addwfc	prodh,w,c
 10771  0005F6  6EF7               	movwf	tblptrh,c
 10772  0005F8                     	if	0	;There are less than 3 active tblptr bytes
 10773  0005F8                     	endif
 10774  0005F8  0009               	tblrd		*+
 10775  0005FA  50F5               	movf	tablat,w,c
 10776  0005FC  5D12               	subwf	sprintf@val& (0+255),w,b
 10777  0005FE  0009               	tblrd		*+
 10778  000600  50F5               	movf	tablat,w,c
 10779  000602  5913               	subwfb	(sprintf@val+1)& (0+255),w,b
 10780  000604  0009               	tblrd		*+
 10781  000606  50F5               	movf	tablat,w,c
 10782  000608  5914               	subwfb	(sprintf@val+2)& (0+255),w,b
 10783  00060A  0009               	tblrd		*+
 10784  00060C  50F5               	movf	tablat,w,c
 10785  00060E  5915               	subwfb	(sprintf@val+3)& (0+255),w,b
 10786  000610  A0D8               	btfss	status,0,c
 10787  000612  D002               	goto	u8230
 10788                           
 10789                           ; BSR set to: 1
 10790                           
 10791                           ; BSR set to: 1
 10792                           
 10793                           ; BSR set to: 1
 10794                           ;doprnt.c: 1138: break;
 10795  000614  2B1F               	incf	sprintf@c& (0+255),f,b
 10796  000616  D7E4               	goto	l9092
 10797  000618                     u8230:
 10798                           
 10799                           ; BSR set to: 1
 10800                           ;doprnt.c: 1142: width -= prec + c + exp;
 10801                           
 10802                           ; BSR set to: 1
 10803  000618  C11F  F0EB         	movff	sprintf@c,??_sprintf
 10804  00061C  0100               	movlb	0	; () banked
 10805  00061E  6BEC               	clrf	(??_sprintf+1)& (0+255),b
 10806  000620  BFEB               	btfsc	??_sprintf& (0+255),7,b
 10807  000622  07EC               	decf	(??_sprintf+1)& (0+255),f,b
 10808  000624  0101               	movlb	1	; () banked
 10809  000626  511D               	movf	sprintf@prec& (0+255),w,b
 10810  000628  0100               	movlb	0	; () banked
 10811  00062A  27EB               	addwf	??_sprintf& (0+255),f,b
 10812  00062C  0101               	movlb	1	; () banked
 10813  00062E  511E               	movf	(sprintf@prec+1)& (0+255),w,b
 10814  000630  0100               	movlb	0	; () banked
 10815  000632  23EC               	addwfc	(??_sprintf+1)& (0+255),f,b
 10816  000634  0101               	movlb	1	; () banked
 10817  000636  5110               	movf	sprintf@exp& (0+255),w,b
 10818  000638  0100               	movlb	0	; () banked
 10819  00063A  27EB               	addwf	??_sprintf& (0+255),f,b
 10820  00063C  0101               	movlb	1	; () banked
 10821  00063E  5111               	movf	(sprintf@exp+1)& (0+255),w,b
 10822  000640  0100               	movlb	0	; () banked
 10823  000642  23EC               	addwfc	(??_sprintf+1)& (0+255),f,b
 10824  000644  51EB               	movf	??_sprintf& (0+255),w,b
 10825  000646  0101               	movlb	1	; () banked
 10826  000648  5F19               	subwf	sprintf@width& (0+255),f,b
 10827  00064A  0100               	movlb	0	; () banked
 10828  00064C  51EC               	movf	(??_sprintf+1)& (0+255),w,b
 10829  00064E  0101               	movlb	1	; () banked
 10830  000650  5B1A               	subwfb	(sprintf@width+1)& (0+255),f,b
 10831                           
 10832                           ;doprnt.c: 1143: if(
 10833                           ;doprnt.c: 1147: prec)
 10834  000652  511D               	movf	sprintf@prec& (0+255),w,b
 10835  000654  111E               	iorwf	(sprintf@prec+1)& (0+255),w,b
 10836  000656  B4D8               	btfsc	status,2,c
 10837  000658  D003               	goto	l2687
 10838                           
 10839                           ; BSR set to: 1
 10840                           ;doprnt.c: 1148: width--;
 10841  00065A  0719               	decf	sprintf@width& (0+255),f,b
 10842  00065C  A0D8               	btfss	status,0,c
 10843  00065E  071A               	decf	(sprintf@width+1)& (0+255),f,b
 10844  000660                     l2687:
 10845                           
 10846                           ; BSR set to: 1
 10847                           ;doprnt.c: 1149: if(flag & 0x03)
 10848                           
 10849                           ; BSR set to: 1
 10850  000660  0E03               	movlw	3
 10851  000662  151B               	andwf	sprintf@flag& (0+255),w,b
 10852  000664  0100               	movlb	0	; () banked
 10853  000666  6FEB               	movwf	??_sprintf& (0+255),b
 10854  000668  0E00               	movlw	0
 10855  00066A  0101               	movlb	1	; () banked
 10856  00066C  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
 10857  00066E  0100               	movlb	0	; () banked
 10858  000670  6FEC               	movwf	(??_sprintf+1)& (0+255),b
 10859  000672  51EB               	movf	??_sprintf& (0+255),w,b
 10860  000674  11EC               	iorwf	(??_sprintf+1)& (0+255),w,b
 10861  000676  B4D8               	btfsc	status,2,c
 10862  000678  D004               	goto	l2688
 10863                           
 10864                           ; BSR set to: 0
 10865                           ;doprnt.c: 1150: width--;
 10866  00067A  0101               	movlb	1	; () banked
 10867  00067C  0719               	decf	sprintf@width& (0+255),f,b
 10868  00067E  A0D8               	btfss	status,0,c
 10869  000680  071A               	decf	(sprintf@width+1)& (0+255),f,b
 10870  000682                     l2688:
 10871                           
 10872                           ;doprnt.c: 1153: if(flag & 0x04) {
 10873                           
 10874                           ; BSR set to: 1
 10875  000682  0101               	movlb	1	; () banked
 10876  000684  A51B               	btfss	sprintf@flag& (0+255),2,b
 10877  000686  D039               	goto	l2695
 10878                           
 10879                           ; BSR set to: 1
 10880                           ;doprnt.c: 1157: if(flag & 0x03)
 10881  000688  0E03               	movlw	3
 10882  00068A  151B               	andwf	sprintf@flag& (0+255),w,b
 10883  00068C  0100               	movlb	0	; () banked
 10884  00068E  6FEB               	movwf	??_sprintf& (0+255),b
 10885  000690  0E00               	movlw	0
 10886  000692  0101               	movlb	1	; () banked
 10887  000694  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
 10888  000696  0100               	movlb	0	; () banked
 10889  000698  6FEC               	movwf	(??_sprintf+1)& (0+255),b
 10890  00069A  51EB               	movf	??_sprintf& (0+255),w,b
 10891  00069C  11EC               	iorwf	(??_sprintf+1)& (0+255),w,b
 10892  00069E  B4D8               	btfsc	status,2,c
 10893  0006A0  D016               	goto	l2691
 10894                           
 10895                           ; BSR set to: 0
 10896                           ;doprnt.c: 1159: ((*sp++ = ('-')));
 10897  0006A2  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 10898  0006A6  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 10899  0006AA  0E2D               	movlw	45
 10900  0006AC  6EDF               	movwf	indf2,c
 10901                           
 10902                           ; BSR set to: 0
 10903  0006AE  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 10904  0006B0  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 10905                           
 10906                           ; BSR set to: 0
 10907                           ;doprnt.c: 1168: while(width > 0) {
 10908  0006B2  D00D               	goto	l2691
 10909  0006B4                     l9120:
 10910                           
 10911                           ;doprnt.c: 1169: ((*sp++ = ('0')));
 10912  0006B4  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 10913  0006B8  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 10914  0006BC  0E30               	movlw	48
 10915  0006BE  6EDF               	movwf	indf2,c
 10916  0006C0  0100               	movlb	0	; () banked
 10917  0006C2  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 10918  0006C4  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 10919                           
 10920                           ; BSR set to: 0
 10921                           ;doprnt.c: 1170: width--;
 10922  0006C6  0101               	movlb	1	; () banked
 10923  0006C8  0719               	decf	sprintf@width& (0+255),f,b
 10924  0006CA  A0D8               	btfss	status,0,c
 10925  0006CC  071A               	decf	(sprintf@width+1)& (0+255),f,b
 10926  0006CE                     l2691:
 10927                           
 10928                           ; BSR set to: 1
 10929  0006CE  0101               	movlb	1	; () banked
 10930  0006D0  BF1A               	btfsc	(sprintf@width+1)& (0+255),7,b
 10931  0006D2  D07B               	goto	l2699
 10932  0006D4  511A               	movf	(sprintf@width+1)& (0+255),w,b
 10933  0006D6  E1EE               	bnz	l9120
 10934  0006D8  0519               	decf	sprintf@width& (0+255),w,b
 10935  0006DA  A0D8               	btfss	status,0,c
 10936  0006DC  D076               	goto	l2699
 10937  0006DE  D7EA               	goto	l2692
 10938  0006E0                     l9128:
 10939                           
 10940                           ; BSR set to: 1
 10941                           ;doprnt.c: 1181: ((*sp++ = (' ')));
 10942  0006E0  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 10943  0006E4  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 10944  0006E8  0E20               	movlw	32
 10945  0006EA  6EDF               	movwf	indf2,c
 10946                           
 10947                           ; BSR set to: 1
 10948  0006EC  0100               	movlb	0	; () banked
 10949  0006EE  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 10950  0006F0  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 10951                           
 10952                           ; BSR set to: 0
 10953                           ;doprnt.c: 1182: width--;
 10954  0006F2  0101               	movlb	1	; () banked
 10955  0006F4  0719               	decf	sprintf@width& (0+255),f,b
 10956  0006F6  A0D8               	btfss	status,0,c
 10957  0006F8  071A               	decf	(sprintf@width+1)& (0+255),f,b
 10958  0006FA                     l2695:
 10959                           
 10960                           ; BSR set to: 1
 10961                           
 10962                           ; BSR set to: 1
 10963  0006FA  BF1A               	btfsc	(sprintf@width+1)& (0+255),7,b
 10964  0006FC  D005               	goto	u8290
 10965  0006FE  511A               	movf	(sprintf@width+1)& (0+255),w,b
 10966  000700  E1EF               	bnz	l9128
 10967  000702  0519               	decf	sprintf@width& (0+255),w,b
 10968  000704  B0D8               	btfsc	status,0,c
 10969  000706  D7EC               	goto	l2696
 10970  000708                     u8290:
 10971                           
 10972                           ; BSR set to: 1
 10973                           ;doprnt.c: 1183: }
 10974                           ;doprnt.c: 1188: if(flag & 0x03)
 10975                           
 10976                           ; BSR set to: 1
 10977  000708  0E03               	movlw	3
 10978  00070A  151B               	andwf	sprintf@flag& (0+255),w,b
 10979  00070C  0100               	movlb	0	; () banked
 10980  00070E  6FEB               	movwf	??_sprintf& (0+255),b
 10981  000710  0E00               	movlw	0
 10982  000712  0101               	movlb	1	; () banked
 10983  000714  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
 10984  000716  0100               	movlb	0	; () banked
 10985  000718  6FEC               	movwf	(??_sprintf+1)& (0+255),b
 10986  00071A  51EB               	movf	??_sprintf& (0+255),w,b
 10987  00071C  11EC               	iorwf	(??_sprintf+1)& (0+255),w,b
 10988  00071E  B4D8               	btfsc	status,2,c
 10989  000720  D054               	goto	l2699
 10990                           
 10991                           ; BSR set to: 0
 10992                           ;doprnt.c: 1190: ((*sp++ = ('-')));
 10993  000722  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 10994  000726  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 10995  00072A  0E2D               	movlw	45
 10996  00072C  6EDF               	movwf	indf2,c
 10997  00072E  D04B               	goto	L12
 10998  000730                     
 10999                           ;doprnt.c: 1200: {
 11000                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 11001                           
 11002                           ; BSR set to: 0
 11003  000730  C112  F060         	movff	sprintf@val,___lldiv@dividend
 11004  000734  C113  F061         	movff	sprintf@val+1,___lldiv@dividend+1
 11005  000738  C114  F062         	movff	sprintf@val+2,___lldiv@dividend+2
 11006  00073C  C115  F063         	movff	sprintf@val+3,___lldiv@dividend+3
 11007  000740  0101               	movlb	1	; () banked
 11008  000742  511F               	movf	sprintf@c& (0+255),w,b
 11009  000744  0D04               	mullw	4
 11010  000746  0EFB               	movlw	low _dpowers
 11011  000748  24F3               	addwf	prodl,w,c
 11012  00074A  6EF6               	movwf	tblptrl,c
 11013  00074C  0E7B               	movlw	high _dpowers
 11014  00074E  20F4               	addwfc	prodh,w,c
 11015  000750  6EF7               	movwf	tblptrh,c
 11016  000752                     	if	0	;There are less than 3 active tblptr bytes
 11017  000752                     	endif
 11018  000752  0009               	tblrd		*+
 11019  000754  CFF5 F064          	movff	tablat,___lldiv@divisor
 11020  000758  0009               	tblrd		*+
 11021  00075A  CFF5 F065          	movff	tablat,___lldiv@divisor+1
 11022  00075E  0009               	tblrd		*+
 11023  000760  CFF5 F066          	movff	tablat,___lldiv@divisor+2
 11024  000764  000A               	tblrd		*-
 11025  000766  CFF5 F067          	movff	tablat,___lldiv@divisor+3
 11026  00076A  EC1E  F025         	call	___lldiv	;wreg free
 11027  00076E  C060  F10C         	movff	?___lldiv,sprintf@tmpval
 11028  000772  C061  F10D         	movff	?___lldiv+1,sprintf@tmpval+1
 11029  000776  C062  F10E         	movff	?___lldiv+2,sprintf@tmpval+2
 11030  00077A  C063  F10F         	movff	?___lldiv+3,sprintf@tmpval+3
 11031                           
 11032                           ;doprnt.c: 1202: tmpval.vd %= 10;
 11033  00077E  C10C  F06D         	movff	sprintf@tmpval,___llmod@dividend
 11034  000782  C10D  F06E         	movff	sprintf@tmpval+1,___llmod@dividend+1
 11035  000786  C10E  F06F         	movff	sprintf@tmpval+2,___llmod@dividend+2
 11036  00078A  C10F  F070         	movff	sprintf@tmpval+3,___llmod@dividend+3
 11037  00078E  0E0A               	movlw	10
 11038  000790  0100               	movlb	0	; () banked
 11039  000792  6F71               	movwf	___llmod@divisor& (0+255),b
 11040  000794  0E00               	movlw	0
 11041  000796  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 11042  000798  0E00               	movlw	0
 11043  00079A  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 11044  00079C  0E00               	movlw	0
 11045  00079E  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 11046  0007A0  ECBF  F026         	call	___llmod	;wreg free
 11047  0007A4  C06D  F10C         	movff	?___llmod,sprintf@tmpval
 11048  0007A8  C06E  F10D         	movff	?___llmod+1,sprintf@tmpval+1
 11049  0007AC  C06F  F10E         	movff	?___llmod+2,sprintf@tmpval+2
 11050  0007B0  C070  F10F         	movff	?___llmod+3,sprintf@tmpval+3
 11051                           
 11052                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
 11053  0007B4  0101               	movlb	1	; () banked
 11054  0007B6  510C               	movf	sprintf@tmpval& (0+255),w,b
 11055  0007B8  0F30               	addlw	48
 11056  0007BA  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 11057  0007BE  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 11058  0007C2  6EDF               	movwf	indf2,c
 11059                           
 11060                           ; BSR set to: 1
 11061  0007C4  0100               	movlb	0	; () banked
 11062  0007C6                     L12:
 11063  0007C6  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 11064  0007C8  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 11065  0007CA                     l2699:
 11066                           
 11067                           ; BSR set to: 0
 11068  0007CA  0101               	movlb	1	; () banked
 11069  0007CC  071F               	decf	sprintf@c& (0+255),f,b
 11070  0007CE  291F               	incf	sprintf@c& (0+255),w,b
 11071  0007D0  B4D8               	btfsc	status,2,c
 11072  0007D2  D00E               	goto	l2702
 11073  0007D4  D7AD               	goto	l2700
 11074  0007D6                     l9152:
 11075                           
 11076                           ; BSR set to: 1
 11077                           ;doprnt.c: 1208: ((*sp++ = ('0')));
 11078  0007D6  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 11079  0007DA  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 11080  0007DE  0E30               	movlw	48
 11081  0007E0  6EDF               	movwf	indf2,c
 11082                           
 11083                           ; BSR set to: 1
 11084  0007E2  0100               	movlb	0	; () banked
 11085  0007E4  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 11086  0007E6  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 11087                           
 11088                           ; BSR set to: 0
 11089                           ;doprnt.c: 1209: exp--;
 11090  0007E8  0101               	movlb	1	; () banked
 11091  0007EA  0710               	decf	sprintf@exp& (0+255),f,b
 11092  0007EC  A0D8               	btfss	status,0,c
 11093  0007EE  0711               	decf	(sprintf@exp+1)& (0+255),f,b
 11094  0007F0                     l2702:
 11095                           
 11096                           ; BSR set to: 1
 11097                           
 11098                           ; BSR set to: 1
 11099  0007F0  BF11               	btfsc	(sprintf@exp+1)& (0+255),7,b
 11100  0007F2  D005               	goto	u8320
 11101  0007F4  5111               	movf	(sprintf@exp+1)& (0+255),w,b
 11102  0007F6  E1EF               	bnz	l9152
 11103  0007F8  0510               	decf	sprintf@exp& (0+255),w,b
 11104  0007FA  B0D8               	btfsc	status,0,c
 11105  0007FC  D7EC               	goto	l2703
 11106  0007FE                     u8320:
 11107                           
 11108                           ; BSR set to: 1
 11109                           ;doprnt.c: 1210: }
 11110                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 11111                           
 11112                           ; BSR set to: 1
 11113  0007FE  BF1E               	btfsc	(sprintf@prec+1)& (0+255),7,b
 11114  000800  D009               	goto	l2705
 11115  000802  511E               	movf	(sprintf@prec+1)& (0+255),w,b
 11116  000804  E104               	bnz	u8330
 11117  000806  0E09               	movlw	9
 11118  000808  5D1D               	subwf	sprintf@prec& (0+255),w,b
 11119  00080A  A0D8               	btfss	status,0,c
 11120  00080C  D003               	goto	l2705
 11121  00080E                     u8330:
 11122                           
 11123                           ; BSR set to: 1
 11124                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 11125  00080E  0E08               	movlw	8
 11126  000810  6F1F               	movwf	sprintf@c& (0+255),b
 11127  000812  D002               	goto	l2706
 11128  000814                     l2705:
 11129                           
 11130                           ; BSR set to: 1
 11131                           ;doprnt.c: 1213: else
 11132                           ;doprnt.c: 1214: c = prec;
 11133  000814  C11D  F11F         	movff	sprintf@prec,sprintf@c
 11134  000818                     l2706:
 11135                           
 11136                           ; BSR set to: 1
 11137                           ;doprnt.c: 1215: prec -= c;
 11138                           
 11139                           ; BSR set to: 1
 11140  000818  511F               	movf	sprintf@c& (0+255),w,b
 11141  00081A  5F1D               	subwf	sprintf@prec& (0+255),f,b
 11142  00081C  0E00               	movlw	0
 11143  00081E  BF1F               	btfsc	sprintf@c& (0+255),7,b
 11144  000820  0EFF               	movlw	255
 11145  000822  5B1E               	subwfb	(sprintf@prec+1)& (0+255),f,b
 11146                           
 11147                           ; BSR set to: 1
 11148                           ;doprnt.c: 1219: if(c)
 11149  000824  511F               	movf	sprintf@c& (0+255),w,b
 11150  000826  B4D8               	btfsc	status,2,c
 11151  000828  D009               	goto	l2707
 11152                           
 11153                           ; BSR set to: 1
 11154                           ;doprnt.c: 1221: ((*sp++ = ('.')));
 11155  00082A  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 11156  00082E  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 11157  000832  0E2E               	movlw	46
 11158  000834  6EDF               	movwf	indf2,c
 11159                           
 11160                           ; BSR set to: 1
 11161  000836  0100               	movlb	0	; () banked
 11162  000838  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 11163  00083A  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 11164  00083C                     l2707:
 11165                           
 11166                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 11167                           
 11168                           ; BSR set to: 0
 11169  00083C  0101               	movlb	1	; () banked
 11170  00083E  511F               	movf	sprintf@c& (0+255),w,b
 11171  000840  ECD8  F00B         	call	_scale
 11172  000844  C08F  F100         	movff	?_scale,_sprintf$5893
 11173  000848  C090  F101         	movff	?_scale+1,_sprintf$5893+1
 11174  00084C  C091  F102         	movff	?_scale+2,_sprintf$5893+2
 11175                           
 11176                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 11177  000850  C116  F083         	movff	sprintf@fval,___ftmul@f2
 11178  000854  C117  F084         	movff	sprintf@fval+1,___ftmul@f2+1
 11179  000858  C118  F085         	movff	sprintf@fval+2,___ftmul@f2+2
 11180  00085C  C100  F080         	movff	_sprintf$5893,___ftmul@f1
 11181  000860  C101  F081         	movff	_sprintf$5893+1,___ftmul@f1+1
 11182  000864  C102  F082         	movff	_sprintf$5893+2,___ftmul@f1+2
 11183  000868  EC24  F01D         	call	___ftmul	;wreg free
 11184  00086C  C080  F0B0         	movff	?___ftmul,___fttol@f1
 11185  000870  C081  F0B1         	movff	?___ftmul+1,___fttol@f1+1
 11186  000874  C082  F0B2         	movff	?___ftmul+2,___fttol@f1+2
 11187  000878  ECA8  F01C         	call	___fttol	;wreg free
 11188  00087C  C0B0  F112         	movff	?___fttol,sprintf@val
 11189  000880  C0B1  F113         	movff	?___fttol+1,sprintf@val+1
 11190  000884  C0B2  F114         	movff	?___fttol+2,sprintf@val+2
 11191  000888  C0B3  F115         	movff	?___fttol+3,sprintf@val+3
 11192                           
 11193                           ;doprnt.c: 1228: while(c--) {
 11194  00088C  D074               	goto	l2708
 11195  00088E                     
 11196                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 11197  00088E  C112  F060         	movff	sprintf@val,___lldiv@dividend
 11198  000892  C113  F061         	movff	sprintf@val+1,___lldiv@dividend+1
 11199  000896  C114  F062         	movff	sprintf@val+2,___lldiv@dividend+2
 11200  00089A  C115  F063         	movff	sprintf@val+3,___lldiv@dividend+3
 11201  00089E  0101               	movlb	1	; () banked
 11202  0008A0  511F               	movf	sprintf@c& (0+255),w,b
 11203  0008A2  0D04               	mullw	4
 11204  0008A4  0EFB               	movlw	low _dpowers
 11205  0008A6  24F3               	addwf	prodl,w,c
 11206  0008A8  6EF6               	movwf	tblptrl,c
 11207  0008AA  0E7B               	movlw	high _dpowers
 11208  0008AC  20F4               	addwfc	prodh,w,c
 11209  0008AE  6EF7               	movwf	tblptrh,c
 11210  0008B0                     	if	0	;There are less than 3 active tblptr bytes
 11211  0008B0                     	endif
 11212  0008B0  0009               	tblrd		*+
 11213  0008B2  CFF5 F064          	movff	tablat,___lldiv@divisor
 11214  0008B6  0009               	tblrd		*+
 11215  0008B8  CFF5 F065          	movff	tablat,___lldiv@divisor+1
 11216  0008BC  0009               	tblrd		*+
 11217  0008BE  CFF5 F066          	movff	tablat,___lldiv@divisor+2
 11218  0008C2  000A               	tblrd		*-
 11219  0008C4  CFF5 F067          	movff	tablat,___lldiv@divisor+3
 11220  0008C8  EC1E  F025         	call	___lldiv	;wreg free
 11221  0008CC  C060  F10C         	movff	?___lldiv,sprintf@tmpval
 11222  0008D0  C061  F10D         	movff	?___lldiv+1,sprintf@tmpval+1
 11223  0008D4  C062  F10E         	movff	?___lldiv+2,sprintf@tmpval+2
 11224  0008D8  C063  F10F         	movff	?___lldiv+3,sprintf@tmpval+3
 11225                           
 11226                           ;doprnt.c: 1230: tmpval.vd %= 10;
 11227  0008DC  C10C  F06D         	movff	sprintf@tmpval,___llmod@dividend
 11228  0008E0  C10D  F06E         	movff	sprintf@tmpval+1,___llmod@dividend+1
 11229  0008E4  C10E  F06F         	movff	sprintf@tmpval+2,___llmod@dividend+2
 11230  0008E8  C10F  F070         	movff	sprintf@tmpval+3,___llmod@dividend+3
 11231  0008EC  0E0A               	movlw	10
 11232  0008EE  0100               	movlb	0	; () banked
 11233  0008F0  6F71               	movwf	___llmod@divisor& (0+255),b
 11234  0008F2  0E00               	movlw	0
 11235  0008F4  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 11236  0008F6  0E00               	movlw	0
 11237  0008F8  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 11238  0008FA  0E00               	movlw	0
 11239  0008FC  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 11240  0008FE  ECBF  F026         	call	___llmod	;wreg free
 11241  000902  C06D  F10C         	movff	?___llmod,sprintf@tmpval
 11242  000906  C06E  F10D         	movff	?___llmod+1,sprintf@tmpval+1
 11243  00090A  C06F  F10E         	movff	?___llmod+2,sprintf@tmpval+2
 11244  00090E  C070  F10F         	movff	?___llmod+3,sprintf@tmpval+3
 11245                           
 11246                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
 11247  000912  0101               	movlb	1	; () banked
 11248  000914  510C               	movf	sprintf@tmpval& (0+255),w,b
 11249  000916  0F30               	addlw	48
 11250  000918  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 11251  00091C  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 11252  000920  6EDF               	movwf	indf2,c
 11253                           
 11254                           ; BSR set to: 1
 11255  000922  0100               	movlb	0	; () banked
 11256  000924  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 11257  000926  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 11258                           
 11259                           ; BSR set to: 0
 11260                           ;doprnt.c: 1232: val %= dpowers[c];
 11261  000928  C112  F06D         	movff	sprintf@val,___llmod@dividend
 11262  00092C  C113  F06E         	movff	sprintf@val+1,___llmod@dividend+1
 11263  000930  C114  F06F         	movff	sprintf@val+2,___llmod@dividend+2
 11264  000934  C115  F070         	movff	sprintf@val+3,___llmod@dividend+3
 11265  000938  0101               	movlb	1	; () banked
 11266  00093A  511F               	movf	sprintf@c& (0+255),w,b
 11267  00093C  0D04               	mullw	4
 11268  00093E  0EFB               	movlw	low _dpowers
 11269  000940  24F3               	addwf	prodl,w,c
 11270  000942  6EF6               	movwf	tblptrl,c
 11271  000944  0E7B               	movlw	high _dpowers
 11272  000946  20F4               	addwfc	prodh,w,c
 11273  000948  6EF7               	movwf	tblptrh,c
 11274  00094A                     	if	0	;There are less than 3 active tblptr bytes
 11275  00094A                     	endif
 11276  00094A  0009               	tblrd		*+
 11277  00094C  CFF5 F071          	movff	tablat,___llmod@divisor
 11278  000950  0009               	tblrd		*+
 11279  000952  CFF5 F072          	movff	tablat,___llmod@divisor+1
 11280  000956  0009               	tblrd		*+
 11281  000958  CFF5 F073          	movff	tablat,___llmod@divisor+2
 11282  00095C  000A               	tblrd		*-
 11283  00095E  CFF5 F074          	movff	tablat,___llmod@divisor+3
 11284  000962  ECBF  F026         	call	___llmod	;wreg free
 11285  000966  C06D  F112         	movff	?___llmod,sprintf@val
 11286  00096A  C06E  F113         	movff	?___llmod+1,sprintf@val+1
 11287  00096E  C06F  F114         	movff	?___llmod+2,sprintf@val+2
 11288  000972  C070  F115         	movff	?___llmod+3,sprintf@val+3
 11289  000976                     l2708:
 11290  000976  0101               	movlb	1	; () banked
 11291  000978  071F               	decf	sprintf@c& (0+255),f,b
 11292  00097A  291F               	incf	sprintf@c& (0+255),w,b
 11293  00097C  B4D8               	btfsc	status,2,c
 11294  00097E  D00E               	goto	l2711
 11295  000980  D786               	goto	l2709
 11296  000982                     
 11297                           ; BSR set to: 1
 11298                           ;doprnt.c: 1236: ((*sp++ = ('0')));
 11299                           
 11300                           ; BSR set to: 1
 11301  000982  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 11302  000986  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 11303  00098A  0E30               	movlw	48
 11304  00098C  6EDF               	movwf	indf2,c
 11305                           
 11306                           ; BSR set to: 1
 11307  00098E  0100               	movlb	0	; () banked
 11308  000990  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 11309  000992  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 11310                           
 11311                           ; BSR set to: 0
 11312                           ;doprnt.c: 1237: prec--;
 11313  000994  0101               	movlb	1	; () banked
 11314  000996  071D               	decf	sprintf@prec& (0+255),f,b
 11315  000998  A0D8               	btfss	status,0,c
 11316  00099A  071E               	decf	(sprintf@prec+1)& (0+255),f,b
 11317  00099C                     l2711:
 11318                           
 11319                           ; BSR set to: 1
 11320                           
 11321                           ; BSR set to: 1
 11322  00099C  511D               	movf	sprintf@prec& (0+255),w,b
 11323  00099E  111E               	iorwf	(sprintf@prec+1)& (0+255),w,b
 11324  0009A0  B4D8               	btfsc	status,2,c
 11325  0009A2  D220               	goto	u8640
 11326  0009A4  D7EE               	goto	l2712
 11327  0009A6                     l2665:
 11328                           
 11329                           ; BSR set to: 1
 11330                           ;doprnt.c: 1246: }
 11331                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 11332                           
 11333                           ; BSR set to: 1
 11334  0009A6  0EC0               	movlw	192
 11335  0009A8  151B               	andwf	sprintf@flag& (0+255),w,b
 11336  0009AA  0100               	movlb	0	; () banked
 11337  0009AC  6FEB               	movwf	??_sprintf& (0+255),b
 11338  0009AE  0E00               	movlw	0
 11339  0009B0  0101               	movlb	1	; () banked
 11340  0009B2  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
 11341  0009B4  0100               	movlb	0	; () banked
 11342  0009B6  6FEC               	movwf	(??_sprintf+1)& (0+255),b
 11343  0009B8  51EB               	movf	??_sprintf& (0+255),w,b
 11344  0009BA  11EC               	iorwf	(??_sprintf+1)& (0+255),w,b
 11345  0009BC  A4D8               	btfss	status,2,c
 11346  0009BE  D02F               	goto	l2714
 11347                           
 11348                           ; BSR set to: 0
 11349                           ;doprnt.c: 1253: {
 11350                           ;doprnt.c: 1255: if(flag & 0x10)
 11351  0009C0  0101               	movlb	1	; () banked
 11352  0009C2  A91B               	btfss	sprintf@flag& (0+255),4,b
 11353  0009C4  D00E               	goto	l2715
 11354                           
 11355                           ; BSR set to: 1
 11356                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 11357  0009C6  C10A  FFD9         	movff	sprintf@ap,fsr2l
 11358  0009CA  C10B  FFDA         	movff	sprintf@ap+1,fsr2h
 11359  0009CE  CFDE F112          	movff	postinc2,sprintf@val
 11360  0009D2  CFDE F113          	movff	postinc2,sprintf@val+1
 11361  0009D6  CFDE F114          	movff	postinc2,sprintf@val+2
 11362  0009DA  CFDE F115          	movff	postinc2,sprintf@val+3
 11363                           
 11364                           ; BSR set to: 1
 11365  0009DE  0E04               	movlw	4
 11366  0009E0  D00E               	goto	L13
 11367  0009E2                     l2715:
 11368                           
 11369                           ; BSR set to: 1
 11370                           ;doprnt.c: 1257: else
 11371                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 11372                           
 11373                           ; BSR set to: 1
 11374  0009E2  C10A  FFD9         	movff	sprintf@ap,fsr2l
 11375  0009E6  C10B  FFDA         	movff	sprintf@ap+1,fsr2h
 11376  0009EA  CFDE F112          	movff	postinc2,sprintf@val
 11377  0009EE  CFDD F113          	movff	postdec2,sprintf@val+1
 11378  0009F2  0E00               	movlw	0
 11379  0009F4  BF13               	btfsc	(sprintf@val+1)& (0+255),7,b
 11380  0009F6  0EFF               	movlw	-1
 11381  0009F8  6F14               	movwf	(sprintf@val+2)& (0+255),b
 11382  0009FA  6F15               	movwf	(sprintf@val+3)& (0+255),b
 11383                           
 11384                           ; BSR set to: 1
 11385  0009FC  0E02               	movlw	2
 11386  0009FE                     L13:
 11387  0009FE  270A               	addwf	sprintf@ap& (0+255),f,b
 11388  000A00  0E00               	movlw	0
 11389  000A02  230B               	addwfc	(sprintf@ap+1)& (0+255),f,b
 11390                           
 11391                           ; BSR set to: 1
 11392                           ;doprnt.c: 1261: if((long)val < 0) {
 11393                           
 11394                           ; BSR set to: 1
 11395  000A04  AF15               	btfss	(sprintf@val+3)& (0+255),7,b
 11396  000A06  D02E               	goto	l2720
 11397                           
 11398                           ; BSR set to: 1
 11399                           ;doprnt.c: 1262: flag |= 0x03;
 11400  000A08  0E03               	movlw	3
 11401  000A0A  131B               	iorwf	sprintf@flag& (0+255),f,b
 11402                           
 11403                           ; BSR set to: 1
 11404                           ;doprnt.c: 1263: val = -val;
 11405  000A0C  1F15               	comf	(sprintf@val+3)& (0+255),f,b
 11406  000A0E  1F14               	comf	(sprintf@val+2)& (0+255),f,b
 11407  000A10  1F13               	comf	(sprintf@val+1)& (0+255),f,b
 11408  000A12  6D12               	negf	sprintf@val& (0+255),b
 11409  000A14  0E00               	movlw	0
 11410  000A16  2313               	addwfc	(sprintf@val+1)& (0+255),f,b
 11411  000A18  2314               	addwfc	(sprintf@val+2)& (0+255),f,b
 11412  000A1A  2315               	addwfc	(sprintf@val+3)& (0+255),f,b
 11413                           
 11414                           ; BSR set to: 1
 11415                           ;doprnt.c: 1264: }
 11416                           ;doprnt.c: 1266: }
 11417  000A1C  D023               	goto	l2720
 11418  000A1E                     l2714:
 11419                           
 11420                           ; BSR set to: 0
 11421                           ;doprnt.c: 1268: else
 11422                           ;doprnt.c: 1273: {
 11423                           ;doprnt.c: 1281: if(flag & 0x10)
 11424  000A1E  0101               	movlb	1	; () banked
 11425  000A20  A91B               	btfss	sprintf@flag& (0+255),4,b
 11426  000A22  D00E               	goto	l2719
 11427                           
 11428                           ; BSR set to: 1
 11429                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
 11430  000A24  C10A  FFD9         	movff	sprintf@ap,fsr2l
 11431  000A28  C10B  FFDA         	movff	sprintf@ap+1,fsr2h
 11432  000A2C  CFDE F112          	movff	postinc2,sprintf@val
 11433  000A30  CFDE F113          	movff	postinc2,sprintf@val+1
 11434  000A34  CFDE F114          	movff	postinc2,sprintf@val+2
 11435  000A38  CFDE F115          	movff	postinc2,sprintf@val+3
 11436                           
 11437                           ; BSR set to: 1
 11438  000A3C  0E04               	movlw	4
 11439  000A3E  D00F               	goto	L14
 11440  000A40                     l2719:
 11441                           
 11442                           ; BSR set to: 1
 11443                           ;doprnt.c: 1283: else
 11444                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 11445                           
 11446                           ; BSR set to: 1
 11447  000A40  C10A  FFD9         	movff	sprintf@ap,fsr2l
 11448  000A44  C10B  FFDA         	movff	sprintf@ap+1,fsr2h
 11449  000A48  CFDE F0EB          	movff	postinc2,??_sprintf
 11450  000A4C  CFDD F0EC          	movff	postdec2,??_sprintf+1
 11451  000A50  C0EB  F112         	movff	??_sprintf,sprintf@val
 11452  000A54  C0EC  F113         	movff	??_sprintf+1,sprintf@val+1
 11453  000A58  6B14               	clrf	(sprintf@val+2)& (0+255),b
 11454  000A5A  6B15               	clrf	(sprintf@val+3)& (0+255),b
 11455                           
 11456                           ; BSR set to: 1
 11457  000A5C  0E02               	movlw	2
 11458  000A5E                     L14:
 11459  000A5E  270A               	addwf	sprintf@ap& (0+255),f,b
 11460  000A60  0E00               	movlw	0
 11461  000A62  230B               	addwfc	(sprintf@ap+1)& (0+255),f,b
 11462  000A64                     l2720:
 11463                           
 11464                           ; BSR set to: 1
 11465                           ;doprnt.c: 1287: }
 11466                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 11467                           
 11468                           ; BSR set to: 1
 11469                           
 11470                           ; BSR set to: 1
 11471  000A64  511D               	movf	sprintf@prec& (0+255),w,b
 11472  000A66  111E               	iorwf	(sprintf@prec+1)& (0+255),w,b
 11473  000A68  A4D8               	btfss	status,2,c
 11474  000A6A  D045               	goto	l2722
 11475                           
 11476                           ; BSR set to: 1
 11477  000A6C  5112               	movf	sprintf@val& (0+255),w,b
 11478  000A6E  1113               	iorwf	(sprintf@val+1)& (0+255),w,b
 11479  000A70  1114               	iorwf	(sprintf@val+2)& (0+255),w,b
 11480  000A72  1115               	iorwf	(sprintf@val+3)& (0+255),w,b
 11481  000A74  A4D8               	btfss	status,2,c
 11482  000A76  D03F               	goto	l2722
 11483                           
 11484                           ; BSR set to: 1
 11485                           ;doprnt.c: 1291: prec++;
 11486  000A78  4B1D               	infsnz	sprintf@prec& (0+255),f,b
 11487  000A7A  2B1E               	incf	(sprintf@prec+1)& (0+255),f,b
 11488                           
 11489                           ; BSR set to: 1
 11490                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 11491  000A7C  D03C               	goto	l2722
 11492  000A7E                     
 11493                           ; BSR set to: 1
 11494                           ;doprnt.c: 1302: case 0xC0:
 11495                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 11496                           
 11497                           ; BSR set to: 1
 11498                           
 11499                           ; BSR set to: 1
 11500  000A7E  0E01               	movlw	1
 11501  000A80  6F1F               	movwf	sprintf@c& (0+255),b
 11502  000A82                     l9230:
 11503                           
 11504                           ; BSR set to: 1
 11505  000A82  0E0A               	movlw	10
 11506  000A84  191F               	xorwf	sprintf@c& (0+255),w,b
 11507  000A86  B4D8               	btfsc	status,2,c
 11508  000A88  D041               	goto	l2728
 11509                           
 11510                           ; BSR set to: 1
 11511                           ;doprnt.c: 1306: if(val < dpowers[c])
 11512                           
 11513                           ; BSR set to: 1
 11514                           
 11515                           ; BSR set to: 1
 11516  000A8A  511F               	movf	sprintf@c& (0+255),w,b
 11517  000A8C  0D04               	mullw	4
 11518  000A8E  0EFB               	movlw	low _dpowers
 11519  000A90  24F3               	addwf	prodl,w,c
 11520  000A92  6EF6               	movwf	tblptrl,c
 11521  000A94  0E7B               	movlw	high _dpowers
 11522  000A96  20F4               	addwfc	prodh,w,c
 11523  000A98  6EF7               	movwf	tblptrh,c
 11524  000A9A                     	if	0	;There are less than 3 active tblptr bytes
 11525  000A9A                     	endif
 11526  000A9A  0009               	tblrd		*+
 11527  000A9C  50F5               	movf	tablat,w,c
 11528  000A9E  5D12               	subwf	sprintf@val& (0+255),w,b
 11529  000AA0  0009               	tblrd		*+
 11530  000AA2  50F5               	movf	tablat,w,c
 11531  000AA4  5913               	subwfb	(sprintf@val+1)& (0+255),w,b
 11532  000AA6  0009               	tblrd		*+
 11533  000AA8  50F5               	movf	tablat,w,c
 11534  000AAA  5914               	subwfb	(sprintf@val+2)& (0+255),w,b
 11535  000AAC  0009               	tblrd		*+
 11536  000AAE  50F5               	movf	tablat,w,c
 11537  000AB0  5915               	subwfb	(sprintf@val+3)& (0+255),w,b
 11538  000AB2  A0D8               	btfss	status,0,c
 11539  000AB4  D02B               	goto	l2728
 11540                           
 11541                           ; BSR set to: 1
 11542                           
 11543                           ; BSR set to: 1
 11544                           
 11545                           ; BSR set to: 1
 11546                           ;doprnt.c: 1307: break;
 11547  000AB6  2B1F               	incf	sprintf@c& (0+255),f,b
 11548  000AB8  D7E4               	goto	l9230
 11549  000ABA                     
 11550                           ; BSR set to: 1
 11551                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 11552                           
 11553                           ; BSR set to: 1
 11554  000ABA  0E01               	movlw	1
 11555  000ABC  6F1F               	movwf	sprintf@c& (0+255),b
 11556  000ABE                     l9244:
 11557                           
 11558                           ; BSR set to: 1
 11559  000ABE  0E08               	movlw	8
 11560  000AC0  191F               	xorwf	sprintf@c& (0+255),w,b
 11561  000AC2  B4D8               	btfsc	status,2,c
 11562  000AC4  D023               	goto	l2728
 11563                           
 11564                           ; BSR set to: 1
 11565                           ;doprnt.c: 1317: if(val < hexpowers[c])
 11566                           
 11567                           ; BSR set to: 1
 11568                           
 11569                           ; BSR set to: 1
 11570  000AC6  511F               	movf	sprintf@c& (0+255),w,b
 11571  000AC8  0D04               	mullw	4
 11572  000ACA  0E71               	movlw	low _hexpowers
 11573  000ACC  24F3               	addwf	prodl,w,c
 11574  000ACE  6EF6               	movwf	tblptrl,c
 11575  000AD0  0E7C               	movlw	high _hexpowers
 11576  000AD2  20F4               	addwfc	prodh,w,c
 11577  000AD4  6EF7               	movwf	tblptrh,c
 11578  000AD6                     	if	0	;There are less than 3 active tblptr bytes
 11579  000AD6                     	endif
 11580  000AD6  0009               	tblrd		*+
 11581  000AD8  50F5               	movf	tablat,w,c
 11582  000ADA  5D12               	subwf	sprintf@val& (0+255),w,b
 11583  000ADC  0009               	tblrd		*+
 11584  000ADE  50F5               	movf	tablat,w,c
 11585  000AE0  5913               	subwfb	(sprintf@val+1)& (0+255),w,b
 11586  000AE2  0009               	tblrd		*+
 11587  000AE4  50F5               	movf	tablat,w,c
 11588  000AE6  5914               	subwfb	(sprintf@val+2)& (0+255),w,b
 11589  000AE8  0009               	tblrd		*+
 11590  000AEA  50F5               	movf	tablat,w,c
 11591  000AEC  5915               	subwfb	(sprintf@val+3)& (0+255),w,b
 11592  000AEE  A0D8               	btfss	status,0,c
 11593  000AF0  D00D               	goto	l2728
 11594                           
 11595                           ; BSR set to: 1
 11596                           
 11597                           ; BSR set to: 1
 11598                           
 11599                           ; BSR set to: 1
 11600                           ;doprnt.c: 1318: break;
 11601  000AF2  2B1F               	incf	sprintf@c& (0+255),f,b
 11602  000AF4  D7E4               	goto	l9244
 11603  000AF6                     l2722:
 11604                           
 11605                           ; BSR set to: 1
 11606                           
 11607                           ; BSR set to: 1
 11608  000AF6  511B               	movf	sprintf@flag& (0+255),w,b
 11609  000AF8  0BC0               	andlw	192
 11610                           
 11611                           ; Switch size 1, requested type "space"
 11612                           ; Number of cases is 3, Range of values is 0 to 192
 11613                           ; switch strategies available:
 11614                           ; Name         Instructions Cycles
 11615                           ; simple_byte           10     6 (average)
 11616                           ;	Chosen strategy is simple_byte
 11617  000AFA  0A00               	xorlw	0	; case 0
 11618  000AFC  B4D8               	btfsc	status,2,c
 11619  000AFE  D7BF               	goto	l2723
 11620  000B00  0A80               	xorlw	128	; case 128
 11621  000B02  B4D8               	btfsc	status,2,c
 11622  000B04  D7DA               	goto	l2729
 11623  000B06  0A40               	xorlw	64	; case 192
 11624  000B08  B4D8               	btfsc	status,2,c
 11625  000B0A  D7B9               	goto	l2723
 11626  000B0C                     l2728:
 11627                           
 11628                           ; BSR set to: 1
 11629                           ;doprnt.c: 1339: if(c < prec)
 11630                           
 11631                           ; BSR set to: 1
 11632  000B0C  0E80               	movlw	128
 11633  000B0E  BF1F               	btfsc	sprintf@c& (0+255),7,b
 11634  000B10  0E7F               	movlw	127
 11635  000B12  0100               	movlb	0	; () banked
 11636  000B14  6FEB               	movwf	??_sprintf& (0+255),b
 11637  000B16  0101               	movlb	1	; () banked
 11638  000B18  511D               	movf	sprintf@prec& (0+255),w,b
 11639  000B1A  5D1F               	subwf	sprintf@c& (0+255),w,b
 11640  000B1C  511E               	movf	(sprintf@prec+1)& (0+255),w,b
 11641  000B1E  0A80               	xorlw	128
 11642  000B20  0100               	movlb	0	; () banked
 11643  000B22  59EB               	subwfb	??_sprintf& (0+255),w,b
 11644  000B24  B0D8               	btfsc	status,0,c
 11645  000B26  D003               	goto	l2733
 11646                           
 11647                           ; BSR set to: 0
 11648                           ;doprnt.c: 1340: c = prec;
 11649  000B28  C11D  F11F         	movff	sprintf@prec,sprintf@c
 11650  000B2C  D015               	goto	l2735
 11651  000B2E                     l2733:
 11652                           
 11653                           ; BSR set to: 0
 11654                           ;doprnt.c: 1341: else if(prec < c)
 11655                           
 11656                           ; BSR set to: 0
 11657  000B2E  0101               	movlb	1	; () banked
 11658  000B30  511E               	movf	(sprintf@prec+1)& (0+255),w,b
 11659  000B32  0A80               	xorlw	128
 11660  000B34  0100               	movlb	0	; () banked
 11661  000B36  6FEB               	movwf	??_sprintf& (0+255),b
 11662  000B38  0101               	movlb	1	; () banked
 11663  000B3A  511F               	movf	sprintf@c& (0+255),w,b
 11664  000B3C  5D1D               	subwf	sprintf@prec& (0+255),w,b
 11665  000B3E  0E80               	movlw	128
 11666  000B40  BF1F               	btfsc	sprintf@c& (0+255),7,b
 11667  000B42  0E7F               	movlw	127
 11668  000B44  0100               	movlb	0	; () banked
 11669  000B46  59EB               	subwfb	??_sprintf& (0+255),w,b
 11670  000B48  B0D8               	btfsc	status,0,c
 11671  000B4A  D006               	goto	l2735
 11672                           
 11673                           ; BSR set to: 0
 11674                           ;doprnt.c: 1342: prec = c;
 11675  000B4C  0101               	movlb	1	; () banked
 11676  000B4E  511F               	movf	sprintf@c& (0+255),w,b
 11677  000B50  6F1D               	movwf	sprintf@prec& (0+255),b
 11678  000B52  6B1E               	clrf	(sprintf@prec+1)& (0+255),b
 11679  000B54  BF1D               	btfsc	sprintf@prec& (0+255),7,b
 11680  000B56  071E               	decf	(sprintf@prec+1)& (0+255),f,b
 11681  000B58                     l2735:
 11682                           
 11683                           ;doprnt.c: 1345: if(width && flag & 0x03)
 11684                           
 11685                           ; BSR set to: 1
 11686                           
 11687                           ; BSR set to: 1
 11688  000B58  0101               	movlb	1	; () banked
 11689  000B5A  5119               	movf	sprintf@width& (0+255),w,b
 11690  000B5C  111A               	iorwf	(sprintf@width+1)& (0+255),w,b
 11691  000B5E  B4D8               	btfsc	status,2,c
 11692  000B60  D011               	goto	l2736
 11693                           
 11694                           ; BSR set to: 1
 11695  000B62  0E03               	movlw	3
 11696  000B64  151B               	andwf	sprintf@flag& (0+255),w,b
 11697  000B66  0100               	movlb	0	; () banked
 11698  000B68  6FEB               	movwf	??_sprintf& (0+255),b
 11699  000B6A  0E00               	movlw	0
 11700  000B6C  0101               	movlb	1	; () banked
 11701  000B6E  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
 11702  000B70  0100               	movlb	0	; () banked
 11703  000B72  6FEC               	movwf	(??_sprintf+1)& (0+255),b
 11704  000B74  51EB               	movf	??_sprintf& (0+255),w,b
 11705  000B76  11EC               	iorwf	(??_sprintf+1)& (0+255),w,b
 11706  000B78  B4D8               	btfsc	status,2,c
 11707  000B7A  D004               	goto	l2736
 11708                           
 11709                           ; BSR set to: 0
 11710                           ;doprnt.c: 1346: width--;
 11711  000B7C  0101               	movlb	1	; () banked
 11712  000B7E  0719               	decf	sprintf@width& (0+255),f,b
 11713  000B80  A0D8               	btfss	status,0,c
 11714  000B82  071A               	decf	(sprintf@width+1)& (0+255),f,b
 11715  000B84                     l2736:
 11716                           
 11717                           ;doprnt.c: 1348: if(flag & 0x4000) {
 11718                           
 11719                           ; BSR set to: 1
 11720  000B84  0101               	movlb	1	; () banked
 11721  000B86  AD1C               	btfss	(sprintf@flag+1)& (0+255),6,b
 11722  000B88  D018               	goto	l2739
 11723                           
 11724                           ; BSR set to: 1
 11725                           ;doprnt.c: 1349: if(width > prec)
 11726  000B8A  5119               	movf	sprintf@width& (0+255),w,b
 11727  000B8C  5D1D               	subwf	sprintf@prec& (0+255),w,b
 11728  000B8E  511E               	movf	(sprintf@prec+1)& (0+255),w,b
 11729  000B90  0A80               	xorlw	128
 11730  000B92  0100               	movlb	0	; () banked
 11731  000B94  6FEB               	movwf	??_sprintf& (0+255),b
 11732  000B96  0101               	movlb	1	; () banked
 11733  000B98  511A               	movf	(sprintf@width+1)& (0+255),w,b
 11734  000B9A  0A80               	xorlw	128
 11735  000B9C  0100               	movlb	0	; () banked
 11736  000B9E  59EB               	subwfb	??_sprintf& (0+255),w,b
 11737  000BA0  B0D8               	btfsc	status,0,c
 11738  000BA2  D006               	goto	l2738
 11739                           
 11740                           ; BSR set to: 0
 11741                           ;doprnt.c: 1350: width -= prec;
 11742  000BA4  0101               	movlb	1	; () banked
 11743  000BA6  511D               	movf	sprintf@prec& (0+255),w,b
 11744  000BA8  5F19               	subwf	sprintf@width& (0+255),f,b
 11745  000BAA  511E               	movf	(sprintf@prec+1)& (0+255),w,b
 11746  000BAC  5B1A               	subwfb	(sprintf@width+1)& (0+255),f,b
 11747  000BAE  D005               	goto	l2739
 11748  000BB0                     l2738:
 11749                           
 11750                           ;doprnt.c: 1351: else
 11751                           ;doprnt.c: 1352: width = 0;
 11752                           
 11753                           ; BSR set to: 1
 11754  000BB0  0E00               	movlw	0
 11755  000BB2  0101               	movlb	1	; () banked
 11756  000BB4  6F1A               	movwf	(sprintf@width+1)& (0+255),b
 11757  000BB6  0E00               	movlw	0
 11758  000BB8  6F19               	movwf	sprintf@width& (0+255),b
 11759  000BBA                     l2739:
 11760                           
 11761                           ; BSR set to: 1
 11762                           ;doprnt.c: 1353: }
 11763                           ;doprnt.c: 1381: if(width > c)
 11764                           
 11765                           ; BSR set to: 1
 11766                           
 11767                           ; BSR set to: 1
 11768  000BBA  0E80               	movlw	128
 11769  000BBC  BF1F               	btfsc	sprintf@c& (0+255),7,b
 11770  000BBE  0E7F               	movlw	127
 11771  000BC0  0100               	movlb	0	; () banked
 11772  000BC2  6FEB               	movwf	??_sprintf& (0+255),b
 11773  000BC4  0101               	movlb	1	; () banked
 11774  000BC6  5119               	movf	sprintf@width& (0+255),w,b
 11775  000BC8  5D1F               	subwf	sprintf@c& (0+255),w,b
 11776  000BCA  511A               	movf	(sprintf@width+1)& (0+255),w,b
 11777  000BCC  0A80               	xorlw	128
 11778  000BCE  0100               	movlb	0	; () banked
 11779  000BD0  59EB               	subwfb	??_sprintf& (0+255),w,b
 11780  000BD2  B0D8               	btfsc	status,0,c
 11781  000BD4  D008               	goto	l2740
 11782                           
 11783                           ; BSR set to: 0
 11784                           ;doprnt.c: 1382: width -= c;
 11785  000BD6  0101               	movlb	1	; () banked
 11786  000BD8  511F               	movf	sprintf@c& (0+255),w,b
 11787  000BDA  5F19               	subwf	sprintf@width& (0+255),f,b
 11788  000BDC  0E00               	movlw	0
 11789  000BDE  BF1F               	btfsc	sprintf@c& (0+255),7,b
 11790  000BE0  0EFF               	movlw	255
 11791  000BE2  5B1A               	subwfb	(sprintf@width+1)& (0+255),f,b
 11792  000BE4  D005               	goto	l2741
 11793  000BE6                     l2740:
 11794                           
 11795                           ;doprnt.c: 1383: else
 11796                           ;doprnt.c: 1384: width = 0;
 11797                           
 11798                           ; BSR set to: 1
 11799  000BE6  0E00               	movlw	0
 11800  000BE8  0101               	movlb	1	; () banked
 11801  000BEA  6F1A               	movwf	(sprintf@width+1)& (0+255),b
 11802  000BEC  0E00               	movlw	0
 11803  000BEE  6F19               	movwf	sprintf@width& (0+255),b
 11804  000BF0                     l2741:
 11805                           
 11806                           ; BSR set to: 1
 11807                           ;doprnt.c: 1387: if(flag & 0x04) {
 11808                           
 11809                           ; BSR set to: 1
 11810  000BF0  A51B               	btfss	sprintf@flag& (0+255),2,b
 11811  000BF2  D028               	goto	l2742
 11812                           
 11813                           ; BSR set to: 1
 11814                           ;doprnt.c: 1392: if(flag & 0x03)
 11815  000BF4  0E03               	movlw	3
 11816  000BF6  151B               	andwf	sprintf@flag& (0+255),w,b
 11817  000BF8  0100               	movlb	0	; () banked
 11818  000BFA  6FEB               	movwf	??_sprintf& (0+255),b
 11819  000BFC  0E00               	movlw	0
 11820  000BFE  0101               	movlb	1	; () banked
 11821  000C00  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
 11822  000C02  0100               	movlb	0	; () banked
 11823  000C04  6FEC               	movwf	(??_sprintf+1)& (0+255),b
 11824  000C06  51EB               	movf	??_sprintf& (0+255),w,b
 11825  000C08  11EC               	iorwf	(??_sprintf+1)& (0+255),w,b
 11826  000C0A  B4D8               	btfsc	status,2,c
 11827  000C0C  D008               	goto	l2743
 11828                           
 11829                           ; BSR set to: 0
 11830                           ;doprnt.c: 1393: ((*sp++ = ('-')));
 11831  000C0E  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 11832  000C12  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 11833  000C16  0E2D               	movlw	45
 11834  000C18  6EDF               	movwf	indf2,c
 11835                           
 11836                           ; BSR set to: 0
 11837  000C1A  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 11838  000C1C  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 11839  000C1E                     l2743:
 11840                           
 11841                           ; BSR set to: 0
 11842                           ;doprnt.c: 1415: if(width)
 11843                           
 11844                           ; BSR set to: 0
 11845  000C1E  0101               	movlb	1	; () banked
 11846  000C20  5119               	movf	sprintf@width& (0+255),w,b
 11847  000C22  111A               	iorwf	(sprintf@width+1)& (0+255),w,b
 11848  000C24  B4D8               	btfsc	status,2,c
 11849  000C26  D0D5               	goto	l2752
 11850                           
 11851                           ; BSR set to: 1
 11852                           ;doprnt.c: 1417: ((*sp++ = ('0')));
 11853                           
 11854                           ; BSR set to: 1
 11855                           
 11856                           ;doprnt.c: 1416: do
 11857  000C28  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 11858  000C2C  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 11859  000C30  0E30               	movlw	48
 11860  000C32  6EDF               	movwf	indf2,c
 11861                           
 11862                           ; BSR set to: 1
 11863  000C34  0100               	movlb	0	; () banked
 11864  000C36  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 11865  000C38  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 11866                           
 11867                           ; BSR set to: 0
 11868                           ;doprnt.c: 1418: while(--width);
 11869  000C3A  0101               	movlb	1	; () banked
 11870  000C3C  0719               	decf	sprintf@width& (0+255),f,b
 11871  000C3E  A0D8               	btfss	status,0,c
 11872  000C40  071A               	decf	(sprintf@width+1)& (0+255),f,b
 11873  000C42  D7EE               	goto	L37
 11874  000C44                     l2742:
 11875                           
 11876                           ; BSR set to: 1
 11877                           ;doprnt.c: 1422: {
 11878                           ;doprnt.c: 1424: if(width
 11879                           ;doprnt.c: 1428: )
 11880                           
 11881                           ; BSR set to: 1
 11882  000C44  5119               	movf	sprintf@width& (0+255),w,b
 11883  000C46  111A               	iorwf	(sprintf@width+1)& (0+255),w,b
 11884  000C48  B4D8               	btfsc	status,2,c
 11885  000C4A  D011               	goto	u8610
 11886  000C4C                     u8600:
 11887                           
 11888                           ; BSR set to: 1
 11889                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 11890                           
 11891                           ; BSR set to: 1
 11892                           
 11893                           ;doprnt.c: 1429: do
 11894  000C4C  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 11895  000C50  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 11896  000C54  0E20               	movlw	32
 11897  000C56  6EDF               	movwf	indf2,c
 11898                           
 11899                           ; BSR set to: 1
 11900  000C58  0100               	movlb	0	; () banked
 11901  000C5A  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 11902  000C5C  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 11903                           
 11904                           ; BSR set to: 0
 11905                           ;doprnt.c: 1431: while(--width);
 11906  000C5E  0101               	movlb	1	; () banked
 11907  000C60  0719               	decf	sprintf@width& (0+255),f,b
 11908  000C62  A0D8               	btfss	status,0,c
 11909  000C64  071A               	decf	(sprintf@width+1)& (0+255),f,b
 11910  000C66  5119               	movf	sprintf@width& (0+255),w,b
 11911  000C68  111A               	iorwf	(sprintf@width+1)& (0+255),w,b
 11912  000C6A  A4D8               	btfss	status,2,c
 11913  000C6C  D7EF               	goto	u8600
 11914  000C6E                     u8610:
 11915                           
 11916                           ; BSR set to: 1
 11917                           ;doprnt.c: 1438: if(flag & 0x03)
 11918                           
 11919                           ; BSR set to: 1
 11920                           
 11921                           ; BSR set to: 1
 11922  000C6E  0E03               	movlw	3
 11923  000C70  151B               	andwf	sprintf@flag& (0+255),w,b
 11924  000C72  0100               	movlb	0	; () banked
 11925  000C74  6FEB               	movwf	??_sprintf& (0+255),b
 11926  000C76  0E00               	movlw	0
 11927  000C78  0101               	movlb	1	; () banked
 11928  000C7A  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
 11929  000C7C  0100               	movlb	0	; () banked
 11930  000C7E  6FEC               	movwf	(??_sprintf+1)& (0+255),b
 11931  000C80  51EB               	movf	??_sprintf& (0+255),w,b
 11932  000C82  11EC               	iorwf	(??_sprintf+1)& (0+255),w,b
 11933  000C84  B4D8               	btfsc	status,2,c
 11934  000C86  D0A5               	goto	l2752
 11935                           
 11936                           ; BSR set to: 0
 11937                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 11938  000C88  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 11939  000C8C  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 11940  000C90  0E2D               	movlw	45
 11941  000C92  6EDF               	movwf	indf2,c
 11942  000C94  D09C               	goto	L15
 11943  000C96                     
 11944                           ;doprnt.c: 1486: case 0xC0:
 11945                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 11946                           
 11947                           ; BSR set to: 0
 11948                           
 11949                           ; BSR set to: 0
 11950  000C96  C11D  F0EB         	movff	sprintf@prec,??_sprintf
 11951  000C9A  C11E  F0EC         	movff	sprintf@prec+1,??_sprintf+1
 11952  000C9E  0100               	movlb	0	; () banked
 11953  000CA0  90D8               	bcf	status,0,c
 11954  000CA2  37EB               	rlcf	??_sprintf& (0+255),f,b
 11955  000CA4  37EC               	rlcf	(??_sprintf+1)& (0+255),f,b
 11956  000CA6  90D8               	bcf	status,0,c
 11957  000CA8  37EB               	rlcf	??_sprintf& (0+255),f,b
 11958  000CAA  37EC               	rlcf	(??_sprintf+1)& (0+255),f,b
 11959  000CAC  0EFB               	movlw	low _dpowers
 11960  000CAE  25EB               	addwf	??_sprintf& (0+255),w,b
 11961  000CB0  6EF6               	movwf	tblptrl,c
 11962  000CB2  0E7B               	movlw	high _dpowers
 11963  000CB4  21EC               	addwfc	(??_sprintf+1)& (0+255),w,b
 11964  000CB6  6EF7               	movwf	tblptrh,c
 11965  000CB8                     	if	0	;There are less than 3 active tblptr bytes
 11966  000CB8                     	endif
 11967  000CB8  0009               	tblrd		*+
 11968  000CBA  CFF5 F064          	movff	tablat,___lldiv@divisor
 11969  000CBE  0009               	tblrd		*+
 11970  000CC0  CFF5 F065          	movff	tablat,___lldiv@divisor+1
 11971  000CC4  0009               	tblrd		*+
 11972  000CC6  CFF5 F066          	movff	tablat,___lldiv@divisor+2
 11973  000CCA  000A               	tblrd		*-
 11974  000CCC  CFF5 F067          	movff	tablat,___lldiv@divisor+3
 11975  000CD0  C112  F060         	movff	sprintf@val,___lldiv@dividend
 11976  000CD4  C113  F061         	movff	sprintf@val+1,___lldiv@dividend+1
 11977  000CD8  C114  F062         	movff	sprintf@val+2,___lldiv@dividend+2
 11978  000CDC  C115  F063         	movff	sprintf@val+3,___lldiv@dividend+3
 11979  000CE0  EC1E  F025         	call	___lldiv	;wreg free
 11980  000CE4  C060  F06D         	movff	?___lldiv,___llmod@dividend
 11981  000CE8  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
 11982  000CEC  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
 11983  000CF0  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
 11984  000CF4  0E0A               	movlw	10
 11985  000CF6  0100               	movlb	0	; () banked
 11986  000CF8  6F71               	movwf	___llmod@divisor& (0+255),b
 11987  000CFA  0E00               	movlw	0
 11988  000CFC  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 11989  000CFE  0E00               	movlw	0
 11990  000D00  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 11991  000D02  0E00               	movlw	0
 11992  000D04  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 11993  000D06  ECBF  F026         	call	___llmod	;wreg free
 11994  000D0A  0100               	movlb	0	; () banked
 11995  000D0C  516D               	movf	?___llmod& (0+255),w,b
 11996  000D0E  0F30               	addlw	48
 11997  000D10  0101               	movlb	1	; () banked
 11998  000D12  6F1F               	movwf	sprintf@c& (0+255),b
 11999                           
 12000                           ;doprnt.c: 1491: break;
 12001  000D14  D055               	goto	l2757
 12002  000D16                     
 12003                           ; BSR set to: 1
 12004                           ;doprnt.c: 1499: {
 12005                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 12006                           
 12007                           ; BSR set to: 1
 12008  000D16  C112  F060         	movff	sprintf@val,___lldiv@dividend
 12009  000D1A  C113  F061         	movff	sprintf@val+1,___lldiv@dividend+1
 12010  000D1E  C114  F062         	movff	sprintf@val+2,___lldiv@dividend+2
 12011  000D22  C115  F063         	movff	sprintf@val+3,___lldiv@dividend+3
 12012  000D26  C11D  F0EB         	movff	sprintf@prec,??_sprintf
 12013  000D2A  C11E  F0EC         	movff	sprintf@prec+1,??_sprintf+1
 12014  000D2E  0100               	movlb	0	; () banked
 12015  000D30  90D8               	bcf	status,0,c
 12016  000D32  37EB               	rlcf	??_sprintf& (0+255),f,b
 12017  000D34  37EC               	rlcf	(??_sprintf+1)& (0+255),f,b
 12018  000D36  90D8               	bcf	status,0,c
 12019  000D38  37EB               	rlcf	??_sprintf& (0+255),f,b
 12020  000D3A  37EC               	rlcf	(??_sprintf+1)& (0+255),f,b
 12021  000D3C  0E71               	movlw	low _hexpowers
 12022  000D3E  25EB               	addwf	??_sprintf& (0+255),w,b
 12023  000D40  6EF6               	movwf	tblptrl,c
 12024  000D42  0E7C               	movlw	high _hexpowers
 12025  000D44  21EC               	addwfc	(??_sprintf+1)& (0+255),w,b
 12026  000D46  6EF7               	movwf	tblptrh,c
 12027  000D48                     	if	0	;There are less than 3 active tblptr bytes
 12028  000D48                     	endif
 12029  000D48  0009               	tblrd		*+
 12030  000D4A  CFF5 F064          	movff	tablat,___lldiv@divisor
 12031  000D4E  0009               	tblrd		*+
 12032  000D50  CFF5 F065          	movff	tablat,___lldiv@divisor+1
 12033  000D54  0009               	tblrd		*+
 12034  000D56  CFF5 F066          	movff	tablat,___lldiv@divisor+2
 12035  000D5A  000A               	tblrd		*-
 12036  000D5C  CFF5 F067          	movff	tablat,___lldiv@divisor+3
 12037  000D60  EC1E  F025         	call	___lldiv	;wreg free
 12038  000D64  0100               	movlb	0	; () banked
 12039  000D66  5160               	movf	?___lldiv& (0+255),w,b
 12040  000D68  0B0F               	andlw	15
 12041  000D6A  0101               	movlb	1	; () banked
 12042  000D6C  6F05               	movwf	sprintf@idx& (0+255),b
 12043                           
 12044                           ; BSR set to: 1
 12045                           ;doprnt.c: 1502: c = (flag & 0x20 ? "0123456789ABCDEF" : "0123456789abcdef")[idx];
 12046  000D6E  BB1B               	btfsc	sprintf@flag& (0+255),5,b
 12047  000D70  D004               	goto	l2760
 12048                           
 12049                           ; BSR set to: 1
 12050  000D72  0E11               	movlw	low STR_38
 12051  000D74  6F03               	movwf	_sprintf$5101& (0+255),b
 12052  000D76  0E7F               	movlw	high STR_38
 12053  000D78  D003               	goto	L16
 12054  000D7A                     l2760:
 12055                           
 12056                           ; BSR set to: 1
 12057                           
 12058                           ; BSR set to: 1
 12059  000D7A  0E00               	movlw	low STR_37
 12060  000D7C  6F03               	movwf	_sprintf$5101& (0+255),b
 12061  000D7E  0E7F               	movlw	high STR_37
 12062  000D80                     L16:
 12063  000D80  6F04               	movwf	(_sprintf$5101+1)& (0+255),b
 12064                           
 12065                           ; BSR set to: 1
 12066                           
 12067                           ; BSR set to: 1
 12068  000D82  5105               	movf	sprintf@idx& (0+255),w,b
 12069  000D84  0D01               	mullw	1
 12070  000D86  C103  F0EB         	movff	_sprintf$5101,??_sprintf
 12071  000D8A  C104  F0EC         	movff	_sprintf$5101+1,??_sprintf+1
 12072  000D8E  50F3               	movf	prodl,w,c
 12073  000D90  0100               	movlb	0	; () banked
 12074  000D92  27EB               	addwf	??_sprintf& (0+255),f,b
 12075  000D94  50F4               	movf	prodh,w,c
 12076  000D96  23EC               	addwfc	(??_sprintf+1)& (0+255),f,b
 12077  000D98  C0EB  FFF6         	movff	??_sprintf,tblptrl
 12078  000D9C  C0EC  FFF7         	movff	??_sprintf+1,tblptrh
 12079  000DA0                     	if	0	;tblptru may be non-zero
 12080  000DA0                     	endif
 12081  000DA0                     	if	0	;tblptru may be non-zero
 12082  000DA0                     	endif
 12083  000DA0  0008               	tblrd		*
 12084  000DA2  CFF5 F11F          	movff	tablat,sprintf@c
 12085                           
 12086                           ; BSR set to: 0
 12087                           ;doprnt.c: 1523: }
 12088                           
 12089                           ;doprnt.c: 1508: }
 12090                           ;doprnt.c: 1510: break;
 12091  000DA6  D00C               	goto	l2757
 12092  000DA8                     l9332:
 12093  000DA8  0101               	movlb	1	; () banked
 12094  000DAA  511B               	movf	sprintf@flag& (0+255),w,b
 12095  000DAC  0BC0               	andlw	192
 12096                           
 12097                           ; Switch size 1, requested type "space"
 12098                           ; Number of cases is 3, Range of values is 0 to 192
 12099                           ; switch strategies available:
 12100                           ; Name         Instructions Cycles
 12101                           ; simple_byte           10     6 (average)
 12102                           ;	Chosen strategy is simple_byte
 12103  000DAE  0A00               	xorlw	0	; case 0
 12104  000DB0  B4D8               	btfsc	status,2,c
 12105  000DB2  D771               	goto	l2755
 12106  000DB4  0A80               	xorlw	128	; case 128
 12107  000DB6  B4D8               	btfsc	status,2,c
 12108  000DB8  D7AE               	goto	l2758
 12109  000DBA  0A40               	xorlw	64	; case 192
 12110  000DBC  B4D8               	btfsc	status,2,c
 12111  000DBE  D76B               	goto	l2755
 12112  000DC0                     l2757:
 12113                           
 12114                           ;doprnt.c: 1524: ((*sp++ = (c)));
 12115                           
 12116                           ; BSR set to: 1
 12117  000DC0  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 12118  000DC4  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 12119  000DC8  C11F  FFDF         	movff	sprintf@c,indf2
 12120  000DCC  0100               	movlb	0	; () banked
 12121  000DCE                     L15:
 12122  000DCE  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 12123  000DD0  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 12124  000DD2                     l2752:
 12125                           
 12126                           ; BSR set to: 0
 12127  000DD2  0101               	movlb	1	; () banked
 12128  000DD4  071D               	decf	sprintf@prec& (0+255),f,b
 12129  000DD6  A0D8               	btfss	status,0,c
 12130  000DD8  071E               	decf	(sprintf@prec+1)& (0+255),f,b
 12131  000DDA  291D               	incf	sprintf@prec& (0+255),w,b
 12132  000DDC  E1E5               	bnz	l9332
 12133  000DDE  291E               	incf	(sprintf@prec+1)& (0+255),w,b
 12134  000DE0  A4D8               	btfss	status,2,c
 12135  000DE2  D7E2               	goto	l2754
 12136  000DE4                     u8640:
 12137                           
 12138                           ; BSR set to: 1
 12139                           
 12140                           ; BSR set to: 1
 12141  000DE4  C0C1  FFF6         	movff	sprintf@f,tblptrl
 12142  000DE8  C0C2  FFF7         	movff	sprintf@f+1,tblptrh
 12143  000DEC  0100               	movlb	0	; () banked
 12144  000DEE  4BC1               	infsnz	sprintf@f& (0+255),f,b
 12145  000DF0  2BC2               	incf	(sprintf@f+1)& (0+255),f,b
 12146  000DF2                     	if	0	;tblptru may be non-zero
 12147  000DF2                     	endif
 12148  000DF2                     	if	0	;tblptru may be non-zero
 12149  000DF2                     	endif
 12150  000DF2  0008               	tblrd		*
 12151  000DF4  CFF5 F11F          	movff	tablat,sprintf@c
 12152  000DF8  0101               	movlb	1	; () banked
 12153  000DFA  511F               	movf	sprintf@c& (0+255),w,b
 12154  000DFC  A4D8               	btfss	status,2,c
 12155  000DFE  EF10  F000         	goto	l2622
 12156  000E02                     u8650:
 12157                           
 12158                           ; BSR set to: 1
 12159                           ;doprnt.c: 1538: *sp = 0;
 12160                           
 12161                           ; BSR set to: 1
 12162                           
 12163                           ;doprnt.c: 1525: }
 12164                           ;doprnt.c: 1533: }
 12165                           ;doprnt.c: 1535: alldone:
 12166                           
 12167                           ; BSR set to: 1
 12168  000E02  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 12169  000E06  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 12170  000E0A  0E00               	movlw	0
 12171  000E0C  6EDF               	movwf	indf2,c
 12172  000E0E  0012               	return	
 12173  000E10                     __end_of_sprintf:
 12174                           	opt stack 0
 12175                           tblptru	equ	0xFF8
 12176                           tblptrh	equ	0xFF7
 12177                           tblptrl	equ	0xFF6
 12178                           tablat	equ	0xFF5
 12179                           prodh	equ	0xFF4
 12180                           prodl	equ	0xFF3
 12181                           intcon	equ	0xFF2
 12182                           postinc0	equ	0xFEE
 12183                           wreg	equ	0xFE8
 12184                           indf1	equ	0xFE7
 12185                           postdec1	equ	0xFE5
 12186                           fsr1h	equ	0xFE2
 12187                           fsr1l	equ	0xFE1
 12188                           indf2	equ	0xFDF
 12189                           postinc2	equ	0xFDE
 12190                           postdec2	equ	0xFDD
 12191                           plusw2	equ	0xFDB
 12192                           fsr2h	equ	0xFDA
 12193                           fsr2l	equ	0xFD9
 12194                           status	equ	0xFD8
 12195                           
 12196 ;; *************** function _scale *****************
 12197 ;; Defined at:
 12198 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\doprnt.c"
 12199 ;; Parameters:    Size  Location     Type
 12200 ;;  scl             1    wreg     char 
 12201 ;; Auto vars:     Size  Location     Type
 12202 ;;  scl             1   53[BANK0 ] char 
 12203 ;; Return value:  Size  Location     Type
 12204 ;;                  3   47[BANK0 ] char 
 12205 ;; Registers used:
 12206 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12207 ;; Tracked objects:
 12208 ;;		On entry : 0/0
 12209 ;;		On exit  : 0/0
 12210 ;;		Unchanged: 0/0
 12211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12212 ;;      Params:         0       3       0       0       0       0       0       0       0
 12213 ;;      Locals:         0       4       0       0       0       0       0       0       0
 12214 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12215 ;;      Totals:         0       7       0       0       0       0       0       0       0
 12216 ;;Total ram usage:        7 bytes
 12217 ;; Hardware stack levels used:    1
 12218 ;; Hardware stack levels required when called:   12
 12219 ;; This function calls:
 12220 ;;		___awdiv
 12221 ;;		___awmod
 12222 ;;		___ftmul
 12223 ;;		___wmul
 12224 ;; This function is called by:
 12225 ;;		_sprintf
 12226 ;; This function uses a non-reentrant model
 12227 ;;
 12228                           
 12229                           	psect	text33
 12230  0017B0                     __ptext33:
 12231                           	opt stack 0
 12232  0017B0                     _scale:
 12233                           	opt stack 17
 12234                           
 12235                           ; BSR set to: 1
 12236                           ;incstack = 0
 12237                           ;scale@scl stored from wreg
 12238  0017B0  0100               	movlb	0	; () banked
 12239  0017B2  6F95               	movwf	scale@scl& (0+255),b
 12240                           
 12241                           ;doprnt.c: 428: if(scl < 0) {
 12242  0017B4  0100               	movlb	0	; () banked
 12243  0017B6  AF95               	btfss	scale@scl& (0+255),7,b
 12244  0017B8  D10C               	goto	l2611
 12245                           
 12246                           ; BSR set to: 0
 12247                           ;doprnt.c: 429: scl = -scl;
 12248  0017BA  6D95               	negf	scale@scl& (0+255),b
 12249                           
 12250                           ;doprnt.c: 430: if(scl>=110)
 12251  0017BC  5195               	movf	scale@scl& (0+255),w,b
 12252  0017BE  0A80               	xorlw	128
 12253  0017C0  0F12               	addlw	-238
 12254  0017C2  A0D8               	btfss	status,0,c
 12255  0017C4  D097               	goto	l2612
 12256                           
 12257                           ; BSR set to: 0
 12258                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 12259  0017C6  0E00               	movlw	0
 12260  0017C8  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12261  0017CA  0E03               	movlw	3
 12262  0017CC  6F70               	movwf	___wmul@multiplicand& (0+255),b
 12263  0017CE  0E00               	movlw	0
 12264  0017D0  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 12265  0017D2  0E0A               	movlw	10
 12266  0017D4  6F68               	movwf	___awdiv@divisor& (0+255),b
 12267  0017D6  0E00               	movlw	0
 12268  0017D8  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 12269  0017DA  0E64               	movlw	100
 12270  0017DC  6F62               	movwf	___awmod@divisor& (0+255),b
 12271  0017DE  5195               	movf	scale@scl& (0+255),w,b
 12272  0017E0  6F60               	movwf	___awmod@dividend& (0+255),b
 12273  0017E2  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 12274  0017E4  BF60               	btfsc	___awmod@dividend& (0+255),7,b
 12275  0017E6  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
 12276  0017E8  EC50  F026         	call	___awmod	;wreg free
 12277  0017EC  C060  F066         	movff	?___awmod,___awdiv@dividend
 12278  0017F0  C061  F067         	movff	?___awmod+1,___awdiv@dividend+1
 12279  0017F4  EC98  F024         	call	___awdiv	;wreg free
 12280  0017F8  0E09               	movlw	9
 12281  0017FA  0100               	movlb	0	; () banked
 12282  0017FC  2566               	addwf	?___awdiv& (0+255),w,b
 12283  0017FE  6F6E               	movwf	___wmul@multiplier& (0+255),b
 12284  001800  0E00               	movlw	0
 12285  001802  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 12286  001804  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 12287  001806  ECCC  F02A         	call	___wmul	;wreg free
 12288  00180A  0E4A               	movlw	low __npowers_
 12289  00180C  0100               	movlb	0	; () banked
 12290  00180E  256E               	addwf	?___wmul& (0+255),w,b
 12291  001810  6EF6               	movwf	tblptrl,c
 12292  001812  0E7C               	movlw	high __npowers_
 12293  001814  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 12294  001816  6EF7               	movwf	tblptrh,c
 12295  001818                     	if	0	;There are less than 3 active tblptr bytes
 12296  001818                     	endif
 12297  001818  0009               	tblrd		*+
 12298  00181A  CFF5 F083          	movff	tablat,___ftmul@f2
 12299  00181E  0009               	tblrd		*+
 12300  001820  CFF5 F084          	movff	tablat,___ftmul@f2+1
 12301  001824  000A               	tblrd		*-
 12302  001826  CFF5 F085          	movff	tablat,___ftmul@f2+2
 12303  00182A  0E00               	movlw	0
 12304  00182C  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 12305  00182E  0E64               	movlw	100
 12306  001830  6F68               	movwf	___awdiv@divisor& (0+255),b
 12307  001832  5195               	movf	scale@scl& (0+255),w,b
 12308  001834  6F66               	movwf	___awdiv@dividend& (0+255),b
 12309  001836  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
 12310  001838  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
 12311  00183A  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
 12312  00183C  EC98  F024         	call	___awdiv	;wreg free
 12313  001840  0E12               	movlw	18
 12314  001842  0100               	movlb	0	; () banked
 12315  001844  2566               	addwf	?___awdiv& (0+255),w,b
 12316  001846  6F6E               	movwf	___wmul@multiplier& (0+255),b
 12317  001848  0E00               	movlw	0
 12318  00184A  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 12319  00184C  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 12320  00184E  0E00               	movlw	0
 12321  001850  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12322  001852  0E03               	movlw	3
 12323  001854  6F70               	movwf	___wmul@multiplicand& (0+255),b
 12324  001856  ECCC  F02A         	call	___wmul	;wreg free
 12325  00185A  0E4A               	movlw	low __npowers_
 12326  00185C  0100               	movlb	0	; () banked
 12327  00185E  256E               	addwf	?___wmul& (0+255),w,b
 12328  001860  6EF6               	movwf	tblptrl,c
 12329  001862  0E7C               	movlw	high __npowers_
 12330  001864  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 12331  001866  6EF7               	movwf	tblptrh,c
 12332  001868                     	if	0	;There are less than 3 active tblptr bytes
 12333  001868                     	endif
 12334  001868  0009               	tblrd		*+
 12335  00186A  CFF5 F080          	movff	tablat,___ftmul@f1
 12336  00186E  0009               	tblrd		*+
 12337  001870  CFF5 F081          	movff	tablat,___ftmul@f1+1
 12338  001874  000A               	tblrd		*-
 12339  001876  CFF5 F082          	movff	tablat,___ftmul@f1+2
 12340  00187A  EC24  F01D         	call	___ftmul	;wreg free
 12341  00187E  C080  F092         	movff	?___ftmul,_scale$5892
 12342  001882  C081  F093         	movff	?___ftmul+1,_scale$5892+1
 12343  001886  C082  F094         	movff	?___ftmul+2,_scale$5892+2
 12344                           
 12345                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 12346  00188A  C092  F080         	movff	_scale$5892,___ftmul@f1
 12347  00188E  C093  F081         	movff	_scale$5892+1,___ftmul@f1+1
 12348  001892  C094  F082         	movff	_scale$5892+2,___ftmul@f1+2
 12349  001896  0E00               	movlw	0
 12350  001898  0100               	movlb	0	; () banked
 12351  00189A  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12352  00189C  0E03               	movlw	3
 12353  00189E  6F70               	movwf	___wmul@multiplicand& (0+255),b
 12354  0018A0  0E00               	movlw	0
 12355  0018A2  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 12356  0018A4  0E0A               	movlw	10
 12357  0018A6  6F62               	movwf	___awmod@divisor& (0+255),b
 12358  0018A8  5195               	movf	scale@scl& (0+255),w,b
 12359  0018AA  6F60               	movwf	___awmod@dividend& (0+255),b
 12360  0018AC  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 12361  0018AE  BF60               	btfsc	___awmod@dividend& (0+255),7,b
 12362  0018B0  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
 12363  0018B2  EC50  F026         	call	___awmod	;wreg free
 12364  0018B6  C060  F06E         	movff	?___awmod,___wmul@multiplier
 12365  0018BA  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
 12366  0018BE  ECCC  F02A         	call	___wmul	;wreg free
 12367  0018C2  0E4A               	movlw	low __npowers_
 12368  0018C4  0100               	movlb	0	; () banked
 12369  0018C6  256E               	addwf	?___wmul& (0+255),w,b
 12370  0018C8  6EF6               	movwf	tblptrl,c
 12371  0018CA  0E7C               	movlw	high __npowers_
 12372  0018CC  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 12373  0018CE  6EF7               	movwf	tblptrh,c
 12374  0018D0                     	if	0	;There are less than 3 active tblptr bytes
 12375  0018D0                     	endif
 12376  0018D0  0009               	tblrd		*+
 12377  0018D2  CFF5 F083          	movff	tablat,___ftmul@f2
 12378  0018D6  0009               	tblrd		*+
 12379  0018D8  CFF5 F084          	movff	tablat,___ftmul@f2+1
 12380  0018DC  000A               	tblrd		*-
 12381  0018DE  CFF5 F085          	movff	tablat,___ftmul@f2+2
 12382  0018E2  EC24  F01D         	call	___ftmul	;wreg free
 12383  0018E6  C080  F08F         	movff	?___ftmul,?_scale
 12384  0018EA  C081  F090         	movff	?___ftmul+1,?_scale+1
 12385  0018EE  C082  F091         	movff	?___ftmul+2,?_scale+2
 12386  0018F2  0012               	return	
 12387  0018F4                     l2612:
 12388                           
 12389                           ;doprnt.c: 432: else if(scl > 10)
 12390  0018F4  0100               	movlb	0	; () banked
 12391  0018F6  5195               	movf	scale@scl& (0+255),w,b
 12392  0018F8  0A80               	xorlw	128
 12393  0018FA  0F75               	addlw	-139
 12394  0018FC  A0D8               	btfss	status,0,c
 12395  0018FE  D056               	goto	l2615
 12396                           
 12397                           ; BSR set to: 0
 12398                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 12399  001900  0E00               	movlw	0
 12400  001902  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 12401  001904  0E0A               	movlw	10
 12402  001906  6F68               	movwf	___awdiv@divisor& (0+255),b
 12403  001908  5195               	movf	scale@scl& (0+255),w,b
 12404  00190A  6F66               	movwf	___awdiv@dividend& (0+255),b
 12405  00190C  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
 12406  00190E  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
 12407  001910  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
 12408  001912  EC98  F024         	call	___awdiv	;wreg free
 12409  001916  0E09               	movlw	9
 12410  001918  0100               	movlb	0	; () banked
 12411  00191A  2566               	addwf	?___awdiv& (0+255),w,b
 12412  00191C  6F6E               	movwf	___wmul@multiplier& (0+255),b
 12413  00191E  0E00               	movlw	0
 12414  001920  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 12415  001922  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 12416  001924  0E00               	movlw	0
 12417  001926  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12418  001928  0E03               	movlw	3
 12419  00192A  6F70               	movwf	___wmul@multiplicand& (0+255),b
 12420  00192C  ECCC  F02A         	call	___wmul	;wreg free
 12421  001930  0E4A               	movlw	low __npowers_
 12422  001932  0100               	movlb	0	; () banked
 12423  001934  256E               	addwf	?___wmul& (0+255),w,b
 12424  001936  6EF6               	movwf	tblptrl,c
 12425  001938  0E7C               	movlw	high __npowers_
 12426  00193A  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 12427  00193C  6EF7               	movwf	tblptrh,c
 12428  00193E                     	if	0	;There are less than 3 active tblptr bytes
 12429  00193E                     	endif
 12430  00193E  0009               	tblrd		*+
 12431  001940  CFF5 F080          	movff	tablat,___ftmul@f1
 12432  001944  0009               	tblrd		*+
 12433  001946  CFF5 F081          	movff	tablat,___ftmul@f1+1
 12434  00194A  000A               	tblrd		*-
 12435  00194C  CFF5 F082          	movff	tablat,___ftmul@f1+2
 12436  001950  0E00               	movlw	0
 12437  001952  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12438  001954  0E03               	movlw	3
 12439  001956  6F70               	movwf	___wmul@multiplicand& (0+255),b
 12440  001958  0E00               	movlw	0
 12441  00195A  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 12442  00195C  0E0A               	movlw	10
 12443  00195E  6F62               	movwf	___awmod@divisor& (0+255),b
 12444  001960  5195               	movf	scale@scl& (0+255),w,b
 12445  001962  6F60               	movwf	___awmod@dividend& (0+255),b
 12446  001964  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 12447  001966  BF60               	btfsc	___awmod@dividend& (0+255),7,b
 12448  001968  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
 12449  00196A  EC50  F026         	call	___awmod	;wreg free
 12450  00196E  C060  F06E         	movff	?___awmod,___wmul@multiplier
 12451  001972  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
 12452  001976  ECCC  F02A         	call	___wmul	;wreg free
 12453  00197A  0E4A               	movlw	low __npowers_
 12454  00197C  0100               	movlb	0	; () banked
 12455  00197E  256E               	addwf	?___wmul& (0+255),w,b
 12456  001980  6EF6               	movwf	tblptrl,c
 12457  001982  0E7C               	movlw	high __npowers_
 12458  001984  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 12459  001986  6EF7               	movwf	tblptrh,c
 12460  001988                     	if	0	;There are less than 3 active tblptr bytes
 12461  001988                     	endif
 12462  001988  0009               	tblrd		*+
 12463  00198A  CFF5 F083          	movff	tablat,___ftmul@f2
 12464  00198E  0009               	tblrd		*+
 12465  001990  CFF5 F084          	movff	tablat,___ftmul@f2+1
 12466  001994  000A               	tblrd		*-
 12467  001996  CFF5 F085          	movff	tablat,___ftmul@f2+2
 12468  00199A  EC24  F01D         	call	___ftmul	;wreg free
 12469  00199E  C080  F08F         	movff	?___ftmul,?_scale
 12470  0019A2  C081  F090         	movff	?___ftmul+1,?_scale+1
 12471  0019A6  C082  F091         	movff	?___ftmul+2,?_scale+2
 12472  0019AA  0012               	return	
 12473  0019AC                     l2615:
 12474                           
 12475                           ;doprnt.c: 434: return _npowers_[scl];
 12476  0019AC  0100               	movlb	0	; () banked
 12477  0019AE  5195               	movf	scale@scl& (0+255),w,b
 12478  0019B0  0D03               	mullw	3
 12479  0019B2  0E4A               	movlw	low __npowers_
 12480  0019B4  24F3               	addwf	prodl,w,c
 12481  0019B6  6EF6               	movwf	tblptrl,c
 12482  0019B8  0E7C               	movlw	high __npowers_
 12483  0019BA  20F4               	addwfc	prodh,w,c
 12484  0019BC  6EF7               	movwf	tblptrh,c
 12485  0019BE                     	if	0	;There are less than 3 active tblptr bytes
 12486  0019BE                     	endif
 12487  0019BE  0009               	tblrd		*+
 12488  0019C0  CFF5 F08F          	movff	tablat,?_scale
 12489  0019C4  0009               	tblrd		*+
 12490  0019C6  CFF5 F090          	movff	tablat,?_scale+1
 12491  0019CA  000A               	tblrd		*-
 12492  0019CC  CFF5 F091          	movff	tablat,?_scale+2
 12493                           
 12494                           ; BSR set to: 0
 12495  0019D0  0012               	return	
 12496  0019D2                     l2611:
 12497                           
 12498                           ; BSR set to: 0
 12499                           ;doprnt.c: 435: }
 12500                           ;doprnt.c: 436: if(scl>=110)
 12501                           
 12502                           ; BSR set to: 0
 12503  0019D2  5195               	movf	scale@scl& (0+255),w,b
 12504  0019D4  0A80               	xorlw	128
 12505  0019D6  0F12               	addlw	-238
 12506  0019D8  A0D8               	btfss	status,0,c
 12507  0019DA  D097               	goto	l2616
 12508                           
 12509                           ; BSR set to: 0
 12510                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 12511  0019DC  0E00               	movlw	0
 12512  0019DE  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12513  0019E0  0E03               	movlw	3
 12514  0019E2  6F70               	movwf	___wmul@multiplicand& (0+255),b
 12515  0019E4  0E00               	movlw	0
 12516  0019E6  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 12517  0019E8  0E0A               	movlw	10
 12518  0019EA  6F68               	movwf	___awdiv@divisor& (0+255),b
 12519  0019EC  0E00               	movlw	0
 12520  0019EE  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 12521  0019F0  0E64               	movlw	100
 12522  0019F2  6F62               	movwf	___awmod@divisor& (0+255),b
 12523  0019F4  5195               	movf	scale@scl& (0+255),w,b
 12524  0019F6  6F60               	movwf	___awmod@dividend& (0+255),b
 12525  0019F8  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 12526  0019FA  BF60               	btfsc	___awmod@dividend& (0+255),7,b
 12527  0019FC  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
 12528  0019FE  EC50  F026         	call	___awmod	;wreg free
 12529  001A02  C060  F066         	movff	?___awmod,___awdiv@dividend
 12530  001A06  C061  F067         	movff	?___awmod+1,___awdiv@dividend+1
 12531  001A0A  EC98  F024         	call	___awdiv	;wreg free
 12532  001A0E  0E09               	movlw	9
 12533  001A10  0100               	movlb	0	; () banked
 12534  001A12  2566               	addwf	?___awdiv& (0+255),w,b
 12535  001A14  6F6E               	movwf	___wmul@multiplier& (0+255),b
 12536  001A16  0E00               	movlw	0
 12537  001A18  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 12538  001A1A  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 12539  001A1C  ECCC  F02A         	call	___wmul	;wreg free
 12540  001A20  0E23               	movlw	low __powers_
 12541  001A22  0100               	movlb	0	; () banked
 12542  001A24  256E               	addwf	?___wmul& (0+255),w,b
 12543  001A26  6EF6               	movwf	tblptrl,c
 12544  001A28  0E7C               	movlw	high __powers_
 12545  001A2A  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 12546  001A2C  6EF7               	movwf	tblptrh,c
 12547  001A2E                     	if	0	;There are less than 3 active tblptr bytes
 12548  001A2E                     	endif
 12549  001A2E  0009               	tblrd		*+
 12550  001A30  CFF5 F083          	movff	tablat,___ftmul@f2
 12551  001A34  0009               	tblrd		*+
 12552  001A36  CFF5 F084          	movff	tablat,___ftmul@f2+1
 12553  001A3A  000A               	tblrd		*-
 12554  001A3C  CFF5 F085          	movff	tablat,___ftmul@f2+2
 12555  001A40  0E00               	movlw	0
 12556  001A42  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 12557  001A44  0E64               	movlw	100
 12558  001A46  6F68               	movwf	___awdiv@divisor& (0+255),b
 12559  001A48  5195               	movf	scale@scl& (0+255),w,b
 12560  001A4A  6F66               	movwf	___awdiv@dividend& (0+255),b
 12561  001A4C  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
 12562  001A4E  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
 12563  001A50  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
 12564  001A52  EC98  F024         	call	___awdiv	;wreg free
 12565  001A56  0E12               	movlw	18
 12566  001A58  0100               	movlb	0	; () banked
 12567  001A5A  2566               	addwf	?___awdiv& (0+255),w,b
 12568  001A5C  6F6E               	movwf	___wmul@multiplier& (0+255),b
 12569  001A5E  0E00               	movlw	0
 12570  001A60  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 12571  001A62  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 12572  001A64  0E00               	movlw	0
 12573  001A66  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12574  001A68  0E03               	movlw	3
 12575  001A6A  6F70               	movwf	___wmul@multiplicand& (0+255),b
 12576  001A6C  ECCC  F02A         	call	___wmul	;wreg free
 12577  001A70  0E23               	movlw	low __powers_
 12578  001A72  0100               	movlb	0	; () banked
 12579  001A74  256E               	addwf	?___wmul& (0+255),w,b
 12580  001A76  6EF6               	movwf	tblptrl,c
 12581  001A78  0E7C               	movlw	high __powers_
 12582  001A7A  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 12583  001A7C  6EF7               	movwf	tblptrh,c
 12584  001A7E                     	if	0	;There are less than 3 active tblptr bytes
 12585  001A7E                     	endif
 12586  001A7E  0009               	tblrd		*+
 12587  001A80  CFF5 F080          	movff	tablat,___ftmul@f1
 12588  001A84  0009               	tblrd		*+
 12589  001A86  CFF5 F081          	movff	tablat,___ftmul@f1+1
 12590  001A8A  000A               	tblrd		*-
 12591  001A8C  CFF5 F082          	movff	tablat,___ftmul@f1+2
 12592  001A90  EC24  F01D         	call	___ftmul	;wreg free
 12593  001A94  C080  F092         	movff	?___ftmul,_scale$5892
 12594  001A98  C081  F093         	movff	?___ftmul+1,_scale$5892+1
 12595  001A9C  C082  F094         	movff	?___ftmul+2,_scale$5892+2
 12596                           
 12597                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 12598  001AA0  C092  F080         	movff	_scale$5892,___ftmul@f1
 12599  001AA4  C093  F081         	movff	_scale$5892+1,___ftmul@f1+1
 12600  001AA8  C094  F082         	movff	_scale$5892+2,___ftmul@f1+2
 12601  001AAC  0E00               	movlw	0
 12602  001AAE  0100               	movlb	0	; () banked
 12603  001AB0  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12604  001AB2  0E03               	movlw	3
 12605  001AB4  6F70               	movwf	___wmul@multiplicand& (0+255),b
 12606  001AB6  0E00               	movlw	0
 12607  001AB8  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 12608  001ABA  0E0A               	movlw	10
 12609  001ABC  6F62               	movwf	___awmod@divisor& (0+255),b
 12610  001ABE  5195               	movf	scale@scl& (0+255),w,b
 12611  001AC0  6F60               	movwf	___awmod@dividend& (0+255),b
 12612  001AC2  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 12613  001AC4  BF60               	btfsc	___awmod@dividend& (0+255),7,b
 12614  001AC6  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
 12615  001AC8  EC50  F026         	call	___awmod	;wreg free
 12616  001ACC  C060  F06E         	movff	?___awmod,___wmul@multiplier
 12617  001AD0  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
 12618  001AD4  ECCC  F02A         	call	___wmul	;wreg free
 12619  001AD8  0E23               	movlw	low __powers_
 12620  001ADA  0100               	movlb	0	; () banked
 12621  001ADC  256E               	addwf	?___wmul& (0+255),w,b
 12622  001ADE  6EF6               	movwf	tblptrl,c
 12623  001AE0  0E7C               	movlw	high __powers_
 12624  001AE2  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 12625  001AE4  6EF7               	movwf	tblptrh,c
 12626  001AE6                     	if	0	;There are less than 3 active tblptr bytes
 12627  001AE6                     	endif
 12628  001AE6  0009               	tblrd		*+
 12629  001AE8  CFF5 F083          	movff	tablat,___ftmul@f2
 12630  001AEC  0009               	tblrd		*+
 12631  001AEE  CFF5 F084          	movff	tablat,___ftmul@f2+1
 12632  001AF2  000A               	tblrd		*-
 12633  001AF4  CFF5 F085          	movff	tablat,___ftmul@f2+2
 12634  001AF8  EC24  F01D         	call	___ftmul	;wreg free
 12635  001AFC  C080  F08F         	movff	?___ftmul,?_scale
 12636  001B00  C081  F090         	movff	?___ftmul+1,?_scale+1
 12637  001B04  C082  F091         	movff	?___ftmul+2,?_scale+2
 12638  001B08  0012               	return	
 12639  001B0A                     l2616:
 12640                           
 12641                           ;doprnt.c: 438: else if(scl > 10)
 12642  001B0A  0100               	movlb	0	; () banked
 12643  001B0C  5195               	movf	scale@scl& (0+255),w,b
 12644  001B0E  0A80               	xorlw	128
 12645  001B10  0F75               	addlw	-139
 12646  001B12  A0D8               	btfss	status,0,c
 12647  001B14  D056               	goto	l2618
 12648                           
 12649                           ; BSR set to: 0
 12650                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 12651  001B16  0E00               	movlw	0
 12652  001B18  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 12653  001B1A  0E0A               	movlw	10
 12654  001B1C  6F68               	movwf	___awdiv@divisor& (0+255),b
 12655  001B1E  5195               	movf	scale@scl& (0+255),w,b
 12656  001B20  6F66               	movwf	___awdiv@dividend& (0+255),b
 12657  001B22  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
 12658  001B24  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
 12659  001B26  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
 12660  001B28  EC98  F024         	call	___awdiv	;wreg free
 12661  001B2C  0E09               	movlw	9
 12662  001B2E  0100               	movlb	0	; () banked
 12663  001B30  2566               	addwf	?___awdiv& (0+255),w,b
 12664  001B32  6F6E               	movwf	___wmul@multiplier& (0+255),b
 12665  001B34  0E00               	movlw	0
 12666  001B36  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 12667  001B38  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 12668  001B3A  0E00               	movlw	0
 12669  001B3C  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12670  001B3E  0E03               	movlw	3
 12671  001B40  6F70               	movwf	___wmul@multiplicand& (0+255),b
 12672  001B42  ECCC  F02A         	call	___wmul	;wreg free
 12673  001B46  0E23               	movlw	low __powers_
 12674  001B48  0100               	movlb	0	; () banked
 12675  001B4A  256E               	addwf	?___wmul& (0+255),w,b
 12676  001B4C  6EF6               	movwf	tblptrl,c
 12677  001B4E  0E7C               	movlw	high __powers_
 12678  001B50  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 12679  001B52  6EF7               	movwf	tblptrh,c
 12680  001B54                     	if	0	;There are less than 3 active tblptr bytes
 12681  001B54                     	endif
 12682  001B54  0009               	tblrd		*+
 12683  001B56  CFF5 F080          	movff	tablat,___ftmul@f1
 12684  001B5A  0009               	tblrd		*+
 12685  001B5C  CFF5 F081          	movff	tablat,___ftmul@f1+1
 12686  001B60  000A               	tblrd		*-
 12687  001B62  CFF5 F082          	movff	tablat,___ftmul@f1+2
 12688  001B66  0E00               	movlw	0
 12689  001B68  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12690  001B6A  0E03               	movlw	3
 12691  001B6C  6F70               	movwf	___wmul@multiplicand& (0+255),b
 12692  001B6E  0E00               	movlw	0
 12693  001B70  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 12694  001B72  0E0A               	movlw	10
 12695  001B74  6F62               	movwf	___awmod@divisor& (0+255),b
 12696  001B76  5195               	movf	scale@scl& (0+255),w,b
 12697  001B78  6F60               	movwf	___awmod@dividend& (0+255),b
 12698  001B7A  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 12699  001B7C  BF60               	btfsc	___awmod@dividend& (0+255),7,b
 12700  001B7E  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
 12701  001B80  EC50  F026         	call	___awmod	;wreg free
 12702  001B84  C060  F06E         	movff	?___awmod,___wmul@multiplier
 12703  001B88  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
 12704  001B8C  ECCC  F02A         	call	___wmul	;wreg free
 12705  001B90  0E23               	movlw	low __powers_
 12706  001B92  0100               	movlb	0	; () banked
 12707  001B94  256E               	addwf	?___wmul& (0+255),w,b
 12708  001B96  6EF6               	movwf	tblptrl,c
 12709  001B98  0E7C               	movlw	high __powers_
 12710  001B9A  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 12711  001B9C  6EF7               	movwf	tblptrh,c
 12712  001B9E                     	if	0	;There are less than 3 active tblptr bytes
 12713  001B9E                     	endif
 12714  001B9E  0009               	tblrd		*+
 12715  001BA0  CFF5 F083          	movff	tablat,___ftmul@f2
 12716  001BA4  0009               	tblrd		*+
 12717  001BA6  CFF5 F084          	movff	tablat,___ftmul@f2+1
 12718  001BAA  000A               	tblrd		*-
 12719  001BAC  CFF5 F085          	movff	tablat,___ftmul@f2+2
 12720  001BB0  EC24  F01D         	call	___ftmul	;wreg free
 12721  001BB4  C080  F08F         	movff	?___ftmul,?_scale
 12722  001BB8  C081  F090         	movff	?___ftmul+1,?_scale+1
 12723  001BBC  C082  F091         	movff	?___ftmul+2,?_scale+2
 12724  001BC0  0012               	return	
 12725  001BC2                     l2618:
 12726                           
 12727                           ;doprnt.c: 440: return _powers_[scl];
 12728  001BC2  0100               	movlb	0	; () banked
 12729  001BC4  5195               	movf	scale@scl& (0+255),w,b
 12730  001BC6  0D03               	mullw	3
 12731  001BC8  0E23               	movlw	low __powers_
 12732  001BCA  24F3               	addwf	prodl,w,c
 12733  001BCC  6EF6               	movwf	tblptrl,c
 12734  001BCE  0E7C               	movlw	high __powers_
 12735  001BD0  20F4               	addwfc	prodh,w,c
 12736  001BD2  6EF7               	movwf	tblptrh,c
 12737  001BD4                     	if	0	;There are less than 3 active tblptr bytes
 12738  001BD4                     	endif
 12739  001BD4  0009               	tblrd		*+
 12740  001BD6  CFF5 F08F          	movff	tablat,?_scale
 12741  001BDA  0009               	tblrd		*+
 12742  001BDC  CFF5 F090          	movff	tablat,?_scale+1
 12743  001BE0  000A               	tblrd		*-
 12744  001BE2  CFF5 F091          	movff	tablat,?_scale+2
 12745  001BE6  0012               	return	
 12746  001BE8                     __end_of_scale:
 12747                           	opt stack 0
 12748                           tblptru	equ	0xFF8
 12749                           tblptrh	equ	0xFF7
 12750                           tblptrl	equ	0xFF6
 12751                           tablat	equ	0xFF5
 12752                           prodh	equ	0xFF4
 12753                           prodl	equ	0xFF3
 12754                           intcon	equ	0xFF2
 12755                           postinc0	equ	0xFEE
 12756                           wreg	equ	0xFE8
 12757                           indf1	equ	0xFE7
 12758                           postdec1	equ	0xFE5
 12759                           fsr1h	equ	0xFE2
 12760                           fsr1l	equ	0xFE1
 12761                           indf2	equ	0xFDF
 12762                           postinc2	equ	0xFDE
 12763                           postdec2	equ	0xFDD
 12764                           plusw2	equ	0xFDB
 12765                           fsr2h	equ	0xFDA
 12766                           fsr2l	equ	0xFD9
 12767                           status	equ	0xFD8
 12768                           
 12769 ;; *************** function _isdigit *****************
 12770 ;; Defined at:
 12771 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\isdigit.c"
 12772 ;; Parameters:    Size  Location     Type
 12773 ;;  c               1    wreg     unsigned char 
 12774 ;; Auto vars:     Size  Location     Type
 12775 ;;  c               1    2[BANK0 ] unsigned char 
 12776 ;; Return value:  Size  Location     Type
 12777 ;;		None               void
 12778 ;; Registers used:
 12779 ;;		wreg, status,2, status,0
 12780 ;; Tracked objects:
 12781 ;;		On entry : 0/0
 12782 ;;		On exit  : 0/0
 12783 ;;		Unchanged: 0/0
 12784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12785 ;;      Params:         0       0       0       0       0       0       0       0       0
 12786 ;;      Locals:         0       2       0       0       0       0       0       0       0
 12787 ;;      Temps:          0       1       0       0       0       0       0       0       0
 12788 ;;      Totals:         0       3       0       0       0       0       0       0       0
 12789 ;;Total ram usage:        3 bytes
 12790 ;; Hardware stack levels used:    1
 12791 ;; Hardware stack levels required when called:   10
 12792 ;; This function calls:
 12793 ;;		Nothing
 12794 ;; This function is called by:
 12795 ;;		_sprintf
 12796 ;; This function uses a non-reentrant model
 12797 ;;
 12798                           
 12799                           	psect	text34
 12800  00567C                     __ptext34:
 12801                           	opt stack 0
 12802  00567C                     _isdigit:
 12803                           	opt stack 19
 12804                           
 12805                           ;incstack = 0
 12806                           ;isdigit@c stored from wreg
 12807  00567C  0100               	movlb	0	; () banked
 12808  00567E  6F62               	movwf	isdigit@c& (0+255),b
 12809  005680  0E00               	movlw	0
 12810  005682  0100               	movlb	0	; () banked
 12811  005684  6F61               	movwf	_isdigit$5327& (0+255),b
 12812                           
 12813                           ; BSR set to: 0
 12814  005686  0E3A               	movlw	58
 12815  005688  6162               	cpfslt	isdigit@c& (0+255),b
 12816  00568A  D005               	goto	l3129
 12817                           
 12818                           ; BSR set to: 0
 12819  00568C  0E2F               	movlw	47
 12820  00568E  6562               	cpfsgt	isdigit@c& (0+255),b
 12821  005690  D002               	goto	l3129
 12822                           
 12823                           ; BSR set to: 0
 12824  005692  0E01               	movlw	1
 12825  005694  6F61               	movwf	_isdigit$5327& (0+255),b
 12826  005696                     l3129:
 12827                           
 12828                           ; BSR set to: 0
 12829                           
 12830                           ; BSR set to: 0
 12831  005696  C061  F060         	movff	_isdigit$5327,??_isdigit
 12832  00569A  3160               	rrcf	??_isdigit& (0+255),w,b
 12833  00569C  0012               	return	
 12834  00569E                     __end_of_isdigit:
 12835                           	opt stack 0
 12836                           tblptru	equ	0xFF8
 12837                           tblptrh	equ	0xFF7
 12838                           tblptrl	equ	0xFF6
 12839                           tablat	equ	0xFF5
 12840                           prodh	equ	0xFF4
 12841                           prodl	equ	0xFF3
 12842                           intcon	equ	0xFF2
 12843                           postinc0	equ	0xFEE
 12844                           wreg	equ	0xFE8
 12845                           indf1	equ	0xFE7
 12846                           postdec1	equ	0xFE5
 12847                           fsr1h	equ	0xFE2
 12848                           fsr1l	equ	0xFE1
 12849                           indf2	equ	0xFDF
 12850                           postinc2	equ	0xFDE
 12851                           postdec2	equ	0xFDD
 12852                           plusw2	equ	0xFDB
 12853                           fsr2h	equ	0xFDA
 12854                           fsr2l	equ	0xFD9
 12855                           status	equ	0xFD8
 12856                           
 12857 ;; *************** function _fround *****************
 12858 ;; Defined at:
 12859 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\doprnt.c"
 12860 ;; Parameters:    Size  Location     Type
 12861 ;;  prec            1    wreg     unsigned char 
 12862 ;; Auto vars:     Size  Location     Type
 12863 ;;  prec            1   56[BANK0 ] unsigned char 
 12864 ;; Return value:  Size  Location     Type
 12865 ;;                  3   47[BANK0 ] unsigned char 
 12866 ;; Registers used:
 12867 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12868 ;; Tracked objects:
 12869 ;;		On entry : 0/0
 12870 ;;		On exit  : 0/0
 12871 ;;		Unchanged: 0/0
 12872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12873 ;;      Params:         0       3       0       0       0       0       0       0       0
 12874 ;;      Locals:         0       7       0       0       0       0       0       0       0
 12875 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12876 ;;      Totals:         0      10       0       0       0       0       0       0       0
 12877 ;;Total ram usage:       10 bytes
 12878 ;; Hardware stack levels used:    1
 12879 ;; Hardware stack levels required when called:   12
 12880 ;; This function calls:
 12881 ;;		___awdiv
 12882 ;;		___awmod
 12883 ;;		___ftmul
 12884 ;;		___wmul
 12885 ;; This function is called by:
 12886 ;;		_sprintf
 12887 ;; This function uses a non-reentrant model
 12888 ;;
 12889                           
 12890                           	psect	text35
 12891  0024D2                     __ptext35:
 12892                           	opt stack 0
 12893  0024D2                     _fround:
 12894                           	opt stack 17
 12895                           
 12896                           ; BSR set to: 0
 12897                           ;incstack = 0
 12898                           ;fround@prec stored from wreg
 12899  0024D2  0100               	movlb	0	; () banked
 12900  0024D4  6F98               	movwf	fround@prec& (0+255),b
 12901                           
 12902                           ;doprnt.c: 413: if(prec>=110)
 12903  0024D6  0E6D               	movlw	109
 12904  0024D8  0100               	movlb	0	; () banked
 12905  0024DA  6598               	cpfsgt	fround@prec& (0+255),b
 12906  0024DC  D0A6               	goto	l2605
 12907                           
 12908                           ; BSR set to: 0
 12909                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 12910  0024DE  0E00               	movlw	0
 12911  0024E0  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12912  0024E2  0E03               	movlw	3
 12913  0024E4  6F70               	movwf	___wmul@multiplicand& (0+255),b
 12914  0024E6  0E00               	movlw	0
 12915  0024E8  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 12916  0024EA  0E0A               	movlw	10
 12917  0024EC  6F68               	movwf	___awdiv@divisor& (0+255),b
 12918  0024EE  0E00               	movlw	0
 12919  0024F0  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 12920  0024F2  0E64               	movlw	100
 12921  0024F4  6F62               	movwf	___awmod@divisor& (0+255),b
 12922  0024F6  C098  F060         	movff	fround@prec,___awmod@dividend
 12923  0024FA  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 12924  0024FC  EC50  F026         	call	___awmod	;wreg free
 12925  002500  C060  F066         	movff	?___awmod,___awdiv@dividend
 12926  002504  C061  F067         	movff	?___awmod+1,___awdiv@dividend+1
 12927  002508  EC98  F024         	call	___awdiv	;wreg free
 12928  00250C  0E09               	movlw	9
 12929  00250E  0100               	movlb	0	; () banked
 12930  002510  2566               	addwf	?___awdiv& (0+255),w,b
 12931  002512  6F6E               	movwf	___wmul@multiplier& (0+255),b
 12932  002514  0E00               	movlw	0
 12933  002516  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 12934  002518  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 12935  00251A  ECCC  F02A         	call	___wmul	;wreg free
 12936  00251E  0E4A               	movlw	low __npowers_
 12937  002520  0100               	movlb	0	; () banked
 12938  002522  256E               	addwf	?___wmul& (0+255),w,b
 12939  002524  6EF6               	movwf	tblptrl,c
 12940  002526  0E7C               	movlw	high __npowers_
 12941  002528  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 12942  00252A  6EF7               	movwf	tblptrh,c
 12943  00252C                     	if	0	;There are less than 3 active tblptr bytes
 12944  00252C                     	endif
 12945  00252C  0009               	tblrd		*+
 12946  00252E  CFF5 F083          	movff	tablat,___ftmul@f2
 12947  002532  0009               	tblrd		*+
 12948  002534  CFF5 F084          	movff	tablat,___ftmul@f2+1
 12949  002538  000A               	tblrd		*-
 12950  00253A  CFF5 F085          	movff	tablat,___ftmul@f2+2
 12951  00253E  0E00               	movlw	0
 12952  002540  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 12953  002542  0E64               	movlw	100
 12954  002544  6F68               	movwf	___awdiv@divisor& (0+255),b
 12955  002546  C098  F066         	movff	fround@prec,___awdiv@dividend
 12956  00254A  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
 12957  00254C  EC98  F024         	call	___awdiv	;wreg free
 12958  002550  0E12               	movlw	18
 12959  002552  0100               	movlb	0	; () banked
 12960  002554  2566               	addwf	?___awdiv& (0+255),w,b
 12961  002556  6F6E               	movwf	___wmul@multiplier& (0+255),b
 12962  002558  0E00               	movlw	0
 12963  00255A  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 12964  00255C  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 12965  00255E  0E00               	movlw	0
 12966  002560  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12967  002562  0E03               	movlw	3
 12968  002564  6F70               	movwf	___wmul@multiplicand& (0+255),b
 12969  002566  ECCC  F02A         	call	___wmul	;wreg free
 12970  00256A  0E4A               	movlw	low __npowers_
 12971  00256C  0100               	movlb	0	; () banked
 12972  00256E  256E               	addwf	?___wmul& (0+255),w,b
 12973  002570  6EF6               	movwf	tblptrl,c
 12974  002572  0E7C               	movlw	high __npowers_
 12975  002574  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 12976  002576  6EF7               	movwf	tblptrh,c
 12977  002578                     	if	0	;There are less than 3 active tblptr bytes
 12978  002578                     	endif
 12979  002578  0009               	tblrd		*+
 12980  00257A  CFF5 F080          	movff	tablat,___ftmul@f1
 12981  00257E  0009               	tblrd		*+
 12982  002580  CFF5 F081          	movff	tablat,___ftmul@f1+1
 12983  002584  000A               	tblrd		*-
 12984  002586  CFF5 F082          	movff	tablat,___ftmul@f1+2
 12985  00258A  EC24  F01D         	call	___ftmul	;wreg free
 12986  00258E  C080  F095         	movff	?___ftmul,_fround$5890
 12987  002592  C081  F096         	movff	?___ftmul+1,_fround$5890+1
 12988  002596  C082  F097         	movff	?___ftmul+2,_fround$5890+2
 12989                           
 12990                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 12991  00259A  0E00               	movlw	0
 12992  00259C  0100               	movlb	0	; () banked
 12993  00259E  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12994  0025A0  0E03               	movlw	3
 12995  0025A2  6F70               	movwf	___wmul@multiplicand& (0+255),b
 12996  0025A4  0E00               	movlw	0
 12997  0025A6  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 12998  0025A8  0E0A               	movlw	10
 12999  0025AA  6F62               	movwf	___awmod@divisor& (0+255),b
 13000  0025AC  C098  F060         	movff	fround@prec,___awmod@dividend
 13001  0025B0  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 13002  0025B2  EC50  F026         	call	___awmod	;wreg free
 13003  0025B6  C060  F06E         	movff	?___awmod,___wmul@multiplier
 13004  0025BA  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
 13005  0025BE  ECCC  F02A         	call	___wmul	;wreg free
 13006  0025C2  0E4A               	movlw	low __npowers_
 13007  0025C4  0100               	movlb	0	; () banked
 13008  0025C6  256E               	addwf	?___wmul& (0+255),w,b
 13009  0025C8  6EF6               	movwf	tblptrl,c
 13010  0025CA  0E7C               	movlw	high __npowers_
 13011  0025CC  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 13012  0025CE  6EF7               	movwf	tblptrh,c
 13013  0025D0                     	if	0	;There are less than 3 active tblptr bytes
 13014  0025D0                     	endif
 13015  0025D0  0009               	tblrd		*+
 13016  0025D2  CFF5 F083          	movff	tablat,___ftmul@f2
 13017  0025D6  0009               	tblrd		*+
 13018  0025D8  CFF5 F084          	movff	tablat,___ftmul@f2+1
 13019  0025DC  000A               	tblrd		*-
 13020  0025DE  CFF5 F085          	movff	tablat,___ftmul@f2+2
 13021  0025E2  C095  F080         	movff	_fround$5890,___ftmul@f1
 13022  0025E6  C096  F081         	movff	_fround$5890+1,___ftmul@f1+1
 13023  0025EA  C097  F082         	movff	_fround$5890+2,___ftmul@f1+2
 13024  0025EE  EC24  F01D         	call	___ftmul	;wreg free
 13025  0025F2  C080  F092         	movff	?___ftmul,_fround$5891
 13026  0025F6  C081  F093         	movff	?___ftmul+1,_fround$5891+1
 13027  0025FA  C082  F094         	movff	?___ftmul+2,_fround$5891+2
 13028                           
 13029                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 13030  0025FE  C092  F080         	movff	_fround$5891,___ftmul@f1
 13031  002602  C093  F081         	movff	_fround$5891+1,___ftmul@f1+1
 13032  002606  C094  F082         	movff	_fround$5891+2,___ftmul@f1+2
 13033  00260A  0E00               	movlw	0
 13034  00260C  0100               	movlb	0	; () banked
 13035  00260E  6F83               	movwf	___ftmul@f2& (0+255),b
 13036  002610  0E00               	movlw	0
 13037  002612  6F84               	movwf	(___ftmul@f2+1)& (0+255),b
 13038  002614  0E3F               	movlw	63
 13039  002616  6F85               	movwf	(___ftmul@f2+2)& (0+255),b
 13040  002618  EC24  F01D         	call	___ftmul	;wreg free
 13041  00261C  C080  F08F         	movff	?___ftmul,?_fround
 13042  002620  C081  F090         	movff	?___ftmul+1,?_fround+1
 13043  002624  C082  F091         	movff	?___ftmul+2,?_fround+2
 13044  002628  0012               	return	
 13045  00262A                     l2605:
 13046                           
 13047                           ;doprnt.c: 415: else if(prec > 10)
 13048  00262A  0E0A               	movlw	10
 13049  00262C  0100               	movlb	0	; () banked
 13050  00262E  6598               	cpfsgt	fround@prec& (0+255),b
 13051  002630  D067               	goto	l2608
 13052                           
 13053                           ; BSR set to: 0
 13054                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 13055  002632  0E00               	movlw	0
 13056  002634  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 13057  002636  0E03               	movlw	3
 13058  002638  6F70               	movwf	___wmul@multiplicand& (0+255),b
 13059  00263A  0E00               	movlw	0
 13060  00263C  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 13061  00263E  0E0A               	movlw	10
 13062  002640  6F62               	movwf	___awmod@divisor& (0+255),b
 13063  002642  C098  F060         	movff	fround@prec,___awmod@dividend
 13064  002646  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 13065  002648  EC50  F026         	call	___awmod	;wreg free
 13066  00264C  C060  F06E         	movff	?___awmod,___wmul@multiplier
 13067  002650  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
 13068  002654  ECCC  F02A         	call	___wmul	;wreg free
 13069  002658  0E4A               	movlw	low __npowers_
 13070  00265A  0100               	movlb	0	; () banked
 13071  00265C  256E               	addwf	?___wmul& (0+255),w,b
 13072  00265E  6EF6               	movwf	tblptrl,c
 13073  002660  0E7C               	movlw	high __npowers_
 13074  002662  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 13075  002664  6EF7               	movwf	tblptrh,c
 13076  002666                     	if	0	;There are less than 3 active tblptr bytes
 13077  002666                     	endif
 13078  002666  0009               	tblrd		*+
 13079  002668  CFF5 F083          	movff	tablat,___ftmul@f2
 13080  00266C  0009               	tblrd		*+
 13081  00266E  CFF5 F084          	movff	tablat,___ftmul@f2+1
 13082  002672  000A               	tblrd		*-
 13083  002674  CFF5 F085          	movff	tablat,___ftmul@f2+2
 13084  002678  0E00               	movlw	0
 13085  00267A  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 13086  00267C  0E0A               	movlw	10
 13087  00267E  6F68               	movwf	___awdiv@divisor& (0+255),b
 13088  002680  C098  F066         	movff	fround@prec,___awdiv@dividend
 13089  002684  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
 13090  002686  EC98  F024         	call	___awdiv	;wreg free
 13091  00268A  0E09               	movlw	9
 13092  00268C  0100               	movlb	0	; () banked
 13093  00268E  2566               	addwf	?___awdiv& (0+255),w,b
 13094  002690  6F6E               	movwf	___wmul@multiplier& (0+255),b
 13095  002692  0E00               	movlw	0
 13096  002694  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 13097  002696  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 13098  002698  0E00               	movlw	0
 13099  00269A  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 13100  00269C  0E03               	movlw	3
 13101  00269E  6F70               	movwf	___wmul@multiplicand& (0+255),b
 13102  0026A0  ECCC  F02A         	call	___wmul	;wreg free
 13103  0026A4  0E4A               	movlw	low __npowers_
 13104  0026A6  0100               	movlb	0	; () banked
 13105  0026A8  256E               	addwf	?___wmul& (0+255),w,b
 13106  0026AA  6EF6               	movwf	tblptrl,c
 13107  0026AC  0E7C               	movlw	high __npowers_
 13108  0026AE  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 13109  0026B0  6EF7               	movwf	tblptrh,c
 13110  0026B2                     	if	0	;There are less than 3 active tblptr bytes
 13111  0026B2                     	endif
 13112  0026B2  0009               	tblrd		*+
 13113  0026B4  CFF5 F080          	movff	tablat,___ftmul@f1
 13114  0026B8  0009               	tblrd		*+
 13115  0026BA  CFF5 F081          	movff	tablat,___ftmul@f1+1
 13116  0026BE  000A               	tblrd		*-
 13117  0026C0  CFF5 F082          	movff	tablat,___ftmul@f1+2
 13118  0026C4  EC24  F01D         	call	___ftmul	;wreg free
 13119  0026C8  C080  F095         	movff	?___ftmul,_fround$5890
 13120  0026CC  C081  F096         	movff	?___ftmul+1,_fround$5890+1
 13121  0026D0  C082  F097         	movff	?___ftmul+2,_fround$5890+2
 13122                           
 13123                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 13124  0026D4  C095  F080         	movff	_fround$5890,___ftmul@f1
 13125  0026D8  C096  F081         	movff	_fround$5890+1,___ftmul@f1+1
 13126  0026DC  C097  F082         	movff	_fround$5890+2,___ftmul@f1+2
 13127  0026E0  0E00               	movlw	0
 13128  0026E2  0100               	movlb	0	; () banked
 13129  0026E4  6F83               	movwf	___ftmul@f2& (0+255),b
 13130  0026E6  0E00               	movlw	0
 13131  0026E8  6F84               	movwf	(___ftmul@f2+1)& (0+255),b
 13132  0026EA  0E3F               	movlw	63
 13133  0026EC  6F85               	movwf	(___ftmul@f2+2)& (0+255),b
 13134  0026EE  EC24  F01D         	call	___ftmul	;wreg free
 13135  0026F2  C080  F08F         	movff	?___ftmul,?_fround
 13136  0026F6  C081  F090         	movff	?___ftmul+1,?_fround+1
 13137  0026FA  C082  F091         	movff	?___ftmul+2,?_fround+2
 13138  0026FE  0012               	return	
 13139  002700                     l2608:
 13140                           
 13141                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 13142  002700  0100               	movlb	0	; () banked
 13143  002702  5198               	movf	fround@prec& (0+255),w,b
 13144  002704  0D03               	mullw	3
 13145  002706  0E4A               	movlw	low __npowers_
 13146  002708  24F3               	addwf	prodl,w,c
 13147  00270A  6EF6               	movwf	tblptrl,c
 13148  00270C  0E7C               	movlw	high __npowers_
 13149  00270E  20F4               	addwfc	prodh,w,c
 13150  002710  6EF7               	movwf	tblptrh,c
 13151  002712                     	if	0	;There are less than 3 active tblptr bytes
 13152  002712                     	endif
 13153  002712  0009               	tblrd		*+
 13154  002714  CFF5 F080          	movff	tablat,___ftmul@f1
 13155  002718  0009               	tblrd		*+
 13156  00271A  CFF5 F081          	movff	tablat,___ftmul@f1+1
 13157  00271E  000A               	tblrd		*-
 13158  002720  CFF5 F082          	movff	tablat,___ftmul@f1+2
 13159  002724  0E00               	movlw	0
 13160  002726  6F83               	movwf	___ftmul@f2& (0+255),b
 13161  002728  0E00               	movlw	0
 13162  00272A  6F84               	movwf	(___ftmul@f2+1)& (0+255),b
 13163  00272C  0E3F               	movlw	63
 13164  00272E  6F85               	movwf	(___ftmul@f2+2)& (0+255),b
 13165  002730  EC24  F01D         	call	___ftmul	;wreg free
 13166  002734  C080  F08F         	movff	?___ftmul,?_fround
 13167  002738  C081  F090         	movff	?___ftmul+1,?_fround+1
 13168  00273C  C082  F091         	movff	?___ftmul+2,?_fround+2
 13169  002740  0012               	return	
 13170  002742                     __end_of_fround:
 13171                           	opt stack 0
 13172                           tblptru	equ	0xFF8
 13173                           tblptrh	equ	0xFF7
 13174                           tblptrl	equ	0xFF6
 13175                           tablat	equ	0xFF5
 13176                           prodh	equ	0xFF4
 13177                           prodl	equ	0xFF3
 13178                           intcon	equ	0xFF2
 13179                           postinc0	equ	0xFEE
 13180                           wreg	equ	0xFE8
 13181                           indf1	equ	0xFE7
 13182                           postdec1	equ	0xFE5
 13183                           fsr1h	equ	0xFE2
 13184                           fsr1l	equ	0xFE1
 13185                           indf2	equ	0xFDF
 13186                           postinc2	equ	0xFDE
 13187                           postdec2	equ	0xFDD
 13188                           plusw2	equ	0xFDB
 13189                           fsr2h	equ	0xFDA
 13190                           fsr2l	equ	0xFD9
 13191                           status	equ	0xFD8
 13192                           
 13193 ;; *************** function ___wmul *****************
 13194 ;; Defined at:
 13195 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\Umul16.c"
 13196 ;; Parameters:    Size  Location     Type
 13197 ;;  multiplier      2   14[BANK0 ] unsigned int 
 13198 ;;  multiplicand    2   16[BANK0 ] unsigned int 
 13199 ;; Auto vars:     Size  Location     Type
 13200 ;;  product         2   18[BANK0 ] unsigned int 
 13201 ;; Return value:  Size  Location     Type
 13202 ;;                  2   14[BANK0 ] unsigned int 
 13203 ;; Registers used:
 13204 ;;		wreg, status,2, status,0, prodl, prodh
 13205 ;; Tracked objects:
 13206 ;;		On entry : 0/0
 13207 ;;		On exit  : 0/0
 13208 ;;		Unchanged: 0/0
 13209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13210 ;;      Params:         0       4       0       0       0       0       0       0       0
 13211 ;;      Locals:         0       2       0       0       0       0       0       0       0
 13212 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13213 ;;      Totals:         0       6       0       0       0       0       0       0       0
 13214 ;;Total ram usage:        6 bytes
 13215 ;; Hardware stack levels used:    1
 13216 ;; Hardware stack levels required when called:   10
 13217 ;; This function calls:
 13218 ;;		Nothing
 13219 ;; This function is called by:
 13220 ;;		_fround
 13221 ;;		_scale
 13222 ;;		_sprintf
 13223 ;; This function uses a non-reentrant model
 13224 ;;
 13225                           
 13226                           	psect	text36
 13227  005598                     __ptext36:
 13228                           	opt stack 0
 13229  005598                     ___wmul:
 13230                           	opt stack 18
 13231                           
 13232                           ;incstack = 0
 13233  005598  0100               	movlb	0	; () banked
 13234  00559A  516E               	movf	___wmul@multiplier& (0+255),w,b
 13235  00559C  0370               	mulwf	___wmul@multiplicand& (0+255),b
 13236  00559E  CFF3 F072          	movff	prodl,___wmul@product
 13237  0055A2  CFF4 F073          	movff	prodh,___wmul@product+1
 13238  0055A6  516E               	movf	___wmul@multiplier& (0+255),w,b
 13239  0055A8  0371               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 13240  0055AA  50F3               	movf	prodl,w,c
 13241  0055AC  2773               	addwf	(___wmul@product+1)& (0+255),f,b
 13242  0055AE  516F               	movf	(___wmul@multiplier+1)& (0+255),w,b
 13243  0055B0  0370               	mulwf	___wmul@multiplicand& (0+255),b
 13244  0055B2  50F3               	movf	prodl,w,c
 13245  0055B4  2773               	addwf	(___wmul@product+1)& (0+255),f,b
 13246                           
 13247                           ; BSR set to: 0
 13248  0055B6  C072  F06E         	movff	___wmul@product,?___wmul
 13249  0055BA  C073  F06F         	movff	___wmul@product+1,?___wmul+1
 13250  0055BE  0012               	return	
 13251  0055C0                     __end_of___wmul:
 13252                           	opt stack 0
 13253                           tblptru	equ	0xFF8
 13254                           tblptrh	equ	0xFF7
 13255                           tblptrl	equ	0xFF6
 13256                           tablat	equ	0xFF5
 13257                           prodh	equ	0xFF4
 13258                           prodl	equ	0xFF3
 13259                           intcon	equ	0xFF2
 13260                           postinc0	equ	0xFEE
 13261                           wreg	equ	0xFE8
 13262                           indf1	equ	0xFE7
 13263                           postdec1	equ	0xFE5
 13264                           fsr1h	equ	0xFE2
 13265                           fsr1l	equ	0xFE1
 13266                           indf2	equ	0xFDF
 13267                           postinc2	equ	0xFDE
 13268                           postdec2	equ	0xFDD
 13269                           plusw2	equ	0xFDB
 13270                           fsr2h	equ	0xFDA
 13271                           fsr2l	equ	0xFD9
 13272                           status	equ	0xFD8
 13273                           
 13274 ;; *************** function ___ftmul *****************
 13275 ;; Defined at:
 13276 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftmul.c"
 13277 ;; Parameters:    Size  Location     Type
 13278 ;;  f1              3   32[BANK0 ] float 
 13279 ;;  f2              3   35[BANK0 ] float 
 13280 ;; Auto vars:     Size  Location     Type
 13281 ;;  f3_as_produc    3   42[BANK0 ] unsigned um
 13282 ;;  sign            1   46[BANK0 ] unsigned char 
 13283 ;;  cntr            1   45[BANK0 ] unsigned char 
 13284 ;;  exp             1   41[BANK0 ] unsigned char 
 13285 ;; Return value:  Size  Location     Type
 13286 ;;                  3   32[BANK0 ] float 
 13287 ;; Registers used:
 13288 ;;		wreg, status,2, status,0, cstack
 13289 ;; Tracked objects:
 13290 ;;		On entry : 0/0
 13291 ;;		On exit  : 0/0
 13292 ;;		Unchanged: 0/0
 13293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13294 ;;      Params:         0       6       0       0       0       0       0       0       0
 13295 ;;      Locals:         0       6       0       0       0       0       0       0       0
 13296 ;;      Temps:          0       3       0       0       0       0       0       0       0
 13297 ;;      Totals:         0      15       0       0       0       0       0       0       0
 13298 ;;Total ram usage:       15 bytes
 13299 ;; Hardware stack levels used:    1
 13300 ;; Hardware stack levels required when called:   11
 13301 ;; This function calls:
 13302 ;;		___ftpack
 13303 ;; This function is called by:
 13304 ;;		_main
 13305 ;;		_le_AD
 13306 ;;		_fround
 13307 ;;		_scale
 13308 ;;		_sprintf
 13309 ;; This function uses a non-reentrant model
 13310 ;;
 13311                           
 13312                           	psect	text37
 13313  003A48                     __ptext37:
 13314                           	opt stack 0
 13315  003A48                     ___ftmul:
 13316                           	opt stack 17
 13317                           
 13318                           ; BSR set to: 0
 13319                           ;incstack = 0
 13320  003A48  C082  F086         	movff	___ftmul@f1+2,??___ftmul
 13321  003A4C  0100               	movlb	0	; () banked
 13322  003A4E  6B87               	clrf	(??___ftmul+1)& (0+255),b
 13323  003A50  6B88               	clrf	(??___ftmul+2)& (0+255),b
 13324  003A52  3581               	rlcf	(___ftmul@f1+1)& (0+255),w,b
 13325  003A54  3786               	rlcf	??___ftmul& (0+255),f,b
 13326  003A56  E301               	bnc	u6841
 13327  003A58  8187               	bsf	(??___ftmul+1)& (0+255),0,b
 13328  003A5A                     u6841:
 13329  003A5A  5186               	movf	??___ftmul& (0+255),w,b
 13330  003A5C  6F89               	movwf	___ftmul@exp& (0+255),b
 13331  003A5E  5189               	movf	___ftmul@exp& (0+255),w,b
 13332  003A60  A4D8               	btfss	status,2,c
 13333  003A62  D007               	goto	l3093
 13334                           
 13335                           ; BSR set to: 0
 13336  003A64  0E00               	movlw	0
 13337  003A66  6F80               	movwf	?___ftmul& (0+255),b
 13338  003A68  0E00               	movlw	0
 13339  003A6A  6F81               	movwf	(?___ftmul+1)& (0+255),b
 13340  003A6C  0E00               	movlw	0
 13341  003A6E  6F82               	movwf	(?___ftmul+2)& (0+255),b
 13342                           
 13343                           ; BSR set to: 0
 13344  003A70  0012               	return	
 13345  003A72                     l3093:
 13346                           
 13347                           ; BSR set to: 0
 13348                           
 13349                           ; BSR set to: 0
 13350  003A72  C085  F086         	movff	___ftmul@f2+2,??___ftmul
 13351  003A76  6B87               	clrf	(??___ftmul+1)& (0+255),b
 13352  003A78  6B88               	clrf	(??___ftmul+2)& (0+255),b
 13353  003A7A  3584               	rlcf	(___ftmul@f2+1)& (0+255),w,b
 13354  003A7C  3786               	rlcf	??___ftmul& (0+255),f,b
 13355  003A7E  E301               	bnc	u6861
 13356  003A80  8187               	bsf	(??___ftmul+1)& (0+255),0,b
 13357  003A82                     u6861:
 13358  003A82  5186               	movf	??___ftmul& (0+255),w,b
 13359  003A84  6F8E               	movwf	___ftmul@sign& (0+255),b
 13360  003A86  518E               	movf	___ftmul@sign& (0+255),w,b
 13361  003A88  A4D8               	btfss	status,2,c
 13362  003A8A  D007               	goto	l3095
 13363                           
 13364                           ; BSR set to: 0
 13365  003A8C  0E00               	movlw	0
 13366  003A8E  6F80               	movwf	?___ftmul& (0+255),b
 13367  003A90  0E00               	movlw	0
 13368  003A92  6F81               	movwf	(?___ftmul+1)& (0+255),b
 13369  003A94  0E00               	movlw	0
 13370  003A96  6F82               	movwf	(?___ftmul+2)& (0+255),b
 13371                           
 13372                           ; BSR set to: 0
 13373  003A98  0012               	return	
 13374  003A9A                     l3095:
 13375                           
 13376                           ; BSR set to: 0
 13377                           
 13378                           ; BSR set to: 0
 13379  003A9A  518E               	movf	___ftmul@sign& (0+255),w,b
 13380  003A9C  0F7B               	addlw	123
 13381  003A9E  2789               	addwf	___ftmul@exp& (0+255),f,b
 13382                           
 13383                           ; BSR set to: 0
 13384  003AA0  C082  F08E         	movff	___ftmul@f1+2,___ftmul@sign
 13385  003AA4  5185               	movf	(___ftmul@f2+2)& (0+255),w,b
 13386  003AA6  1B8E               	xorwf	___ftmul@sign& (0+255),f,b
 13387  003AA8  0E80               	movlw	128
 13388  003AAA  178E               	andwf	___ftmul@sign& (0+255),f,b
 13389                           
 13390                           ; BSR set to: 0
 13391  003AAC  8F81               	bsf	(___ftmul@f1+1)& (0+255),7,b
 13392                           
 13393                           ; BSR set to: 0
 13394  003AAE  8F84               	bsf	(___ftmul@f2+1)& (0+255),7,b
 13395                           
 13396                           ; BSR set to: 0
 13397  003AB0  0EFF               	movlw	255
 13398  003AB2  1783               	andwf	___ftmul@f2& (0+255),f,b
 13399  003AB4  0EFF               	movlw	255
 13400  003AB6  1784               	andwf	(___ftmul@f2+1)& (0+255),f,b
 13401  003AB8  0E00               	movlw	0
 13402  003ABA  1785               	andwf	(___ftmul@f2+2)& (0+255),f,b
 13403                           
 13404                           ; BSR set to: 0
 13405  003ABC  0E00               	movlw	0
 13406  003ABE  6F8A               	movwf	___ftmul@f3_as_product& (0+255),b
 13407  003AC0  0E00               	movlw	0
 13408  003AC2  6F8B               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
 13409  003AC4  0E00               	movlw	0
 13410  003AC6  6F8C               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
 13411                           
 13412                           ; BSR set to: 0
 13413  003AC8  0E07               	movlw	7
 13414  003ACA  6F8D               	movwf	___ftmul@cntr& (0+255),b
 13415  003ACC                     
 13416                           ; BSR set to: 0
 13417                           
 13418                           ; BSR set to: 0
 13419  003ACC  A180               	btfss	___ftmul@f1& (0+255),0,b
 13420  003ACE  D006               	goto	l3097
 13421                           
 13422                           ; BSR set to: 0
 13423  003AD0  5183               	movf	___ftmul@f2& (0+255),w,b
 13424  003AD2  278A               	addwf	___ftmul@f3_as_product& (0+255),f,b
 13425  003AD4  5184               	movf	(___ftmul@f2+1)& (0+255),w,b
 13426  003AD6  238B               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 13427  003AD8  5185               	movf	(___ftmul@f2+2)& (0+255),w,b
 13428  003ADA  238C               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 13429  003ADC                     l3097:
 13430                           
 13431                           ; BSR set to: 0
 13432                           
 13433                           ; BSR set to: 0
 13434  003ADC  90D8               	bcf	status,0,c
 13435  003ADE  3382               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 13436  003AE0  3381               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 13437  003AE2  3380               	rrcf	___ftmul@f1& (0+255),f,b
 13438  003AE4  90D8               	bcf	status,0,c
 13439  003AE6  3783               	rlcf	___ftmul@f2& (0+255),f,b
 13440  003AE8  3784               	rlcf	(___ftmul@f2+1)& (0+255),f,b
 13441  003AEA  3785               	rlcf	(___ftmul@f2+2)& (0+255),f,b
 13442                           
 13443                           ; BSR set to: 0
 13444  003AEC  2F8D               	decfsz	___ftmul@cntr& (0+255),f,b
 13445  003AEE  D7EE               	goto	l3096
 13446                           
 13447                           ; BSR set to: 0
 13448                           
 13449                           ; BSR set to: 0
 13450  003AF0  0E09               	movlw	9
 13451  003AF2  6F8D               	movwf	___ftmul@cntr& (0+255),b
 13452  003AF4                     
 13453                           ; BSR set to: 0
 13454                           
 13455                           ; BSR set to: 0
 13456  003AF4  A180               	btfss	___ftmul@f1& (0+255),0,b
 13457  003AF6  D006               	goto	l3100
 13458                           
 13459                           ; BSR set to: 0
 13460  003AF8  5183               	movf	___ftmul@f2& (0+255),w,b
 13461  003AFA  278A               	addwf	___ftmul@f3_as_product& (0+255),f,b
 13462  003AFC  5184               	movf	(___ftmul@f2+1)& (0+255),w,b
 13463  003AFE  238B               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 13464  003B00  5185               	movf	(___ftmul@f2+2)& (0+255),w,b
 13465  003B02  238C               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 13466  003B04                     l3100:
 13467                           
 13468                           ; BSR set to: 0
 13469                           
 13470                           ; BSR set to: 0
 13471  003B04  90D8               	bcf	status,0,c
 13472  003B06  3382               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 13473  003B08  3381               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 13474  003B0A  3380               	rrcf	___ftmul@f1& (0+255),f,b
 13475  003B0C  90D8               	bcf	status,0,c
 13476  003B0E  338C               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
 13477  003B10  338B               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
 13478  003B12  338A               	rrcf	___ftmul@f3_as_product& (0+255),f,b
 13479                           
 13480                           ; BSR set to: 0
 13481  003B14  2F8D               	decfsz	___ftmul@cntr& (0+255),f,b
 13482  003B16  D7EE               	goto	l3099
 13483                           
 13484                           ; BSR set to: 0
 13485                           
 13486                           ; BSR set to: 0
 13487  003B18  C08A  F060         	movff	___ftmul@f3_as_product,___ftpack@arg
 13488  003B1C  C08B  F061         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
 13489  003B20  C08C  F062         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
 13490  003B24  C089  F063         	movff	___ftmul@exp,___ftpack@exp
 13491  003B28  C08E  F064         	movff	___ftmul@sign,___ftpack@sign
 13492  003B2C  ECE0  F020         	call	___ftpack	;wreg free
 13493  003B30  C060  F080         	movff	?___ftpack,?___ftmul
 13494  003B34  C061  F081         	movff	?___ftpack+1,?___ftmul+1
 13495  003B38  C062  F082         	movff	?___ftpack+2,?___ftmul+2
 13496  003B3C  0012               	return	
 13497  003B3E                     __end_of___ftmul:
 13498                           	opt stack 0
 13499                           tblptru	equ	0xFF8
 13500                           tblptrh	equ	0xFF7
 13501                           tblptrl	equ	0xFF6
 13502                           tablat	equ	0xFF5
 13503                           prodh	equ	0xFF4
 13504                           prodl	equ	0xFF3
 13505                           intcon	equ	0xFF2
 13506                           postinc0	equ	0xFEE
 13507                           wreg	equ	0xFE8
 13508                           indf1	equ	0xFE7
 13509                           postdec1	equ	0xFE5
 13510                           fsr1h	equ	0xFE2
 13511                           fsr1l	equ	0xFE1
 13512                           indf2	equ	0xFDF
 13513                           postinc2	equ	0xFDE
 13514                           postdec2	equ	0xFDD
 13515                           plusw2	equ	0xFDB
 13516                           fsr2h	equ	0xFDA
 13517                           fsr2l	equ	0xFD9
 13518                           status	equ	0xFD8
 13519                           
 13520 ;; *************** function ___awmod *****************
 13521 ;; Defined at:
 13522 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\awmod.c"
 13523 ;; Parameters:    Size  Location     Type
 13524 ;;  dividend        2    0[BANK0 ] int 
 13525 ;;  divisor         2    2[BANK0 ] int 
 13526 ;; Auto vars:     Size  Location     Type
 13527 ;;  sign            1    5[BANK0 ] unsigned char 
 13528 ;;  counter         1    4[BANK0 ] unsigned char 
 13529 ;; Return value:  Size  Location     Type
 13530 ;;                  2    0[BANK0 ] int 
 13531 ;; Registers used:
 13532 ;;		wreg, status,2, status,0
 13533 ;; Tracked objects:
 13534 ;;		On entry : 0/0
 13535 ;;		On exit  : 0/0
 13536 ;;		Unchanged: 0/0
 13537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13538 ;;      Params:         0       4       0       0       0       0       0       0       0
 13539 ;;      Locals:         0       2       0       0       0       0       0       0       0
 13540 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13541 ;;      Totals:         0       6       0       0       0       0       0       0       0
 13542 ;;Total ram usage:        6 bytes
 13543 ;; Hardware stack levels used:    1
 13544 ;; Hardware stack levels required when called:   10
 13545 ;; This function calls:
 13546 ;;		Nothing
 13547 ;; This function is called by:
 13548 ;;		_fround
 13549 ;;		_scale
 13550 ;; This function uses a non-reentrant model
 13551 ;;
 13552                           
 13553                           	psect	text38
 13554  004CA0                     __ptext38:
 13555                           	opt stack 0
 13556  004CA0                     ___awmod:
 13557                           	opt stack 18
 13558                           
 13559                           ;incstack = 0
 13560  004CA0  0E00               	movlw	0
 13561  004CA2  0100               	movlb	0	; () banked
 13562  004CA4  6F65               	movwf	___awmod@sign& (0+255),b
 13563                           
 13564                           ; BSR set to: 0
 13565  004CA6  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
 13566  004CA8  D006               	goto	l2946
 13567                           
 13568                           ; BSR set to: 0
 13569  004CAA  6D60               	negf	___awmod@dividend& (0+255),b
 13570  004CAC  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 13571  004CAE  B0D8               	btfsc	status,0,c
 13572  004CB0  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 13573                           
 13574                           ; BSR set to: 0
 13575  004CB2  0E01               	movlw	1
 13576  004CB4  6F65               	movwf	___awmod@sign& (0+255),b
 13577  004CB6                     l2946:
 13578                           
 13579                           ; BSR set to: 0
 13580                           
 13581                           ; BSR set to: 0
 13582  004CB6  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 13583  004CB8  D004               	goto	l2947
 13584                           
 13585                           ; BSR set to: 0
 13586  004CBA  6D62               	negf	___awmod@divisor& (0+255),b
 13587  004CBC  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 13588  004CBE  B0D8               	btfsc	status,0,c
 13589  004CC0  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 13590  004CC2                     l2947:
 13591                           
 13592                           ; BSR set to: 0
 13593                           
 13594                           ; BSR set to: 0
 13595  004CC2  5162               	movf	___awmod@divisor& (0+255),w,b
 13596  004CC4  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 13597  004CC6  B4D8               	btfsc	status,2,c
 13598  004CC8  D018               	goto	l2954
 13599                           
 13600                           ; BSR set to: 0
 13601  004CCA  0E01               	movlw	1
 13602  004CCC  6F64               	movwf	___awmod@counter& (0+255),b
 13603  004CCE  D004               	goto	l2949
 13604  004CD0                     
 13605                           ; BSR set to: 0
 13606                           
 13607                           ; BSR set to: 0
 13608  004CD0  90D8               	bcf	status,0,c
 13609  004CD2  3762               	rlcf	___awmod@divisor& (0+255),f,b
 13610  004CD4  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 13611  004CD6  2B64               	incf	___awmod@counter& (0+255),f,b
 13612  004CD8                     l2949:
 13613                           
 13614                           ; BSR set to: 0
 13615                           
 13616                           ; BSR set to: 0
 13617  004CD8  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 13618  004CDA  D7FA               	goto	l2950
 13619  004CDC                     u6990:
 13620                           
 13621                           ; BSR set to: 0
 13622                           
 13623                           ; BSR set to: 0
 13624                           
 13625                           ; BSR set to: 0
 13626  004CDC  5162               	movf	___awmod@divisor& (0+255),w,b
 13627  004CDE  5D60               	subwf	___awmod@dividend& (0+255),w,b
 13628  004CE0  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 13629  004CE2  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 13630  004CE4  A0D8               	btfss	status,0,c
 13631  004CE6  D004               	goto	l2953
 13632                           
 13633                           ; BSR set to: 0
 13634  004CE8  5162               	movf	___awmod@divisor& (0+255),w,b
 13635  004CEA  5F60               	subwf	___awmod@dividend& (0+255),f,b
 13636  004CEC  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 13637  004CEE  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 13638  004CF0                     l2953:
 13639                           
 13640                           ; BSR set to: 0
 13641                           
 13642                           ; BSR set to: 0
 13643  004CF0  90D8               	bcf	status,0,c
 13644  004CF2  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 13645  004CF4  3362               	rrcf	___awmod@divisor& (0+255),f,b
 13646                           
 13647                           ; BSR set to: 0
 13648  004CF6  2F64               	decfsz	___awmod@counter& (0+255),f,b
 13649  004CF8  D7F1               	goto	u6990
 13650  004CFA                     l2954:
 13651                           
 13652                           ; BSR set to: 0
 13653                           
 13654                           ; BSR set to: 0
 13655                           
 13656                           ; BSR set to: 0
 13657  004CFA  5165               	movf	___awmod@sign& (0+255),w,b
 13658  004CFC  B4D8               	btfsc	status,2,c
 13659  004CFE  D004               	goto	l2955
 13660                           
 13661                           ; BSR set to: 0
 13662  004D00  6D60               	negf	___awmod@dividend& (0+255),b
 13663  004D02  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 13664  004D04  B0D8               	btfsc	status,0,c
 13665  004D06  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 13666  004D08                     l2955:
 13667                           
 13668                           ; BSR set to: 0
 13669                           
 13670                           ; BSR set to: 0
 13671  004D08  C060  F060         	movff	___awmod@dividend,?___awmod
 13672  004D0C  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 13673  004D10  0012               	return	
 13674  004D12                     __end_of___awmod:
 13675                           	opt stack 0
 13676                           tblptru	equ	0xFF8
 13677                           tblptrh	equ	0xFF7
 13678                           tblptrl	equ	0xFF6
 13679                           tablat	equ	0xFF5
 13680                           prodh	equ	0xFF4
 13681                           prodl	equ	0xFF3
 13682                           intcon	equ	0xFF2
 13683                           postinc0	equ	0xFEE
 13684                           wreg	equ	0xFE8
 13685                           indf1	equ	0xFE7
 13686                           postdec1	equ	0xFE5
 13687                           fsr1h	equ	0xFE2
 13688                           fsr1l	equ	0xFE1
 13689                           indf2	equ	0xFDF
 13690                           postinc2	equ	0xFDE
 13691                           postdec2	equ	0xFDD
 13692                           plusw2	equ	0xFDB
 13693                           fsr2h	equ	0xFDA
 13694                           fsr2l	equ	0xFD9
 13695                           status	equ	0xFD8
 13696                           
 13697 ;; *************** function ___awdiv *****************
 13698 ;; Defined at:
 13699 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\awdiv.c"
 13700 ;; Parameters:    Size  Location     Type
 13701 ;;  dividend        2    6[BANK0 ] int 
 13702 ;;  divisor         2    8[BANK0 ] int 
 13703 ;; Auto vars:     Size  Location     Type
 13704 ;;  quotient        2   12[BANK0 ] int 
 13705 ;;  sign            1   11[BANK0 ] unsigned char 
 13706 ;;  counter         1   10[BANK0 ] unsigned char 
 13707 ;; Return value:  Size  Location     Type
 13708 ;;                  2    6[BANK0 ] int 
 13709 ;; Registers used:
 13710 ;;		wreg, status,2, status,0
 13711 ;; Tracked objects:
 13712 ;;		On entry : 0/0
 13713 ;;		On exit  : 0/0
 13714 ;;		Unchanged: 0/0
 13715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13716 ;;      Params:         0       4       0       0       0       0       0       0       0
 13717 ;;      Locals:         0       4       0       0       0       0       0       0       0
 13718 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13719 ;;      Totals:         0       8       0       0       0       0       0       0       0
 13720 ;;Total ram usage:        8 bytes
 13721 ;; Hardware stack levels used:    1
 13722 ;; Hardware stack levels required when called:   10
 13723 ;; This function calls:
 13724 ;;		Nothing
 13725 ;; This function is called by:
 13726 ;;		_fround
 13727 ;;		_scale
 13728 ;;		_sprintf
 13729 ;; This function uses a non-reentrant model
 13730 ;;
 13731                           
 13732                           	psect	text39
 13733  004930                     __ptext39:
 13734                           	opt stack 0
 13735  004930                     ___awdiv:
 13736                           	opt stack 18
 13737                           
 13738                           ; BSR set to: 0
 13739                           ;incstack = 0
 13740  004930  0E00               	movlw	0
 13741  004932  0100               	movlb	0	; () banked
 13742  004934  6F6B               	movwf	___awdiv@sign& (0+255),b
 13743                           
 13744                           ; BSR set to: 0
 13745  004936  AF69               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 13746  004938  D006               	goto	l2933
 13747                           
 13748                           ; BSR set to: 0
 13749  00493A  6D68               	negf	___awdiv@divisor& (0+255),b
 13750  00493C  1F69               	comf	(___awdiv@divisor+1)& (0+255),f,b
 13751  00493E  B0D8               	btfsc	status,0,c
 13752  004940  2B69               	incf	(___awdiv@divisor+1)& (0+255),f,b
 13753                           
 13754                           ; BSR set to: 0
 13755  004942  0E01               	movlw	1
 13756  004944  6F6B               	movwf	___awdiv@sign& (0+255),b
 13757  004946                     l2933:
 13758                           
 13759                           ; BSR set to: 0
 13760                           
 13761                           ; BSR set to: 0
 13762  004946  AF67               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 13763  004948  D006               	goto	l2934
 13764                           
 13765                           ; BSR set to: 0
 13766  00494A  6D66               	negf	___awdiv@dividend& (0+255),b
 13767  00494C  1F67               	comf	(___awdiv@dividend+1)& (0+255),f,b
 13768  00494E  B0D8               	btfsc	status,0,c
 13769  004950  2B67               	incf	(___awdiv@dividend+1)& (0+255),f,b
 13770                           
 13771                           ; BSR set to: 0
 13772  004952  0E01               	movlw	1
 13773  004954  1B6B               	xorwf	___awdiv@sign& (0+255),f,b
 13774  004956                     l2934:
 13775                           
 13776                           ; BSR set to: 0
 13777                           
 13778                           ; BSR set to: 0
 13779  004956  0E00               	movlw	0
 13780  004958  6F6D               	movwf	(___awdiv@quotient+1)& (0+255),b
 13781  00495A  0E00               	movlw	0
 13782  00495C  6F6C               	movwf	___awdiv@quotient& (0+255),b
 13783                           
 13784                           ; BSR set to: 0
 13785  00495E  5168               	movf	___awdiv@divisor& (0+255),w,b
 13786  004960  1169               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 13787  004962  B4D8               	btfsc	status,2,c
 13788  004964  D01C               	goto	l2941
 13789                           
 13790                           ; BSR set to: 0
 13791  004966  0E01               	movlw	1
 13792  004968  6F6A               	movwf	___awdiv@counter& (0+255),b
 13793  00496A  D004               	goto	l2936
 13794  00496C                     
 13795                           ; BSR set to: 0
 13796                           
 13797                           ; BSR set to: 0
 13798  00496C  90D8               	bcf	status,0,c
 13799  00496E  3768               	rlcf	___awdiv@divisor& (0+255),f,b
 13800  004970  3769               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 13801  004972  2B6A               	incf	___awdiv@counter& (0+255),f,b
 13802  004974                     l2936:
 13803                           
 13804                           ; BSR set to: 0
 13805                           
 13806                           ; BSR set to: 0
 13807  004974  AF69               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 13808  004976  D7FA               	goto	l2937
 13809  004978                     u6930:
 13810                           
 13811                           ; BSR set to: 0
 13812                           
 13813                           ; BSR set to: 0
 13814                           
 13815                           ; BSR set to: 0
 13816  004978  90D8               	bcf	status,0,c
 13817  00497A  376C               	rlcf	___awdiv@quotient& (0+255),f,b
 13818  00497C  376D               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 13819                           
 13820                           ; BSR set to: 0
 13821  00497E  5168               	movf	___awdiv@divisor& (0+255),w,b
 13822  004980  5D66               	subwf	___awdiv@dividend& (0+255),w,b
 13823  004982  5169               	movf	(___awdiv@divisor+1)& (0+255),w,b
 13824  004984  5967               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 13825  004986  A0D8               	btfss	status,0,c
 13826  004988  D005               	goto	l2940
 13827                           
 13828                           ; BSR set to: 0
 13829  00498A  5168               	movf	___awdiv@divisor& (0+255),w,b
 13830  00498C  5F66               	subwf	___awdiv@dividend& (0+255),f,b
 13831  00498E  5169               	movf	(___awdiv@divisor+1)& (0+255),w,b
 13832  004990  5B67               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 13833                           
 13834                           ; BSR set to: 0
 13835  004992  816C               	bsf	___awdiv@quotient& (0+255),0,b
 13836  004994                     l2940:
 13837                           
 13838                           ; BSR set to: 0
 13839                           
 13840                           ; BSR set to: 0
 13841  004994  90D8               	bcf	status,0,c
 13842  004996  3369               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 13843  004998  3368               	rrcf	___awdiv@divisor& (0+255),f,b
 13844                           
 13845                           ; BSR set to: 0
 13846  00499A  2F6A               	decfsz	___awdiv@counter& (0+255),f,b
 13847  00499C  D7ED               	goto	u6930
 13848  00499E                     l2941:
 13849                           
 13850                           ; BSR set to: 0
 13851                           
 13852                           ; BSR set to: 0
 13853                           
 13854                           ; BSR set to: 0
 13855  00499E  516B               	movf	___awdiv@sign& (0+255),w,b
 13856  0049A0  B4D8               	btfsc	status,2,c
 13857  0049A2  D004               	goto	l2942
 13858                           
 13859                           ; BSR set to: 0
 13860  0049A4  6D6C               	negf	___awdiv@quotient& (0+255),b
 13861  0049A6  1F6D               	comf	(___awdiv@quotient+1)& (0+255),f,b
 13862  0049A8  B0D8               	btfsc	status,0,c
 13863  0049AA  2B6D               	incf	(___awdiv@quotient+1)& (0+255),f,b
 13864  0049AC                     l2942:
 13865                           
 13866                           ; BSR set to: 0
 13867                           
 13868                           ; BSR set to: 0
 13869  0049AC  C06C  F066         	movff	___awdiv@quotient,?___awdiv
 13870  0049B0  C06D  F067         	movff	___awdiv@quotient+1,?___awdiv+1
 13871  0049B4  0012               	return	
 13872  0049B6                     __end_of___awdiv:
 13873                           	opt stack 0
 13874                           tblptru	equ	0xFF8
 13875                           tblptrh	equ	0xFF7
 13876                           tblptrl	equ	0xFF6
 13877                           tablat	equ	0xFF5
 13878                           prodh	equ	0xFF4
 13879                           prodl	equ	0xFF3
 13880                           intcon	equ	0xFF2
 13881                           postinc0	equ	0xFEE
 13882                           wreg	equ	0xFE8
 13883                           indf1	equ	0xFE7
 13884                           postdec1	equ	0xFE5
 13885                           fsr1h	equ	0xFE2
 13886                           fsr1l	equ	0xFE1
 13887                           indf2	equ	0xFDF
 13888                           postinc2	equ	0xFDE
 13889                           postdec2	equ	0xFDD
 13890                           plusw2	equ	0xFDB
 13891                           fsr2h	equ	0xFDA
 13892                           fsr2l	equ	0xFD9
 13893                           status	equ	0xFD8
 13894                           
 13895 ;; *************** function __tdiv_to_l_ *****************
 13896 ;; Defined at:
 13897 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftdivl.c"
 13898 ;; Parameters:    Size  Location     Type
 13899 ;;  f1              3    0[BANK0 ] float 
 13900 ;;  f2              3    3[BANK0 ] float 
 13901 ;; Auto vars:     Size  Location     Type
 13902 ;;  quot            4    9[BANK0 ] unsigned long 
 13903 ;;  exp1            1   14[BANK0 ] unsigned char 
 13904 ;;  cntr            1   13[BANK0 ] unsigned char 
 13905 ;; Return value:  Size  Location     Type
 13906 ;;                  4    0[BANK0 ] unsigned long 
 13907 ;; Registers used:
 13908 ;;		wreg, status,2, status,0
 13909 ;; Tracked objects:
 13910 ;;		On entry : 0/0
 13911 ;;		On exit  : 0/0
 13912 ;;		Unchanged: 0/0
 13913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13914 ;;      Params:         0       6       0       0       0       0       0       0       0
 13915 ;;      Locals:         0       6       0       0       0       0       0       0       0
 13916 ;;      Temps:          0       3       0       0       0       0       0       0       0
 13917 ;;      Totals:         0      15       0       0       0       0       0       0       0
 13918 ;;Total ram usage:       15 bytes
 13919 ;; Hardware stack levels used:    1
 13920 ;; Hardware stack levels required when called:   10
 13921 ;; This function calls:
 13922 ;;		Nothing
 13923 ;; This function is called by:
 13924 ;;		_sprintf
 13925 ;; This function uses a non-reentrant model
 13926 ;;
 13927                           
 13928                           	psect	text40
 13929  002D38                     __ptext40:
 13930                           	opt stack 0
 13931  002D38                     __tdiv_to_l_:
 13932                           	opt stack 19
 13933                           
 13934                           ; BSR set to: 0
 13935                           ;incstack = 0
 13936  002D38  C062  F066         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 13937  002D3C  0100               	movlb	0	; () banked
 13938  002D3E  6B67               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 13939  002D40  6B68               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 13940  002D42  3561               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 13941  002D44  3766               	rlcf	??__tdiv_to_l_& (0+255),f,b
 13942  002D46  E301               	bnc	u7411
 13943  002D48  8167               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 13944  002D4A                     u7411:
 13945  002D4A  5166               	movf	??__tdiv_to_l_& (0+255),w,b
 13946  002D4C  6F6E               	movwf	__tdiv_to_l_@exp1& (0+255),b
 13947  002D4E  516E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 13948  002D50  A4D8               	btfss	status,2,c
 13949  002D52  D009               	goto	l3069
 13950                           
 13951                           ; BSR set to: 0
 13952  002D54  0E00               	movlw	0
 13953  002D56  6F60               	movwf	?__tdiv_to_l_& (0+255),b
 13954  002D58  0E00               	movlw	0
 13955  002D5A  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 13956  002D5C  0E00               	movlw	0
 13957  002D5E  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 13958  002D60  0E00               	movlw	0
 13959  002D62  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 13960                           
 13961                           ; BSR set to: 0
 13962  002D64  0012               	return	
 13963  002D66                     l3069:
 13964                           
 13965                           ; BSR set to: 0
 13966                           
 13967                           ; BSR set to: 0
 13968  002D66  C065  F066         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 13969  002D6A  6B67               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 13970  002D6C  6B68               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 13971  002D6E  3564               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 13972  002D70  3766               	rlcf	??__tdiv_to_l_& (0+255),f,b
 13973  002D72  E301               	bnc	u7431
 13974  002D74  8167               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 13975  002D76                     u7431:
 13976  002D76  5166               	movf	??__tdiv_to_l_& (0+255),w,b
 13977  002D78  6F6D               	movwf	__tdiv_to_l_@cntr& (0+255),b
 13978  002D7A  516D               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 13979  002D7C  A4D8               	btfss	status,2,c
 13980  002D7E  D009               	goto	l3071
 13981                           
 13982                           ; BSR set to: 0
 13983  002D80  0E00               	movlw	0
 13984  002D82  6F60               	movwf	?__tdiv_to_l_& (0+255),b
 13985  002D84  0E00               	movlw	0
 13986  002D86  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 13987  002D88  0E00               	movlw	0
 13988  002D8A  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 13989  002D8C  0E00               	movlw	0
 13990  002D8E  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 13991                           
 13992                           ; BSR set to: 0
 13993  002D90  0012               	return	
 13994  002D92                     l3071:
 13995                           
 13996                           ; BSR set to: 0
 13997                           
 13998                           ; BSR set to: 0
 13999  002D92  8F61               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 14000                           
 14001                           ; BSR set to: 0
 14002  002D94  0EFF               	movlw	255
 14003  002D96  1760               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 14004  002D98  0EFF               	movlw	255
 14005  002D9A  1761               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 14006  002D9C  0E00               	movlw	0
 14007  002D9E  1762               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 14008  002DA0  8F64               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 14009                           
 14010                           ; BSR set to: 0
 14011  002DA2  0EFF               	movlw	255
 14012  002DA4  1763               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 14013  002DA6  0EFF               	movlw	255
 14014  002DA8  1764               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 14015  002DAA  0E00               	movlw	0
 14016  002DAC  1765               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 14017                           
 14018                           ; BSR set to: 0
 14019  002DAE  0E00               	movlw	0
 14020  002DB0  6F69               	movwf	__tdiv_to_l_@quot& (0+255),b
 14021  002DB2  0E00               	movlw	0
 14022  002DB4  6F6A               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 14023  002DB6  0E00               	movlw	0
 14024  002DB8  6F6B               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 14025  002DBA  0E00               	movlw	0
 14026  002DBC  6F6C               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 14027                           
 14028                           ; BSR set to: 0
 14029  002DBE  0E7F               	movlw	127
 14030  002DC0  5F6E               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 14031                           
 14032                           ; BSR set to: 0
 14033  002DC2  516D               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 14034  002DC4  0F98               	addlw	152
 14035  002DC6  5F6E               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 14036                           
 14037                           ; BSR set to: 0
 14038  002DC8  0E18               	movlw	24
 14039  002DCA  6F6D               	movwf	__tdiv_to_l_@cntr& (0+255),b
 14040  002DCC                     l3072:
 14041                           
 14042                           ; BSR set to: 0
 14043  002DCC  90D8               	bcf	status,0,c
 14044  002DCE  3769               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 14045  002DD0  376A               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 14046  002DD2  376B               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 14047  002DD4  376C               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 14048                           
 14049                           ; BSR set to: 0
 14050  002DD6  5163               	movf	__tdiv_to_l_@f2& (0+255),w,b
 14051  002DD8  5D60               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 14052  002DDA  5164               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 14053  002DDC  5961               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 14054  002DDE  5165               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 14055  002DE0  5962               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 14056  002DE2  A0D8               	btfss	status,0,c
 14057  002DE4  D007               	goto	l3073
 14058                           
 14059                           ; BSR set to: 0
 14060  002DE6  5163               	movf	__tdiv_to_l_@f2& (0+255),w,b
 14061  002DE8  5F60               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 14062  002DEA  5164               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 14063  002DEC  5B61               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 14064  002DEE  5165               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 14065  002DF0  5B62               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 14066                           
 14067                           ; BSR set to: 0
 14068  002DF2  8169               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 14069  002DF4                     l3073:
 14070                           
 14071                           ; BSR set to: 0
 14072  002DF4  90D8               	bcf	status,0,c
 14073  002DF6  3760               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 14074  002DF8  3761               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 14075  002DFA  3762               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 14076                           
 14077                           ; BSR set to: 0
 14078  002DFC  2F6D               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 14079  002DFE  D7E6               	goto	l3072
 14080                           
 14081                           ; BSR set to: 0
 14082                           
 14083                           ; BSR set to: 0
 14084  002E00  AF6E               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 14085  002E02  D016               	goto	l3075
 14086                           
 14087                           ; BSR set to: 0
 14088  002E04  516E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 14089  002E06  0A80               	xorlw	128
 14090  002E08  0F97               	addlw	151
 14091  002E0A  B0D8               	btfsc	status,0,c
 14092  002E0C  D009               	goto	l3076
 14093                           
 14094                           ; BSR set to: 0
 14095  002E0E  0E00               	movlw	0
 14096  002E10  6F60               	movwf	?__tdiv_to_l_& (0+255),b
 14097  002E12  0E00               	movlw	0
 14098  002E14  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 14099  002E16  0E00               	movlw	0
 14100  002E18  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 14101  002E1A  0E00               	movlw	0
 14102  002E1C  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 14103                           
 14104                           ; BSR set to: 0
 14105  002E1E  0012               	return	
 14106  002E20                     l3076:
 14107                           
 14108                           ; BSR set to: 0
 14109                           
 14110                           ; BSR set to: 0
 14111                           
 14112                           ; BSR set to: 0
 14113  002E20  90D8               	bcf	status,0,c
 14114  002E22  336C               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 14115  002E24  336B               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 14116  002E26  336A               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 14117  002E28  3369               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 14118                           
 14119                           ; BSR set to: 0
 14120  002E2A  3F6E               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 14121  002E2C  D7F9               	goto	l3076
 14122                           
 14123                           ; BSR set to: 0
 14124  002E2E  D015               	goto	u7490
 14125  002E30                     l3075:
 14126                           
 14127                           ; BSR set to: 0
 14128                           
 14129                           ; BSR set to: 0
 14130  002E30  0E17               	movlw	23
 14131  002E32  656E               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 14132  002E34  D00F               	goto	l3081
 14133                           
 14134                           ; BSR set to: 0
 14135  002E36  0E00               	movlw	0
 14136  002E38  6F60               	movwf	?__tdiv_to_l_& (0+255),b
 14137  002E3A  0E00               	movlw	0
 14138  002E3C  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 14139  002E3E  0E00               	movlw	0
 14140  002E40  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 14141  002E42  0E00               	movlw	0
 14142  002E44  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 14143                           
 14144                           ; BSR set to: 0
 14145  002E46  0012               	return	
 14146  002E48                     
 14147                           ; BSR set to: 0
 14148                           
 14149                           ; BSR set to: 0
 14150  002E48  90D8               	bcf	status,0,c
 14151  002E4A  3769               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 14152  002E4C  376A               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 14153  002E4E  376B               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 14154  002E50  376C               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 14155  002E52  076E               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 14156  002E54                     l3081:
 14157                           
 14158                           ; BSR set to: 0
 14159                           
 14160                           ; BSR set to: 0
 14161  002E54  516E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 14162  002E56  A4D8               	btfss	status,2,c
 14163  002E58  D7F7               	goto	l3082
 14164  002E5A                     u7490:
 14165                           
 14166                           ; BSR set to: 0
 14167                           
 14168                           ; BSR set to: 0
 14169  002E5A  C069  F060         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 14170  002E5E  C06A  F061         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 14171  002E62  C06B  F062         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 14172  002E66  C06C  F063         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 14173                           
 14174                           ; BSR set to: 0
 14175  002E6A  0012               	return		;funcret
 14176  002E6C                     __end_of__tdiv_to_l_:
 14177                           	opt stack 0
 14178                           tblptru	equ	0xFF8
 14179                           tblptrh	equ	0xFF7
 14180                           tblptrl	equ	0xFF6
 14181                           tablat	equ	0xFF5
 14182                           prodh	equ	0xFF4
 14183                           prodl	equ	0xFF3
 14184                           intcon	equ	0xFF2
 14185                           postinc0	equ	0xFEE
 14186                           wreg	equ	0xFE8
 14187                           indf1	equ	0xFE7
 14188                           postdec1	equ	0xFE5
 14189                           fsr1h	equ	0xFE2
 14190                           fsr1l	equ	0xFE1
 14191                           indf2	equ	0xFDF
 14192                           postinc2	equ	0xFDE
 14193                           postdec2	equ	0xFDD
 14194                           plusw2	equ	0xFDB
 14195                           fsr2h	equ	0xFDA
 14196                           fsr2l	equ	0xFD9
 14197                           status	equ	0xFD8
 14198                           
 14199 ;; *************** function __div_to_l_ *****************
 14200 ;; Defined at:
 14201 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\fldivl.c"
 14202 ;; Parameters:    Size  Location     Type
 14203 ;;  f1              3    0[BANK0 ] unsigned long 
 14204 ;;  f2              3    3[BANK0 ] unsigned long 
 14205 ;; Auto vars:     Size  Location     Type
 14206 ;;  quot            4    6[BANK0 ] unsigned long 
 14207 ;;  exp1            1   11[BANK0 ] unsigned char 
 14208 ;;  cntr            1   10[BANK0 ] unsigned char 
 14209 ;; Return value:  Size  Location     Type
 14210 ;;                  4    0[BANK0 ] unsigned long 
 14211 ;; Registers used:
 14212 ;;		wreg, status,2, status,0
 14213 ;; Tracked objects:
 14214 ;;		On entry : 0/0
 14215 ;;		On exit  : 0/0
 14216 ;;		Unchanged: 0/0
 14217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14218 ;;      Params:         0       6       0       0       0       0       0       0       0
 14219 ;;      Locals:         0       6       0       0       0       0       0       0       0
 14220 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14221 ;;      Totals:         0      12       0       0       0       0       0       0       0
 14222 ;;Total ram usage:       12 bytes
 14223 ;; Hardware stack levels used:    1
 14224 ;; Hardware stack levels required when called:   10
 14225 ;; This function calls:
 14226 ;;		Nothing
 14227 ;; This function is called by:
 14228 ;;		_sprintf
 14229 ;; This function uses a non-reentrant model
 14230 ;;
 14231                           
 14232                           	psect	text41
 14233  0031F4                     __ptext41:
 14234                           	opt stack 0
 14235  0031F4                     __div_to_l_:
 14236                           	opt stack 19
 14237                           
 14238                           ; BSR set to: 0
 14239                           ;incstack = 0
 14240  0031F4  0100               	movlb	0	; () banked
 14241  0031F6  3562               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 14242  0031F8  3563               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 14243  0031FA  6F6B               	movwf	__div_to_l_@exp1& (0+255),b
 14244  0031FC  516B               	movf	__div_to_l_@exp1& (0+255),w,b
 14245  0031FE  A4D8               	btfss	status,2,c
 14246  003200  D009               	goto	l2965
 14247                           
 14248                           ; BSR set to: 0
 14249  003202  0E00               	movlw	0
 14250  003204  6F60               	movwf	?__div_to_l_& (0+255),b
 14251  003206  0E00               	movlw	0
 14252  003208  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
 14253  00320A  0E00               	movlw	0
 14254  00320C  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
 14255  00320E  0E00               	movlw	0
 14256  003210  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
 14257                           
 14258                           ; BSR set to: 0
 14259  003212  0012               	return	
 14260  003214                     l2965:
 14261                           
 14262                           ; BSR set to: 0
 14263                           
 14264                           ; BSR set to: 0
 14265  003214  3565               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 14266  003216  3566               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 14267  003218  6F6A               	movwf	__div_to_l_@cntr& (0+255),b
 14268  00321A  516A               	movf	__div_to_l_@cntr& (0+255),w,b
 14269  00321C  A4D8               	btfss	status,2,c
 14270  00321E  D009               	goto	l2967
 14271                           
 14272                           ; BSR set to: 0
 14273  003220  0E00               	movlw	0
 14274  003222  6F60               	movwf	?__div_to_l_& (0+255),b
 14275  003224  0E00               	movlw	0
 14276  003226  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
 14277  003228  0E00               	movlw	0
 14278  00322A  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
 14279  00322C  0E00               	movlw	0
 14280  00322E  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
 14281                           
 14282                           ; BSR set to: 0
 14283  003230  0012               	return	
 14284  003232                     l2967:
 14285                           
 14286                           ; BSR set to: 0
 14287                           
 14288                           ; BSR set to: 0
 14289  003232  8F62               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 14290                           
 14291                           ; BSR set to: 0
 14292  003234  0EFF               	movlw	255
 14293  003236  1760               	andwf	__div_to_l_@f1& (0+255),f,b
 14294  003238  0EFF               	movlw	255
 14295  00323A  1761               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 14296  00323C  0EFF               	movlw	255
 14297  00323E  1762               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 14298  003240  0E00               	movlw	0
 14299  003242  1763               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 14300                           
 14301                           ; BSR set to: 0
 14302  003244  8F65               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 14303  003246  0EFF               	movlw	255
 14304  003248  1763               	andwf	__div_to_l_@f2& (0+255),f,b
 14305  00324A  0EFF               	movlw	255
 14306  00324C  1764               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 14307  00324E  0EFF               	movlw	255
 14308  003250  1765               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 14309  003252  0E00               	movlw	0
 14310  003254  1766               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 14311                           
 14312                           ; BSR set to: 0
 14313  003256  0E00               	movlw	0
 14314  003258  6F66               	movwf	__div_to_l_@quot& (0+255),b
 14315  00325A  0E00               	movlw	0
 14316  00325C  6F67               	movwf	(__div_to_l_@quot+1)& (0+255),b
 14317  00325E  0E00               	movlw	0
 14318  003260  6F68               	movwf	(__div_to_l_@quot+2)& (0+255),b
 14319  003262  0E00               	movlw	0
 14320  003264  6F69               	movwf	(__div_to_l_@quot+3)& (0+255),b
 14321                           
 14322                           ; BSR set to: 0
 14323  003266  0E7F               	movlw	127
 14324  003268  5F6B               	subwf	__div_to_l_@exp1& (0+255),f,b
 14325                           
 14326                           ; BSR set to: 0
 14327  00326A  516A               	movf	__div_to_l_@cntr& (0+255),w,b
 14328  00326C  0FA0               	addlw	160
 14329  00326E  5F6B               	subwf	__div_to_l_@exp1& (0+255),f,b
 14330                           
 14331                           ; BSR set to: 0
 14332  003270  0E20               	movlw	32
 14333  003272  6F6A               	movwf	__div_to_l_@cntr& (0+255),b
 14334  003274                     
 14335                           ; BSR set to: 0
 14336                           
 14337                           ; BSR set to: 0
 14338  003274  90D8               	bcf	status,0,c
 14339  003276  3766               	rlcf	__div_to_l_@quot& (0+255),f,b
 14340  003278  3767               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 14341  00327A  3768               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 14342  00327C  3769               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 14343                           
 14344                           ; BSR set to: 0
 14345  00327E  5163               	movf	__div_to_l_@f2& (0+255),w,b
 14346  003280  5D60               	subwf	__div_to_l_@f1& (0+255),w,b
 14347  003282  5164               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 14348  003284  5961               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 14349  003286  5165               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 14350  003288  5962               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 14351  00328A  5166               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 14352  00328C  5963               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 14353  00328E  A0D8               	btfss	status,0,c
 14354  003290  D009               	goto	l2969
 14355                           
 14356                           ; BSR set to: 0
 14357  003292  5163               	movf	__div_to_l_@f2& (0+255),w,b
 14358  003294  5F60               	subwf	__div_to_l_@f1& (0+255),f,b
 14359  003296  5164               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 14360  003298  5B61               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 14361  00329A  5165               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 14362  00329C  5B62               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 14363  00329E  5166               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 14364  0032A0  5B63               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 14365                           
 14366                           ; BSR set to: 0
 14367  0032A2  8166               	bsf	__div_to_l_@quot& (0+255),0,b
 14368  0032A4                     l2969:
 14369                           
 14370                           ; BSR set to: 0
 14371                           
 14372                           ; BSR set to: 0
 14373  0032A4  90D8               	bcf	status,0,c
 14374  0032A6  3760               	rlcf	__div_to_l_@f1& (0+255),f,b
 14375  0032A8  3761               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 14376  0032AA  3762               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 14377  0032AC  3763               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 14378                           
 14379                           ; BSR set to: 0
 14380  0032AE  2F6A               	decfsz	__div_to_l_@cntr& (0+255),f,b
 14381  0032B0  D7E1               	goto	l2968
 14382                           
 14383                           ; BSR set to: 0
 14384                           
 14385                           ; BSR set to: 0
 14386  0032B2  AF6B               	btfss	__div_to_l_@exp1& (0+255),7,b
 14387  0032B4  D016               	goto	l2971
 14388                           
 14389                           ; BSR set to: 0
 14390  0032B6  516B               	movf	__div_to_l_@exp1& (0+255),w,b
 14391  0032B8  0A80               	xorlw	128
 14392  0032BA  0F9F               	addlw	159
 14393  0032BC  B0D8               	btfsc	status,0,c
 14394  0032BE  D009               	goto	l2972
 14395                           
 14396                           ; BSR set to: 0
 14397  0032C0  0E00               	movlw	0
 14398  0032C2  6F60               	movwf	?__div_to_l_& (0+255),b
 14399  0032C4  0E00               	movlw	0
 14400  0032C6  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
 14401  0032C8  0E00               	movlw	0
 14402  0032CA  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
 14403  0032CC  0E00               	movlw	0
 14404  0032CE  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
 14405                           
 14406                           ; BSR set to: 0
 14407  0032D0  0012               	return	
 14408  0032D2                     l2972:
 14409                           
 14410                           ; BSR set to: 0
 14411                           
 14412                           ; BSR set to: 0
 14413                           
 14414                           ; BSR set to: 0
 14415  0032D2  90D8               	bcf	status,0,c
 14416  0032D4  3369               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 14417  0032D6  3368               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 14418  0032D8  3367               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 14419  0032DA  3366               	rrcf	__div_to_l_@quot& (0+255),f,b
 14420                           
 14421                           ; BSR set to: 0
 14422  0032DC  3F6B               	incfsz	__div_to_l_@exp1& (0+255),f,b
 14423  0032DE  D7F9               	goto	l2972
 14424                           
 14425                           ; BSR set to: 0
 14426  0032E0  D015               	goto	u7560
 14427  0032E2                     l2971:
 14428                           
 14429                           ; BSR set to: 0
 14430                           
 14431                           ; BSR set to: 0
 14432  0032E2  0E1F               	movlw	31
 14433  0032E4  656B               	cpfsgt	__div_to_l_@exp1& (0+255),b
 14434  0032E6  D00F               	goto	l2977
 14435                           
 14436                           ; BSR set to: 0
 14437  0032E8  0E00               	movlw	0
 14438  0032EA  6F60               	movwf	?__div_to_l_& (0+255),b
 14439  0032EC  0E00               	movlw	0
 14440  0032EE  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
 14441  0032F0  0E00               	movlw	0
 14442  0032F2  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
 14443  0032F4  0E00               	movlw	0
 14444  0032F6  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
 14445                           
 14446                           ; BSR set to: 0
 14447  0032F8  0012               	return	
 14448  0032FA                     
 14449                           ; BSR set to: 0
 14450                           
 14451                           ; BSR set to: 0
 14452  0032FA  90D8               	bcf	status,0,c
 14453  0032FC  3766               	rlcf	__div_to_l_@quot& (0+255),f,b
 14454  0032FE  3767               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 14455  003300  3768               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 14456  003302  3769               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 14457  003304  076B               	decf	__div_to_l_@exp1& (0+255),f,b
 14458  003306                     l2977:
 14459                           
 14460                           ; BSR set to: 0
 14461                           
 14462                           ; BSR set to: 0
 14463  003306  516B               	movf	__div_to_l_@exp1& (0+255),w,b
 14464  003308  A4D8               	btfss	status,2,c
 14465  00330A  D7F7               	goto	l2978
 14466  00330C                     u7560:
 14467                           
 14468                           ; BSR set to: 0
 14469                           
 14470                           ; BSR set to: 0
 14471  00330C  C066  F060         	movff	__div_to_l_@quot,?__div_to_l_
 14472  003310  C067  F061         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 14473  003314  C068  F062         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 14474  003318  C069  F063         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 14475                           
 14476                           ; BSR set to: 0
 14477  00331C  0012               	return		;funcret
 14478  00331E                     __end_of__div_to_l_:
 14479                           	opt stack 0
 14480                           tblptru	equ	0xFF8
 14481                           tblptrh	equ	0xFF7
 14482                           tblptrl	equ	0xFF6
 14483                           tablat	equ	0xFF5
 14484                           prodh	equ	0xFF4
 14485                           prodl	equ	0xFF3
 14486                           intcon	equ	0xFF2
 14487                           postinc0	equ	0xFEE
 14488                           wreg	equ	0xFE8
 14489                           indf1	equ	0xFE7
 14490                           postdec1	equ	0xFE5
 14491                           fsr1h	equ	0xFE2
 14492                           fsr1l	equ	0xFE1
 14493                           indf2	equ	0xFDF
 14494                           postinc2	equ	0xFDE
 14495                           postdec2	equ	0xFDD
 14496                           plusw2	equ	0xFDB
 14497                           fsr2h	equ	0xFDA
 14498                           fsr2l	equ	0xFD9
 14499                           status	equ	0xFD8
 14500                           
 14501 ;; *************** function ___lltoft *****************
 14502 ;; Defined at:
 14503 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lltoft.c"
 14504 ;; Parameters:    Size  Location     Type
 14505 ;;  c               4    8[BANK0 ] unsigned long 
 14506 ;; Auto vars:     Size  Location     Type
 14507 ;;  exp             1   16[BANK0 ] unsigned char 
 14508 ;; Return value:  Size  Location     Type
 14509 ;;                  3    8[BANK0 ] float 
 14510 ;; Registers used:
 14511 ;;		wreg, status,2, status,0, cstack
 14512 ;; Tracked objects:
 14513 ;;		On entry : 0/0
 14514 ;;		On exit  : 0/0
 14515 ;;		Unchanged: 0/0
 14516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14517 ;;      Params:         0       4       0       0       0       0       0       0       0
 14518 ;;      Locals:         0       1       0       0       0       0       0       0       0
 14519 ;;      Temps:          0       4       0       0       0       0       0       0       0
 14520 ;;      Totals:         0       9       0       0       0       0       0       0       0
 14521 ;;Total ram usage:        9 bytes
 14522 ;; Hardware stack levels used:    1
 14523 ;; Hardware stack levels required when called:   11
 14524 ;; This function calls:
 14525 ;;		___ftpack
 14526 ;; This function is called by:
 14527 ;;		_sprintf
 14528 ;; This function uses a non-reentrant model
 14529 ;;
 14530                           
 14531                           	psect	text42
 14532  004EAC                     __ptext42:
 14533                           	opt stack 0
 14534  004EAC                     ___lltoft:
 14535                           	opt stack 18
 14536                           
 14537                           ; BSR set to: 0
 14538                           ;incstack = 0
 14539  004EAC  0E8E               	movlw	142
 14540  004EAE  0100               	movlb	0	; () banked
 14541  004EB0  6F70               	movwf	___lltoft@exp& (0+255),b
 14542  004EB2  D006               	goto	l3176
 14543  004EB4                     
 14544                           ; BSR set to: 0
 14545                           
 14546                           ; BSR set to: 0
 14547  004EB4  90D8               	bcf	status,0,c
 14548  004EB6  336B               	rrcf	(___lltoft@c+3)& (0+255),f,b
 14549  004EB8  336A               	rrcf	(___lltoft@c+2)& (0+255),f,b
 14550  004EBA  3369               	rrcf	(___lltoft@c+1)& (0+255),f,b
 14551  004EBC  3368               	rrcf	___lltoft@c& (0+255),f,b
 14552  004EBE  2B70               	incf	___lltoft@exp& (0+255),f,b
 14553  004EC0                     l3176:
 14554                           
 14555                           ; BSR set to: 0
 14556                           
 14557                           ; BSR set to: 0
 14558  004EC0  0E00               	movlw	0
 14559  004EC2  1568               	andwf	___lltoft@c& (0+255),w,b
 14560  004EC4  6F6C               	movwf	??___lltoft& (0+255),b
 14561  004EC6  0E00               	movlw	0
 14562  004EC8  1569               	andwf	(___lltoft@c+1)& (0+255),w,b
 14563  004ECA  6F6D               	movwf	(??___lltoft+1)& (0+255),b
 14564  004ECC  0E00               	movlw	0
 14565  004ECE  156A               	andwf	(___lltoft@c+2)& (0+255),w,b
 14566  004ED0  6F6E               	movwf	(??___lltoft+2)& (0+255),b
 14567  004ED2  0EFF               	movlw	255
 14568  004ED4  156B               	andwf	(___lltoft@c+3)& (0+255),w,b
 14569  004ED6  6F6F               	movwf	(??___lltoft+3)& (0+255),b
 14570  004ED8  516C               	movf	??___lltoft& (0+255),w,b
 14571  004EDA  116D               	iorwf	(??___lltoft+1)& (0+255),w,b
 14572  004EDC  116E               	iorwf	(??___lltoft+2)& (0+255),w,b
 14573  004EDE  116F               	iorwf	(??___lltoft+3)& (0+255),w,b
 14574  004EE0  A4D8               	btfss	status,2,c
 14575  004EE2  D7E8               	goto	l3177
 14576                           
 14577                           ; BSR set to: 0
 14578                           
 14579                           ; BSR set to: 0
 14580  004EE4  C068  F060         	movff	___lltoft@c,___ftpack@arg
 14581  004EE8  C069  F061         	movff	___lltoft@c+1,___ftpack@arg+1
 14582  004EEC  C06A  F062         	movff	___lltoft@c+2,___ftpack@arg+2
 14583  004EF0  C070  F063         	movff	___lltoft@exp,___ftpack@exp
 14584  004EF4  0E00               	movlw	0
 14585  004EF6  6F64               	movwf	___ftpack@sign& (0+255),b
 14586  004EF8  ECE0  F020         	call	___ftpack	;wreg free
 14587  004EFC  C060  F068         	movff	?___ftpack,?___lltoft
 14588  004F00  C061  F069         	movff	?___ftpack+1,?___lltoft+1
 14589  004F04  C062  F06A         	movff	?___ftpack+2,?___lltoft+2
 14590  004F08  0012               	return	
 14591  004F0A                     __end_of___lltoft:
 14592                           	opt stack 0
 14593                           tblptru	equ	0xFF8
 14594                           tblptrh	equ	0xFF7
 14595                           tblptrl	equ	0xFF6
 14596                           tablat	equ	0xFF5
 14597                           prodh	equ	0xFF4
 14598                           prodl	equ	0xFF3
 14599                           intcon	equ	0xFF2
 14600                           postinc0	equ	0xFEE
 14601                           wreg	equ	0xFE8
 14602                           indf1	equ	0xFE7
 14603                           postdec1	equ	0xFE5
 14604                           fsr1h	equ	0xFE2
 14605                           fsr1l	equ	0xFE1
 14606                           indf2	equ	0xFDF
 14607                           postinc2	equ	0xFDE
 14608                           postdec2	equ	0xFDD
 14609                           plusw2	equ	0xFDB
 14610                           fsr2h	equ	0xFDA
 14611                           fsr2l	equ	0xFD9
 14612                           status	equ	0xFD8
 14613                           
 14614 ;; *************** function ___llmod *****************
 14615 ;; Defined at:
 14616 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\llmod.c"
 14617 ;; Parameters:    Size  Location     Type
 14618 ;;  dividend        4   13[BANK0 ] unsigned long 
 14619 ;;  divisor         4   17[BANK0 ] unsigned long 
 14620 ;; Auto vars:     Size  Location     Type
 14621 ;;  counter         1   21[BANK0 ] unsigned char 
 14622 ;; Return value:  Size  Location     Type
 14623 ;;                  4   13[BANK0 ] unsigned long 
 14624 ;; Registers used:
 14625 ;;		wreg, status,2, status,0
 14626 ;; Tracked objects:
 14627 ;;		On entry : 0/0
 14628 ;;		On exit  : 0/0
 14629 ;;		Unchanged: 0/0
 14630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14631 ;;      Params:         0       8       0       0       0       0       0       0       0
 14632 ;;      Locals:         0       1       0       0       0       0       0       0       0
 14633 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14634 ;;      Totals:         0       9       0       0       0       0       0       0       0
 14635 ;;Total ram usage:        9 bytes
 14636 ;; Hardware stack levels used:    1
 14637 ;; Hardware stack levels required when called:   10
 14638 ;; This function calls:
 14639 ;;		Nothing
 14640 ;; This function is called by:
 14641 ;;		_sprintf
 14642 ;; This function uses a non-reentrant model
 14643 ;;
 14644                           
 14645                           	psect	text43
 14646  004D7E                     __ptext43:
 14647                           	opt stack 0
 14648  004D7E                     ___llmod:
 14649                           	opt stack 19
 14650                           
 14651                           ;incstack = 0
 14652  004D7E  0100               	movlb	0	; () banked
 14653  004D80  5171               	movf	___llmod@divisor& (0+255),w,b
 14654  004D82  1172               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 14655  004D84  1173               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 14656  004D86  1174               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 14657  004D88  B4D8               	btfsc	status,2,c
 14658  004D8A  D024               	goto	l3170
 14659                           
 14660                           ; BSR set to: 0
 14661  004D8C  0E01               	movlw	1
 14662  004D8E  6F75               	movwf	___llmod@counter& (0+255),b
 14663  004D90  D006               	goto	l3165
 14664  004D92                     
 14665                           ; BSR set to: 0
 14666                           
 14667                           ; BSR set to: 0
 14668  004D92  90D8               	bcf	status,0,c
 14669  004D94  3771               	rlcf	___llmod@divisor& (0+255),f,b
 14670  004D96  3772               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 14671  004D98  3773               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 14672  004D9A  3774               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 14673  004D9C  2B75               	incf	___llmod@counter& (0+255),f,b
 14674  004D9E                     l3165:
 14675                           
 14676                           ; BSR set to: 0
 14677                           
 14678                           ; BSR set to: 0
 14679  004D9E  AF74               	btfss	(___llmod@divisor+3)& (0+255),7,b
 14680  004DA0  D7F8               	goto	l3166
 14681  004DA2                     u7740:
 14682                           
 14683                           ; BSR set to: 0
 14684                           
 14685                           ; BSR set to: 0
 14686                           
 14687                           ; BSR set to: 0
 14688  004DA2  5171               	movf	___llmod@divisor& (0+255),w,b
 14689  004DA4  5D6D               	subwf	___llmod@dividend& (0+255),w,b
 14690  004DA6  5172               	movf	(___llmod@divisor+1)& (0+255),w,b
 14691  004DA8  596E               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 14692  004DAA  5173               	movf	(___llmod@divisor+2)& (0+255),w,b
 14693  004DAC  596F               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 14694  004DAE  5174               	movf	(___llmod@divisor+3)& (0+255),w,b
 14695  004DB0  5970               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 14696  004DB2  A0D8               	btfss	status,0,c
 14697  004DB4  D008               	goto	l3169
 14698                           
 14699                           ; BSR set to: 0
 14700  004DB6  5171               	movf	___llmod@divisor& (0+255),w,b
 14701  004DB8  5F6D               	subwf	___llmod@dividend& (0+255),f,b
 14702  004DBA  5172               	movf	(___llmod@divisor+1)& (0+255),w,b
 14703  004DBC  5B6E               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 14704  004DBE  5173               	movf	(___llmod@divisor+2)& (0+255),w,b
 14705  004DC0  5B6F               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 14706  004DC2  5174               	movf	(___llmod@divisor+3)& (0+255),w,b
 14707  004DC4  5B70               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 14708  004DC6                     l3169:
 14709                           
 14710                           ; BSR set to: 0
 14711                           
 14712                           ; BSR set to: 0
 14713  004DC6  90D8               	bcf	status,0,c
 14714  004DC8  3374               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 14715  004DCA  3373               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 14716  004DCC  3372               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 14717  004DCE  3371               	rrcf	___llmod@divisor& (0+255),f,b
 14718                           
 14719                           ; BSR set to: 0
 14720  004DD0  2F75               	decfsz	___llmod@counter& (0+255),f,b
 14721  004DD2  D7E7               	goto	u7740
 14722  004DD4                     l3170:
 14723                           
 14724                           ; BSR set to: 0
 14725                           
 14726                           ; BSR set to: 0
 14727  004DD4  C06D  F06D         	movff	___llmod@dividend,?___llmod
 14728  004DD8  C06E  F06E         	movff	___llmod@dividend+1,?___llmod+1
 14729  004DDC  C06F  F06F         	movff	___llmod@dividend+2,?___llmod+2
 14730  004DE0  C070  F070         	movff	___llmod@dividend+3,?___llmod+3
 14731                           
 14732                           ; BSR set to: 0
 14733  004DE4  0012               	return		;funcret
 14734  004DE6                     __end_of___llmod:
 14735                           	opt stack 0
 14736                           tblptru	equ	0xFF8
 14737                           tblptrh	equ	0xFF7
 14738                           tblptrl	equ	0xFF6
 14739                           tablat	equ	0xFF5
 14740                           prodh	equ	0xFF4
 14741                           prodl	equ	0xFF3
 14742                           intcon	equ	0xFF2
 14743                           postinc0	equ	0xFEE
 14744                           wreg	equ	0xFE8
 14745                           indf1	equ	0xFE7
 14746                           postdec1	equ	0xFE5
 14747                           fsr1h	equ	0xFE2
 14748                           fsr1l	equ	0xFE1
 14749                           indf2	equ	0xFDF
 14750                           postinc2	equ	0xFDE
 14751                           postdec2	equ	0xFDD
 14752                           plusw2	equ	0xFDB
 14753                           fsr2h	equ	0xFDA
 14754                           fsr2l	equ	0xFD9
 14755                           status	equ	0xFD8
 14756                           
 14757 ;; *************** function ___lldiv *****************
 14758 ;; Defined at:
 14759 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lldiv.c"
 14760 ;; Parameters:    Size  Location     Type
 14761 ;;  dividend        4    0[BANK0 ] unsigned long 
 14762 ;;  divisor         4    4[BANK0 ] unsigned long 
 14763 ;; Auto vars:     Size  Location     Type
 14764 ;;  quotient        4    8[BANK0 ] unsigned long 
 14765 ;;  counter         1   12[BANK0 ] unsigned char 
 14766 ;; Return value:  Size  Location     Type
 14767 ;;                  4    0[BANK0 ] unsigned long 
 14768 ;; Registers used:
 14769 ;;		wreg, status,2, status,0
 14770 ;; Tracked objects:
 14771 ;;		On entry : 0/0
 14772 ;;		On exit  : 0/0
 14773 ;;		Unchanged: 0/0
 14774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14775 ;;      Params:         0       8       0       0       0       0       0       0       0
 14776 ;;      Locals:         0       5       0       0       0       0       0       0       0
 14777 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14778 ;;      Totals:         0      13       0       0       0       0       0       0       0
 14779 ;;Total ram usage:       13 bytes
 14780 ;; Hardware stack levels used:    1
 14781 ;; Hardware stack levels required when called:   10
 14782 ;; This function calls:
 14783 ;;		Nothing
 14784 ;; This function is called by:
 14785 ;;		_setup_uart
 14786 ;;		_sprintf
 14787 ;; This function uses a non-reentrant model
 14788 ;;
 14789                           
 14790                           	psect	text44
 14791  004A3C                     __ptext44:
 14792                           	opt stack 0
 14793  004A3C                     ___lldiv:
 14794                           	opt stack 19
 14795                           
 14796                           ; BSR set to: 0
 14797                           ;incstack = 0
 14798  004A3C  0E00               	movlw	0
 14799  004A3E  0100               	movlb	0	; () banked
 14800  004A40  6F68               	movwf	___lldiv@quotient& (0+255),b
 14801  004A42  0E00               	movlw	0
 14802  004A44  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 14803  004A46  0E00               	movlw	0
 14804  004A48  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 14805  004A4A  0E00               	movlw	0
 14806  004A4C  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 14807                           
 14808                           ; BSR set to: 0
 14809  004A4E  5164               	movf	___lldiv@divisor& (0+255),w,b
 14810  004A50  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 14811  004A52  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 14812  004A54  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 14813  004A56  B4D8               	btfsc	status,2,c
 14814  004A58  D02A               	goto	l3160
 14815                           
 14816                           ; BSR set to: 0
 14817  004A5A  0E01               	movlw	1
 14818  004A5C  6F6C               	movwf	___lldiv@counter& (0+255),b
 14819  004A5E  D006               	goto	l3155
 14820  004A60                     
 14821                           ; BSR set to: 0
 14822                           
 14823                           ; BSR set to: 0
 14824  004A60  90D8               	bcf	status,0,c
 14825  004A62  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 14826  004A64  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 14827  004A66  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 14828  004A68  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 14829  004A6A  2B6C               	incf	___lldiv@counter& (0+255),f,b
 14830  004A6C                     l3155:
 14831                           
 14832                           ; BSR set to: 0
 14833                           
 14834                           ; BSR set to: 0
 14835  004A6C  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 14836  004A6E  D7F8               	goto	l3156
 14837  004A70                     u7710:
 14838                           
 14839                           ; BSR set to: 0
 14840                           
 14841                           ; BSR set to: 0
 14842                           
 14843                           ; BSR set to: 0
 14844  004A70  90D8               	bcf	status,0,c
 14845  004A72  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 14846  004A74  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 14847  004A76  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 14848  004A78  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 14849                           
 14850                           ; BSR set to: 0
 14851  004A7A  5164               	movf	___lldiv@divisor& (0+255),w,b
 14852  004A7C  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 14853  004A7E  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 14854  004A80  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 14855  004A82  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 14856  004A84  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 14857  004A86  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 14858  004A88  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 14859  004A8A  A0D8               	btfss	status,0,c
 14860  004A8C  D009               	goto	l3159
 14861                           
 14862                           ; BSR set to: 0
 14863  004A8E  5164               	movf	___lldiv@divisor& (0+255),w,b
 14864  004A90  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 14865  004A92  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 14866  004A94  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 14867  004A96  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 14868  004A98  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 14869  004A9A  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 14870  004A9C  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 14871                           
 14872                           ; BSR set to: 0
 14873  004A9E  8168               	bsf	___lldiv@quotient& (0+255),0,b
 14874  004AA0                     l3159:
 14875                           
 14876                           ; BSR set to: 0
 14877                           
 14878                           ; BSR set to: 0
 14879  004AA0  90D8               	bcf	status,0,c
 14880  004AA2  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 14881  004AA4  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 14882  004AA6  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 14883  004AA8  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 14884                           
 14885                           ; BSR set to: 0
 14886  004AAA  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 14887  004AAC  D7E1               	goto	u7710
 14888  004AAE                     l3160:
 14889                           
 14890                           ; BSR set to: 0
 14891                           
 14892                           ; BSR set to: 0
 14893  004AAE  C068  F060         	movff	___lldiv@quotient,?___lldiv
 14894  004AB2  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 14895  004AB6  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 14896  004ABA  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 14897                           
 14898                           ; BSR set to: 0
 14899  004ABE  0012               	return		;funcret
 14900  004AC0                     __end_of___lldiv:
 14901                           	opt stack 0
 14902                           tblptru	equ	0xFF8
 14903                           tblptrh	equ	0xFF7
 14904                           tblptrl	equ	0xFF6
 14905                           tablat	equ	0xFF5
 14906                           prodh	equ	0xFF4
 14907                           prodl	equ	0xFF3
 14908                           intcon	equ	0xFF2
 14909                           postinc0	equ	0xFEE
 14910                           wreg	equ	0xFE8
 14911                           indf1	equ	0xFE7
 14912                           postdec1	equ	0xFE5
 14913                           fsr1h	equ	0xFE2
 14914                           fsr1l	equ	0xFE1
 14915                           indf2	equ	0xFDF
 14916                           postinc2	equ	0xFDE
 14917                           postdec2	equ	0xFDD
 14918                           plusw2	equ	0xFDB
 14919                           fsr2h	equ	0xFDA
 14920                           fsr2l	equ	0xFD9
 14921                           status	equ	0xFD8
 14922                           
 14923 ;; *************** function ___fttol *****************
 14924 ;; Defined at:
 14925 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\fttol.c"
 14926 ;; Parameters:    Size  Location     Type
 14927 ;;  f1              3   80[BANK0 ] float 
 14928 ;; Auto vars:     Size  Location     Type
 14929 ;;  lval            4   90[BANK0 ] unsigned long 
 14930 ;;  exp1            1   94[BANK0 ] unsigned char 
 14931 ;;  sign1           1   89[BANK0 ] unsigned char 
 14932 ;; Return value:  Size  Location     Type
 14933 ;;                  4   80[BANK0 ] long 
 14934 ;; Registers used:
 14935 ;;		wreg, status,2, status,0
 14936 ;; Tracked objects:
 14937 ;;		On entry : 0/0
 14938 ;;		On exit  : 0/0
 14939 ;;		Unchanged: 0/0
 14940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14941 ;;      Params:         0       4       0       0       0       0       0       0       0
 14942 ;;      Locals:         0       6       0       0       0       0       0       0       0
 14943 ;;      Temps:          0       5       0       0       0       0       0       0       0
 14944 ;;      Totals:         0      15       0       0       0       0       0       0       0
 14945 ;;Total ram usage:       15 bytes
 14946 ;; Hardware stack levels used:    1
 14947 ;; Hardware stack levels required when called:   10
 14948 ;; This function calls:
 14949 ;;		Nothing
 14950 ;; This function is called by:
 14951 ;;		_main
 14952 ;;		_sprintf
 14953 ;; This function uses a non-reentrant model
 14954 ;;
 14955                           
 14956                           	psect	text45
 14957  003950                     __ptext45:
 14958                           	opt stack 0
 14959  003950                     ___fttol:
 14960                           	opt stack 19
 14961                           
 14962                           ; BSR set to: 0
 14963                           ;incstack = 0
 14964  003950  C0B2  F0B4         	movff	___fttol@f1+2,??___fttol
 14965  003954  0100               	movlb	0	; () banked
 14966  003956  6BB5               	clrf	(??___fttol+1)& (0+255),b
 14967  003958  6BB6               	clrf	(??___fttol+2)& (0+255),b
 14968  00395A  35B1               	rlcf	(___fttol@f1+1)& (0+255),w,b
 14969  00395C  37B4               	rlcf	??___fttol& (0+255),f,b
 14970  00395E  E301               	bnc	u7621
 14971  003960  81B5               	bsf	(??___fttol+1)& (0+255),0,b
 14972  003962                     u7621:
 14973  003962  51B4               	movf	??___fttol& (0+255),w,b
 14974  003964  6FBE               	movwf	___fttol@exp1& (0+255),b
 14975  003966  51BE               	movf	___fttol@exp1& (0+255),w,b
 14976  003968  A4D8               	btfss	status,2,c
 14977  00396A  D009               	goto	l3114
 14978                           
 14979                           ; BSR set to: 0
 14980  00396C  0E00               	movlw	0
 14981  00396E  6FB0               	movwf	?___fttol& (0+255),b
 14982  003970  0E00               	movlw	0
 14983  003972  6FB1               	movwf	(?___fttol+1)& (0+255),b
 14984  003974  0E00               	movlw	0
 14985  003976  6FB2               	movwf	(?___fttol+2)& (0+255),b
 14986  003978  0E00               	movlw	0
 14987  00397A  6FB3               	movwf	(?___fttol+3)& (0+255),b
 14988                           
 14989                           ; BSR set to: 0
 14990  00397C  0012               	return	
 14991  00397E                     l3114:
 14992                           
 14993                           ; BSR set to: 0
 14994                           
 14995                           ; BSR set to: 0
 14996  00397E  0E17               	movlw	23
 14997  003980  6FB4               	movwf	??___fttol& (0+255),b
 14998  003982  C0B0  F0B5         	movff	___fttol@f1,??___fttol+1
 14999  003986  C0B1  F0B6         	movff	___fttol@f1+1,??___fttol+2
 15000  00398A  C0B2  F0B7         	movff	___fttol@f1+2,??___fttol+3
 15001  00398E  29B4               	incf	??___fttol& (0+255),w,b
 15002  003990  6FB8               	movwf	(??___fttol+4)& (0+255),b
 15003  003992  D004               	goto	u7640
 15004  003994                     u7645:
 15005  003994  90D8               	bcf	status,0,c
 15006  003996  33B7               	rrcf	(??___fttol+3)& (0+255),f,b
 15007  003998  33B6               	rrcf	(??___fttol+2)& (0+255),f,b
 15008  00399A  33B5               	rrcf	(??___fttol+1)& (0+255),f,b
 15009  00399C                     u7640:
 15010  00399C  2FB8               	decfsz	(??___fttol+4)& (0+255),f,b
 15011  00399E  D7FA               	goto	u7645
 15012  0039A0  0100               	movlb	0	; () banked
 15013  0039A2  51B5               	movf	(??___fttol+1)& (0+255),w,b
 15014  0039A4  6FB9               	movwf	___fttol@sign1& (0+255),b
 15015                           
 15016                           ; BSR set to: 0
 15017  0039A6  8FB1               	bsf	(___fttol@f1+1)& (0+255),7,b
 15018                           
 15019                           ; BSR set to: 0
 15020  0039A8  0EFF               	movlw	255
 15021  0039AA  17B0               	andwf	___fttol@f1& (0+255),f,b
 15022  0039AC  0EFF               	movlw	255
 15023  0039AE  17B1               	andwf	(___fttol@f1+1)& (0+255),f,b
 15024  0039B0  0E00               	movlw	0
 15025  0039B2  17B2               	andwf	(___fttol@f1+2)& (0+255),f,b
 15026                           
 15027                           ; BSR set to: 0
 15028  0039B4  51B0               	movf	___fttol@f1& (0+255),w,b
 15029  0039B6  6FBA               	movwf	___fttol@lval& (0+255),b
 15030  0039B8  51B1               	movf	(___fttol@f1+1)& (0+255),w,b
 15031  0039BA  6FBB               	movwf	(___fttol@lval+1)& (0+255),b
 15032  0039BC  51B2               	movf	(___fttol@f1+2)& (0+255),w,b
 15033  0039BE  6FBC               	movwf	(___fttol@lval+2)& (0+255),b
 15034  0039C0  6BBD               	clrf	(___fttol@lval+3)& (0+255),b
 15035                           
 15036                           ; BSR set to: 0
 15037  0039C2  0E8E               	movlw	142
 15038  0039C4  5FBE               	subwf	___fttol@exp1& (0+255),f,b
 15039                           
 15040                           ; BSR set to: 0
 15041  0039C6  AFBE               	btfss	___fttol@exp1& (0+255),7,b
 15042  0039C8  D016               	goto	l3116
 15043                           
 15044                           ; BSR set to: 0
 15045  0039CA  51BE               	movf	___fttol@exp1& (0+255),w,b
 15046  0039CC  0A80               	xorlw	128
 15047  0039CE  0F8F               	addlw	143
 15048  0039D0  B0D8               	btfsc	status,0,c
 15049  0039D2  D009               	goto	l3117
 15050                           
 15051                           ; BSR set to: 0
 15052  0039D4  0E00               	movlw	0
 15053  0039D6  6FB0               	movwf	?___fttol& (0+255),b
 15054  0039D8  0E00               	movlw	0
 15055  0039DA  6FB1               	movwf	(?___fttol+1)& (0+255),b
 15056  0039DC  0E00               	movlw	0
 15057  0039DE  6FB2               	movwf	(?___fttol+2)& (0+255),b
 15058  0039E0  0E00               	movlw	0
 15059  0039E2  6FB3               	movwf	(?___fttol+3)& (0+255),b
 15060                           
 15061                           ; BSR set to: 0
 15062  0039E4  0012               	return	
 15063  0039E6                     l3117:
 15064                           
 15065                           ; BSR set to: 0
 15066                           
 15067                           ; BSR set to: 0
 15068                           
 15069                           ; BSR set to: 0
 15070  0039E6  90D8               	bcf	status,0,c
 15071  0039E8  33BD               	rrcf	(___fttol@lval+3)& (0+255),f,b
 15072  0039EA  33BC               	rrcf	(___fttol@lval+2)& (0+255),f,b
 15073  0039EC  33BB               	rrcf	(___fttol@lval+1)& (0+255),f,b
 15074  0039EE  33BA               	rrcf	___fttol@lval& (0+255),f,b
 15075                           
 15076                           ; BSR set to: 0
 15077  0039F0  3FBE               	incfsz	___fttol@exp1& (0+255),f,b
 15078  0039F2  D7F9               	goto	l3117
 15079                           
 15080                           ; BSR set to: 0
 15081  0039F4  D015               	goto	u7680
 15082  0039F6                     l3116:
 15083                           
 15084                           ; BSR set to: 0
 15085                           
 15086                           ; BSR set to: 0
 15087  0039F6  0E17               	movlw	23
 15088  0039F8  65BE               	cpfsgt	___fttol@exp1& (0+255),b
 15089  0039FA  D00F               	goto	l3122
 15090                           
 15091                           ; BSR set to: 0
 15092  0039FC  0E00               	movlw	0
 15093  0039FE  6FB0               	movwf	?___fttol& (0+255),b
 15094  003A00  0E00               	movlw	0
 15095  003A02  6FB1               	movwf	(?___fttol+1)& (0+255),b
 15096  003A04  0E00               	movlw	0
 15097  003A06  6FB2               	movwf	(?___fttol+2)& (0+255),b
 15098  003A08  0E00               	movlw	0
 15099  003A0A  6FB3               	movwf	(?___fttol+3)& (0+255),b
 15100                           
 15101                           ; BSR set to: 0
 15102  003A0C  0012               	return	
 15103  003A0E                     
 15104                           ; BSR set to: 0
 15105                           
 15106                           ; BSR set to: 0
 15107  003A0E  90D8               	bcf	status,0,c
 15108  003A10  37BA               	rlcf	___fttol@lval& (0+255),f,b
 15109  003A12  37BB               	rlcf	(___fttol@lval+1)& (0+255),f,b
 15110  003A14  37BC               	rlcf	(___fttol@lval+2)& (0+255),f,b
 15111  003A16  37BD               	rlcf	(___fttol@lval+3)& (0+255),f,b
 15112  003A18  07BE               	decf	___fttol@exp1& (0+255),f,b
 15113  003A1A                     l3122:
 15114                           
 15115                           ; BSR set to: 0
 15116                           
 15117                           ; BSR set to: 0
 15118  003A1A  51BE               	movf	___fttol@exp1& (0+255),w,b
 15119  003A1C  A4D8               	btfss	status,2,c
 15120  003A1E  D7F7               	goto	l3123
 15121  003A20                     u7680:
 15122                           
 15123                           ; BSR set to: 0
 15124                           
 15125                           ; BSR set to: 0
 15126                           
 15127                           ; BSR set to: 0
 15128  003A20  51B9               	movf	___fttol@sign1& (0+255),w,b
 15129  003A22  B4D8               	btfsc	status,2,c
 15130  003A24  D008               	goto	l3125
 15131                           
 15132                           ; BSR set to: 0
 15133  003A26  1FBD               	comf	(___fttol@lval+3)& (0+255),f,b
 15134  003A28  1FBC               	comf	(___fttol@lval+2)& (0+255),f,b
 15135  003A2A  1FBB               	comf	(___fttol@lval+1)& (0+255),f,b
 15136  003A2C  6DBA               	negf	___fttol@lval& (0+255),b
 15137  003A2E  0E00               	movlw	0
 15138  003A30  23BB               	addwfc	(___fttol@lval+1)& (0+255),f,b
 15139  003A32  23BC               	addwfc	(___fttol@lval+2)& (0+255),f,b
 15140  003A34  23BD               	addwfc	(___fttol@lval+3)& (0+255),f,b
 15141  003A36                     l3125:
 15142                           
 15143                           ; BSR set to: 0
 15144                           
 15145                           ; BSR set to: 0
 15146  003A36  C0BA  F0B0         	movff	___fttol@lval,?___fttol
 15147  003A3A  C0BB  F0B1         	movff	___fttol@lval+1,?___fttol+1
 15148  003A3E  C0BC  F0B2         	movff	___fttol@lval+2,?___fttol+2
 15149  003A42  C0BD  F0B3         	movff	___fttol@lval+3,?___fttol+3
 15150  003A46  0012               	return	
 15151  003A48                     __end_of___fttol:
 15152                           	opt stack 0
 15153                           tblptru	equ	0xFF8
 15154                           tblptrh	equ	0xFF7
 15155                           tblptrl	equ	0xFF6
 15156                           tablat	equ	0xFF5
 15157                           prodh	equ	0xFF4
 15158                           prodl	equ	0xFF3
 15159                           intcon	equ	0xFF2
 15160                           postinc0	equ	0xFEE
 15161                           wreg	equ	0xFE8
 15162                           indf1	equ	0xFE7
 15163                           postdec1	equ	0xFE5
 15164                           fsr1h	equ	0xFE2
 15165                           fsr1l	equ	0xFE1
 15166                           indf2	equ	0xFDF
 15167                           postinc2	equ	0xFDE
 15168                           postdec2	equ	0xFDD
 15169                           plusw2	equ	0xFDB
 15170                           fsr2h	equ	0xFDA
 15171                           fsr2l	equ	0xFD9
 15172                           status	equ	0xFD8
 15173                           
 15174 ;; *************** function ___ftsub *****************
 15175 ;; Defined at:
 15176 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftsub.c"
 15177 ;; Parameters:    Size  Location     Type
 15178 ;;  f1              3   32[BANK0 ] float 
 15179 ;;  f2              3   35[BANK0 ] float 
 15180 ;; Auto vars:     Size  Location     Type
 15181 ;;		None
 15182 ;; Return value:  Size  Location     Type
 15183 ;;                  3   32[BANK0 ] float 
 15184 ;; Registers used:
 15185 ;;		wreg, status,2, status,0, cstack
 15186 ;; Tracked objects:
 15187 ;;		On entry : 0/0
 15188 ;;		On exit  : 0/0
 15189 ;;		Unchanged: 0/0
 15190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15191 ;;      Params:         0       6       0       0       0       0       0       0       0
 15192 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15193 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15194 ;;      Totals:         0       6       0       0       0       0       0       0       0
 15195 ;;Total ram usage:        6 bytes
 15196 ;; Hardware stack levels used:    1
 15197 ;; Hardware stack levels required when called:   12
 15198 ;; This function calls:
 15199 ;;		___ftadd
 15200 ;; This function is called by:
 15201 ;;		_sprintf
 15202 ;; This function uses a non-reentrant model
 15203 ;;
 15204                           
 15205                           	psect	text46
 15206  00525C                     __ptext46:
 15207                           	opt stack 0
 15208  00525C                     ___ftsub:
 15209                           	opt stack 17
 15210                           
 15211                           ; BSR set to: 0
 15212                           ;incstack = 0
 15213  00525C  0100               	movlb	0	; () banked
 15214  00525E  5183               	movf	___ftsub@f2& (0+255),w,b
 15215  005260  1184               	iorwf	(___ftsub@f2+1)& (0+255),w,b
 15216  005262  1185               	iorwf	(___ftsub@f2+2)& (0+255),w,b
 15217  005264  B4D8               	btfsc	status,2,c
 15218  005266  D006               	goto	l3110
 15219                           
 15220                           ; BSR set to: 0
 15221  005268  0E00               	movlw	0
 15222  00526A  1B83               	xorwf	___ftsub@f2& (0+255),f,b
 15223  00526C  0E00               	movlw	0
 15224  00526E  1B84               	xorwf	(___ftsub@f2+1)& (0+255),f,b
 15225  005270  0E80               	movlw	128
 15226  005272  1B85               	xorwf	(___ftsub@f2+2)& (0+255),f,b
 15227  005274                     l3110:
 15228                           
 15229                           ; BSR set to: 0
 15230                           
 15231                           ; BSR set to: 0
 15232  005274  C080  F074         	movff	___ftsub@f1,___ftadd@f1
 15233  005278  C081  F075         	movff	___ftsub@f1+1,___ftadd@f1+1
 15234  00527C  C082  F076         	movff	___ftsub@f1+2,___ftadd@f1+2
 15235  005280  C083  F077         	movff	___ftsub@f2,___ftadd@f2
 15236  005284  C084  F078         	movff	___ftsub@f2+1,___ftadd@f2+1
 15237  005288  C085  F079         	movff	___ftsub@f2+2,___ftadd@f2+2
 15238  00528C  EC82  F014         	call	___ftadd	;wreg free
 15239  005290  C074  F080         	movff	?___ftadd,?___ftsub
 15240  005294  C075  F081         	movff	?___ftadd+1,?___ftsub+1
 15241  005298  C076  F082         	movff	?___ftadd+2,?___ftsub+2
 15242  00529C  0012               	return	
 15243  00529E                     __end_of___ftsub:
 15244                           	opt stack 0
 15245                           tblptru	equ	0xFF8
 15246                           tblptrh	equ	0xFF7
 15247                           tblptrl	equ	0xFF6
 15248                           tablat	equ	0xFF5
 15249                           prodh	equ	0xFF4
 15250                           prodl	equ	0xFF3
 15251                           intcon	equ	0xFF2
 15252                           postinc0	equ	0xFEE
 15253                           wreg	equ	0xFE8
 15254                           indf1	equ	0xFE7
 15255                           postdec1	equ	0xFE5
 15256                           fsr1h	equ	0xFE2
 15257                           fsr1l	equ	0xFE1
 15258                           indf2	equ	0xFDF
 15259                           postinc2	equ	0xFDE
 15260                           postdec2	equ	0xFDD
 15261                           plusw2	equ	0xFDB
 15262                           fsr2h	equ	0xFDA
 15263                           fsr2l	equ	0xFD9
 15264                           status	equ	0xFD8
 15265                           
 15266 ;; *************** function ___ftadd *****************
 15267 ;; Defined at:
 15268 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftadd.c"
 15269 ;; Parameters:    Size  Location     Type
 15270 ;;  f1              3   20[BANK0 ] float 
 15271 ;;  f2              3   23[BANK0 ] float 
 15272 ;; Auto vars:     Size  Location     Type
 15273 ;;  exp1            1   31[BANK0 ] unsigned char 
 15274 ;;  exp2            1   30[BANK0 ] unsigned char 
 15275 ;;  sign            1   29[BANK0 ] unsigned char 
 15276 ;; Return value:  Size  Location     Type
 15277 ;;                  3   20[BANK0 ] float 
 15278 ;; Registers used:
 15279 ;;		wreg, status,2, status,0, cstack
 15280 ;; Tracked objects:
 15281 ;;		On entry : 0/0
 15282 ;;		On exit  : 0/0
 15283 ;;		Unchanged: 0/0
 15284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15285 ;;      Params:         0       6       0       0       0       0       0       0       0
 15286 ;;      Locals:         0       3       0       0       0       0       0       0       0
 15287 ;;      Temps:          0       3       0       0       0       0       0       0       0
 15288 ;;      Totals:         0      12       0       0       0       0       0       0       0
 15289 ;;Total ram usage:       12 bytes
 15290 ;; Hardware stack levels used:    1
 15291 ;; Hardware stack levels required when called:   11
 15292 ;; This function calls:
 15293 ;;		___ftpack
 15294 ;; This function is called by:
 15295 ;;		_le_AD
 15296 ;;		_sprintf
 15297 ;;		___ftsub
 15298 ;; This function uses a non-reentrant model
 15299 ;;
 15300                           
 15301                           	psect	text47
 15302  002904                     __ptext47:
 15303                           	opt stack 0
 15304  002904                     ___ftadd:
 15305                           	opt stack 17
 15306                           
 15307                           ;incstack = 0
 15308  002904  C076  F07A         	movff	___ftadd@f1+2,??___ftadd
 15309  002908  0100               	movlb	0	; () banked
 15310  00290A  6B7B               	clrf	(??___ftadd+1)& (0+255),b
 15311  00290C  6B7C               	clrf	(??___ftadd+2)& (0+255),b
 15312  00290E  3575               	rlcf	(___ftadd@f1+1)& (0+255),w,b
 15313  002910  377A               	rlcf	??___ftadd& (0+255),f,b
 15314  002912  E301               	bnc	u6631
 15315  002914  817B               	bsf	(??___ftadd+1)& (0+255),0,b
 15316  002916                     u6631:
 15317  002916  517A               	movf	??___ftadd& (0+255),w,b
 15318  002918  6F7F               	movwf	___ftadd@exp1& (0+255),b
 15319  00291A  C079  F07A         	movff	___ftadd@f2+2,??___ftadd
 15320  00291E  6B7B               	clrf	(??___ftadd+1)& (0+255),b
 15321  002920  6B7C               	clrf	(??___ftadd+2)& (0+255),b
 15322  002922  3578               	rlcf	(___ftadd@f2+1)& (0+255),w,b
 15323  002924  377A               	rlcf	??___ftadd& (0+255),f,b
 15324  002926  E301               	bnc	u6641
 15325  002928  817B               	bsf	(??___ftadd+1)& (0+255),0,b
 15326  00292A                     u6641:
 15327  00292A  517A               	movf	??___ftadd& (0+255),w,b
 15328  00292C  6F7E               	movwf	___ftadd@exp2& (0+255),b
 15329                           
 15330                           ; BSR set to: 0
 15331  00292E  517F               	movf	___ftadd@exp1& (0+255),w,b
 15332  002930  B4D8               	btfsc	status,2,c
 15333  002932  D00B               	goto	u6670
 15334                           
 15335                           ; BSR set to: 0
 15336  002934  517E               	movf	___ftadd@exp2& (0+255),w,b
 15337  002936  5D7F               	subwf	___ftadd@exp1& (0+255),w,b
 15338  002938  B0D8               	btfsc	status,0,c
 15339  00293A  D00E               	goto	l3028
 15340                           
 15341                           ; BSR set to: 0
 15342  00293C  517F               	movf	___ftadd@exp1& (0+255),w,b
 15343  00293E  0800               	sublw	0
 15344  002940  257E               	addwf	___ftadd@exp2& (0+255),w,b
 15345  002942  6F7A               	movwf	??___ftadd& (0+255),b
 15346  002944  0E18               	movlw	24
 15347  002946  657A               	cpfsgt	??___ftadd& (0+255),b
 15348  002948  D007               	goto	l3028
 15349  00294A                     u6670:
 15350                           
 15351                           ; BSR set to: 0
 15352  00294A  C077  F074         	movff	___ftadd@f2,?___ftadd
 15353  00294E  C078  F075         	movff	___ftadd@f2+1,?___ftadd+1
 15354  002952  C079  F076         	movff	___ftadd@f2+2,?___ftadd+2
 15355  002956  0012               	return	
 15356  002958                     l3028:
 15357                           
 15358                           ; BSR set to: 0
 15359                           
 15360                           ; BSR set to: 0
 15361  002958  517E               	movf	___ftadd@exp2& (0+255),w,b
 15362  00295A  B4D8               	btfsc	status,2,c
 15363  00295C  D00B               	goto	u6700
 15364                           
 15365                           ; BSR set to: 0
 15366  00295E  517F               	movf	___ftadd@exp1& (0+255),w,b
 15367  002960  5D7E               	subwf	___ftadd@exp2& (0+255),w,b
 15368  002962  B0D8               	btfsc	status,0,c
 15369  002964  D00E               	goto	l3032
 15370                           
 15371                           ; BSR set to: 0
 15372  002966  517E               	movf	___ftadd@exp2& (0+255),w,b
 15373  002968  0800               	sublw	0
 15374  00296A  257F               	addwf	___ftadd@exp1& (0+255),w,b
 15375  00296C  6F7A               	movwf	??___ftadd& (0+255),b
 15376  00296E  0E18               	movlw	24
 15377  002970  657A               	cpfsgt	??___ftadd& (0+255),b
 15378  002972  D007               	goto	l3032
 15379  002974                     u6700:
 15380                           
 15381                           ; BSR set to: 0
 15382  002974  C074  F074         	movff	___ftadd@f1,?___ftadd
 15383  002978  C075  F075         	movff	___ftadd@f1+1,?___ftadd+1
 15384  00297C  C076  F076         	movff	___ftadd@f1+2,?___ftadd+2
 15385  002980  0012               	return	
 15386  002982                     l3032:
 15387                           
 15388                           ; BSR set to: 0
 15389                           
 15390                           ; BSR set to: 0
 15391  002982  0E06               	movlw	6
 15392  002984  6F7D               	movwf	___ftadd@sign& (0+255),b
 15393                           
 15394                           ; BSR set to: 0
 15395  002986  BF76               	btfsc	(___ftadd@f1+2)& (0+255),7,b
 15396                           
 15397                           ; BSR set to: 0
 15398  002988  8F7D               	bsf	___ftadd@sign& (0+255),7,b
 15399                           
 15400                           ; BSR set to: 0
 15401                           
 15402                           ; BSR set to: 0
 15403  00298A  BF79               	btfsc	(___ftadd@f2+2)& (0+255),7,b
 15404                           
 15405                           ; BSR set to: 0
 15406  00298C  8D7D               	bsf	___ftadd@sign& (0+255),6,b
 15407                           
 15408                           ; BSR set to: 0
 15409  00298E  8F75               	bsf	(___ftadd@f1+1)& (0+255),7,b
 15410                           
 15411                           ; BSR set to: 0
 15412  002990  0EFF               	movlw	255
 15413  002992  1774               	andwf	___ftadd@f1& (0+255),f,b
 15414  002994  0EFF               	movlw	255
 15415  002996  1775               	andwf	(___ftadd@f1+1)& (0+255),f,b
 15416  002998  0E00               	movlw	0
 15417  00299A  1776               	andwf	(___ftadd@f1+2)& (0+255),f,b
 15418  00299C  8F78               	bsf	(___ftadd@f2+1)& (0+255),7,b
 15419                           
 15420                           ; BSR set to: 0
 15421  00299E  0EFF               	movlw	255
 15422  0029A0  1777               	andwf	___ftadd@f2& (0+255),f,b
 15423  0029A2  0EFF               	movlw	255
 15424  0029A4  1778               	andwf	(___ftadd@f2+1)& (0+255),f,b
 15425  0029A6  0E00               	movlw	0
 15426  0029A8  1779               	andwf	(___ftadd@f2+2)& (0+255),f,b
 15427                           
 15428                           ; BSR set to: 0
 15429  0029AA  517E               	movf	___ftadd@exp2& (0+255),w,b
 15430  0029AC  5D7F               	subwf	___ftadd@exp1& (0+255),w,b
 15431  0029AE  B0D8               	btfsc	status,0,c
 15432  0029B0  D01B               	goto	l3037
 15433  0029B2                     u6730:
 15434                           
 15435                           ; BSR set to: 0
 15436                           
 15437                           ; BSR set to: 0
 15438  0029B2  90D8               	bcf	status,0,c
 15439  0029B4  3777               	rlcf	___ftadd@f2& (0+255),f,b
 15440  0029B6  3778               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 15441  0029B8  3779               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 15442  0029BA  077E               	decf	___ftadd@exp2& (0+255),f,b
 15443                           
 15444                           ; BSR set to: 0
 15445  0029BC  517F               	movf	___ftadd@exp1& (0+255),w,b
 15446  0029BE  197E               	xorwf	___ftadd@exp2& (0+255),w,b
 15447  0029C0  B4D8               	btfsc	status,2,c
 15448  0029C2  D00D               	goto	l3042
 15449                           
 15450                           ; BSR set to: 0
 15451  0029C4  077D               	decf	___ftadd@sign& (0+255),f,b
 15452  0029C6  C07D  F07A         	movff	___ftadd@sign,??___ftadd
 15453  0029CA  0E07               	movlw	7
 15454  0029CC  177A               	andwf	??___ftadd& (0+255),f,b
 15455  0029CE  B4D8               	btfsc	status,2,c
 15456  0029D0  D006               	goto	l3042
 15457  0029D2  D7EF               	goto	u6730
 15458  0029D4                     
 15459                           ; BSR set to: 0
 15460                           
 15461                           ; BSR set to: 0
 15462  0029D4  90D8               	bcf	status,0,c
 15463  0029D6  3376               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 15464  0029D8  3375               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 15465  0029DA  3374               	rrcf	___ftadd@f1& (0+255),f,b
 15466  0029DC  2B7F               	incf	___ftadd@exp1& (0+255),f,b
 15467  0029DE                     l3042:
 15468                           
 15469                           ; BSR set to: 0
 15470                           
 15471                           ; BSR set to: 0
 15472  0029DE  517E               	movf	___ftadd@exp2& (0+255),w,b
 15473  0029E0  197F               	xorwf	___ftadd@exp1& (0+255),w,b
 15474  0029E2  B4D8               	btfsc	status,2,c
 15475  0029E4  D01F               	goto	u6800
 15476  0029E6  D7F6               	goto	l3043
 15477  0029E8                     l3037:
 15478                           
 15479                           ; BSR set to: 0
 15480                           
 15481                           ; BSR set to: 0
 15482  0029E8  517F               	movf	___ftadd@exp1& (0+255),w,b
 15483  0029EA  5D7E               	subwf	___ftadd@exp2& (0+255),w,b
 15484  0029EC  B0D8               	btfsc	status,0,c
 15485  0029EE  D01A               	goto	u6800
 15486  0029F0                     u6770:
 15487                           
 15488                           ; BSR set to: 0
 15489                           
 15490                           ; BSR set to: 0
 15491  0029F0  90D8               	bcf	status,0,c
 15492  0029F2  3774               	rlcf	___ftadd@f1& (0+255),f,b
 15493  0029F4  3775               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 15494  0029F6  3776               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 15495  0029F8  077F               	decf	___ftadd@exp1& (0+255),f,b
 15496                           
 15497                           ; BSR set to: 0
 15498  0029FA  517F               	movf	___ftadd@exp1& (0+255),w,b
 15499  0029FC  197E               	xorwf	___ftadd@exp2& (0+255),w,b
 15500  0029FE  B4D8               	btfsc	status,2,c
 15501  002A00  D00D               	goto	l3051
 15502                           
 15503                           ; BSR set to: 0
 15504  002A02  077D               	decf	___ftadd@sign& (0+255),f,b
 15505  002A04  C07D  F07A         	movff	___ftadd@sign,??___ftadd
 15506  002A08  0E07               	movlw	7
 15507  002A0A  177A               	andwf	??___ftadd& (0+255),f,b
 15508  002A0C  B4D8               	btfsc	status,2,c
 15509  002A0E  D006               	goto	l3051
 15510  002A10  D7EF               	goto	u6770
 15511  002A12                     
 15512                           ; BSR set to: 0
 15513                           
 15514                           ; BSR set to: 0
 15515  002A12  90D8               	bcf	status,0,c
 15516  002A14  3379               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 15517  002A16  3378               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 15518  002A18  3377               	rrcf	___ftadd@f2& (0+255),f,b
 15519  002A1A  2B7E               	incf	___ftadd@exp2& (0+255),f,b
 15520  002A1C                     l3051:
 15521                           
 15522                           ; BSR set to: 0
 15523                           
 15524                           ; BSR set to: 0
 15525  002A1C  517E               	movf	___ftadd@exp2& (0+255),w,b
 15526  002A1E  197F               	xorwf	___ftadd@exp1& (0+255),w,b
 15527  002A20  A4D8               	btfss	status,2,c
 15528  002A22  D7F7               	goto	l3052
 15529  002A24                     u6800:
 15530                           
 15531                           ; BSR set to: 0
 15532                           
 15533                           ; BSR set to: 0
 15534                           
 15535                           ; BSR set to: 0
 15536  002A24  AF7D               	btfss	___ftadd@sign& (0+255),7,b
 15537  002A26  D00C               	goto	l3054
 15538                           
 15539                           ; BSR set to: 0
 15540  002A28  0EFF               	movlw	255
 15541  002A2A  1B74               	xorwf	___ftadd@f1& (0+255),f,b
 15542  002A2C  0EFF               	movlw	255
 15543  002A2E  1B75               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 15544  002A30  0EFF               	movlw	255
 15545  002A32  1B76               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 15546  002A34  0E01               	movlw	1
 15547  002A36  2774               	addwf	___ftadd@f1& (0+255),f,b
 15548  002A38  0E00               	movlw	0
 15549  002A3A  2375               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 15550  002A3C  0E00               	movlw	0
 15551  002A3E  2376               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 15552  002A40                     l3054:
 15553                           
 15554                           ; BSR set to: 0
 15555  002A40  AD7D               	btfss	___ftadd@sign& (0+255),6,b
 15556  002A42  D00C               	goto	l3055
 15557                           
 15558                           ; BSR set to: 0
 15559  002A44  0EFF               	movlw	255
 15560  002A46  1B77               	xorwf	___ftadd@f2& (0+255),f,b
 15561  002A48  0EFF               	movlw	255
 15562  002A4A  1B78               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 15563  002A4C  0EFF               	movlw	255
 15564  002A4E  1B79               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 15565  002A50  0E01               	movlw	1
 15566  002A52  2777               	addwf	___ftadd@f2& (0+255),f,b
 15567  002A54  0E00               	movlw	0
 15568  002A56  2378               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 15569  002A58  0E00               	movlw	0
 15570  002A5A  2379               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 15571  002A5C                     l3055:
 15572                           
 15573                           ; BSR set to: 0
 15574                           
 15575                           ; BSR set to: 0
 15576  002A5C  0E00               	movlw	0
 15577  002A5E  6F7D               	movwf	___ftadd@sign& (0+255),b
 15578                           
 15579                           ; BSR set to: 0
 15580  002A60  5174               	movf	___ftadd@f1& (0+255),w,b
 15581  002A62  2777               	addwf	___ftadd@f2& (0+255),f,b
 15582  002A64  5175               	movf	(___ftadd@f1+1)& (0+255),w,b
 15583  002A66  2378               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 15584  002A68  5176               	movf	(___ftadd@f1+2)& (0+255),w,b
 15585  002A6A  2379               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 15586                           
 15587                           ; BSR set to: 0
 15588  002A6C  AF79               	btfss	(___ftadd@f2+2)& (0+255),7,b
 15589  002A6E  D00E               	goto	l3056
 15590                           
 15591                           ; BSR set to: 0
 15592  002A70  0EFF               	movlw	255
 15593  002A72  1B77               	xorwf	___ftadd@f2& (0+255),f,b
 15594  002A74  0EFF               	movlw	255
 15595  002A76  1B78               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 15596  002A78  0EFF               	movlw	255
 15597  002A7A  1B79               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 15598  002A7C  0E01               	movlw	1
 15599  002A7E  2777               	addwf	___ftadd@f2& (0+255),f,b
 15600  002A80  0E00               	movlw	0
 15601  002A82  2378               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 15602  002A84  0E00               	movlw	0
 15603  002A86  2379               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 15604                           
 15605                           ; BSR set to: 0
 15606  002A88  0E01               	movlw	1
 15607  002A8A  6F7D               	movwf	___ftadd@sign& (0+255),b
 15608  002A8C                     l3056:
 15609                           
 15610                           ; BSR set to: 0
 15611                           
 15612                           ; BSR set to: 0
 15613  002A8C  C077  F060         	movff	___ftadd@f2,___ftpack@arg
 15614  002A90  C078  F061         	movff	___ftadd@f2+1,___ftpack@arg+1
 15615  002A94  C079  F062         	movff	___ftadd@f2+2,___ftpack@arg+2
 15616  002A98  C07F  F063         	movff	___ftadd@exp1,___ftpack@exp
 15617  002A9C  C07D  F064         	movff	___ftadd@sign,___ftpack@sign
 15618  002AA0  ECE0  F020         	call	___ftpack	;wreg free
 15619  002AA4  C060  F074         	movff	?___ftpack,?___ftadd
 15620  002AA8  C061  F075         	movff	?___ftpack+1,?___ftadd+1
 15621  002AAC  C062  F076         	movff	?___ftpack+2,?___ftadd+2
 15622  002AB0  0012               	return	
 15623  002AB2                     __end_of___ftadd:
 15624                           	opt stack 0
 15625                           tblptru	equ	0xFF8
 15626                           tblptrh	equ	0xFF7
 15627                           tblptrl	equ	0xFF6
 15628                           tablat	equ	0xFF5
 15629                           prodh	equ	0xFF4
 15630                           prodl	equ	0xFF3
 15631                           intcon	equ	0xFF2
 15632                           postinc0	equ	0xFEE
 15633                           wreg	equ	0xFE8
 15634                           indf1	equ	0xFE7
 15635                           postdec1	equ	0xFE5
 15636                           fsr1h	equ	0xFE2
 15637                           fsr1l	equ	0xFE1
 15638                           indf2	equ	0xFDF
 15639                           postinc2	equ	0xFDE
 15640                           postdec2	equ	0xFDD
 15641                           plusw2	equ	0xFDB
 15642                           fsr2h	equ	0xFDA
 15643                           fsr2l	equ	0xFD9
 15644                           status	equ	0xFD8
 15645                           
 15646 ;; *************** function ___ftpack *****************
 15647 ;; Defined at:
 15648 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\float.c"
 15649 ;; Parameters:    Size  Location     Type
 15650 ;;  arg             3    0[BANK0 ] unsigned um
 15651 ;;  exp             1    3[BANK0 ] unsigned char 
 15652 ;;  sign            1    4[BANK0 ] unsigned char 
 15653 ;; Auto vars:     Size  Location     Type
 15654 ;;		None
 15655 ;; Return value:  Size  Location     Type
 15656 ;;                  3    0[BANK0 ] float 
 15657 ;; Registers used:
 15658 ;;		wreg, status,2, status,0
 15659 ;; Tracked objects:
 15660 ;;		On entry : 0/0
 15661 ;;		On exit  : 0/0
 15662 ;;		Unchanged: 0/0
 15663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15664 ;;      Params:         0       5       0       0       0       0       0       0       0
 15665 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15666 ;;      Temps:          0       3       0       0       0       0       0       0       0
 15667 ;;      Totals:         0       8       0       0       0       0       0       0       0
 15668 ;;Total ram usage:        8 bytes
 15669 ;; Hardware stack levels used:    1
 15670 ;; Hardware stack levels required when called:   10
 15671 ;; This function calls:
 15672 ;;		Nothing
 15673 ;; This function is called by:
 15674 ;;		___awtoft
 15675 ;;		___ftadd
 15676 ;;		___ftdiv
 15677 ;;		___ftmul
 15678 ;;		___lltoft
 15679 ;; This function uses a non-reentrant model
 15680 ;;
 15681                           
 15682                           	psect	text48
 15683  0041C0                     __ptext48:
 15684                           	opt stack 0
 15685  0041C0                     ___ftpack:
 15686                           	opt stack 17
 15687                           
 15688                           ;incstack = 0
 15689  0041C0  0100               	movlb	0	; () banked
 15690  0041C2  5163               	movf	___ftpack@exp& (0+255),w,b
 15691  0041C4  B4D8               	btfsc	status,2,c
 15692  0041C6  D005               	goto	u6330
 15693                           
 15694                           ; BSR set to: 0
 15695  0041C8  5160               	movf	___ftpack@arg& (0+255),w,b
 15696  0041CA  1161               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 15697  0041CC  1162               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 15698  0041CE  A4D8               	btfss	status,2,c
 15699  0041D0  D00C               	goto	l2997
 15700  0041D2                     u6330:
 15701                           
 15702                           ; BSR set to: 0
 15703                           
 15704                           ; BSR set to: 0
 15705  0041D2  0E00               	movlw	0
 15706  0041D4  6F60               	movwf	?___ftpack& (0+255),b
 15707  0041D6  0E00               	movlw	0
 15708  0041D8  6F61               	movwf	(?___ftpack+1)& (0+255),b
 15709  0041DA  0E00               	movlw	0
 15710  0041DC  6F62               	movwf	(?___ftpack+2)& (0+255),b
 15711                           
 15712                           ; BSR set to: 0
 15713  0041DE  0012               	return	
 15714  0041E0                     
 15715                           ; BSR set to: 0
 15716                           
 15717                           ; BSR set to: 0
 15718  0041E0  2B63               	incf	___ftpack@exp& (0+255),f,b
 15719  0041E2  90D8               	bcf	status,0,c
 15720  0041E4  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 15721  0041E6  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 15722  0041E8  3360               	rrcf	___ftpack@arg& (0+255),f,b
 15723  0041EA                     l2997:
 15724                           
 15725                           ; BSR set to: 0
 15726                           
 15727                           ; BSR set to: 0
 15728  0041EA  0E00               	movlw	0
 15729  0041EC  1560               	andwf	___ftpack@arg& (0+255),w,b
 15730  0041EE  6F65               	movwf	??___ftpack& (0+255),b
 15731  0041F0  0E00               	movlw	0
 15732  0041F2  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
 15733  0041F4  6F66               	movwf	(??___ftpack+1)& (0+255),b
 15734  0041F6  0EFE               	movlw	254
 15735  0041F8  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
 15736  0041FA  6F67               	movwf	(??___ftpack+2)& (0+255),b
 15737  0041FC  5165               	movf	??___ftpack& (0+255),w,b
 15738  0041FE  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
 15739  004200  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
 15740  004202  B4D8               	btfsc	status,2,c
 15741  004204  D00C               	goto	l3000
 15742  004206  D7EC               	goto	l2998
 15743  004208                     
 15744                           ; BSR set to: 0
 15745                           
 15746                           ; BSR set to: 0
 15747  004208  2B63               	incf	___ftpack@exp& (0+255),f,b
 15748                           
 15749                           ; BSR set to: 0
 15750  00420A  0E01               	movlw	1
 15751  00420C  2760               	addwf	___ftpack@arg& (0+255),f,b
 15752  00420E  0E00               	movlw	0
 15753  004210  2361               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 15754  004212  0E00               	movlw	0
 15755  004214  2362               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 15756  004216  90D8               	bcf	status,0,c
 15757  004218  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 15758  00421A  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 15759  00421C  3360               	rrcf	___ftpack@arg& (0+255),f,b
 15760  00421E                     l3000:
 15761                           
 15762                           ; BSR set to: 0
 15763                           
 15764                           ; BSR set to: 0
 15765  00421E  0E00               	movlw	0
 15766  004220  1560               	andwf	___ftpack@arg& (0+255),w,b
 15767  004222  6F65               	movwf	??___ftpack& (0+255),b
 15768  004224  0E00               	movlw	0
 15769  004226  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
 15770  004228  6F66               	movwf	(??___ftpack+1)& (0+255),b
 15771  00422A  0EFF               	movlw	255
 15772  00422C  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
 15773  00422E  6F67               	movwf	(??___ftpack+2)& (0+255),b
 15774  004230  5165               	movf	??___ftpack& (0+255),w,b
 15775  004232  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
 15776  004234  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
 15777  004236  B4D8               	btfsc	status,2,c
 15778  004238  D006               	goto	l3003
 15779  00423A  D7E6               	goto	l3001
 15780  00423C                     
 15781                           ; BSR set to: 0
 15782                           
 15783                           ; BSR set to: 0
 15784  00423C  0763               	decf	___ftpack@exp& (0+255),f,b
 15785  00423E  90D8               	bcf	status,0,c
 15786  004240  3760               	rlcf	___ftpack@arg& (0+255),f,b
 15787  004242  3761               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 15788  004244  3762               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 15789  004246                     l3003:
 15790                           
 15791                           ; BSR set to: 0
 15792                           
 15793                           ; BSR set to: 0
 15794  004246  BF61               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 15795  004248  D003               	goto	u6370
 15796                           
 15797                           ; BSR set to: 0
 15798  00424A  0E02               	movlw	2
 15799  00424C  6163               	cpfslt	___ftpack@exp& (0+255),b
 15800  00424E  D7F6               	goto	l3004
 15801  004250                     u6370:
 15802                           
 15803                           ; BSR set to: 0
 15804                           
 15805                           ; BSR set to: 0
 15806  004250  A163               	btfss	___ftpack@exp& (0+255),0,b
 15807                           
 15808                           ; BSR set to: 0
 15809  004252  9F61               	bcf	(___ftpack@arg+1)& (0+255),7,b
 15810                           
 15811                           ; BSR set to: 0
 15812                           
 15813                           ; BSR set to: 0
 15814  004254  90D8               	bcf	status,0,c
 15815  004256  3363               	rrcf	___ftpack@exp& (0+255),f,b
 15816  004258  5163               	movf	___ftpack@exp& (0+255),w,b
 15817  00425A  1362               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 15818                           
 15819                           ; BSR set to: 0
 15820  00425C  5164               	movf	___ftpack@sign& (0+255),w,b
 15821  00425E  A4D8               	btfss	status,2,c
 15822                           
 15823                           ; BSR set to: 0
 15824  004260  8F62               	bsf	(___ftpack@arg+2)& (0+255),7,b
 15825                           
 15826                           ; BSR set to: 0
 15827                           
 15828                           ; BSR set to: 0
 15829  004262  C060  F060         	movff	___ftpack@arg,?___ftpack
 15830  004266  C061  F061         	movff	___ftpack@arg+1,?___ftpack+1
 15831  00426A  C062  F062         	movff	___ftpack@arg+2,?___ftpack+2
 15832  00426E  0012               	return	
 15833  004270                     __end_of___ftpack:
 15834                           	opt stack 0
 15835                           tblptru	equ	0xFF8
 15836                           tblptrh	equ	0xFF7
 15837                           tblptrl	equ	0xFF6
 15838                           tablat	equ	0xFF5
 15839                           prodh	equ	0xFF4
 15840                           prodl	equ	0xFF3
 15841                           intcon	equ	0xFF2
 15842                           postinc0	equ	0xFEE
 15843                           wreg	equ	0xFE8
 15844                           indf1	equ	0xFE7
 15845                           postdec1	equ	0xFE5
 15846                           fsr1h	equ	0xFE2
 15847                           fsr1l	equ	0xFE1
 15848                           indf2	equ	0xFDF
 15849                           postinc2	equ	0xFDE
 15850                           postdec2	equ	0xFDD
 15851                           plusw2	equ	0xFDB
 15852                           fsr2h	equ	0xFDA
 15853                           fsr2l	equ	0xFD9
 15854                           status	equ	0xFD8
 15855                           
 15856 ;; *************** function ___ftneg *****************
 15857 ;; Defined at:
 15858 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftneg.c"
 15859 ;; Parameters:    Size  Location     Type
 15860 ;;  f1              3    0[BANK0 ] float 
 15861 ;; Auto vars:     Size  Location     Type
 15862 ;;		None
 15863 ;; Return value:  Size  Location     Type
 15864 ;;                  3    0[BANK0 ] float 
 15865 ;; Registers used:
 15866 ;;		wreg, status,2, status,0
 15867 ;; Tracked objects:
 15868 ;;		On entry : 0/0
 15869 ;;		On exit  : 0/0
 15870 ;;		Unchanged: 0/0
 15871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15872 ;;      Params:         0       3       0       0       0       0       0       0       0
 15873 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15874 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15875 ;;      Totals:         0       3       0       0       0       0       0       0       0
 15876 ;;Total ram usage:        3 bytes
 15877 ;; Hardware stack levels used:    1
 15878 ;; Hardware stack levels required when called:   10
 15879 ;; This function calls:
 15880 ;;		Nothing
 15881 ;; This function is called by:
 15882 ;;		_sprintf
 15883 ;; This function uses a non-reentrant model
 15884 ;;
 15885                           
 15886                           	psect	text49
 15887  0055E6                     __ptext49:
 15888                           	opt stack 0
 15889  0055E6                     ___ftneg:
 15890                           	opt stack 19
 15891                           
 15892                           ; BSR set to: 0
 15893                           ;incstack = 0
 15894  0055E6  0100               	movlb	0	; () banked
 15895  0055E8  5160               	movf	___ftneg@f1& (0+255),w,b
 15896  0055EA  1161               	iorwf	(___ftneg@f1+1)& (0+255),w,b
 15897  0055EC  1162               	iorwf	(___ftneg@f1+2)& (0+255),w,b
 15898  0055EE  B4D8               	btfsc	status,2,c
 15899  0055F0  D006               	goto	l3104
 15900                           
 15901                           ; BSR set to: 0
 15902  0055F2  0E00               	movlw	0
 15903  0055F4  1B60               	xorwf	___ftneg@f1& (0+255),f,b
 15904  0055F6  0E00               	movlw	0
 15905  0055F8  1B61               	xorwf	(___ftneg@f1+1)& (0+255),f,b
 15906  0055FA  0E80               	movlw	128
 15907  0055FC  1B62               	xorwf	(___ftneg@f1+2)& (0+255),f,b
 15908  0055FE                     l3104:
 15909                           
 15910                           ; BSR set to: 0
 15911  0055FE  C060  F060         	movff	___ftneg@f1,?___ftneg
 15912  005602  C061  F061         	movff	___ftneg@f1+1,?___ftneg+1
 15913  005606  C062  F062         	movff	___ftneg@f1+2,?___ftneg+2
 15914                           
 15915                           ; BSR set to: 0
 15916  00560A  0012               	return		;funcret
 15917  00560C                     __end_of___ftneg:
 15918                           	opt stack 0
 15919                           tblptru	equ	0xFF8
 15920                           tblptrh	equ	0xFF7
 15921                           tblptrl	equ	0xFF6
 15922                           tablat	equ	0xFF5
 15923                           prodh	equ	0xFF4
 15924                           prodl	equ	0xFF3
 15925                           intcon	equ	0xFF2
 15926                           postinc0	equ	0xFEE
 15927                           wreg	equ	0xFE8
 15928                           indf1	equ	0xFE7
 15929                           postdec1	equ	0xFE5
 15930                           fsr1h	equ	0xFE2
 15931                           fsr1l	equ	0xFE1
 15932                           indf2	equ	0xFDF
 15933                           postinc2	equ	0xFDE
 15934                           postdec2	equ	0xFDD
 15935                           plusw2	equ	0xFDB
 15936                           fsr2h	equ	0xFDA
 15937                           fsr2l	equ	0xFD9
 15938                           status	equ	0xFD8
 15939                           
 15940 ;; *************** function ___ftge *****************
 15941 ;; Defined at:
 15942 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftge.c"
 15943 ;; Parameters:    Size  Location     Type
 15944 ;;  ff1             3    0[BANK0 ] float 
 15945 ;;  ff2             3    3[BANK0 ] float 
 15946 ;; Auto vars:     Size  Location     Type
 15947 ;;		None
 15948 ;; Return value:  Size  Location     Type
 15949 ;;		None               void
 15950 ;; Registers used:
 15951 ;;		wreg, status,2, status,0
 15952 ;; Tracked objects:
 15953 ;;		On entry : 0/0
 15954 ;;		On exit  : 0/0
 15955 ;;		Unchanged: 0/0
 15956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15957 ;;      Params:         0       6       0       0       0       0       0       0       0
 15958 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15959 ;;      Temps:          0       3       0       0       0       0       0       0       0
 15960 ;;      Totals:         0       9       0       0       0       0       0       0       0
 15961 ;;Total ram usage:        9 bytes
 15962 ;; Hardware stack levels used:    1
 15963 ;; Hardware stack levels required when called:   10
 15964 ;; This function calls:
 15965 ;;		Nothing
 15966 ;; This function is called by:
 15967 ;;		_sprintf
 15968 ;; This function uses a non-reentrant model
 15969 ;;
 15970                           
 15971                           	psect	text50
 15972  00480C                     __ptext50:
 15973                           	opt stack 0
 15974  00480C                     ___ftge:
 15975                           	opt stack 19
 15976                           
 15977                           ; BSR set to: 0
 15978                           ;incstack = 0
 15979  00480C  0100               	movlb	0	; () banked
 15980  00480E  AF62               	btfss	(___ftge@ff1+2)& (0+255),7,b
 15981  004810  D016               	goto	l3086
 15982                           
 15983                           ; BSR set to: 0
 15984  004812  C060  F066         	movff	___ftge@ff1,??___ftge
 15985  004816  C061  F067         	movff	___ftge@ff1+1,??___ftge+1
 15986  00481A  C062  F068         	movff	___ftge@ff1+2,??___ftge+2
 15987  00481E  1F66               	comf	??___ftge& (0+255),f,b
 15988  004820  1F67               	comf	(??___ftge+1)& (0+255),f,b
 15989  004822  1F68               	comf	(??___ftge+2)& (0+255),f,b
 15990  004824  2B66               	incf	??___ftge& (0+255),f,b
 15991  004826  0E00               	movlw	0
 15992  004828  2367               	addwfc	(??___ftge+1)& (0+255),f,b
 15993  00482A  2368               	addwfc	(??___ftge+2)& (0+255),f,b
 15994  00482C  0E00               	movlw	0
 15995  00482E  2566               	addwf	??___ftge& (0+255),w,b
 15996  004830  6F60               	movwf	___ftge@ff1& (0+255),b
 15997  004832  0E00               	movlw	0
 15998  004834  2167               	addwfc	(??___ftge+1)& (0+255),w,b
 15999  004836  6F61               	movwf	(___ftge@ff1+1)& (0+255),b
 16000  004838  0E80               	movlw	128
 16001  00483A  2168               	addwfc	(??___ftge+2)& (0+255),w,b
 16002  00483C  6F62               	movwf	(___ftge@ff1+2)& (0+255),b
 16003  00483E                     l3086:
 16004                           
 16005                           ; BSR set to: 0
 16006                           
 16007                           ; BSR set to: 0
 16008  00483E  AF65               	btfss	(___ftge@ff2+2)& (0+255),7,b
 16009  004840  D016               	goto	l3087
 16010                           
 16011                           ; BSR set to: 0
 16012  004842  C063  F066         	movff	___ftge@ff2,??___ftge
 16013  004846  C064  F067         	movff	___ftge@ff2+1,??___ftge+1
 16014  00484A  C065  F068         	movff	___ftge@ff2+2,??___ftge+2
 16015  00484E  1F66               	comf	??___ftge& (0+255),f,b
 16016  004850  1F67               	comf	(??___ftge+1)& (0+255),f,b
 16017  004852  1F68               	comf	(??___ftge+2)& (0+255),f,b
 16018  004854  2B66               	incf	??___ftge& (0+255),f,b
 16019  004856  0E00               	movlw	0
 16020  004858  2367               	addwfc	(??___ftge+1)& (0+255),f,b
 16021  00485A  2368               	addwfc	(??___ftge+2)& (0+255),f,b
 16022  00485C  0E00               	movlw	0
 16023  00485E  2566               	addwf	??___ftge& (0+255),w,b
 16024  004860  6F63               	movwf	___ftge@ff2& (0+255),b
 16025  004862  0E00               	movlw	0
 16026  004864  2167               	addwfc	(??___ftge+1)& (0+255),w,b
 16027  004866  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
 16028  004868  0E80               	movlw	128
 16029  00486A  2168               	addwfc	(??___ftge+2)& (0+255),w,b
 16030  00486C  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
 16031  00486E                     l3087:
 16032                           
 16033                           ; BSR set to: 0
 16034                           
 16035                           ; BSR set to: 0
 16036  00486E  0E00               	movlw	0
 16037  004870  1B60               	xorwf	___ftge@ff1& (0+255),f,b
 16038  004872  0E00               	movlw	0
 16039  004874  1B61               	xorwf	(___ftge@ff1+1)& (0+255),f,b
 16040  004876  0E80               	movlw	128
 16041  004878  1B62               	xorwf	(___ftge@ff1+2)& (0+255),f,b
 16042                           
 16043                           ; BSR set to: 0
 16044  00487A  0E00               	movlw	0
 16045  00487C  1B63               	xorwf	___ftge@ff2& (0+255),f,b
 16046  00487E  0E00               	movlw	0
 16047  004880  1B64               	xorwf	(___ftge@ff2+1)& (0+255),f,b
 16048  004882  0E80               	movlw	128
 16049  004884  1B65               	xorwf	(___ftge@ff2+2)& (0+255),f,b
 16050  004886  5163               	movf	___ftge@ff2& (0+255),w,b
 16051  004888  5D60               	subwf	___ftge@ff1& (0+255),w,b
 16052  00488A  5164               	movf	(___ftge@ff2+1)& (0+255),w,b
 16053  00488C  5961               	subwfb	(___ftge@ff1+1)& (0+255),w,b
 16054  00488E  5165               	movf	(___ftge@ff2+2)& (0+255),w,b
 16055  004890  5962               	subwfb	(___ftge@ff1+2)& (0+255),w,b
 16056  004892  B0D8               	btfsc	status,0,c
 16057  004894  D002               	goto	l7404
 16058                           
 16059                           ; BSR set to: 0
 16060  004896  90D8               	bcf	status,0,c
 16061  004898  0012               	return	
 16062  00489A                     l7404:
 16063                           
 16064                           ; BSR set to: 0
 16065                           
 16066                           ; BSR set to: 0
 16067  00489A  80D8               	bsf	status,0,c
 16068                           
 16069                           ; BSR set to: 0
 16070  00489C  0012               	return	
 16071  00489E                     __end_of___ftge:
 16072                           	opt stack 0
 16073                           tblptru	equ	0xFF8
 16074                           tblptrh	equ	0xFF7
 16075                           tblptrl	equ	0xFF6
 16076                           tablat	equ	0xFF5
 16077                           prodh	equ	0xFF4
 16078                           prodl	equ	0xFF3
 16079                           intcon	equ	0xFF2
 16080                           postinc0	equ	0xFEE
 16081                           wreg	equ	0xFE8
 16082                           indf1	equ	0xFE7
 16083                           postdec1	equ	0xFE5
 16084                           fsr1h	equ	0xFE2
 16085                           fsr1l	equ	0xFE1
 16086                           indf2	equ	0xFDF
 16087                           postinc2	equ	0xFDE
 16088                           postdec2	equ	0xFDD
 16089                           plusw2	equ	0xFDB
 16090                           fsr2h	equ	0xFDA
 16091                           fsr2l	equ	0xFD9
 16092                           status	equ	0xFD8
 16093                           
 16094 ;; *************** function _enviaComando *****************
 16095 ;; Defined at:
 16096 ;;		line 278 in file "LoRaWanCore.c"
 16097 ;; Parameters:    Size  Location     Type
 16098 ;;  cmd             2   28[BANK0 ] PTR const unsigned char 
 16099 ;;		 -> TxLoRaWan@comando(200), DataRate@comando(200), SetBandWidth@comando(200), SetSpreadingFactor@comando(200), 
 16100 ;;		 -> MacSave@comando(200), GetAdr@comando(200), SetAdr@comando(200), SetChannelLoRaWan@comando(200), 
 16101 ;;		 -> MAC_JOIN_OTAA(10), SYS_RESET(6), SetAppKey@comando(200), SetAppEUI@comando(200), 
 16102 ;;		 -> SetDevEUI@comando(200), GetDnctr@comando(200), 
 16103 ;;  tipoComando     1   30[BANK0 ] unsigned char 
 16104 ;; Auto vars:     Size  Location     Type
 16105 ;;  i               2   35[BANK0 ] unsigned int 
 16106 ;;  i               2   33[BANK0 ] unsigned int 
 16107 ;;  i               2   37[BANK0 ] unsigned int 
 16108 ;; Return value:  Size  Location     Type
 16109 ;;                  1    wreg      unsigned char 
 16110 ;; Registers used:
 16111 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16112 ;; Tracked objects:
 16113 ;;		On entry : 0/0
 16114 ;;		On exit  : 0/0
 16115 ;;		Unchanged: 0/0
 16116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16117 ;;      Params:         0       3       0       0       0       0       0       0       0
 16118 ;;      Locals:         0       6       0       0       0       0       0       0       0
 16119 ;;      Temps:          0       2       0       0       0       0       0       0       0
 16120 ;;      Totals:         0      11       0       0       0       0       0       0       0
 16121 ;;Total ram usage:       11 bytes
 16122 ;; Hardware stack levels used:    1
 16123 ;; Hardware stack levels required when called:   12
 16124 ;; This function calls:
 16125 ;;		_initRecebeDados
 16126 ;;		_parseLoRaWan
 16127 ;;		_putch
 16128 ;;		_strlen
 16129 ;; This function is called by:
 16130 ;;		_SetDevEUI
 16131 ;;		_SetAppEUI
 16132 ;;		_SetAppKey
 16133 ;;		_ResetModuloLoRaWan
 16134 ;;		_JoinLoRaWan
 16135 ;;		_SetChannelLoRaWan
 16136 ;;		_SetAdr
 16137 ;;		_MacSave
 16138 ;;		_SetSpreadingFactor
 16139 ;;		_SetBandWidth
 16140 ;;		_DataRate
 16141 ;;		_TxLoRaWan
 16142 ;;		_GetDnctr
 16143 ;;		_GetAdr
 16144 ;; This function uses a non-reentrant model
 16145 ;;
 16146                           
 16147                           	psect	text51
 16148  00364A                     __ptext51:
 16149                           	opt stack 0
 16150  00364A                     _enviaComando:
 16151                           	opt stack 17
 16152                           
 16153                           ;LoRaWanCore.c: 280: initRecebeDados();
 16154                           
 16155                           ; BSR set to: 0
 16156                           ;incstack = 0
 16157  00364A  EC5E  F02B         	call	_initRecebeDados	;wreg free
 16158                           
 16159                           ;LoRaWanCore.c: 282: switch (tipoComando)
 16160  00364E  D041               	goto	l2414
 16161  003650                     
 16162                           ;LoRaWanCore.c: 285: {
 16163                           ;LoRaWanCore.c: 286: for (uint16_t i = 0; i < strlen(MAC); i++)
 16164  003650  0E00               	movlw	0
 16165  003652  0100               	movlb	0	; () banked
 16166  003654  6F82               	movwf	(enviaComando@i+1)& (0+255),b
 16167  003656  0E00               	movlw	0
 16168  003658  6F81               	movwf	enviaComando@i& (0+255),b
 16169  00365A  D00D               	goto	l2416
 16170  00365C                     
 16171                           ; BSR set to: 0
 16172                           ;LoRaWanCore.c: 287: {
 16173                           ;LoRaWanCore.c: 288: putch((char)MAC[i]);
 16174                           
 16175                           ; BSR set to: 0
 16176  00365C  0EED               	movlw	low _MAC
 16177  00365E  2581               	addwf	enviaComando@i& (0+255),w,b
 16178  003660  6EF6               	movwf	tblptrl,c
 16179  003662  0E7D               	movlw	high _MAC
 16180  003664  2182               	addwfc	(enviaComando@i+1)& (0+255),w,b
 16181  003666  6EF7               	movwf	tblptrh,c
 16182  003668                     	if	0	;There are less than 3 active tblptr bytes
 16183  003668                     	endif
 16184  003668  0008               	tblrd		*
 16185  00366A  50F5               	movf	tablat,w,c
 16186  00366C  EC82  F02B         	call	_putch
 16187  003670  0100               	movlb	0	; () banked
 16188  003672  4B81               	infsnz	enviaComando@i& (0+255),f,b
 16189  003674  2B82               	incf	(enviaComando@i+1)& (0+255),f,b
 16190  003676                     l2416:
 16191                           
 16192                           ; BSR set to: 0
 16193                           
 16194                           ; BSR set to: 0
 16195  003676  0EED               	movlw	low _MAC
 16196  003678  6F60               	movwf	strlen@s& (0+255),b
 16197  00367A  0E7D               	movlw	high _MAC
 16198  00367C  6F61               	movwf	(strlen@s+1)& (0+255),b
 16199  00367E  ECE2  F027         	call	_strlen	;wreg free
 16200  003682  0100               	movlb	0	; () banked
 16201  003684  5160               	movf	?_strlen& (0+255),w,b
 16202  003686  5D81               	subwf	enviaComando@i& (0+255),w,b
 16203  003688  5161               	movf	(?_strlen+1)& (0+255),w,b
 16204  00368A  5982               	subwfb	(enviaComando@i+1)& (0+255),w,b
 16205  00368C  B0D8               	btfsc	status,0,c
 16206  00368E  D029               	goto	l2419
 16207  003690  D7E5               	goto	l2417
 16208  003692                     
 16209                           ; BSR set to: 0
 16210                           ;LoRaWanCore.c: 292: {
 16211                           ;LoRaWanCore.c: 293: for (uint16_t i = 0; i < strlen(SYS); i++)
 16212                           
 16213                           ; BSR set to: 0
 16214  003692  0E00               	movlw	0
 16215  003694  6F84               	movwf	(enviaComando@i_4852+1)& (0+255),b
 16216  003696  0E00               	movlw	0
 16217  003698  6F83               	movwf	enviaComando@i_4852& (0+255),b
 16218  00369A  D00D               	goto	l2421
 16219  00369C                     
 16220                           ; BSR set to: 0
 16221                           ;LoRaWanCore.c: 294: {
 16222                           ;LoRaWanCore.c: 295: putch((char)SYS[i]);
 16223                           
 16224                           ; BSR set to: 0
 16225  00369C  0EE3               	movlw	low _SYS
 16226  00369E  2583               	addwf	enviaComando@i_4852& (0+255),w,b
 16227  0036A0  6EF6               	movwf	tblptrl,c
 16228  0036A2  0E7D               	movlw	high _SYS
 16229  0036A4  2184               	addwfc	(enviaComando@i_4852+1)& (0+255),w,b
 16230  0036A6  6EF7               	movwf	tblptrh,c
 16231  0036A8                     	if	0	;There are less than 3 active tblptr bytes
 16232  0036A8                     	endif
 16233  0036A8  0008               	tblrd		*
 16234  0036AA  50F5               	movf	tablat,w,c
 16235  0036AC  EC82  F02B         	call	_putch
 16236  0036B0  0100               	movlb	0	; () banked
 16237  0036B2  4B83               	infsnz	enviaComando@i_4852& (0+255),f,b
 16238  0036B4  2B84               	incf	(enviaComando@i_4852+1)& (0+255),f,b
 16239  0036B6                     l2421:
 16240                           
 16241                           ; BSR set to: 0
 16242                           
 16243                           ; BSR set to: 0
 16244  0036B6  0EE3               	movlw	low _SYS
 16245  0036B8  6F60               	movwf	strlen@s& (0+255),b
 16246  0036BA  0E7D               	movlw	high _SYS
 16247  0036BC  6F61               	movwf	(strlen@s+1)& (0+255),b
 16248  0036BE  ECE2  F027         	call	_strlen	;wreg free
 16249  0036C2  0100               	movlb	0	; () banked
 16250  0036C4  5160               	movf	?_strlen& (0+255),w,b
 16251  0036C6  5D83               	subwf	enviaComando@i_4852& (0+255),w,b
 16252  0036C8  5161               	movf	(?_strlen+1)& (0+255),w,b
 16253  0036CA  5984               	subwfb	(enviaComando@i_4852+1)& (0+255),w,b
 16254  0036CC  B0D8               	btfsc	status,0,c
 16255  0036CE  D009               	goto	l2419
 16256  0036D0  D7E5               	goto	l2422
 16257  0036D2                     l2414:
 16258                           
 16259                           ; BSR set to: 0
 16260  0036D2  0100               	movlb	0	; () banked
 16261  0036D4  517E               	movf	enviaComando@tipoComando& (0+255),w,b
 16262                           
 16263                           ; Switch size 1, requested type "space"
 16264                           ; Number of cases is 2, Range of values is 0 to 1
 16265                           ; switch strategies available:
 16266                           ; Name         Instructions Cycles
 16267                           ; simple_byte            7     4 (average)
 16268                           ;	Chosen strategy is simple_byte
 16269  0036D6  0A00               	xorlw	0	; case 0
 16270  0036D8  B4D8               	btfsc	status,2,c
 16271  0036DA  D7BA               	goto	l2415
 16272  0036DC  0A01               	xorlw	1	; case 1
 16273  0036DE  B4D8               	btfsc	status,2,c
 16274  0036E0  D7D8               	goto	l2420
 16275  0036E2                     l2419:
 16276                           
 16277                           ; BSR set to: 0
 16278                           ;LoRaWanCore.c: 301: for (uint16_t i = 0; i < strlen(cmd); i++)
 16279                           
 16280                           ; BSR set to: 0
 16281  0036E2  0E00               	movlw	0
 16282  0036E4  6F86               	movwf	(enviaComando@i_4853+1)& (0+255),b
 16283  0036E6  0E00               	movlw	0
 16284  0036E8  6F85               	movwf	enviaComando@i_4853& (0+255),b
 16285  0036EA  D01B               	goto	l2424
 16286  0036EC                     
 16287                           ; BSR set to: 0
 16288                           ;LoRaWanCore.c: 302: {
 16289                           ;LoRaWanCore.c: 303: putch((char)cmd[i]);
 16290                           
 16291                           ; BSR set to: 0
 16292  0036EC  5185               	movf	enviaComando@i_4853& (0+255),w,b
 16293  0036EE  257C               	addwf	enviaComando@cmd& (0+255),w,b
 16294  0036F0  6F7F               	movwf	??_enviaComando& (0+255),b
 16295  0036F2  5186               	movf	(enviaComando@i_4853+1)& (0+255),w,b
 16296  0036F4  217D               	addwfc	(enviaComando@cmd+1)& (0+255),w,b
 16297  0036F6  6F80               	movwf	(??_enviaComando+1)& (0+255),b
 16298  0036F8  C07F  FFF6         	movff	??_enviaComando,tblptrl
 16299  0036FC  C080  FFF7         	movff	??_enviaComando+1,tblptrh
 16300  003700  6AF8               	clrf	tblptru,c
 16301  003702  0E07               	movlw	(high __ramtop+-1)
 16302  003704  64F7               	cpfsgt	tblptrh,c
 16303  003706  D003               	bra	u7307
 16304  003708  0008               	tblrd		*
 16305  00370A  50F5               	movf	tablat,w,c
 16306  00370C  D005               	bra	u7300
 16307  00370E                     u7307:
 16308  00370E  CFF6 FFE9          	movff	tblptrl,fsr0l
 16309  003712  CFF7 FFEA          	movff	tblptrh,fsr0h
 16310  003716  50EF               	movf	indf0,w,c
 16311  003718                     u7300:
 16312  003718  EC82  F02B         	call	_putch
 16313  00371C  0100               	movlb	0	; () banked
 16314  00371E  4B85               	infsnz	enviaComando@i_4853& (0+255),f,b
 16315  003720  2B86               	incf	(enviaComando@i_4853+1)& (0+255),f,b
 16316  003722                     l2424:
 16317                           
 16318                           ; BSR set to: 0
 16319                           
 16320                           ; BSR set to: 0
 16321  003722  C07C  F060         	movff	enviaComando@cmd,strlen@s
 16322  003726  C07D  F061         	movff	enviaComando@cmd+1,strlen@s+1
 16323  00372A  ECE2  F027         	call	_strlen	;wreg free
 16324  00372E  0100               	movlb	0	; () banked
 16325  003730  5160               	movf	?_strlen& (0+255),w,b
 16326  003732  5D85               	subwf	enviaComando@i_4853& (0+255),w,b
 16327  003734  5161               	movf	(?_strlen+1)& (0+255),w,b
 16328  003736  5986               	subwfb	(enviaComando@i_4853+1)& (0+255),w,b
 16329  003738  A0D8               	btfss	status,0,c
 16330  00373A  D7D8               	goto	l2425
 16331                           
 16332                           ; BSR set to: 0
 16333                           ;LoRaWanCore.c: 304: }
 16334                           ;LoRaWanCore.c: 306: putch(0x0D);
 16335                           
 16336                           ; BSR set to: 0
 16337  00373C  0E0D               	movlw	13
 16338  00373E  EC82  F02B         	call	_putch
 16339                           
 16340                           ;LoRaWanCore.c: 307: putch(0x0A);
 16341  003742  0E0A               	movlw	10
 16342  003744  EC82  F02B         	call	_putch
 16343                           
 16344                           ;LoRaWanCore.c: 309: return parseLoRaWan();
 16345  003748  EC38  F021         	call	_parseLoRaWan	;wreg free
 16346  00374C  0012               	return	
 16347  00374E                     __end_of_enviaComando:
 16348                           	opt stack 0
 16349                           tblptru	equ	0xFF8
 16350                           tblptrh	equ	0xFF7
 16351                           tblptrl	equ	0xFF6
 16352                           tablat	equ	0xFF5
 16353                           prodh	equ	0xFF4
 16354                           prodl	equ	0xFF3
 16355                           intcon	equ	0xFF2
 16356                           indf0	equ	0xFEF
 16357                           postinc0	equ	0xFEE
 16358                           fsr0h	equ	0xFEA
 16359                           fsr0l	equ	0xFE9
 16360                           wreg	equ	0xFE8
 16361                           indf1	equ	0xFE7
 16362                           postdec1	equ	0xFE5
 16363                           fsr1h	equ	0xFE2
 16364                           fsr1l	equ	0xFE1
 16365                           indf2	equ	0xFDF
 16366                           postinc2	equ	0xFDE
 16367                           postdec2	equ	0xFDD
 16368                           plusw2	equ	0xFDB
 16369                           fsr2h	equ	0xFDA
 16370                           fsr2l	equ	0xFD9
 16371                           status	equ	0xFD8
 16372                           
 16373 ;; *************** function _strlen *****************
 16374 ;; Defined at:
 16375 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strlen.c"
 16376 ;; Parameters:    Size  Location     Type
 16377 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 16378 ;;		 -> recebeByteLoRaWan@frameData(100), SYS(5), MAC(5), TxLoRaWan@comando(200), 
 16379 ;;		 -> DataRate@comando(200), SetBandWidth@comando(200), SetSpreadingFactor@comando(200), MacSave@comando(200), 
 16380 ;;		 -> GetAdr@comando(200), SetAdr@comando(200), SetChannelLoRaWan@comando(200), MAC_JOIN_OTAA(10), 
 16381 ;;		 -> SYS_RESET(6), SetAppKey@comando(200), SetAppEUI@comando(200), SetDevEUI@comando(200), 
 16382 ;;		 -> GetDnctr@comando(200), STR_20(16), STR_19(7), STR_18(14), 
 16383 ;;		 -> STR_17(8), STR_16(8), STR_15(10), STR_14(17), 
 16384 ;;		 -> STR_13(11), STR_12(5), STR_11(32), STR_10(7), 
 16385 ;;		 -> STR_9(11), STR_8(11), STR_7(14), STR_6(3), 
 16386 ;; Auto vars:     Size  Location     Type
 16387 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
 16388 ;;		 -> recebeByteLoRaWan@frameData(100), SYS(5), MAC(5), TxLoRaWan@comando(200), 
 16389 ;;		 -> DataRate@comando(200), SetBandWidth@comando(200), SetSpreadingFactor@comando(200), MacSave@comando(200), 
 16390 ;;		 -> GetAdr@comando(200), SetAdr@comando(200), SetChannelLoRaWan@comando(200), MAC_JOIN_OTAA(10), 
 16391 ;;		 -> SYS_RESET(6), SetAppKey@comando(200), SetAppEUI@comando(200), SetDevEUI@comando(200), 
 16392 ;;		 -> GetDnctr@comando(200), STR_20(16), STR_19(7), STR_18(14), 
 16393 ;;		 -> STR_17(8), STR_16(8), STR_15(10), STR_14(17), 
 16394 ;;		 -> STR_13(11), STR_12(5), STR_11(32), STR_10(7), 
 16395 ;;		 -> STR_9(11), STR_8(11), STR_7(14), STR_6(3), 
 16396 ;; Return value:  Size  Location     Type
 16397 ;;                  2    0[BANK0 ] unsigned int 
 16398 ;; Registers used:
 16399 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 16400 ;; Tracked objects:
 16401 ;;		On entry : 0/0
 16402 ;;		On exit  : 0/0
 16403 ;;		Unchanged: 0/0
 16404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16405 ;;      Params:         0       2       0       0       0       0       0       0       0
 16406 ;;      Locals:         0       2       0       0       0       0       0       0       0
 16407 ;;      Temps:          0       2       0       0       0       0       0       0       0
 16408 ;;      Totals:         0       6       0       0       0       0       0       0       0
 16409 ;;Total ram usage:        6 bytes
 16410 ;; Hardware stack levels used:    1
 16411 ;; Hardware stack levels required when called:   10
 16412 ;; This function calls:
 16413 ;;		Nothing
 16414 ;; This function is called by:
 16415 ;;		_enviaComando
 16416 ;; This function uses a non-reentrant model
 16417 ;;
 16418                           
 16419                           	psect	text52
 16420  004FC4                     __ptext52:
 16421                           	opt stack 0
 16422  004FC4                     _strlen:
 16423                           	opt stack 18
 16424                           
 16425                           ;incstack = 0
 16426  004FC4  C060  F064         	movff	strlen@s,strlen@cp
 16427  004FC8  C061  F065         	movff	strlen@s+1,strlen@cp+1
 16428  004FCC  D003               	goto	l3391
 16429  004FCE  0100               	movlb	0	; () banked
 16430  004FD0  4B64               	infsnz	strlen@cp& (0+255),f,b
 16431  004FD2  2B65               	incf	(strlen@cp+1)& (0+255),f,b
 16432  004FD4                     l3391:
 16433                           
 16434                           ; BSR set to: 0
 16435  004FD4  C064  FFF6         	movff	strlen@cp,tblptrl
 16436  004FD8  C065  FFF7         	movff	strlen@cp+1,tblptrh
 16437  004FDC  6AF8               	clrf	tblptru,c
 16438  004FDE  0E07               	movlw	(high __ramtop+-1)
 16439  004FE0  64F7               	cpfsgt	tblptrh,c
 16440  004FE2  D003               	bra	u6617
 16441  004FE4  0008               	tblrd		*
 16442  004FE6  50F5               	movf	tablat,w,c
 16443  004FE8  D005               	bra	u6610
 16444  004FEA                     u6617:
 16445  004FEA  CFF6 FFE9          	movff	tblptrl,fsr0l
 16446  004FEE  CFF7 FFEA          	movff	tblptrh,fsr0h
 16447  004FF2  50EF               	movf	indf0,w,c
 16448  004FF4                     u6610:
 16449  004FF4  0900               	iorlw	0
 16450  004FF6  A4D8               	btfss	status,2,c
 16451  004FF8  D7EA               	goto	l3392
 16452  004FFA  C060  F062         	movff	strlen@s,??_strlen
 16453  004FFE  C061  F063         	movff	strlen@s+1,??_strlen+1
 16454  005002  0100               	movlb	0	; () banked
 16455  005004  1F62               	comf	??_strlen& (0+255),f,b
 16456  005006  1F63               	comf	(??_strlen+1)& (0+255),f,b
 16457  005008  4B62               	infsnz	??_strlen& (0+255),f,b
 16458  00500A  2B63               	incf	(??_strlen+1)& (0+255),f,b
 16459  00500C  5164               	movf	strlen@cp& (0+255),w,b
 16460  00500E  2562               	addwf	??_strlen& (0+255),w,b
 16461  005010  6F60               	movwf	?_strlen& (0+255),b
 16462  005012  5165               	movf	(strlen@cp+1)& (0+255),w,b
 16463  005014  2163               	addwfc	(??_strlen+1)& (0+255),w,b
 16464  005016  6F61               	movwf	(?_strlen+1)& (0+255),b
 16465  005018  0012               	return	
 16466  00501A                     __end_of_strlen:
 16467                           	opt stack 0
 16468                           tblptru	equ	0xFF8
 16469                           tblptrh	equ	0xFF7
 16470                           tblptrl	equ	0xFF6
 16471                           tablat	equ	0xFF5
 16472                           prodh	equ	0xFF4
 16473                           prodl	equ	0xFF3
 16474                           intcon	equ	0xFF2
 16475                           indf0	equ	0xFEF
 16476                           postinc0	equ	0xFEE
 16477                           fsr0h	equ	0xFEA
 16478                           fsr0l	equ	0xFE9
 16479                           wreg	equ	0xFE8
 16480                           indf1	equ	0xFE7
 16481                           postdec1	equ	0xFE5
 16482                           fsr1h	equ	0xFE2
 16483                           fsr1l	equ	0xFE1
 16484                           indf2	equ	0xFDF
 16485                           postinc2	equ	0xFDE
 16486                           postdec2	equ	0xFDD
 16487                           plusw2	equ	0xFDB
 16488                           fsr2h	equ	0xFDA
 16489                           fsr2l	equ	0xFD9
 16490                           status	equ	0xFD8
 16491                           
 16492 ;; *************** function _putch *****************
 16493 ;; Defined at:
 16494 ;;		line 46 in file "uart/uart.c"
 16495 ;; Parameters:    Size  Location     Type
 16496 ;;  data            1    wreg     unsigned char 
 16497 ;; Auto vars:     Size  Location     Type
 16498 ;;  data            1    0[BANK0 ] unsigned char 
 16499 ;; Return value:  Size  Location     Type
 16500 ;;                  1    wreg      void 
 16501 ;; Registers used:
 16502 ;;		wreg
 16503 ;; Tracked objects:
 16504 ;;		On entry : 0/0
 16505 ;;		On exit  : 0/0
 16506 ;;		Unchanged: 0/0
 16507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16508 ;;      Params:         0       0       0       0       0       0       0       0       0
 16509 ;;      Locals:         0       1       0       0       0       0       0       0       0
 16510 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16511 ;;      Totals:         0       1       0       0       0       0       0       0       0
 16512 ;;Total ram usage:        1 bytes
 16513 ;; Hardware stack levels used:    1
 16514 ;; Hardware stack levels required when called:   10
 16515 ;; This function calls:
 16516 ;;		Nothing
 16517 ;; This function is called by:
 16518 ;;		_main
 16519 ;;		_enviaComando
 16520 ;;		_gen_send
 16521 ;;		_sendXBeePriv
 16522 ;; This function uses a non-reentrant model
 16523 ;;
 16524                           
 16525                           	psect	text53
 16526  005704                     __ptext53:
 16527                           	opt stack 0
 16528  005704                     _putch:
 16529                           	opt stack 20
 16530                           
 16531                           ; BSR set to: 0
 16532                           ;incstack = 0
 16533                           ;putch@data stored from wreg
 16534  005704  0100               	movlb	0	; () banked
 16535  005706  6F60               	movwf	putch@data& (0+255),b
 16536  005708                     
 16537                           ;uart.c: 48: while (!TXIF);
 16538  005708  A89E               	btfss	3998,4,c	;volatile
 16539  00570A  D7FE               	goto	l8026
 16540                           
 16541                           ;uart.c: 49: TXREG=data;
 16542  00570C  C060  FFAD         	movff	putch@data,4013	;volatile
 16543  005710  0012               	return		;funcret
 16544  005712                     __end_of_putch:
 16545                           	opt stack 0
 16546                           tblptru	equ	0xFF8
 16547                           tblptrh	equ	0xFF7
 16548                           tblptrl	equ	0xFF6
 16549                           tablat	equ	0xFF5
 16550                           prodh	equ	0xFF4
 16551                           prodl	equ	0xFF3
 16552                           intcon	equ	0xFF2
 16553                           indf0	equ	0xFEF
 16554                           postinc0	equ	0xFEE
 16555                           fsr0h	equ	0xFEA
 16556                           fsr0l	equ	0xFE9
 16557                           wreg	equ	0xFE8
 16558                           indf1	equ	0xFE7
 16559                           postdec1	equ	0xFE5
 16560                           fsr1h	equ	0xFE2
 16561                           fsr1l	equ	0xFE1
 16562                           indf2	equ	0xFDF
 16563                           postinc2	equ	0xFDE
 16564                           postdec2	equ	0xFDD
 16565                           plusw2	equ	0xFDB
 16566                           fsr2h	equ	0xFDA
 16567                           fsr2l	equ	0xFD9
 16568                           status	equ	0xFD8
 16569                           
 16570 ;; *************** function _parseLoRaWan *****************
 16571 ;; Defined at:
 16572 ;;		line 312 in file "LoRaWanCore.c"
 16573 ;; Parameters:    Size  Location     Type
 16574 ;;		None
 16575 ;; Auto vars:     Size  Location     Type
 16576 ;;  previous        4   20[BANK0 ] unsigned long 
 16577 ;;  intervalMAX     2   24[BANK0 ] unsigned int 
 16578 ;;  timeout         1   27[BANK0 ] unsigned char 
 16579 ;;  status          1   26[BANK0 ] unsigned char 
 16580 ;; Return value:  Size  Location     Type
 16581 ;;                  1    wreg      unsigned char 
 16582 ;; Registers used:
 16583 ;;		wreg, status,2, status,0, cstack
 16584 ;; Tracked objects:
 16585 ;;		On entry : 0/0
 16586 ;;		On exit  : 0/0
 16587 ;;		Unchanged: 0/0
 16588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16589 ;;      Params:         0       0       0       0       0       0       0       0       0
 16590 ;;      Locals:         0       8       0       0       0       0       0       0       0
 16591 ;;      Temps:          0      12       0       0       0       0       0       0       0
 16592 ;;      Totals:         0      20       0       0       0       0       0       0       0
 16593 ;;Total ram usage:       20 bytes
 16594 ;; Hardware stack levels used:    1
 16595 ;; Hardware stack levels required when called:   11
 16596 ;; This function calls:
 16597 ;;		_millis
 16598 ;; This function is called by:
 16599 ;;		_JoinLoRaWan
 16600 ;;		_TxLoRaWan
 16601 ;;		_enviaComando
 16602 ;; This function uses a non-reentrant model
 16603 ;;
 16604                           
 16605                           	psect	text54
 16606  004270                     __ptext54:
 16607                           	opt stack 0
 16608  004270                     _parseLoRaWan:
 16609                           	opt stack 18
 16610                           
 16611                           ;LoRaWanCore.c: 314: uint8_t status=0xFF;
 16612                           
 16613                           ;incstack = 0
 16614  004270  0100               	movlb	0	; () banked
 16615  004272  697A               	setf	parseLoRaWan@status& (0+255),b
 16616                           
 16617                           ; BSR set to: 0
 16618                           ;LoRaWanCore.c: 315: uint16_t intervalMAX=60000;
 16619  004274  0EEA               	movlw	234
 16620  004276  6F79               	movwf	(parseLoRaWan@intervalMAX+1)& (0+255),b
 16621  004278  0E60               	movlw	96
 16622  00427A  6F78               	movwf	parseLoRaWan@intervalMAX& (0+255),b
 16623                           
 16624                           ;LoRaWanCore.c: 316: bool timeout=0;
 16625  00427C  0E00               	movlw	0
 16626  00427E  6F7B               	movwf	parseLoRaWan@timeout& (0+255),b
 16627                           
 16628                           ; BSR set to: 0
 16629                           ;LoRaWanCore.c: 317: uint32_t previous=millis();
 16630  004280  EC06  F02B         	call	_millis	;wreg free
 16631  004284  C060  F074         	movff	?_millis,parseLoRaWan@previous
 16632  004288  C061  F075         	movff	?_millis+1,parseLoRaWan@previous+1
 16633  00428C  C062  F076         	movff	?_millis+2,parseLoRaWan@previous+2
 16634  004290  C063  F077         	movff	?_millis+3,parseLoRaWan@previous+3
 16635                           
 16636                           ;LoRaWanCore.c: 319: while ((!timeout) && (!novaMsgLoRaWan))
 16637  004294  D033               	goto	l2432
 16638  004296                     
 16639                           ;LoRaWanCore.c: 320: {
 16640                           ;LoRaWanCore.c: 321: if ((millis()-previous) > intervalMAX)
 16641  004296  C074  F068         	movff	parseLoRaWan@previous,??_parseLoRaWan
 16642  00429A  C075  F069         	movff	parseLoRaWan@previous+1,??_parseLoRaWan+1
 16643  00429E  C076  F06A         	movff	parseLoRaWan@previous+2,??_parseLoRaWan+2
 16644  0042A2  C077  F06B         	movff	parseLoRaWan@previous+3,??_parseLoRaWan+3
 16645  0042A6  0100               	movlb	0	; () banked
 16646  0042A8  1F68               	comf	??_parseLoRaWan& (0+255),f,b
 16647  0042AA  1F69               	comf	(??_parseLoRaWan+1)& (0+255),f,b
 16648  0042AC  1F6A               	comf	(??_parseLoRaWan+2)& (0+255),f,b
 16649  0042AE  1F6B               	comf	(??_parseLoRaWan+3)& (0+255),f,b
 16650  0042B0  2B68               	incf	??_parseLoRaWan& (0+255),f,b
 16651  0042B2  0E00               	movlw	0
 16652  0042B4  2369               	addwfc	(??_parseLoRaWan+1)& (0+255),f,b
 16653  0042B6  236A               	addwfc	(??_parseLoRaWan+2)& (0+255),f,b
 16654  0042B8  236B               	addwfc	(??_parseLoRaWan+3)& (0+255),f,b
 16655  0042BA  EC06  F02B         	call	_millis	;wreg free
 16656  0042BE  0100               	movlb	0	; () banked
 16657  0042C0  5168               	movf	??_parseLoRaWan& (0+255),w,b
 16658  0042C2  2560               	addwf	?_millis& (0+255),w,b
 16659  0042C4  6F6C               	movwf	(??_parseLoRaWan+4)& (0+255),b
 16660  0042C6  5169               	movf	(??_parseLoRaWan+1)& (0+255),w,b
 16661  0042C8  2161               	addwfc	(?_millis+1)& (0+255),w,b
 16662  0042CA  6F6D               	movwf	(??_parseLoRaWan+5)& (0+255),b
 16663  0042CC  516A               	movf	(??_parseLoRaWan+2)& (0+255),w,b
 16664  0042CE  2162               	addwfc	(?_millis+2)& (0+255),w,b
 16665  0042D0  6F6E               	movwf	(??_parseLoRaWan+6)& (0+255),b
 16666  0042D2  516B               	movf	(??_parseLoRaWan+3)& (0+255),w,b
 16667  0042D4  2163               	addwfc	(?_millis+3)& (0+255),w,b
 16668  0042D6  6F6F               	movwf	(??_parseLoRaWan+7)& (0+255),b
 16669  0042D8  5178               	movf	parseLoRaWan@intervalMAX& (0+255),w,b
 16670  0042DA  6F70               	movwf	(??_parseLoRaWan+8)& (0+255),b
 16671  0042DC  5179               	movf	(parseLoRaWan@intervalMAX+1)& (0+255),w,b
 16672  0042DE  6F71               	movwf	(??_parseLoRaWan+9)& (0+255),b
 16673  0042E0  6B72               	clrf	(??_parseLoRaWan+10)& (0+255),b
 16674  0042E2  6B73               	clrf	(??_parseLoRaWan+11)& (0+255),b
 16675  0042E4  516C               	movf	(??_parseLoRaWan+4)& (0+255),w,b
 16676  0042E6  5D70               	subwf	(??_parseLoRaWan+8)& (0+255),w,b
 16677  0042E8  516D               	movf	(??_parseLoRaWan+5)& (0+255),w,b
 16678  0042EA  5971               	subwfb	(??_parseLoRaWan+9)& (0+255),w,b
 16679  0042EC  516E               	movf	(??_parseLoRaWan+6)& (0+255),w,b
 16680  0042EE  5972               	subwfb	(??_parseLoRaWan+10)& (0+255),w,b
 16681  0042F0  516F               	movf	(??_parseLoRaWan+7)& (0+255),w,b
 16682  0042F2  5973               	subwfb	(??_parseLoRaWan+11)& (0+255),w,b
 16683  0042F4  B0D8               	btfsc	status,0,c
 16684  0042F6  D002               	goto	l2432
 16685                           
 16686                           ; BSR set to: 0
 16687                           ;LoRaWanCore.c: 322: {
 16688                           ;LoRaWanCore.c: 323: timeout=1;
 16689  0042F8  0E01               	movlw	1
 16690  0042FA  6F7B               	movwf	parseLoRaWan@timeout& (0+255),b
 16691  0042FC                     l2432:
 16692                           
 16693                           ; BSR set to: 0
 16694  0042FC  0100               	movlb	0	; () banked
 16695  0042FE  517B               	movf	parseLoRaWan@timeout& (0+255),w,b
 16696  004300  A4D8               	btfss	status,2,c
 16697  004302  D003               	goto	u6590
 16698                           
 16699                           ; BSR set to: 0
 16700  004304  5059               	movf	_novaMsgLoRaWan,w,c	;volatile
 16701  004306  B4D8               	btfsc	status,2,c
 16702  004308  D7C6               	goto	l2431
 16703  00430A                     u6590:
 16704                           
 16705                           ; BSR set to: 0
 16706                           ;LoRaWanCore.c: 324: }
 16707                           ;LoRaWanCore.c: 325: }
 16708                           ;LoRaWanCore.c: 327: if (novaMsgLoRaWan)
 16709                           
 16710                           ; BSR set to: 0
 16711                           
 16712                           ; BSR set to: 0
 16713  00430A  5059               	movf	_novaMsgLoRaWan,w,c	;volatile
 16714  00430C  B4D8               	btfsc	status,2,c
 16715  00430E  D004               	goto	l2436
 16716                           
 16717                           ; BSR set to: 0
 16718                           ;LoRaWanCore.c: 328: {
 16719                           ;LoRaWanCore.c: 329: status=responseLoRaWan;
 16720  004310  C1FE  F07A         	movff	_responseLoRaWan,parseLoRaWan@status	;volatile
 16721                           
 16722                           ; BSR set to: 0
 16723                           ;LoRaWanCore.c: 330: novaMsgLoRaWan=0;
 16724  004314  0E00               	movlw	0
 16725  004316  6E59               	movwf	_novaMsgLoRaWan,c	;volatile
 16726  004318                     l2436:
 16727                           
 16728                           ; BSR set to: 0
 16729                           ;LoRaWanCore.c: 331: }
 16730                           ;LoRaWanCore.c: 333: return status;
 16731  004318  517A               	movf	parseLoRaWan@status& (0+255),w,b
 16732  00431A  0012               	return	
 16733  00431C                     __end_of_parseLoRaWan:
 16734                           	opt stack 0
 16735                           tblptru	equ	0xFF8
 16736                           tblptrh	equ	0xFF7
 16737                           tblptrl	equ	0xFF6
 16738                           tablat	equ	0xFF5
 16739                           prodh	equ	0xFF4
 16740                           prodl	equ	0xFF3
 16741                           intcon	equ	0xFF2
 16742                           indf0	equ	0xFEF
 16743                           postinc0	equ	0xFEE
 16744                           fsr0h	equ	0xFEA
 16745                           fsr0l	equ	0xFE9
 16746                           wreg	equ	0xFE8
 16747                           indf1	equ	0xFE7
 16748                           postdec1	equ	0xFE5
 16749                           fsr1h	equ	0xFE2
 16750                           fsr1l	equ	0xFE1
 16751                           indf2	equ	0xFDF
 16752                           postinc2	equ	0xFDE
 16753                           postdec2	equ	0xFDD
 16754                           plusw2	equ	0xFDB
 16755                           fsr2h	equ	0xFDA
 16756                           fsr2l	equ	0xFD9
 16757                           status	equ	0xFD8
 16758                           
 16759 ;; *************** function _millis *****************
 16760 ;; Defined at:
 16761 ;;		line 48 in file "Timer.c"
 16762 ;; Parameters:    Size  Location     Type
 16763 ;;		None
 16764 ;; Auto vars:     Size  Location     Type
 16765 ;;  m               4    4[BANK0 ] unsigned long 
 16766 ;; Return value:  Size  Location     Type
 16767 ;;                  4    0[BANK0 ] unsigned long 
 16768 ;; Registers used:
 16769 ;;		None
 16770 ;; Tracked objects:
 16771 ;;		On entry : 0/0
 16772 ;;		On exit  : 0/0
 16773 ;;		Unchanged: 0/0
 16774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16775 ;;      Params:         0       4       0       0       0       0       0       0       0
 16776 ;;      Locals:         0       4       0       0       0       0       0       0       0
 16777 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16778 ;;      Totals:         0       8       0       0       0       0       0       0       0
 16779 ;;Total ram usage:        8 bytes
 16780 ;; Hardware stack levels used:    1
 16781 ;; Hardware stack levels required when called:   10
 16782 ;; This function calls:
 16783 ;;		Nothing
 16784 ;; This function is called by:
 16785 ;;		_delay
 16786 ;;		_main
 16787 ;;		_parseLoRaWan
 16788 ;;		_parse_message
 16789 ;;		_txZBStatusResponse
 16790 ;; This function uses a non-reentrant model
 16791 ;;
 16792                           
 16793                           	psect	text55
 16794  00560C                     __ptext55:
 16795                           	opt stack 0
 16796  00560C                     _millis:
 16797                           	opt stack 20
 16798                           
 16799                           ;Timer.c: 50: CCP1IE=0;
 16800                           
 16801                           ; BSR set to: 0
 16802                           ;incstack = 0
 16803  00560C  949D               	bcf	3997,2,c	;volatile
 16804                           
 16805                           ;Timer.c: 51: uint32_t m=ticks;
 16806  00560E  C32A  F064         	movff	_ticks,millis@m	;volatile
 16807  005612  C32B  F065         	movff	_ticks+1,millis@m+1	;volatile
 16808  005616  C32C  F066         	movff	_ticks+2,millis@m+2	;volatile
 16809  00561A  C32D  F067         	movff	_ticks+3,millis@m+3	;volatile
 16810                           
 16811                           ;Timer.c: 52: CCP1IE=1;
 16812  00561E  849D               	bsf	3997,2,c	;volatile
 16813                           
 16814                           ;Timer.c: 54: return m;
 16815  005620  C064  F060         	movff	millis@m,?_millis
 16816  005624  C065  F061         	movff	millis@m+1,?_millis+1
 16817  005628  C066  F062         	movff	millis@m+2,?_millis+2
 16818  00562C  C067  F063         	movff	millis@m+3,?_millis+3
 16819  005630  0012               	return		;funcret
 16820  005632                     __end_of_millis:
 16821                           	opt stack 0
 16822                           tblptru	equ	0xFF8
 16823                           tblptrh	equ	0xFF7
 16824                           tblptrl	equ	0xFF6
 16825                           tablat	equ	0xFF5
 16826                           prodh	equ	0xFF4
 16827                           prodl	equ	0xFF3
 16828                           intcon	equ	0xFF2
 16829                           indf0	equ	0xFEF
 16830                           postinc0	equ	0xFEE
 16831                           fsr0h	equ	0xFEA
 16832                           fsr0l	equ	0xFE9
 16833                           wreg	equ	0xFE8
 16834                           indf1	equ	0xFE7
 16835                           postdec1	equ	0xFE5
 16836                           fsr1h	equ	0xFE2
 16837                           fsr1l	equ	0xFE1
 16838                           indf2	equ	0xFDF
 16839                           postinc2	equ	0xFDE
 16840                           postdec2	equ	0xFDD
 16841                           plusw2	equ	0xFDB
 16842                           fsr2h	equ	0xFDA
 16843                           fsr2l	equ	0xFD9
 16844                           status	equ	0xFD8
 16845                           
 16846 ;; *************** function _initRecebeDados *****************
 16847 ;; Defined at:
 16848 ;;		line 336 in file "LoRaWanCore.c"
 16849 ;; Parameters:    Size  Location     Type
 16850 ;;		None
 16851 ;; Auto vars:     Size  Location     Type
 16852 ;;		None
 16853 ;; Return value:  Size  Location     Type
 16854 ;;                  1    wreg      void 
 16855 ;; Registers used:
 16856 ;;		wreg, status,2
 16857 ;; Tracked objects:
 16858 ;;		On entry : 0/0
 16859 ;;		On exit  : 0/0
 16860 ;;		Unchanged: 0/0
 16861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16862 ;;      Params:         0       0       0       0       0       0       0       0       0
 16863 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16864 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16865 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16866 ;;Total ram usage:        0 bytes
 16867 ;; Hardware stack levels used:    1
 16868 ;; Hardware stack levels required when called:   10
 16869 ;; This function calls:
 16870 ;;		Nothing
 16871 ;; This function is called by:
 16872 ;;		_enviaComando
 16873 ;; This function uses a non-reentrant model
 16874 ;;
 16875                           
 16876                           	psect	text56
 16877  0056BC                     __ptext56:
 16878                           	opt stack 0
 16879  0056BC                     _initRecebeDados:
 16880                           	opt stack 18
 16881                           
 16882                           ;LoRaWanCore.c: 338: RCIE=0;
 16883                           
 16884                           ;incstack = 0
 16885  0056BC  9A9D               	bcf	3997,5,c	;volatile
 16886                           
 16887                           ;LoRaWanCore.c: 339: responseLoRaWan=0xFF;
 16888  0056BE  0101               	movlb	1	; () banked
 16889  0056C0  69FE               	setf	_responseLoRaWan& (0+255),b	;volatile
 16890                           
 16891                           ; BSR set to: 1
 16892                           ;LoRaWanCore.c: 340: tamFrame=0;
 16893  0056C2  0E00               	movlw	0
 16894  0056C4  6E5A               	movwf	_tamFrame,c	;volatile
 16895                           
 16896                           ;LoRaWanCore.c: 341: tamDadosRecebidos=0;
 16897  0056C6  0E00               	movlw	0
 16898  0056C8  6E5B               	movwf	_tamDadosRecebidos,c	;volatile
 16899                           
 16900                           ;LoRaWanCore.c: 342: novaMsgLoRaWan=0;
 16901  0056CA  0E00               	movlw	0
 16902  0056CC  6E59               	movwf	_novaMsgLoRaWan,c	;volatile
 16903                           
 16904                           ; BSR set to: 1
 16905                           ;LoRaWanCore.c: 343: RCIE=1;
 16906  0056CE  8A9D               	bsf	3997,5,c	;volatile
 16907                           
 16908                           ; BSR set to: 1
 16909  0056D0  0012               	return		;funcret
 16910  0056D2                     __end_of_initRecebeDados:
 16911                           	opt stack 0
 16912                           tblptru	equ	0xFF8
 16913                           tblptrh	equ	0xFF7
 16914                           tblptrl	equ	0xFF6
 16915                           tablat	equ	0xFF5
 16916                           prodh	equ	0xFF4
 16917                           prodl	equ	0xFF3
 16918                           intcon	equ	0xFF2
 16919                           indf0	equ	0xFEF
 16920                           postinc0	equ	0xFEE
 16921                           fsr0h	equ	0xFEA
 16922                           fsr0l	equ	0xFE9
 16923                           wreg	equ	0xFE8
 16924                           indf1	equ	0xFE7
 16925                           postdec1	equ	0xFE5
 16926                           fsr1h	equ	0xFE2
 16927                           fsr1l	equ	0xFE1
 16928                           indf2	equ	0xFDF
 16929                           postinc2	equ	0xFDE
 16930                           postdec2	equ	0xFDD
 16931                           plusw2	equ	0xFDB
 16932                           fsr2h	equ	0xFDA
 16933                           fsr2l	equ	0xFD9
 16934                           status	equ	0xFD8
 16935                           
 16936 ;; *************** function _SYS_InterruptHigh *****************
 16937 ;; Defined at:
 16938 ;;		line 59 in file "usb/system.c"
 16939 ;; Parameters:    Size  Location     Type
 16940 ;;		None
 16941 ;; Auto vars:     Size  Location     Type
 16942 ;;  dig4            2   53[COMRAM] int 
 16943 ;;  dig3            2   51[COMRAM] int 
 16944 ;;  dig2            2   49[COMRAM] int 
 16945 ;;  dig1            2   47[COMRAM] int 
 16946 ;; Return value:  Size  Location     Type
 16947 ;;                  1    wreg      void 
 16948 ;; Registers used:
 16949 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16950 ;; Tracked objects:
 16951 ;;		On entry : 0/0
 16952 ;;		On exit  : 0/0
 16953 ;;		Unchanged: 0/0
 16954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16955 ;;      Params:         0       0       0       0       0       0       0       0       0
 16956 ;;      Locals:         8       0       0       0       0       0       0       0       0
 16957 ;;      Temps:         19       0       0       0       0       0       0       0       0
 16958 ;;      Totals:        27       0       0       0       0       0       0       0       0
 16959 ;;Total ram usage:       27 bytes
 16960 ;; Hardware stack levels used:    1
 16961 ;; Hardware stack levels required when called:    9
 16962 ;; This function calls:
 16963 ;;		_USBDeviceTasks
 16964 ;;		_getch
 16965 ;;		_recebeByteLoRaWan
 16966 ;; This function is called by:
 16967 ;;		Interrupt level 2
 16968 ;; This function uses a non-reentrant model
 16969 ;;
 16970                           
 16971                           	psect	intcode
 16972  000008                     __pintcode:
 16973                           	opt stack 0
 16974  000008                     _SYS_InterruptHigh:
 16975                           	opt stack 16
 16976                           
 16977                           ; BSR set to: 1
 16978                           ;incstack = 0
 16979  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 16980  00000A  EDA1  F013         	call	int_func,f	;refresh shadow registers
 16981                           tblptru	equ	0xFF8
 16982                           tblptrh	equ	0xFF7
 16983                           tblptrl	equ	0xFF6
 16984                           tablat	equ	0xFF5
 16985                           prodh	equ	0xFF4
 16986                           prodl	equ	0xFF3
 16987                           intcon	equ	0xFF2
 16988                           indf0	equ	0xFEF
 16989                           postinc0	equ	0xFEE
 16990                           fsr0h	equ	0xFEA
 16991                           fsr0l	equ	0xFE9
 16992                           wreg	equ	0xFE8
 16993                           indf1	equ	0xFE7
 16994                           postdec1	equ	0xFE5
 16995                           fsr1h	equ	0xFE2
 16996                           fsr1l	equ	0xFE1
 16997                           indf2	equ	0xFDF
 16998                           postinc2	equ	0xFDE
 16999                           postdec2	equ	0xFDD
 17000                           plusw2	equ	0xFDB
 17001                           fsr2h	equ	0xFDA
 17002                           fsr2l	equ	0xFD9
 17003                           status	equ	0xFD8
 17004                           
 17005                           	psect	intcode_body
 17006  002742                     __pintcode_body:
 17007                           	opt stack 16
 17008  002742                     int_func:
 17009                           	opt stack 16
 17010  002742  0006               	pop		; remove dummy address from shadow register refresh
 17011  002744  CFFA F01E          	movff	pclath,??_SYS_InterruptHigh+1
 17012  002748  CFFB F01F          	movff	pclatu,??_SYS_InterruptHigh+2
 17013  00274C  CFE9 F020          	movff	fsr0l,??_SYS_InterruptHigh+3
 17014  002750  CFEA F021          	movff	fsr0h,??_SYS_InterruptHigh+4
 17015  002754  CFE1 F022          	movff	fsr1l,??_SYS_InterruptHigh+5
 17016  002758  CFE2 F023          	movff	fsr1h,??_SYS_InterruptHigh+6
 17017  00275C  CFD9 F024          	movff	fsr2l,??_SYS_InterruptHigh+7
 17018  002760  CFDA F025          	movff	fsr2h,??_SYS_InterruptHigh+8
 17019  002764  CFF3 F026          	movff	prodl,??_SYS_InterruptHigh+9
 17020  002768  CFF4 F027          	movff	prodh,??_SYS_InterruptHigh+10
 17021  00276C  CFF6 F028          	movff	tblptrl,??_SYS_InterruptHigh+11
 17022  002770  CFF7 F029          	movff	tblptrh,??_SYS_InterruptHigh+12
 17023  002774  CFF8 F02A          	movff	tblptru,??_SYS_InterruptHigh+13
 17024  002778  CFF5 F02B          	movff	tablat,??_SYS_InterruptHigh+14
 17025  00277C  C05F  F02C         	movff	btemp,??_SYS_InterruptHigh+15
 17026  002780  C060  F02D         	movff	btemp+1,??_SYS_InterruptHigh+16
 17027  002784  C061  F02E         	movff	btemp+2,??_SYS_InterruptHigh+17
 17028  002788  C062  F02F         	movff	btemp+3,??_SYS_InterruptHigh+18
 17029                           
 17030                           ;system.c: 64: if (CCP1IF && CCP1IE)
 17031  00278C  B49E               	btfsc	3998,2,c	;volatile
 17032  00278E  A49D               	btfss	3997,2,c	;volatile
 17033  002790  D088               	goto	i2l119
 17034                           
 17035                           ;system.c: 65: {
 17036                           ;system.c: 66: CCP1IF=0;
 17037  002792  949E               	bcf	3998,2,c	;volatile
 17038                           
 17039                           ;system.c: 67: ticks++;
 17040  002794  0E01               	movlw	1
 17041  002796  0103               	movlb	3	; () banked
 17042  002798  272A               	addwf	_ticks& (0+255),f,b	;volatile
 17043  00279A  0E00               	movlw	0
 17044  00279C  232B               	addwfc	(_ticks+1)& (0+255),f,b	;volatile
 17045  00279E  232C               	addwfc	(_ticks+2)& (0+255),f,b	;volatile
 17046  0027A0  232D               	addwfc	(_ticks+3)& (0+255),f,b	;volatile
 17047                           
 17048                           ; BSR set to: 3
 17049                           ;system.c: 69: int dig1=PORTDbits.RD0;
 17050  0027A2  A083               	btfss	3971,0,c	;volatile
 17051  0027A4  D003               	goto	i2u1052_40
 17052  0027A6  6A1D               	clrf	??_SYS_InterruptHigh& (0+255),c
 17053  0027A8  2A1D               	incf	??_SYS_InterruptHigh& (0+255),f,c
 17054  0027AA  D001               	goto	i2u1052_48
 17055  0027AC                     i2u1052_40:
 17056  0027AC  6A1D               	clrf	??_SYS_InterruptHigh& (0+255),c
 17057  0027AE                     i2u1052_48:
 17058  0027AE  501D               	movf	??_SYS_InterruptHigh,w,c
 17059  0027B0  6E30               	movwf	SYS_InterruptHigh@dig1,c
 17060  0027B2  6A31               	clrf	SYS_InterruptHigh@dig1+1,c
 17061                           
 17062                           ;system.c: 70: int dig2=PORTDbits.RD1;
 17063  0027B4  A283               	btfss	3971,1,c	;volatile
 17064  0027B6  D003               	goto	i2u1053_40
 17065  0027B8  6A1D               	clrf	??_SYS_InterruptHigh& (0+255),c
 17066  0027BA  2A1D               	incf	??_SYS_InterruptHigh& (0+255),f,c
 17067  0027BC  D001               	goto	i2u1053_48
 17068  0027BE                     i2u1053_40:
 17069  0027BE  6A1D               	clrf	??_SYS_InterruptHigh& (0+255),c
 17070  0027C0                     i2u1053_48:
 17071  0027C0  501D               	movf	??_SYS_InterruptHigh,w,c
 17072  0027C2  6E32               	movwf	SYS_InterruptHigh@dig2,c
 17073  0027C4  6A33               	clrf	SYS_InterruptHigh@dig2+1,c
 17074                           
 17075                           ;system.c: 71: int dig3=PORTDbits.RD2;
 17076  0027C6  A483               	btfss	3971,2,c	;volatile
 17077  0027C8  D003               	goto	i2u1054_40
 17078  0027CA  6A1D               	clrf	??_SYS_InterruptHigh& (0+255),c
 17079  0027CC  2A1D               	incf	??_SYS_InterruptHigh& (0+255),f,c
 17080  0027CE  D001               	goto	i2u1054_48
 17081  0027D0                     i2u1054_40:
 17082  0027D0  6A1D               	clrf	??_SYS_InterruptHigh& (0+255),c
 17083  0027D2                     i2u1054_48:
 17084  0027D2  501D               	movf	??_SYS_InterruptHigh,w,c
 17085  0027D4  6E34               	movwf	SYS_InterruptHigh@dig3,c
 17086  0027D6  6A35               	clrf	SYS_InterruptHigh@dig3+1,c
 17087                           
 17088                           ;system.c: 72: int dig4=PORTDbits.RD3;
 17089  0027D8  A683               	btfss	3971,3,c	;volatile
 17090  0027DA  D003               	goto	i2u1055_40
 17091  0027DC  6A1D               	clrf	??_SYS_InterruptHigh& (0+255),c
 17092  0027DE  2A1D               	incf	??_SYS_InterruptHigh& (0+255),f,c
 17093  0027E0  D001               	goto	i2u1055_48
 17094  0027E2                     i2u1055_40:
 17095  0027E2  6A1D               	clrf	??_SYS_InterruptHigh& (0+255),c
 17096  0027E4                     i2u1055_48:
 17097  0027E4  501D               	movf	??_SYS_InterruptHigh,w,c
 17098  0027E6  6E36               	movwf	SYS_InterruptHigh@dig4,c
 17099  0027E8  6A37               	clrf	SYS_InterruptHigh@dig4+1,c
 17100                           
 17101                           ;system.c: 74: if ((dig_1!=dig1) && (dig1==1))
 17102  0027EA  5030               	movf	SYS_InterruptHigh@dig1,w,c
 17103  0027EC  0102               	movlb	2	; () banked
 17104  0027EE  19DE               	xorwf	_dig_1& (0+255),w,b	;volatile
 17105  0027F0  E104               	bnz	i2u1056_40
 17106  0027F2  5031               	movf	SYS_InterruptHigh@dig1+1,w,c
 17107  0027F4  19DF               	xorwf	(_dig_1+1)& (0+255),w,b	;volatile
 17108  0027F6  B4D8               	btfsc	status,2,c
 17109  0027F8  D00B               	goto	i2l120
 17110  0027FA                     i2u1056_40:
 17111                           
 17112                           ; BSR set to: 2
 17113  0027FA  0430               	decf	SYS_InterruptHigh@dig1,w,c
 17114  0027FC  1031               	iorwf	SYS_InterruptHigh@dig1+1,w,c
 17115  0027FE  A4D8               	btfss	status,2,c
 17116  002800  D007               	goto	i2l120
 17117                           
 17118                           ; BSR set to: 2
 17119                           ;system.c: 75: freqPulses1++;
 17120  002802  0E01               	movlw	1
 17121  002804  0103               	movlb	3	; () banked
 17122  002806  273A               	addwf	_freqPulses1& (0+255),f,b	;volatile
 17123  002808  0E00               	movlw	0
 17124  00280A  233B               	addwfc	(_freqPulses1+1)& (0+255),f,b	;volatile
 17125  00280C  233C               	addwfc	(_freqPulses1+2)& (0+255),f,b	;volatile
 17126  00280E  233D               	addwfc	(_freqPulses1+3)& (0+255),f,b	;volatile
 17127  002810                     i2l120:
 17128                           
 17129                           ;system.c: 76: dig_1=dig1;
 17130                           
 17131                           ; BSR set to: 3
 17132  002810  C030  F2DE         	movff	SYS_InterruptHigh@dig1,_dig_1	;volatile
 17133  002814  C031  F2DF         	movff	SYS_InterruptHigh@dig1+1,_dig_1+1	;volatile
 17134                           
 17135                           ;system.c: 77: if ((dig_2!=dig2) && (dig2==1))
 17136  002818  5032               	movf	SYS_InterruptHigh@dig2,w,c
 17137  00281A  0102               	movlb	2	; () banked
 17138  00281C  19DC               	xorwf	_dig_2& (0+255),w,b	;volatile
 17139  00281E  E104               	bnz	i2u1058_40
 17140  002820  5033               	movf	SYS_InterruptHigh@dig2+1,w,c
 17141  002822  19DD               	xorwf	(_dig_2+1)& (0+255),w,b	;volatile
 17142  002824  B4D8               	btfsc	status,2,c
 17143  002826  D00B               	goto	i2l121
 17144  002828                     i2u1058_40:
 17145                           
 17146                           ; BSR set to: 2
 17147  002828  0432               	decf	SYS_InterruptHigh@dig2,w,c
 17148  00282A  1033               	iorwf	SYS_InterruptHigh@dig2+1,w,c
 17149  00282C  A4D8               	btfss	status,2,c
 17150  00282E  D007               	goto	i2l121
 17151                           
 17152                           ; BSR set to: 2
 17153                           ;system.c: 78: freqPulses2++;
 17154  002830  0E01               	movlw	1
 17155  002832  0103               	movlb	3	; () banked
 17156  002834  2736               	addwf	_freqPulses2& (0+255),f,b	;volatile
 17157  002836  0E00               	movlw	0
 17158  002838  2337               	addwfc	(_freqPulses2+1)& (0+255),f,b	;volatile
 17159  00283A  2338               	addwfc	(_freqPulses2+2)& (0+255),f,b	;volatile
 17160  00283C  2339               	addwfc	(_freqPulses2+3)& (0+255),f,b	;volatile
 17161  00283E                     i2l121:
 17162                           
 17163                           ;system.c: 79: dig_2=dig2;
 17164                           
 17165                           ; BSR set to: 3
 17166  00283E  C032  F2DC         	movff	SYS_InterruptHigh@dig2,_dig_2	;volatile
 17167  002842  C033  F2DD         	movff	SYS_InterruptHigh@dig2+1,_dig_2+1	;volatile
 17168                           
 17169                           ;system.c: 80: if ((dig_3!=dig3) && (dig3==1))
 17170  002846  5034               	movf	SYS_InterruptHigh@dig3,w,c
 17171  002848  0102               	movlb	2	; () banked
 17172  00284A  19DA               	xorwf	_dig_3& (0+255),w,b	;volatile
 17173  00284C  E104               	bnz	i2u1060_40
 17174  00284E  5035               	movf	SYS_InterruptHigh@dig3+1,w,c
 17175  002850  19DB               	xorwf	(_dig_3+1)& (0+255),w,b	;volatile
 17176  002852  B4D8               	btfsc	status,2,c
 17177  002854  D00B               	goto	i2l122
 17178  002856                     i2u1060_40:
 17179                           
 17180                           ; BSR set to: 2
 17181  002856  0434               	decf	SYS_InterruptHigh@dig3,w,c
 17182  002858  1035               	iorwf	SYS_InterruptHigh@dig3+1,w,c
 17183  00285A  A4D8               	btfss	status,2,c
 17184  00285C  D007               	goto	i2l122
 17185                           
 17186                           ; BSR set to: 2
 17187                           ;system.c: 81: freqPulses3++;
 17188  00285E  0E01               	movlw	1
 17189  002860  0103               	movlb	3	; () banked
 17190  002862  2732               	addwf	_freqPulses3& (0+255),f,b	;volatile
 17191  002864  0E00               	movlw	0
 17192  002866  2333               	addwfc	(_freqPulses3+1)& (0+255),f,b	;volatile
 17193  002868  2334               	addwfc	(_freqPulses3+2)& (0+255),f,b	;volatile
 17194  00286A  2335               	addwfc	(_freqPulses3+3)& (0+255),f,b	;volatile
 17195  00286C                     i2l122:
 17196                           
 17197                           ;system.c: 82: dig_3=dig3;
 17198                           
 17199                           ; BSR set to: 3
 17200  00286C  C034  F2DA         	movff	SYS_InterruptHigh@dig3,_dig_3	;volatile
 17201  002870  C035  F2DB         	movff	SYS_InterruptHigh@dig3+1,_dig_3+1	;volatile
 17202                           
 17203                           ;system.c: 83: if ((dig_4!=dig4) && (dig4==1))
 17204  002874  5036               	movf	SYS_InterruptHigh@dig4,w,c
 17205  002876  0103               	movlb	3	; () banked
 17206  002878  194E               	xorwf	_dig_4& (0+255),w,b	;volatile
 17207  00287A  E104               	bnz	i2u1062_40
 17208  00287C  5037               	movf	SYS_InterruptHigh@dig4+1,w,c
 17209  00287E  194F               	xorwf	(_dig_4+1)& (0+255),w,b	;volatile
 17210  002880  B4D8               	btfsc	status,2,c
 17211  002882  D00A               	goto	i2l123
 17212  002884                     i2u1062_40:
 17213                           
 17214                           ; BSR set to: 3
 17215  002884  0436               	decf	SYS_InterruptHigh@dig4,w,c
 17216  002886  1037               	iorwf	SYS_InterruptHigh@dig4+1,w,c
 17217  002888  A4D8               	btfss	status,2,c
 17218  00288A  D006               	goto	i2l123
 17219                           
 17220                           ; BSR set to: 3
 17221                           ;system.c: 84: freqPulses4++;
 17222  00288C  0E01               	movlw	1
 17223  00288E  272E               	addwf	_freqPulses4& (0+255),f,b	;volatile
 17224  002890  0E00               	movlw	0
 17225  002892  232F               	addwfc	(_freqPulses4+1)& (0+255),f,b	;volatile
 17226  002894  2330               	addwfc	(_freqPulses4+2)& (0+255),f,b	;volatile
 17227  002896  2331               	addwfc	(_freqPulses4+3)& (0+255),f,b	;volatile
 17228  002898                     i2l123:
 17229                           
 17230                           ; BSR set to: 3
 17231                           ;system.c: 85: dig_4=dig4;
 17232                           
 17233                           ; BSR set to: 3
 17234  002898  C036  F34E         	movff	SYS_InterruptHigh@dig4,_dig_4	;volatile
 17235  00289C  C037  F34F         	movff	SYS_InterruptHigh@dig4+1,_dig_4+1	;volatile
 17236                           
 17237                           ;system.c: 86: }
 17238  0028A0  D00B               	goto	i2l127
 17239  0028A2                     i2l119:
 17240                           
 17241                           ;system.c: 87: else if (RCIE && RCIF)
 17242  0028A2  BA9D               	btfsc	3997,5,c	;volatile
 17243  0028A4  AA9E               	btfss	3998,5,c	;volatile
 17244  0028A6  D005               	goto	i2l125
 17245                           
 17246                           ;system.c: 88: {
 17247                           ;system.c: 90: recebeByteLoRaWan(getch());
 17248  0028A8  EC19  F02B         	call	_getch	;wreg free
 17249  0028AC  ECE0  F00F         	call	_recebeByteLoRaWan
 17250                           
 17251                           ;system.c: 92: }
 17252  0028B0  D003               	goto	i2l127
 17253  0028B2                     i2l125:
 17254                           
 17255                           ;system.c: 93: else if (USBIE)
 17256  0028B2  BAA0               	btfsc	4000,5,c	;volatile
 17257                           
 17258                           ;system.c: 94: {
 17259                           ;system.c: 96: USBDeviceTasks();
 17260  0028B4  ECCD  F017         	call	_USBDeviceTasks	;wreg free
 17261  0028B8                     i2l127:
 17262  0028B8  C02F  F062         	movff	??_SYS_InterruptHigh+18,btemp+3
 17263  0028BC  C02E  F061         	movff	??_SYS_InterruptHigh+17,btemp+2
 17264  0028C0  C02D  F060         	movff	??_SYS_InterruptHigh+16,btemp+1
 17265  0028C4  C02C  F05F         	movff	??_SYS_InterruptHigh+15,btemp
 17266  0028C8  C02B  FFF5         	movff	??_SYS_InterruptHigh+14,tablat
 17267  0028CC  C02A  FFF8         	movff	??_SYS_InterruptHigh+13,tblptru
 17268  0028D0  C029  FFF7         	movff	??_SYS_InterruptHigh+12,tblptrh
 17269  0028D4  C028  FFF6         	movff	??_SYS_InterruptHigh+11,tblptrl
 17270  0028D8  C027  FFF4         	movff	??_SYS_InterruptHigh+10,prodh
 17271  0028DC  C026  FFF3         	movff	??_SYS_InterruptHigh+9,prodl
 17272  0028E0  C025  FFDA         	movff	??_SYS_InterruptHigh+8,fsr2h
 17273  0028E4  C024  FFD9         	movff	??_SYS_InterruptHigh+7,fsr2l
 17274  0028E8  C023  FFE2         	movff	??_SYS_InterruptHigh+6,fsr1h
 17275  0028EC  C022  FFE1         	movff	??_SYS_InterruptHigh+5,fsr1l
 17276  0028F0  C021  FFEA         	movff	??_SYS_InterruptHigh+4,fsr0h
 17277  0028F4  C020  FFE9         	movff	??_SYS_InterruptHigh+3,fsr0l
 17278  0028F8  C01F  FFFB         	movff	??_SYS_InterruptHigh+2,pclatu
 17279  0028FC  C01E  FFFA         	movff	??_SYS_InterruptHigh+1,pclath
 17280  002900  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 17281  002902  0011               	retfie		f
 17282  002904                     __end_of_SYS_InterruptHigh:
 17283                           	opt stack 0
 17284                           pclatu	equ	0xFFB
 17285                           pclath	equ	0xFFA
 17286                           tblptru	equ	0xFF8
 17287                           tblptrh	equ	0xFF7
 17288                           tblptrl	equ	0xFF6
 17289                           tablat	equ	0xFF5
 17290                           prodh	equ	0xFF4
 17291                           prodl	equ	0xFF3
 17292                           intcon	equ	0xFF2
 17293                           indf0	equ	0xFEF
 17294                           postinc0	equ	0xFEE
 17295                           fsr0h	equ	0xFEA
 17296                           fsr0l	equ	0xFE9
 17297                           wreg	equ	0xFE8
 17298                           indf1	equ	0xFE7
 17299                           postdec1	equ	0xFE5
 17300                           fsr1h	equ	0xFE2
 17301                           fsr1l	equ	0xFE1
 17302                           indf2	equ	0xFDF
 17303                           postinc2	equ	0xFDE
 17304                           postdec2	equ	0xFDD
 17305                           plusw2	equ	0xFDB
 17306                           fsr2h	equ	0xFDA
 17307                           fsr2l	equ	0xFD9
 17308                           status	equ	0xFD8
 17309                           
 17310 ;; *************** function _recebeByteLoRaWan *****************
 17311 ;; Defined at:
 17312 ;;		line 346 in file "LoRaWanCore.c"
 17313 ;; Parameters:    Size  Location     Type
 17314 ;;  b               1    wreg     char 
 17315 ;; Auto vars:     Size  Location     Type
 17316 ;;  b               1   15[COMRAM] char 
 17317 ;;  i               1   18[COMRAM] unsigned char 
 17318 ;;  port            1   14[COMRAM] unsigned char 
 17319 ;;  i               1   16[COMRAM] unsigned char 
 17320 ;;  tamMsgRx        1   17[COMRAM] unsigned char 
 17321 ;;  len             1   13[COMRAM] unsigned char 
 17322 ;; Return value:  Size  Location     Type
 17323 ;;                  1    wreg      void 
 17324 ;; Registers used:
 17325 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17326 ;; Tracked objects:
 17327 ;;		On entry : 0/0
 17328 ;;		On exit  : 0/0
 17329 ;;		Unchanged: 0/0
 17330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17331 ;;      Params:         0       0       0       0       0       0       0       0       0
 17332 ;;      Locals:         6       0       0       0       0       0       0       0       0
 17333 ;;      Temps:          4       0       0       0       0       0       0       0       0
 17334 ;;      Totals:        10       0       0       0       0       0       0       0       0
 17335 ;;Total ram usage:       10 bytes
 17336 ;; Hardware stack levels used:    1
 17337 ;; Hardware stack levels required when called:    2
 17338 ;; This function calls:
 17339 ;;		_converter
 17340 ;;		_strcmp
 17341 ;;		_strcpy
 17342 ;;		_strncmp
 17343 ;;		i2_strlen
 17344 ;; This function is called by:
 17345 ;;		_SYS_InterruptHigh
 17346 ;; This function uses a non-reentrant model
 17347 ;;
 17348                           
 17349                           	psect	text58
 17350  001FC0                     __ptext58:
 17351                           	opt stack 0
 17352  001FC0                     _recebeByteLoRaWan:
 17353                           	opt stack 22
 17354                           
 17355                           ;incstack = 0
 17356                           ;recebeByteLoRaWan@b stored from wreg
 17357  001FC0  6E10               	movwf	recebeByteLoRaWan@b,c
 17358                           
 17359                           ;LoRaWanCore.c: 348: static uint8_t frameData[100];
 17360                           ;LoRaWanCore.c: 349: frameData[tamFrame++]=b;
 17361  001FC2  505A               	movf	_tamFrame,w,c	;volatile
 17362  001FC4  0D01               	mullw	1
 17363  001FC6  0E40               	movlw	low recebeByteLoRaWan@frameData
 17364  001FC8  24F3               	addwf	prodl,w,c
 17365  001FCA  6ED9               	movwf	fsr2l,c
 17366  001FCC  0E04               	movlw	high recebeByteLoRaWan@frameData
 17367  001FCE  20F4               	addwfc	prodh,w,c
 17368  001FD0  6EDA               	movwf	fsr2h,c
 17369  001FD2  C010  FFDF         	movff	recebeByteLoRaWan@b,indf2
 17370  001FD6  2A5A               	incf	_tamFrame,f,c	;volatile
 17371                           
 17372                           ;LoRaWanCore.c: 350: if ((b==0x0A) && (tamFrame>2))
 17373  001FD8  0E0A               	movlw	10
 17374  001FDA  1810               	xorwf	recebeByteLoRaWan@b,w,c
 17375  001FDC  A4D8               	btfss	status,2,c
 17376  001FDE  D131               	goto	i2u916_40
 17377  001FE0  0E02               	movlw	2
 17378  001FE2  645A               	cpfsgt	_tamFrame,c	;volatile
 17379  001FE4  D12E               	goto	i2u916_40
 17380                           
 17381                           ;LoRaWanCore.c: 351: {
 17382                           ;LoRaWanCore.c: 352: frameData[tamFrame]=0x00;
 17383  001FE6  505A               	movf	_tamFrame,w,c	;volatile
 17384  001FE8  0D01               	mullw	1
 17385  001FEA  0E40               	movlw	low recebeByteLoRaWan@frameData
 17386  001FEC  24F3               	addwf	prodl,w,c
 17387  001FEE  6ED9               	movwf	fsr2l,c
 17388  001FF0  0E04               	movlw	high recebeByteLoRaWan@frameData
 17389  001FF2  20F4               	addwfc	prodh,w,c
 17390  001FF4  6EDA               	movwf	fsr2h,c
 17391  001FF6  0E00               	movlw	0
 17392  001FF8  6EDF               	movwf	indf2,c
 17393                           
 17394                           ;LoRaWanCore.c: 353: strcpy(frameBuffer,frameData);
 17395  001FFA  0E00               	movlw	low _frameBuffer
 17396  001FFC  6E01               	movwf	strcpy@to,c
 17397  001FFE  0E07               	movlw	high _frameBuffer
 17398  002000  6E02               	movwf	strcpy@to+1,c
 17399  002002  0E40               	movlw	low recebeByteLoRaWan@frameData
 17400  002004  6E03               	movwf	strcpy@from,c
 17401  002006  0E04               	movlw	high recebeByteLoRaWan@frameData
 17402  002008  6E04               	movwf	strcpy@from+1,c
 17403  00200A  EC9F  F02A         	call	_strcpy	;wreg free
 17404                           
 17405                           ;LoRaWanCore.c: 355: frameData[tamFrame-2]=0x00;
 17406  00200E  0EFE               	movlw	254
 17407  002010  6E0A               	movwf	??_recebeByteLoRaWan& (0+255),c
 17408  002012  0EFF               	movlw	255
 17409  002014  6E0B               	movwf	(??_recebeByteLoRaWan+1)& (0+255),c
 17410  002016  505A               	movf	_tamFrame,w,c	;volatile
 17411  002018  6E0C               	movwf	(??_recebeByteLoRaWan+2)& (0+255),c
 17412  00201A  6A0D               	clrf	(??_recebeByteLoRaWan+3)& (0+255),c
 17413  00201C  500A               	movf	??_recebeByteLoRaWan,w,c
 17414  00201E  260C               	addwf	??_recebeByteLoRaWan+2,f,c
 17415  002020  500B               	movf	??_recebeByteLoRaWan+1,w,c
 17416  002022  220D               	addwfc	??_recebeByteLoRaWan+3,f,c
 17417  002024  0E40               	movlw	low recebeByteLoRaWan@frameData
 17418  002026  240C               	addwf	??_recebeByteLoRaWan+2,w,c
 17419  002028  6ED9               	movwf	fsr2l,c
 17420  00202A  0E04               	movlw	high recebeByteLoRaWan@frameData
 17421  00202C  200D               	addwfc	??_recebeByteLoRaWan+3,w,c
 17422  00202E  6EDA               	movwf	fsr2h,c
 17423  002030  0E00               	movlw	0
 17424  002032  6EDF               	movwf	indf2,c
 17425                           
 17426                           ;LoRaWanCore.c: 356: tamFrame=0;
 17427  002034  0E00               	movlw	0
 17428  002036  6E5A               	movwf	_tamFrame,c	;volatile
 17429                           
 17430                           ;LoRaWanCore.c: 357: uint8_t len = (sizeof(MSG_LORAWAN) / sizeof((MSG_LORAWAN)[0]));
 17431  002038  0E0F               	movlw	15
 17432  00203A  6E0E               	movwf	recebeByteLoRaWan@len,c
 17433                           
 17434                           ;LoRaWanCore.c: 358: responseLoRaWan=0xFF;
 17435  00203C  0101               	movlb	1	; () banked
 17436  00203E  69FE               	setf	_responseLoRaWan& (0+255),b	;volatile
 17437                           
 17438                           ; BSR set to: 1
 17439                           ;LoRaWanCore.c: 359: for (uint8_t i=0;i<len;i++)
 17440  002040  0E00               	movlw	0
 17441  002042  6E11               	movwf	recebeByteLoRaWan@i,c
 17442  002044  D01C               	goto	i2l2446
 17443  002046                     
 17444                           ;LoRaWanCore.c: 360: {
 17445                           ;LoRaWanCore.c: 361: if (strcmp(frameData,MSG_LORAWAN[i])==0)
 17446                           
 17447                           ; BSR set to: 1
 17448  002046  0E40               	movlw	low recebeByteLoRaWan@frameData
 17449  002048  6E01               	movwf	strcmp@s1,c
 17450  00204A  0E04               	movlw	high recebeByteLoRaWan@frameData
 17451  00204C  6E02               	movwf	strcmp@s1+1,c
 17452  00204E  5011               	movf	recebeByteLoRaWan@i,w,c
 17453  002050  0D02               	mullw	2
 17454  002052  0EC5               	movlw	low _MSG_LORAWAN
 17455  002054  24F3               	addwf	prodl,w,c
 17456  002056  6ED9               	movwf	fsr2l,c
 17457  002058  0E03               	movlw	high _MSG_LORAWAN
 17458  00205A  20F4               	addwfc	prodh,w,c
 17459  00205C  6EDA               	movwf	fsr2h,c
 17460  00205E  CFDE F003          	movff	postinc2,strcmp@s2
 17461  002062  CFDD F004          	movff	postdec2,strcmp@s2+1
 17462  002066  EC5E  F028         	call	_strcmp	;wreg free
 17463  00206A  5001               	movf	?_strcmp,w,c
 17464  00206C  1002               	iorwf	?_strcmp+1,w,c
 17465  00206E  A4D8               	btfss	status,2,c
 17466  002070  D005               	goto	i2l2448
 17467                           
 17468                           ;LoRaWanCore.c: 362: {
 17469                           ;LoRaWanCore.c: 363: responseLoRaWan=i;
 17470  002072  C011  F1FE         	movff	recebeByteLoRaWan@i,_responseLoRaWan	;volatile
 17471                           
 17472                           ;LoRaWanCore.c: 364: novaMsgLoRaWan=1;
 17473  002076  0E01               	movlw	1
 17474  002078  6E59               	movwf	_novaMsgLoRaWan,c	;volatile
 17475                           
 17476                           ;LoRaWanCore.c: 365: return;
 17477  00207A  0012               	return	
 17478  00207C                     i2l2448:
 17479  00207C  2A11               	incf	recebeByteLoRaWan@i,f,c
 17480  00207E                     i2l2446:
 17481  00207E  500E               	movf	recebeByteLoRaWan@len,w,c
 17482  002080  5C11               	subwf	recebeByteLoRaWan@i,w,c
 17483  002082  A0D8               	btfss	status,0,c
 17484  002084  D7E0               	goto	i2l2447
 17485                           
 17486                           ;LoRaWanCore.c: 366: }
 17487                           ;LoRaWanCore.c: 367: }
 17488                           ;LoRaWanCore.c: 368: uint8_t tamMsgRx=strlen(MSG_LORAWAN[15]);
 17489  002086  C3E3  F001         	movff	_MSG_LORAWAN+30,i2strlen@s
 17490  00208A  C3E4  F002         	movff	_MSG_LORAWAN+31,i2strlen@s+1
 17491  00208E  EC0D  F028         	call	i2_strlen	;wreg free
 17492  002092  5001               	movf	?i2_strlen,w,c
 17493  002094  6E12               	movwf	recebeByteLoRaWan@tamMsgRx,c
 17494                           
 17495                           ;LoRaWanCore.c: 369: if (strncmp(frameData,MSG_LORAWAN[15],tamMsgRx)==0)
 17496  002096  0E40               	movlw	low recebeByteLoRaWan@frameData
 17497  002098  6E01               	movwf	strncmp@s1,c
 17498  00209A  0E04               	movlw	high recebeByteLoRaWan@frameData
 17499  00209C  6E02               	movwf	strncmp@s1+1,c
 17500  00209E  C3E3  F003         	movff	_MSG_LORAWAN+30,strncmp@s2
 17501  0020A2  C3E4  F004         	movff	_MSG_LORAWAN+31,strncmp@s2+1
 17502  0020A6  C012  F005         	movff	recebeByteLoRaWan@tamMsgRx,strncmp@len
 17503  0020AA  6A06               	clrf	strncmp@len+1,c
 17504  0020AC  EC60  F025         	call	_strncmp	;wreg free
 17505  0020B0  5001               	movf	?_strncmp,w,c
 17506  0020B2  1002               	iorwf	?_strncmp+1,w,c
 17507  0020B4  A4D8               	btfss	status,2,c
 17508  0020B6  D006               	goto	i2l2451
 17509                           
 17510                           ;LoRaWanCore.c: 370: {
 17511                           ;LoRaWanCore.c: 371: responseLoRaWan=15;
 17512  0020B8  0E0F               	movlw	15
 17513  0020BA  0101               	movlb	1	; () banked
 17514  0020BC  6FFE               	movwf	_responseLoRaWan& (0+255),b	;volatile
 17515                           
 17516                           ;LoRaWanCore.c: 372: novaMsgLoRaWan=1;
 17517  0020BE  0E01               	movlw	1
 17518  0020C0  6E59               	movwf	_novaMsgLoRaWan,c	;volatile
 17519                           
 17520                           ; BSR set to: 1
 17521                           ;LoRaWanCore.c: 373: return;
 17522  0020C2  0012               	return	
 17523  0020C4                     i2l2451:
 17524                           
 17525                           ;LoRaWanCore.c: 374: }
 17526                           ;LoRaWanCore.c: 377: tamMsgRx=strlen(MSG_LORAWAN[10]);
 17527                           
 17528                           ; BSR set to: 1
 17529  0020C4  C3D9  F001         	movff	_MSG_LORAWAN+20,i2strlen@s
 17530  0020C8  C3DA  F002         	movff	_MSG_LORAWAN+21,i2strlen@s+1
 17531  0020CC  EC0D  F028         	call	i2_strlen	;wreg free
 17532  0020D0  5001               	movf	?i2_strlen,w,c
 17533  0020D2  6E12               	movwf	recebeByteLoRaWan@tamMsgRx,c
 17534                           
 17535                           ;LoRaWanCore.c: 379: if (strncmp(frameData,MSG_LORAWAN[10],tamMsgRx)==0)
 17536  0020D4  0E40               	movlw	low recebeByteLoRaWan@frameData
 17537  0020D6  6E01               	movwf	strncmp@s1,c
 17538  0020D8  0E04               	movlw	high recebeByteLoRaWan@frameData
 17539  0020DA  6E02               	movwf	strncmp@s1+1,c
 17540  0020DC  C3D9  F003         	movff	_MSG_LORAWAN+20,strncmp@s2
 17541  0020E0  C3DA  F004         	movff	_MSG_LORAWAN+21,strncmp@s2+1
 17542  0020E4  C012  F005         	movff	recebeByteLoRaWan@tamMsgRx,strncmp@len
 17543  0020E8  6A06               	clrf	strncmp@len+1,c
 17544  0020EA  EC60  F025         	call	_strncmp	;wreg free
 17545  0020EE  5001               	movf	?_strncmp,w,c
 17546  0020F0  1002               	iorwf	?_strncmp+1,w,c
 17547  0020F2  A4D8               	btfss	status,2,c
 17548  0020F4  D0A6               	goto	i2u916_40
 17549                           
 17550                           ;LoRaWanCore.c: 380: {
 17551                           ;LoRaWanCore.c: 383: uint8_t i=tamMsgRx;
 17552  0020F6  C012  F013         	movff	recebeByteLoRaWan@tamMsgRx,recebeByteLoRaWan@i_4866
 17553                           
 17554                           ;LoRaWanCore.c: 384: uint8_t port=0;
 17555  0020FA  0E00               	movlw	0
 17556  0020FC  6E0F               	movwf	recebeByteLoRaWan@port,c
 17557                           
 17558                           ;LoRaWanCore.c: 386: for (;i<strlen(frameData);i++)
 17559  0020FE  D027               	goto	i2l2453
 17560  002100                     
 17561                           ;LoRaWanCore.c: 387: {
 17562                           ;LoRaWanCore.c: 388: if ((frameData[i]<'0') || (frameData[i]>'9'))
 17563  002100  5013               	movf	recebeByteLoRaWan@i_4866,w,c
 17564  002102  0D01               	mullw	1
 17565  002104  0E40               	movlw	low recebeByteLoRaWan@frameData
 17566  002106  24F3               	addwf	prodl,w,c
 17567  002108  6ED9               	movwf	fsr2l,c
 17568  00210A  0E04               	movlw	high recebeByteLoRaWan@frameData
 17569  00210C  20F4               	addwfc	prodh,w,c
 17570  00210E  6EDA               	movwf	fsr2h,c
 17571  002110  0E2F               	movlw	47
 17572  002112  64DF               	cpfsgt	indf2,c
 17573  002114  D02B               	goto	i2u912_40
 17574  002116  5013               	movf	recebeByteLoRaWan@i_4866,w,c
 17575  002118  0D01               	mullw	1
 17576  00211A  0E40               	movlw	low recebeByteLoRaWan@frameData
 17577  00211C  24F3               	addwf	prodl,w,c
 17578  00211E  6ED9               	movwf	fsr2l,c
 17579  002120  0E04               	movlw	high recebeByteLoRaWan@frameData
 17580  002122  20F4               	addwfc	prodh,w,c
 17581  002124  6EDA               	movwf	fsr2h,c
 17582  002126  0E39               	movlw	57
 17583  002128  64DF               	cpfsgt	indf2,c
 17584  00212A  D001               	goto	i2l2455
 17585  00212C  D01F               	goto	i2u912_40
 17586  00212E                     i2l2455:
 17587                           
 17588                           ;LoRaWanCore.c: 391: port*=10;
 17589  00212E  0E0A               	movlw	10
 17590  002130  020F               	mulwf	recebeByteLoRaWan@port,c
 17591  002132  50F3               	movf	prodl,w,c
 17592  002134  6E0F               	movwf	recebeByteLoRaWan@port,c
 17593                           
 17594                           ;LoRaWanCore.c: 392: port+=frameData[i]-'0';
 17595  002136  5013               	movf	recebeByteLoRaWan@i_4866,w,c
 17596  002138  0D01               	mullw	1
 17597  00213A  0E40               	movlw	low recebeByteLoRaWan@frameData
 17598  00213C  24F3               	addwf	prodl,w,c
 17599  00213E  6ED9               	movwf	fsr2l,c
 17600  002140  0E04               	movlw	high recebeByteLoRaWan@frameData
 17601  002142  20F4               	addwfc	prodh,w,c
 17602  002144  6EDA               	movwf	fsr2h,c
 17603  002146  50DF               	movf	indf2,w,c
 17604  002148  0FD0               	addlw	208
 17605  00214A  260F               	addwf	recebeByteLoRaWan@port,f,c
 17606  00214C  2A13               	incf	recebeByteLoRaWan@i_4866,f,c
 17607  00214E                     i2l2453:
 17608  00214E  0E40               	movlw	low recebeByteLoRaWan@frameData
 17609  002150  6E01               	movwf	i2strlen@s,c
 17610  002152  0E04               	movlw	high recebeByteLoRaWan@frameData
 17611  002154  6E02               	movwf	i2strlen@s+1,c
 17612  002156  EC0D  F028         	call	i2_strlen	;wreg free
 17613  00215A  5013               	movf	recebeByteLoRaWan@i_4866,w,c
 17614  00215C  6E0A               	movwf	??_recebeByteLoRaWan& (0+255),c
 17615  00215E  6A0B               	clrf	(??_recebeByteLoRaWan+1)& (0+255),c
 17616  002160  5001               	movf	?i2_strlen,w,c
 17617  002162  5C0A               	subwf	??_recebeByteLoRaWan,w,c
 17618  002164  5002               	movf	?i2_strlen+1,w,c
 17619  002166  580B               	subwfb	??_recebeByteLoRaWan+1,w,c
 17620  002168  A0D8               	btfss	status,0,c
 17621  00216A  D7CA               	goto	i2l2454
 17622  00216C                     i2u912_40:
 17623                           
 17624                           ;LoRaWanCore.c: 393: }
 17625                           ;LoRaWanCore.c: 394: i++;
 17626  00216C  2A13               	incf	recebeByteLoRaWan@i_4866,f,c
 17627                           
 17628                           ;LoRaWanCore.c: 396: for (;i<strlen(frameData);i+=2)
 17629  00216E  D038               	goto	i2l2459
 17630  002170                     
 17631                           ;LoRaWanCore.c: 397: {
 17632                           ;LoRaWanCore.c: 398: dadosRecebidos[tamDadosRecebidos].port=port;
 17633  002170  505B               	movf	_tamDadosRecebidos,w,c	;volatile
 17634  002172  0D02               	mullw	2
 17635  002174  0E00               	movlw	low _dadosRecebidos
 17636  002176  24F3               	addwf	prodl,w,c
 17637  002178  6ED9               	movwf	fsr2l,c
 17638  00217A  0E03               	movlw	high _dadosRecebidos
 17639  00217C  20F4               	addwfc	prodh,w,c
 17640  00217E  6EDA               	movwf	fsr2h,c
 17641  002180  C00F  FFDF         	movff	recebeByteLoRaWan@port,indf2
 17642                           
 17643                           ;LoRaWanCore.c: 399: dadosRecebidos[tamDadosRecebidos++].data=converter(frameData[i],fra
      +                          meData[i+1]);
 17644  002184  505B               	movf	_tamDadosRecebidos,w,c	;volatile
 17645  002186  0D02               	mullw	2
 17646  002188  0E01               	movlw	1
 17647  00218A  26F3               	addwf	prodl,f,c
 17648  00218C  0E00               	movlw	0
 17649  00218E  22F4               	addwfc	prodh,f,c
 17650  002190  0E00               	movlw	low _dadosRecebidos
 17651  002192  24F3               	addwf	prodl,w,c
 17652  002194  6ED9               	movwf	fsr2l,c
 17653  002196  0E03               	movlw	high _dadosRecebidos
 17654  002198  20F4               	addwfc	prodh,w,c
 17655  00219A  6EDA               	movwf	fsr2h,c
 17656  00219C  5013               	movf	recebeByteLoRaWan@i_4866,w,c
 17657  00219E  6E0A               	movwf	??_recebeByteLoRaWan& (0+255),c
 17658  0021A0  6A0B               	clrf	(??_recebeByteLoRaWan+1)& (0+255),c
 17659  0021A2  0E01               	movlw	1
 17660  0021A4  260A               	addwf	??_recebeByteLoRaWan,f,c
 17661  0021A6  0E00               	movlw	0
 17662  0021A8  220B               	addwfc	??_recebeByteLoRaWan+1,f,c
 17663  0021AA  0E40               	movlw	low recebeByteLoRaWan@frameData
 17664  0021AC  240A               	addwf	??_recebeByteLoRaWan,w,c
 17665  0021AE  6EE1               	movwf	fsr1l,c
 17666  0021B0  0E04               	movlw	high recebeByteLoRaWan@frameData
 17667  0021B2  200B               	addwfc	??_recebeByteLoRaWan+1,w,c
 17668  0021B4  6EE2               	movwf	fsr1h,c
 17669  0021B6  50E7               	movf	indf1,w,c
 17670  0021B8  6E02               	movwf	converter@conv2,c
 17671  0021BA  5013               	movf	recebeByteLoRaWan@i_4866,w,c
 17672  0021BC  0D01               	mullw	1
 17673  0021BE  0E40               	movlw	low recebeByteLoRaWan@frameData
 17674  0021C0  24F3               	addwf	prodl,w,c
 17675  0021C2  6EE1               	movwf	fsr1l,c
 17676  0021C4  0E04               	movlw	high recebeByteLoRaWan@frameData
 17677  0021C6  20F4               	addwfc	prodh,w,c
 17678  0021C8  6EE2               	movwf	fsr1h,c
 17679  0021CA  50E7               	movf	indf1,w,c
 17680  0021CC  ECDB  F024         	call	_converter
 17681  0021D0  6EDF               	movwf	indf2,c
 17682  0021D2  2A5B               	incf	_tamDadosRecebidos,f,c	;volatile
 17683                           
 17684                           ;LoRaWanCore.c: 400: if (tamDadosRecebidos>=10)
 17685  0021D4  0E09               	movlw	9
 17686  0021D6  645B               	cpfsgt	_tamDadosRecebidos,c	;volatile
 17687  0021D8  D001               	goto	i2l2461
 17688  0021DA  0012               	return	
 17689  0021DC                     i2l2461:
 17690  0021DC  0E02               	movlw	2
 17691  0021DE  2613               	addwf	recebeByteLoRaWan@i_4866,f,c
 17692  0021E0                     i2l2459:
 17693  0021E0  0E40               	movlw	low recebeByteLoRaWan@frameData
 17694  0021E2  6E01               	movwf	i2strlen@s,c
 17695  0021E4  0E04               	movlw	high recebeByteLoRaWan@frameData
 17696  0021E6  6E02               	movwf	i2strlen@s+1,c
 17697  0021E8  EC0D  F028         	call	i2_strlen	;wreg free
 17698  0021EC  5013               	movf	recebeByteLoRaWan@i_4866,w,c
 17699  0021EE  6E0A               	movwf	??_recebeByteLoRaWan& (0+255),c
 17700  0021F0  6A0B               	clrf	(??_recebeByteLoRaWan+1)& (0+255),c
 17701  0021F2  5001               	movf	?i2_strlen,w,c
 17702  0021F4  5C0A               	subwf	??_recebeByteLoRaWan,w,c
 17703  0021F6  5002               	movf	?i2_strlen+1,w,c
 17704  0021F8  580B               	subwfb	??_recebeByteLoRaWan+1,w,c
 17705  0021FA  A0D8               	btfss	status,0,c
 17706  0021FC  D7B9               	goto	i2l2460
 17707                           
 17708                           ;LoRaWanCore.c: 402: }
 17709                           ;LoRaWanCore.c: 404: if (i>=strlen(frameData)){
 17710  0021FE  0E40               	movlw	low recebeByteLoRaWan@frameData
 17711  002200  6E01               	movwf	i2strlen@s,c
 17712  002202  0E04               	movlw	high recebeByteLoRaWan@frameData
 17713  002204  6E02               	movwf	i2strlen@s+1,c
 17714  002206  EC0D  F028         	call	i2_strlen	;wreg free
 17715  00220A  5013               	movf	recebeByteLoRaWan@i_4866,w,c
 17716  00220C  6E0A               	movwf	??_recebeByteLoRaWan& (0+255),c
 17717  00220E  6A0B               	clrf	(??_recebeByteLoRaWan+1)& (0+255),c
 17718  002210  5001               	movf	?i2_strlen,w,c
 17719  002212  5C0A               	subwf	??_recebeByteLoRaWan,w,c
 17720  002214  5002               	movf	?i2_strlen+1,w,c
 17721  002216  580B               	subwfb	??_recebeByteLoRaWan+1,w,c
 17722  002218  B0D8               	btfsc	status,0,c
 17723  00221A  D010               	goto	i2l2464
 17724  00221C  D012               	goto	i2u916_40
 17725  00221E                     
 17726                           ;LoRaWanCore.c: 406: dadosRecebidos[tamDadosRecebidos].data = 0;
 17727  00221E  505B               	movf	_tamDadosRecebidos,w,c	;volatile
 17728  002220  0D02               	mullw	2
 17729  002222  0E01               	movlw	1
 17730  002224  26F3               	addwf	prodl,f,c
 17731  002226  0E00               	movlw	0
 17732  002228  22F4               	addwfc	prodh,f,c
 17733  00222A  0E00               	movlw	low _dadosRecebidos
 17734  00222C  24F3               	addwf	prodl,w,c
 17735  00222E  6ED9               	movwf	fsr2l,c
 17736  002230  0E03               	movlw	high _dadosRecebidos
 17737  002232  20F4               	addwfc	prodh,w,c
 17738  002234  6EDA               	movwf	fsr2h,c
 17739  002236  0E00               	movlw	0
 17740  002238  6EDF               	movwf	indf2,c
 17741  00223A  2A5B               	incf	_tamDadosRecebidos,f,c	;volatile
 17742  00223C                     i2l2464:
 17743  00223C  0E0A               	movlw	10
 17744  00223E  645B               	cpfsgt	_tamDadosRecebidos,c	;volatile
 17745  002240  D7EE               	goto	i2l2465
 17746  002242                     i2u916_40:
 17747                           
 17748                           ;LoRaWanCore.c: 407: }
 17749                           ;LoRaWanCore.c: 408: }
 17750                           ;LoRaWanCore.c: 410: }
 17751                           ;LoRaWanCore.c: 411: }
 17752                           ;LoRaWanCore.c: 412: if ((tamFrame>=100) || (b==0x0A))
 17753  002242  0E64               	movlw	100
 17754  002244  605A               	cpfslt	_tamFrame,c	;volatile
 17755  002246  D004               	goto	i2u918_40
 17756  002248  0E0A               	movlw	10
 17757  00224A  1810               	xorwf	recebeByteLoRaWan@b,w,c
 17758  00224C  A4D8               	btfss	status,2,c
 17759  00224E  0012               	return	
 17760  002250                     i2u918_40:
 17761                           
 17762                           ;LoRaWanCore.c: 413: {
 17763                           ;LoRaWanCore.c: 414: tamFrame=0;
 17764  002250  0E00               	movlw	0
 17765  002252  6E5A               	movwf	_tamFrame,c	;volatile
 17766  002254  0012               	return	
 17767  002256                     __end_of_recebeByteLoRaWan:
 17768                           	opt stack 0
 17769                           pclatu	equ	0xFFB
 17770                           pclath	equ	0xFFA
 17771                           tblptru	equ	0xFF8
 17772                           tblptrh	equ	0xFF7
 17773                           tblptrl	equ	0xFF6
 17774                           tablat	equ	0xFF5
 17775                           prodh	equ	0xFF4
 17776                           prodl	equ	0xFF3
 17777                           intcon	equ	0xFF2
 17778                           indf0	equ	0xFEF
 17779                           postinc0	equ	0xFEE
 17780                           fsr0h	equ	0xFEA
 17781                           fsr0l	equ	0xFE9
 17782                           wreg	equ	0xFE8
 17783                           indf1	equ	0xFE7
 17784                           postdec1	equ	0xFE5
 17785                           fsr1h	equ	0xFE2
 17786                           fsr1l	equ	0xFE1
 17787                           indf2	equ	0xFDF
 17788                           postinc2	equ	0xFDE
 17789                           postdec2	equ	0xFDD
 17790                           plusw2	equ	0xFDB
 17791                           fsr2h	equ	0xFDA
 17792                           fsr2l	equ	0xFD9
 17793                           status	equ	0xFD8
 17794                           
 17795 ;; *************** function i2_strlen *****************
 17796 ;; Defined at:
 17797 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strlen.c"
 17798 ;; Parameters:    Size  Location     Type
 17799 ;;  s               2    0[COMRAM] PTR const unsigned char 
 17800 ;;		 -> recebeByteLoRaWan@frameData(100), SYS(5), MAC(5), TxLoRaWan@comando(200), 
 17801 ;;		 -> DataRate@comando(200), SetBandWidth@comando(200), SetSpreadingFactor@comando(200), MacSave@comando(200), 
 17802 ;;		 -> GetAdr@comando(200), SetAdr@comando(200), SetChannelLoRaWan@comando(200), MAC_JOIN_OTAA(10), 
 17803 ;;		 -> SYS_RESET(6), SetAppKey@comando(200), SetAppEUI@comando(200), SetDevEUI@comando(200), 
 17804 ;;		 -> GetDnctr@comando(200), STR_20(16), STR_19(7), STR_18(14), 
 17805 ;;		 -> STR_17(8), STR_16(8), STR_15(10), STR_14(17), 
 17806 ;;		 -> STR_13(11), STR_12(5), STR_11(32), STR_10(7), 
 17807 ;;		 -> STR_9(11), STR_8(11), STR_7(14), STR_6(3), 
 17808 ;; Auto vars:     Size  Location     Type
 17809 ;;  strlen          2    4[COMRAM] PTR const unsigned char 
 17810 ;;		 -> recebeByteLoRaWan@frameData(100), SYS(5), MAC(5), TxLoRaWan@comando(200), 
 17811 ;;		 -> DataRate@comando(200), SetBandWidth@comando(200), SetSpreadingFactor@comando(200), MacSave@comando(200), 
 17812 ;;		 -> GetAdr@comando(200), SetAdr@comando(200), SetChannelLoRaWan@comando(200), MAC_JOIN_OTAA(10), 
 17813 ;;		 -> SYS_RESET(6), SetAppKey@comando(200), SetAppEUI@comando(200), SetDevEUI@comando(200), 
 17814 ;;		 -> GetDnctr@comando(200), STR_20(16), STR_19(7), STR_18(14), 
 17815 ;;		 -> STR_17(8), STR_16(8), STR_15(10), STR_14(17), 
 17816 ;;		 -> STR_13(11), STR_12(5), STR_11(32), STR_10(7), 
 17817 ;;		 -> STR_9(11), STR_8(11), STR_7(14), STR_6(3), 
 17818 ;; Return value:  Size  Location     Type
 17819 ;;                  2    0[COMRAM] unsigned int 
 17820 ;; Registers used:
 17821 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 17822 ;; Tracked objects:
 17823 ;;		On entry : 0/0
 17824 ;;		On exit  : 0/0
 17825 ;;		Unchanged: 0/0
 17826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17827 ;;      Params:         2       0       0       0       0       0       0       0       0
 17828 ;;      Locals:         2       0       0       0       0       0       0       0       0
 17829 ;;      Temps:          2       0       0       0       0       0       0       0       0
 17830 ;;      Totals:         6       0       0       0       0       0       0       0       0
 17831 ;;Total ram usage:        6 bytes
 17832 ;; Hardware stack levels used:    1
 17833 ;; This function calls:
 17834 ;;		Nothing
 17835 ;; This function is called by:
 17836 ;;		_recebeByteLoRaWan
 17837 ;; This function uses a non-reentrant model
 17838 ;;
 17839                           
 17840                           	psect	text59
 17841  00501A                     __ptext59:
 17842                           	opt stack 0
 17843  00501A                     i2_strlen:
 17844                           	opt stack 23
 17845                           
 17846                           ;incstack = 0
 17847  00501A  C001  F005         	movff	i2strlen@s,i2strlen@cp
 17848  00501E  C002  F006         	movff	i2strlen@s+1,i2strlen@cp+1
 17849  005022  D002               	goto	i2l3391
 17850  005024  4A05               	infsnz	i2strlen@cp,f,c
 17851  005026  2A06               	incf	i2strlen@cp+1,f,c
 17852  005028                     i2l3391:
 17853  005028  C005  FFF6         	movff	i2strlen@cp,tblptrl
 17854  00502C  C006  FFF7         	movff	i2strlen@cp+1,tblptrh
 17855  005030  6AF8               	clrf	tblptru,c
 17856  005032  0E07               	movlw	(high __ramtop+-1)
 17857  005034  64F7               	cpfsgt	tblptrh,c
 17858  005036  D003               	bra	i2u900_47
 17859  005038  0008               	tblrd		*
 17860  00503A  50F5               	movf	tablat,w,c
 17861  00503C  D005               	bra	i2u900_40
 17862  00503E                     i2u900_47:
 17863  00503E  CFF6 FFE9          	movff	tblptrl,fsr0l
 17864  005042  CFF7 FFEA          	movff	tblptrh,fsr0h
 17865  005046  50EF               	movf	indf0,w,c
 17866  005048                     i2u900_40:
 17867  005048  0900               	iorlw	0
 17868  00504A  A4D8               	btfss	status,2,c
 17869  00504C  D7EB               	goto	i2l3392
 17870  00504E  C001  F003         	movff	i2strlen@s,??i2_strlen
 17871  005052  C002  F004         	movff	i2strlen@s+1,??i2_strlen+1
 17872  005056  1E03               	comf	??i2_strlen,f,c
 17873  005058  1E04               	comf	??i2_strlen+1,f,c
 17874  00505A  4A03               	infsnz	??i2_strlen,f,c
 17875  00505C  2A04               	incf	??i2_strlen+1,f,c
 17876  00505E  5005               	movf	i2strlen@cp,w,c
 17877  005060  2403               	addwf	??i2_strlen,w,c
 17878  005062  6E01               	movwf	?i2_strlen,c
 17879  005064  5006               	movf	i2strlen@cp+1,w,c
 17880  005066  2004               	addwfc	??i2_strlen+1,w,c
 17881  005068  6E02               	movwf	?i2_strlen+1,c
 17882  00506A  0012               	return	
 17883  00506C                     __end_ofi2_strlen:
 17884                           	opt stack 0
 17885                           pclatu	equ	0xFFB
 17886                           pclath	equ	0xFFA
 17887                           tblptru	equ	0xFF8
 17888                           tblptrh	equ	0xFF7
 17889                           tblptrl	equ	0xFF6
 17890                           tablat	equ	0xFF5
 17891                           prodh	equ	0xFF4
 17892                           prodl	equ	0xFF3
 17893                           intcon	equ	0xFF2
 17894                           indf0	equ	0xFEF
 17895                           postinc0	equ	0xFEE
 17896                           fsr0h	equ	0xFEA
 17897                           fsr0l	equ	0xFE9
 17898                           wreg	equ	0xFE8
 17899                           indf1	equ	0xFE7
 17900                           postdec1	equ	0xFE5
 17901                           fsr1h	equ	0xFE2
 17902                           fsr1l	equ	0xFE1
 17903                           indf2	equ	0xFDF
 17904                           postinc2	equ	0xFDE
 17905                           postdec2	equ	0xFDD
 17906                           plusw2	equ	0xFDB
 17907                           fsr2h	equ	0xFDA
 17908                           fsr2l	equ	0xFD9
 17909                           status	equ	0xFD8
 17910                           
 17911 ;; *************** function _strncmp *****************
 17912 ;; Defined at:
 17913 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strncmp.c"
 17914 ;; Parameters:    Size  Location     Type
 17915 ;;  s1              2    0[COMRAM] PTR const unsigned char 
 17916 ;;		 -> recebeByteLoRaWan@frameData(100), 
 17917 ;;  s2              2    2[COMRAM] PTR const unsigned char 
 17918 ;;		 -> STR_20(16), STR_19(7), STR_18(14), STR_17(8), 
 17919 ;;		 -> STR_16(8), STR_15(10), STR_14(17), STR_13(11), 
 17920 ;;		 -> STR_12(5), STR_11(32), STR_10(7), STR_9(11), 
 17921 ;;		 -> STR_8(11), STR_7(14), STR_6(3), 
 17922 ;;  len             2    4[COMRAM] unsigned int 
 17923 ;; Auto vars:     Size  Location     Type
 17924 ;;		None
 17925 ;; Return value:  Size  Location     Type
 17926 ;;                  2    0[COMRAM] int 
 17927 ;; Registers used:
 17928 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17929 ;; Tracked objects:
 17930 ;;		On entry : 0/0
 17931 ;;		On exit  : 0/0
 17932 ;;		Unchanged: 0/0
 17933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17934 ;;      Params:         6       0       0       0       0       0       0       0       0
 17935 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17936 ;;      Temps:          3       0       0       0       0       0       0       0       0
 17937 ;;      Totals:         9       0       0       0       0       0       0       0       0
 17938 ;;Total ram usage:        9 bytes
 17939 ;; Hardware stack levels used:    1
 17940 ;; This function calls:
 17941 ;;		Nothing
 17942 ;; This function is called by:
 17943 ;;		_recebeByteLoRaWan
 17944 ;; This function uses a non-reentrant model
 17945 ;;
 17946                           
 17947                           	psect	text60
 17948  004AC0                     __ptext60:
 17949                           	opt stack 0
 17950  004AC0                     _strncmp:
 17951                           	opt stack 23
 17952                           
 17953                           ;incstack = 0
 17954  004AC0  D033               	goto	i2l3397
 17955  004AC2                     i2l9456:
 17956  004AC2  C001  FFD9         	movff	strncmp@s1,fsr2l
 17957  004AC6  C002  FFDA         	movff	strncmp@s1+1,fsr2h
 17958  004ACA  50DF               	movf	indf2,w,c
 17959  004ACC  B4D8               	btfsc	status,2,c
 17960  004ACE  D00F               	goto	i2u887_40
 17961  004AD0  C001  FFD9         	movff	strncmp@s1,fsr2l
 17962  004AD4  C002  FFDA         	movff	strncmp@s1+1,fsr2h
 17963  004AD8  50DF               	movf	indf2,w,c
 17964  004ADA  6E07               	movwf	??_strncmp& (0+255),c
 17965  004ADC  C003  FFF6         	movff	strncmp@s2,tblptrl
 17966  004AE0  C004  FFF7         	movff	strncmp@s2+1,tblptrh
 17967  004AE4                     	if	0	;tblptru may be non-zero
 17968  004AE4                     	endif
 17969  004AE4                     	if	0	;tblptru may be non-zero
 17970  004AE4                     	endif
 17971  004AE4  0008               	tblrd		*
 17972  004AE6  50F5               	movf	tablat,w,c
 17973  004AE8  1807               	xorwf	??_strncmp,w,c
 17974  004AEA  B4D8               	btfsc	status,2,c
 17975  004AEC  D019               	goto	i2l3399
 17976  004AEE                     i2u887_40:
 17977  004AEE  C003  FFF6         	movff	strncmp@s2,tblptrl
 17978  004AF2  C004  FFF7         	movff	strncmp@s2+1,tblptrh
 17979  004AF6                     	if	0	;tblptru may be non-zero
 17980  004AF6                     	endif
 17981  004AF6                     	if	0	;tblptru may be non-zero
 17982  004AF6                     	endif
 17983  004AF6  0008               	tblrd		*
 17984  004AF8  50F5               	movf	tablat,w,c
 17985  004AFA  6E07               	movwf	??_strncmp& (0+255),c
 17986  004AFC  6A08               	clrf	(??_strncmp+1)& (0+255),c
 17987  004AFE  1E07               	comf	??_strncmp,f,c
 17988  004B00  1E08               	comf	??_strncmp+1,f,c
 17989  004B02  4A07               	infsnz	??_strncmp,f,c
 17990  004B04  2A08               	incf	??_strncmp+1,f,c
 17991  004B06  C001  FFD9         	movff	strncmp@s1,fsr2l
 17992  004B0A  C002  FFDA         	movff	strncmp@s1+1,fsr2h
 17993  004B0E  50DF               	movf	indf2,w,c
 17994  004B10  6E09               	movwf	(??_strncmp+2)& (0+255),c
 17995  004B12  5009               	movf	??_strncmp+2,w,c
 17996  004B14  2407               	addwf	??_strncmp,w,c
 17997  004B16  6E01               	movwf	?_strncmp,c
 17998  004B18  0E00               	movlw	0
 17999  004B1A  2008               	addwfc	??_strncmp+1,w,c
 18000  004B1C  6E02               	movwf	?_strncmp+1,c
 18001  004B1E  0012               	return	
 18002  004B20                     i2l3399:
 18003  004B20  4A01               	infsnz	strncmp@s1,f,c
 18004  004B22  2A02               	incf	strncmp@s1+1,f,c
 18005  004B24  4A03               	infsnz	strncmp@s2,f,c
 18006  004B26  2A04               	incf	strncmp@s2+1,f,c
 18007  004B28                     i2l3397:
 18008  004B28  0605               	decf	strncmp@len,f,c
 18009  004B2A  A0D8               	btfss	status,0,c
 18010  004B2C  0606               	decf	strncmp@len+1,f,c
 18011  004B2E  2805               	incf	strncmp@len,w,c
 18012  004B30  E1C8               	bnz	i2l9456
 18013  004B32  2806               	incf	strncmp@len+1,w,c
 18014  004B34  A4D8               	btfss	status,2,c
 18015  004B36  D7C5               	goto	i2l3398
 18016  004B38  0E00               	movlw	0
 18017  004B3A  6E02               	movwf	?_strncmp+1,c
 18018  004B3C  0E00               	movlw	0
 18019  004B3E  6E01               	movwf	?_strncmp,c
 18020  004B40  0012               	return	
 18021  004B42                     __end_of_strncmp:
 18022                           	opt stack 0
 18023                           pclatu	equ	0xFFB
 18024                           pclath	equ	0xFFA
 18025                           tblptru	equ	0xFF8
 18026                           tblptrh	equ	0xFF7
 18027                           tblptrl	equ	0xFF6
 18028                           tablat	equ	0xFF5
 18029                           prodh	equ	0xFF4
 18030                           prodl	equ	0xFF3
 18031                           intcon	equ	0xFF2
 18032                           indf0	equ	0xFEF
 18033                           postinc0	equ	0xFEE
 18034                           fsr0h	equ	0xFEA
 18035                           fsr0l	equ	0xFE9
 18036                           wreg	equ	0xFE8
 18037                           indf1	equ	0xFE7
 18038                           postdec1	equ	0xFE5
 18039                           fsr1h	equ	0xFE2
 18040                           fsr1l	equ	0xFE1
 18041                           indf2	equ	0xFDF
 18042                           postinc2	equ	0xFDE
 18043                           postdec2	equ	0xFDD
 18044                           plusw2	equ	0xFDB
 18045                           fsr2h	equ	0xFDA
 18046                           fsr2l	equ	0xFD9
 18047                           status	equ	0xFD8
 18048                           
 18049 ;; *************** function _strcpy *****************
 18050 ;; Defined at:
 18051 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strcpy.c"
 18052 ;; Parameters:    Size  Location     Type
 18053 ;;  to              2    0[COMRAM] PTR unsigned char 
 18054 ;;		 -> frameBuffer(200), 
 18055 ;;  from            2    2[COMRAM] PTR const unsigned char 
 18056 ;;		 -> recebeByteLoRaWan@frameData(100), 
 18057 ;; Auto vars:     Size  Location     Type
 18058 ;;  cp              2    4[COMRAM] PTR unsigned char 
 18059 ;;		 -> frameBuffer(200), 
 18060 ;; Return value:  Size  Location     Type
 18061 ;;                  2    0[COMRAM] PTR unsigned char 
 18062 ;; Registers used:
 18063 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 18064 ;; Tracked objects:
 18065 ;;		On entry : 0/0
 18066 ;;		On exit  : 0/0
 18067 ;;		Unchanged: 0/0
 18068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18069 ;;      Params:         4       0       0       0       0       0       0       0       0
 18070 ;;      Locals:         2       0       0       0       0       0       0       0       0
 18071 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18072 ;;      Totals:         6       0       0       0       0       0       0       0       0
 18073 ;;Total ram usage:        6 bytes
 18074 ;; Hardware stack levels used:    1
 18075 ;; This function calls:
 18076 ;;		Nothing
 18077 ;; This function is called by:
 18078 ;;		_recebeByteLoRaWan
 18079 ;; This function uses a non-reentrant model
 18080 ;;
 18081                           
 18082                           	psect	text61
 18083  00553E                     __ptext61:
 18084                           	opt stack 0
 18085  00553E                     _strcpy:
 18086                           	opt stack 23
 18087                           
 18088                           ;incstack = 0
 18089  00553E  C001  F005         	movff	strcpy@to,strcpy@cp
 18090  005542  C002  F006         	movff	strcpy@to+1,strcpy@cp+1
 18091  005546  D004               	goto	i2l3385
 18092  005548  4A05               	infsnz	strcpy@cp,f,c
 18093  00554A  2A06               	incf	strcpy@cp+1,f,c
 18094  00554C  4A03               	infsnz	strcpy@from,f,c
 18095  00554E  2A04               	incf	strcpy@from+1,f,c
 18096  005550                     i2l3385:
 18097  005550  C003  FFD9         	movff	strcpy@from,fsr2l
 18098  005554  C004  FFDA         	movff	strcpy@from+1,fsr2h
 18099  005558  C005  FFE1         	movff	strcpy@cp,fsr1l
 18100  00555C  C006  FFE2         	movff	strcpy@cp+1,fsr1h
 18101  005560  CFDF FFE7          	movff	indf2,indf1
 18102  005564  50E7               	movf	indf1,w,c
 18103  005566  B4D8               	btfsc	status,2,c
 18104  005568  0012               	return	
 18105  00556A  D7EE               	goto	i2l3386
 18106  00556C                     __end_of_strcpy:
 18107                           	opt stack 0
 18108                           pclatu	equ	0xFFB
 18109                           pclath	equ	0xFFA
 18110                           tblptru	equ	0xFF8
 18111                           tblptrh	equ	0xFF7
 18112                           tblptrl	equ	0xFF6
 18113                           tablat	equ	0xFF5
 18114                           prodh	equ	0xFF4
 18115                           prodl	equ	0xFF3
 18116                           intcon	equ	0xFF2
 18117                           indf0	equ	0xFEF
 18118                           postinc0	equ	0xFEE
 18119                           fsr0h	equ	0xFEA
 18120                           fsr0l	equ	0xFE9
 18121                           wreg	equ	0xFE8
 18122                           indf1	equ	0xFE7
 18123                           postdec1	equ	0xFE5
 18124                           fsr1h	equ	0xFE2
 18125                           fsr1l	equ	0xFE1
 18126                           indf2	equ	0xFDF
 18127                           postinc2	equ	0xFDE
 18128                           postdec2	equ	0xFDD
 18129                           plusw2	equ	0xFDB
 18130                           fsr2h	equ	0xFDA
 18131                           fsr2l	equ	0xFD9
 18132                           status	equ	0xFD8
 18133                           
 18134 ;; *************** function _strcmp *****************
 18135 ;; Defined at:
 18136 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strcmp.c"
 18137 ;; Parameters:    Size  Location     Type
 18138 ;;  s1              2    0[COMRAM] PTR const unsigned char 
 18139 ;;		 -> recebeByteLoRaWan@frameData(100), 
 18140 ;;  s2              2    2[COMRAM] PTR const unsigned char 
 18141 ;;		 -> STR_20(16), STR_19(7), STR_18(14), STR_17(8), 
 18142 ;;		 -> STR_16(8), STR_15(10), STR_14(17), STR_13(11), 
 18143 ;;		 -> STR_12(5), STR_11(32), STR_10(7), STR_9(11), 
 18144 ;;		 -> STR_8(11), STR_7(14), STR_6(3), 
 18145 ;; Auto vars:     Size  Location     Type
 18146 ;;  r               1    5[COMRAM] char 
 18147 ;; Return value:  Size  Location     Type
 18148 ;;                  2    0[COMRAM] int 
 18149 ;; Registers used:
 18150 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 18151 ;; Tracked objects:
 18152 ;;		On entry : 0/0
 18153 ;;		On exit  : 0/0
 18154 ;;		Unchanged: 0/0
 18155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18156 ;;      Params:         4       0       0       0       0       0       0       0       0
 18157 ;;      Locals:         1       0       0       0       0       0       0       0       0
 18158 ;;      Temps:          1       0       0       0       0       0       0       0       0
 18159 ;;      Totals:         6       0       0       0       0       0       0       0       0
 18160 ;;Total ram usage:        6 bytes
 18161 ;; Hardware stack levels used:    1
 18162 ;; This function calls:
 18163 ;;		Nothing
 18164 ;; This function is called by:
 18165 ;;		_recebeByteLoRaWan
 18166 ;; This function uses a non-reentrant model
 18167 ;;
 18168                           
 18169                           	psect	text62
 18170  0050BC                     __ptext62:
 18171                           	opt stack 0
 18172  0050BC                     _strcmp:
 18173                           	opt stack 23
 18174                           
 18175                           ;incstack = 0
 18176  0050BC  D004               	goto	i2l3377
 18177  0050BE  4A01               	infsnz	strcmp@s1,f,c
 18178  0050C0  2A02               	incf	strcmp@s1+1,f,c
 18179  0050C2  4A03               	infsnz	strcmp@s2,f,c
 18180  0050C4  2A04               	incf	strcmp@s2+1,f,c
 18181  0050C6                     i2l3377:
 18182  0050C6  C001  FFD9         	movff	strcmp@s1,fsr2l
 18183  0050CA  C002  FFDA         	movff	strcmp@s1+1,fsr2h
 18184  0050CE  50DF               	movf	indf2,w,c
 18185  0050D0  6E05               	movwf	??_strcmp& (0+255),c
 18186  0050D2  C003  FFF6         	movff	strcmp@s2,tblptrl
 18187  0050D6  C004  FFF7         	movff	strcmp@s2+1,tblptrh
 18188  0050DA                     	if	0	;tblptru may be non-zero
 18189  0050DA                     	endif
 18190  0050DA                     	if	0	;tblptru may be non-zero
 18191  0050DA                     	endif
 18192  0050DA  0008               	tblrd		*
 18193  0050DC  50F5               	movf	tablat,w,c
 18194  0050DE  0800               	sublw	0
 18195  0050E0  2405               	addwf	??_strcmp,w,c
 18196  0050E2  6E06               	movwf	strcmp@r,c
 18197  0050E4  5006               	movf	strcmp@r,w,c
 18198  0050E6  A4D8               	btfss	status,2,c
 18199  0050E8  D007               	goto	i2u885_40
 18200  0050EA  C001  FFD9         	movff	strcmp@s1,fsr2l
 18201  0050EE  C002  FFDA         	movff	strcmp@s1+1,fsr2h
 18202  0050F2  50DF               	movf	indf2,w,c
 18203  0050F4  A4D8               	btfss	status,2,c
 18204  0050F6  D7E3               	goto	i2l3378
 18205  0050F8                     i2u885_40:
 18206  0050F8  5006               	movf	strcmp@r,w,c
 18207  0050FA  6E01               	movwf	?_strcmp,c
 18208  0050FC  6A02               	clrf	?_strcmp+1,c
 18209  0050FE  BE01               	btfsc	?_strcmp,7,c
 18210  005100  0602               	decf	?_strcmp+1,f,c
 18211  005102  0012               	return	
 18212  005104                     __end_of_strcmp:
 18213                           	opt stack 0
 18214                           pclatu	equ	0xFFB
 18215                           pclath	equ	0xFFA
 18216                           tblptru	equ	0xFF8
 18217                           tblptrh	equ	0xFF7
 18218                           tblptrl	equ	0xFF6
 18219                           tablat	equ	0xFF5
 18220                           prodh	equ	0xFF4
 18221                           prodl	equ	0xFF3
 18222                           intcon	equ	0xFF2
 18223                           indf0	equ	0xFEF
 18224                           postinc0	equ	0xFEE
 18225                           fsr0h	equ	0xFEA
 18226                           fsr0l	equ	0xFE9
 18227                           wreg	equ	0xFE8
 18228                           indf1	equ	0xFE7
 18229                           postdec1	equ	0xFE5
 18230                           fsr1h	equ	0xFE2
 18231                           fsr1l	equ	0xFE1
 18232                           indf2	equ	0xFDF
 18233                           postinc2	equ	0xFDE
 18234                           postdec2	equ	0xFDD
 18235                           plusw2	equ	0xFDB
 18236                           fsr2h	equ	0xFDA
 18237                           fsr2l	equ	0xFD9
 18238                           status	equ	0xFD8
 18239                           
 18240 ;; *************** function _converter *****************
 18241 ;; Defined at:
 18242 ;;		line 360 in file "XBeeCore.c"
 18243 ;; Parameters:    Size  Location     Type
 18244 ;;  conv1           1    wreg     unsigned char 
 18245 ;;  conv2           1    1[COMRAM] unsigned char 
 18246 ;; Auto vars:     Size  Location     Type
 18247 ;;  conv1           1    5[COMRAM] unsigned char 
 18248 ;;  aux2            1    4[COMRAM] unsigned char 
 18249 ;;  aux             1    3[COMRAM] unsigned char 
 18250 ;;  resul           1    2[COMRAM] unsigned char 
 18251 ;; Return value:  Size  Location     Type
 18252 ;;                  1    wreg      unsigned char 
 18253 ;; Registers used:
 18254 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 18255 ;; Tracked objects:
 18256 ;;		On entry : 0/0
 18257 ;;		On exit  : 0/0
 18258 ;;		Unchanged: 0/0
 18259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18260 ;;      Params:         1       0       0       0       0       0       0       0       0
 18261 ;;      Locals:         4       0       0       0       0       0       0       0       0
 18262 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18263 ;;      Totals:         5       0       0       0       0       0       0       0       0
 18264 ;;Total ram usage:        5 bytes
 18265 ;; Hardware stack levels used:    1
 18266 ;; Hardware stack levels required when called:    1
 18267 ;; This function calls:
 18268 ;;		_toupper
 18269 ;; This function is called by:
 18270 ;;		_recebeByteLoRaWan
 18271 ;;		_send
 18272 ;; This function uses a non-reentrant model
 18273 ;;
 18274                           
 18275                           	psect	text63
 18276  0049B6                     __ptext63:
 18277                           	opt stack 0
 18278  0049B6                     _converter:
 18279                           	opt stack 22
 18280                           
 18281                           ;incstack = 0
 18282                           ;converter@conv1 stored from wreg
 18283  0049B6  6E06               	movwf	converter@conv1,c
 18284                           
 18285                           ;XBeeCore.c: 362: uint8_t aux=0;
 18286  0049B8  0E00               	movlw	0
 18287  0049BA  6E04               	movwf	converter@aux,c
 18288                           
 18289                           ;XBeeCore.c: 363: uint8_t aux2=0;
 18290  0049BC  0E00               	movlw	0
 18291  0049BE  6E05               	movwf	converter@aux2,c
 18292                           
 18293                           ;XBeeCore.c: 364: uint8_t resul=0;
 18294  0049C0  0E00               	movlw	0
 18295  0049C2  6E03               	movwf	converter@resul,c
 18296                           
 18297                           ;XBeeCore.c: 367: conv1=toupper(conv1);
 18298  0049C4  5006               	movf	converter@conv1,w,c
 18299  0049C6  EC69  F02B         	call	_toupper
 18300  0049CA  6E06               	movwf	converter@conv1,c
 18301                           
 18302                           ;XBeeCore.c: 368: conv2=toupper(conv2);
 18303  0049CC  5002               	movf	converter@conv2,w,c
 18304  0049CE  EC69  F02B         	call	_toupper
 18305  0049D2  6E02               	movwf	converter@conv2,c
 18306                           
 18307                           ;XBeeCore.c: 370: if ((conv1>='0') && (conv1<='9'))
 18308  0049D4  0E2F               	movlw	47
 18309  0049D6  6406               	cpfsgt	converter@conv1,c
 18310  0049D8  D006               	goto	i2l1468
 18311  0049DA  0E3A               	movlw	58
 18312  0049DC  6006               	cpfslt	converter@conv1,c
 18313  0049DE  D003               	goto	i2l1468
 18314                           
 18315                           ;XBeeCore.c: 371: {
 18316                           ;XBeeCore.c: 372: aux=conv1-'0';
 18317  0049E0  5006               	movf	converter@conv1,w,c
 18318  0049E2  0FD0               	addlw	208
 18319  0049E4  D008               	goto	L17
 18320  0049E6                     i2l1468:
 18321                           
 18322                           ;XBeeCore.c: 374: else if ((conv1>='A') && (conv1<='F'))
 18323  0049E6  0E40               	movlw	64
 18324  0049E8  6406               	cpfsgt	converter@conv1,c
 18325  0049EA  D006               	goto	i2l1470
 18326  0049EC  0E47               	movlw	71
 18327  0049EE  6006               	cpfslt	converter@conv1,c
 18328  0049F0  D003               	goto	i2l1470
 18329                           
 18330                           ;XBeeCore.c: 375: {
 18331                           ;XBeeCore.c: 376: aux=conv1-'A'+10;
 18332  0049F2  5006               	movf	converter@conv1,w,c
 18333  0049F4  0FC9               	addlw	201
 18334  0049F6                     L17:
 18335  0049F6  6E04               	movwf	converter@aux,c
 18336  0049F8                     i2l1470:
 18337                           
 18338                           ;XBeeCore.c: 377: }
 18339                           ;XBeeCore.c: 379: if ((conv2>='0') && (conv2<='9'))
 18340  0049F8  0E2F               	movlw	47
 18341  0049FA  6402               	cpfsgt	converter@conv2,c
 18342  0049FC  D006               	goto	i2l1471
 18343  0049FE  0E3A               	movlw	58
 18344  004A00  6002               	cpfslt	converter@conv2,c
 18345  004A02  D003               	goto	i2l1471
 18346                           
 18347                           ;XBeeCore.c: 380: {
 18348                           ;XBeeCore.c: 381: aux2=conv2-'0';
 18349  004A04  5002               	movf	converter@conv2,w,c
 18350  004A06  0FD0               	addlw	208
 18351  004A08  D00A               	goto	L19
 18352  004A0A                     i2l1471:
 18353                           
 18354                           ;XBeeCore.c: 383: else if ((conv2>='A') && (conv2<='F'))
 18355  004A0A  0E40               	movlw	64
 18356  004A0C  6402               	cpfsgt	converter@conv2,c
 18357  004A0E  D006               	goto	i2l1473
 18358  004A10  0E47               	movlw	71
 18359  004A12  6002               	cpfslt	converter@conv2,c
 18360  004A14  D003               	goto	i2l1473
 18361                           
 18362                           ;XBeeCore.c: 384: {
 18363                           ;XBeeCore.c: 385: aux2=conv2-'A'+10;
 18364  004A16  5002               	movf	converter@conv2,w,c
 18365  004A18  0FC9               	addlw	201
 18366  004A1A  D001               	goto	L19
 18367  004A1C                     i2l1473:
 18368                           
 18369                           ;XBeeCore.c: 387: else
 18370                           ;XBeeCore.c: 388: {
 18371                           ;XBeeCore.c: 389: aux2=100;
 18372  004A1C  0E64               	movlw	100
 18373  004A1E                     L19:
 18374  004A1E  6E05               	movwf	converter@aux2,c
 18375                           
 18376                           ;XBeeCore.c: 390: }
 18377                           ;XBeeCore.c: 392: if(aux2==100)
 18378  004A20  0E64               	movlw	100
 18379  004A22  1805               	xorwf	converter@aux2,w,c
 18380  004A24  A4D8               	btfss	status,2,c
 18381  004A26  D003               	goto	i2l1475
 18382                           
 18383                           ;XBeeCore.c: 393: {
 18384                           ;XBeeCore.c: 394: resul=aux;
 18385  004A28  C004  F003         	movff	converter@aux,converter@resul
 18386                           
 18387                           ;XBeeCore.c: 395: }
 18388  004A2C  D005               	goto	i2l1476
 18389  004A2E                     i2l1475:
 18390                           
 18391                           ;XBeeCore.c: 396: else
 18392                           ;XBeeCore.c: 397: {
 18393                           ;XBeeCore.c: 398: resul=(uint8_t)((aux*16)+aux2);
 18394  004A2E  5004               	movf	converter@aux,w,c
 18395  004A30  0D10               	mullw	16
 18396  004A32  50F3               	movf	prodl,w,c
 18397  004A34  2405               	addwf	converter@aux2,w,c
 18398  004A36  6E03               	movwf	converter@resul,c
 18399  004A38                     i2l1476:
 18400                           
 18401                           ;XBeeCore.c: 399: }
 18402                           ;XBeeCore.c: 400: return resul;
 18403  004A38  5003               	movf	converter@resul,w,c
 18404  004A3A  0012               	return	
 18405  004A3C                     __end_of_converter:
 18406                           	opt stack 0
 18407                           pclatu	equ	0xFFB
 18408                           pclath	equ	0xFFA
 18409                           tblptru	equ	0xFF8
 18410                           tblptrh	equ	0xFF7
 18411                           tblptrl	equ	0xFF6
 18412                           tablat	equ	0xFF5
 18413                           prodh	equ	0xFF4
 18414                           prodl	equ	0xFF3
 18415                           intcon	equ	0xFF2
 18416                           indf0	equ	0xFEF
 18417                           postinc0	equ	0xFEE
 18418                           fsr0h	equ	0xFEA
 18419                           fsr0l	equ	0xFE9
 18420                           wreg	equ	0xFE8
 18421                           indf1	equ	0xFE7
 18422                           postdec1	equ	0xFE5
 18423                           fsr1h	equ	0xFE2
 18424                           fsr1l	equ	0xFE1
 18425                           indf2	equ	0xFDF
 18426                           postinc2	equ	0xFDE
 18427                           postdec2	equ	0xFDD
 18428                           plusw2	equ	0xFDB
 18429                           fsr2h	equ	0xFDA
 18430                           fsr2l	equ	0xFD9
 18431                           status	equ	0xFD8
 18432                           
 18433 ;; *************** function _toupper *****************
 18434 ;; Defined at:
 18435 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\toupper.c"
 18436 ;; Parameters:    Size  Location     Type
 18437 ;;  c               1    wreg     unsigned char 
 18438 ;; Auto vars:     Size  Location     Type
 18439 ;;  c               1    0[COMRAM] unsigned char 
 18440 ;; Return value:  Size  Location     Type
 18441 ;;                  1    wreg      unsigned char 
 18442 ;; Registers used:
 18443 ;;		wreg, status,2, status,0
 18444 ;; Tracked objects:
 18445 ;;		On entry : 0/0
 18446 ;;		On exit  : 0/0
 18447 ;;		Unchanged: 0/0
 18448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18449 ;;      Params:         0       0       0       0       0       0       0       0       0
 18450 ;;      Locals:         1       0       0       0       0       0       0       0       0
 18451 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18452 ;;      Totals:         1       0       0       0       0       0       0       0       0
 18453 ;;Total ram usage:        1 bytes
 18454 ;; Hardware stack levels used:    1
 18455 ;; This function calls:
 18456 ;;		Nothing
 18457 ;; This function is called by:
 18458 ;;		_converter
 18459 ;; This function uses a non-reentrant model
 18460 ;;
 18461                           
 18462                           	psect	text64
 18463  0056D2                     __ptext64:
 18464                           	opt stack 0
 18465  0056D2                     _toupper:
 18466                           	opt stack 22
 18467                           
 18468                           ;incstack = 0
 18469                           ;toupper@c stored from wreg
 18470  0056D2  6E01               	movwf	toupper@c,c
 18471  0056D4  0E7B               	movlw	123
 18472  0056D6  6001               	cpfslt	toupper@c,c
 18473  0056D8  D004               	goto	i2l3406
 18474  0056DA  0E60               	movlw	96
 18475  0056DC  6401               	cpfsgt	toupper@c,c
 18476  0056DE  D001               	goto	i2l3406
 18477  0056E0  9A01               	bcf	toupper@c,5,c
 18478  0056E2                     i2l3406:
 18479  0056E2  5001               	movf	toupper@c,w,c
 18480  0056E4  0012               	return	
 18481  0056E6                     __end_of_toupper:
 18482                           	opt stack 0
 18483                           pclatu	equ	0xFFB
 18484                           pclath	equ	0xFFA
 18485                           tblptru	equ	0xFF8
 18486                           tblptrh	equ	0xFF7
 18487                           tblptrl	equ	0xFF6
 18488                           tablat	equ	0xFF5
 18489                           prodh	equ	0xFF4
 18490                           prodl	equ	0xFF3
 18491                           intcon	equ	0xFF2
 18492                           indf0	equ	0xFEF
 18493                           postinc0	equ	0xFEE
 18494                           fsr0h	equ	0xFEA
 18495                           fsr0l	equ	0xFE9
 18496                           wreg	equ	0xFE8
 18497                           indf1	equ	0xFE7
 18498                           postdec1	equ	0xFE5
 18499                           fsr1h	equ	0xFE2
 18500                           fsr1l	equ	0xFE1
 18501                           indf2	equ	0xFDF
 18502                           postinc2	equ	0xFDE
 18503                           postdec2	equ	0xFDD
 18504                           plusw2	equ	0xFDB
 18505                           fsr2h	equ	0xFDA
 18506                           fsr2l	equ	0xFD9
 18507                           status	equ	0xFD8
 18508                           
 18509 ;; *************** function _getch *****************
 18510 ;; Defined at:
 18511 ;;		line 52 in file "uart/uart.c"
 18512 ;; Parameters:    Size  Location     Type
 18513 ;;		None
 18514 ;; Auto vars:     Size  Location     Type
 18515 ;;  data            1    2[COMRAM] unsigned char 
 18516 ;;  RC              1    1[COMRAM] unsigned char 
 18517 ;; Return value:  Size  Location     Type
 18518 ;;                  1    wreg      unsigned char 
 18519 ;; Registers used:
 18520 ;;		wreg, status,2, status,0
 18521 ;; Tracked objects:
 18522 ;;		On entry : 0/0
 18523 ;;		On exit  : 0/0
 18524 ;;		Unchanged: 0/0
 18525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18526 ;;      Params:         0       0       0       0       0       0       0       0       0
 18527 ;;      Locals:         2       0       0       0       0       0       0       0       0
 18528 ;;      Temps:          1       0       0       0       0       0       0       0       0
 18529 ;;      Totals:         3       0       0       0       0       0       0       0       0
 18530 ;;Total ram usage:        3 bytes
 18531 ;; Hardware stack levels used:    1
 18532 ;; This function calls:
 18533 ;;		Nothing
 18534 ;; This function is called by:
 18535 ;;		_SYS_InterruptHigh
 18536 ;;		_flush
 18537 ;; This function uses a non-reentrant model
 18538 ;;
 18539                           
 18540                           	psect	text65
 18541  005632                     __ptext65:
 18542                           	opt stack 0
 18543  005632                     _getch:
 18544                           	opt stack 24
 18545                           
 18546                           ;uart.c: 54: uint8_t RC;
 18547                           ;uart.c: 55: char data;
 18548                           ;uart.c: 57: if (!RCIF)
 18549                           
 18550                           ;incstack = 0
 18551  005632  BA9E               	btfsc	3998,5,c	;volatile
 18552  005634  D002               	goto	i2l1219
 18553                           
 18554                           ;uart.c: 58: return 0;
 18555  005636  0E00               	movlw	0
 18556  005638  0012               	return	
 18557  00563A                     i2l1219:
 18558                           
 18559                           ;uart.c: 60: RC=RCSTA;
 18560  00563A  CFAB F002          	movff	4011,getch@RC	;volatile
 18561                           
 18562                           ;uart.c: 61: data=RCREG;
 18563  00563E  CFAE F003          	movff	4014,getch@data	;volatile
 18564                           
 18565                           ;uart.c: 64: if ((RC & 0x06)!=0)
 18566  005642  C002  F001         	movff	getch@RC,??_getch
 18567  005646  0E06               	movlw	6
 18568  005648  1601               	andwf	??_getch,f,c
 18569  00564A  B4D8               	btfsc	status,2,c
 18570  00564C  D003               	goto	i2l1221
 18571                           
 18572                           ;uart.c: 65: {
 18573                           ;uart.c: 66: RCSTAbits.CREN=0;
 18574  00564E  98AB               	bcf	4011,4,c	;volatile
 18575                           
 18576                           ;uart.c: 67: __nop();
 18577  005650  F000               	nop	
 18578                           
 18579                           ;uart.c: 68: RCSTAbits.CREN=1;
 18580  005652  88AB               	bsf	4011,4,c	;volatile
 18581  005654                     i2l1221:
 18582                           
 18583                           ;uart.c: 69: }
 18584                           ;uart.c: 71: return data;
 18585  005654  5003               	movf	getch@data,w,c
 18586  005656  0012               	return	
 18587  005658                     __end_of_getch:
 18588                           	opt stack 0
 18589                           pclatu	equ	0xFFB
 18590                           pclath	equ	0xFFA
 18591                           tblptru	equ	0xFF8
 18592                           tblptrh	equ	0xFF7
 18593                           tblptrl	equ	0xFF6
 18594                           tablat	equ	0xFF5
 18595                           prodh	equ	0xFF4
 18596                           prodl	equ	0xFF3
 18597                           intcon	equ	0xFF2
 18598                           indf0	equ	0xFEF
 18599                           postinc0	equ	0xFEE
 18600                           fsr0h	equ	0xFEA
 18601                           fsr0l	equ	0xFE9
 18602                           wreg	equ	0xFE8
 18603                           indf1	equ	0xFE7
 18604                           postdec1	equ	0xFE5
 18605                           fsr1h	equ	0xFE2
 18606                           fsr1l	equ	0xFE1
 18607                           indf2	equ	0xFDF
 18608                           postinc2	equ	0xFDE
 18609                           postdec2	equ	0xFDD
 18610                           plusw2	equ	0xFDB
 18611                           fsr2h	equ	0xFDA
 18612                           fsr2l	equ	0xFD9
 18613                           status	equ	0xFD8
 18614                           
 18615 ;; *************** function _USBDeviceTasks *****************
 18616 ;; Defined at:
 18617 ;;		line 477 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 18618 ;; Parameters:    Size  Location     Type
 18619 ;;		None
 18620 ;; Auto vars:     Size  Location     Type
 18621 ;;  i               1   27[COMRAM] unsigned char 
 18622 ;; Return value:  Size  Location     Type
 18623 ;;                  1    wreg      void 
 18624 ;; Registers used:
 18625 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18626 ;; Tracked objects:
 18627 ;;		On entry : 0/0
 18628 ;;		On exit  : 0/0
 18629 ;;		Unchanged: 0/0
 18630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18631 ;;      Params:         0       0       0       0       0       0       0       0       0
 18632 ;;      Locals:         1       0       0       0       0       0       0       0       0
 18633 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18634 ;;      Totals:         1       0       0       0       0       0       0       0       0
 18635 ;;Total ram usage:        1 bytes
 18636 ;; Hardware stack levels used:    1
 18637 ;; Hardware stack levels required when called:    8
 18638 ;; This function calls:
 18639 ;;		_USBCtrlEPAllowStatusStage
 18640 ;;		_USBCtrlEPService
 18641 ;;		_USBIncrement1msInternalTimers
 18642 ;;		_USBStallHandler
 18643 ;;		_USBSuspend
 18644 ;;		_USBWakeFromSuspend
 18645 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 18646 ;;		i2_USBDeviceInit
 18647 ;; This function is called by:
 18648 ;;		_SYS_InterruptHigh
 18649 ;; This function uses a non-reentrant model
 18650 ;;
 18651                           
 18652                           	psect	text66
 18653  002F9A                     __ptext66:
 18654                           	opt stack 0
 18655  002F9A                     _USBDeviceTasks:
 18656                           	opt stack 16
 18657                           
 18658                           ;usb_device.c: 479: uint8_t i;
 18659                           ;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
 18660                           
 18661                           ;incstack = 0
 18662  002F9A  0458               	decf	_USBDeviceState,w,c	;volatile
 18663  002F9C  B4D8               	btfsc	status,2,c
 18664                           
 18665                           ;usb_device.c: 591: {
 18666                           ;usb_device.c: 601: if(!UCONbits.SE0)
 18667  002F9E  BA6D               	btfsc	3949,5,c	;volatile
 18668  002FA0  D006               	goto	i2l408
 18669                           
 18670                           ;usb_device.c: 602: {
 18671                           ;usb_device.c: 608: {UIR = 0;};
 18672  002FA2  0E00               	movlw	0
 18673  002FA4  6E68               	movwf	3944,c	;volatile
 18674                           
 18675                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
 18676  002FA6  8069               	bsf	3945,0,c	;volatile
 18677                           
 18678                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
 18679  002FA8  8869               	bsf	3945,4,c	;volatile
 18680                           
 18681                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
 18682  002FAA  0E02               	movlw	2
 18683  002FAC  6E58               	movwf	_USBDeviceState,c	;volatile
 18684  002FAE                     i2l408:
 18685                           
 18686                           ;usb_device.c: 617: }
 18687                           ;usb_device.c: 618: }
 18688                           ;usb_device.c: 634: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 18689  002FAE  B468               	btfsc	3944,2,c	;volatile
 18690  002FB0  A469               	btfss	3945,2,c	;volatile
 18691  002FB2  D003               	goto	i2l409
 18692                           
 18693                           ;usb_device.c: 635: {
 18694                           ;usb_device.c: 636: (UIR &= 0xFB);
 18695  002FB4  9468               	bcf	3944,2,c	;volatile
 18696                           
 18697                           ;usb_device.c: 640: USBWakeFromSuspend();
 18698  002FB6  EC22  F02A         	call	_USBWakeFromSuspend	;wreg free
 18699  002FBA                     i2l409:
 18700                           
 18701                           ;usb_device.c: 642: }
 18702                           ;usb_device.c: 647: if(UCONbits.SUSPND==1)
 18703  002FBA  A26D               	btfss	3949,1,c	;volatile
 18704  002FBC  D002               	goto	i2l410
 18705                           
 18706                           ;usb_device.c: 648: {
 18707                           ;usb_device.c: 649: {PIR2bits.USBIF = 0;};
 18708  002FBE  9AA1               	bcf	4001,5,c	;volatile
 18709                           
 18710                           ;usb_device.c: 650: return;
 18711  002FC0  0012               	return	
 18712  002FC2                     i2l410:
 18713                           
 18714                           ;usb_device.c: 651: }
 18715                           ;usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
 18716  002FC2  B068               	btfsc	3944,0,c	;volatile
 18717  002FC4  A069               	btfss	3945,0,c	;volatile
 18718  002FC6  D006               	goto	i2l412
 18719                           
 18720                           ;usb_device.c: 664: {
 18721                           ;usb_device.c: 665: USBDeviceInit();
 18722  002FC8  ECFC  F015         	call	i2_USBDeviceInit	;wreg free
 18723                           
 18724                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
 18725  002FCC  8AA0               	bsf	4000,5,c	;volatile
 18726                           
 18727                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
 18728  002FCE  0E04               	movlw	4
 18729  002FD0  6E58               	movwf	_USBDeviceState,c	;volatile
 18730                           
 18731                           ;usb_device.c: 681: (UIR &= 0xFE);
 18732  002FD2  9068               	bcf	3944,0,c	;volatile
 18733  002FD4                     i2l412:
 18734                           
 18735                           ;usb_device.c: 682: }
 18736                           ;usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 18737  002FD4  B868               	btfsc	3944,4,c	;volatile
 18738  002FD6  A869               	btfss	3945,4,c	;volatile
 18739  002FD8  D002               	goto	i2l413
 18740                           
 18741                           ;usb_device.c: 688: {
 18742                           ;usb_device.c: 694: USBSuspend();
 18743  002FDA  EC87  F02A         	call	_USBSuspend	;wreg free
 18744  002FDE                     i2l413:
 18745                           
 18746                           ;usb_device.c: 696: }
 18747                           ;usb_device.c: 708: if(UIRbits.SOFIF)
 18748  002FDE  AC68               	btfss	3944,6,c	;volatile
 18749  002FE0  D01A               	goto	i2l417
 18750                           
 18751                           ;usb_device.c: 709: {
 18752                           ;usb_device.c: 711: if(UIEbits.SOFIE)
 18753  002FE2  AC69               	btfss	3945,6,c	;volatile
 18754  002FE4  D00E               	goto	i2l415
 18755                           
 18756                           ;usb_device.c: 712: {
 18757                           ;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 18758  002FE6  0E00               	movlw	0
 18759  002FE8  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 18760  002FEA  0E73               	movlw	115
 18761  002FEC  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 18762  002FEE  0E00               	movlw	0
 18763  002FF0  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 18764  002FF2  0E00               	movlw	0
 18765  002FF4  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 18766  002FF6  0E00               	movlw	0
 18767  002FF8  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 18768  002FFA  0E01               	movlw	1
 18769  002FFC  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 18770  002FFE  ECB4  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 18771  003002                     i2l415:
 18772                           
 18773                           ;usb_device.c: 714: }
 18774                           ;usb_device.c: 715: (UIR &= 0xBF);
 18775  003002  9C68               	bcf	3944,6,c	;volatile
 18776                           
 18777                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
 18778  003004  EC2C  F02B         	call	_USBIncrement1msInternalTimers	;wreg free
 18779                           
 18780                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 18781  003008  5054               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 18782  00300A  A4D8               	btfss	status,2,c
 18783                           
 18784                           ;usb_device.c: 736: {
 18785                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 18786  00300C  0654               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 18787                           
 18788                           ;usb_device.c: 738: }
 18789                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 18790  00300E  5054               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 18791  003010  B4D8               	btfsc	status,2,c
 18792                           
 18793                           ;usb_device.c: 745: {
 18794                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 18795  003012  ECC3  F01F         	call	_USBCtrlEPAllowStatusStage	;wreg free
 18796  003016                     i2l417:
 18797                           
 18798                           ;usb_device.c: 747: }
 18799                           ;usb_device.c: 749: }
 18800                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
 18801  003016  BA68               	btfsc	3944,5,c	;volatile
 18802  003018  AA69               	btfss	3945,5,c	;volatile
 18803  00301A  D002               	goto	i2l418
 18804                           
 18805                           ;usb_device.c: 752: {
 18806                           ;usb_device.c: 753: USBStallHandler();
 18807  00301C  EC4F  F029         	call	_USBStallHandler	;wreg free
 18808  003020                     i2l418:
 18809                           
 18810                           ;usb_device.c: 754: }
 18811                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 18812  003020  B268               	btfsc	3944,1,c	;volatile
 18813  003022  A269               	btfss	3945,1,c	;volatile
 18814  003024  D00F               	goto	i2l419
 18815                           
 18816                           ;usb_device.c: 757: {
 18817                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 18818  003026  0E7F               	movlw	127
 18819  003028  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 18820  00302A  680D               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 18821  00302C  0E00               	movlw	0
 18822  00302E  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 18823  003030  0E00               	movlw	0
 18824  003032  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 18825  003034  0E00               	movlw	0
 18826  003036  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 18827  003038  0E01               	movlw	1
 18828  00303A  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 18829  00303C  ECB4  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 18830                           
 18831                           ;usb_device.c: 759: {UEIR = 0;};
 18832  003040  0E00               	movlw	0
 18833  003042  6E6A               	movwf	3946,c	;volatile
 18834  003044                     i2l419:
 18835                           
 18836                           ;usb_device.c: 767: }
 18837                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 18838  003044  0E04               	movlw	4
 18839  003046  6058               	cpfslt	_USBDeviceState,c	;volatile
 18840  003048  D002               	goto	i2l420
 18841                           
 18842                           ;usb_device.c: 775: {
 18843                           ;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 18844  00304A  9AA1               	bcf	4001,5,c	;volatile
 18845                           
 18846                           ;usb_device.c: 777: return;
 18847  00304C  0012               	return	
 18848  00304E                     i2l420:
 18849                           
 18850                           ;usb_device.c: 778: }
 18851                           ;usb_device.c: 783: if(UIEbits.TRNIE)
 18852  00304E  A669               	btfss	3945,3,c	;volatile
 18853  003050  D039               	goto	i2u942_40
 18854                           
 18855                           ;usb_device.c: 784: {
 18856                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
 18857  003052  0E00               	movlw	0
 18858  003054  6E1C               	movwf	USBDeviceTasks@i,c
 18859  003056                     i2l9796:
 18860  003056  0E03               	movlw	3
 18861  003058  641C               	cpfsgt	USBDeviceTasks@i,c
 18862  00305A  D001               	goto	i2l422
 18863  00305C  D033               	goto	i2u942_40
 18864  00305E                     i2l422:
 18865                           
 18866                           ;usb_device.c: 786: {
 18867                           ;usb_device.c: 787: if(UIRbits.TRNIF)
 18868  00305E  A668               	btfss	3944,3,c	;volatile
 18869  003060  D031               	goto	i2u942_40
 18870                           
 18871                           ;usb_device.c: 788: {
 18872                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
 18873  003062  CF6C F05D          	movff	3948,_USTATcopy	;volatile
 18874                           
 18875                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 18876  003066  305D               	rrcf	_USTATcopy,w,c	;volatile
 18877  003068  32E8               	rrcf	wreg,f,c
 18878  00306A  32E8               	rrcf	wreg,f,c
 18879  00306C  0B0F               	andlw	15
 18880  00306E  6E55               	movwf	_endpoint_number,c	;volatile
 18881                           
 18882                           ;usb_device.c: 793: (UIR &= 0xF7);
 18883  003070  9668               	bcf	3944,3,c	;volatile
 18884                           
 18885                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 18886  003072  B45D               	btfsc	_USTATcopy,2,c	;volatile
 18887  003074  D007               	goto	i2l425
 18888                           
 18889                           ;usb_device.c: 799: {
 18890                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 18891  003076  5055               	movf	_endpoint_number,w,c	;volatile
 18892  003078  0D01               	mullw	1
 18893  00307A  0ED2               	movlw	low _ep_data_out
 18894  00307C  24F3               	addwf	prodl,w,c
 18895  00307E  6ED9               	movwf	fsr2l,c
 18896  003080  0E02               	movlw	high _ep_data_out
 18897  003082  D006               	goto	L20
 18898  003084                     i2l425:
 18899                           
 18900                           ;usb_device.c: 802: else
 18901                           ;usb_device.c: 803: {
 18902                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 18903                           
 18904                           ; BSR set to: 2
 18905  003084  5055               	movf	_endpoint_number,w,c	;volatile
 18906  003086  0D01               	mullw	1
 18907  003088  0ED5               	movlw	low _ep_data_in
 18908  00308A  24F3               	addwf	prodl,w,c
 18909  00308C  6ED9               	movwf	fsr2l,c
 18910  00308E  0E02               	movlw	high _ep_data_in
 18911  003090                     L20:
 18912  003090  20F4               	addwfc	prodh,w,c
 18913  003092  6EDA               	movwf	fsr2h,c
 18914  003094  0102               	movlb	2	; () banked
 18915  003096  70DF               	btg	indf2,0,c
 18916                           
 18917                           ; BSR set to: 2
 18918                           ;usb_device.c: 805: }
 18919                           ;usb_device.c: 810: if(endpoint_number == 0)
 18920                           
 18921                           ; BSR set to: 2
 18922  003098  5055               	movf	_endpoint_number,w,c	;volatile
 18923  00309A  A4D8               	btfss	status,2,c
 18924  00309C  D003               	goto	i2l427
 18925                           
 18926                           ; BSR set to: 2
 18927                           ;usb_device.c: 811: {
 18928                           ;usb_device.c: 812: USBCtrlEPService();
 18929  00309E  EC71  F023         	call	_USBCtrlEPService	;wreg free
 18930                           
 18931                           ;usb_device.c: 813: }
 18932  0030A2  D00E               	goto	i2l429
 18933  0030A4                     i2l427:
 18934                           
 18935                           ;usb_device.c: 814: else
 18936                           ;usb_device.c: 815: {
 18937                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 18938  0030A4  0E00               	movlw	0
 18939  0030A6  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 18940  0030A8  0E72               	movlw	114
 18941  0030AA  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 18942  0030AC  0E5D               	movlw	low _USTATcopy
 18943  0030AE  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 18944  0030B0  0E00               	movlw	high _USTATcopy
 18945  0030B2  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 18946  0030B4  0E00               	movlw	0
 18947  0030B6  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 18948  0030B8  0E00               	movlw	0
 18949  0030BA  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 18950  0030BC  ECB4  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 18951  0030C0                     i2l429:
 18952  0030C0  2A1C               	incf	USBDeviceTasks@i,f,c
 18953  0030C2  D7C9               	goto	i2l9796
 18954  0030C4                     i2u942_40:
 18955                           
 18956                           ;usb_device.c: 822: }
 18957                           ;usb_device.c: 823: }
 18958                           ;usb_device.c: 824: }
 18959                           ;usb_device.c: 826: {PIR2bits.USBIF = 0;};
 18960  0030C4  9AA1               	bcf	4001,5,c	;volatile
 18961  0030C6  0012               	return		;funcret
 18962  0030C8                     __end_of_USBDeviceTasks:
 18963                           	opt stack 0
 18964                           pclatu	equ	0xFFB
 18965                           pclath	equ	0xFFA
 18966                           tblptru	equ	0xFF8
 18967                           tblptrh	equ	0xFF7
 18968                           tblptrl	equ	0xFF6
 18969                           tablat	equ	0xFF5
 18970                           prodh	equ	0xFF4
 18971                           prodl	equ	0xFF3
 18972                           intcon	equ	0xFF2
 18973                           indf0	equ	0xFEF
 18974                           postinc0	equ	0xFEE
 18975                           fsr0h	equ	0xFEA
 18976                           fsr0l	equ	0xFE9
 18977                           wreg	equ	0xFE8
 18978                           indf1	equ	0xFE7
 18979                           postdec1	equ	0xFE5
 18980                           fsr1h	equ	0xFE2
 18981                           fsr1l	equ	0xFE1
 18982                           indf2	equ	0xFDF
 18983                           postinc2	equ	0xFDE
 18984                           postdec2	equ	0xFDD
 18985                           plusw2	equ	0xFDB
 18986                           fsr2h	equ	0xFDA
 18987                           fsr2l	equ	0xFD9
 18988                           status	equ	0xFD8
 18989                           
 18990 ;; *************** function i2_USBDeviceInit *****************
 18991 ;; Defined at:
 18992 ;;		line 277 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 18993 ;; Parameters:    Size  Location     Type
 18994 ;;		None
 18995 ;; Auto vars:     Size  Location     Type
 18996 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 18997 ;; Return value:  Size  Location     Type
 18998 ;;                  1    wreg      void 
 18999 ;; Registers used:
 19000 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19001 ;; Tracked objects:
 19002 ;;		On entry : 0/0
 19003 ;;		On exit  : 0/0
 19004 ;;		Unchanged: 0/0
 19005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19006 ;;      Params:         0       0       0       0       0       0       0       0       0
 19007 ;;      Locals:         1       0       0       0       0       0       0       0       0
 19008 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19009 ;;      Totals:         1       0       0       0       0       0       0       0       0
 19010 ;;Total ram usage:        1 bytes
 19011 ;; Hardware stack levels used:    1
 19012 ;; Hardware stack levels required when called:    1
 19013 ;; This function calls:
 19014 ;;		i2_memset
 19015 ;; This function is called by:
 19016 ;;		_USBDeviceTasks
 19017 ;; This function uses a non-reentrant model
 19018 ;;
 19019                           
 19020                           	psect	text67
 19021  002BF8                     __ptext67:
 19022                           	opt stack 0
 19023  002BF8                     i2_USBDeviceInit:
 19024                           	opt stack 22
 19025                           
 19026                           ;usb_device.c: 279: uint8_t i;
 19027                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 19028                           
 19029                           ;incstack = 0
 19030  002BF8  9AA0               	bcf	4000,5,c	;volatile
 19031                           
 19032                           ;usb_device.c: 285: ;
 19033                           ;usb_device.c: 288: {UEIR = 0;};
 19034  002BFA  0E00               	movlw	0
 19035  002BFC  6E6A               	movwf	3946,c	;volatile
 19036                           
 19037                           ;usb_device.c: 291: {UIR = 0;};
 19038  002BFE  0E00               	movlw	0
 19039  002C00  6E68               	movwf	3944,c	;volatile
 19040                           
 19041                           ;usb_device.c: 294: UEP0 = 0;
 19042  002C02  0E00               	movlw	0
 19043  002C04  6E70               	movwf	3952,c	;volatile
 19044                           
 19045                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 19046  002C06  0E71               	movlw	113
 19047  002C08  6E01               	movwf	i2memset@p1,c
 19048  002C0A  0E0F               	movlw	15
 19049  002C0C  6E02               	movwf	i2memset@p1+1,c
 19050  002C0E  0E00               	movlw	0
 19051  002C10  6E04               	movwf	i2memset@c+1,c
 19052  002C12  0E00               	movlw	0
 19053  002C14  6E03               	movwf	i2memset@c,c
 19054  002C16  0E00               	movlw	0
 19055  002C18  6E06               	movwf	i2memset@n+1,c
 19056  002C1A  0E02               	movlw	2
 19057  002C1C  6E05               	movwf	i2memset@n,c
 19058  002C1E  ECB6  F02A         	call	i2_memset	;wreg free
 19059                           
 19060                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 19061  002C22  0E16               	movlw	22
 19062  002C24  6E6F               	movwf	3951,c	;volatile
 19063  002C26  0E9F               	movlw	159
 19064  002C28  6E6B               	movwf	3947,c	;volatile
 19065  002C2A  0E7B               	movlw	123
 19066  002C2C  6E69               	movwf	3945,c	;volatile
 19067                           
 19068                           ;usb_device.c: 301: ;
 19069                           ;usb_device.c: 304: ;
 19070                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
 19071  002C2E  0E00               	movlw	0
 19072  002C30  6E09               	movwf	i2USBDeviceInit@i,c
 19073  002C32                     i2l9544:
 19074  002C32  0E0B               	movlw	11
 19075  002C34  6409               	cpfsgt	i2USBDeviceInit@i,c
 19076  002C36  D001               	goto	i2l398
 19077  002C38  D00E               	goto	i2u896_40
 19078  002C3A                     i2l398:
 19079                           
 19080                           ;usb_device.c: 308: {
 19081                           ;usb_device.c: 309: BDT[i].Val = 0x00;
 19082  002C3A  5009               	movf	i2USBDeviceInit@i,w,c
 19083  002C3C  0D04               	mullw	4
 19084  002C3E  0E00               	movlw	0
 19085  002C40  24F3               	addwf	prodl,w,c
 19086  002C42  6ED9               	movwf	fsr2l,c
 19087  002C44  0E04               	movlw	4
 19088  002C46  20F4               	addwfc	prodh,w,c
 19089  002C48  6EDA               	movwf	fsr2h,c
 19090  002C4A  6ADE               	clrf	postinc2,c
 19091  002C4C  6ADE               	clrf	postinc2,c
 19092  002C4E  6ADE               	clrf	postinc2,c
 19093  002C50  6ADD               	clrf	postdec2,c
 19094  002C52  2A09               	incf	i2USBDeviceInit@i,f,c
 19095  002C54  D7EE               	goto	i2l9544
 19096  002C56                     i2u896_40:
 19097                           
 19098                           ;usb_device.c: 310: }
 19099                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
 19100  002C56  8C6D               	bsf	3949,6,c	;volatile
 19101                           
 19102                           ;usb_device.c: 316: UADDR = 0x00;
 19103  002C58  0E00               	movlw	0
 19104  002C5A  6E6E               	movwf	3950,c	;volatile
 19105                           
 19106                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 19107  002C5C  986D               	bcf	3949,4,c	;volatile
 19108                           
 19109                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 19110  002C5E  9C6D               	bcf	3949,6,c	;volatile
 19111  002C60                     
 19112                           ;usb_device.c: 326: {
 19113                           ;usb_device.c: 327: (UIR &= 0xF7);
 19114  002C60  9668               	bcf	3944,3,c	;volatile
 19115                           
 19116                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 19117  002C62  0E00               	movlw	0
 19118  002C64  6E43               	movwf	_inPipes+3,c	;volatile
 19119                           
 19120                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 19121  002C66  0E00               	movlw	0
 19122  002C68  6E3B               	movwf	_outPipes+3,c	;volatile
 19123                           
 19124                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 19125  002C6A  0E00               	movlw	0
 19126  002C6C  6E3D               	movwf	_outPipes+5,c	;volatile
 19127  002C6E  0E00               	movlw	0
 19128  002C70  6E3C               	movwf	_outPipes+4,c	;volatile
 19129                           
 19130                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 19131  002C72  B668               	btfsc	3944,3,c	;volatile
 19132  002C74  D7F5               	goto	i2l400
 19133                           
 19134                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 19135  002C76  0E01               	movlw	1
 19136  002C78  0101               	movlb	1	; () banked
 19137  002C7A  6FF7               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 19138                           
 19139                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 19140  002C7C  0E01               	movlw	1
 19141  002C7E  0102               	movlb	2	; () banked
 19142  002C80  6FE9               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 19143                           
 19144                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 19145  002C82  0E00               	movlw	0
 19146  002C84  6FE8               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 19147                           
 19148                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 19149  002C86  0E00               	movlw	0
 19150  002C88  6FE7               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 19151                           
 19152                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 19153  002C8A  0E00               	movlw	0
 19154  002C8C  0101               	movlb	1	; () banked
 19155  002C8E  6FF9               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 19156                           
 19157                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 19158  002C90  0E00               	movlw	0
 19159  002C92  6E09               	movwf	i2USBDeviceInit@i,c
 19160  002C94                     i2l9572:
 19161                           
 19162                           ; BSR set to: 1
 19163  002C94  0E02               	movlw	2
 19164  002C96  6409               	cpfsgt	i2USBDeviceInit@i,c
 19165  002C98  D001               	goto	i2l402
 19166  002C9A  D02E               	goto	i2u899_40
 19167  002C9C                     i2l402:
 19168                           
 19169                           ;usb_device.c: 346: {
 19170                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 19171                           
 19172                           ; BSR set to: 1
 19173  002C9C  5009               	movf	i2USBDeviceInit@i,w,c
 19174  002C9E  0D02               	mullw	2
 19175  002CA0  0E46               	movlw	low _pBDTEntryIn
 19176  002CA2  24F3               	addwf	prodl,w,c
 19177  002CA4  6ED9               	movwf	fsr2l,c
 19178  002CA6  0E00               	movlw	high _pBDTEntryIn
 19179  002CA8  20F4               	addwfc	prodh,w,c
 19180  002CAA  6EDA               	movwf	fsr2h,c
 19181  002CAC  0E00               	movlw	0
 19182  002CAE  6EDE               	movwf	postinc2,c
 19183  002CB0  0E00               	movlw	0
 19184  002CB2  6EDD               	movwf	postdec2,c
 19185                           
 19186                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 19187  002CB4  5009               	movf	i2USBDeviceInit@i,w,c
 19188  002CB6  0D02               	mullw	2
 19189  002CB8  0EC8               	movlw	low _pBDTEntryOut
 19190  002CBA  24F3               	addwf	prodl,w,c
 19191  002CBC  6ED9               	movwf	fsr2l,c
 19192  002CBE  0E02               	movlw	high _pBDTEntryOut
 19193  002CC0  20F4               	addwfc	prodh,w,c
 19194  002CC2  6EDA               	movwf	fsr2h,c
 19195  002CC4  0E00               	movlw	0
 19196  002CC6  6EDE               	movwf	postinc2,c
 19197  002CC8  0E00               	movlw	0
 19198  002CCA  6EDD               	movwf	postdec2,c
 19199                           
 19200                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 19201  002CCC  5009               	movf	i2USBDeviceInit@i,w,c
 19202  002CCE  0D01               	mullw	1
 19203  002CD0  0ED5               	movlw	low _ep_data_in
 19204  002CD2  24F3               	addwf	prodl,w,c
 19205  002CD4  6ED9               	movwf	fsr2l,c
 19206  002CD6  0E02               	movlw	high _ep_data_in
 19207  002CD8  20F4               	addwfc	prodh,w,c
 19208  002CDA  6EDA               	movwf	fsr2h,c
 19209  002CDC  0E00               	movlw	0
 19210  002CDE  6EDF               	movwf	indf2,c
 19211                           
 19212                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 19213  002CE0  5009               	movf	i2USBDeviceInit@i,w,c
 19214  002CE2  0D01               	mullw	1
 19215  002CE4  0ED2               	movlw	low _ep_data_out
 19216  002CE6  24F3               	addwf	prodl,w,c
 19217  002CE8  6ED9               	movwf	fsr2l,c
 19218  002CEA  0E02               	movlw	high _ep_data_out
 19219  002CEC  20F4               	addwfc	prodh,w,c
 19220  002CEE  6EDA               	movwf	fsr2h,c
 19221  002CF0  0E00               	movlw	0
 19222  002CF2  6EDF               	movwf	indf2,c
 19223  002CF4  2A09               	incf	i2USBDeviceInit@i,f,c
 19224  002CF6  D7CE               	goto	i2l9572
 19225  002CF8                     i2u899_40:
 19226                           
 19227                           ;usb_device.c: 351: }
 19228                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 19229  002CF8  0E08               	movlw	8
 19230  002CFA  6E46               	movwf	_pBDTEntryIn,c
 19231  002CFC  0E04               	movlw	4
 19232  002CFE  6E47               	movwf	_pBDTEntryIn+1,c
 19233                           
 19234                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 19235  002D00  0E16               	movlw	22
 19236  002D02  6E70               	movwf	3952,c	;volatile
 19237                           
 19238                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 19239  002D04  0E04               	movlw	4
 19240  002D06  0104               	movlb	4	; () banked
 19241  002D08  6F03               	movwf	3,b	;volatile
 19242  002D0A  0E30               	movlw	48
 19243  002D0C  6F02               	movwf	2,b	;volatile
 19244                           
 19245                           ; BSR set to: 4
 19246                           ;usb_device.c: 359: BDT[0].CNT = 8;
 19247  002D0E  0E08               	movlw	8
 19248  002D10  6F01               	movwf	1,b	;volatile
 19249                           
 19250                           ; BSR set to: 4
 19251                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 19252  002D12  0E04               	movlw	4
 19253  002D14  6F00               	movwf	0,b	;volatile
 19254                           
 19255                           ; BSR set to: 4
 19256                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 19257  002D16  8F00               	bsf	0,7,b	;volatile
 19258                           
 19259                           ; BSR set to: 4
 19260                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 19261  002D18  0E00               	movlw	0
 19262  002D1A  6E5E               	movwf	_USBActiveConfiguration,c	;volatile
 19263                           
 19264                           ; BSR set to: 4
 19265                           ;usb_device.c: 366: USB1msTickCount = 0;
 19266  002D1C  0E00               	movlw	0
 19267  002D1E  0102               	movlb	2	; () banked
 19268  002D20  6FCE               	movwf	_USB1msTickCount& (0+255),b	;volatile
 19269  002D22  0E00               	movlw	0
 19270  002D24  6FCF               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
 19271  002D26  0E00               	movlw	0
 19272  002D28  6FD0               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
 19273  002D2A  0E00               	movlw	0
 19274  002D2C  6FD1               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
 19275                           
 19276                           ; BSR set to: 2
 19277                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 19278  002D2E  0E00               	movlw	0
 19279  002D30  6FE6               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 19280                           
 19281                           ; BSR set to: 2
 19282                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 19283  002D32  0E00               	movlw	0
 19284  002D34  6E58               	movwf	_USBDeviceState,c	;volatile
 19285                           
 19286                           ; BSR set to: 2
 19287  002D36  0012               	return		;funcret
 19288  002D38                     __end_ofi2_USBDeviceInit:
 19289                           	opt stack 0
 19290                           pclatu	equ	0xFFB
 19291                           pclath	equ	0xFFA
 19292                           tblptru	equ	0xFF8
 19293                           tblptrh	equ	0xFF7
 19294                           tblptrl	equ	0xFF6
 19295                           tablat	equ	0xFF5
 19296                           prodh	equ	0xFF4
 19297                           prodl	equ	0xFF3
 19298                           intcon	equ	0xFF2
 19299                           indf0	equ	0xFEF
 19300                           postinc0	equ	0xFEE
 19301                           fsr0h	equ	0xFEA
 19302                           fsr0l	equ	0xFE9
 19303                           wreg	equ	0xFE8
 19304                           indf1	equ	0xFE7
 19305                           postdec1	equ	0xFE5
 19306                           fsr1h	equ	0xFE2
 19307                           fsr1l	equ	0xFE1
 19308                           indf2	equ	0xFDF
 19309                           postinc2	equ	0xFDE
 19310                           postdec2	equ	0xFDD
 19311                           plusw2	equ	0xFDB
 19312                           fsr2h	equ	0xFDA
 19313                           fsr2l	equ	0xFD9
 19314                           status	equ	0xFD8
 19315                           
 19316 ;; *************** function _USBWakeFromSuspend *****************
 19317 ;; Defined at:
 19318 ;;		line 2303 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 19319 ;; Parameters:    Size  Location     Type
 19320 ;;		None
 19321 ;; Auto vars:     Size  Location     Type
 19322 ;;		None
 19323 ;; Return value:  Size  Location     Type
 19324 ;;                  1    wreg      void 
 19325 ;; Registers used:
 19326 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19327 ;; Tracked objects:
 19328 ;;		On entry : 0/0
 19329 ;;		On exit  : 0/0
 19330 ;;		Unchanged: 0/0
 19331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19332 ;;      Params:         0       0       0       0       0       0       0       0       0
 19333 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19334 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19335 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19336 ;;Total ram usage:        0 bytes
 19337 ;; Hardware stack levels used:    1
 19338 ;; Hardware stack levels required when called:    4
 19339 ;; This function calls:
 19340 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 19341 ;; This function is called by:
 19342 ;;		_USBDeviceTasks
 19343 ;; This function uses a non-reentrant model
 19344 ;;
 19345                           
 19346                           	psect	text68
 19347  005444                     __ptext68:
 19348                           	opt stack 0
 19349  005444                     _USBWakeFromSuspend:
 19350                           	opt stack 19
 19351                           
 19352                           ;usb_device.c: 2305: USBBusIsSuspended = 0;
 19353                           
 19354                           ; BSR set to: 2
 19355                           ;incstack = 0
 19356  005444  0E00               	movlw	0
 19357  005446  0101               	movlb	1	; () banked
 19358  005448  6FF9               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 19359                           
 19360                           ; BSR set to: 1
 19361                           ;usb_device.c: 2311: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 19362  00544A  0E00               	movlw	0
 19363  00544C  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 19364  00544E  0E74               	movlw	116
 19365  005450  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 19366  005452  0E00               	movlw	0
 19367  005454  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 19368  005456  0E00               	movlw	0
 19369  005458  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 19370  00545A  0E00               	movlw	0
 19371  00545C  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 19372  00545E  0E00               	movlw	0
 19373  005460  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 19374  005462  ECB4  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 19375                           
 19376                           ;usb_device.c: 2318: UCONbits.SUSPND = 0;
 19377  005466  926D               	bcf	3949,1,c	;volatile
 19378                           
 19379                           ;usb_device.c: 2323: UIEbits.ACTVIE = 0;
 19380  005468  9469               	bcf	3945,2,c	;volatile
 19381                           
 19382                           ;usb_device.c: 2341: while(UIRbits.ACTVIF)
 19383  00546A  D001               	goto	i2l568
 19384  00546C                     
 19385                           ;usb_device.c: 2343: {
 19386                           ;usb_device.c: 2344: (UIR &= 0xFB);
 19387  00546C  9468               	bcf	3944,2,c	;volatile
 19388  00546E                     i2l568:
 19389  00546E  B468               	btfsc	3944,2,c	;volatile
 19390  005470  D7FD               	goto	i2l569
 19391                           
 19392                           ;usb_device.c: 2345: }
 19393                           ;usb_device.c: 2347: USBTicksSinceSuspendEnd = 0;
 19394  005472  0E00               	movlw	0
 19395  005474  0102               	movlb	2	; () banked
 19396  005476  6FE6               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 19397                           
 19398                           ; BSR set to: 2
 19399  005478  0012               	return		;funcret
 19400  00547A                     __end_of_USBWakeFromSuspend:
 19401                           	opt stack 0
 19402                           pclatu	equ	0xFFB
 19403                           pclath	equ	0xFFA
 19404                           tblptru	equ	0xFF8
 19405                           tblptrh	equ	0xFF7
 19406                           tblptrl	equ	0xFF6
 19407                           tablat	equ	0xFF5
 19408                           prodh	equ	0xFF4
 19409                           prodl	equ	0xFF3
 19410                           intcon	equ	0xFF2
 19411                           indf0	equ	0xFEF
 19412                           postinc0	equ	0xFEE
 19413                           fsr0h	equ	0xFEA
 19414                           fsr0l	equ	0xFE9
 19415                           wreg	equ	0xFE8
 19416                           indf1	equ	0xFE7
 19417                           postdec1	equ	0xFE5
 19418                           fsr1h	equ	0xFE2
 19419                           fsr1l	equ	0xFE1
 19420                           indf2	equ	0xFDF
 19421                           postinc2	equ	0xFDE
 19422                           postdec2	equ	0xFDD
 19423                           plusw2	equ	0xFDB
 19424                           fsr2h	equ	0xFDA
 19425                           fsr2l	equ	0xFD9
 19426                           status	equ	0xFD8
 19427                           
 19428 ;; *************** function _USBSuspend *****************
 19429 ;; Defined at:
 19430 ;;		line 2245 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 19431 ;; Parameters:    Size  Location     Type
 19432 ;;		None
 19433 ;; Auto vars:     Size  Location     Type
 19434 ;;		None
 19435 ;; Return value:  Size  Location     Type
 19436 ;;                  1    wreg      void 
 19437 ;; Registers used:
 19438 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19439 ;; Tracked objects:
 19440 ;;		On entry : 0/0
 19441 ;;		On exit  : 0/0
 19442 ;;		Unchanged: 0/0
 19443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19444 ;;      Params:         0       0       0       0       0       0       0       0       0
 19445 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19446 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19447 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19448 ;;Total ram usage:        0 bytes
 19449 ;; Hardware stack levels used:    1
 19450 ;; Hardware stack levels required when called:    4
 19451 ;; This function calls:
 19452 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 19453 ;; This function is called by:
 19454 ;;		_USBDeviceTasks
 19455 ;; This function uses a non-reentrant model
 19456 ;;
 19457                           
 19458                           	psect	text69
 19459  00550E                     __ptext69:
 19460                           	opt stack 0
 19461  00550E                     _USBSuspend:
 19462                           	opt stack 19
 19463                           
 19464                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
 19465                           
 19466                           ; BSR set to: 2
 19467                           ;incstack = 0
 19468  00550E  8469               	bsf	3945,2,c	;volatile
 19469                           
 19470                           ;usb_device.c: 2271: (UIR &= 0xEF);
 19471  005510  9868               	bcf	3944,4,c	;volatile
 19472                           
 19473                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
 19474  005512  826D               	bsf	3949,1,c	;volatile
 19475                           
 19476                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
 19477  005514  0E01               	movlw	1
 19478  005516  0101               	movlb	1	; () banked
 19479  005518  6FF9               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 19480                           
 19481                           ; BSR set to: 1
 19482                           ;usb_device.c: 2278: USBTicksSinceSuspendEnd = 0;
 19483  00551A  0E00               	movlw	0
 19484  00551C  0102               	movlb	2	; () banked
 19485  00551E  6FE6               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 19486                           
 19487                           ; BSR set to: 2
 19488                           ;usb_device.c: 2285: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 19489  005520  0E00               	movlw	0
 19490  005522  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 19491  005524  0E75               	movlw	117
 19492  005526  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 19493  005528  0E00               	movlw	0
 19494  00552A  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 19495  00552C  0E00               	movlw	0
 19496  00552E  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 19497  005530  0E00               	movlw	0
 19498  005532  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 19499  005534  0E00               	movlw	0
 19500  005536  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 19501  005538  ECB4  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 19502  00553C  0012               	return		;funcret
 19503  00553E                     __end_of_USBSuspend:
 19504                           	opt stack 0
 19505                           pclatu	equ	0xFFB
 19506                           pclath	equ	0xFFA
 19507                           tblptru	equ	0xFF8
 19508                           tblptrh	equ	0xFF7
 19509                           tblptrl	equ	0xFF6
 19510                           tablat	equ	0xFF5
 19511                           prodh	equ	0xFF4
 19512                           prodl	equ	0xFF3
 19513                           intcon	equ	0xFF2
 19514                           indf0	equ	0xFEF
 19515                           postinc0	equ	0xFEE
 19516                           fsr0h	equ	0xFEA
 19517                           fsr0l	equ	0xFE9
 19518                           wreg	equ	0xFE8
 19519                           indf1	equ	0xFE7
 19520                           postdec1	equ	0xFE5
 19521                           fsr1h	equ	0xFE2
 19522                           fsr1l	equ	0xFE1
 19523                           indf2	equ	0xFDF
 19524                           postinc2	equ	0xFDE
 19525                           postdec2	equ	0xFDD
 19526                           plusw2	equ	0xFDB
 19527                           fsr2h	equ	0xFDA
 19528                           fsr2l	equ	0xFD9
 19529                           status	equ	0xFD8
 19530                           
 19531 ;; *************** function _USBStallHandler *****************
 19532 ;; Defined at:
 19533 ;;		line 2202 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 19534 ;; Parameters:    Size  Location     Type
 19535 ;;		None
 19536 ;; Auto vars:     Size  Location     Type
 19537 ;;		None
 19538 ;; Return value:  Size  Location     Type
 19539 ;;                  1    wreg      void 
 19540 ;; Registers used:
 19541 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19542 ;; Tracked objects:
 19543 ;;		On entry : 0/0
 19544 ;;		On exit  : 0/0
 19545 ;;		Unchanged: 0/0
 19546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19547 ;;      Params:         0       0       0       0       0       0       0       0       0
 19548 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19549 ;;      Temps:          1       0       0       0       0       0       0       0       0
 19550 ;;      Totals:         1       0       0       0       0       0       0       0       0
 19551 ;;Total ram usage:        1 bytes
 19552 ;; Hardware stack levels used:    1
 19553 ;; This function calls:
 19554 ;;		Nothing
 19555 ;; This function is called by:
 19556 ;;		_USBDeviceTasks
 19557 ;; This function uses a non-reentrant model
 19558 ;;
 19559                           
 19560                           	psect	text70
 19561  00529E                     __ptext70:
 19562                           	opt stack 0
 19563  00529E                     _USBStallHandler:
 19564                           	opt stack 23
 19565                           
 19566                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
 19567                           
 19568                           ;incstack = 0
 19569  00529E  A070               	btfss	3952,0,c	;volatile
 19570  0052A0  D01D               	goto	i2l560
 19571                           
 19572                           ;usb_device.c: 2215: {
 19573                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 19574  0052A2  C050  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19575  0052A6  C051  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19576  0052AA  0E80               	movlw	128
 19577  0052AC  18DE               	xorwf	postinc2,w,c
 19578  0052AE  A4D8               	btfss	status,2,c
 19579  0052B0  D014               	goto	i2l561
 19580  0052B2  C046  FFD9         	movff	_pBDTEntryIn,fsr2l
 19581  0052B6  C047  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19582  0052BA  0E84               	movlw	132
 19583  0052BC  18DE               	xorwf	postinc2,w,c
 19584  0052BE  A4D8               	btfss	status,2,c
 19585  0052C0  D00C               	goto	i2l561
 19586                           
 19587                           ;usb_device.c: 2218: {
 19588                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 19589  0052C2  C050  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19590  0052C6  C051  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19591  0052CA  0E0C               	movlw	12
 19592  0052CC  6EDF               	movwf	indf2,c
 19593                           
 19594                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 19595  0052CE  C050  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19596  0052D2  C051  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19597  0052D6  0E00               	movlw	0
 19598  0052D8  8EDB               	bsf	plusw2,7,c
 19599  0052DA                     i2l561:
 19600                           
 19601                           ;usb_device.c: 2222: }
 19602                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
 19603  0052DA  9070               	bcf	3952,0,c	;volatile
 19604  0052DC                     i2l560:
 19605                           
 19606                           ;usb_device.c: 2224: }
 19607                           ;usb_device.c: 2226: (UIR &= 0xDF);
 19608  0052DC  9A68               	bcf	3944,5,c	;volatile
 19609  0052DE  0012               	return		;funcret
 19610  0052E0                     __end_of_USBStallHandler:
 19611                           	opt stack 0
 19612                           pclatu	equ	0xFFB
 19613                           pclath	equ	0xFFA
 19614                           tblptru	equ	0xFF8
 19615                           tblptrh	equ	0xFF7
 19616                           tblptrl	equ	0xFF6
 19617                           tablat	equ	0xFF5
 19618                           prodh	equ	0xFF4
 19619                           prodl	equ	0xFF3
 19620                           intcon	equ	0xFF2
 19621                           indf0	equ	0xFEF
 19622                           postinc0	equ	0xFEE
 19623                           fsr0h	equ	0xFEA
 19624                           fsr0l	equ	0xFE9
 19625                           wreg	equ	0xFE8
 19626                           indf1	equ	0xFE7
 19627                           postdec1	equ	0xFE5
 19628                           fsr1h	equ	0xFE2
 19629                           fsr1l	equ	0xFE1
 19630                           indf2	equ	0xFDF
 19631                           postinc2	equ	0xFDE
 19632                           postdec2	equ	0xFDD
 19633                           plusw2	equ	0xFDB
 19634                           fsr2h	equ	0xFDA
 19635                           fsr2l	equ	0xFD9
 19636                           status	equ	0xFD8
 19637                           
 19638 ;; *************** function _USBIncrement1msInternalTimers *****************
 19639 ;; Defined at:
 19640 ;;		line 3025 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 19641 ;; Parameters:    Size  Location     Type
 19642 ;;		None
 19643 ;; Auto vars:     Size  Location     Type
 19644 ;;		None
 19645 ;; Return value:  Size  Location     Type
 19646 ;;                  1    wreg      void 
 19647 ;; Registers used:
 19648 ;;		wreg, status,2, status,0
 19649 ;; Tracked objects:
 19650 ;;		On entry : 0/0
 19651 ;;		On exit  : 0/0
 19652 ;;		Unchanged: 0/0
 19653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19654 ;;      Params:         0       0       0       0       0       0       0       0       0
 19655 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19656 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19657 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19658 ;;Total ram usage:        0 bytes
 19659 ;; Hardware stack levels used:    1
 19660 ;; This function calls:
 19661 ;;		Nothing
 19662 ;; This function is called by:
 19663 ;;		_USBDeviceTasks
 19664 ;; This function uses a non-reentrant model
 19665 ;;
 19666                           
 19667                           	psect	text71
 19668  005658                     __ptext71:
 19669                           	opt stack 0
 19670  005658                     _USBIncrement1msInternalTimers:
 19671                           	opt stack 23
 19672                           
 19673                           ;usb_device.c: 3033: USB1msTickCount++;
 19674                           
 19675                           ;incstack = 0
 19676  005658  0E01               	movlw	1
 19677  00565A  0102               	movlb	2	; () banked
 19678  00565C  27CE               	addwf	_USB1msTickCount& (0+255),f,b	;volatile
 19679  00565E  0E00               	movlw	0
 19680  005660  23CF               	addwfc	(_USB1msTickCount+1)& (0+255),f,b	;volatile
 19681  005662  23D0               	addwfc	(_USB1msTickCount+2)& (0+255),f,b	;volatile
 19682  005664  23D1               	addwfc	(_USB1msTickCount+3)& (0+255),f,b	;volatile
 19683                           
 19684                           ; BSR set to: 2
 19685                           ;usb_device.c: 3034: if(USBBusIsSuspended == 0)
 19686  005666  0101               	movlb	1	; () banked
 19687  005668  51F9               	movf	_USBBusIsSuspended& (0+255),w,b	;volatile
 19688  00566A  A4D8               	btfss	status,2,c
 19689  00566C  0012               	return	
 19690                           
 19691                           ; BSR set to: 1
 19692                           ;usb_device.c: 3035: {
 19693                           ;usb_device.c: 3036: USBTicksSinceSuspendEnd++;
 19694  00566E  0102               	movlb	2	; () banked
 19695  005670  2BE6               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b	;volatile
 19696                           
 19697                           ; BSR set to: 2
 19698                           ;usb_device.c: 3038: if(USBTicksSinceSuspendEnd == 0)
 19699  005672  51E6               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b	;volatile
 19700  005674  A4D8               	btfss	status,2,c
 19701  005676  0012               	return	
 19702                           
 19703                           ; BSR set to: 2
 19704                           ;usb_device.c: 3039: {
 19705                           ;usb_device.c: 3040: USBTicksSinceSuspendEnd = 255;
 19706  005678  69E6               	setf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 19707                           
 19708                           ; BSR set to: 2
 19709  00567A  0012               	return	
 19710  00567C                     __end_of_USBIncrement1msInternalTimers:
 19711                           	opt stack 0
 19712                           pclatu	equ	0xFFB
 19713                           pclath	equ	0xFFA
 19714                           tblptru	equ	0xFF8
 19715                           tblptrh	equ	0xFF7
 19716                           tblptrl	equ	0xFF6
 19717                           tablat	equ	0xFF5
 19718                           prodh	equ	0xFF4
 19719                           prodl	equ	0xFF3
 19720                           intcon	equ	0xFF2
 19721                           indf0	equ	0xFEF
 19722                           postinc0	equ	0xFEE
 19723                           fsr0h	equ	0xFEA
 19724                           fsr0l	equ	0xFE9
 19725                           wreg	equ	0xFE8
 19726                           indf1	equ	0xFE7
 19727                           postdec1	equ	0xFE5
 19728                           fsr1h	equ	0xFE2
 19729                           fsr1l	equ	0xFE1
 19730                           indf2	equ	0xFDF
 19731                           postinc2	equ	0xFDE
 19732                           postdec2	equ	0xFDD
 19733                           plusw2	equ	0xFDB
 19734                           fsr2h	equ	0xFDA
 19735                           fsr2l	equ	0xFD9
 19736                           status	equ	0xFD8
 19737                           
 19738 ;; *************** function _USBCtrlEPService *****************
 19739 ;; Defined at:
 19740 ;;		line 2372 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 19741 ;; Parameters:    Size  Location     Type
 19742 ;;		None
 19743 ;; Auto vars:     Size  Location     Type
 19744 ;;		None
 19745 ;; Return value:  Size  Location     Type
 19746 ;;                  1    wreg      void 
 19747 ;; Registers used:
 19748 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19749 ;; Tracked objects:
 19750 ;;		On entry : 0/0
 19751 ;;		On exit  : 0/0
 19752 ;;		Unchanged: 0/0
 19753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19754 ;;      Params:         0       0       0       0       0       0       0       0       0
 19755 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19756 ;;      Temps:          1       0       0       0       0       0       0       0       0
 19757 ;;      Totals:         1       0       0       0       0       0       0       0       0
 19758 ;;Total ram usage:        1 bytes
 19759 ;; Hardware stack levels used:    1
 19760 ;; Hardware stack levels required when called:    7
 19761 ;; This function calls:
 19762 ;;		_USBCtrlTrfInHandler
 19763 ;;		_USBCtrlTrfOutHandler
 19764 ;;		_USBCtrlTrfSetupHandler
 19765 ;;		_memcpy
 19766 ;; This function is called by:
 19767 ;;		_USBDeviceTasks
 19768 ;; This function uses a non-reentrant model
 19769 ;;
 19770                           
 19771                           	psect	text72
 19772  0046E2                     __ptext72:
 19773                           	opt stack 0
 19774  0046E2                     _USBCtrlEPService:
 19775                           	opt stack 16
 19776                           
 19777                           ;usb_device.c: 2378: USBStatusStageTimeoutCounter = (uint8_t)45;
 19778                           
 19779                           ;incstack = 0
 19780  0046E2  0E2D               	movlw	45
 19781  0046E4  6E54               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 19782                           
 19783                           ;usb_device.c: 2382: if((USTATcopy.Val & ~0x02) == 0x00)
 19784  0046E6  C05D  F01B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 19785  0046EA  0EFD               	movlw	253
 19786  0046EC  161B               	andwf	??_USBCtrlEPService,f,c
 19787  0046EE  A4D8               	btfss	status,2,c
 19788  0046F0  D03B               	goto	i2l574
 19789                           
 19790                           ;usb_device.c: 2383: {
 19791                           ;usb_device.c: 2386: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 19792  0046F2  C05D  F01B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 19793  0046F6  90D8               	bcf	status,0,c
 19794  0046F8  321B               	rrcf	??_USBCtrlEPService,f,c
 19795  0046FA  0E3F               	movlw	63
 19796  0046FC  161B               	andwf	??_USBCtrlEPService,f,c
 19797  0046FE  501B               	movf	??_USBCtrlEPService,w,c
 19798  004700  0D04               	mullw	4
 19799  004702  0E00               	movlw	0
 19800  004704  24F3               	addwf	prodl,w,c
 19801  004706  6E50               	movwf	_pBDTEntryEP0OutCurrent,c
 19802  004708  0E04               	movlw	4
 19803  00470A  20F4               	addwfc	prodh,w,c
 19804  00470C  6E51               	movwf	_pBDTEntryEP0OutCurrent+1,c
 19805                           
 19806                           ;usb_device.c: 2394: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 19807  00470E  C050  F04E         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 19808  004712  C051  F04F         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 19809                           
 19810                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 19811  004716  0E04               	movlw	4
 19812  004718  184E               	xorwf	_pBDTEntryEP0OutNext,w,c
 19813  00471A  6E4E               	movwf	_pBDTEntryEP0OutNext,c
 19814  00471C  504F               	movf	_pBDTEntryEP0OutNext+1,w,c
 19815  00471E  6E4F               	movwf	_pBDTEntryEP0OutNext+1,c
 19816                           
 19817                           ;usb_device.c: 2399: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 19818  004720  C050  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19819  004724  C051  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19820  004728  30DF               	rrcf	indf2,w,c
 19821  00472A  32E8               	rrcf	wreg,f,c
 19822  00472C  0B0F               	andlw	15
 19823  00472E  0A0D               	xorlw	13
 19824  004730  A4D8               	btfss	status,2,c
 19825  004732  D017               	goto	i2l575
 19826                           
 19827                           ;usb_device.c: 2400: {
 19828                           ;usb_device.c: 2405: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void *)(pBDTEntryEP0OutCurr
      +                          ent->ADR)), 8);
 19829  004734  0E30               	movlw	48
 19830  004736  6E01               	movwf	memcpy@d1,c
 19831  004738  0E04               	movlw	4
 19832  00473A  6E02               	movwf	memcpy@d1+1,c
 19833  00473C  EE20 F002          	lfsr	2,2
 19834  004740  5050               	movf	_pBDTEntryEP0OutCurrent,w,c
 19835  004742  26D9               	addwf	fsr2l,f,c
 19836  004744  5051               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 19837  004746  22DA               	addwfc	fsr2h,f,c
 19838  004748  CFDE F003          	movff	postinc2,memcpy@s1
 19839  00474C  CFDD F004          	movff	postdec2,memcpy@s1+1
 19840  004750  0E00               	movlw	0
 19841  004752  6E06               	movwf	memcpy@n+1,c
 19842  004754  0E08               	movlw	8
 19843  004756  6E05               	movwf	memcpy@n,c
 19844  004758  ECEB  F028         	call	_memcpy	;wreg free
 19845                           
 19846                           ;usb_device.c: 2408: USBCtrlTrfSetupHandler();
 19847  00475C  EC4F  F024         	call	_USBCtrlTrfSetupHandler	;wreg free
 19848                           
 19849                           ;usb_device.c: 2409: }
 19850  004760  0012               	return	
 19851  004762                     i2l575:
 19852                           
 19853                           ;usb_device.c: 2410: else
 19854                           ;usb_device.c: 2411: {
 19855                           ;usb_device.c: 2413: USBCtrlTrfOutHandler();
 19856  004762  EC85  F027         	call	_USBCtrlTrfOutHandler	;wreg free
 19857                           
 19858                           ;usb_device.c: 2414: }
 19859                           ;usb_device.c: 2415: }
 19860  004766  0012               	return	
 19861  004768                     i2l574:
 19862                           
 19863                           ;usb_device.c: 2416: else if((USTATcopy.Val & ~0x02) == 0x04)
 19864  004768  505D               	movf	_USTATcopy,w,c	;volatile
 19865  00476A  0BFD               	andlw	253
 19866  00476C  0A04               	xorlw	4
 19867  00476E  A4D8               	btfss	status,2,c
 19868  004770  0012               	return	
 19869                           
 19870                           ;usb_device.c: 2417: {
 19871                           ;usb_device.c: 2420: USBCtrlTrfInHandler();
 19872  004772  EC27  F020         	call	_USBCtrlTrfInHandler	;wreg free
 19873  004776  0012               	return	
 19874  004778                     __end_of_USBCtrlEPService:
 19875                           	opt stack 0
 19876                           pclatu	equ	0xFFB
 19877                           pclath	equ	0xFFA
 19878                           tblptru	equ	0xFF8
 19879                           tblptrh	equ	0xFF7
 19880                           tblptrl	equ	0xFF6
 19881                           tablat	equ	0xFF5
 19882                           prodh	equ	0xFF4
 19883                           prodl	equ	0xFF3
 19884                           intcon	equ	0xFF2
 19885                           indf0	equ	0xFEF
 19886                           postinc0	equ	0xFEE
 19887                           fsr0h	equ	0xFEA
 19888                           fsr0l	equ	0xFE9
 19889                           wreg	equ	0xFE8
 19890                           indf1	equ	0xFE7
 19891                           postdec1	equ	0xFE5
 19892                           fsr1h	equ	0xFE2
 19893                           fsr1l	equ	0xFE1
 19894                           indf2	equ	0xFDF
 19895                           postinc2	equ	0xFDE
 19896                           postdec2	equ	0xFDD
 19897                           plusw2	equ	0xFDB
 19898                           fsr2h	equ	0xFDA
 19899                           fsr2l	equ	0xFD9
 19900                           status	equ	0xFD8
 19901                           
 19902 ;; *************** function _memcpy *****************
 19903 ;; Defined at:
 19904 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\memcpy.c"
 19905 ;; Parameters:    Size  Location     Type
 19906 ;;  d1              2    0[COMRAM] PTR void 
 19907 ;;		 -> receivePacket(100), response(100), SetupPkt(8), 
 19908 ;;  s1              2    2[COMRAM] PTR const void 
 19909 ;;		 -> recebeByte@frameData(100), CtrlTrfData(8), RAM(2047), SetupPkt(8), 
 19910 ;;  n               2    4[COMRAM] unsigned int 
 19911 ;; Auto vars:     Size  Location     Type
 19912 ;;  s               2    8[COMRAM] PTR const unsigned char 
 19913 ;;		 -> recebeByte@frameData(100), CtrlTrfData(8), RAM(2047), SetupPkt(8), 
 19914 ;;  d               2    6[COMRAM] PTR unsigned char 
 19915 ;;		 -> receivePacket(100), response(100), SetupPkt(8), 
 19916 ;;  tmp             1   10[COMRAM] unsigned char 
 19917 ;; Return value:  Size  Location     Type
 19918 ;;                  2    0[COMRAM] PTR void 
 19919 ;; Registers used:
 19920 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19921 ;; Tracked objects:
 19922 ;;		On entry : 0/0
 19923 ;;		On exit  : 0/0
 19924 ;;		Unchanged: 0/0
 19925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19926 ;;      Params:         6       0       0       0       0       0       0       0       0
 19927 ;;      Locals:         5       0       0       0       0       0       0       0       0
 19928 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19929 ;;      Totals:        11       0       0       0       0       0       0       0       0
 19930 ;;Total ram usage:       11 bytes
 19931 ;; Hardware stack levels used:    1
 19932 ;; This function calls:
 19933 ;;		Nothing
 19934 ;; This function is called by:
 19935 ;;		_USBCtrlEPService
 19936 ;;		_recebeByte
 19937 ;; This function uses a non-reentrant model
 19938 ;;
 19939                           
 19940                           	psect	text73
 19941  0051D6                     __ptext73:
 19942                           	opt stack 0
 19943  0051D6                     _memcpy:
 19944                           	opt stack 22
 19945                           
 19946                           ;incstack = 0
 19947  0051D6  C003  F009         	movff	memcpy@s1,memcpy@s
 19948  0051DA  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
 19949  0051DE  C001  F007         	movff	memcpy@d1,memcpy@d
 19950  0051E2  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
 19951  0051E6  D010               	goto	i2l3232
 19952  0051E8                     i2l8292:
 19953  0051E8  C009  FFD9         	movff	memcpy@s,fsr2l
 19954  0051EC  C00A  FFDA         	movff	memcpy@s+1,fsr2h
 19955  0051F0  50DF               	movf	indf2,w,c
 19956  0051F2  6E0B               	movwf	memcpy@tmp,c
 19957  0051F4  4A09               	infsnz	memcpy@s,f,c
 19958  0051F6  2A0A               	incf	memcpy@s+1,f,c
 19959  0051F8  C007  FFD9         	movff	memcpy@d,fsr2l
 19960  0051FC  C008  FFDA         	movff	memcpy@d+1,fsr2h
 19961  005200  C00B  FFDF         	movff	memcpy@tmp,indf2
 19962  005204  4A07               	infsnz	memcpy@d,f,c
 19963  005206  2A08               	incf	memcpy@d+1,f,c
 19964  005208                     i2l3232:
 19965  005208  0605               	decf	memcpy@n,f,c
 19966  00520A  A0D8               	btfss	status,0,c
 19967  00520C  0606               	decf	memcpy@n+1,f,c
 19968  00520E  2805               	incf	memcpy@n,w,c
 19969  005210  E1EB               	bnz	i2l8292
 19970  005212  2806               	incf	memcpy@n+1,w,c
 19971  005214  B4D8               	btfsc	status,2,c
 19972  005216  0012               	return	
 19973  005218  D7E7               	goto	i2l3233
 19974  00521A                     __end_of_memcpy:
 19975                           	opt stack 0
 19976                           pclatu	equ	0xFFB
 19977                           pclath	equ	0xFFA
 19978                           tblptru	equ	0xFF8
 19979                           tblptrh	equ	0xFF7
 19980                           tblptrl	equ	0xFF6
 19981                           tablat	equ	0xFF5
 19982                           prodh	equ	0xFF4
 19983                           prodl	equ	0xFF3
 19984                           intcon	equ	0xFF2
 19985                           indf0	equ	0xFEF
 19986                           postinc0	equ	0xFEE
 19987                           fsr0h	equ	0xFEA
 19988                           fsr0l	equ	0xFE9
 19989                           wreg	equ	0xFE8
 19990                           indf1	equ	0xFE7
 19991                           postdec1	equ	0xFE5
 19992                           fsr1h	equ	0xFE2
 19993                           fsr1l	equ	0xFE1
 19994                           indf2	equ	0xFDF
 19995                           postinc2	equ	0xFDE
 19996                           postdec2	equ	0xFDD
 19997                           plusw2	equ	0xFDB
 19998                           fsr2h	equ	0xFDA
 19999                           fsr2l	equ	0xFD9
 20000                           status	equ	0xFD8
 20001                           
 20002 ;; *************** function _USBCtrlTrfSetupHandler *****************
 20003 ;; Defined at:
 20004 ;;		line 2465 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 20005 ;; Parameters:    Size  Location     Type
 20006 ;;		None
 20007 ;; Auto vars:     Size  Location     Type
 20008 ;;		None
 20009 ;; Return value:  Size  Location     Type
 20010 ;;                  1    wreg      void 
 20011 ;; Registers used:
 20012 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20013 ;; Tracked objects:
 20014 ;;		On entry : 0/0
 20015 ;;		On exit  : 0/0
 20016 ;;		Unchanged: 0/0
 20017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20018 ;;      Params:         0       0       0       0       0       0       0       0       0
 20019 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20020 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20021 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20022 ;;Total ram usage:        0 bytes
 20023 ;; Hardware stack levels used:    1
 20024 ;; Hardware stack levels required when called:    6
 20025 ;; This function calls:
 20026 ;;		_USBCheckStdRequest
 20027 ;;		_USBCtrlEPServiceComplete
 20028 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 20029 ;; This function is called by:
 20030 ;;		_USBCtrlEPService
 20031 ;; This function uses a non-reentrant model
 20032 ;;
 20033                           
 20034                           	psect	text74
 20035  00489E                     __ptext74:
 20036                           	opt stack 0
 20037  00489E                     _USBCtrlTrfSetupHandler:
 20038                           	opt stack 16
 20039                           
 20040                           ;usb_device.c: 2470: shortPacketStatus = 0;
 20041                           
 20042                           ;incstack = 0
 20043  00489E  0E00               	movlw	0
 20044  0048A0  6E57               	movwf	_shortPacketStatus,c	;volatile
 20045                           
 20046                           ;usb_device.c: 2471: USBDeferStatusStagePacket = 0;
 20047  0048A2  0E00               	movlw	0
 20048  0048A4  6E53               	movwf	_USBDeferStatusStagePacket,c	;volatile
 20049                           
 20050                           ;usb_device.c: 2472: USBDeferINDataStagePackets = 0;
 20051  0048A6  0E00               	movlw	0
 20052  0048A8  0102               	movlb	2	; () banked
 20053  0048AA  6FE8               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 20054                           
 20055                           ;usb_device.c: 2473: USBDeferOUTDataStagePackets = 0;
 20056  0048AC  0E00               	movlw	0
 20057  0048AE  6FE7               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 20058                           
 20059                           ;usb_device.c: 2474: BothEP0OutUOWNsSet = 0;
 20060  0048B0  0E00               	movlw	0
 20061  0048B2  0101               	movlb	1	; () banked
 20062  0048B4  6FF8               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 20063                           
 20064                           ;usb_device.c: 2475: controlTransferState = 0;
 20065  0048B6  0E00               	movlw	0
 20066  0048B8  6E56               	movwf	_controlTransferState,c	;volatile
 20067                           
 20068                           ; BSR set to: 1
 20069                           ;usb_device.c: 2484: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 20070  0048BA  C046  FFD9         	movff	_pBDTEntryIn,fsr2l
 20071  0048BE  C047  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20072  0048C2  0E7F               	movlw	127
 20073  0048C4  16DF               	andwf	indf2,f,c
 20074                           
 20075                           ; BSR set to: 1
 20076                           ;usb_device.c: 2486: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 20077  0048C6  0E04               	movlw	4
 20078  0048C8  1846               	xorwf	_pBDTEntryIn,w,c
 20079  0048CA  6E46               	movwf	_pBDTEntryIn,c
 20080  0048CC  5047               	movf	_pBDTEntryIn+1,w,c
 20081  0048CE  6E47               	movwf	_pBDTEntryIn+1,c
 20082                           
 20083                           ; BSR set to: 1
 20084                           ;usb_device.c: 2487: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 20085  0048D0  C046  FFD9         	movff	_pBDTEntryIn,fsr2l
 20086  0048D4  C047  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20087  0048D8  0E7F               	movlw	127
 20088  0048DA  16DF               	andwf	indf2,f,c
 20089                           
 20090                           ; BSR set to: 1
 20091                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 20092  0048DC  0E04               	movlw	4
 20093  0048DE  1846               	xorwf	_pBDTEntryIn,w,c
 20094  0048E0  6E46               	movwf	_pBDTEntryIn,c
 20095  0048E2  5047               	movf	_pBDTEntryIn+1,w,c
 20096  0048E4  6E47               	movwf	_pBDTEntryIn+1,c
 20097                           
 20098                           ; BSR set to: 1
 20099                           ;usb_device.c: 2489: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 20100  0048E6  C04E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20101  0048EA  C04F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20102  0048EE  0E7F               	movlw	127
 20103  0048F0  16DF               	andwf	indf2,f,c
 20104                           
 20105                           ; BSR set to: 1
 20106                           ;usb_device.c: 2491: inPipes[0].info.Val = 0;
 20107  0048F2  0E00               	movlw	0
 20108  0048F4  6E43               	movwf	_inPipes+3,c	;volatile
 20109                           
 20110                           ; BSR set to: 1
 20111                           ;usb_device.c: 2492: inPipes[0].wCount.Val = 0;
 20112  0048F6  0E00               	movlw	0
 20113  0048F8  6E45               	movwf	_inPipes+5,c	;volatile
 20114  0048FA  0E00               	movlw	0
 20115  0048FC  6E44               	movwf	_inPipes+4,c	;volatile
 20116                           
 20117                           ; BSR set to: 1
 20118                           ;usb_device.c: 2493: outPipes[0].info.Val = 0;
 20119  0048FE  0E00               	movlw	0
 20120  004900  6E3B               	movwf	_outPipes+3,c	;volatile
 20121                           
 20122                           ; BSR set to: 1
 20123                           ;usb_device.c: 2494: outPipes[0].wCount.Val = 0;
 20124  004902  0E00               	movlw	0
 20125  004904  6E3D               	movwf	_outPipes+5,c	;volatile
 20126  004906  0E00               	movlw	0
 20127  004908  6E3C               	movwf	_outPipes+4,c	;volatile
 20128                           
 20129                           ; BSR set to: 1
 20130                           ;usb_device.c: 2500: USBCheckStdRequest();
 20131  00490A  ECF1  F01E         	call	_USBCheckStdRequest	;wreg free
 20132                           
 20133                           ;usb_device.c: 2501: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 20134  00490E  0E00               	movlw	0
 20135  004910  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 20136  004912  0E03               	movlw	3
 20137  004914  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 20138  004916  0E00               	movlw	0
 20139  004918  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 20140  00491A  0E00               	movlw	0
 20141  00491C  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 20142  00491E  0E00               	movlw	0
 20143  004920  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 20144  004922  0E00               	movlw	0
 20145  004924  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 20146  004926  ECB4  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 20147                           
 20148                           ;usb_device.c: 2514: USBCtrlEPServiceComplete();
 20149  00492A  EC28  F01C         	call	_USBCtrlEPServiceComplete	;wreg free
 20150  00492E  0012               	return		;funcret
 20151  004930                     __end_of_USBCtrlTrfSetupHandler:
 20152                           	opt stack 0
 20153                           pclatu	equ	0xFFB
 20154                           pclath	equ	0xFFA
 20155                           tblptru	equ	0xFF8
 20156                           tblptrh	equ	0xFF7
 20157                           tblptrl	equ	0xFF6
 20158                           tablat	equ	0xFF5
 20159                           prodh	equ	0xFF4
 20160                           prodl	equ	0xFF3
 20161                           intcon	equ	0xFF2
 20162                           indf0	equ	0xFEF
 20163                           postinc0	equ	0xFEE
 20164                           fsr0h	equ	0xFEA
 20165                           fsr0l	equ	0xFE9
 20166                           wreg	equ	0xFE8
 20167                           indf1	equ	0xFE7
 20168                           postdec1	equ	0xFE5
 20169                           fsr1h	equ	0xFE2
 20170                           fsr1l	equ	0xFE1
 20171                           indf2	equ	0xFDF
 20172                           postinc2	equ	0xFDE
 20173                           postdec2	equ	0xFDD
 20174                           plusw2	equ	0xFDB
 20175                           fsr2h	equ	0xFDA
 20176                           fsr2l	equ	0xFD9
 20177                           status	equ	0xFD8
 20178                           
 20179 ;; *************** function _USBCtrlEPServiceComplete *****************
 20180 ;; Defined at:
 20181 ;;		line 1616 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 20182 ;; Parameters:    Size  Location     Type
 20183 ;;		None
 20184 ;; Auto vars:     Size  Location     Type
 20185 ;;		None
 20186 ;; Return value:  Size  Location     Type
 20187 ;;                  1    wreg      void 
 20188 ;; Registers used:
 20189 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20190 ;; Tracked objects:
 20191 ;;		On entry : 0/0
 20192 ;;		On exit  : 0/0
 20193 ;;		Unchanged: 0/0
 20194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20195 ;;      Params:         0       0       0       0       0       0       0       0       0
 20196 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20197 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20198 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20199 ;;Total ram usage:        0 bytes
 20200 ;; Hardware stack levels used:    1
 20201 ;; Hardware stack levels required when called:    2
 20202 ;; This function calls:
 20203 ;;		_USBCtrlEPAllowDataStage
 20204 ;;		_USBCtrlEPAllowStatusStage
 20205 ;; This function is called by:
 20206 ;;		_USBCtrlTrfSetupHandler
 20207 ;; This function uses a non-reentrant model
 20208 ;;
 20209                           
 20210                           	psect	text75
 20211  003850                     __ptext75:
 20212                           	opt stack 0
 20213  003850                     _USBCtrlEPServiceComplete:
 20214                           	opt stack 19
 20215                           
 20216                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
 20217                           
 20218                           ;incstack = 0
 20219  003850  986D               	bcf	3949,4,c	;volatile
 20220                           
 20221                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
 20222  003852  BE43               	btfsc	_inPipes+3,7,c	;volatile
 20223  003854  D03B               	goto	i2l484
 20224                           
 20225                           ;usb_device.c: 1629: {
 20226                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
 20227  003856  AE3B               	btfss	_outPipes+3,7,c	;volatile
 20228  003858  D00E               	goto	i2l485
 20229                           
 20230                           ;usb_device.c: 1631: {
 20231                           ;usb_device.c: 1632: controlTransferState = 2;
 20232  00385A  0E02               	movlw	2
 20233  00385C  6E56               	movwf	_controlTransferState,c	;volatile
 20234                           
 20235                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
 20236  00385E  0102               	movlb	2	; () banked
 20237  003860  51E7               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 20238  003862  B4D8               	btfsc	status,2,c
 20239                           
 20240                           ; BSR set to: 2
 20241                           ;usb_device.c: 1644: {
 20242                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
 20243  003864  EC25  F023         	call	_USBCtrlEPAllowDataStage	;wreg free
 20244                           
 20245                           ;usb_device.c: 1646: }
 20246                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
 20247  003868  0E00               	movlw	0
 20248  00386A  0102               	movlb	2	; () banked
 20249  00386C  6FE9               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 20250                           
 20251                           ; BSR set to: 2
 20252                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
 20253  00386E  0E00               	movlw	0
 20254  003870  0101               	movlb	1	; () banked
 20255  003872  6FF7               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 20256                           
 20257                           ;usb_device.c: 1652: }
 20258  003874  0012               	return	
 20259  003876                     i2l485:
 20260                           
 20261                           ;usb_device.c: 1653: else
 20262                           ;usb_device.c: 1654: {
 20263                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
 20264                           
 20265                           ; BSR set to: 1
 20266  003876  EE20 F001          	lfsr	2,1
 20267  00387A  504E               	movf	_pBDTEntryEP0OutNext,w,c
 20268  00387C  26D9               	addwf	fsr2l,f,c
 20269  00387E  504F               	movf	_pBDTEntryEP0OutNext+1,w,c
 20270  003880  22DA               	addwfc	fsr2h,f,c
 20271  003882  0E08               	movlw	8
 20272  003884  6EDF               	movwf	indf2,c
 20273                           
 20274                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 20275  003886  EE20 F002          	lfsr	2,2
 20276  00388A  504E               	movf	_pBDTEntryEP0OutNext,w,c
 20277  00388C  26D9               	addwf	fsr2l,f,c
 20278  00388E  504F               	movf	_pBDTEntryEP0OutNext+1,w,c
 20279  003890  22DA               	addwfc	fsr2h,f,c
 20280  003892  0E30               	movlw	48
 20281  003894  6EDE               	movwf	postinc2,c
 20282  003896  0E04               	movlw	4
 20283  003898  6EDD               	movwf	postdec2,c
 20284                           
 20285                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 20286  00389A  C04E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20287  00389E  C04F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20288  0038A2  0E0C               	movlw	12
 20289  0038A4  6EDF               	movwf	indf2,c
 20290                           
 20291                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 20292  0038A6  C04E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20293  0038AA  C04F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20294  0038AE  0E00               	movlw	0
 20295  0038B0  8EDB               	bsf	plusw2,7,c
 20296                           
 20297                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
 20298  0038B2  C046  FFD9         	movff	_pBDTEntryIn,fsr2l
 20299  0038B6  C047  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20300  0038BA  0E04               	movlw	4
 20301  0038BC  6EDF               	movwf	indf2,c
 20302                           
 20303                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
 20304  0038BE  C046  FFD9         	movff	_pBDTEntryIn,fsr2l
 20305  0038C2  C047  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20306  0038C6  0E00               	movlw	0
 20307  0038C8  8EDB               	bsf	plusw2,7,c
 20308                           
 20309                           ;usb_device.c: 1665: }
 20310                           ;usb_device.c: 1666: }
 20311  0038CA  0012               	return	
 20312  0038CC                     i2l484:
 20313                           
 20314                           ;usb_device.c: 1667: else
 20315                           ;usb_device.c: 1668: {
 20316                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
 20317  0038CC  0104               	movlb	4	; () banked
 20318  0038CE  AF30               	btfss	48,7,b	;volatile
 20319  0038D0  D013               	goto	i2l489
 20320                           
 20321                           ; BSR set to: 4
 20322                           ;usb_device.c: 1670: {
 20323                           ;usb_device.c: 1671: controlTransferState = 1;
 20324  0038D2  0E01               	movlw	1
 20325  0038D4  6E56               	movwf	_controlTransferState,c	;volatile
 20326                           
 20327                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
 20328  0038D6  0102               	movlb	2	; () banked
 20329  0038D8  51E8               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 20330  0038DA  B4D8               	btfsc	status,2,c
 20331                           
 20332                           ; BSR set to: 2
 20333                           ;usb_device.c: 1686: {
 20334                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
 20335  0038DC  EC25  F023         	call	_USBCtrlEPAllowDataStage	;wreg free
 20336                           
 20337                           ;usb_device.c: 1688: }
 20338                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
 20339  0038E0  0E00               	movlw	0
 20340  0038E2  0102               	movlb	2	; () banked
 20341  0038E4  6FE9               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 20342                           
 20343                           ; BSR set to: 2
 20344                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
 20345  0038E6  0E00               	movlw	0
 20346  0038E8  0101               	movlb	1	; () banked
 20347  0038EA  6FF7               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 20348                           
 20349                           ; BSR set to: 1
 20350                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
 20351  0038EC  5053               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 20352  0038EE  A4D8               	btfss	status,2,c
 20353  0038F0  0012               	return	
 20354                           
 20355                           ; BSR set to: 1
 20356                           ;usb_device.c: 1713: {
 20357                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
 20358  0038F2  ECC3  F01F         	call	_USBCtrlEPAllowStatusStage	;wreg free
 20359                           
 20360                           ;usb_device.c: 1715: }
 20361                           ;usb_device.c: 1716: }
 20362  0038F6  0012               	return	
 20363  0038F8                     i2l489:
 20364                           
 20365                           ;usb_device.c: 1717: else
 20366                           ;usb_device.c: 1718: {
 20367                           ;usb_device.c: 1729: controlTransferState = 2;
 20368  0038F8  0E02               	movlw	2
 20369  0038FA  6E56               	movwf	_controlTransferState,c	;volatile
 20370                           
 20371                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
 20372  0038FC  EE20 F001          	lfsr	2,1
 20373  003900  504E               	movf	_pBDTEntryEP0OutNext,w,c
 20374  003902  26D9               	addwf	fsr2l,f,c
 20375  003904  504F               	movf	_pBDTEntryEP0OutNext+1,w,c
 20376  003906  22DA               	addwfc	fsr2h,f,c
 20377  003908  0E08               	movlw	8
 20378  00390A  6EDF               	movwf	indf2,c
 20379                           
 20380                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 20381  00390C  EE20 F002          	lfsr	2,2
 20382  003910  504E               	movf	_pBDTEntryEP0OutNext,w,c
 20383  003912  26D9               	addwf	fsr2l,f,c
 20384  003914  504F               	movf	_pBDTEntryEP0OutNext+1,w,c
 20385  003916  22DA               	addwfc	fsr2h,f,c
 20386  003918  0E30               	movlw	48
 20387  00391A  6EDE               	movwf	postinc2,c
 20388  00391C  0E04               	movlw	4
 20389  00391E  6EDD               	movwf	postdec2,c
 20390                           
 20391                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 20392  003920  C04E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20393  003924  C04F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20394  003928  0E04               	movlw	4
 20395  00392A  6EDF               	movwf	indf2,c
 20396                           
 20397                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 20398  00392C  C04E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20399  003930  C04F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20400  003934  0E00               	movlw	0
 20401  003936  8EDB               	bsf	plusw2,7,c
 20402                           
 20403                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
 20404  003938  0E00               	movlw	0
 20405  00393A  0102               	movlb	2	; () banked
 20406  00393C  6FE9               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 20407                           
 20408                           ; BSR set to: 2
 20409                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
 20410  00393E  0E00               	movlw	0
 20411  003940  0101               	movlb	1	; () banked
 20412  003942  6FF7               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 20413                           
 20414                           ; BSR set to: 1
 20415                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
 20416  003944  5053               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 20417  003946  A4D8               	btfss	status,2,c
 20418  003948  0012               	return	
 20419                           
 20420                           ; BSR set to: 1
 20421                           ;usb_device.c: 1741: {
 20422                           ;usb_device.c: 1742: USBCtrlEPAllowStatusStage();
 20423  00394A  ECC3  F01F         	call	_USBCtrlEPAllowStatusStage	;wreg free
 20424  00394E  0012               	return	
 20425  003950                     __end_of_USBCtrlEPServiceComplete:
 20426                           	opt stack 0
 20427                           pclatu	equ	0xFFB
 20428                           pclath	equ	0xFFA
 20429                           tblptru	equ	0xFF8
 20430                           tblptrh	equ	0xFF7
 20431                           tblptrl	equ	0xFF6
 20432                           tablat	equ	0xFF5
 20433                           prodh	equ	0xFF4
 20434                           prodl	equ	0xFF3
 20435                           intcon	equ	0xFF2
 20436                           indf0	equ	0xFEF
 20437                           postinc0	equ	0xFEE
 20438                           fsr0h	equ	0xFEA
 20439                           fsr0l	equ	0xFE9
 20440                           wreg	equ	0xFE8
 20441                           indf1	equ	0xFE7
 20442                           postdec1	equ	0xFE5
 20443                           fsr1h	equ	0xFE2
 20444                           fsr1l	equ	0xFE1
 20445                           indf2	equ	0xFDF
 20446                           postinc2	equ	0xFDE
 20447                           postdec2	equ	0xFDD
 20448                           plusw2	equ	0xFDB
 20449                           fsr2h	equ	0xFDA
 20450                           fsr2l	equ	0xFD9
 20451                           status	equ	0xFD8
 20452                           
 20453 ;; *************** function _USBCtrlEPAllowDataStage *****************
 20454 ;; Defined at:
 20455 ;;		line 1488 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 20456 ;; Parameters:    Size  Location     Type
 20457 ;;		None
 20458 ;; Auto vars:     Size  Location     Type
 20459 ;;		None
 20460 ;; Return value:  Size  Location     Type
 20461 ;;                  1    wreg      void 
 20462 ;; Registers used:
 20463 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20464 ;; Tracked objects:
 20465 ;;		On entry : 0/0
 20466 ;;		On exit  : 0/0
 20467 ;;		Unchanged: 0/0
 20468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20469 ;;      Params:         0       0       0       0       0       0       0       0       0
 20470 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20471 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20472 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20473 ;;Total ram usage:        0 bytes
 20474 ;; Hardware stack levels used:    1
 20475 ;; Hardware stack levels required when called:    1
 20476 ;; This function calls:
 20477 ;;		_USBCtrlTrfTxService
 20478 ;; This function is called by:
 20479 ;;		_USBCtrlEPServiceComplete
 20480 ;; This function uses a non-reentrant model
 20481 ;;
 20482                           
 20483                           	psect	text76
 20484  00464A                     __ptext76:
 20485                           	opt stack 0
 20486  00464A                     _USBCtrlEPAllowDataStage:
 20487                           	opt stack 19
 20488                           
 20489                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
 20490                           
 20491                           ;incstack = 0
 20492  00464A  0E00               	movlw	0
 20493  00464C  0102               	movlb	2	; () banked
 20494  00464E  6FE8               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 20495                           
 20496                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
 20497  004650  0E00               	movlw	0
 20498  004652  6FE7               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 20499                           
 20500                           ; BSR set to: 2
 20501                           ;usb_device.c: 1493: if(controlTransferState == 2)
 20502  004654  0E02               	movlw	2
 20503  004656  1856               	xorwf	_controlTransferState,w,c	;volatile
 20504  004658  A4D8               	btfss	status,2,c
 20505  00465A  D01F               	goto	i2l473
 20506                           
 20507                           ; BSR set to: 2
 20508                           ;usb_device.c: 1494: {
 20509                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
 20510  00465C  EE20 F001          	lfsr	2,1
 20511  004660  504E               	movf	_pBDTEntryEP0OutNext,w,c
 20512  004662  26D9               	addwf	fsr2l,f,c
 20513  004664  504F               	movf	_pBDTEntryEP0OutNext+1,w,c
 20514  004666  22DA               	addwfc	fsr2h,f,c
 20515  004668  0E08               	movlw	8
 20516  00466A  6EDF               	movwf	indf2,c
 20517                           
 20518                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 20519  00466C  EE20 F002          	lfsr	2,2
 20520  004670  504E               	movf	_pBDTEntryEP0OutNext,w,c
 20521  004672  26D9               	addwf	fsr2l,f,c
 20522  004674  504F               	movf	_pBDTEntryEP0OutNext+1,w,c
 20523  004676  22DA               	addwfc	fsr2h,f,c
 20524  004678  0E38               	movlw	56
 20525  00467A  6EDE               	movwf	postinc2,c
 20526  00467C  0E04               	movlw	4
 20527  00467E  6EDD               	movwf	postdec2,c
 20528                           
 20529                           ; BSR set to: 2
 20530                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 20531  004680  C04E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20532  004684  C04F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20533  004688  0E48               	movlw	72
 20534  00468A  6EDF               	movwf	indf2,c
 20535                           
 20536                           ; BSR set to: 2
 20537                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 20538  00468C  C04E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20539  004690  C04F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20540  004694  0E00               	movlw	0
 20541  004696  8EDB               	bsf	plusw2,7,c
 20542                           
 20543                           ;usb_device.c: 1500: }
 20544  004698  0012               	return	
 20545  00469A                     i2l473:
 20546                           
 20547                           ; BSR set to: 2
 20548                           ;usb_device.c: 1501: else
 20549                           ;usb_device.c: 1502: {
 20550                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 20551                           
 20552                           ; BSR set to: 2
 20553  00469A  5044               	movf	_inPipes+4,w,c	;volatile
 20554  00469C  0104               	movlb	4	; () banked
 20555  00469E  5D36               	subwf	54,w,b	;volatile
 20556  0046A0  5045               	movf	_inPipes+5,w,c	;volatile
 20557  0046A2  5937               	subwfb	55,w,b	;volatile
 20558  0046A4  B0D8               	btfsc	status,0,c
 20559  0046A6  D004               	goto	i2l475
 20560                           
 20561                           ; BSR set to: 4
 20562                           ;usb_device.c: 1506: {
 20563                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
 20564  0046A8  C436 F044          	movff	1078,_inPipes+4	;volatile
 20565  0046AC  C437 F045          	movff	1079,_inPipes+5	;volatile
 20566  0046B0                     i2l475:
 20567                           
 20568                           ; BSR set to: 4
 20569                           ;usb_device.c: 1508: }
 20570                           ;usb_device.c: 1509: USBCtrlTrfTxService();
 20571                           
 20572                           ; BSR set to: 4
 20573  0046B0  EC5D  F01F         	call	_USBCtrlTrfTxService	;wreg free
 20574                           
 20575                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 20576  0046B4  EE20 F002          	lfsr	2,2
 20577  0046B8  5046               	movf	_pBDTEntryIn,w,c
 20578  0046BA  26D9               	addwf	fsr2l,f,c
 20579  0046BC  5047               	movf	_pBDTEntryIn+1,w,c
 20580  0046BE  22DA               	addwfc	fsr2h,f,c
 20581  0046C0  0E38               	movlw	56
 20582  0046C2  6EDE               	movwf	postinc2,c
 20583  0046C4  0E04               	movlw	4
 20584  0046C6  6EDD               	movwf	postdec2,c
 20585                           
 20586                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 20587  0046C8  C046  FFD9         	movff	_pBDTEntryIn,fsr2l
 20588  0046CC  C047  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20589  0046D0  0E48               	movlw	72
 20590  0046D2  6EDF               	movwf	indf2,c
 20591                           
 20592                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
 20593  0046D4  C046  FFD9         	movff	_pBDTEntryIn,fsr2l
 20594  0046D8  C047  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20595  0046DC  0E00               	movlw	0
 20596  0046DE  8EDB               	bsf	plusw2,7,c
 20597  0046E0  0012               	return	
 20598  0046E2                     __end_of_USBCtrlEPAllowDataStage:
 20599                           	opt stack 0
 20600                           pclatu	equ	0xFFB
 20601                           pclath	equ	0xFFA
 20602                           tblptru	equ	0xFF8
 20603                           tblptrh	equ	0xFF7
 20604                           tblptrl	equ	0xFF6
 20605                           tablat	equ	0xFF5
 20606                           prodh	equ	0xFF4
 20607                           prodl	equ	0xFF3
 20608                           intcon	equ	0xFF2
 20609                           indf0	equ	0xFEF
 20610                           postinc0	equ	0xFEE
 20611                           fsr0h	equ	0xFEA
 20612                           fsr0l	equ	0xFE9
 20613                           wreg	equ	0xFE8
 20614                           indf1	equ	0xFE7
 20615                           postdec1	equ	0xFE5
 20616                           fsr1h	equ	0xFE2
 20617                           fsr1l	equ	0xFE1
 20618                           indf2	equ	0xFDF
 20619                           postinc2	equ	0xFDE
 20620                           postdec2	equ	0xFDD
 20621                           plusw2	equ	0xFDB
 20622                           fsr2h	equ	0xFDA
 20623                           fsr2l	equ	0xFD9
 20624                           status	equ	0xFD8
 20625                           
 20626 ;; *************** function _USBCheckStdRequest *****************
 20627 ;; Defined at:
 20628 ;;		line 2686 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 20629 ;; Parameters:    Size  Location     Type
 20630 ;;		None
 20631 ;; Auto vars:     Size  Location     Type
 20632 ;;		None
 20633 ;; Return value:  Size  Location     Type
 20634 ;;                  1    wreg      void 
 20635 ;; Registers used:
 20636 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20637 ;; Tracked objects:
 20638 ;;		On entry : 0/0
 20639 ;;		On exit  : 0/0
 20640 ;;		Unchanged: 0/0
 20641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20642 ;;      Params:         0       0       0       0       0       0       0       0       0
 20643 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20644 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20645 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20646 ;;Total ram usage:        0 bytes
 20647 ;; Hardware stack levels used:    1
 20648 ;; Hardware stack levels required when called:    5
 20649 ;; This function calls:
 20650 ;;		_USBStdFeatureReqHandler
 20651 ;;		_USBStdGetDscHandler
 20652 ;;		_USBStdGetStatusHandler
 20653 ;;		_USBStdSetCfgHandler
 20654 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 20655 ;; This function is called by:
 20656 ;;		_USBCtrlTrfSetupHandler
 20657 ;; This function uses a non-reentrant model
 20658 ;;
 20659                           
 20660                           	psect	text77
 20661  003DE2                     __ptext77:
 20662                           	opt stack 0
 20663  003DE2                     _USBCheckStdRequest:
 20664                           	opt stack 16
 20665                           
 20666                           ;usb_device.c: 2688: if(SetupPkt.RequestType != (0x00>>5)) return;
 20667                           
 20668                           ;incstack = 0
 20669  003DE2  0104               	movlb	4	; () banked
 20670  003DE4  3930               	swapf	48,w,b	;volatile
 20671  003DE6  32E8               	rrcf	wreg,f,c
 20672  003DE8  0B03               	andlw	3
 20673  003DEA  0900               	iorlw	0
 20674  003DEC  A4D8               	btfss	status,2,c
 20675  003DEE  0012               	return	
 20676  003DF0  D042               	goto	i2l608
 20677  003DF2                     i2l609:
 20678                           
 20679                           ; BSR set to: 4
 20680                           ;usb_device.c: 2693: inPipes[0].info.bits.busy = 1;
 20681  003DF2  8E43               	bsf	_inPipes+3,7,c	;volatile
 20682                           
 20683                           ; BSR set to: 4
 20684                           ;usb_device.c: 2694: USBDeviceState = ADR_PENDING_STATE;
 20685  003DF4  0E08               	movlw	8
 20686  003DF6  6E58               	movwf	_USBDeviceState,c	;volatile
 20687                           
 20688                           ;usb_device.c: 2696: break;
 20689  003DF8  0012               	return	
 20690  003DFA                     
 20691                           ; BSR set to: 4
 20692                           ;usb_device.c: 2698: USBStdGetDscHandler();
 20693                           
 20694                           ; BSR set to: 4
 20695  003DFA  EC8F  F019         	call	_USBStdGetDscHandler	;wreg free
 20696                           
 20697                           ;usb_device.c: 2699: break;
 20698  003DFE  0012               	return	
 20699  003E00                     
 20700                           ;usb_device.c: 2701: USBStdSetCfgHandler();
 20701  003E00  EC83  F01E         	call	_USBStdSetCfgHandler	;wreg free
 20702                           
 20703                           ;usb_device.c: 2702: break;
 20704  003E04  0012               	return	
 20705  003E06                     
 20706                           ;usb_device.c: 2704: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 20707  003E06  0E5E               	movlw	low _USBActiveConfiguration
 20708  003E08  6E40               	movwf	_inPipes,c	;volatile
 20709  003E0A  0E00               	movlw	high _USBActiveConfiguration
 20710  003E0C  6E41               	movwf	_inPipes+1,c	;volatile
 20711                           
 20712                           ;usb_device.c: 2705: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 20713  003E0E  8043               	bsf	_inPipes+3,0,c	;volatile
 20714                           
 20715                           ;usb_device.c: 2706: inPipes[0].wCount.v[0] = 1;
 20716  003E10  0E01               	movlw	1
 20717  003E12  6E44               	movwf	_inPipes+4,c	;volatile
 20718                           
 20719                           ;usb_device.c: 2707: inPipes[0].info.bits.busy = 1;
 20720  003E14  8E43               	bsf	_inPipes+3,7,c	;volatile
 20721                           
 20722                           ;usb_device.c: 2708: break;
 20723  003E16  0012               	return	
 20724  003E18                     
 20725                           ;usb_device.c: 2710: USBStdGetStatusHandler();
 20726  003E18  ECD5  F022         	call	_USBStdGetStatusHandler	;wreg free
 20727                           
 20728                           ;usb_device.c: 2711: break;
 20729  003E1C  0012               	return	
 20730  003E1E                     
 20731                           ;usb_device.c: 2713: case 3:
 20732                           ;usb_device.c: 2714: USBStdFeatureReqHandler();
 20733  003E1E  EC2B  F011         	call	_USBStdFeatureReqHandler	;wreg free
 20734                           
 20735                           ;usb_device.c: 2715: break;
 20736  003E22  0012               	return	
 20737  003E24                     
 20738                           ;usb_device.c: 2717: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 20739  003E24  0104               	movlb	4	; () banked
 20740  003E26  5134               	movf	52,w,b	;volatile
 20741  003E28  0D01               	mullw	1
 20742  003E2A  0EFC               	movlw	low _USBAlternateInterface
 20743  003E2C  24F3               	addwf	prodl,w,c
 20744  003E2E  6E40               	movwf	_inPipes,c	;volatile
 20745  003E30  0E02               	movlw	high _USBAlternateInterface
 20746  003E32  20F4               	addwfc	prodh,w,c
 20747  003E34  6E41               	movwf	_inPipes+1,c	;volatile
 20748                           
 20749                           ; BSR set to: 4
 20750                           ;usb_device.c: 2718: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 20751  003E36  8043               	bsf	_inPipes+3,0,c	;volatile
 20752                           
 20753                           ; BSR set to: 4
 20754                           ;usb_device.c: 2719: inPipes[0].wCount.v[0] = 1;
 20755  003E38  0E01               	movlw	1
 20756  003E3A  6E44               	movwf	_inPipes+4,c	;volatile
 20757                           
 20758                           ; BSR set to: 4
 20759                           ;usb_device.c: 2720: inPipes[0].info.bits.busy = 1;
 20760  003E3C  8E43               	bsf	_inPipes+3,7,c	;volatile
 20761                           
 20762                           ;usb_device.c: 2721: break;
 20763  003E3E  0012               	return	
 20764  003E40                     i2l618:
 20765                           
 20766                           ; BSR set to: 4
 20767                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
 20768  003E40  8E43               	bsf	_inPipes+3,7,c	;volatile
 20769                           
 20770                           ; BSR set to: 4
 20771                           ;usb_device.c: 2724: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 20772  003E42  5134               	movf	52,w,b	;volatile
 20773  003E44  0D01               	mullw	1
 20774  003E46  0EFC               	movlw	low _USBAlternateInterface
 20775  003E48  24F3               	addwf	prodl,w,c
 20776  003E4A  6ED9               	movwf	fsr2l,c
 20777  003E4C  0E02               	movlw	high _USBAlternateInterface
 20778  003E4E  20F4               	addwfc	prodh,w,c
 20779  003E50  6EDA               	movwf	fsr2h,c
 20780  003E52  C432 FFDF          	movff	1074,indf2	;volatile
 20781                           
 20782                           ;usb_device.c: 2725: break;
 20783  003E56  0012               	return	
 20784  003E58                     
 20785                           ; BSR set to: 4
 20786                           ;usb_device.c: 2727: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 20787                           
 20788                           ; BSR set to: 4
 20789  003E58  0E00               	movlw	0
 20790  003E5A  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 20791  003E5C  0E02               	movlw	2
 20792  003E5E  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 20793  003E60  0E00               	movlw	0
 20794  003E62  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 20795  003E64  0E00               	movlw	0
 20796  003E66  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 20797  003E68  0E00               	movlw	0
 20798  003E6A  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 20799  003E6C  0E00               	movlw	0
 20800  003E6E  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 20801  003E70  ECB4  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 20802                           
 20803                           ;usb_device.c: 2732: }
 20804                           
 20805                           ;usb_device.c: 2731: break;
 20806                           
 20807                           ;usb_device.c: 2730: default:
 20808                           
 20809                           ;usb_device.c: 2729: case 12:
 20810                           
 20811                           ;usb_device.c: 2728: break;
 20812  003E74  0012               	return	
 20813  003E76                     i2l608:
 20814  003E76  0104               	movlb	4	; () banked
 20815  003E78  5131               	movf	49,w,b	;volatile
 20816                           
 20817                           ; Switch size 1, requested type "space"
 20818                           ; Number of cases is 11, Range of values is 0 to 12
 20819                           ; switch strategies available:
 20820                           ; Name         Instructions Cycles
 20821                           ; simple_byte           34    18 (average)
 20822                           ;	Chosen strategy is simple_byte
 20823  003E7A  0A00               	xorlw	0	; case 0
 20824  003E7C  B4D8               	btfsc	status,2,c
 20825  003E7E  D7CC               	goto	i2l614
 20826  003E80  0A01               	xorlw	1	; case 1
 20827  003E82  B4D8               	btfsc	status,2,c
 20828  003E84  D7CC               	goto	i2l615
 20829  003E86  0A02               	xorlw	2	; case 3
 20830  003E88  B4D8               	btfsc	status,2,c
 20831  003E8A  D7C9               	goto	i2l615
 20832  003E8C  0A06               	xorlw	6	; case 5
 20833  003E8E  B4D8               	btfsc	status,2,c
 20834  003E90  D7B0               	goto	i2l609
 20835  003E92  0A03               	xorlw	3	; case 6
 20836  003E94  B4D8               	btfsc	status,2,c
 20837  003E96  D7B1               	goto	i2l611
 20838  003E98  0A01               	xorlw	1	; case 7
 20839  003E9A  B4D8               	btfsc	status,2,c
 20840  003E9C  D7DD               	goto	i2l619
 20841  003E9E  0A0F               	xorlw	15	; case 8
 20842  003EA0  B4D8               	btfsc	status,2,c
 20843  003EA2  D7B1               	goto	i2l613
 20844  003EA4  0A01               	xorlw	1	; case 9
 20845  003EA6  B4D8               	btfsc	status,2,c
 20846  003EA8  D7AB               	goto	i2l612
 20847  003EAA  0A03               	xorlw	3	; case 10
 20848  003EAC  B4D8               	btfsc	status,2,c
 20849  003EAE  D7BA               	goto	i2l617
 20850  003EB0  0A01               	xorlw	1	; case 11
 20851  003EB2  B4D8               	btfsc	status,2,c
 20852  003EB4  D7C5               	goto	i2l618
 20853  003EB6  0A07               	xorlw	7	; case 12
 20854  003EB8  0012               	return	
 20855  003EBA                     __end_of_USBCheckStdRequest:
 20856                           	opt stack 0
 20857                           pclatu	equ	0xFFB
 20858                           pclath	equ	0xFFA
 20859                           tblptru	equ	0xFF8
 20860                           tblptrh	equ	0xFF7
 20861                           tblptrl	equ	0xFF6
 20862                           tablat	equ	0xFF5
 20863                           prodh	equ	0xFF4
 20864                           prodl	equ	0xFF3
 20865                           intcon	equ	0xFF2
 20866                           indf0	equ	0xFEF
 20867                           postinc0	equ	0xFEE
 20868                           fsr0h	equ	0xFEA
 20869                           fsr0l	equ	0xFE9
 20870                           wreg	equ	0xFE8
 20871                           indf1	equ	0xFE7
 20872                           postdec1	equ	0xFE5
 20873                           fsr1h	equ	0xFE2
 20874                           fsr1l	equ	0xFE1
 20875                           indf2	equ	0xFDF
 20876                           postinc2	equ	0xFDE
 20877                           postdec2	equ	0xFDD
 20878                           plusw2	equ	0xFDB
 20879                           fsr2h	equ	0xFDA
 20880                           fsr2l	equ	0xFD9
 20881                           status	equ	0xFD8
 20882                           
 20883 ;; *************** function _USBStdSetCfgHandler *****************
 20884 ;; Defined at:
 20885 ;;		line 1968 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 20886 ;; Parameters:    Size  Location     Type
 20887 ;;		None
 20888 ;; Auto vars:     Size  Location     Type
 20889 ;;  i               1   20[COMRAM] unsigned char 
 20890 ;; Return value:  Size  Location     Type
 20891 ;;                  1    wreg      void 
 20892 ;; Registers used:
 20893 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20894 ;; Tracked objects:
 20895 ;;		On entry : 0/0
 20896 ;;		On exit  : 0/0
 20897 ;;		Unchanged: 0/0
 20898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20899 ;;      Params:         0       0       0       0       0       0       0       0       0
 20900 ;;      Locals:         1       0       0       0       0       0       0       0       0
 20901 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20902 ;;      Totals:         1       0       0       0       0       0       0       0       0
 20903 ;;Total ram usage:        1 bytes
 20904 ;; Hardware stack levels used:    1
 20905 ;; Hardware stack levels required when called:    4
 20906 ;; This function calls:
 20907 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 20908 ;;		i2_memset
 20909 ;; This function is called by:
 20910 ;;		_USBCheckStdRequest
 20911 ;; This function uses a non-reentrant model
 20912 ;;
 20913                           
 20914                           	psect	text78
 20915  003D06                     __ptext78:
 20916                           	opt stack 0
 20917  003D06                     _USBStdSetCfgHandler:
 20918                           	opt stack 16
 20919                           
 20920                           ;usb_device.c: 1970: uint8_t i;
 20921                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
 20922                           
 20923                           ;incstack = 0
 20924  003D06  8E43               	bsf	_inPipes+3,7,c	;volatile
 20925                           
 20926                           ;usb_device.c: 1976: memset((void*)&UEP1,0x00,(2));;
 20927  003D08  0E71               	movlw	113
 20928  003D0A  6E01               	movwf	i2memset@p1,c
 20929  003D0C  0E0F               	movlw	15
 20930  003D0E  6E02               	movwf	i2memset@p1+1,c
 20931  003D10  0E00               	movlw	0
 20932  003D12  6E04               	movwf	i2memset@c+1,c
 20933  003D14  0E00               	movlw	0
 20934  003D16  6E03               	movwf	i2memset@c,c
 20935  003D18  0E00               	movlw	0
 20936  003D1A  6E06               	movwf	i2memset@n+1,c
 20937  003D1C  0E02               	movlw	2
 20938  003D1E  6E05               	movwf	i2memset@n,c
 20939  003D20  ECB6  F02A         	call	i2_memset	;wreg free
 20940                           
 20941                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 20942  003D24  0E00               	movlw	0
 20943  003D26  6E01               	movwf	i2memset@p1,c
 20944  003D28  0E04               	movlw	4
 20945  003D2A  6E02               	movwf	i2memset@p1+1,c
 20946  003D2C  0E00               	movlw	0
 20947  003D2E  6E04               	movwf	i2memset@c+1,c
 20948  003D30  0E00               	movlw	0
 20949  003D32  6E03               	movwf	i2memset@c,c
 20950  003D34  0E00               	movlw	0
 20951  003D36  6E06               	movwf	i2memset@n+1,c
 20952  003D38  0E30               	movlw	48
 20953  003D3A  6E05               	movwf	i2memset@n,c
 20954  003D3C  ECB6  F02A         	call	i2_memset	;wreg free
 20955                           
 20956                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
 20957  003D40  8C6D               	bsf	3949,6,c	;volatile
 20958                           
 20959                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
 20960  003D42  0E00               	movlw	0
 20961  003D44  6E15               	movwf	USBStdSetCfgHandler@i,c
 20962  003D46                     i2l7652:
 20963  003D46  0E02               	movlw	2
 20964  003D48  6415               	cpfsgt	USBStdSetCfgHandler@i,c
 20965  003D4A  D001               	goto	i2l525
 20966  003D4C  D016               	goto	i2u601_40
 20967  003D4E                     i2l525:
 20968                           
 20969                           ;usb_device.c: 1988: {
 20970                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
 20971  003D4E  5015               	movf	USBStdSetCfgHandler@i,w,c
 20972  003D50  0D01               	mullw	1
 20973  003D52  0ED5               	movlw	low _ep_data_in
 20974  003D54  24F3               	addwf	prodl,w,c
 20975  003D56  6ED9               	movwf	fsr2l,c
 20976  003D58  0E02               	movlw	high _ep_data_in
 20977  003D5A  20F4               	addwfc	prodh,w,c
 20978  003D5C  6EDA               	movwf	fsr2h,c
 20979  003D5E  0E00               	movlw	0
 20980  003D60  6EDF               	movwf	indf2,c
 20981                           
 20982                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
 20983  003D62  5015               	movf	USBStdSetCfgHandler@i,w,c
 20984  003D64  0D01               	mullw	1
 20985  003D66  0ED2               	movlw	low _ep_data_out
 20986  003D68  24F3               	addwf	prodl,w,c
 20987  003D6A  6ED9               	movwf	fsr2l,c
 20988  003D6C  0E02               	movlw	high _ep_data_out
 20989  003D6E  20F4               	addwfc	prodh,w,c
 20990  003D70  6EDA               	movwf	fsr2h,c
 20991  003D72  0E00               	movlw	0
 20992  003D74  6EDF               	movwf	indf2,c
 20993  003D76  2A15               	incf	USBStdSetCfgHandler@i,f,c
 20994  003D78  D7E6               	goto	i2l7652
 20995  003D7A                     i2u601_40:
 20996                           
 20997                           ;usb_device.c: 1991: }
 20998                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
 20999  003D7A  0EFC               	movlw	low _USBAlternateInterface
 21000  003D7C  6E01               	movwf	i2memset@p1,c
 21001  003D7E  0E02               	movlw	high _USBAlternateInterface
 21002  003D80  6E02               	movwf	i2memset@p1+1,c
 21003  003D82  0E00               	movlw	0
 21004  003D84  6E04               	movwf	i2memset@c+1,c
 21005  003D86  0E00               	movlw	0
 21006  003D88  6E03               	movwf	i2memset@c,c
 21007  003D8A  0E00               	movlw	0
 21008  003D8C  6E06               	movwf	i2memset@n+1,c
 21009  003D8E  0E02               	movlw	2
 21010  003D90  6E05               	movwf	i2memset@n,c
 21011  003D92  ECB6  F02A         	call	i2_memset	;wreg free
 21012                           
 21013                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
 21014  003D96  9C6D               	bcf	3949,6,c	;volatile
 21015                           
 21016                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 21017  003D98  0E08               	movlw	8
 21018  003D9A  6E46               	movwf	_pBDTEntryIn,c
 21019  003D9C  0E04               	movlw	4
 21020  003D9E  6E47               	movwf	_pBDTEntryIn+1,c
 21021                           
 21022                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 21023  003DA0  0E00               	movlw	0
 21024  003DA2  6E50               	movwf	_pBDTEntryEP0OutCurrent,c
 21025  003DA4  0E04               	movlw	4
 21026  003DA6  6E51               	movwf	_pBDTEntryEP0OutCurrent+1,c
 21027                           
 21028                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 21029  003DA8  C050  F04E         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 21030  003DAC  C051  F04F         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 21031                           
 21032                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 21033  003DB0  C432 F05E          	movff	1074,_USBActiveConfiguration	;volatile
 21034                           
 21035                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
 21036  003DB4  505E               	movf	_USBActiveConfiguration,w,c	;volatile
 21037  003DB6  A4D8               	btfss	status,2,c
 21038  003DB8  D003               	goto	i2l527
 21039                           
 21040                           ;usb_device.c: 2010: {
 21041                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
 21042  003DBA  0E10               	movlw	16
 21043  003DBC  6E58               	movwf	_USBDeviceState,c	;volatile
 21044                           
 21045                           ;usb_device.c: 2013: }
 21046  003DBE  0012               	return	
 21047  003DC0                     i2l527:
 21048                           
 21049                           ;usb_device.c: 2014: else
 21050                           ;usb_device.c: 2015: {
 21051                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 21052  003DC0  0E00               	movlw	0
 21053  003DC2  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 21054  003DC4  0E01               	movlw	1
 21055  003DC6  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 21056  003DC8  0E5E               	movlw	low _USBActiveConfiguration
 21057  003DCA  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 21058  003DCC  0E00               	movlw	high _USBActiveConfiguration
 21059  003DCE  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 21060  003DD0  0E00               	movlw	0
 21061  003DD2  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 21062  003DD4  0E01               	movlw	1
 21063  003DD6  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 21064  003DD8  ECB4  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 21065                           
 21066                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
 21067  003DDC  0E20               	movlw	32
 21068  003DDE  6E58               	movwf	_USBDeviceState,c	;volatile
 21069  003DE0  0012               	return	
 21070  003DE2                     __end_of_USBStdSetCfgHandler:
 21071                           	opt stack 0
 21072                           pclatu	equ	0xFFB
 21073                           pclath	equ	0xFFA
 21074                           tblptru	equ	0xFF8
 21075                           tblptrh	equ	0xFF7
 21076                           tblptrl	equ	0xFF6
 21077                           tablat	equ	0xFF5
 21078                           prodh	equ	0xFF4
 21079                           prodl	equ	0xFF3
 21080                           intcon	equ	0xFF2
 21081                           indf0	equ	0xFEF
 21082                           postinc0	equ	0xFEE
 21083                           fsr0h	equ	0xFEA
 21084                           fsr0l	equ	0xFE9
 21085                           wreg	equ	0xFE8
 21086                           indf1	equ	0xFE7
 21087                           postdec1	equ	0xFE5
 21088                           fsr1h	equ	0xFE2
 21089                           fsr1l	equ	0xFE1
 21090                           indf2	equ	0xFDF
 21091                           postinc2	equ	0xFDE
 21092                           postdec2	equ	0xFDD
 21093                           plusw2	equ	0xFDB
 21094                           fsr2h	equ	0xFDA
 21095                           fsr2l	equ	0xFD9
 21096                           status	equ	0xFD8
 21097                           
 21098 ;; *************** function i2_memset *****************
 21099 ;; Defined at:
 21100 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\memset.c"
 21101 ;; Parameters:    Size  Location     Type
 21102 ;;  p1              2    0[COMRAM] PTR void 
 21103 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 21104 ;;  c               2    2[COMRAM] int 
 21105 ;;  n               2    4[COMRAM] unsigned int 
 21106 ;; Auto vars:     Size  Location     Type
 21107 ;;  memset          2    6[COMRAM] PTR unsigned char 
 21108 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 21109 ;; Return value:  Size  Location     Type
 21110 ;;                  2    0[COMRAM] PTR void 
 21111 ;; Registers used:
 21112 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21113 ;; Tracked objects:
 21114 ;;		On entry : 0/0
 21115 ;;		On exit  : 0/0
 21116 ;;		Unchanged: 0/0
 21117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21118 ;;      Params:         6       0       0       0       0       0       0       0       0
 21119 ;;      Locals:         2       0       0       0       0       0       0       0       0
 21120 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21121 ;;      Totals:         8       0       0       0       0       0       0       0       0
 21122 ;;Total ram usage:        8 bytes
 21123 ;; Hardware stack levels used:    1
 21124 ;; This function calls:
 21125 ;;		Nothing
 21126 ;; This function is called by:
 21127 ;;		_USBStdSetCfgHandler
 21128 ;;		i2_USBDeviceInit
 21129 ;; This function uses a non-reentrant model
 21130 ;;
 21131                           
 21132                           	psect	text79
 21133  00556C                     __ptext79:
 21134                           	opt stack 0
 21135  00556C                     i2_memset:
 21136                           	opt stack 22
 21137                           
 21138                           ;incstack = 0
 21139  00556C  C001  F007         	movff	i2memset@p1,i2memset@p
 21140  005570  C002  F008         	movff	i2memset@p1+1,i2memset@p+1
 21141  005574  D008               	goto	i2l3238
 21142  005576                     i2l7582:
 21143  005576  C007  FFD9         	movff	i2memset@p,fsr2l
 21144  00557A  C008  FFDA         	movff	i2memset@p+1,fsr2h
 21145  00557E  C003  FFDF         	movff	i2memset@c,indf2
 21146  005582  4A07               	infsnz	i2memset@p,f,c
 21147  005584  2A08               	incf	i2memset@p+1,f,c
 21148  005586                     i2l3238:
 21149  005586  0605               	decf	i2memset@n,f,c
 21150  005588  A0D8               	btfss	status,0,c
 21151  00558A  0606               	decf	i2memset@n+1,f,c
 21152  00558C  2805               	incf	i2memset@n,w,c
 21153  00558E  E1F3               	bnz	i2l7582
 21154  005590  2806               	incf	i2memset@n+1,w,c
 21155  005592  B4D8               	btfsc	status,2,c
 21156  005594  0012               	return	
 21157  005596  D7EF               	goto	i2l3239
 21158  005598                     __end_ofi2_memset:
 21159                           	opt stack 0
 21160                           pclatu	equ	0xFFB
 21161                           pclath	equ	0xFFA
 21162                           tblptru	equ	0xFF8
 21163                           tblptrh	equ	0xFF7
 21164                           tblptrl	equ	0xFF6
 21165                           tablat	equ	0xFF5
 21166                           prodh	equ	0xFF4
 21167                           prodl	equ	0xFF3
 21168                           intcon	equ	0xFF2
 21169                           indf0	equ	0xFEF
 21170                           postinc0	equ	0xFEE
 21171                           fsr0h	equ	0xFEA
 21172                           fsr0l	equ	0xFE9
 21173                           wreg	equ	0xFE8
 21174                           indf1	equ	0xFE7
 21175                           postdec1	equ	0xFE5
 21176                           fsr1h	equ	0xFE2
 21177                           fsr1l	equ	0xFE1
 21178                           indf2	equ	0xFDF
 21179                           postinc2	equ	0xFDE
 21180                           postdec2	equ	0xFDD
 21181                           plusw2	equ	0xFDB
 21182                           fsr2h	equ	0xFDA
 21183                           fsr2l	equ	0xFD9
 21184                           status	equ	0xFD8
 21185                           
 21186 ;; *************** function _USBStdGetStatusHandler *****************
 21187 ;; Defined at:
 21188 ;;		line 2129 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 21189 ;; Parameters:    Size  Location     Type
 21190 ;;		None
 21191 ;; Auto vars:     Size  Location     Type
 21192 ;;  p               2    1[COMRAM] PTR struct __BDT
 21193 ;;		 -> RAM(2047), NULL(0), BDT(48), 
 21194 ;; Return value:  Size  Location     Type
 21195 ;;                  1    wreg      void 
 21196 ;; Registers used:
 21197 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21198 ;; Tracked objects:
 21199 ;;		On entry : 0/0
 21200 ;;		On exit  : 0/0
 21201 ;;		Unchanged: 0/0
 21202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21203 ;;      Params:         0       0       0       0       0       0       0       0       0
 21204 ;;      Locals:         2       0       0       0       0       0       0       0       0
 21205 ;;      Temps:          1       0       0       0       0       0       0       0       0
 21206 ;;      Totals:         3       0       0       0       0       0       0       0       0
 21207 ;;Total ram usage:        3 bytes
 21208 ;; Hardware stack levels used:    1
 21209 ;; This function calls:
 21210 ;;		Nothing
 21211 ;; This function is called by:
 21212 ;;		_USBCheckStdRequest
 21213 ;; This function uses a non-reentrant model
 21214 ;;
 21215                           
 21216                           	psect	text80
 21217  0045AA                     __ptext80:
 21218                           	opt stack 0
 21219  0045AA                     _USBStdGetStatusHandler:
 21220                           	opt stack 20
 21221                           
 21222                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
 21223                           
 21224                           ;incstack = 0
 21225  0045AA  0E00               	movlw	0
 21226  0045AC  0104               	movlb	4	; () banked
 21227  0045AE  6F38               	movwf	56,b	;volatile
 21228                           
 21229                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
 21230  0045B0  0E00               	movlw	0
 21231  0045B2  6F39               	movwf	57,b	;volatile
 21232                           
 21233                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
 21234  0045B4  D035               	goto	i2l546
 21235  0045B6                     i2l547:
 21236                           
 21237                           ; BSR set to: 4
 21238                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
 21239  0045B6  8E43               	bsf	_inPipes+3,7,c	;volatile
 21240                           
 21241                           ; BSR set to: 4
 21242                           ;usb_device.c: 2145: }
 21243                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
 21244                           
 21245                           ; BSR set to: 4
 21246                           
 21247                           ; BSR set to: 4
 21248                           ;usb_device.c: 2143: {
 21249                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
 21250                           
 21251                           ;usb_device.c: 2142: if(0 == 1)
 21252  0045B8  0101               	movlb	1	; () banked
 21253  0045BA  05FA               	decf	_RemoteWakeup& (0+255),w,b	;volatile
 21254  0045BC  A4D8               	btfss	status,2,c
 21255  0045BE  D03B               	goto	i2l550
 21256                           
 21257                           ; BSR set to: 1
 21258                           ;usb_device.c: 2148: {
 21259                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
 21260  0045C0  0104               	movlb	4	; () banked
 21261  0045C2  8338               	bsf	56,1,b	;volatile
 21262                           
 21263                           ; BSR set to: 4
 21264                           ;usb_device.c: 2150: }
 21265                           ;usb_device.c: 2151: break;
 21266  0045C4  D038               	goto	i2l550
 21267  0045C6                     i2l551:
 21268                           
 21269                           ; BSR set to: 4
 21270                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
 21271  0045C6  8E43               	bsf	_inPipes+3,7,c	;volatile
 21272                           
 21273                           ;usb_device.c: 2154: break;
 21274  0045C8  D036               	goto	i2l550
 21275  0045CA                     i2l552:
 21276                           
 21277                           ; BSR set to: 4
 21278                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
 21279  0045CA  8E43               	bsf	_inPipes+3,7,c	;volatile
 21280                           
 21281                           ;usb_device.c: 2160: {
 21282                           ;usb_device.c: 2161: BDT_ENTRY *p;
 21283                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
 21284  0045CC  BF34               	btfsc	52,7,b	;volatile
 21285  0045CE  D00A               	goto	i2l553
 21286                           
 21287                           ; BSR set to: 4
 21288                           ;usb_device.c: 2164: {
 21289                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 21290  0045D0  5134               	movf	52,w,b	;volatile
 21291  0045D2  0B0F               	andlw	15
 21292  0045D4  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 21293  0045D6  5001               	movf	??_USBStdGetStatusHandler,w,c
 21294  0045D8  0D02               	mullw	2
 21295  0045DA  0EC8               	movlw	low _pBDTEntryOut
 21296  0045DC  24F3               	addwf	prodl,w,c
 21297  0045DE  6ED9               	movwf	fsr2l,c
 21298  0045E0  0E02               	movlw	high _pBDTEntryOut
 21299  0045E2  D009               	goto	L21
 21300  0045E4                     i2l553:
 21301                           
 21302                           ; BSR set to: 4
 21303                           ;usb_device.c: 2167: else
 21304                           ;usb_device.c: 2168: {
 21305                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 21306                           
 21307                           ; BSR set to: 4
 21308  0045E4  5134               	movf	52,w,b	;volatile
 21309  0045E6  0B0F               	andlw	15
 21310  0045E8  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 21311  0045EA  5001               	movf	??_USBStdGetStatusHandler,w,c
 21312  0045EC  0D02               	mullw	2
 21313  0045EE  0E46               	movlw	low _pBDTEntryIn
 21314  0045F0  24F3               	addwf	prodl,w,c
 21315  0045F2  6ED9               	movwf	fsr2l,c
 21316  0045F4  0E00               	movlw	high _pBDTEntryIn
 21317  0045F6                     L21:
 21318  0045F6  20F4               	addwfc	prodh,w,c
 21319  0045F8  6EDA               	movwf	fsr2h,c
 21320  0045FA  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 21321  0045FE  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 21322                           
 21323                           ; BSR set to: 4
 21324                           ;usb_device.c: 2170: }
 21325                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 21326                           
 21327                           ; BSR set to: 4
 21328  004602  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 21329  004606  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 21330  00460A  AEDF               	btfss	indf2,7,c
 21331  00460C  D014               	goto	i2l550
 21332                           
 21333                           ; BSR set to: 4
 21334  00460E  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 21335  004612  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 21336  004616  A4DF               	btfss	indf2,2,c
 21337  004618  D00E               	goto	i2l550
 21338                           
 21339                           ; BSR set to: 4
 21340                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
 21341  00461A  0E01               	movlw	1
 21342  00461C  6F38               	movwf	56,b	;volatile
 21343                           
 21344                           ; BSR set to: 4
 21345                           ;usb_device.c: 2175: }
 21346                           ;usb_device.c: 2176: }
 21347                           
 21348                           ; BSR set to: 4
 21349                           ;usb_device.c: 2174: break;
 21350  00461E  D00B               	goto	i2l550
 21351  004620                     i2l546:
 21352                           
 21353                           ; BSR set to: 4
 21354                           
 21355                           ; BSR set to: 4
 21356  004620  5130               	movf	48,w,b	;volatile
 21357  004622  0B1F               	andlw	31
 21358                           
 21359                           ; Switch size 1, requested type "space"
 21360                           ; Number of cases is 3, Range of values is 0 to 2
 21361                           ; switch strategies available:
 21362                           ; Name         Instructions Cycles
 21363                           ; simple_byte           10     6 (average)
 21364                           ;	Chosen strategy is simple_byte
 21365  004624  0A00               	xorlw	0	; case 0
 21366  004626  B4D8               	btfsc	status,2,c
 21367  004628  D7C6               	goto	i2l547
 21368  00462A  0A01               	xorlw	1	; case 1
 21369  00462C  B4D8               	btfsc	status,2,c
 21370  00462E  D7CB               	goto	i2l551
 21371  004630  0A03               	xorlw	3	; case 2
 21372  004632  B4D8               	btfsc	status,2,c
 21373  004634  D7CA               	goto	i2l552
 21374  004636                     i2l550:
 21375                           
 21376                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
 21377  004636  AE43               	btfss	_inPipes+3,7,c	;volatile
 21378  004638  0012               	return	
 21379                           
 21380                           ;usb_device.c: 2179: {
 21381                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 21382  00463A  0E38               	movlw	56
 21383  00463C  6E40               	movwf	_inPipes,c	;volatile
 21384  00463E  0E04               	movlw	4
 21385  004640  6E41               	movwf	_inPipes+1,c	;volatile
 21386                           
 21387                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 21388  004642  8043               	bsf	_inPipes+3,0,c	;volatile
 21389                           
 21390                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
 21391  004644  0E02               	movlw	2
 21392  004646  6E44               	movwf	_inPipes+4,c	;volatile
 21393  004648  0012               	return	
 21394  00464A                     __end_of_USBStdGetStatusHandler:
 21395                           	opt stack 0
 21396                           pclatu	equ	0xFFB
 21397                           pclath	equ	0xFFA
 21398                           tblptru	equ	0xFF8
 21399                           tblptrh	equ	0xFF7
 21400                           tblptrl	equ	0xFF6
 21401                           tablat	equ	0xFF5
 21402                           prodh	equ	0xFF4
 21403                           prodl	equ	0xFF3
 21404                           intcon	equ	0xFF2
 21405                           indf0	equ	0xFEF
 21406                           postinc0	equ	0xFEE
 21407                           fsr0h	equ	0xFEA
 21408                           fsr0l	equ	0xFE9
 21409                           wreg	equ	0xFE8
 21410                           indf1	equ	0xFE7
 21411                           postdec1	equ	0xFE5
 21412                           fsr1h	equ	0xFE2
 21413                           fsr1l	equ	0xFE1
 21414                           indf2	equ	0xFDF
 21415                           postinc2	equ	0xFDE
 21416                           postdec2	equ	0xFDD
 21417                           plusw2	equ	0xFDB
 21418                           fsr2h	equ	0xFDA
 21419                           fsr2l	equ	0xFD9
 21420                           status	equ	0xFD8
 21421                           
 21422 ;; *************** function _USBStdGetDscHandler *****************
 21423 ;; Defined at:
 21424 ;;		line 2043 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 21425 ;; Parameters:    Size  Location     Type
 21426 ;;		None
 21427 ;; Auto vars:     Size  Location     Type
 21428 ;;		None
 21429 ;; Return value:  Size  Location     Type
 21430 ;;                  1    wreg      void 
 21431 ;; Registers used:
 21432 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 21433 ;; Tracked objects:
 21434 ;;		On entry : 0/0
 21435 ;;		On exit  : 0/0
 21436 ;;		Unchanged: 0/0
 21437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21438 ;;      Params:         0       0       0       0       0       0       0       0       0
 21439 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21440 ;;      Temps:          2       0       0       0       0       0       0       0       0
 21441 ;;      Totals:         2       0       0       0       0       0       0       0       0
 21442 ;;Total ram usage:        2 bytes
 21443 ;; Hardware stack levels used:    1
 21444 ;; This function calls:
 21445 ;;		Nothing
 21446 ;; This function is called by:
 21447 ;;		_USBCheckStdRequest
 21448 ;; This function uses a non-reentrant model
 21449 ;;
 21450                           
 21451                           	psect	text81
 21452  00331E                     __ptext81:
 21453                           	opt stack 0
 21454  00331E                     _USBStdGetDscHandler:
 21455                           	opt stack 20
 21456                           
 21457                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
 21458                           
 21459                           ;incstack = 0
 21460  00331E  0E80               	movlw	128
 21461  003320  0104               	movlb	4	; () banked
 21462  003322  1930               	xorwf	48,w,b	;volatile
 21463  003324  A4D8               	btfss	status,2,c
 21464  003326  0012               	return	
 21465                           
 21466                           ; BSR set to: 4
 21467                           ;usb_device.c: 2046: {
 21468                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 21469  003328  0EC0               	movlw	192
 21470  00332A  6E43               	movwf	_inPipes+3,c	;volatile
 21471                           
 21472                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
 21473  00332C  D079               	goto	i2l533
 21474  00332E                     
 21475                           ; BSR set to: 4
 21476                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 21477                           
 21478                           ; BSR set to: 4
 21479  00332E  0E44               	movlw	low _device_dsc
 21480  003330  6E40               	movwf	_inPipes,c	;volatile
 21481  003332  0E7D               	movlw	high _device_dsc
 21482  003334  6E41               	movwf	_inPipes+1,c	;volatile
 21483                           
 21484                           ; BSR set to: 4
 21485                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
 21486  003336  0E00               	movlw	0
 21487  003338  6E45               	movwf	_inPipes+5,c	;volatile
 21488  00333A  0E12               	movlw	18
 21489  00333C  6E44               	movwf	_inPipes+4,c	;volatile
 21490                           
 21491                           ;usb_device.c: 2058: break;
 21492  00333E  0012               	return	
 21493  003340                     
 21494                           ; BSR set to: 4
 21495                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
 21496                           
 21497                           ; BSR set to: 4
 21498  003340  5132               	movf	50,w,b	;volatile
 21499  003342  A4D8               	btfss	status,2,c
 21500  003344  D03D               	goto	i2l537
 21501                           
 21502                           ; BSR set to: 4
 21503                           ;usb_device.c: 2064: {
 21504                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 21505  003346  5132               	movf	50,w,b	;volatile
 21506  003348  0D02               	mullw	2
 21507  00334A  0E97               	movlw	low _USB_CD_Ptr
 21508  00334C  24F3               	addwf	prodl,w,c
 21509  00334E  6EF6               	movwf	tblptrl,c
 21510  003350  0E7C               	movlw	high _USB_CD_Ptr
 21511  003352  20F4               	addwfc	prodh,w,c
 21512  003354  6EF7               	movwf	tblptrh,c
 21513  003356                     	if	0	;There are less than 3 active tblptr bytes
 21514  003356                     	endif
 21515  003356  0009               	tblrd		*+
 21516  003358  CFF5 F040          	movff	tablat,_inPipes	;volatile
 21517  00335C  000A               	tblrd		*-
 21518  00335E  CFF5 F041          	movff	tablat,_inPipes+1	;volatile
 21519                           
 21520                           ; BSR set to: 4
 21521                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 21522  003362  0E02               	movlw	2
 21523  003364  2440               	addwf	_inPipes,w,c	;volatile
 21524  003366  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 21525  003368  0E00               	movlw	0
 21526  00336A  2041               	addwfc	_inPipes+1,w,c	;volatile
 21527  00336C  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 21528  00336E  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 21529  003372  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 21530  003376  6AF8               	clrf	tblptru,c
 21531  003378  0E07               	movlw	(high __ramtop+-1)
 21532  00337A  64F7               	cpfsgt	tblptrh,c
 21533  00337C  D003               	bra	i2u605_47
 21534  00337E  0008               	tblrd		*
 21535  003380  50F5               	movf	tablat,w,c
 21536  003382  D005               	bra	i2u605_40
 21537  003384                     i2u605_47:
 21538  003384  CFF6 FFE9          	movff	tblptrl,fsr0l
 21539  003388  CFF7 FFEA          	movff	tblptrh,fsr0h
 21540  00338C  50EF               	movf	indf0,w,c
 21541  00338E                     i2u605_40:
 21542  00338E  6E44               	movwf	_inPipes+4,c	;volatile
 21543                           
 21544                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 21545  003390  0E03               	movlw	3
 21546  003392  2440               	addwf	_inPipes,w,c	;volatile
 21547  003394  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 21548  003396  0E00               	movlw	0
 21549  003398  2041               	addwfc	_inPipes+1,w,c	;volatile
 21550  00339A  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 21551  00339C  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 21552  0033A0  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 21553  0033A4  6AF8               	clrf	tblptru,c
 21554  0033A6  0E07               	movlw	(high __ramtop+-1)
 21555  0033A8  64F7               	cpfsgt	tblptrh,c
 21556  0033AA  D003               	bra	i2u606_47
 21557  0033AC  0008               	tblrd		*
 21558  0033AE  50F5               	movf	tablat,w,c
 21559  0033B0  D005               	bra	i2u606_40
 21560  0033B2                     i2u606_47:
 21561  0033B2  CFF6 FFE9          	movff	tblptrl,fsr0l
 21562  0033B6  CFF7 FFEA          	movff	tblptrh,fsr0h
 21563  0033BA  50EF               	movf	indf0,w,c
 21564  0033BC                     i2u606_40:
 21565  0033BC  6E45               	movwf	_inPipes+5,c	;volatile
 21566                           
 21567                           ;usb_device.c: 2076: }
 21568  0033BE  0012               	return	
 21569  0033C0                     i2l537:
 21570                           
 21571                           ;usb_device.c: 2077: else
 21572                           ;usb_device.c: 2078: {
 21573                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
 21574  0033C0  0E00               	movlw	0
 21575  0033C2  6E43               	movwf	_inPipes+3,c	;volatile
 21576                           
 21577                           ;usb_device.c: 2080: }
 21578                           ;usb_device.c: 2081: break;
 21579  0033C4  0012               	return	
 21580  0033C6                     
 21581                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
 21582  0033C6  0E03               	movlw	3
 21583  0033C8  0104               	movlb	4	; () banked
 21584  0033CA  6132               	cpfslt	50,b	;volatile
 21585  0033CC  D023               	goto	i2l540
 21586                           
 21587                           ; BSR set to: 4
 21588                           ;usb_device.c: 2087: {
 21589                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 21590  0033CE  5132               	movf	50,w,b	;volatile
 21591  0033D0  0D02               	mullw	2
 21592  0033D2  0E91               	movlw	low _USB_SD_Ptr
 21593  0033D4  24F3               	addwf	prodl,w,c
 21594  0033D6  6EF6               	movwf	tblptrl,c
 21595  0033D8  0E7C               	movlw	high _USB_SD_Ptr
 21596  0033DA  20F4               	addwfc	prodh,w,c
 21597  0033DC  6EF7               	movwf	tblptrh,c
 21598  0033DE                     	if	0	;There are less than 3 active tblptr bytes
 21599  0033DE                     	endif
 21600  0033DE  0009               	tblrd		*+
 21601  0033E0  CFF5 F040          	movff	tablat,_inPipes	;volatile
 21602  0033E4  000A               	tblrd		*-
 21603  0033E6  CFF5 F041          	movff	tablat,_inPipes+1	;volatile
 21604                           
 21605                           ; BSR set to: 4
 21606                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 21607  0033EA  C040  FFF6         	movff	_inPipes,tblptrl	;volatile
 21608  0033EE  C041  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 21609  0033F2  6AF8               	clrf	tblptru,c
 21610  0033F4  0E07               	movlw	(high __ramtop+-1)
 21611  0033F6  64F7               	cpfsgt	tblptrh,c
 21612  0033F8  D003               	bra	i2u608_47
 21613  0033FA  0008               	tblrd		*
 21614  0033FC  50F5               	movf	tablat,w,c
 21615  0033FE  D005               	bra	i2u608_40
 21616  003400                     i2u608_47:
 21617  003400  CFF6 FFE9          	movff	tblptrl,fsr0l
 21618  003404  CFF7 FFEA          	movff	tblptrh,fsr0h
 21619  003408  50EF               	movf	indf0,w,c
 21620  00340A                     i2u608_40:
 21621  00340A  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 21622  00340C  5001               	movf	??_USBStdGetDscHandler,w,c
 21623  00340E  6E44               	movwf	_inPipes+4,c	;volatile
 21624  003410  6A45               	clrf	_inPipes+5,c	;volatile
 21625                           
 21626                           ;usb_device.c: 2092: }
 21627  003412  0012               	return	
 21628  003414                     i2l540:
 21629                           
 21630                           ;usb_device.c: 2102: else
 21631                           ;usb_device.c: 2103: {
 21632                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
 21633  003414  0E00               	movlw	0
 21634  003416  6E43               	movwf	_inPipes+3,c	;volatile
 21635                           
 21636                           ;usb_device.c: 2105: }
 21637                           ;usb_device.c: 2106: break;
 21638  003418  0012               	return	
 21639  00341A                     
 21640                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
 21641  00341A  0E00               	movlw	0
 21642  00341C  6E43               	movwf	_inPipes+3,c	;volatile
 21643                           
 21644                           ;usb_device.c: 2110: }
 21645                           
 21646                           ;usb_device.c: 2109: break;
 21647  00341E  0012               	return	
 21648  003420                     i2l533:
 21649  003420  0104               	movlb	4	; () banked
 21650  003422  5133               	movf	51,w,b	;volatile
 21651                           
 21652                           ; Switch size 1, requested type "space"
 21653                           ; Number of cases is 3, Range of values is 1 to 3
 21654                           ; switch strategies available:
 21655                           ; Name         Instructions Cycles
 21656                           ; simple_byte           10     6 (average)
 21657                           ;	Chosen strategy is simple_byte
 21658  003424  0A01               	xorlw	1	; case 1
 21659  003426  B4D8               	btfsc	status,2,c
 21660  003428  D782               	goto	i2l534
 21661  00342A  0A03               	xorlw	3	; case 2
 21662  00342C  B4D8               	btfsc	status,2,c
 21663  00342E  D788               	goto	i2l536
 21664  003430  0A01               	xorlw	1	; case 3
 21665  003432  B4D8               	btfsc	status,2,c
 21666  003434  D7C8               	goto	i2l539
 21667  003436  D7F1               	goto	i2l542
 21668  003438                     __end_of_USBStdGetDscHandler:
 21669                           	opt stack 0
 21670                           pclatu	equ	0xFFB
 21671                           pclath	equ	0xFFA
 21672                           tblptru	equ	0xFF8
 21673                           tblptrh	equ	0xFF7
 21674                           tblptrl	equ	0xFF6
 21675                           tablat	equ	0xFF5
 21676                           prodh	equ	0xFF4
 21677                           prodl	equ	0xFF3
 21678                           intcon	equ	0xFF2
 21679                           indf0	equ	0xFEF
 21680                           postinc0	equ	0xFEE
 21681                           fsr0h	equ	0xFEA
 21682                           fsr0l	equ	0xFE9
 21683                           wreg	equ	0xFE8
 21684                           indf1	equ	0xFE7
 21685                           postdec1	equ	0xFE5
 21686                           fsr1h	equ	0xFE2
 21687                           fsr1l	equ	0xFE1
 21688                           indf2	equ	0xFDF
 21689                           postinc2	equ	0xFDE
 21690                           postdec2	equ	0xFDD
 21691                           plusw2	equ	0xFDB
 21692                           fsr2h	equ	0xFDA
 21693                           fsr2l	equ	0xFD9
 21694                           status	equ	0xFD8
 21695                           
 21696 ;; *************** function _USBStdFeatureReqHandler *****************
 21697 ;; Defined at:
 21698 ;;		line 2754 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 21699 ;; Parameters:    Size  Location     Type
 21700 ;;		None
 21701 ;; Auto vars:     Size  Location     Type
 21702 ;;  p               2   24[COMRAM] PTR struct __BDT
 21703 ;;		 -> RAM(2047), NULL(0), BDT(48), 
 21704 ;;  pUEP            2   21[COMRAM] PTR unsigned char 
 21705 ;;		 -> UEP0(1), 
 21706 ;;  current_ep_d    1   23[COMRAM] struct .
 21707 ;; Return value:  Size  Location     Type
 21708 ;;                  1    wreg      void 
 21709 ;; Registers used:
 21710 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21711 ;; Tracked objects:
 21712 ;;		On entry : 0/0
 21713 ;;		On exit  : 0/0
 21714 ;;		Unchanged: 0/0
 21715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21716 ;;      Params:         0       0       0       0       0       0       0       0       0
 21717 ;;      Locals:         5       0       0       0       0       0       0       0       0
 21718 ;;      Temps:          1       0       0       0       0       0       0       0       0
 21719 ;;      Totals:         6       0       0       0       0       0       0       0       0
 21720 ;;Total ram usage:        6 bytes
 21721 ;; Hardware stack levels used:    1
 21722 ;; Hardware stack levels required when called:    4
 21723 ;; This function calls:
 21724 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 21725 ;; This function is called by:
 21726 ;;		_USBCheckStdRequest
 21727 ;; This function uses a non-reentrant model
 21728 ;;
 21729                           
 21730                           	psect	text82
 21731  002256                     __ptext82:
 21732                           	opt stack 0
 21733  002256                     _USBStdFeatureReqHandler:
 21734                           	opt stack 16
 21735                           
 21736                           ;usb_device.c: 2756: BDT_ENTRY *p;
 21737                           ;usb_device.c: 2757: EP_STATUS current_ep_data;
 21738                           ;usb_device.c: 2761: unsigned char* pUEP;
 21739                           ;usb_device.c: 2799: if((SetupPkt.bFeature == 1)&&
 21740                           ;usb_device.c: 2800: (SetupPkt.Recipient == (0x00)))
 21741                           
 21742                           ;incstack = 0
 21743  002256  0104               	movlb	4	; () banked
 21744  002258  0532               	decf	50,w,b	;volatile
 21745  00225A  A4D8               	btfss	status,2,c
 21746  00225C  D00F               	goto	i2l626
 21747                           
 21748                           ; BSR set to: 4
 21749  00225E  5130               	movf	48,w,b	;volatile
 21750  002260  0B1F               	andlw	31
 21751  002262  0900               	iorlw	0
 21752  002264  A4D8               	btfss	status,2,c
 21753  002266  D00A               	goto	i2l626
 21754                           
 21755                           ; BSR set to: 4
 21756                           ;usb_device.c: 2801: {
 21757                           ;usb_device.c: 2802: inPipes[0].info.bits.busy = 1;
 21758  002268  8E43               	bsf	_inPipes+3,7,c	;volatile
 21759                           
 21760                           ; BSR set to: 4
 21761                           ;usb_device.c: 2803: if(SetupPkt.bRequest == 3)
 21762  00226A  0E03               	movlw	3
 21763  00226C  1931               	xorwf	49,w,b	;volatile
 21764  00226E  A4D8               	btfss	status,2,c
 21765  002270  D002               	goto	i2l625
 21766                           
 21767                           ; BSR set to: 4
 21768                           ;usb_device.c: 2804: RemoteWakeup = 1;
 21769  002272  0E01               	movlw	1
 21770  002274  D001               	goto	L22
 21771  002276                     i2l625:
 21772                           
 21773                           ;usb_device.c: 2805: else
 21774                           ;usb_device.c: 2806: RemoteWakeup = 0;
 21775                           
 21776                           ; BSR set to: 1
 21777  002276  0E00               	movlw	0
 21778  002278                     L22:
 21779  002278  0101               	movlb	1	; () banked
 21780  00227A  6FFA               	movwf	_RemoteWakeup& (0+255),b	;volatile
 21781  00227C                     i2l626:
 21782                           
 21783                           ;usb_device.c: 2807: }
 21784                           ;usb_device.c: 2810: if((SetupPkt.bFeature == 0)&&
 21785                           ;usb_device.c: 2811: (SetupPkt.Recipient == (0x02))&&
 21786                           ;usb_device.c: 2812: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 21787                           ;usb_device.c: 2813: (USBDeviceState == CONFIGURED_STATE))
 21788                           
 21789                           ; BSR set to: 1
 21790  00227C  0104               	movlb	4	; () banked
 21791  00227E  5132               	movf	50,w,b	;volatile
 21792  002280  A4D8               	btfss	status,2,c
 21793  002282  0012               	return	
 21794                           
 21795                           ; BSR set to: 4
 21796  002284  5130               	movf	48,w,b	;volatile
 21797  002286  0B1F               	andlw	31
 21798  002288  0A02               	xorlw	2
 21799  00228A  A4D8               	btfss	status,2,c
 21800  00228C  0012               	return	
 21801                           
 21802                           ; BSR set to: 4
 21803  00228E  5134               	movf	52,w,b	;volatile
 21804  002290  0B0F               	andlw	15
 21805  002292  0900               	iorlw	0
 21806  002294  B4D8               	btfsc	status,2,c
 21807  002296  0012               	return	
 21808                           
 21809                           ; BSR set to: 4
 21810  002298  5134               	movf	52,w,b	;volatile
 21811  00229A  0B0F               	andlw	15
 21812  00229C  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21813  00229E  0E03               	movlw	3
 21814  0022A0  6015               	cpfslt	??_USBStdFeatureReqHandler,c
 21815  0022A2  0012               	return	
 21816                           
 21817                           ; BSR set to: 4
 21818  0022A4  0E20               	movlw	32
 21819  0022A6  1858               	xorwf	_USBDeviceState,w,c	;volatile
 21820  0022A8  A4D8               	btfss	status,2,c
 21821  0022AA  0012               	return	
 21822                           
 21823                           ; BSR set to: 4
 21824                           ;usb_device.c: 2814: {
 21825                           ;usb_device.c: 2817: inPipes[0].info.bits.busy = 1;
 21826  0022AC  8E43               	bsf	_inPipes+3,7,c	;volatile
 21827                           
 21828                           ;usb_device.c: 2820: if(SetupPkt.EPDir == 0)
 21829  0022AE  BF34               	btfsc	52,7,b	;volatile
 21830  0022B0  D019               	goto	i2l628
 21831                           
 21832                           ; BSR set to: 4
 21833                           ;usb_device.c: 2821: {
 21834                           ;usb_device.c: 2822: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 21835  0022B2  5134               	movf	52,w,b	;volatile
 21836  0022B4  0B0F               	andlw	15
 21837  0022B6  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21838  0022B8  5015               	movf	??_USBStdFeatureReqHandler,w,c
 21839  0022BA  0D02               	mullw	2
 21840  0022BC  0EC8               	movlw	low _pBDTEntryOut
 21841  0022BE  24F3               	addwf	prodl,w,c
 21842  0022C0  6ED9               	movwf	fsr2l,c
 21843  0022C2  0E02               	movlw	high _pBDTEntryOut
 21844  0022C4  20F4               	addwfc	prodh,w,c
 21845  0022C6  6EDA               	movwf	fsr2h,c
 21846  0022C8  CFDE F019          	movff	postinc2,USBStdFeatureReqHandler@p
 21847  0022CC  CFDD F01A          	movff	postdec2,USBStdFeatureReqHandler@p+1
 21848                           
 21849                           ;usb_device.c: 2823: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 21850  0022D0  5134               	movf	52,w,b	;volatile
 21851  0022D2  0B0F               	andlw	15
 21852  0022D4  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21853  0022D6  5015               	movf	??_USBStdFeatureReqHandler,w,c
 21854  0022D8  0D01               	mullw	1
 21855  0022DA  0ED2               	movlw	low _ep_data_out
 21856  0022DC  24F3               	addwf	prodl,w,c
 21857  0022DE  6ED9               	movwf	fsr2l,c
 21858  0022E0  0E02               	movlw	high _ep_data_out
 21859  0022E2  D018               	goto	L23
 21860  0022E4                     i2l628:
 21861                           
 21862                           ; BSR set to: 4
 21863                           ;usb_device.c: 2825: else
 21864                           ;usb_device.c: 2826: {
 21865                           ;usb_device.c: 2827: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 21866                           
 21867                           ; BSR set to: 4
 21868  0022E4  5134               	movf	52,w,b	;volatile
 21869  0022E6  0B0F               	andlw	15
 21870  0022E8  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21871  0022EA  5015               	movf	??_USBStdFeatureReqHandler,w,c
 21872  0022EC  0D02               	mullw	2
 21873  0022EE  0E46               	movlw	low _pBDTEntryIn
 21874  0022F0  24F3               	addwf	prodl,w,c
 21875  0022F2  6ED9               	movwf	fsr2l,c
 21876  0022F4  0E00               	movlw	high _pBDTEntryIn
 21877  0022F6  20F4               	addwfc	prodh,w,c
 21878  0022F8  6EDA               	movwf	fsr2h,c
 21879  0022FA  CFDE F019          	movff	postinc2,USBStdFeatureReqHandler@p
 21880  0022FE  CFDD F01A          	movff	postdec2,USBStdFeatureReqHandler@p+1
 21881                           
 21882                           ;usb_device.c: 2828: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 21883  002302  5134               	movf	52,w,b	;volatile
 21884  002304  0B0F               	andlw	15
 21885  002306  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21886  002308  5015               	movf	??_USBStdFeatureReqHandler,w,c
 21887  00230A  0D01               	mullw	1
 21888  00230C  0ED5               	movlw	low _ep_data_in
 21889  00230E  24F3               	addwf	prodl,w,c
 21890  002310  6ED9               	movwf	fsr2l,c
 21891  002312  0E02               	movlw	high _ep_data_in
 21892  002314                     L23:
 21893  002314  20F4               	addwfc	prodh,w,c
 21894  002316  6EDA               	movwf	fsr2h,c
 21895  002318  50DF               	movf	indf2,w,c
 21896  00231A  6E18               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 21897                           
 21898                           ; BSR set to: 4
 21899                           ;usb_device.c: 2829: }
 21900                           ;usb_device.c: 2835: if(current_ep_data.bits.ping_pong_state == 0)
 21901                           
 21902                           ; BSR set to: 4
 21903  00231C  B018               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 21904  00231E  D006               	goto	i2l630
 21905                           
 21906                           ; BSR set to: 4
 21907                           ;usb_device.c: 2836: {
 21908                           ;usb_device.c: 2837: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 21909  002320  0EFB               	movlw	251
 21910  002322  1419               	andwf	USBStdFeatureReqHandler@p,w,c
 21911  002324  6E19               	movwf	USBStdFeatureReqHandler@p,c
 21912  002326  0EFF               	movlw	255
 21913  002328  141A               	andwf	USBStdFeatureReqHandler@p+1,w,c
 21914  00232A  D004               	goto	L24
 21915  00232C                     i2l630:
 21916                           
 21917                           ; BSR set to: 4
 21918                           ;usb_device.c: 2839: else
 21919                           ;usb_device.c: 2840: {
 21920                           ;usb_device.c: 2841: p = (BDT_ENTRY*)(((uintptr_t)p) | 0x0004);
 21921                           
 21922                           ; BSR set to: 4
 21923  00232C  0E04               	movlw	4
 21924  00232E  1019               	iorwf	USBStdFeatureReqHandler@p,w,c
 21925  002330  6E19               	movwf	USBStdFeatureReqHandler@p,c
 21926  002332  501A               	movf	USBStdFeatureReqHandler@p+1,w,c
 21927  002334                     L24:
 21928  002334  6E1A               	movwf	USBStdFeatureReqHandler@p+1,c
 21929                           
 21930                           ; BSR set to: 4
 21931                           ;usb_device.c: 2842: }
 21932                           ;usb_device.c: 2847: if(SetupPkt.EPDir == 0)
 21933                           
 21934                           ; BSR set to: 4
 21935  002336  BF34               	btfsc	52,7,b	;volatile
 21936  002338  D00A               	goto	i2l632
 21937                           
 21938                           ; BSR set to: 4
 21939                           ;usb_device.c: 2848: {
 21940                           ;usb_device.c: 2849: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 21941  00233A  5134               	movf	52,w,b	;volatile
 21942  00233C  0B0F               	andlw	15
 21943  00233E  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21944  002340  5015               	movf	??_USBStdFeatureReqHandler,w,c
 21945  002342  0D02               	mullw	2
 21946  002344  0EC8               	movlw	low _pBDTEntryOut
 21947  002346  24F3               	addwf	prodl,w,c
 21948  002348  6ED9               	movwf	fsr2l,c
 21949  00234A  0E02               	movlw	high _pBDTEntryOut
 21950  00234C  D009               	goto	L25
 21951  00234E                     i2l632:
 21952                           
 21953                           ; BSR set to: 4
 21954                           ;usb_device.c: 2851: else
 21955                           ;usb_device.c: 2852: {
 21956                           ;usb_device.c: 2853: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 21957                           
 21958                           ; BSR set to: 4
 21959  00234E  5134               	movf	52,w,b	;volatile
 21960  002350  0B0F               	andlw	15
 21961  002352  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21962  002354  5015               	movf	??_USBStdFeatureReqHandler,w,c
 21963  002356  0D02               	mullw	2
 21964  002358  0E46               	movlw	low _pBDTEntryIn
 21965  00235A  24F3               	addwf	prodl,w,c
 21966  00235C  6ED9               	movwf	fsr2l,c
 21967  00235E  0E00               	movlw	high _pBDTEntryIn
 21968  002360                     L25:
 21969  002360  20F4               	addwfc	prodh,w,c
 21970  002362  6EDA               	movwf	fsr2h,c
 21971  002364  C019  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 21972  002368  C01A  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 21973                           
 21974                           ; BSR set to: 4
 21975                           ;usb_device.c: 2854: }
 21976                           ;usb_device.c: 2857: if(SetupPkt.bRequest == 3)
 21977                           
 21978                           ; BSR set to: 4
 21979  00236C  0E03               	movlw	3
 21980  00236E  1931               	xorwf	49,w,b	;volatile
 21981  002370  A4D8               	btfss	status,2,c
 21982  002372  D02D               	goto	i2l634
 21983                           
 21984                           ; BSR set to: 4
 21985                           ;usb_device.c: 2858: {
 21986                           ;usb_device.c: 2859: if(p->STAT.UOWN == 1)
 21987  002374  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 21988  002378  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 21989  00237C  AEDF               	btfss	indf2,7,c
 21990  00237E  D01A               	goto	i2l637
 21991                           
 21992                           ; BSR set to: 4
 21993                           ;usb_device.c: 2860: {
 21994                           ;usb_device.c: 2863: if(SetupPkt.EPDir == 0)
 21995  002380  BF34               	btfsc	52,7,b	;volatile
 21996  002382  D00A               	goto	i2l636
 21997                           
 21998                           ; BSR set to: 4
 21999                           ;usb_device.c: 2864: {
 22000                           ;usb_device.c: 2865: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 22001  002384  5134               	movf	52,w,b	;volatile
 22002  002386  0B0F               	andlw	15
 22003  002388  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 22004  00238A  5015               	movf	??_USBStdFeatureReqHandler,w,c
 22005  00238C  0D01               	mullw	1
 22006  00238E  0ED2               	movlw	low _ep_data_out
 22007  002390  24F3               	addwf	prodl,w,c
 22008  002392  6ED9               	movwf	fsr2l,c
 22009  002394  0E02               	movlw	high _ep_data_out
 22010  002396  D00A               	goto	L26
 22011  002398                     i2l636:
 22012                           
 22013                           ;usb_device.c: 2867: else
 22014                           ;usb_device.c: 2868: {
 22015                           ;usb_device.c: 2869: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 22016                           
 22017                           ; BSR set to: 2
 22018  002398  0104               	movlb	4	; () banked
 22019  00239A  5134               	movf	52,w,b	;volatile
 22020  00239C  0B0F               	andlw	15
 22021  00239E  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 22022  0023A0  5015               	movf	??_USBStdFeatureReqHandler,w,c
 22023  0023A2  0D01               	mullw	1
 22024  0023A4  0ED5               	movlw	low _ep_data_in
 22025  0023A6  24F3               	addwf	prodl,w,c
 22026  0023A8  6ED9               	movwf	fsr2l,c
 22027  0023AA  0E02               	movlw	high _ep_data_in
 22028  0023AC                     L26:
 22029  0023AC  20F4               	addwfc	prodh,w,c
 22030  0023AE  6EDA               	movwf	fsr2h,c
 22031  0023B0  0102               	movlb	2	; () banked
 22032  0023B2  82DF               	bsf	indf2,1,c
 22033  0023B4                     i2l637:
 22034                           
 22035                           ;usb_device.c: 2870: }
 22036                           ;usb_device.c: 2871: }
 22037                           ;usb_device.c: 2874: p->STAT.Val |= 0x04;
 22038                           
 22039                           ; BSR set to: 2
 22040                           
 22041                           ; BSR set to: 2
 22042  0023B4  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 22043  0023B8  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 22044  0023BC  0E00               	movlw	0
 22045  0023BE  84DB               	bsf	plusw2,2,c
 22046                           
 22047                           ;usb_device.c: 2875: p->STAT.Val |= 0x80;
 22048  0023C0  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 22049  0023C4  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 22050  0023C8  0E00               	movlw	0
 22051  0023CA  8EDB               	bsf	plusw2,7,c
 22052                           
 22053                           ;usb_device.c: 2876: }
 22054  0023CC  0012               	return	
 22055  0023CE                     i2l634:
 22056                           
 22057                           ;usb_device.c: 2877: else
 22058                           ;usb_device.c: 2878: {
 22059                           ;usb_device.c: 2882: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 22060  0023CE  0E04               	movlw	4
 22061  0023D0  1819               	xorwf	USBStdFeatureReqHandler@p,w,c
 22062  0023D2  6E19               	movwf	USBStdFeatureReqHandler@p,c
 22063  0023D4  501A               	movf	USBStdFeatureReqHandler@p+1,w,c
 22064  0023D6  6E1A               	movwf	USBStdFeatureReqHandler@p+1,c
 22065                           
 22066                           ;usb_device.c: 2884: if(p->STAT.UOWN == 1)
 22067  0023D8  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 22068  0023DC  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 22069  0023E0  AEDF               	btfss	indf2,7,c
 22070  0023E2  D01B               	goto	i2l639
 22071                           
 22072                           ;usb_device.c: 2885: {
 22073                           ;usb_device.c: 2888: p->STAT.Val &= (~0x80);
 22074  0023E4  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 22075  0023E8  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 22076  0023EC  0E7F               	movlw	127
 22077  0023EE  16DF               	andwf	indf2,f,c
 22078                           
 22079                           ;usb_device.c: 2889: p->STAT.Val |= 0x40;
 22080  0023F0  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 22081  0023F4  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 22082  0023F8  0E00               	movlw	0
 22083  0023FA  8CDB               	bsf	plusw2,6,c
 22084                           
 22085                           ;usb_device.c: 2890: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 22086  0023FC  0E00               	movlw	0
 22087  0023FE  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 22088  002400  0E05               	movlw	5
 22089  002402  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 22090  002404  C019  F00F         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 22091  002408  C01A  F010         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 22092  00240C  0E00               	movlw	0
 22093  00240E  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 22094  002410  0E02               	movlw	2
 22095  002412  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 22096  002414  ECB4  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 22097                           
 22098                           ;usb_device.c: 2891: }
 22099  002418  D006               	goto	i2l640
 22100  00241A                     i2l639:
 22101                           
 22102                           ;usb_device.c: 2892: else
 22103                           ;usb_device.c: 2893: {
 22104                           ;usb_device.c: 2895: p->STAT.Val |= 0x40;
 22105  00241A  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 22106  00241E  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 22107  002422  0E00               	movlw	0
 22108  002424  8CDB               	bsf	plusw2,6,c
 22109  002426                     i2l640:
 22110                           
 22111                           ;usb_device.c: 2896: }
 22112                           ;usb_device.c: 2900: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 22113  002426  0E04               	movlw	4
 22114  002428  1819               	xorwf	USBStdFeatureReqHandler@p,w,c
 22115  00242A  6E19               	movwf	USBStdFeatureReqHandler@p,c
 22116  00242C  501A               	movf	USBStdFeatureReqHandler@p+1,w,c
 22117  00242E  6E1A               	movwf	USBStdFeatureReqHandler@p+1,c
 22118                           
 22119                           ;usb_device.c: 2906: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 22120  002430  B218               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 22121  002432  D006               	goto	i2u630_40
 22122  002434  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 22123  002438  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 22124  00243C  AEDF               	btfss	indf2,7,c
 22125  00243E  D030               	goto	i2l641
 22126  002440                     i2u630_40:
 22127                           
 22128                           ;usb_device.c: 2907: {
 22129                           ;usb_device.c: 2908: if(SetupPkt.EPDir == 0)
 22130  002440  0104               	movlb	4	; () banked
 22131  002442  BF34               	btfsc	52,7,b	;volatile
 22132  002444  D00A               	goto	i2l644
 22133                           
 22134                           ; BSR set to: 4
 22135                           ;usb_device.c: 2909: {
 22136                           ;usb_device.c: 2910: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 22137  002446  5134               	movf	52,w,b	;volatile
 22138  002448  0B0F               	andlw	15
 22139  00244A  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 22140  00244C  5015               	movf	??_USBStdFeatureReqHandler,w,c
 22141  00244E  0D01               	mullw	1
 22142  002450  0ED2               	movlw	low _ep_data_out
 22143  002452  24F3               	addwf	prodl,w,c
 22144  002454  6ED9               	movwf	fsr2l,c
 22145  002456  0E02               	movlw	high _ep_data_out
 22146  002458  D00A               	goto	L27
 22147  00245A                     i2l644:
 22148                           
 22149                           ;usb_device.c: 2912: else
 22150                           ;usb_device.c: 2913: {
 22151                           ;usb_device.c: 2914: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 22152                           
 22153                           ; BSR set to: 2
 22154  00245A  0104               	movlb	4	; () banked
 22155  00245C  5134               	movf	52,w,b	;volatile
 22156  00245E  0B0F               	andlw	15
 22157  002460  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 22158  002462  5015               	movf	??_USBStdFeatureReqHandler,w,c
 22159  002464  0D01               	mullw	1
 22160  002466  0ED5               	movlw	low _ep_data_in
 22161  002468  24F3               	addwf	prodl,w,c
 22162  00246A  6ED9               	movwf	fsr2l,c
 22163  00246C  0E02               	movlw	high _ep_data_in
 22164  00246E                     L27:
 22165  00246E  20F4               	addwfc	prodh,w,c
 22166  002470  6EDA               	movwf	fsr2h,c
 22167  002472  0102               	movlb	2	; () banked
 22168  002474  92DF               	bcf	indf2,1,c
 22169                           
 22170                           ; BSR set to: 2
 22171                           ;usb_device.c: 2915: }
 22172                           ;usb_device.c: 2917: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 22173                           
 22174                           ; BSR set to: 2
 22175  002476  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 22176  00247A  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 22177  00247E  0E3B               	movlw	59
 22178  002480  16DF               	andwf	indf2,f,c
 22179                           
 22180                           ; BSR set to: 2
 22181                           ;usb_device.c: 2920: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 22182  002482  0E00               	movlw	0
 22183  002484  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 22184  002486  0E05               	movlw	5
 22185  002488  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 22186  00248A  C019  F00F         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 22187  00248E  C01A  F010         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 22188  002492  0E00               	movlw	0
 22189  002494  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 22190  002496  0E02               	movlw	2
 22191  002498  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 22192  00249A  ECB4  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 22193                           
 22194                           ;usb_device.c: 2921: }
 22195  00249E  D006               	goto	i2l646
 22196  0024A0                     i2l641:
 22197                           
 22198                           ;usb_device.c: 2922: else
 22199                           ;usb_device.c: 2923: {
 22200                           ;usb_device.c: 2925: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 22201  0024A0  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 22202  0024A4  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 22203  0024A8  0E3B               	movlw	59
 22204  0024AA  16DF               	andwf	indf2,f,c
 22205  0024AC                     i2l646:
 22206                           
 22207                           ;usb_device.c: 2926: }
 22208                           ;usb_device.c: 2973: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 22209  0024AC  0104               	movlb	4	; () banked
 22210  0024AE  5134               	movf	52,w,b	;volatile
 22211  0024B0  0B0F               	andlw	15
 22212  0024B2  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 22213  0024B4  5015               	movf	??_USBStdFeatureReqHandler,w,c
 22214  0024B6  0D01               	mullw	1
 22215  0024B8  0E70               	movlw	112
 22216  0024BA  24F3               	addwf	prodl,w,c
 22217  0024BC  6E16               	movwf	USBStdFeatureReqHandler@pUEP,c
 22218  0024BE  0E0F               	movlw	15
 22219  0024C0  20F4               	addwfc	prodh,w,c
 22220  0024C2  6E17               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 22221                           
 22222                           ; BSR set to: 4
 22223                           ;usb_device.c: 2977: *pUEP &= ~0x0001;
 22224  0024C4  C016  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 22225  0024C8  C017  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 22226  0024CC  0EFE               	movlw	254
 22227  0024CE  16DF               	andwf	indf2,f,c
 22228                           
 22229                           ; BSR set to: 4
 22230  0024D0  0012               	return	
 22231  0024D2                     __end_of_USBStdFeatureReqHandler:
 22232                           	opt stack 0
 22233                           pclatu	equ	0xFFB
 22234                           pclath	equ	0xFFA
 22235                           tblptru	equ	0xFF8
 22236                           tblptrh	equ	0xFF7
 22237                           tblptrl	equ	0xFF6
 22238                           tablat	equ	0xFF5
 22239                           prodh	equ	0xFF4
 22240                           prodl	equ	0xFF3
 22241                           intcon	equ	0xFF2
 22242                           indf0	equ	0xFEF
 22243                           postinc0	equ	0xFEE
 22244                           fsr0h	equ	0xFEA
 22245                           fsr0l	equ	0xFE9
 22246                           wreg	equ	0xFE8
 22247                           indf1	equ	0xFE7
 22248                           postdec1	equ	0xFE5
 22249                           fsr1h	equ	0xFE2
 22250                           fsr1l	equ	0xFE1
 22251                           indf2	equ	0xFDF
 22252                           postinc2	equ	0xFDE
 22253                           postdec2	equ	0xFDD
 22254                           plusw2	equ	0xFDB
 22255                           fsr2h	equ	0xFDA
 22256                           fsr2l	equ	0xFD9
 22257                           status	equ	0xFD8
 22258                           
 22259 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 22260 ;; Defined at:
 22261 ;;		line 29 in file "usb/usb_events.c"
 22262 ;; Parameters:    Size  Location     Type
 22263 ;;  event           2   12[COMRAM] enum E4179
 22264 ;;  pdata           2   14[COMRAM] PTR void 
 22265 ;;		 -> RAM(2047), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 22266 ;;		 -> BDT(48), 
 22267 ;;  size            2   16[COMRAM] unsigned int 
 22268 ;; Auto vars:     Size  Location     Type
 22269 ;;		None
 22270 ;; Return value:  Size  Location     Type
 22271 ;;                  1    wreg      unsigned char 
 22272 ;; Registers used:
 22273 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22274 ;; Tracked objects:
 22275 ;;		On entry : 0/0
 22276 ;;		On exit  : 0/0
 22277 ;;		Unchanged: 0/0
 22278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22279 ;;      Params:         6       0       0       0       0       0       0       0       0
 22280 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22281 ;;      Temps:          2       0       0       0       0       0       0       0       0
 22282 ;;      Totals:         8       0       0       0       0       0       0       0       0
 22283 ;;Total ram usage:        8 bytes
 22284 ;; Hardware stack levels used:    1
 22285 ;; Hardware stack levels required when called:    3
 22286 ;; This function calls:
 22287 ;;		_CDCInitEP
 22288 ;;		_USBCheckCDCRequest
 22289 ;; This function is called by:
 22290 ;;		_USBDeviceTasks
 22291 ;;		_USBStdSetCfgHandler
 22292 ;;		_USBSuspend
 22293 ;;		_USBWakeFromSuspend
 22294 ;;		_USBCtrlTrfSetupHandler
 22295 ;;		_USBCheckStdRequest
 22296 ;;		_USBStdFeatureReqHandler
 22297 ;; This function uses a non-reentrant model
 22298 ;;
 22299                           
 22300                           	psect	text83
 22301  004F68                     __ptext83:
 22302                           	opt stack 0
 22303  004F68                     _USER_USB_CALLBACK_EVENT_HANDLER:
 22304                           	opt stack 20
 22305                           
 22306                           ;usb_events.c: 31: switch( (int) event )
 22307                           
 22308                           ;incstack = 0
 22309  004F68  D006               	goto	i2l245
 22310  004F6A                     
 22311                           ;usb_events.c: 56: CDCInitEP();
 22312  004F6A  ECF3  F026         	call	_CDCInitEP	;wreg free
 22313                           
 22314                           ;usb_events.c: 60: break;
 22315                           
 22316                           ;usb_events.c: 59: case EVENT_SET_DESCRIPTOR:
 22317                           
 22318                           ;usb_events.c: 57: break;
 22319  004F6E  0012               	return	
 22320  004F70                     
 22321                           ;usb_events.c: 65: USBCheckCDCRequest();
 22322  004F70  ECE3  F021         	call	_USBCheckCDCRequest	;wreg free
 22323                           
 22324                           ;usb_events.c: 76: }
 22325                           
 22326                           ;usb_events.c: 75: break;
 22327                           
 22328                           ;usb_events.c: 74: default:
 22329                           
 22330                           ;usb_events.c: 72: break;
 22331                           
 22332                           ;usb_events.c: 71: case EVENT_TRANSFER_TERMINATED:
 22333                           
 22334                           ;usb_events.c: 69: break;
 22335                           
 22336                           ;usb_events.c: 68: case EVENT_BUS_ERROR:
 22337                           
 22338                           ;usb_events.c: 66: break;
 22339  004F74  0012               	return	
 22340  004F76                     i2l245:
 22341  004F76  C00D  F013         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 22342  004F7A  C00E  F014         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 22343                           
 22344                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 22345                           ; Switch size 1, requested type "space"
 22346                           ; Number of cases is 2, Range of values is 0 to 127
 22347                           ; switch strategies available:
 22348                           ; Name         Instructions Cycles
 22349                           ; simple_byte            7     4 (average)
 22350                           ;	Chosen strategy is simple_byte
 22351  004F7E  5014               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 22352  004F80  0A00               	xorlw	0	; case 0
 22353  004F82  B4D8               	btfsc	status,2,c
 22354  004F84  D004               	goto	i2l11204
 22355  004F86  0A7F               	xorlw	127	; case 127
 22356  004F88  A4D8               	btfss	status,2,c
 22357  004F8A  0012               	return	
 22358  004F8C  D018               	goto	i2l11206
 22359  004F8E                     i2l11204:
 22360                           
 22361                           ; Switch size 1, requested type "space"
 22362                           ; Number of cases is 8, Range of values is 1 to 117
 22363                           ; switch strategies available:
 22364                           ; Name         Instructions Cycles
 22365                           ; simple_byte           25    13 (average)
 22366                           ;	Chosen strategy is simple_byte
 22367  004F8E  5013               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 22368  004F90  0A01               	xorlw	1	; case 1
 22369  004F92  B4D8               	btfsc	status,2,c
 22370  004F94  D7EA               	goto	i2l251
 22371  004F96  0A03               	xorlw	3	; case 2
 22372  004F98  B4D8               	btfsc	status,2,c
 22373  004F9A  0012               	return	
 22374  004F9C  0A01               	xorlw	1	; case 3
 22375  004F9E  B4D8               	btfsc	status,2,c
 22376  004FA0  D7E7               	goto	i2l253
 22377  004FA2  0A06               	xorlw	6	; case 5
 22378  004FA4  B4D8               	btfsc	status,2,c
 22379  004FA6  0012               	return	
 22380  004FA8  0A77               	xorlw	119	; case 114
 22381  004FAA  B4D8               	btfsc	status,2,c
 22382  004FAC  0012               	return	
 22383  004FAE  0A01               	xorlw	1	; case 115
 22384  004FB0  B4D8               	btfsc	status,2,c
 22385  004FB2  0012               	return	
 22386  004FB4  0A07               	xorlw	7	; case 116
 22387  004FB6  B4D8               	btfsc	status,2,c
 22388  004FB8  0012               	return	
 22389  004FBA  0A01               	xorlw	1	; case 117
 22390  004FBC  0012               	return	
 22391  004FBE                     i2l11206:
 22392                           
 22393                           ; Switch size 1, requested type "space"
 22394                           ; Number of cases is 1, Range of values is 255 to 255
 22395                           ; switch strategies available:
 22396                           ; Name         Instructions Cycles
 22397                           ; simple_byte            4     3 (average)
 22398                           ;	Chosen strategy is simple_byte
 22399  004FBE  5013               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 22400  004FC0  0AFF               	xorlw	255	; case 255
 22401  004FC2  0012               	return	
 22402  004FC4                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 22403                           	opt stack 0
 22404                           pclatu	equ	0xFFB
 22405                           pclath	equ	0xFFA
 22406                           tblptru	equ	0xFF8
 22407                           tblptrh	equ	0xFF7
 22408                           tblptrl	equ	0xFF6
 22409                           tablat	equ	0xFF5
 22410                           prodh	equ	0xFF4
 22411                           prodl	equ	0xFF3
 22412                           intcon	equ	0xFF2
 22413                           indf0	equ	0xFEF
 22414                           postinc0	equ	0xFEE
 22415                           fsr0h	equ	0xFEA
 22416                           fsr0l	equ	0xFE9
 22417                           wreg	equ	0xFE8
 22418                           indf1	equ	0xFE7
 22419                           postdec1	equ	0xFE5
 22420                           fsr1h	equ	0xFE2
 22421                           fsr1l	equ	0xFE1
 22422                           indf2	equ	0xFDF
 22423                           postinc2	equ	0xFDE
 22424                           postdec2	equ	0xFDD
 22425                           plusw2	equ	0xFDB
 22426                           fsr2h	equ	0xFDA
 22427                           fsr2l	equ	0xFD9
 22428                           status	equ	0xFD8
 22429                           
 22430 ;; *************** function _USBCheckCDCRequest *****************
 22431 ;; Defined at:
 22432 ;;		line 147 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device_cdc.c"
 22433 ;; Parameters:    Size  Location     Type
 22434 ;;		None
 22435 ;; Auto vars:     Size  Location     Type
 22436 ;;		None
 22437 ;; Return value:  Size  Location     Type
 22438 ;;                  1    wreg      void 
 22439 ;; Registers used:
 22440 ;;		wreg, status,2, status,0
 22441 ;; Tracked objects:
 22442 ;;		On entry : 0/0
 22443 ;;		On exit  : 0/0
 22444 ;;		Unchanged: 0/0
 22445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22446 ;;      Params:         0       0       0       0       0       0       0       0       0
 22447 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22448 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22449 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22450 ;;Total ram usage:        0 bytes
 22451 ;; Hardware stack levels used:    1
 22452 ;; This function calls:
 22453 ;;		Nothing
 22454 ;; This function is called by:
 22455 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 22456 ;; This function uses a non-reentrant model
 22457 ;;
 22458                           
 22459                           	psect	text84
 22460  0043C6                     __ptext84:
 22461                           	opt stack 0
 22462  0043C6                     _USBCheckCDCRequest:
 22463                           	opt stack 22
 22464                           
 22465                           ;usb_device_cdc.c: 152: if(SetupPkt.Recipient != (0x01)) return;
 22466                           
 22467                           ;incstack = 0
 22468  0043C6  0104               	movlb	4	; () banked
 22469  0043C8  5130               	movf	48,w,b	;volatile
 22470  0043CA  0B1F               	andlw	31
 22471  0043CC  06E8               	decf	wreg,f,c
 22472  0043CE  A4D8               	btfss	status,2,c
 22473  0043D0  0012               	return	
 22474                           
 22475                           ; BSR set to: 4
 22476                           ;usb_device_cdc.c: 157: if(SetupPkt.RequestType != (0x20>>5)) return;
 22477                           
 22478                           ; BSR set to: 4
 22479                           
 22480                           ; BSR set to: 4
 22481  0043D2  3930               	swapf	48,w,b	;volatile
 22482  0043D4  32E8               	rrcf	wreg,f,c
 22483  0043D6  0B03               	andlw	3
 22484  0043D8  06E8               	decf	wreg,f,c
 22485  0043DA  A4D8               	btfss	status,2,c
 22486  0043DC  0012               	return	
 22487                           
 22488                           ; BSR set to: 4
 22489                           ;usb_device_cdc.c: 163: if((SetupPkt.bIntfID != 0x0)&&
 22490                           ;usb_device_cdc.c: 164: (SetupPkt.bIntfID != 0x01)) return;
 22491                           
 22492                           ; BSR set to: 4
 22493                           
 22494                           ; BSR set to: 4
 22495  0043DE  5134               	movf	52,w,b	;volatile
 22496  0043E0  B4D8               	btfsc	status,2,c
 22497  0043E2  D032               	goto	i2l802
 22498                           
 22499                           ; BSR set to: 4
 22500  0043E4  0534               	decf	52,w,b	;volatile
 22501  0043E6  A4D8               	btfss	status,2,c
 22502  0043E8  0012               	return	
 22503  0043EA  D02E               	goto	i2l802
 22504  0043EC                     
 22505                           ; BSR set to: 4
 22506                           ;usb_device_cdc.c: 171: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 22507                           
 22508                           ; BSR set to: 4
 22509  0043EC  0EB6               	movlw	low _dummy_encapsulated_cmd_response
 22510  0043EE  6E40               	movwf	_inPipes,c	;volatile
 22511  0043F0  0E03               	movlw	high _dummy_encapsulated_cmd_response
 22512  0043F2  6E41               	movwf	_inPipes+1,c	;volatile
 22513                           
 22514                           ; BSR set to: 4
 22515                           ;usb_device_cdc.c: 172: inPipes[0].wCount.Val = 0x08;
 22516  0043F4  0E00               	movlw	0
 22517  0043F6  6E45               	movwf	_inPipes+5,c	;volatile
 22518  0043F8  0E08               	movlw	8
 22519  0043FA  6E44               	movwf	_inPipes+4,c	;volatile
 22520                           
 22521                           ; BSR set to: 4
 22522                           ;usb_device_cdc.c: 173: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 22523  0043FC  8043               	bsf	_inPipes+3,0,c	;volatile
 22524                           
 22525                           ; BSR set to: 4
 22526                           ;usb_device_cdc.c: 174: inPipes[0].info.bits.busy = 1;
 22527  0043FE  8E43               	bsf	_inPipes+3,7,c	;volatile
 22528                           
 22529                           ;usb_device_cdc.c: 175: break;
 22530  004400  0012               	return	
 22531  004402                     
 22532                           ; BSR set to: 4
 22533                           ;usb_device_cdc.c: 178: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 22534                           
 22535                           ; BSR set to: 4
 22536  004402  0EB6               	movlw	low _dummy_encapsulated_cmd_response
 22537  004404  6E40               	movwf	_inPipes,c	;volatile
 22538  004406  0E03               	movlw	high _dummy_encapsulated_cmd_response
 22539  004408  6E41               	movwf	_inPipes+1,c	;volatile
 22540                           
 22541                           ; BSR set to: 4
 22542                           ;usb_device_cdc.c: 179: inPipes[0].info.bits.busy = 1;
 22543  00440A  8E43               	bsf	_inPipes+3,7,c	;volatile
 22544                           
 22545                           ;usb_device_cdc.c: 180: break;
 22546  00440C  0012               	return	
 22547  00440E                     i2l806:
 22548                           
 22549                           ; BSR set to: 4
 22550                           ;usb_device_cdc.c: 185: outPipes[0].wCount.Val = SetupPkt.wLength;
 22551  00440E  C436 F03C          	movff	1078,_outPipes+4	;volatile
 22552  004412  C437 F03D          	movff	1079,_outPipes+5	;volatile
 22553                           
 22554                           ; BSR set to: 4
 22555                           ;usb_device_cdc.c: 186: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 22556  004416  0EBE               	movlw	low _line_coding
 22557  004418  6E38               	movwf	_outPipes,c	;volatile
 22558  00441A  0E03               	movlw	high _line_coding
 22559  00441C  6E39               	movwf	_outPipes+1,c	;volatile
 22560                           
 22561                           ;usb_device_cdc.c: 187: outPipes[0].pFunc = (0);
 22562  00441E  0E00               	movlw	0
 22563  004420  6E3E               	movwf	_outPipes+6,c	;volatile
 22564  004422  0E00               	movlw	0
 22565  004424  6E3F               	movwf	_outPipes+7,c	;volatile
 22566                           
 22567                           ; BSR set to: 4
 22568                           ;usb_device_cdc.c: 188: outPipes[0].info.bits.busy = 1;
 22569  004426  8E3B               	bsf	_outPipes+3,7,c	;volatile
 22570                           
 22571                           ;usb_device_cdc.c: 189: break;
 22572  004428  0012               	return	
 22573  00442A                     
 22574                           ; BSR set to: 4
 22575                           ;usb_device_cdc.c: 192: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 22576                           
 22577                           ; BSR set to: 4
 22578  00442A  0EBE               	movlw	low _line_coding
 22579  00442C  6E40               	movwf	_inPipes,c	;volatile
 22580  00442E  0E03               	movlw	high _line_coding
 22581  004430  6E41               	movwf	_inPipes+1,c	;volatile
 22582                           
 22583                           ; BSR set to: 4
 22584  004432  0E00               	movlw	0
 22585  004434  6E45               	movwf	_inPipes+5,c	;volatile
 22586  004436  0E07               	movlw	7
 22587  004438  6E44               	movwf	_inPipes+4,c	;volatile
 22588                           
 22589                           ; BSR set to: 4
 22590  00443A  0EC1               	movlw	193
 22591  00443C  6E43               	movwf	_inPipes+3,c	;volatile
 22592                           
 22593                           ;usb_device_cdc.c: 196: break;
 22594  00443E  0012               	return	
 22595  004440                     i2l808:
 22596                           
 22597                           ; BSR set to: 4
 22598                           ;usb_device_cdc.c: 199: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 22599  004440  C432 F2E3          	movff	1074,_control_signal_bitmap	;volatile
 22600                           
 22601                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
 22602  004444  8E43               	bsf	_inPipes+3,7,c	;volatile
 22603                           
 22604                           ; BSR set to: 4
 22605                           ;usb_device_cdc.c: 258: }
 22606                           
 22607                           ; BSR set to: 4
 22608                           ;usb_device_cdc.c: 257: break;
 22609                           
 22610                           ;usb_device_cdc.c: 256: default:
 22611                           
 22612                           ;usb_device_cdc.c: 232: break;
 22613  004446  0012               	return	
 22614  004448                     i2l802:
 22615                           
 22616                           ; BSR set to: 4
 22617                           
 22618                           ; BSR set to: 4
 22619  004448  5131               	movf	49,w,b	;volatile
 22620                           
 22621                           ; Switch size 1, requested type "space"
 22622                           ; Number of cases is 5, Range of values is 0 to 34
 22623                           ; switch strategies available:
 22624                           ; Name         Instructions Cycles
 22625                           ; simple_byte           16     9 (average)
 22626                           ;	Chosen strategy is simple_byte
 22627  00444A  0A00               	xorlw	0	; case 0
 22628  00444C  B4D8               	btfsc	status,2,c
 22629  00444E  D7CE               	goto	i2l803
 22630  004450  0A01               	xorlw	1	; case 1
 22631  004452  B4D8               	btfsc	status,2,c
 22632  004454  D7D6               	goto	i2l805
 22633  004456  0A21               	xorlw	33	; case 32
 22634  004458  B4D8               	btfsc	status,2,c
 22635  00445A  D7D9               	goto	i2l806
 22636  00445C  0A01               	xorlw	1	; case 33
 22637  00445E  B4D8               	btfsc	status,2,c
 22638  004460  D7E4               	goto	i2l807
 22639  004462  0A03               	xorlw	3	; case 34
 22640  004464  A4D8               	btfss	status,2,c
 22641  004466  0012               	return	
 22642  004468  D7EB               	goto	i2l808
 22643  00446A                     __end_of_USBCheckCDCRequest:
 22644                           	opt stack 0
 22645                           pclatu	equ	0xFFB
 22646                           pclath	equ	0xFFA
 22647                           tblptru	equ	0xFF8
 22648                           tblptrh	equ	0xFF7
 22649                           tblptrl	equ	0xFF6
 22650                           tablat	equ	0xFF5
 22651                           prodh	equ	0xFF4
 22652                           prodl	equ	0xFF3
 22653                           intcon	equ	0xFF2
 22654                           indf0	equ	0xFEF
 22655                           postinc0	equ	0xFEE
 22656                           fsr0h	equ	0xFEA
 22657                           fsr0l	equ	0xFE9
 22658                           wreg	equ	0xFE8
 22659                           indf1	equ	0xFE7
 22660                           postdec1	equ	0xFE5
 22661                           fsr1h	equ	0xFE2
 22662                           fsr1l	equ	0xFE1
 22663                           indf2	equ	0xFDF
 22664                           postinc2	equ	0xFDE
 22665                           postdec2	equ	0xFDD
 22666                           plusw2	equ	0xFDB
 22667                           fsr2h	equ	0xFDA
 22668                           fsr2l	equ	0xFD9
 22669                           status	equ	0xFD8
 22670                           
 22671 ;; *************** function _CDCInitEP *****************
 22672 ;; Defined at:
 22673 ;;		line 294 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device_cdc.c"
 22674 ;; Parameters:    Size  Location     Type
 22675 ;;		None
 22676 ;; Auto vars:     Size  Location     Type
 22677 ;;		None
 22678 ;; Return value:  Size  Location     Type
 22679 ;;                  1    wreg      void 
 22680 ;; Registers used:
 22681 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22682 ;; Tracked objects:
 22683 ;;		On entry : 0/0
 22684 ;;		On exit  : 0/0
 22685 ;;		Unchanged: 0/0
 22686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22687 ;;      Params:         0       0       0       0       0       0       0       0       0
 22688 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22689 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22690 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22691 ;;Total ram usage:        0 bytes
 22692 ;; Hardware stack levels used:    1
 22693 ;; Hardware stack levels required when called:    2
 22694 ;; This function calls:
 22695 ;;		_USBEnableEndpoint
 22696 ;;		i2_USBTransferOnePacket
 22697 ;; This function is called by:
 22698 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 22699 ;; This function uses a non-reentrant model
 22700 ;;
 22701                           
 22702                           	psect	text85
 22703  004DE6                     __ptext85:
 22704                           	opt stack 0
 22705  004DE6                     _CDCInitEP:
 22706                           	opt stack 20
 22707                           
 22708                           ;usb_device_cdc.c: 297: line_coding.dwDTERate = 19200;
 22709                           
 22710                           ; BSR set to: 4
 22711                           ;incstack = 0
 22712  004DE6  0E00               	movlw	0
 22713  004DE8  0103               	movlb	3	; () banked
 22714  004DEA  6FBE               	movwf	_line_coding& (0+255),b
 22715  004DEC  0E4B               	movlw	75
 22716  004DEE  6FBF               	movwf	(_line_coding+1)& (0+255),b
 22717  004DF0  0E00               	movlw	0
 22718  004DF2  6FC0               	movwf	(_line_coding+2)& (0+255),b
 22719  004DF4  0E00               	movlw	0
 22720  004DF6  6FC1               	movwf	(_line_coding+3)& (0+255),b
 22721                           
 22722                           ;usb_device_cdc.c: 298: line_coding.bCharFormat = 0x00;
 22723  004DF8  0E00               	movlw	0
 22724  004DFA  6FC2               	movwf	(_line_coding+4)& (0+255),b
 22725                           
 22726                           ;usb_device_cdc.c: 299: line_coding.bParityType = 0x00;
 22727  004DFC  0E00               	movlw	0
 22728  004DFE  6FC3               	movwf	(_line_coding+5)& (0+255),b
 22729                           
 22730                           ;usb_device_cdc.c: 300: line_coding.bDataBits = 0x08;
 22731  004E00  0E08               	movlw	8
 22732  004E02  6FC4               	movwf	(_line_coding+6)& (0+255),b
 22733                           
 22734                           ;usb_device_cdc.c: 302: cdc_rx_len = 0;
 22735  004E04  0E00               	movlw	0
 22736  004E06  0101               	movlb	1	; () banked
 22737  004E08  6FF6               	movwf	_cdc_rx_len& (0+255),b
 22738                           
 22739                           ; BSR set to: 1
 22740                           ;usb_device_cdc.c: 315: USBEnableEndpoint(1,0x02|0x10|0x08);
 22741  004E0A  0E1A               	movlw	26
 22742  004E0C  6E09               	movwf	USBEnableEndpoint@options,c
 22743  004E0E  0E01               	movlw	1
 22744  004E10  ECAF  F029         	call	_USBEnableEndpoint
 22745                           
 22746                           ;usb_device_cdc.c: 316: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 22747  004E14  0E1E               	movlw	30
 22748  004E16  6E09               	movwf	USBEnableEndpoint@options,c
 22749  004E18  0E02               	movlw	2
 22750  004E1A  ECAF  F029         	call	_USBEnableEndpoint
 22751                           
 22752                           ;usb_device_cdc.c: 318: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 22753  004E1E  0E00               	movlw	0
 22754  004E20  6E01               	movwf	i2USBTransferOnePacket@dir,c
 22755  004E22  0E40               	movlw	64
 22756  004E24  6E02               	movwf	i2USBTransferOnePacket@data,c
 22757  004E26  0E05               	movlw	5
 22758  004E28  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 22759  004E2A  0E40               	movlw	64
 22760  004E2C  6E04               	movwf	i2USBTransferOnePacket@len,c
 22761  004E2E  0E02               	movlw	2
 22762  004E30  ECA7  F01B         	call	i2_USBTransferOnePacket
 22763  004E34  C001  F1F3         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 22764  004E38  C002  F1F4         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 22765                           
 22766                           ;usb_device_cdc.c: 319: CDCDataInHandle = (0);
 22767  004E3C  0E00               	movlw	0
 22768  004E3E  0102               	movlb	2	; () banked
 22769  004E40  6FD8               	movwf	_CDCDataInHandle& (0+255),b
 22770  004E42  0E00               	movlw	0
 22771  004E44  6FD9               	movwf	(_CDCDataInHandle+1)& (0+255),b
 22772                           
 22773                           ; BSR set to: 2
 22774                           ;usb_device_cdc.c: 346: cdc_trf_state = 0;
 22775  004E46  0E00               	movlw	0
 22776  004E48  6FE5               	movwf	_cdc_trf_state& (0+255),b
 22777                           
 22778                           ; BSR set to: 2
 22779  004E4A  0012               	return		;funcret
 22780  004E4C                     __end_of_CDCInitEP:
 22781                           	opt stack 0
 22782                           pclatu	equ	0xFFB
 22783                           pclath	equ	0xFFA
 22784                           tblptru	equ	0xFF8
 22785                           tblptrh	equ	0xFF7
 22786                           tblptrl	equ	0xFF6
 22787                           tablat	equ	0xFF5
 22788                           prodh	equ	0xFF4
 22789                           prodl	equ	0xFF3
 22790                           intcon	equ	0xFF2
 22791                           indf0	equ	0xFEF
 22792                           postinc0	equ	0xFEE
 22793                           fsr0h	equ	0xFEA
 22794                           fsr0l	equ	0xFE9
 22795                           wreg	equ	0xFE8
 22796                           indf1	equ	0xFE7
 22797                           postdec1	equ	0xFE5
 22798                           fsr1h	equ	0xFE2
 22799                           fsr1l	equ	0xFE1
 22800                           indf2	equ	0xFDF
 22801                           postinc2	equ	0xFDE
 22802                           postdec2	equ	0xFDD
 22803                           plusw2	equ	0xFDB
 22804                           fsr2h	equ	0xFDA
 22805                           fsr2l	equ	0xFD9
 22806                           status	equ	0xFD8
 22807                           
 22808 ;; *************** function i2_USBTransferOnePacket *****************
 22809 ;; Defined at:
 22810 ;;		line 995 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 22811 ;; Parameters:    Size  Location     Type
 22812 ;;  ep              1    wreg     unsigned char 
 22813 ;;  dir             1    0[COMRAM] unsigned char 
 22814 ;;  data            2    1[COMRAM] PTR unsigned char 
 22815 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 22816 ;;  len             1    3[COMRAM] unsigned char 
 22817 ;; Auto vars:     Size  Location     Type
 22818 ;;  ep              1    8[COMRAM] unsigned char 
 22819 ;;  USBTransferO    2    9[COMRAM] PTR volatile struct __BD
 22820 ;;		 -> RAM(2047), NULL(0), BDT(48), 
 22821 ;; Return value:  Size  Location     Type
 22822 ;;                  2    0[COMRAM] PTR void 
 22823 ;; Registers used:
 22824 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22825 ;; Tracked objects:
 22826 ;;		On entry : 0/0
 22827 ;;		On exit  : 0/0
 22828 ;;		Unchanged: 0/0
 22829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22830 ;;      Params:         4       0       0       0       0       0       0       0       0
 22831 ;;      Locals:         3       0       0       0       0       0       0       0       0
 22832 ;;      Temps:          4       0       0       0       0       0       0       0       0
 22833 ;;      Totals:        11       0       0       0       0       0       0       0       0
 22834 ;;Total ram usage:       11 bytes
 22835 ;; Hardware stack levels used:    1
 22836 ;; This function calls:
 22837 ;;		Nothing
 22838 ;; This function is called by:
 22839 ;;		_CDCInitEP
 22840 ;; This function uses a non-reentrant model
 22841 ;;
 22842                           
 22843                           	psect	text86
 22844  00374E                     __ptext86:
 22845                           	opt stack 0
 22846  00374E                     i2_USBTransferOnePacket:
 22847                           	opt stack 21
 22848                           
 22849                           ; BSR set to: 2
 22850                           ;incstack = 0
 22851                           ;i2USBTransferOnePacket@ep stored from wreg
 22852  00374E  6E09               	movwf	i2USBTransferOnePacket@ep,c
 22853                           
 22854                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 22855                           ;usb_device.c: 1000: if(dir != 0)
 22856  003750  5001               	movf	i2USBTransferOnePacket@dir,w,c
 22857  003752  B4D8               	btfsc	status,2,c
 22858  003754  D007               	goto	i2l437
 22859                           
 22860                           ;usb_device.c: 1001: {
 22861                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 22862  003756  5009               	movf	i2USBTransferOnePacket@ep,w,c
 22863  003758  0D02               	mullw	2
 22864  00375A  0E46               	movlw	low _pBDTEntryIn
 22865  00375C  24F3               	addwf	prodl,w,c
 22866  00375E  6ED9               	movwf	fsr2l,c
 22867  003760  0E00               	movlw	high _pBDTEntryIn
 22868  003762  D006               	goto	L28
 22869  003764                     i2l437:
 22870                           
 22871                           ;usb_device.c: 1005: else
 22872                           ;usb_device.c: 1006: {
 22873                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 22874  003764  5009               	movf	i2USBTransferOnePacket@ep,w,c
 22875  003766  0D02               	mullw	2
 22876  003768  0EC8               	movlw	low _pBDTEntryOut
 22877  00376A  24F3               	addwf	prodl,w,c
 22878  00376C  6ED9               	movwf	fsr2l,c
 22879  00376E  0E02               	movlw	high _pBDTEntryOut
 22880  003770                     L28:
 22881  003770  20F4               	addwfc	prodh,w,c
 22882  003772  6EDA               	movwf	fsr2h,c
 22883  003774  CFDE F00A          	movff	postinc2,i2USBTransferOnePacket@handle
 22884  003778  CFDD F00B          	movff	postdec2,i2USBTransferOnePacket@handle+1
 22885                           
 22886                           ;usb_device.c: 1009: }
 22887                           ;usb_device.c: 1013: if(handle == 0)
 22888  00377C  500A               	movf	i2USBTransferOnePacket@handle,w,c
 22889  00377E  100B               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 22890  003780  A4D8               	btfss	status,2,c
 22891  003782  D005               	goto	i2l439
 22892                           
 22893                           ;usb_device.c: 1014: {
 22894                           ;usb_device.c: 1015: return 0;
 22895  003784  0E00               	movlw	0
 22896  003786  6E01               	movwf	?i2_USBTransferOnePacket,c
 22897  003788  0E00               	movlw	0
 22898  00378A  6E02               	movwf	?i2_USBTransferOnePacket+1,c
 22899  00378C  0012               	return	
 22900  00378E                     i2l439:
 22901                           
 22902                           ;usb_device.c: 1016: }
 22903                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 22904  00378E  EE20 F002          	lfsr	2,2
 22905  003792  500A               	movf	i2USBTransferOnePacket@handle,w,c
 22906  003794  26D9               	addwf	fsr2l,f,c
 22907  003796  500B               	movf	i2USBTransferOnePacket@handle+1,w,c
 22908  003798  22DA               	addwfc	fsr2h,f,c
 22909  00379A  C002  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 22910  00379E  C003  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 22911                           
 22912                           ;usb_device.c: 1030: handle->CNT = len;
 22913  0037A2  EE20 F001          	lfsr	2,1
 22914  0037A6  500A               	movf	i2USBTransferOnePacket@handle,w,c
 22915  0037A8  26D9               	addwf	fsr2l,f,c
 22916  0037AA  500B               	movf	i2USBTransferOnePacket@handle+1,w,c
 22917  0037AC  22DA               	addwfc	fsr2h,f,c
 22918  0037AE  C004  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 22919                           
 22920                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 22921  0037B2  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 22922  0037B6  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 22923  0037BA  0E40               	movlw	64
 22924  0037BC  16DF               	andwf	indf2,f,c
 22925                           
 22926                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 22927  0037BE  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 22928  0037C2  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 22929  0037C6  0E00               	movlw	0
 22930  0037C8  86DB               	bsf	plusw2,3,c
 22931                           
 22932                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 22933  0037CA  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 22934  0037CE  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 22935  0037D2  0E00               	movlw	0
 22936  0037D4  8EDB               	bsf	plusw2,7,c
 22937                           
 22938                           ;usb_device.c: 1036: if(dir != 0)
 22939  0037D6  5001               	movf	i2USBTransferOnePacket@dir,w,c
 22940  0037D8  B4D8               	btfsc	status,2,c
 22941  0037DA  D018               	goto	i2l441
 22942                           
 22943                           ;usb_device.c: 1037: {
 22944                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
 22945  0037DC  5009               	movf	i2USBTransferOnePacket@ep,w,c
 22946  0037DE  0D02               	mullw	2
 22947  0037E0  0E46               	movlw	low _pBDTEntryIn
 22948  0037E2  24F3               	addwf	prodl,w,c
 22949  0037E4  6ED9               	movwf	fsr2l,c
 22950  0037E6  0E00               	movlw	high _pBDTEntryIn
 22951  0037E8  20F4               	addwfc	prodh,w,c
 22952  0037EA  6EDA               	movwf	fsr2h,c
 22953  0037EC  CFDE F005          	movff	postinc2,??i2_USBTransferOnePacket
 22954  0037F0  CFDD F006          	movff	postdec2,??i2_USBTransferOnePacket+1
 22955  0037F4  0E04               	movlw	4
 22956  0037F6  1805               	xorwf	??i2_USBTransferOnePacket,w,c
 22957  0037F8  6E07               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 22958  0037FA  5006               	movf	??i2_USBTransferOnePacket+1,w,c
 22959  0037FC  6E08               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 22960  0037FE  5009               	movf	i2USBTransferOnePacket@ep,w,c
 22961  003800  0D02               	mullw	2
 22962  003802  0E46               	movlw	low _pBDTEntryIn
 22963  003804  24F3               	addwf	prodl,w,c
 22964  003806  6ED9               	movwf	fsr2l,c
 22965  003808  0E00               	movlw	high _pBDTEntryIn
 22966  00380A  D017               	goto	L29
 22967  00380C                     i2l441:
 22968                           
 22969                           ;usb_device.c: 1041: else
 22970                           ;usb_device.c: 1042: {
 22971                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
 22972  00380C  5009               	movf	i2USBTransferOnePacket@ep,w,c
 22973  00380E  0D02               	mullw	2
 22974  003810  0EC8               	movlw	low _pBDTEntryOut
 22975  003812  24F3               	addwf	prodl,w,c
 22976  003814  6ED9               	movwf	fsr2l,c
 22977  003816  0E02               	movlw	high _pBDTEntryOut
 22978  003818  20F4               	addwfc	prodh,w,c
 22979  00381A  6EDA               	movwf	fsr2h,c
 22980  00381C  CFDE F005          	movff	postinc2,??i2_USBTransferOnePacket
 22981  003820  CFDD F006          	movff	postdec2,??i2_USBTransferOnePacket+1
 22982  003824  0E04               	movlw	4
 22983  003826  1805               	xorwf	??i2_USBTransferOnePacket,w,c
 22984  003828  6E07               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 22985  00382A  5006               	movf	??i2_USBTransferOnePacket+1,w,c
 22986  00382C  6E08               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 22987  00382E  5009               	movf	i2USBTransferOnePacket@ep,w,c
 22988  003830  0D02               	mullw	2
 22989  003832  0EC8               	movlw	low _pBDTEntryOut
 22990  003834  24F3               	addwf	prodl,w,c
 22991  003836  6ED9               	movwf	fsr2l,c
 22992  003838  0E02               	movlw	high _pBDTEntryOut
 22993  00383A                     L29:
 22994  00383A  20F4               	addwfc	prodh,w,c
 22995  00383C  6EDA               	movwf	fsr2h,c
 22996  00383E  C007  FFDE         	movff	??i2_USBTransferOnePacket+2,postinc2
 22997  003842  C008  FFDD         	movff	??i2_USBTransferOnePacket+3,postdec2
 22998                           
 22999                           ;usb_device.c: 1045: }
 23000                           ;usb_device.c: 1046: return (void*)handle;
 23001  003846  C00A  F001         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 23002  00384A  C00B  F002         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 23003  00384E  0012               	return	
 23004  003850                     __end_ofi2_USBTransferOnePacket:
 23005                           	opt stack 0
 23006                           pclatu	equ	0xFFB
 23007                           pclath	equ	0xFFA
 23008                           tblptru	equ	0xFF8
 23009                           tblptrh	equ	0xFF7
 23010                           tblptrl	equ	0xFF6
 23011                           tablat	equ	0xFF5
 23012                           prodh	equ	0xFF4
 23013                           prodl	equ	0xFF3
 23014                           intcon	equ	0xFF2
 23015                           indf0	equ	0xFEF
 23016                           postinc0	equ	0xFEE
 23017                           fsr0h	equ	0xFEA
 23018                           fsr0l	equ	0xFE9
 23019                           wreg	equ	0xFE8
 23020                           indf1	equ	0xFE7
 23021                           postdec1	equ	0xFE5
 23022                           fsr1h	equ	0xFE2
 23023                           fsr1l	equ	0xFE1
 23024                           indf2	equ	0xFDF
 23025                           postinc2	equ	0xFDE
 23026                           postdec2	equ	0xFDD
 23027                           plusw2	equ	0xFDB
 23028                           fsr2h	equ	0xFDA
 23029                           fsr2l	equ	0xFD9
 23030                           status	equ	0xFD8
 23031                           
 23032 ;; *************** function _USBEnableEndpoint *****************
 23033 ;; Defined at:
 23034 ;;		line 878 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 23035 ;; Parameters:    Size  Location     Type
 23036 ;;  ep              1    wreg     unsigned char 
 23037 ;;  options         1    8[COMRAM] unsigned char 
 23038 ;; Auto vars:     Size  Location     Type
 23039 ;;  ep              1   11[COMRAM] unsigned char 
 23040 ;;  p               2    9[COMRAM] PTR unsigned char 
 23041 ;;		 -> UEP0(1), 
 23042 ;; Return value:  Size  Location     Type
 23043 ;;                  1    wreg      void 
 23044 ;; Registers used:
 23045 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23046 ;; Tracked objects:
 23047 ;;		On entry : 0/0
 23048 ;;		On exit  : 0/0
 23049 ;;		Unchanged: 0/0
 23050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23051 ;;      Params:         1       0       0       0       0       0       0       0       0
 23052 ;;      Locals:         3       0       0       0       0       0       0       0       0
 23053 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23054 ;;      Totals:         4       0       0       0       0       0       0       0       0
 23055 ;;Total ram usage:        4 bytes
 23056 ;; Hardware stack levels used:    1
 23057 ;; Hardware stack levels required when called:    1
 23058 ;; This function calls:
 23059 ;;		_USBConfigureEndpoint
 23060 ;; This function is called by:
 23061 ;;		_CDCInitEP
 23062 ;; This function uses a non-reentrant model
 23063 ;;
 23064                           
 23065                           	psect	text87
 23066  00535E                     __ptext87:
 23067                           	opt stack 0
 23068  00535E                     _USBEnableEndpoint:
 23069                           	opt stack 20
 23070                           
 23071                           ;incstack = 0
 23072                           ;USBEnableEndpoint@ep stored from wreg
 23073  00535E  6E0C               	movwf	USBEnableEndpoint@ep,c
 23074                           
 23075                           ;usb_device.c: 880: unsigned char* p;
 23076                           ;usb_device.c: 884: if(options & 0x04)
 23077  005360  A409               	btfss	USBEnableEndpoint@options,2,c
 23078  005362  D005               	goto	i2l432
 23079                           
 23080                           ;usb_device.c: 885: {
 23081                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 23082  005364  0E00               	movlw	0
 23083  005366  6E01               	movwf	USBConfigureEndpoint@direction,c
 23084  005368  500C               	movf	USBEnableEndpoint@ep,w,c
 23085  00536A  ECBC  F023         	call	_USBConfigureEndpoint
 23086  00536E                     i2l432:
 23087                           
 23088                           ;usb_device.c: 887: }
 23089                           ;usb_device.c: 888: if(options & 0x02)
 23090  00536E  A209               	btfss	USBEnableEndpoint@options,1,c
 23091  005370  D005               	goto	i2l433
 23092                           
 23093                           ;usb_device.c: 889: {
 23094                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 23095  005372  0E01               	movlw	1
 23096  005374  6E01               	movwf	USBConfigureEndpoint@direction,c
 23097  005376  500C               	movf	USBEnableEndpoint@ep,w,c
 23098  005378  ECBC  F023         	call	_USBConfigureEndpoint
 23099  00537C                     i2l433:
 23100                           
 23101                           ;usb_device.c: 891: }
 23102                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 23103  00537C  500C               	movf	USBEnableEndpoint@ep,w,c
 23104  00537E  0D01               	mullw	1
 23105  005380  0E70               	movlw	112
 23106  005382  24F3               	addwf	prodl,w,c
 23107  005384  6E0A               	movwf	USBEnableEndpoint@p,c
 23108  005386  0E0F               	movlw	15
 23109  005388  20F4               	addwfc	prodh,w,c
 23110  00538A  6E0B               	movwf	USBEnableEndpoint@p+1,c
 23111                           
 23112                           ;usb_device.c: 901: *p = options;
 23113  00538C  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 23114  005390  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 23115  005394  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 23116  005398  0012               	return		;funcret
 23117  00539A                     __end_of_USBEnableEndpoint:
 23118                           	opt stack 0
 23119                           pclatu	equ	0xFFB
 23120                           pclath	equ	0xFFA
 23121                           tblptru	equ	0xFF8
 23122                           tblptrh	equ	0xFF7
 23123                           tblptrl	equ	0xFF6
 23124                           tablat	equ	0xFF5
 23125                           prodh	equ	0xFF4
 23126                           prodl	equ	0xFF3
 23127                           intcon	equ	0xFF2
 23128                           indf0	equ	0xFEF
 23129                           postinc0	equ	0xFEE
 23130                           fsr0h	equ	0xFEA
 23131                           fsr0l	equ	0xFE9
 23132                           wreg	equ	0xFE8
 23133                           indf1	equ	0xFE7
 23134                           postdec1	equ	0xFE5
 23135                           fsr1h	equ	0xFE2
 23136                           fsr1l	equ	0xFE1
 23137                           indf2	equ	0xFDF
 23138                           postinc2	equ	0xFDE
 23139                           postdec2	equ	0xFDD
 23140                           plusw2	equ	0xFDB
 23141                           fsr2h	equ	0xFDA
 23142                           fsr2l	equ	0xFD9
 23143                           status	equ	0xFD8
 23144                           
 23145 ;; *************** function _USBConfigureEndpoint *****************
 23146 ;; Defined at:
 23147 ;;		line 1543 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 23148 ;; Parameters:    Size  Location     Type
 23149 ;;  EPNum           1    wreg     unsigned char 
 23150 ;;  direction       1    0[COMRAM] unsigned char 
 23151 ;; Auto vars:     Size  Location     Type
 23152 ;;  EPNum           1    5[COMRAM] unsigned char 
 23153 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 23154 ;;		 -> BDT(48), 
 23155 ;; Return value:  Size  Location     Type
 23156 ;;                  1    wreg      void 
 23157 ;; Registers used:
 23158 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 23159 ;; Tracked objects:
 23160 ;;		On entry : 0/0
 23161 ;;		On exit  : 0/0
 23162 ;;		Unchanged: 0/0
 23163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23164 ;;      Params:         1       0       0       0       0       0       0       0       0
 23165 ;;      Locals:         3       0       0       0       0       0       0       0       0
 23166 ;;      Temps:          4       0       0       0       0       0       0       0       0
 23167 ;;      Totals:         8       0       0       0       0       0       0       0       0
 23168 ;;Total ram usage:        8 bytes
 23169 ;; Hardware stack levels used:    1
 23170 ;; This function calls:
 23171 ;;		Nothing
 23172 ;; This function is called by:
 23173 ;;		_USBEnableEndpoint
 23174 ;; This function uses a non-reentrant model
 23175 ;;
 23176                           
 23177                           	psect	text88
 23178  004778                     __ptext88:
 23179                           	opt stack 0
 23180  004778                     _USBConfigureEndpoint:
 23181                           	opt stack 20
 23182                           
 23183                           ;incstack = 0
 23184                           ;USBConfigureEndpoint@EPNum stored from wreg
 23185  004778  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 23186                           
 23187                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
 23188                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
 23189  00477A  0E00               	movlw	0
 23190  00477C  6E07               	movwf	USBConfigureEndpoint@handle,c
 23191  00477E  0E04               	movlw	4
 23192  004780  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 23193                           
 23194                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
 23195  004782  5001               	movf	USBConfigureEndpoint@direction,w,c
 23196  004784  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 23197  004786  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 23198  004788  90D8               	bcf	status,0,c
 23199  00478A  3602               	rlcf	??_USBConfigureEndpoint,f,c
 23200  00478C  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 23201  00478E  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 23202  004790  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 23203  004792  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 23204  004794  90D8               	bcf	status,0,c
 23205  004796  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 23206  004798  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 23207  00479A  90D8               	bcf	status,0,c
 23208  00479C  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 23209  00479E  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 23210  0047A0  5002               	movf	??_USBConfigureEndpoint,w,c
 23211  0047A2  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 23212  0047A4  5003               	movf	??_USBConfigureEndpoint+1,w,c
 23213  0047A6  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 23214  0047A8  90D8               	bcf	status,0,c
 23215  0047AA  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 23216  0047AC  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 23217  0047AE  90D8               	bcf	status,0,c
 23218  0047B0  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 23219  0047B2  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 23220  0047B4  5004               	movf	??_USBConfigureEndpoint+2,w,c
 23221  0047B6  2607               	addwf	USBConfigureEndpoint@handle,f,c
 23222  0047B8  5005               	movf	??_USBConfigureEndpoint+3,w,c
 23223  0047BA  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 23224                           
 23225                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
 23226  0047BC  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 23227  0047C0  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 23228  0047C4  9EDF               	bcf	indf2,7,c
 23229                           
 23230                           ;usb_device.c: 1557: if(direction == 0)
 23231  0047C6  5001               	movf	USBConfigureEndpoint@direction,w,c
 23232  0047C8  A4D8               	btfss	status,2,c
 23233  0047CA  D007               	goto	i2l479
 23234                           
 23235                           ;usb_device.c: 1558: {
 23236                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
 23237  0047CC  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 23238  0047CE  0D02               	mullw	2
 23239  0047D0  0EC8               	movlw	low _pBDTEntryOut
 23240  0047D2  24F3               	addwf	prodl,w,c
 23241  0047D4  6ED9               	movwf	fsr2l,c
 23242  0047D6  0E02               	movlw	high _pBDTEntryOut
 23243  0047D8  D006               	goto	L30
 23244  0047DA                     i2l479:
 23245                           
 23246                           ;usb_device.c: 1561: else
 23247                           ;usb_device.c: 1562: {
 23248                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
 23249  0047DA  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 23250  0047DC  0D02               	mullw	2
 23251  0047DE  0E46               	movlw	low _pBDTEntryIn
 23252  0047E0  24F3               	addwf	prodl,w,c
 23253  0047E2  6ED9               	movwf	fsr2l,c
 23254  0047E4  0E00               	movlw	high _pBDTEntryIn
 23255  0047E6                     L30:
 23256  0047E6  20F4               	addwfc	prodh,w,c
 23257  0047E8  6EDA               	movwf	fsr2h,c
 23258  0047EA  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 23259  0047EE  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 23260                           
 23261                           ;usb_device.c: 1564: }
 23262                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
 23263  0047F2  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 23264  0047F6  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 23265  0047FA  9CDF               	bcf	indf2,6,c
 23266                           
 23267                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
 23268  0047FC  EE20 F004          	lfsr	2,4
 23269  004800  5007               	movf	USBConfigureEndpoint@handle,w,c
 23270  004802  26D9               	addwf	fsr2l,f,c
 23271  004804  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 23272  004806  22DA               	addwfc	fsr2h,f,c
 23273  004808  8CDF               	bsf	indf2,6,c
 23274  00480A  0012               	return		;funcret
 23275  00480C                     __end_of_USBConfigureEndpoint:
 23276                           	opt stack 0
 23277                           pclatu	equ	0xFFB
 23278                           pclath	equ	0xFFA
 23279                           tblptru	equ	0xFF8
 23280                           tblptrh	equ	0xFF7
 23281                           tblptrl	equ	0xFF6
 23282                           tablat	equ	0xFF5
 23283                           prodh	equ	0xFF4
 23284                           prodl	equ	0xFF3
 23285                           intcon	equ	0xFF2
 23286                           indf0	equ	0xFEF
 23287                           postinc0	equ	0xFEE
 23288                           fsr0h	equ	0xFEA
 23289                           fsr0l	equ	0xFE9
 23290                           wreg	equ	0xFE8
 23291                           indf1	equ	0xFE7
 23292                           postdec1	equ	0xFE5
 23293                           fsr1h	equ	0xFE2
 23294                           fsr1l	equ	0xFE1
 23295                           indf2	equ	0xFDF
 23296                           postinc2	equ	0xFDE
 23297                           postdec2	equ	0xFDD
 23298                           plusw2	equ	0xFDB
 23299                           fsr2h	equ	0xFDA
 23300                           fsr2l	equ	0xFD9
 23301                           status	equ	0xFD8
 23302                           
 23303 ;; *************** function _USBCtrlTrfOutHandler *****************
 23304 ;; Defined at:
 23305 ;;		line 2538 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 23306 ;; Parameters:    Size  Location     Type
 23307 ;;		None
 23308 ;; Auto vars:     Size  Location     Type
 23309 ;;		None
 23310 ;; Return value:  Size  Location     Type
 23311 ;;                  1    wreg      void 
 23312 ;; Registers used:
 23313 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23314 ;; Tracked objects:
 23315 ;;		On entry : 0/0
 23316 ;;		On exit  : 0/0
 23317 ;;		Unchanged: 0/0
 23318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23319 ;;      Params:         0       0       0       0       0       0       0       0       0
 23320 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23321 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23322 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23323 ;;Total ram usage:        0 bytes
 23324 ;; Hardware stack levels used:    1
 23325 ;; Hardware stack levels required when called:    2
 23326 ;; This function calls:
 23327 ;;		_USBCtrlTrfRxService
 23328 ;; This function is called by:
 23329 ;;		_USBCtrlEPService
 23330 ;; This function uses a non-reentrant model
 23331 ;;
 23332                           
 23333                           	psect	text89
 23334  004F0A                     __ptext89:
 23335                           	opt stack 0
 23336  004F0A                     _USBCtrlTrfOutHandler:
 23337                           	opt stack 20
 23338                           
 23339                           ;usb_device.c: 2540: if(controlTransferState == 2)
 23340                           
 23341                           ;incstack = 0
 23342  004F0A  0E02               	movlw	2
 23343  004F0C  1856               	xorwf	_controlTransferState,w,c	;volatile
 23344  004F0E  A4D8               	btfss	status,2,c
 23345  004F10  D003               	goto	i2l585
 23346                           
 23347                           ;usb_device.c: 2541: {
 23348                           ;usb_device.c: 2542: USBCtrlTrfRxService();
 23349  004F12  EC1C  F01A         	call	_USBCtrlTrfRxService	;wreg free
 23350                           
 23351                           ;usb_device.c: 2543: }
 23352  004F16  0012               	return	
 23353  004F18                     i2l585:
 23354                           
 23355                           ;usb_device.c: 2544: else
 23356                           ;usb_device.c: 2545: {
 23357                           ;usb_device.c: 2548: controlTransferState = 0;
 23358  004F18  0E00               	movlw	0
 23359  004F1A  6E56               	movwf	_controlTransferState,c	;volatile
 23360                           
 23361                           ;usb_device.c: 2555: if(BothEP0OutUOWNsSet == 0)
 23362  004F1C  0101               	movlb	1	; () banked
 23363  004F1E  51F8               	movf	_BothEP0OutUOWNsSet& (0+255),w,b	;volatile
 23364  004F20  A4D8               	btfss	status,2,c
 23365  004F22  D01F               	goto	i2l587
 23366                           
 23367                           ; BSR set to: 1
 23368                           ;usb_device.c: 2556: {
 23369                           ;usb_device.c: 2557: pBDTEntryEP0OutNext->CNT = 8;
 23370  004F24  EE20 F001          	lfsr	2,1
 23371  004F28  504E               	movf	_pBDTEntryEP0OutNext,w,c
 23372  004F2A  26D9               	addwf	fsr2l,f,c
 23373  004F2C  504F               	movf	_pBDTEntryEP0OutNext+1,w,c
 23374  004F2E  22DA               	addwfc	fsr2h,f,c
 23375  004F30  0E08               	movlw	8
 23376  004F32  6EDF               	movwf	indf2,c
 23377                           
 23378                           ;usb_device.c: 2558: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 23379  004F34  EE20 F002          	lfsr	2,2
 23380  004F38  504E               	movf	_pBDTEntryEP0OutNext,w,c
 23381  004F3A  26D9               	addwf	fsr2l,f,c
 23382  004F3C  504F               	movf	_pBDTEntryEP0OutNext+1,w,c
 23383  004F3E  22DA               	addwfc	fsr2h,f,c
 23384  004F40  0E30               	movlw	48
 23385  004F42  6EDE               	movwf	postinc2,c
 23386  004F44  0E04               	movlw	4
 23387  004F46  6EDD               	movwf	postdec2,c
 23388                           
 23389                           ; BSR set to: 1
 23390                           ;usb_device.c: 2559: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 23391  004F48  C04E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23392  004F4C  C04F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23393  004F50  0E0C               	movlw	12
 23394  004F52  6EDF               	movwf	indf2,c
 23395                           
 23396                           ; BSR set to: 1
 23397                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 23398  004F54  C04E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23399  004F58  C04F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23400  004F5C  0E00               	movlw	0
 23401  004F5E  8EDB               	bsf	plusw2,7,c
 23402                           
 23403                           ;usb_device.c: 2561: }
 23404  004F60  0012               	return	
 23405  004F62                     i2l587:
 23406                           
 23407                           ; BSR set to: 1
 23408                           ;usb_device.c: 2562: else
 23409                           ;usb_device.c: 2563: {
 23410                           ;usb_device.c: 2564: BothEP0OutUOWNsSet = 0;
 23411                           
 23412                           ; BSR set to: 1
 23413  004F62  0E00               	movlw	0
 23414  004F64  6FF8               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 23415                           
 23416                           ; BSR set to: 1
 23417  004F66  0012               	return	
 23418  004F68                     __end_of_USBCtrlTrfOutHandler:
 23419                           	opt stack 0
 23420                           pclatu	equ	0xFFB
 23421                           pclath	equ	0xFFA
 23422                           tblptru	equ	0xFF8
 23423                           tblptrh	equ	0xFF7
 23424                           tblptrl	equ	0xFF6
 23425                           tablat	equ	0xFF5
 23426                           prodh	equ	0xFF4
 23427                           prodl	equ	0xFF3
 23428                           intcon	equ	0xFF2
 23429                           indf0	equ	0xFEF
 23430                           postinc0	equ	0xFEE
 23431                           fsr0h	equ	0xFEA
 23432                           fsr0l	equ	0xFE9
 23433                           wreg	equ	0xFE8
 23434                           indf1	equ	0xFE7
 23435                           postdec1	equ	0xFE5
 23436                           fsr1h	equ	0xFE2
 23437                           fsr1l	equ	0xFE1
 23438                           indf2	equ	0xFDF
 23439                           postinc2	equ	0xFDE
 23440                           postdec2	equ	0xFDD
 23441                           plusw2	equ	0xFDB
 23442                           fsr2h	equ	0xFDA
 23443                           fsr2l	equ	0xFD9
 23444                           status	equ	0xFD8
 23445                           
 23446 ;; *************** function _USBCtrlTrfRxService *****************
 23447 ;; Defined at:
 23448 ;;		line 1852 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 23449 ;; Parameters:    Size  Location     Type
 23450 ;;		None
 23451 ;; Auto vars:     Size  Location     Type
 23452 ;;  byteToRead      1    1[COMRAM] unsigned char 
 23453 ;;  i               1    0[COMRAM] unsigned char 
 23454 ;; Return value:  Size  Location     Type
 23455 ;;                  1    wreg      void 
 23456 ;; Registers used:
 23457 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23458 ;; Tracked objects:
 23459 ;;		On entry : 0/0
 23460 ;;		On exit  : 0/0
 23461 ;;		Unchanged: 0/0
 23462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23463 ;;      Params:         0       0       0       0       0       0       0       0       0
 23464 ;;      Locals:         2       0       0       0       0       0       0       0       0
 23465 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23466 ;;      Totals:         2       0       0       0       0       0       0       0       0
 23467 ;;Total ram usage:        2 bytes
 23468 ;; Hardware stack levels used:    1
 23469 ;; Hardware stack levels required when called:    1
 23470 ;; This function calls:
 23471 ;;		_USBCtrlEPAllowStatusStage
 23472 ;; This function is called by:
 23473 ;;		_USBCtrlTrfOutHandler
 23474 ;; This function uses a non-reentrant model
 23475 ;;
 23476                           
 23477                           	psect	text90
 23478  003438                     __ptext90:
 23479                           	opt stack 0
 23480  003438                     _USBCtrlTrfRxService:
 23481                           	opt stack 20
 23482                           
 23483                           ;usb_device.c: 1854: uint8_t byteToRead;
 23484                           ;usb_device.c: 1855: uint8_t i;
 23485                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 23486                           
 23487                           ;incstack = 0
 23488  003438  EE20 F001          	lfsr	2,1
 23489  00343C  5050               	movf	_pBDTEntryEP0OutCurrent,w,c
 23490  00343E  26D9               	addwf	fsr2l,f,c
 23491  003440  5051               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 23492  003442  22DA               	addwfc	fsr2h,f,c
 23493  003444  50DF               	movf	indf2,w,c
 23494  003446  6E02               	movwf	USBCtrlTrfRxService@byteToRead,c
 23495                           
 23496                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
 23497  003448  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 23498  00344A  5C3C               	subwf	_outPipes+4,w,c	;volatile
 23499  00344C  0E00               	movlw	0
 23500  00344E  583D               	subwfb	_outPipes+5,w,c	;volatile
 23501  003450  A0D8               	btfss	status,0,c
 23502                           
 23503                           ;usb_device.c: 1866: {
 23504                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
 23505  003452  C03C  F002         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 23506                           
 23507                           ;usb_device.c: 1868: }
 23508                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
 23509  003456  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 23510  003458  5E3C               	subwf	_outPipes+4,f,c	;volatile
 23511  00345A  0E00               	movlw	0
 23512  00345C  5A3D               	subwfb	_outPipes+5,f,c	;volatile
 23513                           
 23514                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
 23515  00345E  0E00               	movlw	0
 23516  003460  6E01               	movwf	USBCtrlTrfRxService@i,c
 23517  003462  D011               	goto	i2l513
 23518  003464                     
 23519                           ;usb_device.c: 1875: {
 23520                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 23521  003464  5001               	movf	USBCtrlTrfRxService@i,w,c
 23522  003466  0D01               	mullw	1
 23523  003468  0E38               	movlw	56
 23524  00346A  24F3               	addwf	prodl,w,c
 23525  00346C  6ED9               	movwf	fsr2l,c
 23526  00346E  0E04               	movlw	4
 23527  003470  20F4               	addwfc	prodh,w,c
 23528  003472  6EDA               	movwf	fsr2h,c
 23529  003474  C038  FFE1         	movff	_outPipes,fsr1l	;volatile
 23530  003478  C039  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 23531  00347C  CFDF FFE7          	movff	indf2,indf1
 23532  003480  4A38               	infsnz	_outPipes,f,c	;volatile
 23533  003482  2A39               	incf	_outPipes+1,f,c	;volatile
 23534  003484  2A01               	incf	USBCtrlTrfRxService@i,f,c
 23535  003486                     i2l513:
 23536  003486  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 23537  003488  5C01               	subwf	USBCtrlTrfRxService@i,w,c
 23538  00348A  A0D8               	btfss	status,0,c
 23539  00348C  D7EB               	goto	i2l514
 23540                           
 23541                           ;usb_device.c: 1877: }
 23542                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
 23543  00348E  503C               	movf	_outPipes+4,w,c	;volatile
 23544  003490  103D               	iorwf	_outPipes+5,w,c	;volatile
 23545  003492  B4D8               	btfsc	status,2,c
 23546  003494  D032               	goto	i2l516
 23547                           
 23548                           ;usb_device.c: 1882: {
 23549                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
 23550  003496  EE20 F001          	lfsr	2,1
 23551  00349A  504E               	movf	_pBDTEntryEP0OutNext,w,c
 23552  00349C  26D9               	addwf	fsr2l,f,c
 23553  00349E  504F               	movf	_pBDTEntryEP0OutNext+1,w,c
 23554  0034A0  22DA               	addwfc	fsr2h,f,c
 23555  0034A2  0E08               	movlw	8
 23556  0034A4  6EDF               	movwf	indf2,c
 23557                           
 23558                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 23559  0034A6  EE20 F002          	lfsr	2,2
 23560  0034AA  504E               	movf	_pBDTEntryEP0OutNext,w,c
 23561  0034AC  26D9               	addwf	fsr2l,f,c
 23562  0034AE  504F               	movf	_pBDTEntryEP0OutNext+1,w,c
 23563  0034B0  22DA               	addwfc	fsr2h,f,c
 23564  0034B2  0E38               	movlw	56
 23565  0034B4  6EDE               	movwf	postinc2,c
 23566  0034B6  0E04               	movlw	4
 23567  0034B8  6EDD               	movwf	postdec2,c
 23568                           
 23569                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 23570  0034BA  C050  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 23571  0034BE  C051  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 23572  0034C2  BCDF               	btfsc	indf2,6,c
 23573  0034C4  D00D               	goto	i2l517
 23574                           
 23575                           ;usb_device.c: 1886: {
 23576                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 23577  0034C6  C04E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23578  0034CA  C04F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23579  0034CE  0E48               	movlw	72
 23580  0034D0  6EDF               	movwf	indf2,c
 23581                           
 23582                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 23583  0034D2  C04E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23584  0034D6  C04F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23585  0034DA  0E00               	movlw	0
 23586  0034DC  8EDB               	bsf	plusw2,7,c
 23587                           
 23588                           ;usb_device.c: 1889: }
 23589  0034DE  0012               	return	
 23590  0034E0                     i2l517:
 23591                           
 23592                           ;usb_device.c: 1890: else
 23593                           ;usb_device.c: 1891: {
 23594                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 23595  0034E0  C04E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23596  0034E4  C04F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23597  0034E8  0E08               	movlw	8
 23598  0034EA  6EDF               	movwf	indf2,c
 23599                           
 23600                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 23601  0034EC  C04E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23602  0034F0  C04F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23603  0034F4  0E00               	movlw	0
 23604  0034F6  8EDB               	bsf	plusw2,7,c
 23605                           
 23606                           ;usb_device.c: 1894: }
 23607                           ;usb_device.c: 1895: }
 23608  0034F8  0012               	return	
 23609  0034FA                     i2l516:
 23610                           
 23611                           ;usb_device.c: 1896: else
 23612                           ;usb_device.c: 1897: {
 23613                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 23614  0034FA  EE20 F001          	lfsr	2,1
 23615  0034FE  504E               	movf	_pBDTEntryEP0OutNext,w,c
 23616  003500  26D9               	addwf	fsr2l,f,c
 23617  003502  504F               	movf	_pBDTEntryEP0OutNext+1,w,c
 23618  003504  22DA               	addwfc	fsr2h,f,c
 23619  003506  0E08               	movlw	8
 23620  003508  6EDF               	movwf	indf2,c
 23621                           
 23622                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 23623  00350A  EE20 F002          	lfsr	2,2
 23624  00350E  504E               	movf	_pBDTEntryEP0OutNext,w,c
 23625  003510  26D9               	addwf	fsr2l,f,c
 23626  003512  504F               	movf	_pBDTEntryEP0OutNext+1,w,c
 23627  003514  22DA               	addwfc	fsr2h,f,c
 23628  003516  0E30               	movlw	48
 23629  003518  6EDE               	movwf	postinc2,c
 23630  00351A  0E04               	movlw	4
 23631  00351C  6EDD               	movwf	postdec2,c
 23632                           
 23633                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 23634  00351E  C04E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23635  003522  C04F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23636  003526  0E04               	movlw	4
 23637  003528  6EDF               	movwf	indf2,c
 23638                           
 23639                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 23640  00352A  C04E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23641  00352E  C04F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23642  003532  0E00               	movlw	0
 23643  003534  8EDB               	bsf	plusw2,7,c
 23644                           
 23645                           ;usb_device.c: 1926: }
 23646                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
 23647                           
 23648                           ;usb_device.c: 1915: {
 23649                           ;usb_device.c: 1921: outPipes[0].pFunc();
 23650  003536  9E3B               	bcf	_outPipes+3,7,c	;volatile
 23651                           
 23652                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
 23653  003538  5053               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 23654  00353A  A4D8               	btfss	status,2,c
 23655  00353C  0012               	return	
 23656                           
 23657                           ;usb_device.c: 1942: {
 23658                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
 23659  00353E  ECC3  F01F         	call	_USBCtrlEPAllowStatusStage	;wreg free
 23660  003542  0012               	return	
 23661  003544                     __end_of_USBCtrlTrfRxService:
 23662                           	opt stack 0
 23663                           pclatu	equ	0xFFB
 23664                           pclath	equ	0xFFA
 23665                           tblptru	equ	0xFF8
 23666                           tblptrh	equ	0xFF7
 23667                           tblptrl	equ	0xFF6
 23668                           tablat	equ	0xFF5
 23669                           prodh	equ	0xFF4
 23670                           prodl	equ	0xFF3
 23671                           intcon	equ	0xFF2
 23672                           indf0	equ	0xFEF
 23673                           postinc0	equ	0xFEE
 23674                           fsr0h	equ	0xFEA
 23675                           fsr0l	equ	0xFE9
 23676                           wreg	equ	0xFE8
 23677                           indf1	equ	0xFE7
 23678                           postdec1	equ	0xFE5
 23679                           fsr1h	equ	0xFE2
 23680                           fsr1l	equ	0xFE1
 23681                           indf2	equ	0xFDF
 23682                           postinc2	equ	0xFDE
 23683                           postdec2	equ	0xFDD
 23684                           plusw2	equ	0xFDB
 23685                           fsr2h	equ	0xFDA
 23686                           fsr2l	equ	0xFD9
 23687                           status	equ	0xFD8
 23688                           
 23689 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 23690 ;; Defined at:
 23691 ;;		line 1416 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 23692 ;; Parameters:    Size  Location     Type
 23693 ;;		None
 23694 ;; Auto vars:     Size  Location     Type
 23695 ;;		None
 23696 ;; Return value:  Size  Location     Type
 23697 ;;                  1    wreg      void 
 23698 ;; Registers used:
 23699 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23700 ;; Tracked objects:
 23701 ;;		On entry : 0/0
 23702 ;;		On exit  : 0/0
 23703 ;;		Unchanged: 0/0
 23704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23705 ;;      Params:         0       0       0       0       0       0       0       0       0
 23706 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23707 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23708 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23709 ;;Total ram usage:        0 bytes
 23710 ;; Hardware stack levels used:    1
 23711 ;; This function calls:
 23712 ;;		Nothing
 23713 ;; This function is called by:
 23714 ;;		_USBDeviceTasks
 23715 ;;		_USBCtrlEPServiceComplete
 23716 ;;		_USBCtrlTrfRxService
 23717 ;; This function uses a non-reentrant model
 23718 ;;
 23719                           
 23720                           	psect	text91
 23721  003F86                     __ptext91:
 23722                           	opt stack 0
 23723  003F86                     _USBCtrlEPAllowStatusStage:
 23724                           	opt stack 20
 23725                           
 23726                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
 23727                           
 23728                           ;incstack = 0
 23729  003F86  0101               	movlb	1	; () banked
 23730  003F88  51F7               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 23731  003F8A  A4D8               	btfss	status,2,c
 23732  003F8C  0012               	return	
 23733                           
 23734                           ; BSR set to: 1
 23735                           ;usb_device.c: 1424: {
 23736                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
 23737  003F8E  0E01               	movlw	1
 23738  003F90  6FF7               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 23739                           
 23740                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
 23741  003F92  0102               	movlb	2	; () banked
 23742  003F94  51E9               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 23743  003F96  A4D8               	btfss	status,2,c
 23744  003F98  0012               	return	
 23745                           
 23746                           ; BSR set to: 2
 23747                           ;usb_device.c: 1427: {
 23748                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
 23749  003F9A  0E01               	movlw	1
 23750  003F9C  6FE9               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 23751                           
 23752                           ; BSR set to: 2
 23753                           ;usb_device.c: 1432: if(controlTransferState == 2)
 23754  003F9E  0E02               	movlw	2
 23755  003FA0  1856               	xorwf	_controlTransferState,w,c	;volatile
 23756  003FA2  A4D8               	btfss	status,2,c
 23757  003FA4  D015               	goto	i2l467
 23758                           
 23759                           ; BSR set to: 2
 23760                           ;usb_device.c: 1433: {
 23761                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
 23762  003FA6  EE20 F001          	lfsr	2,1
 23763  003FAA  5046               	movf	_pBDTEntryIn,w,c
 23764  003FAC  26D9               	addwf	fsr2l,f,c
 23765  003FAE  5047               	movf	_pBDTEntryIn+1,w,c
 23766  003FB0  22DA               	addwfc	fsr2h,f,c
 23767  003FB2  0E00               	movlw	0
 23768  003FB4  6EDF               	movwf	indf2,c
 23769                           
 23770                           ; BSR set to: 2
 23771                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 23772  003FB6  C046  FFD9         	movff	_pBDTEntryIn,fsr2l
 23773  003FBA  C047  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23774  003FBE  0E48               	movlw	72
 23775  003FC0  6EDF               	movwf	indf2,c
 23776                           
 23777                           ; BSR set to: 2
 23778                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
 23779  003FC2  C046  FFD9         	movff	_pBDTEntryIn,fsr2l
 23780  003FC6  C047  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23781  003FCA  0E00               	movlw	0
 23782  003FCC  8EDB               	bsf	plusw2,7,c
 23783                           
 23784                           ;usb_device.c: 1437: }
 23785  003FCE  0012               	return	
 23786  003FD0                     i2l467:
 23787                           
 23788                           ; BSR set to: 2
 23789                           ;usb_device.c: 1438: else if(controlTransferState == 1)
 23790                           
 23791                           ; BSR set to: 2
 23792  003FD0  0456               	decf	_controlTransferState,w,c	;volatile
 23793  003FD2  A4D8               	btfss	status,2,c
 23794  003FD4  0012               	return	
 23795                           
 23796                           ; BSR set to: 2
 23797                           ;usb_device.c: 1439: {
 23798                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
 23799  003FD6  0E00               	movlw	0
 23800  003FD8  0101               	movlb	1	; () banked
 23801  003FDA  6FF8               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 23802                           
 23803                           ; BSR set to: 1
 23804                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
 23805  003FDC  EE20 F001          	lfsr	2,1
 23806  003FE0  5050               	movf	_pBDTEntryEP0OutCurrent,w,c
 23807  003FE2  26D9               	addwf	fsr2l,f,c
 23808  003FE4  5051               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 23809  003FE6  22DA               	addwfc	fsr2h,f,c
 23810  003FE8  0E08               	movlw	8
 23811  003FEA  6EDF               	movwf	indf2,c
 23812                           
 23813                           ; BSR set to: 1
 23814                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 23815  003FEC  EE20 F002          	lfsr	2,2
 23816  003FF0  5050               	movf	_pBDTEntryEP0OutCurrent,w,c
 23817  003FF2  26D9               	addwf	fsr2l,f,c
 23818  003FF4  5051               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 23819  003FF6  22DA               	addwfc	fsr2h,f,c
 23820  003FF8  0E30               	movlw	48
 23821  003FFA  6EDE               	movwf	postinc2,c
 23822  003FFC  0E04               	movlw	4
 23823  003FFE  6EDD               	movwf	postdec2,c
 23824                           
 23825                           ; BSR set to: 1
 23826                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 23827  004000  C050  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 23828  004004  C051  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 23829  004008  0E04               	movlw	4
 23830  00400A  6EDF               	movwf	indf2,c
 23831                           
 23832                           ; BSR set to: 1
 23833                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 23834  00400C  C050  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 23835  004010  C051  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 23836  004014  0E00               	movlw	0
 23837  004016  8EDB               	bsf	plusw2,7,c
 23838                           
 23839                           ; BSR set to: 1
 23840                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
 23841  004018  0E01               	movlw	1
 23842  00401A  6FF8               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 23843                           
 23844                           ; BSR set to: 1
 23845                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
 23846  00401C  EE20 F001          	lfsr	2,1
 23847  004020  504E               	movf	_pBDTEntryEP0OutNext,w,c
 23848  004022  26D9               	addwf	fsr2l,f,c
 23849  004024  504F               	movf	_pBDTEntryEP0OutNext+1,w,c
 23850  004026  22DA               	addwfc	fsr2h,f,c
 23851  004028  0E08               	movlw	8
 23852  00402A  6EDF               	movwf	indf2,c
 23853                           
 23854                           ; BSR set to: 1
 23855                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 23856  00402C  EE20 F002          	lfsr	2,2
 23857  004030  504E               	movf	_pBDTEntryEP0OutNext,w,c
 23858  004032  26D9               	addwf	fsr2l,f,c
 23859  004034  504F               	movf	_pBDTEntryEP0OutNext+1,w,c
 23860  004036  22DA               	addwfc	fsr2h,f,c
 23861  004038  0E30               	movlw	48
 23862  00403A  6EDE               	movwf	postinc2,c
 23863  00403C  0E04               	movlw	4
 23864  00403E  6EDD               	movwf	postdec2,c
 23865                           
 23866                           ; BSR set to: 1
 23867                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 23868  004040  C04E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23869  004044  C04F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23870  004048  0E80               	movlw	128
 23871  00404A  6EDF               	movwf	indf2,c
 23872                           
 23873                           ; BSR set to: 1
 23874                           
 23875                           ; BSR set to: 1
 23876                           
 23877                           ; BSR set to: 1
 23878  00404C  0012               	return	
 23879  00404E                     __end_of_USBCtrlEPAllowStatusStage:
 23880                           	opt stack 0
 23881                           pclatu	equ	0xFFB
 23882                           pclath	equ	0xFFA
 23883                           tblptru	equ	0xFF8
 23884                           tblptrh	equ	0xFF7
 23885                           tblptrl	equ	0xFF6
 23886                           tablat	equ	0xFF5
 23887                           prodh	equ	0xFF4
 23888                           prodl	equ	0xFF3
 23889                           intcon	equ	0xFF2
 23890                           indf0	equ	0xFEF
 23891                           postinc0	equ	0xFEE
 23892                           fsr0h	equ	0xFEA
 23893                           fsr0l	equ	0xFE9
 23894                           wreg	equ	0xFE8
 23895                           indf1	equ	0xFE7
 23896                           postdec1	equ	0xFE5
 23897                           fsr1h	equ	0xFE2
 23898                           fsr1l	equ	0xFE1
 23899                           indf2	equ	0xFDF
 23900                           postinc2	equ	0xFDE
 23901                           postdec2	equ	0xFDD
 23902                           plusw2	equ	0xFDB
 23903                           fsr2h	equ	0xFDA
 23904                           fsr2l	equ	0xFD9
 23905                           status	equ	0xFD8
 23906                           
 23907 ;; *************** function _USBCtrlTrfInHandler *****************
 23908 ;; Defined at:
 23909 ;;		line 2592 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 23910 ;; Parameters:    Size  Location     Type
 23911 ;;		None
 23912 ;; Auto vars:     Size  Location     Type
 23913 ;;  lastDTS         1    1[COMRAM] unsigned char 
 23914 ;; Return value:  Size  Location     Type
 23915 ;;                  1    wreg      void 
 23916 ;; Registers used:
 23917 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23918 ;; Tracked objects:
 23919 ;;		On entry : 0/0
 23920 ;;		On exit  : 0/0
 23921 ;;		Unchanged: 0/0
 23922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23923 ;;      Params:         0       0       0       0       0       0       0       0       0
 23924 ;;      Locals:         1       0       0       0       0       0       0       0       0
 23925 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23926 ;;      Totals:         1       0       0       0       0       0       0       0       0
 23927 ;;Total ram usage:        1 bytes
 23928 ;; Hardware stack levels used:    1
 23929 ;; Hardware stack levels required when called:    1
 23930 ;; This function calls:
 23931 ;;		_USBCtrlTrfTxService
 23932 ;; This function is called by:
 23933 ;;		_USBCtrlEPService
 23934 ;; This function uses a non-reentrant model
 23935 ;;
 23936                           
 23937                           	psect	text92
 23938  00404E                     __ptext92:
 23939                           	opt stack 0
 23940  00404E                     _USBCtrlTrfInHandler:
 23941                           	opt stack 21
 23942                           
 23943                           ;usb_device.c: 2594: uint8_t lastDTS;
 23944                           ;usb_device.c: 2596: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 23945                           
 23946                           ;incstack = 0
 23947  00404E  C046  FFD9         	movff	_pBDTEntryIn,fsr2l
 23948  004052  C047  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23949  004056  0E00               	movlw	0
 23950  004058  BCDF               	btfsc	indf2,6,c
 23951  00405A  0E01               	movlw	1
 23952  00405C  6E02               	movwf	USBCtrlTrfInHandler@lastDTS,c
 23953                           
 23954                           ;usb_device.c: 2599: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 23955  00405E  0E04               	movlw	4
 23956  004060  1846               	xorwf	_pBDTEntryIn,w,c
 23957  004062  6E46               	movwf	_pBDTEntryIn,c
 23958  004064  5047               	movf	_pBDTEntryIn+1,w,c
 23959  004066  6E47               	movwf	_pBDTEntryIn+1,c
 23960                           
 23961                           ;usb_device.c: 2604: if(USBDeviceState == ADR_PENDING_STATE)
 23962  004068  0E08               	movlw	8
 23963  00406A  1858               	xorwf	_USBDeviceState,w,c	;volatile
 23964  00406C  A4D8               	btfss	status,2,c
 23965  00406E  D00B               	goto	i2l594
 23966                           
 23967                           ;usb_device.c: 2605: {
 23968                           ;usb_device.c: 2606: UADDR = (SetupPkt.bDevADR & 0x7F);
 23969  004070  0104               	movlb	4	; () banked
 23970  004072  5132               	movf	50,w,b	;volatile
 23971  004074  0B7F               	andlw	127
 23972  004076  6E6E               	movwf	3950,c	;volatile
 23973                           
 23974                           ; BSR set to: 4
 23975                           ;usb_device.c: 2607: if(UADDR != 0u)
 23976  004078  506E               	movf	3950,w,c	;volatile
 23977  00407A  B4D8               	btfsc	status,2,c
 23978  00407C  D002               	goto	i2l593
 23979                           
 23980                           ; BSR set to: 4
 23981                           ;usb_device.c: 2608: {
 23982                           ;usb_device.c: 2609: USBDeviceState=ADDRESS_STATE;
 23983  00407E  0E10               	movlw	16
 23984  004080  D001               	goto	L31
 23985  004082                     i2l593:
 23986                           
 23987                           ; BSR set to: 4
 23988                           ;usb_device.c: 2611: else
 23989                           ;usb_device.c: 2612: {
 23990                           ;usb_device.c: 2613: USBDeviceState=DEFAULT_STATE;
 23991                           
 23992                           ; BSR set to: 4
 23993  004082  0E04               	movlw	4
 23994  004084                     L31:
 23995  004084  6E58               	movwf	_USBDeviceState,c	;volatile
 23996  004086                     i2l594:
 23997                           
 23998                           ;usb_device.c: 2614: }
 23999                           ;usb_device.c: 2615: }
 24000                           ;usb_device.c: 2618: if(controlTransferState == 1)
 24001                           
 24002                           ; BSR set to: 4
 24003                           
 24004                           ; BSR set to: 4
 24005  004086  0456               	decf	_controlTransferState,w,c	;volatile
 24006  004088  A4D8               	btfss	status,2,c
 24007  00408A  D03A               	goto	i2l595
 24008                           
 24009                           ;usb_device.c: 2619: {
 24010                           ;usb_device.c: 2620: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 24011  00408C  EE20 F002          	lfsr	2,2
 24012  004090  5046               	movf	_pBDTEntryIn,w,c
 24013  004092  26D9               	addwf	fsr2l,f,c
 24014  004094  5047               	movf	_pBDTEntryIn+1,w,c
 24015  004096  22DA               	addwfc	fsr2h,f,c
 24016  004098  0E38               	movlw	56
 24017  00409A  6EDE               	movwf	postinc2,c
 24018  00409C  0E04               	movlw	4
 24019  00409E  6EDD               	movwf	postdec2,c
 24020                           
 24021                           ;usb_device.c: 2621: USBCtrlTrfTxService();
 24022  0040A0  EC5D  F01F         	call	_USBCtrlTrfTxService	;wreg free
 24023                           
 24024                           ;usb_device.c: 2627: if(shortPacketStatus == 2)
 24025  0040A4  0E02               	movlw	2
 24026  0040A6  1857               	xorwf	_shortPacketStatus,w,c	;volatile
 24027  0040A8  A4D8               	btfss	status,2,c
 24028  0040AA  D00D               	goto	i2l596
 24029                           
 24030                           ;usb_device.c: 2628: {
 24031                           ;usb_device.c: 2631: pBDTEntryIn[0]->STAT.Val = 0x04;
 24032  0040AC  C046  FFD9         	movff	_pBDTEntryIn,fsr2l
 24033  0040B0  C047  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 24034  0040B4  0E04               	movlw	4
 24035  0040B6  6EDF               	movwf	indf2,c
 24036                           
 24037                           ;usb_device.c: 2632: pBDTEntryIn[0]->STAT.Val |= 0x80;
 24038  0040B8  C046  FFD9         	movff	_pBDTEntryIn,fsr2l
 24039  0040BC  C047  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 24040  0040C0  0E00               	movlw	0
 24041  0040C2  8EDB               	bsf	plusw2,7,c
 24042                           
 24043                           ;usb_device.c: 2633: }
 24044  0040C4  0012               	return	
 24045  0040C6                     i2l596:
 24046                           
 24047                           ;usb_device.c: 2634: else
 24048                           ;usb_device.c: 2635: {
 24049                           ;usb_device.c: 2636: if(lastDTS == 0)
 24050  0040C6  5002               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 24051  0040C8  A4D8               	btfss	status,2,c
 24052  0040CA  D00D               	goto	i2l598
 24053                           
 24054                           ;usb_device.c: 2637: {
 24055                           ;usb_device.c: 2638: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 24056  0040CC  C046  FFD9         	movff	_pBDTEntryIn,fsr2l
 24057  0040D0  C047  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 24058  0040D4  0E48               	movlw	72
 24059  0040D6  6EDF               	movwf	indf2,c
 24060                           
 24061                           ;usb_device.c: 2639: pBDTEntryIn[0]->STAT.Val |= 0x80;
 24062  0040D8  C046  FFD9         	movff	_pBDTEntryIn,fsr2l
 24063  0040DC  C047  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 24064  0040E0  0E00               	movlw	0
 24065  0040E2  8EDB               	bsf	plusw2,7,c
 24066                           
 24067                           ;usb_device.c: 2640: }
 24068  0040E4  0012               	return	
 24069  0040E6                     i2l598:
 24070                           
 24071                           ;usb_device.c: 2641: else
 24072                           ;usb_device.c: 2642: {
 24073                           ;usb_device.c: 2643: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 24074  0040E6  C046  FFD9         	movff	_pBDTEntryIn,fsr2l
 24075  0040EA  C047  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 24076  0040EE  0E08               	movlw	8
 24077  0040F0  6EDF               	movwf	indf2,c
 24078                           
 24079                           ;usb_device.c: 2644: pBDTEntryIn[0]->STAT.Val |= 0x80;
 24080  0040F2  C046  FFD9         	movff	_pBDTEntryIn,fsr2l
 24081  0040F6  C047  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 24082  0040FA  0E00               	movlw	0
 24083  0040FC  8EDB               	bsf	plusw2,7,c
 24084                           
 24085                           ;usb_device.c: 2645: }
 24086                           ;usb_device.c: 2646: }
 24087                           ;usb_device.c: 2647: }
 24088  0040FE  0012               	return	
 24089  004100                     i2l595:
 24090                           
 24091                           ;usb_device.c: 2648: else
 24092                           ;usb_device.c: 2649: {
 24093                           ;usb_device.c: 2653: if(outPipes[0].info.bits.busy == 1)
 24094  004100  BE3B               	btfsc	_outPipes+3,7,c	;volatile
 24095                           
 24096                           ;usb_device.c: 2658: }
 24097                           ;usb_device.c: 2659: outPipes[0].info.bits.busy = 0;
 24098                           
 24099                           ;usb_device.c: 2656: {
 24100                           ;usb_device.c: 2657: outPipes[0].pFunc();
 24101  004102  9E3B               	bcf	_outPipes+3,7,c	;volatile
 24102                           
 24103                           ;usb_device.c: 2660: }
 24104                           ;usb_device.c: 2662: controlTransferState = 0;
 24105  004104  0E00               	movlw	0
 24106  004106  6E56               	movwf	_controlTransferState,c	;volatile
 24107  004108  0012               	return	
 24108  00410A                     __end_of_USBCtrlTrfInHandler:
 24109                           	opt stack 0
 24110                           pclatu	equ	0xFFB
 24111                           pclath	equ	0xFFA
 24112                           tblptru	equ	0xFF8
 24113                           tblptrh	equ	0xFF7
 24114                           tblptrl	equ	0xFF6
 24115                           tablat	equ	0xFF5
 24116                           prodh	equ	0xFF4
 24117                           prodl	equ	0xFF3
 24118                           intcon	equ	0xFF2
 24119                           indf0	equ	0xFEF
 24120                           postinc0	equ	0xFEE
 24121                           fsr0h	equ	0xFEA
 24122                           fsr0l	equ	0xFE9
 24123                           wreg	equ	0xFE8
 24124                           indf1	equ	0xFE7
 24125                           postdec1	equ	0xFE5
 24126                           fsr1h	equ	0xFE2
 24127                           fsr1l	equ	0xFE1
 24128                           indf2	equ	0xFDF
 24129                           postinc2	equ	0xFDE
 24130                           postdec2	equ	0xFDD
 24131                           plusw2	equ	0xFDB
 24132                           fsr2h	equ	0xFDA
 24133                           fsr2l	equ	0xFD9
 24134                           status	equ	0xFD8
 24135                           
 24136 ;; *************** function _USBCtrlTrfTxService *****************
 24137 ;; Defined at:
 24138 ;;		line 1771 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 24139 ;; Parameters:    Size  Location     Type
 24140 ;;		None
 24141 ;; Auto vars:     Size  Location     Type
 24142 ;;  byteToSend      1    0[COMRAM] unsigned char 
 24143 ;; Return value:  Size  Location     Type
 24144 ;;                  1    wreg      void 
 24145 ;; Registers used:
 24146 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 24147 ;; Tracked objects:
 24148 ;;		On entry : 0/0
 24149 ;;		On exit  : 0/0
 24150 ;;		Unchanged: 0/0
 24151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24152 ;;      Params:         0       0       0       0       0       0       0       0       0
 24153 ;;      Locals:         1       0       0       0       0       0       0       0       0
 24154 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24155 ;;      Totals:         1       0       0       0       0       0       0       0       0
 24156 ;;Total ram usage:        1 bytes
 24157 ;; Hardware stack levels used:    1
 24158 ;; This function calls:
 24159 ;;		Nothing
 24160 ;; This function is called by:
 24161 ;;		_USBCtrlEPAllowDataStage
 24162 ;;		_USBCtrlTrfInHandler
 24163 ;; This function uses a non-reentrant model
 24164 ;;
 24165                           
 24166                           	psect	text93
 24167  003EBA                     __ptext93:
 24168                           	opt stack 0
 24169  003EBA                     _USBCtrlTrfTxService:
 24170                           	opt stack 19
 24171                           
 24172                           ;usb_device.c: 1773: uint8_t byteToSend;
 24173                           ;usb_device.c: 1777: byteToSend = 8;
 24174                           
 24175                           ;incstack = 0
 24176  003EBA  0E08               	movlw	8
 24177  003EBC  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 24178                           
 24179                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
 24180  003EBE  5045               	movf	_inPipes+5,w,c	;volatile
 24181  003EC0  E110               	bnz	i2l7550
 24182  003EC2  0E08               	movlw	8
 24183  003EC4  5C44               	subwf	_inPipes+4,w,c	;volatile
 24184  003EC6  B0D8               	btfsc	status,0,c
 24185  003EC8  D00C               	goto	i2l500
 24186                           
 24187                           ;usb_device.c: 1779: {
 24188                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
 24189  003ECA  C044  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 24190                           
 24191                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
 24192  003ECE  5057               	movf	_shortPacketStatus,w,c	;volatile
 24193  003ED0  A4D8               	btfss	status,2,c
 24194  003ED2  D002               	goto	i2l498
 24195                           
 24196                           ;usb_device.c: 1788: {
 24197                           ;usb_device.c: 1789: shortPacketStatus = 1;
 24198  003ED4  0E01               	movlw	1
 24199  003ED6  D004               	goto	L32
 24200  003ED8                     i2l498:
 24201                           
 24202                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
 24203  003ED8  0457               	decf	_shortPacketStatus,w,c	;volatile
 24204  003EDA  A4D8               	btfss	status,2,c
 24205  003EDC  D002               	goto	i2l500
 24206                           
 24207                           ;usb_device.c: 1792: {
 24208                           ;usb_device.c: 1793: shortPacketStatus = 2;
 24209  003EDE  0E02               	movlw	2
 24210  003EE0                     L32:
 24211  003EE0  6E57               	movwf	_shortPacketStatus,c	;volatile
 24212  003EE2                     i2l500:
 24213  003EE2                     i2l7550:
 24214                           
 24215                           ;usb_device.c: 1794: }
 24216                           ;usb_device.c: 1795: }
 24217                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
 24218  003EE2  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 24219  003EE4  5E44               	subwf	_inPipes+4,f,c	;volatile
 24220  003EE6  0E00               	movlw	0
 24221  003EE8  5A45               	subwfb	_inPipes+5,f,c	;volatile
 24222                           
 24223                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
 24224  003EEA  EE20 F001          	lfsr	2,1
 24225  003EEE  5046               	movf	_pBDTEntryIn,w,c
 24226  003EF0  26D9               	addwf	fsr2l,f,c
 24227  003EF2  5047               	movf	_pBDTEntryIn+1,w,c
 24228  003EF4  22DA               	addwfc	fsr2h,f,c
 24229  003EF6  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 24230                           
 24231                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
 24232  003EFA  0E38               	movlw	56
 24233  003EFC  0103               	movlb	3	; () banked
 24234  003EFE  6F4C               	movwf	_pDst& (0+255),b
 24235  003F00  0E04               	movlw	4
 24236  003F02  6F4D               	movwf	(_pDst+1)& (0+255),b
 24237                           
 24238                           ; BSR set to: 3
 24239                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 24240  003F04  A043               	btfss	_inPipes+3,0,c	;volatile
 24241  003F06  D01C               	goto	i2l502
 24242  003F08  D03A               	goto	i2l506
 24243  003F0A                     
 24244                           ; BSR set to: 3
 24245                           ;usb_device.c: 1812: {
 24246                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
 24247                           
 24248                           ; BSR set to: 3
 24249  003F0A  C040  FFF6         	movff	_inPipes,tblptrl	;volatile
 24250  003F0E  C041  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 24251  003F12  6AF8               	clrf	tblptru,c
 24252  003F14  C34C  FFD9         	movff	_pDst,fsr2l
 24253  003F18  C34D  FFDA         	movff	_pDst+1,fsr2h
 24254  003F1C  0E07               	movlw	(high __ramtop+-1)
 24255  003F1E  64F7               	cpfsgt	tblptrh,c
 24256  003F20  D003               	bra	i2u589_47
 24257  003F22  0008               	tblrd		*
 24258  003F24  50F5               	movf	tablat,w,c
 24259  003F26  D005               	bra	i2u589_40
 24260  003F28                     i2u589_47:
 24261  003F28  CFF6 FFE9          	movff	tblptrl,fsr0l
 24262  003F2C  CFF7 FFEA          	movff	tblptrh,fsr0h
 24263  003F30  50EF               	movf	indf0,w,c
 24264  003F32                     i2u589_40:
 24265  003F32  6EDF               	movwf	indf2,c
 24266  003F34  4A40               	infsnz	_inPipes,f,c	;volatile
 24267  003F36  2A41               	incf	_inPipes+1,f,c	;volatile
 24268  003F38  0103               	movlb	3	; () banked
 24269  003F3A  4B4C               	infsnz	_pDst& (0+255),f,b
 24270  003F3C  2B4D               	incf	(_pDst+1)& (0+255),f,b
 24271                           
 24272                           ; BSR set to: 3
 24273                           ;usb_device.c: 1814: byteToSend--;
 24274  003F3E  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 24275  003F40                     i2l502:
 24276                           
 24277                           ; BSR set to: 3
 24278                           
 24279                           ; BSR set to: 3
 24280  003F40  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 24281  003F42  B4D8               	btfsc	status,2,c
 24282  003F44  0012               	return	
 24283  003F46  D7E1               	goto	i2l503
 24284  003F48                     
 24285                           ; BSR set to: 3
 24286                           ;usb_device.c: 1820: {
 24287                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
 24288                           
 24289                           ; BSR set to: 3
 24290  003F48  C040  FFF6         	movff	_inPipes,tblptrl	;volatile
 24291  003F4C  C041  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 24292  003F50  6AF8               	clrf	tblptru,c
 24293  003F52  C34C  FFD9         	movff	_pDst,fsr2l
 24294  003F56  C34D  FFDA         	movff	_pDst+1,fsr2h
 24295  003F5A  0E07               	movlw	(high __ramtop+-1)
 24296  003F5C  64F7               	cpfsgt	tblptrh,c
 24297  003F5E  D003               	bra	i2u591_47
 24298  003F60  0008               	tblrd		*
 24299  003F62  50F5               	movf	tablat,w,c
 24300  003F64  D005               	bra	i2u591_40
 24301  003F66                     i2u591_47:
 24302  003F66  CFF6 FFE9          	movff	tblptrl,fsr0l
 24303  003F6A  CFF7 FFEA          	movff	tblptrh,fsr0h
 24304  003F6E  50EF               	movf	indf0,w,c
 24305  003F70                     i2u591_40:
 24306  003F70  6EDF               	movwf	indf2,c
 24307  003F72  4A40               	infsnz	_inPipes,f,c	;volatile
 24308  003F74  2A41               	incf	_inPipes+1,f,c	;volatile
 24309  003F76  0103               	movlb	3	; () banked
 24310  003F78  4B4C               	infsnz	_pDst& (0+255),f,b
 24311  003F7A  2B4D               	incf	(_pDst+1)& (0+255),f,b
 24312                           
 24313                           ; BSR set to: 3
 24314                           ;usb_device.c: 1822: byteToSend--;
 24315  003F7C  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 24316  003F7E                     i2l506:
 24317                           
 24318                           ; BSR set to: 3
 24319                           
 24320                           ; BSR set to: 3
 24321  003F7E  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 24322  003F80  B4D8               	btfsc	status,2,c
 24323  003F82  0012               	return	
 24324  003F84  D7E1               	goto	i2l507
 24325  003F86                     __end_of_USBCtrlTrfTxService:
 24326                           	opt stack 0
 24327                           pclatu	equ	0xFFB
 24328                           pclath	equ	0xFFA
 24329                           tblptru	equ	0xFF8
 24330                           tblptrh	equ	0xFF7
 24331                           tblptrl	equ	0xFF6
 24332                           tablat	equ	0xFF5
 24333                           prodh	equ	0xFF4
 24334                           prodl	equ	0xFF3
 24335                           intcon	equ	0xFF2
 24336                           indf0	equ	0xFEF
 24337                           postinc0	equ	0xFEE
 24338                           fsr0h	equ	0xFEA
 24339                           fsr0l	equ	0xFE9
 24340                           wreg	equ	0xFE8
 24341                           indf1	equ	0xFE7
 24342                           postdec1	equ	0xFE5
 24343                           fsr1h	equ	0xFE2
 24344                           fsr1l	equ	0xFE1
 24345                           indf2	equ	0xFDF
 24346                           postinc2	equ	0xFDE
 24347                           postdec2	equ	0xFDD
 24348                           plusw2	equ	0xFDB
 24349                           fsr2h	equ	0xFDA
 24350                           fsr2l	equ	0xFD9
 24351                           status	equ	0xFD8
 24352                           pclatu	equ	0xFFB
 24353                           pclath	equ	0xFFA
 24354                           tblptru	equ	0xFF8
 24355                           tblptrh	equ	0xFF7
 24356                           tblptrl	equ	0xFF6
 24357                           tablat	equ	0xFF5
 24358                           prodh	equ	0xFF4
 24359                           prodl	equ	0xFF3
 24360                           intcon	equ	0xFF2
 24361                           indf0	equ	0xFEF
 24362                           postinc0	equ	0xFEE
 24363                           fsr0h	equ	0xFEA
 24364                           fsr0l	equ	0xFE9
 24365                           wreg	equ	0xFE8
 24366                           indf1	equ	0xFE7
 24367                           postdec1	equ	0xFE5
 24368                           fsr1h	equ	0xFE2
 24369                           fsr1l	equ	0xFE1
 24370                           indf2	equ	0xFDF
 24371                           postinc2	equ	0xFDE
 24372                           postdec2	equ	0xFDD
 24373                           plusw2	equ	0xFDB
 24374                           fsr2h	equ	0xFDA
 24375                           fsr2l	equ	0xFD9
 24376                           status	equ	0xFD8
 24377                           
 24378                           	psect	rparam
 24379  0000                     pclatu	equ	0xFFB
 24380                           pclath	equ	0xFFA
 24381                           tblptru	equ	0xFF8
 24382                           tblptrh	equ	0xFF7
 24383                           tblptrl	equ	0xFF6
 24384                           tablat	equ	0xFF5
 24385                           prodh	equ	0xFF4
 24386                           prodl	equ	0xFF3
 24387                           intcon	equ	0xFF2
 24388                           indf0	equ	0xFEF
 24389                           postinc0	equ	0xFEE
 24390                           fsr0h	equ	0xFEA
 24391                           fsr0l	equ	0xFE9
 24392                           wreg	equ	0xFE8
 24393                           indf1	equ	0xFE7
 24394                           postdec1	equ	0xFE5
 24395                           fsr1h	equ	0xFE2
 24396                           fsr1l	equ	0xFE1
 24397                           indf2	equ	0xFDF
 24398                           postinc2	equ	0xFDE
 24399                           postdec2	equ	0xFDD
 24400                           plusw2	equ	0xFDB
 24401                           fsr2h	equ	0xFDA
 24402                           fsr2l	equ	0xFD9
 24403                           status	equ	0xFD8
 24404                           
 24405                           	psect	temp
 24406  00005F                     btemp:
 24407                           	opt stack 0
 24408  00005F                     	ds	1
 24409  0000                     int$flags	set	btemp
 24410  0000                     wtemp6	set	btemp+1
 24411                           pclatu	equ	0xFFB
 24412                           pclath	equ	0xFFA
 24413                           tblptru	equ	0xFF8
 24414                           tblptrh	equ	0xFF7
 24415                           tblptrl	equ	0xFF6
 24416                           tablat	equ	0xFF5
 24417                           prodh	equ	0xFF4
 24418                           prodl	equ	0xFF3
 24419                           intcon	equ	0xFF2
 24420                           indf0	equ	0xFEF
 24421                           postinc0	equ	0xFEE
 24422                           fsr0h	equ	0xFEA
 24423                           fsr0l	equ	0xFE9
 24424                           wreg	equ	0xFE8
 24425                           indf1	equ	0xFE7
 24426                           postdec1	equ	0xFE5
 24427                           fsr1h	equ	0xFE2
 24428                           fsr1l	equ	0xFE1
 24429                           indf2	equ	0xFDF
 24430                           postinc2	equ	0xFDE
 24431                           postdec2	equ	0xFDD
 24432                           plusw2	equ	0xFDB
 24433                           fsr2h	equ	0xFDA
 24434                           fsr2l	equ	0xFD9
 24435                           status	equ	0xFD8


Data Sizes:
    Strings     492
    Constant    536
    Data        31
    BSS         907
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     55      94
    BANK0           160    160     160
    BANK1           256    239     256
    BANK2           256    200     255
    BANK3           256      0     227
    BANK4           192      0     100
    BANK5           128      0     100
    BANK6           256      0     200
    BANK7           256      0     200

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMl[48]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_20(CODE[16]), STR_19(CODE[7]), STR_18(CODE[14]), STR_17(CODE[8]), 
		 -> STR_16(CODE[8]), STR_15(CODE[10]), STR_14(CODE[17]), STR_13(CODE[11]), 
		 -> STR_12(CODE[5]), STR_11(CODE[32]), STR_10(CODE[7]), STR_9(CODE[11]), 
		 -> STR_8(CODE[11]), STR_7(CODE[14]), STR_6(CODE[3]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 100
		 -> recebeByteLoRaWan@frameData(BANK4[100]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 200
		 -> recebeByteLoRaWan@frameData(BANK4[100]), SYS(CODE[5]), MAC(CODE[5]), TxLoRaWan@comando(BANK1[200]), 
		 -> DataRate@comando(BANK1[200]), SetBandWidth@comando(BANK1[200]), SetSpreadingFactor@comando(BANK1[200]), MacSave@comando(BANK1[200]), 
		 -> GetAdr@comando(BANK1[200]), SetAdr@comando(BANK1[200]), SetChannelLoRaWan@comando(BANK1[200]), MAC_JOIN_OTAA(CODE[10]), 
		 -> SYS_RESET(CODE[6]), SetAppKey@comando(BANK1[200]), SetAppEUI@comando(BANK1[200]), SetDevEUI@comando(BANK1[200]), 
		 -> GetDnctr@comando(BANK1[200]), STR_20(CODE[16]), STR_19(CODE[7]), STR_18(CODE[14]), 
		 -> STR_17(CODE[8]), STR_16(CODE[8]), STR_15(CODE[10]), STR_14(CODE[17]), 
		 -> STR_13(CODE[11]), STR_12(CODE[5]), STR_11(CODE[32]), STR_10(CODE[7]), 
		 -> STR_9(CODE[11]), STR_8(CODE[11]), STR_7(CODE[14]), STR_6(CODE[3]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 200
		 -> recebeByteLoRaWan@frameData(BANK4[100]), SYS(CODE[5]), MAC(CODE[5]), TxLoRaWan@comando(BANK1[200]), 
		 -> DataRate@comando(BANK1[200]), SetBandWidth@comando(BANK1[200]), SetSpreadingFactor@comando(BANK1[200]), MacSave@comando(BANK1[200]), 
		 -> GetAdr@comando(BANK1[200]), SetAdr@comando(BANK1[200]), SetChannelLoRaWan@comando(BANK1[200]), MAC_JOIN_OTAA(CODE[10]), 
		 -> SYS_RESET(CODE[6]), SetAppKey@comando(BANK1[200]), SetAppEUI@comando(BANK1[200]), SetDevEUI@comando(BANK1[200]), 
		 -> GetDnctr@comando(BANK1[200]), STR_20(CODE[16]), STR_19(CODE[7]), STR_18(CODE[14]), 
		 -> STR_17(CODE[8]), STR_16(CODE[8]), STR_15(CODE[10]), STR_14(CODE[17]), 
		 -> STR_13(CODE[11]), STR_12(CODE[5]), STR_11(CODE[32]), STR_10(CODE[7]), 
		 -> STR_9(CODE[11]), STR_8(CODE[11]), STR_7(CODE[14]), STR_6(CODE[3]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 100
		 -> recebeByteLoRaWan@frameData(BANK4[100]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 200
		 -> frameBuffer(BANK7[200]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 200
		 -> frameBuffer(BANK7[200]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_20(CODE[16]), STR_19(CODE[7]), STR_18(CODE[14]), STR_17(CODE[8]), 
		 -> STR_16(CODE[8]), STR_15(CODE[10]), STR_14(CODE[17]), STR_13(CODE[11]), 
		 -> STR_12(CODE[5]), STR_11(CODE[32]), STR_10(CODE[7]), STR_9(CODE[11]), 
		 -> STR_8(CODE[11]), STR_7(CODE[14]), STR_6(CODE[3]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 100
		 -> recebeByteLoRaWan@frameData(BANK4[100]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 30
		 -> TxLoRaWan@hex(BANK1[4]), addSensorFloat@f(COMRAM[30]), addSensorInt@f(COMRAM[30]), addSensorStr@f(COMRAM[30]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 200
		 -> TxLoRaWan@comando(BANK1[200]), frameBuffer(BANK7[200]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 200
		 -> TxLoRaWan@comando(BANK1[200]), frameBuffer(BANK7[200]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 100
		 -> receivePacket(BANK5[100]), response(BANK3[100]), SetupPkt(BIGRAMhl[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 100
		 -> receivePacket(BANK5[100]), response(BANK3[100]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 2047
		 -> recebeByte@frameData(BANK6[100]), CtrlTrfData(BIGRAMhl[8]), RAM(DATA[2047]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 2047
		 -> recebeByte@frameData(BANK6[100]), CtrlTrfData(BIGRAMhl[8]), RAM(DATA[2047]), SetupPkt(BIGRAMhl[8]), 

    sprintf$5101	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_38(CODE[17]), STR_37(CODE[17]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_36(CODE[7]), MAC_TX_UNCNF(CODE[9]), MAC_TX_CNF(CODE[7]), MAC_SET_DR(CODE[7]), 
		 -> MAC_SET_BW(CODE[13]), MAC_SET_SF(CODE[16]), MAC_SAVE(CODE[5]), MAC_GET_ADR(CODE[8]), 
		 -> MAC_SET_ADR(CODE[8]), MAC_SET_CH_STATUS(CODE[14]), MAC_SET_APPKEY(CODE[11]), MAC_SET_APPEUI(CODE[11]), 
		 -> MAC_SET_DEVEUI(CODE[11]), MAC_GET_DNCTR(CODE[10]), STATE_ON(CODE[3]), STATE_OFF(CODE[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 101
		 -> STR_35(CODE[5]), STR_34(CODE[7]), STR_33(CODE[7]), STR_32(CODE[6]), 
		 -> STR_31(CODE[6]), STR_30(CODE[5]), STR_29(CODE[3]), STR_28(CODE[3]), 
		 -> STR_27(CODE[6]), STR_26(CODE[10]), STR_25(CODE[9]), STR_24(CODE[68]), 
		 -> STR_23(CODE[36]), STR_22(CODE[36]), STR_21(CODE[3]), STR_5(CODE[7]), 
		 -> STR_4(CODE[8]), STR_3(CODE[7]), STR_2(CODE[5]), STR_1(CODE[101]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 200
		 -> TxLoRaWan@hex(BANK1[4]), TxLoRaWan@comando(BANK1[200]), DataRate@comando(BANK1[200]), SetBandWidth@comando(BANK1[200]), 
		 -> SetSpreadingFactor@comando(BANK1[200]), MacSave@comando(BANK1[200]), GetAdr@comando(BANK1[200]), SetAdr@comando(BANK1[200]), 
		 -> SetChannelLoRaWan@comando(BANK1[200]), SetAppKey@comando(BANK1[200]), SetAppEUI@comando(BANK1[200]), SetDevEUI@comando(BANK1[200]), 
		 -> GetDnctr@comando(BANK1[200]), addSensorFloat@f(COMRAM[30]), addSensorInt@f(COMRAM[30]), addSensorStr@f(COMRAM[30]), 
		 -> frameBuffer(BANK7[200]), main@data(BANK2[150]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 200
		 -> frameBuffer(BANK7[200]), 

    enviaComando@cmd	PTR const unsigned char  size(2) Largest target is 200
		 -> TxLoRaWan@comando(BANK1[200]), DataRate@comando(BANK1[200]), SetBandWidth@comando(BANK1[200]), SetSpreadingFactor@comando(BANK1[200]), 
		 -> MacSave@comando(BANK1[200]), GetAdr@comando(BANK1[200]), SetAdr@comando(BANK1[200]), SetChannelLoRaWan@comando(BANK1[200]), 
		 -> MAC_JOIN_OTAA(CODE[10]), SYS_RESET(CODE[6]), SetAppKey@comando(BANK1[200]), SetAppEUI@comando(BANK1[200]), 
		 -> SetDevEUI@comando(BANK1[200]), GetDnctr@comando(BANK1[200]), 

    TxLoRaWan@data	PTR const unsigned char  size(2) Largest target is 22
		 -> main@dadoPoco(BANK2[22]), 

    SetAdr@state	PTR const unsigned char  size(2) Largest target is 4
		 -> STATE_ON(CODE[3]), STATE_OFF(CODE[4]), 

    MSG_LORAWAN	PTR const unsigned char [15] size(2) Largest target is 32
		 -> STR_20(CODE[16]), STR_19(CODE[7]), STR_18(CODE[14]), STR_17(CODE[8]), 
		 -> STR_16(CODE[8]), STR_15(CODE[10]), STR_14(CODE[17]), STR_13(CODE[11]), 
		 -> STR_12(CODE[5]), STR_11(CODE[32]), STR_10(CODE[7]), STR_9(CODE[11]), 
		 -> STR_8(CODE[11]), STR_7(CODE[14]), STR_6(CODE[3]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 200
		 -> TxLoRaWan@comando(BANK1[200]), frameBuffer(BANK7[200]), 

    putsUSBUSART@data	PTR unsigned char  size(2) Largest target is 150
		 -> main@data(BANK2[150]), 

    putsUSBUSART@pData	PTR unsigned char  size(2) Largest target is 150
		 -> main@data(BANK2[150]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S2362_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S2362_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S2362_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S2362_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 100
		 -> receivePacket(BANK5[100]), response(BANK3[100]), SetupPkt(BIGRAMhl[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BIGRAMhl[64]), cdc_data_rx(BIGRAMhh[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S541$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S531$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S531$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S507$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S507$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S507$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S507$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _SYS_InterruptHigh in COMRAM

    _SYS_InterruptHigh->_USBDeviceTasks
    _recebeByteLoRaWan->_strncmp
    _converter->_toupper
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    _main->_TxLoRaWan
    _setup_uart->___lldiv
    _le_pulsos->_retornaDado
    _le_AD->___ftdiv
    ___ftdiv->___ftmul
    ___awtoft->___ftpack
    _verificaUSB->_CDCTxService
    _CDCTxService->_USBTransferOnePacket
    _USBDeviceInit->_memset
    _TxLoRaWan->_sprintf
    _ResetModuloLoRaWan->_enviaComando
    _JoinLoRaWan->_enviaComando
    _SetSpreadingFactor->_sprintf
    _SetDevEUI->_sprintf
    _SetChannelLoRaWan->_sprintf
    _SetBandWidth->_sprintf
    _SetAppKey->_sprintf
    _SetAppEUI->_sprintf
    _SetAdr->_sprintf
    _MacSave->_sprintf
    _DataRate->_sprintf
    _sprintf->___fttol
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___ftadd
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->_le_AD
    ___ftsub->___ftadd
    ___ftadd->___wmul
    _enviaComando->_parseLoRaWan
    _parseLoRaWan->_millis

Critical Paths under _SYS_InterruptHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_TxLoRaWan
    _TxLoRaWan->_sprintf
    _SetSpreadingFactor->_sprintf
    _SetDevEUI->_sprintf
    _SetChannelLoRaWan->_sprintf
    _SetBandWidth->_sprintf
    _SetAppKey->_sprintf
    _SetAppEUI->_sprintf
    _SetAdr->_sprintf
    _MacSave->_sprintf
    _DataRate->_sprintf

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _SYS_InterruptHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _SYS_InterruptHigh in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               210   210      0 1057407
                                            150 BANK0     10    10      0
                                              0 BANK2    200   200      0
                           _DataRate
                            _MacSave
                             _SetAdr
                          _SetAppEUI
                          _SetAppKey
                       _SetBandWidth
                  _SetChannelLoRaWan
                          _SetDevEUI
                 _SetSpreadingFactor
                          _TxLoRaWan
                      _USBDeviceInit
                            ___ftmul
                            ___fttol
                              _delay
                              _le_AD
                          _le_pulsos
                             _millis
                              _putch
                       _putsUSBUSART
                        _retornaDado
                           _setup_AD
                         _setup_ccp1
                       _setup_pulsos
                         _setup_uart
                            _sprintf
                        _verificaUSB
 ---------------------------------------------------------------------------------
 (1) _setup_uart                                           8     4      4    1409
                                             13 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (1) _setup_pulsos                                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup_ccp1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup_AD                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _putsUSBUSART                                         5     3      2     202
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _le_pulsos                                            9     5      4     492
                                              5 BANK0      9     5      4
                        _retornaDado (ARG)
 ---------------------------------------------------------------------------------
 (1) _le_AD                                               18    15      3   17964
                                             62 BANK0     18    15      3
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    3544
                                             47 BANK0     15     9      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             4     1      3    3114
                                              8 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _delay                                               16    12      4    1927
                                             13 BANK0     16    12      4
                             _millis
                        _verificaUSB
 ---------------------------------------------------------------------------------
 (1) _verificaUSB                                          0     0      0    1770
                       _CDCTxService
                    _USBDeviceAttach
                    _USBDeviceDetach
 ---------------------------------------------------------------------------------
 (2) _USBDeviceDetach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CDCTxService                                         2     2      0    1770
                                             11 BANK0      2     2      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBTransferOnePacket                                11     7      4    1633
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1132
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     930
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _TxLoRaWan                                          212   208      4  107376
                                            145 BANK0      5     1      4
                                             32 BANK1    207   207      0
                        _JoinLoRaWan
                 _ResetModuloLoRaWan
                       _enviaComando
                       _parseLoRaWan
                        _retornaDado
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (2) _strcat                                               6     2      4     810
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _retornaDado                                          5     4      1    7054
                                              0 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (2) _ResetModuloLoRaWan                                   1     1      0    3530
                                             39 BANK0      1     1      0
                       _enviaComando
 ---------------------------------------------------------------------------------
 (2) _JoinLoRaWan                                          1     1      0    3647
                                             39 BANK0      1     1      0
                       _enviaComando
                       _parseLoRaWan
 ---------------------------------------------------------------------------------
 (1) _SetSpreadingFactor                                 202   202      0   91233
                                             32 BANK1    202   202      0
                       _enviaComando
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _SetDevEUI                                          201   201      0   91211
                                             32 BANK1    201   201      0
                       _enviaComando
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _SetChannelLoRaWan                                  203   202      1   91655
                                            145 BANK0      1     0      1
                                             32 BANK1    202   202      0
                       _enviaComando
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _SetBandWidth                                       205   203      2   91411
                                            145 BANK0      3     1      2
                                             32 BANK1    202   202      0
                       _enviaComando
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _SetAppKey                                          201   201      0   91211
                                             32 BANK1    201   201      0
                       _enviaComando
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _SetAppEUI                                          201   201      0   91211
                                             32 BANK1    201   201      0
                       _enviaComando
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _SetAdr                                             203   201      2   91589
                                            145 BANK0      2     0      2
                                             32 BANK1    201   201      0
                       _enviaComando
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _MacSave                                            201   201      0   91211
                                             32 BANK1    201   201      0
                       _enviaComando
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _DataRate                                           205   203      2   91500
                                            145 BANK0      3     1      2
                                             32 BANK1    202   202      0
                       _enviaComando
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             83    39     44   87614
                                             95 BANK0     50     6     44
                                              0 BANK1     32    32      0
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                                7     4      3   21782
                                             47 BANK0      7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              10     7      3   21584
                                             47 BANK0     10     7      3
                            ___awdiv
                            ___awmod
                            ___ftadd (ARG)
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4   10923
                                             14 BANK0      6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    6438
                                             32 BANK0     15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1898
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    2080
                                              6 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         15     9      6     481
                                              0 BANK0     15     9      6
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          12     6      6     624
                                              0 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             9     5      4    3092
                                              8 BANK0      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     871
                                             13 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8    1230
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     697
                                             80 BANK0     15    11      4
                            ___ftmul (ARG)
                              _le_AD (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    5035
                                             32 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    4638
                                             20 BANK0     12     6      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2934
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     134
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     670
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (2) _enviaComando                                        11     8      3    3507
                                             28 BANK0     11     8      3
                    _initRecebeDados
                       _parseLoRaWan
                              _putch
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               6     4      2     672
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _putch                                                1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _parseLoRaWan                                        20    20      0     117
                                              8 BANK0     20    20      0
                             _millis
 ---------------------------------------------------------------------------------
 (1) _millis                                               8     4      4      23
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _initRecebeDados                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _SYS_InterruptHigh                                   27    27      0   33452
                                             28 COMRAM    27    27      0
                     _USBDeviceTasks
                              _getch
                  _recebeByteLoRaWan
 ---------------------------------------------------------------------------------
 (7) _recebeByteLoRaWan                                   10    10      0    2515
                                              9 COMRAM    10    10      0
                          _converter
                             _strcmp
                             _strcpy
                            _strncmp
                           i2_strlen
 ---------------------------------------------------------------------------------
 (8) i2_strlen                                             6     4      2     220
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) _strncmp                                              9     3      6     668
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (8) _strcpy                                               6     2      4     253
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) _strcmp                                               6     2      4     269
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) _converter                                            5     4      1     675
                                              1 COMRAM     5     4      1
                            _toupper
 ---------------------------------------------------------------------------------
 (9) _toupper                                              1     1      0      67
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _getch                                                3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (7) _USBDeviceTasks                                       1     1      0   30623
                                             27 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (8) i2_USBDeviceInit                                      1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (8) _USBWakeFromSuspend                                   0     0      0    3879
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBSuspend                                           0     0      0    3879
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBStallHandler                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPService                                     1     1      0   18330
                                             26 COMRAM     1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (9) _memcpy                                              11     5      6    1478
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfSetupHandler                               0     0      0   16623
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (10) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (11) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (10) _USBCheckStdRequest                                  0     0      0   12652
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (11) _USBStdSetCfgHandler                                 1     1      0    4377
                                             20 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (9) i2_memset                                             8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (11) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (11) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (11) _USBStdFeatureReqHandler                             6     6      0    4350
                                             20 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6    3879
                                             12 COMRAM     8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (9) _USBCheckCDCRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _CDCInitEP                                            0     0      0    1187
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (10) i2_USBTransferOnePacket                             11     7      4     454
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (10) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (11) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfOutHandler                                 0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (10) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (11) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfInHandler                                  1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (12) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DataRate
     _enviaComando
       _initRecebeDados
       _parseLoRaWan
         _millis
       _putch
       _strlen
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _le_AD (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _MacSave
     _enviaComando
       _initRecebeDados
       _parseLoRaWan
         _millis
       _putch
       _strlen
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _le_AD (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _SetAdr
     _enviaComando
       _initRecebeDados
       _parseLoRaWan
         _millis
       _putch
       _strlen
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _le_AD (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _SetAppEUI
     _enviaComando
       _initRecebeDados
       _parseLoRaWan
         _millis
       _putch
       _strlen
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _le_AD (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _SetAppKey
     _enviaComando
       _initRecebeDados
       _parseLoRaWan
         _millis
       _putch
       _strlen
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _le_AD (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _SetBandWidth
     _enviaComando
       _initRecebeDados
       _parseLoRaWan
         _millis
       _putch
       _strlen
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _le_AD (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _SetChannelLoRaWan
     _enviaComando
       _initRecebeDados
       _parseLoRaWan
         _millis
       _putch
       _strlen
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _le_AD (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _SetDevEUI
     _enviaComando
       _initRecebeDados
       _parseLoRaWan
         _millis
       _putch
       _strlen
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _le_AD (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _SetSpreadingFactor
     _enviaComando
       _initRecebeDados
       _parseLoRaWan
         _millis
       _putch
       _strlen
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _le_AD (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _TxLoRaWan
     _JoinLoRaWan
       _enviaComando
         _initRecebeDados
         _parseLoRaWan
           _millis
         _putch
         _strlen
       _parseLoRaWan
         _millis
     _ResetModuloLoRaWan
       _enviaComando
         _initRecebeDados
         _parseLoRaWan
           _millis
         _putch
         _strlen
     _enviaComando
       _initRecebeDados
       _parseLoRaWan
         _millis
       _putch
       _strlen
     _parseLoRaWan
       _millis
     _retornaDado
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _le_AD (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     _strcat
   _USBDeviceInit
     _memset
   ___ftmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftpack (ARG)
     ___wmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
   ___fttol
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _le_AD (ARG)
       ___awtoft
         ___ftpack
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   _delay
     _millis
     _verificaUSB
       _CDCTxService
         _USBTransferOnePacket
       _USBDeviceAttach
       _USBDeviceDetach
   _le_AD
     ___awtoft
       ___ftpack
     ___ftadd
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   _le_pulsos
     _retornaDado (ARG)
   _millis
   _putch
   _putsUSBUSART
   _retornaDado
   _setup_AD
   _setup_ccp1
   _setup_pulsos
   _setup_uart
     ___lldiv
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftneg
     ___ftsub
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _le_AD (ARG)
         ___awtoft
           ___ftpack
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___lltoft
       ___ftpack
     ___wmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftadd (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   _verificaUSB
     _CDCTxService
       _USBTransferOnePacket
     _USBDeviceAttach
     _USBDeviceDetach

 _SYS_InterruptHigh (ROOT)
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _USBCheckCDCRequest
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _USBCheckCDCRequest
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _USBCheckCDCRequest
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _memcpy
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _USBCheckCDCRequest
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _USBCheckCDCRequest
     _USER_USB_CALLBACK_EVENT_HANDLER
       _CDCInitEP
         _USBEnableEndpoint
           _USBConfigureEndpoint
         i2_USBTransferOnePacket
       _USBCheckCDCRequest
     i2_USBDeviceInit
       i2_memset
   _getch
   _recebeByteLoRaWan
     _converter
       _toupper
     _strcmp
     _strcpy
     _strncmp
     i2_strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            3FF      0       0      23        0.0%
BIGRAMhh           280      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0      C8      20       78.1%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0      C8      18       78.1%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      E3      11       88.7%
BITBANK2           100      0       0       8        0.0%
BANK2              100     C8      FF       9       99.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100     EF     100       7      100.0%
BIGRAMhl            C0      0       0      22        0.0%
BITBANK4            C0      0       0      12        0.0%
BANK4               C0      0      64      13       52.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     A0      A0       5      100.0%
BITBANK5            80      0       0      14        0.0%
BANK5               80      0      64      15       78.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     37      5E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     638      16        0.0%
DATA                 0      0     638       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Thu Mar 07 12:09:57 2019

                              _USB_SD_Ptr 7C91                              ___awdiv@sign 006B  
                             __CFG_BOR$ON 000000                                        _cs 02E0  
                recebeByte@estadoRecepcao 02E2                             _USBDeviceInit 2AB2  
                     ___wmul@multiplicand 0070                               __CFG_BORV$0 000000  
                      __size_of_CDCInitEP 0066                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                              _putsUSBUSART 506C  
                            ___ftadd@exp1 007F                              ___ftadd@exp2 007E  
    USER_USB_CALLBACK_EVENT_HANDLER@event 000D      USER_USB_CALLBACK_EVENT_HANDLER@pdata 000F  
                            ___ftadd@sign 007D                                       l400 2B1E  
                                     l402 2B5C               __end_of_USBStdGetDscHandler 3438  
                                     l441 3606                                       l460 54A2  
                                     l437 355E                                       l439 3588  
                                     l459 54A4                                       l398 2AF8  
                                     l840 5088                                       l860 2EE6  
                                     l852 2E88                                       _BDT 000400  
                                     l870 2F70                                       l862 2F2A  
                                     l854 2E94                                       l838 507A  
                                     l871 2F76                                       l863 2F08  
                                     l855 2E9E                                       l856 2ECE  
                                     l858 2F96                                       l866 2F56  
                                     l867 2F34                                       l859 2EE2  
                                     _MAC 7DED                              __CFG_CPB$OFF 000000  
                            __CFG_CPD$OFF 000000                                       _UIE 000F69  
                                     _UIR 000F68                                       _SYS 7DE3  
                                     _aaa 02F2                   __end_of_initRecebeDados 56D2  
                              _USBSuspend 550E                              ___awmod@sign 0065  
                    USBStdSetCfgHandler@i 0015                                       prod 000FF3  
                                     wreg 000FE8                            _USBDeviceTasks 2F9A  
                          _USBDeviceState 0058                     ??_USBCtrlTrfRxService 0001  
                __size_ofi2_USBDeviceInit 0140                  USBEnableEndpoint@options 0009  
                            __CFG_LVP$OFF 000000                              ___ftdiv@cntr 0098  
                            ___ftdiv@sign 009D                              __CFG_WDT$OFF 000000  
                                    l1040 54BC                                      l1042 54C8  
                                    l1050 4C44                                      l1043 54D6  
                                    l1061 0ECE                                      l1071 15D2  
                                    l1063 0F0E                                      l3000 421E  
                                    l1064 15E4                                      l3001 4208  
                                    l1049 4C48                                      l1065 1478  
                                    l1057 0E40                                      l1074 15C2  
                                    l1066 1466                                      l3003 4246  
                                    l1059 0EAE                                      l3004 423C  
                                    l3100 3B04                                      l1076 15E0  
                                    l1068 1498                                      l1069 1486  
                                    l3110 5274                                      l2302 1F50  
                                    l1078 163C                                      l2311 1CC6  
                                    l2071 3CD6                                      l1079 16EA  
                                    l3104 55FE                                      l3032 2982  
                                    l2400 1FA2                                      l2304 1C9C  
                                    l2072 3C2E                                      l2401 1F78  
                                    l2321 1D08                                      l3042 29DE  
                                    l3122 3A1A                                      l3114 397E  
                                    l2242 4E8A                                      l2074 3CF2  
                                    l3051 2A1C                                      l3043 29D4  
                                    l3123 3A0E                                      l2403 1F8A  
                                    l2075 3C58                                      l2420 3692  
                                    l3052 2A12                                      l3028 2958  
                                    l3116 39F6                                      l2316 1CF0  
                                    l2421 36B6                                      l3037 29E8  
                                    l3125 3A36                                      l3117 39E6  
                                    l2333 1D66                                      l3061 3B68  
                                    l2077 3C82                                      l2414 36D2  
                                    l2422 369C                                      l3054 2A40  
                                    l2270 4D66                                      l2262 5402  
                                    l2326 1D3C                                      l2431 4296  
                                    l2415 3650                                      l3055 2A5C  
                                    l3071 2D92                                      l2263 53EC  
                                    l2407 1F90                                      l2343 1DA4  
                                    l3063 3B90                                      l2079 3CAC  
                                    l2432 42FC                                      l2424 3722  
                                    l2416 3676                                      l3056 2A8C  
                                    l3160 4AAE                                      l3072 2DCC  
                                    l2360 1E26                                      l3064 3BCE  
                                    l2425 36EC                                      l2417 365C  
                                    l3081 2E54                                      l3073 2DF4  
                                    l3129 5696                                      l2265 53FE  
                                    l2409 1F9E                                      l3065 3BF4  
                                    l3170 4DD4                                      l3082 2E48  
                                    l2370 1E6E                                      l2338 1D8E  
                                    l2419 36E2                                      l3155 4A6C  
                                    l3075 2E30                                      l2611 19D2  
                                    l2355 1DFE                                      l2436 4318  
                                    l3156 4A60                                      l3076 2E20  
                                    l2612 18F4                                      l2700 0730  
                                    l2348 1DD6                                      l2292 1C1A  
              USBConfigureEndpoint@handle 0007                                      l3165 4D9E  
                                    l3069 2D66                                      l3093 3A72  
                                    l2605 262A                                      l2269 4D42  
                                    l2365 1E3C                                      l2293 1C3E  
                                    l3086 483E                                      l3166 4D92  
                                    l2702 07F0                                      l2622 0020  
                                    l2294 1F54                                      l2382 1EBE  
                                    l3238 54FA                                      l3087 486E  
                                    l3159 4AA0                                      l3095 3A9A  
                                    l2615 19AC                                      l2711 099C  
                                    l2703 07D6                                      l2631 008C  
                                    l2623 003E                                      l2295 1C46  
                                    l3239 54E8                                      l3176 4EC0  
                                    l3096 3ACC                                      l2608 2700  
                                    l2616 1B0A                                      l2720 0A64  
                                    l2712 0982                                      l2296 1C72  
                                    l3169 4DC6                                      l3177 4EB4  
                                    l3097 3ADC                                      l2705 0814  
                                    l2633 0174                                      l2625 005C  
                                    l2393 1F06                                      l2377 1E96  
                                    l2618 1BC2                                      l2722 0AF6  
                                    l2714 0A1E                                      l2706 0818  
                                    l2650 01B8                                      l2642 0182  
                                    l2634 015E                                      l2626 0052  
                                    l3099 3AF4                                      l2723 0A7E  
                                    l2715 09E2                                      l2707 083C  
                                    l2651 01C8                                      l2643 0186  
                                    l2635 011C                                      l3371 512E  
                                    l2387 1ED4                                      l2740 0BE6  
                                    l2708 0976                                      l2644 02E0  
                                    l2660 0270                                      l2652 01C2  
                                    l3372 5124                                      l2741 0BF0  
                                    l2733 0B2E                                      l2709 088E  
                                    l2661 0250                                      l2742 0C44  
                                    l2670 043E                                      l2654 020A  
                                    l3391 4FD4                                      l2743 0C1E  
                                    l2735 0B58                                      l2719 0A40  
                                    l2639 028C                                      l2655 0220  
                                    l2647 018A                                      l3392 4FCE  
                                    l2752 0DD2                                      l2760 0D7A  
                                    l2736 0B84                                      l2728 0B0C  
                                    l2672 0468                                      l2664 0286  
                                    l2648 018C                                      l3368 5114  
                                    l2729 0ABA                                      l2665 09A6  
                                    l2673 04A8                                      l2657 023C  
                                    l2649 0190                                      l3369 510E  
                                    l1961 3150                                      l2754 0DA8  
                                    l2738 0BB0                                      l2674 0576  
                                    l2666 02F4                                      l2658 022A  
                                    l1962 31E6                                      l1954 30D8  
                                    l2755 0C96                                      l2739 0BBA  
                                    l2691 06CE                                      l2683 05DC  
                                    l2667 0336                                      l1955 30E2  
                                    l2940 4994                                      l2692 06B4  
                                    l1956 3102                                      l2941 499E  
                                    l2933 4946                                      l2757 0DC0  
                                    l2677 051E                                      l2669 03D4  
                                    l2942 49AC                                      l2934 4956  
                                    l2950 4CD0                                      l2758 0D16  
                                    l2695 06FA                                      l2687 0660  
                                    l1959 3106                                      l2936 4974  
                                    l2696 06E0                                      l2688 0682  
                                    l2937 496C                                      l2953 4CF0  
                                    l2961 53B0                                      l2954 4CFA  
                                    l2946 4CB6                                      l2971 32E2  
                                    l2955 4D08                                      l2947 4CC2  
                                    l2699 07CA                                      l2972 32D2  
                                    l2965 3214                                      l2949 4CD8  
                                    l2967 3232                                      l2968 3274  
                                    l2977 3306                                      l2969 32A4  
                                    l8026 5708                                      l2978 32FA  
                                    l9002 0250                                      l7404 489A  
                                    l2997 41EA                                      l2998 41E0  
                                    _ADIE 007CEE                                      l9120 06B4  
                                    _ADIF 007CF6                                      l9230 0A82  
             __size_of_ResetModuloLoRaWan 0026                                      l9152 07D6  
                                    l9128 06E0                                      l9072 04F4  
                                    l9064 04A8                                      l9332 0DA8  
                                    l9244 0ABE                                      l9092 05E0  
                                    _ADON 007E10                                      l8808 54E8  
                                    l9836 2AF0                                      STR_1 7E13  
                                    l9864 2B54                                      STR_2 7FFA  
                                    STR_3 7FD8                                      STR_4 7FAD  
                                    STR_5 7FD1                                      l8996 022A  
                                    STR_6 7F91                                      STR_7 7F43  
                                    STR_8 7F5F                                      STR_9 7F75  
                                    _GIEH 007F97                                      u6330 41D2  
                                    _RCIE 007CED                                      u7300 3718  
                                    _RCIF 007CF5                                      u8110 0370  
                                    u7230 2F5E                                      u6610 4FF4  
                                    u6370 4250                                      u7307 370E  
                                    u7411 2D4A                                      u8115 0366  
                                    u6700 2974                                      u8230 0618  
                                    u8150 047A                                      u6631 2916  
                                    u7431 2D76                     ??_USBCtrlTrfTxService 0001  
                                    u6800 2A24                                      u8320 07FE  
                                    u8160 04BA                                      u6617 4FEA  
                                    u6641 292A                                      u6730 29B2  
                                    u8330 080E                                      u7621 3962  
                                    u6590 430A                                      u6670 294A  
                                    u7710 4A70                                      u8190 04F4  
                                    _UCFG 000F6F                                      u7640 399C  
                                    u7560 330C                                      u8600 0C4C  
                                    u6841 3A5A                                      u6770 29F0  
                                    u7490 2E5A                                      u6930 4978  
                                    u8610 0C6E                                      u8290 0708  
                                    u7740 4DA2                                      u9500 50A2  
                                    _UEP0 000F70                                      u7645 3994  
                                    u6861 3A82                                      _UEP1 000F71  
                                    u7680 3A20                                      u8640 0DE4  
                                    u9440 2B14                                      u7920 54D2  
                                    u9520 432A                                      u8650 0E02  
                                    u8810 53FA                                      u9610 312C  
                                    u9530 4344                                      _UEIE 000F6B  
                                    u9700 1C56                                      u9540 435E  
                                    u6990 4CDC                                      u9470 2BB8  
                                    u9550 4378                                      u8911 3B78  
                                    u7944 4E80                                      u9528 432E  
                                    u7945 4E7C                                      u9625 3130  
                                    u7970 00F4                                      u9538 4348  
                                    u9900 1D36                                      u9740 1C84  
                                    u9548 4362                                      u8790 55E2  
                                    u9558 437C                                      _UEIR 000F6A  
                                    _UCON 000F6D                                      u8891 3B50  
                                    _TXIF 007CF4                              __CFG_PWRT$ON 000000  
                         _CDCDataInHandle 02D8    USBStdFeatureReqHandler@current_ep_data 0018  
                                    _pDst 034C                                      _data 0600  
                         _USBDeviceDetach 56F6                                      _main 0E10  
                            ___ftpack@arg 0060                         JoinLoRaWan@status 0087  
                ??i2_USBTransferOnePacket 0005                              ___ftpack@exp 0063  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    indf0 000FEF                                      fsr2h 000FDA  
                                    fsr0l 000FE9                                      indf1 000FE7  
                             _BaudRateGen 0326                                      indf2 000FDF  
                                    fsr1l 000FE1                                      fsr2l 000FD9  
                         _USBDeviceAttach 547A                                      btemp 005F  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 000E                             __CFG_IESO$OFF 000000  
                            _sprintf$5101 0103                __end_of_USBCheckStdRequest 3EBA  
                         __end_of_MacSave 5444                              main@dadoPoco 02B2  
                  ??_USBCtrlTrfOutHandler 0003                              _sprintf$5893 0100  
                           __CFG_MCLRE$ON 000000                              ___ftmul@cntr 008D  
                            ___param_bank 000000                              ___ftmul@sign 008E  
               ??_USBStdFeatureReqHandler 0015                             ??_JoinLoRaWan 0087  
                            __channelMask 031E                             le_AD@corrente 00A6  
                ??_USBStdGetStatusHandler 0001                              ___fttol@exp1 00BE  
                        __end_of_MAC_SAVE 7DED                              ___fttol@lval 00BA  
                          ?_USBDeviceInit 0001                             ?_enviaComando 007C  
                           __CFG_PLLDIV$5 000000                                     l10044 30F2  
                                   l10056 312C                                     l10524 0E30  
                                   l10552 0EA6                                     l10536 0E70  
                                   l10564 0EC6                              _sourceMacLow 0342  
                            main@contador 02A1                                     ?_main 0001  
                         __end_of___awdiv 49B6                                     _EEADR 000FA9  
                         __end_of___ftadd 2AB2                                     STR_10 7FCA  
                                   STR_11 7EE0                                     STR_20 7F33  
                                   STR_12 7FF5                                     STR_13 7F6A  
                                   STR_30 7FF0                                     STR_22 7EBC  
                                   STR_14 7F22                                     STR_23 7EBC  
                                   STR_31 7FDF                                     STR_15 7F8A  
                                   STR_32 7FDF                                     STR_24 7E78  
                                   STR_16 7F9D                                     STR_33 7FBC  
                                   STR_25 7F94                                     STR_17 7FA5  
                                   STR_34 7FBC                                     STR_26 7F80  
                                   STR_18 7F51                                     STR_35 7FEB  
                                   STR_27 7FE5                                     STR_19 7FC3  
                                   STR_36 7FB5                           __end_of___awmod 4D12  
                                   STR_29 7FE8                                     STR_37 7F00  
                                   STR_38 7F11         __size_of_USBCtrlEPServiceComplete 0100  
                         __end_of___ftdiv 3C26                           __end_of___ftneg 560C  
                         __end_of___lldiv 4AC0                                     u10200 1E68  
                                   u10050 1DD0                                     u11041 174A  
                         __end_of___ftmul 3B3E                                     u10350 1F00  
                                   _T0CON 000FD5                                     u10370 1F60  
                                   u10380 1F86                           ___awdiv@divisor 0068  
                                   u10800 0E70                                     _T1CON 000FCD  
                         __end_of___llmod 4DE6                    __end_of_USBDeviceTasks 30C8  
                         __end_of___ftsub 529E                                     u10820 0EC2  
                         __end_of___fttol 3A48                                     u10840 0EE2  
                                   u10905 137E                                     u11457 0E5A  
                                   u10915 1398                                     u10925 142C  
                                   u10935 1446                                     u10855 0F30  
                                   u10856 0F32                                     _T3CON 000FB1  
                                   u10865 11AC                                     u10875 128C  
                                   u10795 0E4C                                     u10796 0E4E  
                                   u10885 12B6                 ?_USBCtrlEPServiceComplete 0001  
                          __CFG_DEBUG$OFF 000000                                     i2l120 2810  
                                   i2l121 283E                                     i2l122 286C  
                                   i2l123 2898                                     i2l125 28B2  
                                   i2l127 28B8                                     i2l119 28A2  
                                   i2l400 2C60                                     i2l402 2C9C  
                                   i2l410 2FC2                                     i2l251 4F6A  
                                   i2l500 3EE2                                     i2l420 304E  
                                   i2l412 2FD4                                     i2l245 4F76  
                                   i2l253 4F70                                     i2l413 2FDE  
                                   i2l502 3F40                                     i2l422 305E  
                                   i2l503 3F0A                                     i2l415 3002  
                                   i2l432 536E                                     i2l408 2FAE  
                                   i2l513 3486                                     i2l433 537C  
                                   i2l441 380C                                     i2l425 3084  
                                   i2l417 3016                                     i2l409 2FBA  
                                   i2l506 3F7E                                     i2l514 3464  
                                   i2l418 3020                                     i2l507 3F48  
                                   i2l611 3DFA                                     i2l427 30A4  
                                   i2l419 3044                                     i2l516 34FA  
                                   i2l540 3414                                     i2l612 3E00  
                                   i2l517 34E0                                     i2l437 3764  
                                   i2l533 3420                                     i2l525 3D4E  
                                   i2l613 3E06                                     i2l429 30C0  
                                   i2l630 232C                                     i2l542 341A  
                                   i2l534 332E                                     i2l550 4636  
                                   i2l614 3E18                                     i2l439 378E  
                                   i2l551 45C6                                     i2l527 3DC0  
                                   i2l615 3E1E                                     i2l640 2426  
                                   i2l632 234E                                     i2l536 3340  
                                   i2l552 45CA                                     i2l608 3E76  
                                   i2l560 52DC                                     i2l641 24A0  
                                   i2l625 2276                                     i2l537 33C0  
                                   i2l553 45E4                                     i2l617 3E24  
                                   i2l609 3DF2                                     i2l473 469A  
                                   i2l561 52DA                                     i2l802 4448  
                                   i2l634 23CE                                     i2l626 227C  
                                   i2l546 4620                                     i2l618 3E40  
                                   i2l467 3FD0                                     i2l803 43EC  
                                   i2l539 33C6                                     i2l547 45B6  
                                   i2l619 3E58                                     i2l475 46B0  
                                   i2l644 245A                                     i2l636 2398  
                                   i2l628 22E4                                     i2l484 38CC  
                                   i2l805 4402                                     i2l637 23B4  
                                   i2l485 3876                                     i2l806 440E  
                                   i2l646 24AC                                     i2l574 4768  
                                   i2l398 2C3A                                     i2l479 47DA  
                                   i2l807 442A                                     i2l639 241A  
                                   i2l575 4762                                     i2l808 4440  
                                   i2l568 546E                                     i2l593 4082  
                                   i2l585 4F18                                     i2l489 38F8  
                                   i2l569 546C                                     i2l498 3ED8  
                                   i2l594 4086                                     i2l595 4100  
                                   i2l587 4F62                                     i2l596 40C6  
                                   i2l598 40E6                                     _UADDR 000F6E  
                         ___awdiv@counter 006A                                     _RCREG 000FAE  
                                   _RCSTA 000FAB                                     _TMR1H 000FCF  
                                   _TMR1L 000FCE                                     _SPBRG 000FAF  
                           __CFG_USBDIV$2 000000                                     _USBIE 007D05  
                                   _USTAT 000F6C                                     _TXREG 000FAD  
      __size_of_USBCtrlEPAllowStatusStage 00C8                              ___lltoft@exp 0070  
                          __CFG_FCMEN$OFF 000000           __end_of_USBCtrlEPAllowDataStage 46E2  
                                   _sd000 7DF2                                     _sd001 7D10  
                                   _sd002 7CDC            ?_USBIncrement1msInternalTimers 0001  
                                   _dig_1 02DE                                     _dig_2 02DC  
                                   _dig_3 02DA                                     _dig_4 034E  
                                   _le_AD 30C8                             ___awtoft@sign 006B  
                                   _delay 4C2E                                i2memset@p1 0001  
                        __end_of_STATE_ON 7DFD                                     _getch 5632  
                         __end_of_dpowers 7C23                                     _scale 17B0  
                         __end_of_isdigit 569E                                     _ticks 032A  
                           ___ftpack@sign 0064                                     _putch 5704  
                                   main@i 02A9                __size_of_SetChannelLoRaWan 006C  
                                   pclath 000FFA                                     tablat 000FF5  
                           _gs_encryption 7E05                                     plusw2 000FDB  
                       __end_of_CDCInitEP 4E4C                                     status 000FD8  
                        __end_of_DataRate 51D6                                     wtemp6 0060  
                         __end_of_sprintf 0E10                           __end_of_strncmp 4B42  
                         __end_of_toupper 56E6                          __end_ofi2_memset 5598  
                          _tamanhoCommand 01EF              __size_of_USBStdSetCfgHandler 00DC  
                        __end_ofi2_strlen 506C                             setup_uart@brg 0071  
                         __initialization 446A                              __end_of_main 17B0  
                   _control_signal_bitmap 02E3                            ??_enviaComando 007F  
               __size_of_USBCtrlEPService 0096                                    ??_main 00F6  
                           ___fttol@sign1 00B9                       __end_of_JoinLoRaWan 540E  
                           __activetblptr 000002                           ?_USBDeviceTasks 0001  
                  SetChannelLoRaWan@canal 01E9                               ?_USBSuspend 0001  
                      recebeByte@sizeData 004C                      __size_of__tdiv_to_l_ 0134  
                        ?_initRecebeDados 0001                                i2strlen@cp 0005  
                      recebeByteLoRaWan@b 0010                        recebeByteLoRaWan@i 0011  
                            _cdc_mem_type 02E4                   __end_of_USBDeviceDetach 5704  
                           _sourceMacHigh 033E                             ?_SetBandWidth 00F1  
                                  ?_le_AD 009E                                    ?_delay 006D  
                                  ?_getch 0001                   __end_of_USBDeviceAttach 54AE  
                                  _ADCON0 000FC2                                    _ADCON1 000FC1  
                                  _ADCON2 000FC0                          _CDCDataOutHandle 01F3  
                                  _CCP1IE 007CEA                                    _CCP1IF 007CF2  
                        ___llmod@dividend 006D                                    ?_scale 008F  
                                  _ADRESH 000FC4                                    _ADRESL 000FC3  
                                  _EEDATA 000FA8                                    _CCPR1H 000FBF  
                                  _CCPR1L 000FBE                                    _EECON2 000FA7  
                        ___awdiv@dividend 0066                          __end_of___awtoft 53D4  
                                  ?_putch 0001                          __end_of___ftpack 4270  
                        __end_of___lltoft 4F0A                     __size_of_CDCTxService 012E  
                                  i2l1221 5654                                    i2l1219 563A  
                                  i2l1470 49F8                                    i2l1471 4A0A  
                                  i2l3232 5208                                    i2l3233 51E8  
                                  i2l1473 4A1C                                    i2l1475 4A2E  
                                  i2l2451 20C4                                    i2l1476 4A38  
                                  i2l1468 49E6                                    i2l2460 2170  
                                  i2l2461 21DC                                    i2l2453 214E  
                                  i2l3238 5586                                    i2l3406 56E2  
                                  i2l2454 2100                                    i2l2446 207E  
                                  i2l3239 5576                                    i2l2455 212E  
                                  i2l2447 2046                                    i2l2464 223C  
                                  i2l2448 207C                                    i2l2465 221E  
                                  i2l2459 21E0                                    i2l3391 5028  
                                  i2l3392 5024                                    i2l3377 50C6  
                                  i2l3385 5550                                    i2l3378 50BE  
                                  i2l3386 5548                                    i2l3397 4B28  
                                  i2l3398 4AC2                                    i2l3399 4B20  
                              TxLoRaWan@i 01EE                                    i2l7550 3EE2  
                                  i2l7652 3D46                                    i2l8292 51E8  
                                  i2l7582 5576                                    i2l9544 2C32  
                                  i2l9456 4AC2                                    i2l9572 2C94  
                                  i2l9796 3056                                    _PAN_ID 0350  
                           CDCTxService@i 006B                                 ??_MacSave 00F1  
                                  _TMR0IE 007F95                                    _TMR1IE 007CE8  
                                  _SPBRGH 000FB0                  i2USBTransferOnePacket@ep 0009  
                       ??i2_USBDeviceInit 0009           __size_ofi2_USBTransferOnePacket 0102  
                          __CFG_VREGEN$ON 000000                       retornaDado@dadoByte 0064  
                       _shortPacketStatus 0057                                    _SetAdr 5320  
                          __CFG_XINST$OFF 000000                        __size_of_SetDevEUI 0076  
                      __size_of_SetAppEUI 0076                          __end_of__powers_ 7C4A  
                         USBDeviceTasks@i 001C                        __size_of_SetAppKey 00B6  
                            _write_values 7E09                               SetAdr@state 00F1  
             USBStdFeatureReqHandler@pUEP 0016                  USBTransferOnePacket@data 0061  
              USBCtrlTrfInHandler@lastDTS 0002                           ??_USBDeviceInit 0068  
                                  ___ftge 480C                                    ___wmul 5598  
                               ??___awdiv 006A                  SetSpreadingFactor@status 01E8  
                               ??___ftadd 007A                            __CFG_STVREN$ON 000000  
                               ??___awmod 0064                                 ??___ftdiv 0095  
                               ??___ftneg 0063                         __end_of_STATE_OFF 7DFA  
                               ??___lldiv 0068                                 ??___ftmul 0086  
                               ??___llmod 0075                                 ??___ftsub 0086  
                               ??___fttol 00B4                         _USBEnableEndpoint 535E  
         __size_of_USBStdGetStatusHandler 00A0                                    le_AD@i 00AC  
                                  _gs_pan 7E0D                                    _memcpy 51D6  
                                  _memset 54DE                                    _fround 24D2  
                                  _millis 560C                                    clear_0 44A2  
                                  clear_1 44AE                                    clear_2 44BA  
                                  clear_3 44C6                                    clear_4 44D2  
                                  clear_5 44DE                                    clear_6 44EA  
                                  clear_7 44F6                                    _nivel1 02EC  
                                  _nivel2 02EB                          ___awdiv@quotient 006C  
                        SetAppKey@comando 0120                           ___awmod@divisor 0062  
                                  _teste0 02EE                                    _teste1 02ED  
                         ___awmod@counter 0064                        __size_of_TxLoRaWan 03D8  
                      ?_USBEnableEndpoint 0009                              ?_retornaDado 0060  
                            converter@aux 0004                                    main@dr 02AE  
                                  main@sf 029F                                    _strcat 5104  
                                  _strcmp 50BC                                    _strcpy 553E  
                                  _strlen 4FC4                     ___ftmul@f3_as_product 008A  
           __size_of_USBTransferOnePacket 0106                                 ??_isdigit 0060  
                            _CDCTxService 2E6C                          __end_of_setup_AD 56F6  
                            __mediumconst 7BFA                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                          ??_SetBandWidth 00F3                       ??_USBEnableEndpoint 000A  
                    __end_of_MAC_TX_UNCNF 7DBF                   recebeByteLoRaWan@i_4866 0013  
                               ??_sprintf 00EB                               _CtrlTrfData 000438  
                               ??_strncmp 0007                                 ??_toupper 0001  
                       __end_of_SYS_RESET 7DE3                        setup_uart@baudRate 006D  
                    _controlTransferState 0056                             ?_parseLoRaWan 0001  
                              __accesstop 0060                   __end_of__initialization 44FC  
                            ?_verificaUSB 0001                           __CFG_PBADEN$OFF 000000  
                              ___ftadd@f1 0074                                ___ftadd@f2 0077  
                              ___ftge@ff1 0060                                ___ftge@ff2 0063  
                           ___rparam_used 000001                                ___ftdiv@f1 008F  
                              ___ftdiv@f2 0092                                ___ftdiv@f3 0099  
                __size_of_USBStallHandler 0042                                ___ftneg@f1 0060  
                              ___awtoft@c 0068                       __size_of_USBSuspend 0030  
                              ___ftmul@f1 0080                                ___ftmul@f2 0083  
                     recebeByte@frameData 0664                __end_of_get_preambleid_900 7DFF  
              __end_of_set_preambleid_900 7E01                                ___ftsub@f1 0080  
                              ___ftsub@f2 0083                                ___fttol@f1 00B0  
                          __pcstackCOMRAM 0001                 __end_of_USBEnableEndpoint 539A  
                           __end_of_sd000 7DF6                             __end_of_sd001 7D44  
                           __end_of_sd002 7D10                               _JoinLoRaWan 53D4  
                            __pidataBANK2 5712                              __pidataBANK3 569E  
                           __end_of_le_AD 31F4                             __end_of_delay 4CA0  
                              ___lltoft@c 0068          __size_of_USBCtrlEPAllowDataStage 0098  
                           __end_of_getch 5658                             __end_of_scale 1BE8  
           __size_of_USBConfigureEndpoint 0094                           _retries_sending 02F4  
                           __end_of_putch 5712               __end_of_USBCtrlTrfInHandler 410A  
                              _le_AD$5889 00A3                         _MAC_SET_CH_STATUS 7D66  
                  i2_USBTransferOnePacket 374E                           _responseLoRaWan 01FE  
                              __div_to_l_ 31F4                                 ?_DataRate 00F1  
                              _cdc_notice 0314                                 ?i2_memset 0001  
                              _cdc_rx_len 01F6                                _cdc_tx_len 0052  
                       __end_of_SetDevEUI 4BB8                            main@deltaTempo 02A2  
                       __end_of_SetAppEUI 4C2E                         __end_of_SetAppKey 41C0  
                      __end_of_MAC_SET_DR 7DD6                        __end_of_MAC_SET_BW 7D81  
                                 ??_le_AD 00A1                        __end_of_MAC_SET_SF 7D66  
                                 ??_delay 0071                                 ?i2_strlen 0001  
                ??_USBCtrlTrfSetupHandler 001B                          ?_USBDeviceDetach 0001  
                 _USBTicksSinceSuspendEnd 02E6                                   ??_getch 0001  
                         __div_to_l_@exp1 006B               __size_of_SetSpreadingFactor 0040  
                         __div_to_l_@cntr 006A                          ?_USBDeviceAttach 0001  
                                 ??_scale 0092                           __div_to_l_@quot 0066  
                      __end_of_MAC_TX_CNF 7DDD                    _USBStdGetStatusHandler 45AA  
                            sprintf@width 0119                                   ??_putch 0060  
                         le_AD@leituraAux 00AA                        __size_of_converter 0086  
                          ??_parseLoRaWan 0068                      __end_of_enviaComando 374E  
                              __pbssBANK1 01EF                                __pbssBANK2 02C8  
                              __pbssBANK3 0300                                __pbssBANK4 0440  
                              __pbssBANK5 0580                                __pbssBANK6 0600  
                              __pbssBANK7 0700                        __size_of_le_pulsos 00E0  
                   recebeByteLoRaWan@port 000F                         __end_of_TxLoRaWan 1FC0  
                 SetChannelLoRaWan@ligado 00F1                            _novaMsgLoRaWan 0059  
                           __div_to_l_@f1 0060                             __div_to_l_@f2 0063  
             __size_of_USBWakeFromSuspend 0036                               _pBDTEntryIn 0046  
                 SetChannelLoRaWan@status 01E8          __end_of_USBCtrlEPServiceComplete 3950  
                         SetDevEUI@status 01E8                                   ?_SetAdr 00F1  
             __size_of_USBCheckCDCRequest 00A4                      USBCtrlTrfRxService@i 0001  
                                 ?___ftge 0060                                   ?___wmul 006E  
               __end_of_MAC_SET_CH_STATUS 7D74                        SetBandWidth@status 01E8  
                                 _CCP1CON 000FBD                                   ?_memcpy 0001  
                                 ?_memset 0060                                   ?_fround 008F  
                                 ?_millis 0060                                _device_dsc 7D44  
                               ?___awtoft 0068                                 ?___ftpack 0060  
                        _USBCtrlEPService 46E2                                _ep_data_in 02D5  
                               ?___lltoft 0068                                   ?_strcat 0060  
                                 ?_strcmp 0001                                   ?_strcpy 0001  
                                 ?_strlen 0060               __end_of_USBCtrlTrfRxService 3544  
                      _USBCheckStdRequest 3DE2                       le_pulsos@freqPulses 0069  
                       _configDescriptor1 7C99                                   i2l11204 4F8E  
                                 i2l11206 4FBE                                ??_DataRate 00F3  
                       _tamDadosRecebidos 005B                                   _GO_DONE 007E11  
                              ??i2_memset 0007               __end_of_USBCtrlTrfTxService 3F86  
                     _USBStdSetCfgHandler 3D06                __end_of_ResetModuloLoRaWan 55E6  
                   __end_of_MAC_GET_DNCTR 7DAC                                ??i2_strlen 0003  
                        _discovery_status 02F5                       ?_USBCheckStdRequest 0001  
            __size_of_USBStdGetDscHandler 011A                                   _UIEbits 000F69  
                                 _UIRbits 000F68                                _gs_channel 7E0B  
                           _cdc_trf_state 02E5                                   _MacSave 540E  
                         putsUSBUSART@len 0064                     __end_of_MAC_JOIN_OTAA 7DB6  
                                 _pCDCDst 0346                                   _pCDCSrc 0349  
                       __end_of__npowers_ 7C71                                   __Hparam 0000  
         ??_USBIncrement1msInternalTimers 0001                      ?_USBStdSetCfgHandler 0001  
                               _CDCInitEP 4DE6                           SetAppEUI@status 01E8  
                              _scale$5892 0092                                   __Lparam 0000  
                         __size_of_SetAdr 003E                __size_of_USBEnableEndpoint 003C  
                    __end_of_SetBandWidth 5190                                 ?_setup_AD 0001  
                            SetAdr@status 01E8                      ??_USBCheckStdRequest 001B  
                 enviaComando@tipoComando 007E                           __size_of___ftge 0092  
           __size_of_USBCtrlTrfOutHandler 005E                                   ___awdiv 4930  
                                 ___ftadd 2904                                   ___awmod 4CA0  
                                 ___ftdiv 3B3E                                   ___ftneg 55E6  
                                 ___lldiv 4A3C                          ??_USBDeviceTasks 001C  
                         __size_of___wmul 0028                                   ___ftmul 3A48  
                                 ___llmod 4D7E                                   ___ftsub 525C  
                                 ___fttol 3950                         ??_USBStallHandler 0001  
                       __end_of_converter 4A3C                                   _channel 02F7  
                                 __pcinit 446A                         __end_of_le_pulsos 3D06  
                         __size_of_memcpy 0044                                ??___awtoft 006B  
                              ??___ftpack 0065                           __size_of_memset 0030  
                         __size_of_fround 0270                 __end_of_configDescriptor1 7CDC  
                         __size_of_millis 0026                                   __ramtop 0800  
                              ??___lltoft 006C                                   __ptext0 0E10  
                                 __ptext1 450A                                   __ptext2 431C  
                                 __ptext3 521A                                   __ptext4 56E6  
                                 __ptext5 506C                                   __ptext6 3C26  
                                 __ptext7 30C8                                   __ptext8 3B3E  
                                 __ptext9 539A                                   _inPipes 0040  
                                 _command 005C               _USBDeferOUTDataStagePackets 02E7  
                         __size_of_strcat 0046                           __size_of_strcmp 0048  
                         __size_of_strcpy 002E                           __size_of_strlen 0056  
                   SYS_InterruptHigh@dig1 0030                     SYS_InterruptHigh@dig2 0032  
                   SYS_InterruptHigh@dig3 0034                     SYS_InterruptHigh@dig4 0036  
                       __end_of_hexpowers 7C91                               ?__div_to_l_ 0060  
                                 _dpowers 7BFB                              ??_USBSuspend 0015  
                                 _isdigit 567C                      __size_of_retornaDado 0060  
                                 delay@to 0079                          ___awmod@dividend 0060  
                           _receivePacket 0580                           i2_USBDeviceInit 2BF8  
                        i2USBDeviceInit@i 0009                                   getch@RC 0002  
                           converter@aux2 0005                        __end_of_USB_CD_Ptr 7C99  
                                 _pulsos1 02EA                                   _pulsos2 01FD  
                                 _pulsos3 01FC                                   _pulsos4 01FB  
                                 _sprintf 0012           __size_of_USBCtrlTrfSetupHandler 0092  
                                 _strncmp 4AC0                            __pintcode_body 2742  
                                 _toupper 56D2                      end_of_initialization 44FC  
                           TxLoRaWan@data 00F2                             TxLoRaWan@conf 01E8  
                      __end_of_USB_SD_Ptr 7C97                                   memcpy@d 0007  
                                 memcpy@n 0005                                   memcpy@s 0009  
                     _pBDTEntryEP0OutNext 004E                                   memset@c 0062  
                                 memset@n 0064                                   memset@p 0066  
                           __Lmediumconst 7BFA                                   int_func 2742  
                         _USB1msTickCount 02CE           _dummy_encapsulated_cmd_response 03B6  
                                 millis@m 0064                                 i2u1060_40 2856  
                               i2u1052_40 27AC                                 i2u1053_40 27BE  
                               i2u1052_48 27AE                                 i2u1062_40 2884  
                               i2u1054_40 27D0                                 i2u1053_48 27C0  
                ?_USBStdFeatureReqHandler 0001                                 i2u1055_40 27E2  
                               i2u1054_48 27D2                                 i2u1056_40 27FA  
                               i2u1055_48 27E4                                 i2u1058_40 2828  
                           enviaComando@i 0081                     ??_USBStdSetCfgHandler 0015  
                         ___lldiv@divisor 0064                      __size_of_verificaUSB 0030  
                              ?_CDCInitEP 0001                           ___lldiv@counter 006C  
                      parseLoRaWan@status 007A                  recebeByte@escapeCaracter 01F5  
                      __end_of_USBSuspend 553E                   _USBCtrlEPAllowDataStage 464A  
                               _RCSTAbits 000FAB                                ??_setup_AD 0060  
                                 postdec1 000FE5                                   postdec2 000FDD  
                            _MAC_TX_UNCNF 7DB6                                   postinc0 000FEE  
                                 postinc2 000FDE                             MacSave@status 01E8  
                _USBCtrlEPServiceComplete 3850                            __tdiv_to_l_@f1 0060  
                          __tdiv_to_l_@f2 0063                       _get_channelmask_900 7E01  
                                 strcmp@r 0006                       _set_channelmask_900 7E03  
                                 strlen@s 0060                      __end_of_parseLoRaWan 431C  
                           ??__tdiv_to_l_ 0066                _USBStatusStageEnabledFlag1 01F7  
              _USBStatusStageEnabledFlag2 02E9                        USBEnableEndpoint@p 000A  
                               _PORTCbits 000F82                                 _PORTDbits 000F83  
                               _PORTEbits 000F84                                 _STATE_OFF 7DF6  
                              _setup_ccp1 521A                             le_pulsos@freq 006A  
                           le_pulsos@modo 0065                                _setup_uart 450A  
                   __size_of_enviaComando 0104                                 _TRISCbits 000F94  
                               _TRISDbits 000F95                                 _TRISEbits 000F96  
                           ?_setup_pulsos 0001                                main@Fcanal 02AB  
                      _BothEP0OutUOWNsSet 01F8                                main@Icanal 029E  
                              main@i_3312 02B0                                main@i_3313 02B1  
                              main@i_3325 02AC                                main@i_3326 02AD  
               USBConfigureEndpoint@EPNum 0006                ?_USBCtrlEPAllowStatusStage 0001  
     USER_USB_CALLBACK_EVENT_HANDLER@size 0011                                 _USTATcopy 005D  
                __size_of_initRecebeDados 0016              __end_of_USBTransferOnePacket 364A  
                             ___ftdiv@exp 009C                                 _TXSTAbits 000FAC  
                               _SYS_RESET 7DDD                       __size_of__div_to_l_ 012A  
                             ___ftmul@exp 0089                              ?_JoinLoRaWan 0001  
                          __end_of_SetAdr 535E                    _USBCtrlTrfSetupHandler 489E  
                            le_AD@leitura 00AE                         putsUSBUSART@pData 0062  
                 ?i2_USBTransferOnePacket 0001                     __end_of_USBDeviceInit 2BF8  
                          __end_of___ftge 489E     __end_of_USBIncrement1msInternalTimers 567C  
  __size_of_USBIncrement1msInternalTimers 0024             _USBIncrement1msInternalTimers 5658  
                          __end_of___wmul 55C0                              _enviaComando 364A  
                             _BAUDCONbits 000FB8                   __end_ofi2_USBDeviceInit 2D38  
                           ?_putsUSBUSART 0060                            __end_of_gs_pan 7E0F  
                               i2memset@c 0003                                 i2memset@n 0005  
                               i2memset@p 0007                            __end_of_memcpy 521A  
                          __end_of_memset 550E                            __end_of_fround 2742  
                          __end_of_millis 5632                         _USBBusIsSuspended 01F9  
                      _get_preambleid_900 7DFD                        _set_preambleid_900 7DFF  
                          __end_of_strcat 514A                            __end_of_strcmp 5104  
                          __end_of_strcpy 556C                            __end_of_strlen 501A  
                     start_initialization 446A                            ??_setup_pulsos 0060  
                 ?_USBStdGetStatusHandler 0001                           DataRate@comando 0120  
                             __end_of_MAC 7DF2             USBCtrlTrfRxService@byteToRead 0002  
                             __end_of_SYS 7DE8                       __end_of__tdiv_to_l_ 2E6C  
                       __size_of_DataRate 0046                          TxLoRaWan@comando 0120  
                             _cdc_data_rx 000540                               _cdc_data_tx 000500  
                       __size_ofi2_memset 002C              __end_of_USBConfigureEndpoint 480C  
                        TxLoRaWan@tamData 00F4           __end_of_USBStdFeatureReqHandler 24D2  
                               _SetDevEUI 4B42         __end_of_USBCtrlEPAllowStatusStage 404E  
                       __size_ofi2_strlen 0052                                 _SetAppEUI 4BB8  
                               i2strlen@s 0001                                 _SetAppKey 410A  
                __end_of_USBCtrlEPService 4778                           ___llmod@divisor 0071  
                   __size_of_SetBandWidth 0046                           ___llmod@counter 0075  
               ??_USBCtrlEPAllowDataStage 0002                       __end_of_MAC_GET_ADR 7DC7  
                             ??_CDCInitEP 000D                            USBDeviceInit@i 0068  
                      retornaDado@dadoBit 0060                                  ??_SetAdr 00F3  
                               _TxLoRaWan 1BE8                    _pBDTEntryEP0OutCurrent 0050  
                 USBTransferOnePacket@dir 0060                   USBTransferOnePacket@len 0063  
          __end_ofi2_USBTransferOnePacket 3850                                  ??___ftge 0066  
                     __end_of_MAC_SET_ADR 7DCF                                  ??___wmul 0072  
                     _USBStdGetDscHandler 331E                               __pdataBANK2 02FE  
                             __pdataBANK3 03C5                          __CFG_LPT1OSC$OFF 000000  
                                ??_memcpy 0007                                  ??_memset 0066  
                          ??_putsUSBUSART 0062                                  ??_fround 0092  
                                ??_millis 0064                           SetAppKey@status 01E8  
                           sprintf@tmpval 010C                                  ??_strcat 0064  
                ResetModuloLoRaWan@status 0087                                  ??_strcmp 0005  
                                ??_strcpy 0005                                  ??_strlen 0062  
                             ?_setup_ccp1 0001                 recebeByteLoRaWan@tamMsgRx 0012  
                  _USBActiveConfiguration 005E                                fround@prec 0098  
          __end_of_USBStdGetStatusHandler 464A                               ?_setup_uart 006D  
                       __size_of___awtoft 003A                         __size_of___ftpack 00B0  
                       __size_of___lltoft 005E                               __pbssCOMRAM 0038  
              __end_of_SetSpreadingFactor 5320                         _recebeByteLoRaWan 1FC0  
                           __pcstackBANK0 0060                             __pcstackBANK1 0100  
                           __pcstackBANK2 0200              __size_of_USBCtrlTrfInHandler 00BC  
                    __end_of_set_link_key 7E09                  SetChannelLoRaWan@comando 0120  
                            _SetBandWidth 514A                        ?_recebeByteLoRaWan 0001  
                            _isdigit$5327 0061                      ?_USBStdGetDscHandler 0001  
                        SetDevEUI@comando 0120                     __end_of_gs_encryption 7E07  
                          SetBandWidth@bw 00F1                                ?_SetDevEUI 0001  
                              ?_SetAppEUI 0001                                ?_SetAppKey 0001  
              __end_of_USBWakeFromSuspend 547A                                  ?_MacSave 0001  
                             sprintf@flag 011B                               sprintf@fval 0116  
                             sprintf@prec 011D                           _USBStallHandler 529E  
                     ??_recebeByteLoRaWan 000A                              _pBDTEntryOut 02C8  
              __end_of_USBCheckCDCRequest 446A                      recebeByteLoRaWan@len 000E  
                __size_of_USBDeviceDetach 000E                  __size_of_USBDeviceAttach 0034  
                      _ResetModuloLoRaWan 55C0                                 _feedback1 02F0  
                               _feedback2 02EF                                 _main$5888 02A6  
                       ??_initRecebeDados 0060                                ?_TxLoRaWan 00F1  
                   __size_of_parseLoRaWan 00AC                       SetBandWidth@comando 0120  
                               __pintcode 0008                             __pmediumconst 7BFA  
                                ?___awdiv 0066                                  ?___ftadd 0074  
                                ?___awmod 0060                                  ?___ftdiv 008F  
                                ?___ftneg 0060                                  ?___lldiv 0060  
                                ?___ftmul 0080                                  ?___llmod 006D  
                                ?___ftsub 0080                                 __npowers_ 7C4A  
                                ?___fttol 00B0                       ?_ResetModuloLoRaWan 0001  
                      enviaComando@i_4852 0083                        enviaComando@i_4853 0085  
                       __size_of_setup_AD 0010                               __preambleID 02FB  
                        ?i2_USBDeviceInit 0001                               __tdiv_to_l_ 2D38  
               __end_of_recebeByteLoRaWan 2256                             __send_retries 02FE  
                            ??__div_to_l_ 0066                      _USBTransferOnePacket 3544  
                               _converter 49B6                                  ?_isdigit 0001  
                               _le_pulsos 3C26              __end_of_USBCtrlTrfOutHandler 4F68  
                               _hexpowers 7C71                     ??_USBStdGetDscHandler 0001  
                             _ep_data_out 02D2                            __size_of_le_AD 012C  
                          __size_of_delay 0072                            __size_of_getch 0026  
                 parseLoRaWan@intervalMAX 0078                                  ?_sprintf 00BF  
            __size_of_USBCtrlTrfRxService 010C                      ??_ResetModuloLoRaWan 0087  
                          __size_of_scale 0438             USBConfigureEndpoint@direction 0001  
                                ?_strncmp 0001                                  ?_toupper 0001  
                             _MAC_GET_ADR 7DBF                            __size_of_putch 000E  
                               delay@time 006D                                  _MAC_SAVE 7DE8  
            __size_of_USBCtrlTrfTxService 00CC                              _parseLoRaWan 4270  
                          ___wmul@product 0072                                  _LATDbits 000F8C  
                             _MAC_SET_ADR 7DC7                              TxLoRaWan@hex 01EA  
              ??_USBCtrlEPServiceComplete 0002                                  _IPR1bits 000F9F  
                                _IPR2bits 000FA2                                  _PIE2bits 000FA0  
                     __size_of_setup_ccp1 0042                                 _numPacote 02F1  
                     __size_of_setup_uart 00A0                                  i2u601_40 3D7A  
                      __end_of__div_to_l_ 331E                                  _PIR2bits 000FA1  
                                i2u605_40 338E                                  i2u605_47 3384  
                                i2u630_40 2440                                  i2u606_40 33BC  
                                i2u606_47 33B2                                  i2u608_40 340A  
                                i2u608_47 3400                                  i2u900_40 5048  
                                i2u900_47 503E                      __end_of_setup_pulsos 43C6  
                                i2u591_40 3F70                                  i2u591_47 3F66  
                                i2u912_40 216C                                  i2u916_40 2242  
                                i2u589_40 3F32                                  i2u589_47 3F28  
                                i2u942_40 30C4                                  i2u918_40 2250  
                                i2u885_40 50F8                                  i2u887_40 4AEE  
                                _RCONbits 000FD0                                  i2u896_40 2C56  
                                i2u899_40 2CF8                          __CFG_WDTPS$32768 000000  
                                _UEP0bits 000F70                _USBDeferINDataStagePackets 02E8  
             __size_of_USBCheckStdRequest 00D8                                  _UCONbits 000F6D  
                                _STATE_ON 7DFA                      _USBConfigureEndpoint 4778  
                    __size_of_JoinLoRaWan 003A                                 getch@data 0003  
                             _frameBuffer 0700                             ??_retornaDado 0061  
        __size_of_USBStdFeatureReqHandler 027C                          _get_own_mac_high 7E0F  
                       ___wmul@multiplier 006E                     ?_USBTransferOnePacket 0060  
                       _SYS_InterruptHigh 0008                               _encryptMode 02F3  
                              ?_converter 0002                                  _DataRate 5190  
                           ?_CDCTxService 0001                                ?_le_pulsos 0065  
                            _RemoteWakeup 01FA                                 main@pisca 02AF  
                               main@tempo 0296                                  i2_memset 556C  
                        main@tempoTimeOut 029A                        ?_SYS_InterruptHigh 0001  
                        putsUSBUSART@data 0060                   __end_of_USBStallHandler 52E0  
                                i2_strlen 501A                          SetAppEUI@comando 0120  
                               copy_data0 447E                               _freqPulses1 033A  
                             _freqPulses2 0336                               _freqPulses3 0332  
                             _freqPulses4 032E               ??_USBCtrlEPAllowStatusStage 0001  
             __end_of_USBStdSetCfgHandler 3DE2                               ??_SetDevEUI 00F1  
                             ??_SetAppEUI 00F1                               ??_SetAppKey 00F1  
                     ??_SYS_InterruptHigh 001D                            _MAC_SET_DEVEUI 7D97  
                    __end_of_putsUSBUSART 50BC                             ??_verificaUSB 006D  
                          _MAC_SET_APPEUI 7D8C                            _MAC_SET_APPKEY 7D81  
                      __end_of_device_dsc 7D56                          __size_of_MacSave 0036  
                           SetAdr@comando 0120                                _EECON1bits 000FA6  
                          DataRate@status 01E8                   ?_USBCtrlTrfSetupHandler 0001  
                         TxLoRaWan@status 01E9                   USBStdGetStatusHandler@p 0002  
                                __Hrparam 0000                               ??_TxLoRaWan 00F5  
                               memcpy@tmp 000B                                  __Lrparam 0000  
                  USBTransferOnePacket@ep 0068                                  _SetupPkt 000430  
              recebeByteLoRaWan@frameData 0440                         ??_USBDeviceDetach 0060  
                   ?_USBConfigureEndpoint 0001                         ??_USBDeviceAttach 0060  
                        __size_of___awdiv 0086                          __size_of___ftadd 01AE  
                        __size_of___awmod 0072                          __size_of___ftdiv 00E8  
                        __size_of___ftneg 0026                          __size_of___lldiv 0084  
                        __size_of___ftmul 00F6                          __size_of___llmod 0068  
                        __size_of___ftsub 0042                          __size_of___fttol 00F8  
                                ___awtoft 539A                                  ___ftpack 41C0  
               __end_of_SYS_InterruptHigh 2904                               _fround$5890 0095  
                                ___lltoft 4EAC                               _fround$5891 0092  
                             _line_coding 03BE                __size_of_recebeByteLoRaWan 0296  
                      __end_of_gs_channel 7E0D                            ??_CDCTxService 006B  
                              sprintf@idx 0105                                sprintf@len 0108  
                              sprintf@exp 0110                                sprintf@val 0112  
                              strcat@from 0062                          __size_of_isdigit 0022  
                 __size_of_USBDeviceTasks 012E                       __end_of_retornaDado 4EAC  
                         enviaComando@cmd 007C                                  __ptext10 4C2E  
                                __ptext11 54AE                                  __ptext20 4E4C  
                                __ptext12 56F6                                  __ptext21 55C0  
                                __ptext13 547A                                  __ptext30 540E  
                                __ptext22 53D4                                  __ptext14 2E6C  
                                __ptext31 5190                                  __ptext23 52E0  
                                __ptext15 3544                                  __ptext40 2D38  
                                __ptext32 0012                                  __ptext24 4B42  
                                __ptext16 2AB2                                  __ptext41 31F4  
                                __ptext33 17B0                                  __ptext25 4D12  
                                __ptext17 54DE                                  __ptext50 480C  
                                __ptext42 4EAC                                  __ptext34 567C  
                                __ptext26 514A                                  __ptext18 1BE8  
                                __ptext51 364A                                  __ptext43 4D7E  
                                __ptext35 24D2                                  __ptext27 410A  
                                __ptext19 5104                                  __ptext60 4AC0  
                                __ptext52 4FC4                                  __ptext44 4A3C  
                                __ptext36 5598                                  __ptext28 4BB8  
                                __ptext61 553E                                  __ptext53 5704  
                                __ptext45 3950                                  __ptext37 3A48  
                                __ptext29 5320                                  __ptext70 529E  
                                __ptext62 50BC                                  __ptext54 4270  
                                __ptext46 525C                                  __ptext38 4CA0  
                                __ptext71 5658                                  __ptext63 49B6  
                                __ptext55 560C                                  __ptext47 2904  
                                __ptext39 4930                                  __ptext80 45AA  
                                __ptext72 46E2                                  __ptext64 56D2  
                                __ptext56 56BC                                  __ptext48 41C0  
                                __ptext81 331E                                  __ptext73 51D6  
                                __ptext65 5632                                  __ptext49 55E6  
                                __ptext90 3438                                  __ptext82 2256  
                                __ptext74 489E                                  __ptext66 2F9A  
                                __ptext58 1FC0                                  __ptext91 3F86  
                                __ptext83 4F68                                  __ptext75 3850  
                                __ptext67 2BF8                                  __ptext59 501A  
                                __ptext92 404E                                  __ptext84 43C6  
                                __ptext76 464A                                  __ptext68 5444  
                                __ptext93 3EBA                                  __ptext85 4DE6  
                                __ptext77 3DE2                                  __ptext69 550E  
                                __ptext86 374E                                  __ptext78 3D06  
                                __ptext87 535E                                  __ptext79 556C  
                                __ptext88 4778                                  __ptext89 4F0A  
                                __powers_ 7C23             recebeByte@checksumRecebimento 02E1  
                           _MAC_GET_DNCTR 7DA2                    __end_of_MAC_SET_DEVEUI 7DA2  
                  __end_of_MAC_SET_APPEUI 7D97                    __end_of_MAC_SET_APPKEY 7D8C  
                        __size_of_sprintf 0DFE                          __size_of_strncmp 0082  
                        __size_of_toupper 0014                                strcpy@from 0003  
                          _dadosRecebidos 0300                                  _error_AT 02FA  
                                _error_RX 02F8                                  _error_TX 01FF  
                    parseLoRaWan@previous 0074            __end_of_USBCtrlTrfSetupHandler 4930  
                           __size_of_main 09A0                         ?_USBCtrlEPService 0001  
                                _tamFrame 005A                                strncmp@len 0005  
                              DataRate@dr 00F1                        ??_USBCtrlEPService 001B  
                              _MAC_SET_DR 7DCF                                _MAC_SET_BW 7D74  
                           _MAC_JOIN_OTAA 7DAC                                _MAC_SET_SF 7D56  
                     _USBCtrlTrfInHandler 404E                                _MAC_TX_CNF 7DD6  
                     __end_of_verificaUSB 54DE                                  _response 0352  
                                _setup_AD 56E6                                  _outPipes 0038  
                            _set_link_key 7E07                      _USBCtrlTrfOutHandler 4F0A  
                                int$flags 005F                 _USBCtrlEPAllowStatusStage 3F86  
                          converter@conv1 0006                            converter@conv2 0002  
                         _get_own_mac_low 7E11                                  _protocol 02F9  
                                main@data 0200                            converter@resul 0003  
                                main@resp 02A0                    ??_USBTransferOnePacket 0064  
                            ??_setup_ccp1 0060                               _MSG_LORAWAN 03C5  
                   __CFG_CPUDIV$OSC1_PLL2 000000                              ??_setup_uart 0071  
               _USBDeferStatusStagePacket 0053                  CDCTxService@byte_to_send 006C  
                               putch@data 0060                               ??_converter 0003  
             __end_of_get_channelmask_900 7E03                               ??_le_pulsos 0069  
                              _INTCONbits 000FF2               __end_of_set_channelmask_900 7E05  
                          TxLoRaWan@porta 00F1                      ?_USBCtrlTrfInHandler 0001  
                                memcpy@d1 0001                                  memcpy@s1 0003  
                         _delivery_status 02F6             USBCtrlTrfTxService@byteToSend 0001  
                                isdigit@c 0062                                  memset@p1 0060  
                                scale@scl 0095                          ?_USBStallHandler 0001  
                USBStdFeatureReqHandler@p 0019                           _initRecebeDados 56BC  
                                intlevel2 0000                                 sprintf@ap 010A  
                               sprintf@cp 0106                          __tdiv_to_l_@exp1 006E  
                               sprintf@sp 00BF                          __tdiv_to_l_@cntr 006D  
                  __size_of_USBDeviceInit 0146                          __tdiv_to_l_@quot 0069  
 __end_of_USER_USB_CALLBACK_EVENT_HANDLER 4FC4  __size_of_USER_USB_CALLBACK_EVENT_HANDLER 005C  
       ??_USER_USB_CALLBACK_EVENT_HANDLER 0013          ?_USER_USB_CALLBACK_EVENT_HANDLER 000D  
         _USER_USB_CALLBACK_EVENT_HANDLER 4F68              i2USBTransferOnePacket@handle 000A  
                        ___lldiv@dividend 0060                     __size_of_setup_pulsos 00AA  
                       _SetChannelLoRaWan 4D12                        _SetSpreadingFactor 52E0  
                     parseLoRaWan@timeout 007B                            MacSave@comando 0120  
                      ?_SetChannelLoRaWan 00F1                                 strncmp@s1 0001  
                               strncmp@s2 0003                        __end_of_setup_ccp1 525C  
                      __end_of_setup_uart 45AA                i2USBTransferOnePacket@data 0002  
                  ??_USBConfigureEndpoint 0002                     ?_USBCtrlTrfOutHandler 0001  
                   retornaDado@selectDado 0063                       ?_SetSpreadingFactor 0001  
                     _USBCtrlTrfRxService 3438                        _USBWakeFromSuspend 5444  
                     ??_SetChannelLoRaWan 00F2                   _USBStdFeatureReqHandler 2256  
                      _USBCheckCDCRequest 43C6                       _USBCtrlTrfTxService 3EBA  
                    SetSpreadingFactor@sf 01E9                __size_of_SYS_InterruptHigh 28FC  
                            ?__tdiv_to_l_ 0060                               _retornaDado 4E4C  
                         le_AD@AnalogPort 00A9                                  sprintf@c 011F  
                                sprintf@f 00C1                                  strcat@cp 0064  
               recebeByte@tamanhoMensagem 01F1                                  strcat@to 0060  
                     ?_USBWakeFromSuspend 0001                                  strcmp@s1 0001  
                                strcmp@s2 0003                          ___lldiv@quotient 0068  
                   ??_USBCtrlTrfInHandler 0002                                  strcpy@cp 0005  
                                strlen@cp 0064                                  strcpy@to 0001  
                   _USBAlternateInterface 02FC                                  toupper@c 0001  
                     ?_USBCheckCDCRequest 0001                      __end_of_write_values 7E0B  
               i2USBTransferOnePacket@dir 0001                 i2USBTransferOnePacket@len 0004  
                            _setup_pulsos 431C                       USBEnableEndpoint@ep 000C  
                         _endpoint_number 0055                     __size_of_putsUSBUSART 0050  
                    ??_SetSpreadingFactor 00F1                      ?_USBCtrlTrfRxService 0001  
               __end_of_SetChannelLoRaWan 4D7E                        __CFG_FOSC$HSPLL_HS 000000  
                ?_USBCtrlEPAllowDataStage 0001                      ?_USBCtrlTrfTxService 0001  
               SetSpreadingFactor@comando 0120                               _verificaUSB 54AE  
                __end_of_get_own_mac_high 7E11              _USBStatusStageTimeoutCounter 0054  
                    ??_USBWakeFromSuspend 0015                USBTransferOnePacket@handle 0069  
                    __end_of_CDCTxService 2F9A                   __end_of_get_own_mac_low 7E13  
                    ??_USBCheckCDCRequest 0001                                _USB_CD_Ptr 7C97  
