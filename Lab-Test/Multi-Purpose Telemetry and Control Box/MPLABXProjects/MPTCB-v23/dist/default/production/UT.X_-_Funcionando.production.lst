

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Wed Feb 27 09:48:42 2019

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    21                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1
    82                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    83                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    84                           	psect	text59,global,reloc=2,class=CODE,delta=1
    85                           	psect	text60,global,reloc=2,class=CODE,delta=1
    86                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    87                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text64,global,reloc=2,class=CODE,delta=1
    90                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    91                           	psect	text66,global,reloc=2,class=CODE,delta=1
    92                           	psect	text67,global,reloc=2,class=CODE,delta=1
    93                           	psect	text68,global,reloc=2,class=CODE,delta=1
    94                           	psect	text69,global,reloc=2,class=CODE,delta=1
    95                           	psect	text70,global,reloc=2,class=CODE,delta=1
    96                           	psect	text71,global,reloc=2,class=CODE,delta=1
    97                           	psect	text72,global,reloc=2,class=CODE,delta=1
    98                           	psect	text73,global,reloc=2,class=CODE,delta=1
    99                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=1
   100                           	psect	text75,global,reloc=2,class=CODE,delta=1
   101                           	psect	text76,global,reloc=2,class=CODE,delta=1
   102                           	psect	text77,global,reloc=2,class=CODE,delta=1
   103                           	psect	text78,global,reloc=2,class=CODE,delta=1
   104                           	psect	text79,global,reloc=2,class=CODE,delta=1
   105                           	psect	text80,global,reloc=2,class=CODE,delta=1
   106                           	psect	text81,global,reloc=2,class=CODE,delta=1
   107                           	psect	text82,global,reloc=2,class=CODE,delta=1
   108                           	psect	text83,global,reloc=2,class=CODE,delta=1
   109                           	psect	text84,global,reloc=2,class=CODE,delta=1
   110                           	psect	text85,global,reloc=2,class=CODE,delta=1
   111                           	psect	text86,global,reloc=2,class=CODE,delta=1
   112                           	psect	text87,global,reloc=2,class=CODE,delta=1
   113                           	psect	text88,global,reloc=2,class=CODE,delta=1
   114                           	psect	text89,global,reloc=2,class=CODE,delta=1
   115                           	psect	text90,global,reloc=2,class=CODE,delta=1
   116                           	psect	text91,global,reloc=2,class=CODE,delta=1
   117                           	psect	text92,global,reloc=2,class=CODE,delta=1
   118                           	psect	text93,global,reloc=2,class=CODE,delta=1
   119                           	psect	text94,global,reloc=2,class=CODE,delta=1
   120                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   121                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   122                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   123                           	dabs	1,0x400,48,_BDT
   124                           	dabs	1,0x500,64,_cdc_data_tx
   125                           	dabs	1,0x438,8,_CtrlTrfData
   126                           	dabs	1,0x430,8,_SetupPkt
   127                           	dabs	1,0x540,64,_cdc_data_rx
   128  0000                     
   129                           ; Version 1.44
   130                           ; Generated 14/09/2017 GMT
   131                           ; 
   132                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   133                           ; All rights reserved.
   134                           ; 
   135                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   136                           ; 
   137                           ; Redistribution and use in source and binary forms, with or without modification, are
   138                           ; permitted provided that the following conditions are met:
   139                           ; 
   140                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   141                           ;        conditions and the following disclaimer.
   142                           ; 
   143                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   144                           ;        of conditions and the following disclaimer in the documentation and/or other
   145                           ;        materials provided with the distribution.
   146                           ; 
   147                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   148                           ;        software without specific prior written permission.
   149                           ; 
   150                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   151                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   152                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   153                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   154                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   155                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   156                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   157                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   158                           ; 
   159                           ; 
   160                           ; Code-generator required, PIC18F4550 Definitions
   161                           ; 
   162                           ; SFR Addresses
   163  0000                     
   164                           	psect	idataBANK2
   165  005776                     __pidataBANK2:
   166                           	opt stack 0
   167                           
   168                           ;initializer for __send_retries
   169  005776  03                 	db	3
   170                           
   171                           	psect	idataBANK3
   172  005702                     __pidataBANK3:
   173                           	opt stack 0
   174                           
   175                           ;initializer for _MSG_LORAWAN
   176  005702  96                 	db	low (STR_15+7)
   177  005703  7F                 	db	high (STR_15+7)
   178  005704  48                 	db	low STR_7
   179  005705  7F                 	db	high STR_7
   180  005706  64                 	db	low STR_8
   181  005707  7F                 	db	high STR_8
   182  005708  7A                 	db	low STR_9
   183  005709  7F                 	db	high STR_9
   184  00570A  CF                 	db	low STR_10
   185  00570B  7F                 	db	high STR_10
   186  00570C  D4                 	db	low STR_11
   187  00570D  7E                 	db	high STR_11
   188  00570E  FA                 	db	low STR_12
   189  00570F  7F                 	db	high STR_12
   190  005710  6F                 	db	low STR_13
   191  005711  7F                 	db	high STR_13
   192  005712  16                 	db	low STR_14
   193  005713  7F                 	db	high STR_14
   194  005714  8F                 	db	low STR_15
   195  005715  7F                 	db	high STR_15
   196  005716  A2                 	db	low STR_16
   197  005717  7F                 	db	high STR_16
   198  005718  AA                 	db	low STR_17
   199  005719  7F                 	db	high STR_17
   200  00571A  56                 	db	low STR_18
   201  00571B  7F                 	db	high STR_18
   202  00571C  C8                 	db	low STR_19
   203  00571D  7F                 	db	high STR_19
   204  00571E  38                 	db	low STR_20
   205  00571F  7F                 	db	high STR_20
   206                           
   207                           	psect	mediumconst
   208  007BEE                     __pmediumconst:
   209                           	opt stack 0
   210  007BEE  00                 	db	0
   211  007BEF                     _dpowers:
   212                           	opt stack 0
   213  007BEF  0001               	dw	1
   214  007BF1  0000               	dw	0
   215  007BF3  000A               	dw	10
   216  007BF5  0000               	dw	0
   217  007BF7  0064               	dw	100
   218  007BF9  0000               	dw	0
   219  007BFB  03E8               	dw	1000
   220  007BFD  0000               	dw	0
   221  007BFF  2710               	dw	10000
   222  007C01  0000               	dw	0
   223  007C03  86A0               	dw	34464
   224  007C05  0001               	dw	1
   225  007C07  4240               	dw	16960
   226  007C09  000F               	dw	15
   227  007C0B  9680               	dw	38528
   228  007C0D  0098               	dw	152
   229  007C0F  E100               	dw	57600
   230  007C11  05F5               	dw	1525
   231  007C13  CA00               	dw	51712
   232  007C15  3B9A               	dw	15258
   233  007C17                     __end_of_dpowers:
   234                           	opt stack 0
   235  007C17                     __powers_:
   236                           	opt stack 0
   237  007C17  00                 	db	0
   238  007C18  80                 	db	128
   239  007C19  3F                 	db	63
   240  007C1A  00                 	db	0
   241  007C1B  20                 	db	32
   242  007C1C  41                 	db	65
   243  007C1D  00                 	db	0
   244  007C1E  C8                 	db	200
   245  007C1F  42                 	db	66
   246  007C20  00                 	db	0
   247  007C21  7A                 	db	122
   248  007C22  44                 	db	68
   249  007C23  40                 	db	64
   250  007C24  1C                 	db	28
   251  007C25  46                 	db	70
   252  007C26  50                 	db	80
   253  007C27  C3                 	db	195
   254  007C28  47                 	db	71
   255  007C29  24                 	db	36
   256  007C2A  74                 	db	116
   257  007C2B  49                 	db	73
   258  007C2C  97                 	db	151
   259  007C2D  18                 	db	24
   260  007C2E  4B                 	db	75
   261  007C2F  BC                 	db	188
   262  007C30  BE                 	db	190
   263  007C31  4C                 	db	76
   264  007C32  6B                 	db	107
   265  007C33  6E                 	db	110
   266  007C34  4E                 	db	78
   267  007C35  03                 	db	3
   268  007C36  15                 	db	21
   269  007C37  50                 	db	80
   270  007C38  79                 	db	121
   271  007C39  AD                 	db	173
   272  007C3A  60                 	db	96
   273  007C3B  F3                 	db	243
   274  007C3C  49                 	db	73
   275  007C3D  71                 	db	113
   276  007C3E                     __end_of__powers_:
   277                           	opt stack 0
   278  007C3E                     __npowers_:
   279                           	opt stack 0
   280  007C3E  00                 	db	0
   281  007C3F  80                 	db	128
   282  007C40  3F                 	db	63
   283  007C41  CD                 	db	205
   284  007C42  CC                 	db	204
   285  007C43  3D                 	db	61
   286  007C44  D7                 	db	215
   287  007C45  23                 	db	35
   288  007C46  3C                 	db	60
   289  007C47  12                 	db	18
   290  007C48  83                 	db	131
   291  007C49  3A                 	db	58
   292  007C4A  B7                 	db	183
   293  007C4B  D1                 	db	209
   294  007C4C  38                 	db	56
   295  007C4D  C6                 	db	198
   296  007C4E  27                 	db	39
   297  007C4F  37                 	db	55
   298  007C50  38                 	db	56
   299  007C51  86                 	db	134
   300  007C52  35                 	db	53
   301  007C53  C0                 	db	192
   302  007C54  D6                 	db	214
   303  007C55  33                 	db	51
   304  007C56  CC                 	db	204
   305  007C57  2B                 	db	43
   306  007C58  32                 	db	50
   307  007C59  70                 	db	112
   308  007C5A  89                 	db	137
   309  007C5B  30                 	db	48
   310  007C5C  E7                 	db	231
   311  007C5D  DB                 	db	219
   312  007C5E  2E                 	db	46
   313  007C5F  E5                 	db	229
   314  007C60  3C                 	db	60
   315  007C61  1E                 	db	30
   316  007C62  42                 	db	66
   317  007C63  A2                 	db	162
   318  007C64  0D                 	db	13
   319  007C65                     __end_of__npowers_:
   320                           	opt stack 0
   321  007C65                     _hexpowers:
   322                           	opt stack 0
   323  007C65  0001               	dw	1
   324  007C67  0000               	dw	0
   325  007C69  0010               	dw	16
   326  007C6B  0000               	dw	0
   327  007C6D  0100               	dw	256
   328  007C6F  0000               	dw	0
   329  007C71  1000               	dw	4096
   330  007C73  0000               	dw	0
   331  007C75  0000               	dw	0
   332  007C77  0001               	dw	1
   333  007C79  0000               	dw	0
   334  007C7B  0010               	dw	16
   335  007C7D  0000               	dw	0
   336  007C7F  0100               	dw	256
   337  007C81  0000               	dw	0
   338  007C83  1000               	dw	4096
   339  007C85                     __end_of_hexpowers:
   340                           	opt stack 0
   341  007C85                     _USB_SD_Ptr:
   342                           	opt stack 0
   343  007C85  E6                 	db	low _sd000
   344  007C86  7D                 	db	high _sd000
   345  007C87  04                 	db	low _sd001
   346  007C88  7D                 	db	high _sd001
   347  007C89  D0                 	db	low _sd002
   348  007C8A  7C                 	db	high _sd002
   349  007C8B                     __end_of_USB_SD_Ptr:
   350                           	opt stack 0
   351  007C8B                     _USB_CD_Ptr:
   352                           	opt stack 0
   353  007C8B  8D                 	db	low _configDescriptor1
   354  007C8C  7C                 	db	high _configDescriptor1
   355  007C8D                     __end_of_USB_CD_Ptr:
   356                           	opt stack 0
   357  007C8D                     _configDescriptor1:
   358                           	opt stack 0
   359  007C8D  09                 	db	9
   360  007C8E  02                 	db	2
   361  007C8F  43                 	db	67
   362  007C90  00                 	db	0
   363  007C91  02                 	db	2
   364  007C92  01                 	db	1
   365  007C93  00                 	db	0
   366  007C94  C0                 	db	192
   367  007C95  32                 	db	50
   368  007C96  09                 	db	9
   369  007C97  04                 	db	4
   370  007C98  00                 	db	0
   371  007C99  00                 	db	0
   372  007C9A  01                 	db	1
   373  007C9B  02                 	db	2
   374  007C9C  02                 	db	2
   375  007C9D  01                 	db	1
   376  007C9E  00                 	db	0
   377  007C9F  05                 	db	5
   378  007CA0  24                 	db	36
   379  007CA1  00                 	db	0
   380  007CA2  10                 	db	16
   381  007CA3  01                 	db	1
   382  007CA4  04                 	db	4
   383  007CA5  24                 	db	36
   384  007CA6  02                 	db	2
   385  007CA7  02                 	db	2
   386  007CA8  05                 	db	5
   387  007CA9  24                 	db	36
   388  007CAA  06                 	db	6
   389  007CAB  00                 	db	0
   390  007CAC  01                 	db	1
   391  007CAD  05                 	db	5
   392  007CAE  24                 	db	36
   393  007CAF  01                 	db	1
   394  007CB0  00                 	db	0
   395  007CB1  01                 	db	1
   396  007CB2  07                 	db	7
   397  007CB3  05                 	db	5
   398  007CB4  81                 	db	129
   399  007CB5  03                 	db	3
   400  007CB6  08                 	db	8
   401  007CB7  00                 	db	0
   402  007CB8  02                 	db	2
   403  007CB9  09                 	db	9
   404  007CBA  04                 	db	4
   405  007CBB  01                 	db	1
   406  007CBC  00                 	db	0
   407  007CBD  02                 	db	2
   408  007CBE  0A                 	db	10
   409  007CBF  00                 	db	0
   410  007CC0  00                 	db	0
   411  007CC1  00                 	db	0
   412  007CC2  07                 	db	7
   413  007CC3  05                 	db	5
   414  007CC4  02                 	db	2
   415  007CC5  02                 	db	2
   416  007CC6  40                 	db	64
   417  007CC7  00                 	db	0
   418  007CC8  00                 	db	0
   419  007CC9  07                 	db	7
   420  007CCA  05                 	db	5
   421  007CCB  82                 	db	130
   422  007CCC  02                 	db	2
   423  007CCD  40                 	db	64
   424  007CCE  00                 	db	0
   425  007CCF  00                 	db	0
   426  007CD0                     __end_of_configDescriptor1:
   427                           	opt stack 0
   428  007CD0                     _sd002:
   429                           	opt stack 0
   430  007CD0  34                 	db	52
   431  007CD1  03                 	db	3
   432  007CD2  0043               	dw	67
   433  007CD4  0044               	dw	68
   434  007CD6  0043               	dw	67
   435  007CD8  0020               	dw	32
   436  007CDA  0052               	dw	82
   437  007CDC  0053               	dw	83
   438  007CDE  002D               	dw	45
   439  007CE0  0032               	dw	50
   440  007CE2  0033               	dw	51
   441  007CE4  0032               	dw	50
   442  007CE6  0020               	dw	32
   443  007CE8  0045               	dw	69
   444  007CEA  006D               	dw	109
   445  007CEC  0075               	dw	117
   446  007CEE  006C               	dw	108
   447  007CF0  0061               	dw	97
   448  007CF2  0074               	dw	116
   449  007CF4  0069               	dw	105
   450  007CF6  006F               	dw	111
   451  007CF8  006E               	dw	110
   452  007CFA  0020               	dw	32
   453  007CFC  0044               	dw	68
   454  007CFE  0065               	dw	101
   455  007D00  006D               	dw	109
   456  007D02  006F               	dw	111
   457  007D04                     __end_of_sd002:
   458                           	opt stack 0
   459  007D04                     _sd001:
   460                           	opt stack 0
   461  007D04  34                 	db	52
   462  007D05  03                 	db	3
   463  007D06  004D               	dw	77
   464  007D08  0069               	dw	105
   465  007D0A  0063               	dw	99
   466  007D0C  0072               	dw	114
   467  007D0E  006F               	dw	111
   468  007D10  0063               	dw	99
   469  007D12  0068               	dw	104
   470  007D14  0069               	dw	105
   471  007D16  0070               	dw	112
   472  007D18  0020               	dw	32
   473  007D1A  0054               	dw	84
   474  007D1C  0065               	dw	101
   475  007D1E  0063               	dw	99
   476  007D20  0068               	dw	104
   477  007D22  006E               	dw	110
   478  007D24  006F               	dw	111
   479  007D26  006C               	dw	108
   480  007D28  006F               	dw	111
   481  007D2A  0067               	dw	103
   482  007D2C  0079               	dw	121
   483  007D2E  0020               	dw	32
   484  007D30  0049               	dw	73
   485  007D32  006E               	dw	110
   486  007D34  0063               	dw	99
   487  007D36  002E               	dw	46
   488  007D38                     __end_of_sd001:
   489                           	opt stack 0
   490  007D38                     _device_dsc:
   491                           	opt stack 0
   492  007D38  12                 	db	18
   493  007D39  01                 	db	1
   494  007D3A  0200               	dw	512
   495  007D3C  02                 	db	2
   496  007D3D  00                 	db	0
   497  007D3E  00                 	db	0
   498  007D3F  08                 	db	8
   499  007D40  04D8               	dw	1240
   500  007D42  000A               	dw	10
   501  007D44  0100               	dw	256
   502  007D46  01                 	db	1
   503  007D47  02                 	db	2
   504  007D48  00                 	db	0
   505  007D49  01                 	db	1
   506  007D4A                     __end_of_device_dsc:
   507                           	opt stack 0
   508  007D4A                     _MAC_SET_SF:
   509                           	opt stack 0
   510  007D4A  72                 	db	114
   511  007D4B  61                 	db	97
   512  007D4C  64                 	db	100
   513  007D4D  69                 	db	105
   514  007D4E  6F                 	db	111
   515  007D4F  20                 	db	32
   516  007D50  73                 	db	115
   517  007D51  65                 	db	101
   518  007D52  74                 	db	116
   519  007D53  20                 	db	32
   520  007D54  73                 	db	115
   521  007D55  66                 	db	102
   522  007D56  20                 	db	32
   523  007D57  53                 	db	83
   524  007D58  46                 	db	70
   525  007D59  00                 	db	0
   526  007D5A                     __end_of_MAC_SET_SF:
   527                           	opt stack 0
   528  007D5A                     _MAC_SET_CH_STATUS:
   529                           	opt stack 0
   530  007D5A  73                 	db	115
   531  007D5B  65                 	db	101
   532  007D5C  74                 	db	116
   533  007D5D  20                 	db	32
   534  007D5E  63                 	db	99
   535  007D5F  68                 	db	104
   536  007D60  20                 	db	32
   537  007D61  73                 	db	115
   538  007D62  74                 	db	116
   539  007D63  61                 	db	97
   540  007D64  74                 	db	116
   541  007D65  75                 	db	117
   542  007D66  73                 	db	115
   543  007D67  00                 	db	0
   544  007D68                     __end_of_MAC_SET_CH_STATUS:
   545                           	opt stack 0
   546  007D68                     _MAC_SET_BW:
   547                           	opt stack 0
   548  007D68  72                 	db	114
   549  007D69  61                 	db	97
   550  007D6A  64                 	db	100
   551  007D6B  69                 	db	105
   552  007D6C  6F                 	db	111
   553  007D6D  20                 	db	32
   554  007D6E  73                 	db	115
   555  007D6F  65                 	db	101
   556  007D70  74                 	db	116
   557  007D71  20                 	db	32
   558  007D72  62                 	db	98
   559  007D73  77                 	db	119
   560  007D74  00                 	db	0
   561  007D75                     __end_of_MAC_SET_BW:
   562                           	opt stack 0
   563  007D75                     _MAC_SET_APPKEY:
   564                           	opt stack 0
   565  007D75  73                 	db	115
   566  007D76  65                 	db	101
   567  007D77  74                 	db	116
   568  007D78  20                 	db	32
   569  007D79  61                 	db	97
   570  007D7A  70                 	db	112
   571  007D7B  70                 	db	112
   572  007D7C  6B                 	db	107
   573  007D7D  65                 	db	101
   574  007D7E  79                 	db	121
   575  007D7F  00                 	db	0
   576  007D80                     __end_of_MAC_SET_APPKEY:
   577                           	opt stack 0
   578  007D80                     _MAC_SET_APPEUI:
   579                           	opt stack 0
   580  007D80  73                 	db	115
   581  007D81  65                 	db	101
   582  007D82  74                 	db	116
   583  007D83  20                 	db	32
   584  007D84  61                 	db	97
   585  007D85  70                 	db	112
   586  007D86  70                 	db	112
   587  007D87  65                 	db	101
   588  007D88  75                 	db	117
   589  007D89  69                 	db	105
   590  007D8A  00                 	db	0
   591  007D8B                     __end_of_MAC_SET_APPEUI:
   592                           	opt stack 0
   593  007D8B                     _MAC_SET_DEVEUI:
   594                           	opt stack 0
   595  007D8B  73                 	db	115
   596  007D8C  65                 	db	101
   597  007D8D  74                 	db	116
   598  007D8E  20                 	db	32
   599  007D8F  64                 	db	100
   600  007D90  65                 	db	101
   601  007D91  76                 	db	118
   602  007D92  65                 	db	101
   603  007D93  75                 	db	117
   604  007D94  69                 	db	105
   605  007D95  00                 	db	0
   606  007D96                     __end_of_MAC_SET_DEVEUI:
   607                           	opt stack 0
   608  007D96                     _MAC_GET_DNCTR:
   609                           	opt stack 0
   610  007D96  67                 	db	103
   611  007D97  65                 	db	101
   612  007D98  74                 	db	116
   613  007D99  20                 	db	32
   614  007D9A  64                 	db	100
   615  007D9B  6E                 	db	110
   616  007D9C  63                 	db	99
   617  007D9D  74                 	db	116
   618  007D9E  72                 	db	114
   619  007D9F  00                 	db	0
   620  007DA0                     __end_of_MAC_GET_DNCTR:
   621                           	opt stack 0
   622  007DA0                     _MAC_JOIN_OTAA:
   623                           	opt stack 0
   624  007DA0  6A                 	db	106
   625  007DA1  6F                 	db	111
   626  007DA2  69                 	db	105
   627  007DA3  6E                 	db	110
   628  007DA4  20                 	db	32
   629  007DA5  6F                 	db	111
   630  007DA6  74                 	db	116
   631  007DA7  61                 	db	97
   632  007DA8  61                 	db	97
   633  007DA9  00                 	db	0
   634  007DAA                     __end_of_MAC_JOIN_OTAA:
   635                           	opt stack 0
   636  007DAA                     _MAC_TX_UNCNF:
   637                           	opt stack 0
   638  007DAA  74                 	db	116
   639  007DAB  78                 	db	120
   640  007DAC  20                 	db	32
   641  007DAD  75                 	db	117
   642  007DAE  6E                 	db	110
   643  007DAF  63                 	db	99
   644  007DB0  6E                 	db	110
   645  007DB1  66                 	db	102
   646  007DB2  00                 	db	0
   647  007DB3                     __end_of_MAC_TX_UNCNF:
   648                           	opt stack 0
   649  007DB3                     _MAC_GET_ADR:
   650                           	opt stack 0
   651  007DB3  67                 	db	103
   652  007DB4  65                 	db	101
   653  007DB5  74                 	db	116
   654  007DB6  20                 	db	32
   655  007DB7  61                 	db	97
   656  007DB8  64                 	db	100
   657  007DB9  72                 	db	114
   658  007DBA  00                 	db	0
   659  007DBB                     __end_of_MAC_GET_ADR:
   660                           	opt stack 0
   661  007DBB                     _MAC_SET_ADR:
   662                           	opt stack 0
   663  007DBB  73                 	db	115
   664  007DBC  65                 	db	101
   665  007DBD  74                 	db	116
   666  007DBE  20                 	db	32
   667  007DBF  61                 	db	97
   668  007DC0  64                 	db	100
   669  007DC1  72                 	db	114
   670  007DC2  00                 	db	0
   671  007DC3                     __end_of_MAC_SET_ADR:
   672                           	opt stack 0
   673  007DC3                     _MAC_SET_DR:
   674                           	opt stack 0
   675  007DC3  73                 	db	115
   676  007DC4  65                 	db	101
   677  007DC5  74                 	db	116
   678  007DC6  20                 	db	32
   679  007DC7  64                 	db	100
   680  007DC8  72                 	db	114
   681  007DC9  00                 	db	0
   682  007DCA                     __end_of_MAC_SET_DR:
   683                           	opt stack 0
   684  007DCA                     _MAC_TX_CNF:
   685                           	opt stack 0
   686  007DCA  74                 	db	116
   687  007DCB  78                 	db	120
   688  007DCC  20                 	db	32
   689  007DCD  63                 	db	99
   690  007DCE  6E                 	db	110
   691  007DCF  66                 	db	102
   692  007DD0  00                 	db	0
   693  007DD1                     __end_of_MAC_TX_CNF:
   694                           	opt stack 0
   695  007DD1                     _SYS_RESET:
   696                           	opt stack 0
   697  007DD1  72                 	db	114
   698  007DD2  65                 	db	101
   699  007DD3  73                 	db	115
   700  007DD4  65                 	db	101
   701  007DD5  74                 	db	116
   702  007DD6  00                 	db	0
   703  007DD7                     __end_of_SYS_RESET:
   704                           	opt stack 0
   705  007DD7                     _SYS:
   706                           	opt stack 0
   707  007DD7  73                 	db	115
   708  007DD8  79                 	db	121
   709  007DD9  73                 	db	115
   710  007DDA  20                 	db	32
   711  007DDB  00                 	db	0
   712  007DDC                     __end_of_SYS:
   713                           	opt stack 0
   714  007DDC                     _MAC_SAVE:
   715                           	opt stack 0
   716  007DDC  73                 	db	115
   717  007DDD  61                 	db	97
   718  007DDE  76                 	db	118
   719  007DDF  65                 	db	101
   720  007DE0  00                 	db	0
   721  007DE1                     __end_of_MAC_SAVE:
   722                           	opt stack 0
   723  007DE1                     _MAC:
   724                           	opt stack 0
   725  007DE1  6D                 	db	109
   726  007DE2  61                 	db	97
   727  007DE3  63                 	db	99
   728  007DE4  20                 	db	32
   729  007DE5  00                 	db	0
   730  007DE6                     __end_of_MAC:
   731                           	opt stack 0
   732  007DE6                     _sd000:
   733                           	opt stack 0
   734  007DE6  04                 	db	4
   735  007DE7  03                 	db	3
   736  007DE8  0409               	dw	1033
   737  007DEA                     __end_of_sd000:
   738                           	opt stack 0
   739  007DEA                     _STATE_OFF:
   740                           	opt stack 0
   741  007DEA  6F                 	db	111
   742  007DEB  66                 	db	102
   743  007DEC  66                 	db	102
   744  007DED  00                 	db	0
   745  007DEE                     __end_of_STATE_OFF:
   746                           	opt stack 0
   747  007DEE                     _STATE_ON:
   748                           	opt stack 0
   749  007DEE  6F                 	db	111
   750  007DEF  6E                 	db	110
   751  007DF0  00                 	db	0
   752  007DF1                     __end_of_STATE_ON:
   753                           	opt stack 0
   754  007DF1                     _get_preambleid_900:
   755                           	opt stack 0
   756  007DF1  48                 	db	72
   757  007DF2  50                 	db	80
   758  007DF3                     __end_of_get_preambleid_900:
   759                           	opt stack 0
   760  007DF3                     _set_preambleid_900:
   761                           	opt stack 0
   762  007DF3  48                 	db	72
   763  007DF4  50                 	db	80
   764  007DF5                     __end_of_set_preambleid_900:
   765                           	opt stack 0
   766  007DF5                     _get_channelmask_900:
   767                           	opt stack 0
   768  007DF5  43                 	db	67
   769  007DF6  4D                 	db	77
   770  007DF7                     __end_of_get_channelmask_900:
   771                           	opt stack 0
   772  007DF7                     _set_channelmask_900:
   773                           	opt stack 0
   774  007DF7  43                 	db	67
   775  007DF8  4D                 	db	77
   776  007DF9                     __end_of_set_channelmask_900:
   777                           	opt stack 0
   778  007DF9                     _gs_encryption:
   779                           	opt stack 0
   780  007DF9  45                 	db	69
   781  007DFA  45                 	db	69
   782  007DFB                     __end_of_gs_encryption:
   783                           	opt stack 0
   784  007DFB                     _set_link_key:
   785                           	opt stack 0
   786  007DFB  4B                 	db	75
   787  007DFC  59                 	db	89
   788  007DFD                     __end_of_set_link_key:
   789                           	opt stack 0
   790  007DFD                     _write_values:
   791                           	opt stack 0
   792  007DFD  57                 	db	87
   793  007DFE  52                 	db	82
   794  007DFF                     __end_of_write_values:
   795                           	opt stack 0
   796  007DFF                     _gs_channel:
   797                           	opt stack 0
   798  007DFF  43                 	db	67
   799  007E00  48                 	db	72
   800  007E01                     __end_of_gs_channel:
   801                           	opt stack 0
   802  007E01                     _gs_pan:
   803                           	opt stack 0
   804  007E01  49                 	db	73
   805  007E02  44                 	db	68
   806  007E03                     __end_of_gs_pan:
   807                           	opt stack 0
   808  007E03                     _get_own_mac_high:
   809                           	opt stack 0
   810  007E03  53                 	db	83
   811  007E04  48                 	db	72
   812  007E05                     __end_of_get_own_mac_high:
   813                           	opt stack 0
   814  007E05                     _get_own_mac_low:
   815                           	opt stack 0
   816  007E05  53                 	db	83
   817  007E06  4C                 	db	76
   818  007E07                     __end_of_get_own_mac_low:
   819                           	opt stack 0
   820  0000                     _EECON2	set	4007
   821  0000                     _EECON1bits	set	4006
   822  0000                     _EEDATA	set	4008
   823  0000                     _EEADR	set	4009
   824  0000                     _ADRESL	set	4035
   825  0000                     _ADRESH	set	4036
   826  0000                     _ADCON0	set	4034
   827  0000                     _ADCON2	set	4032
   828  0000                     _ADCON1	set	4033
   829  0000                     _IPR1bits	set	3999
   830  0000                     _CCP1CON	set	4029
   831  0000                     _CCPR1L	set	4030
   832  0000                     _CCPR1H	set	4031
   833  0000                     _TMR1L	set	4046
   834  0000                     _TMR1H	set	4047
   835  0000                     _T3CON	set	4017
   836  0000                     _T0CON	set	4053
   837  0000                     _T1CON	set	4045
   838  0000                     _RCREG	set	4014
   839  0000                     _RCSTA	set	4011
   840  0000                     _TXREG	set	4013
   841  0000                     _RCSTAbits	set	4011
   842  0000                     _SPBRGH	set	4016
   843  0000                     _SPBRG	set	4015
   844  0000                     _BAUDCONbits	set	4024
   845  0000                     _TXSTAbits	set	4012
   846  0000                     _TRISCbits	set	3988
   847  0000                     _LATDbits	set	3980
   848  0000                     _PORTEbits	set	3972
   849  0000                     _TRISDbits	set	3989
   850  0000                     _TRISEbits	set	3990
   851  0000                     _UEP0bits	set	3952
   852  0000                     _INTCONbits	set	4082
   853  0000                     _IPR2bits	set	4002
   854  0000                     _RCONbits	set	4048
   855  0000                     _PORTCbits	set	3970
   856  0000                     _UCON	set	3949
   857  0000                     _USTAT	set	3948
   858  0000                     _PIR2bits	set	4001
   859  0000                     _UIEbits	set	3945
   860  0000                     _UIRbits	set	3944
   861  0000                     _UADDR	set	3950
   862  0000                     _UCONbits	set	3949
   863  0000                     _UIE	set	3945
   864  0000                     _UEIE	set	3947
   865  0000                     _UCFG	set	3951
   866  0000                     _UIR	set	3944
   867  0000                     _UEIR	set	3946
   868  0000                     _PIE2bits	set	4000
   869  0000                     _PORTDbits	set	3971
   870  0000                     _UEP1	set	3953
   871  0000                     _UEP0	set	3952
   872  0000                     _GO_DONE	set	32273
   873  0000                     _ADIE	set	31982
   874  0000                     _ADIF	set	31990
   875  0000                     _ADON	set	32272
   876  0000                     _TMR0IE	set	32661
   877  0000                     _GIEH	set	32663
   878  0000                     _TMR1IE	set	31976
   879  0000                     _TXIF	set	31988
   880  0000                     _USBIE	set	32005
   881  0000                     _RCIF	set	31989
   882  0000                     _RCIE	set	31981
   883  0000                     _CCP1IE	set	31978
   884  0000                     _CCP1IF	set	31986
   885  007E07                     STR_1:
   886  007E07  72                 	db	114	;'r'
   887  007E08  65                 	db	101	;'e'
   888  007E09  73                 	db	115	;'s'
   889  007E0A  70                 	db	112	;'p'
   890  007E0B  6F                 	db	111	;'o'
   891  007E0C  73                 	db	115	;'s'
   892  007E0D  74                 	db	116	;'t'
   893  007E0E  61                 	db	97	;'a'
   894  007E0F  3A                 	db	58	;':'
   895  007E10  20                 	db	32
   896  007E11  25                 	db	37
   897  007E12  32                 	db	50	;'2'
   898  007E13  58                 	db	88	;'X'
   899  007E14  20                 	db	32
   900  007E15  25                 	db	37
   901  007E16  32                 	db	50	;'2'
   902  007E17  58                 	db	88	;'X'
   903  007E18  20                 	db	32
   904  007E19  25                 	db	37
   905  007E1A  32                 	db	50	;'2'
   906  007E1B  58                 	db	88	;'X'
   907  007E1C  20                 	db	32
   908  007E1D  25                 	db	37
   909  007E1E  32                 	db	50	;'2'
   910  007E1F  58                 	db	88	;'X'
   911  007E20  20                 	db	32
   912  007E21  25                 	db	37
   913  007E22  32                 	db	50	;'2'
   914  007E23  58                 	db	88	;'X'
   915  007E24  20                 	db	32
   916  007E25  25                 	db	37
   917  007E26  32                 	db	50	;'2'
   918  007E27  58                 	db	88	;'X'
   919  007E28  20                 	db	32
   920  007E29  25                 	db	37
   921  007E2A  32                 	db	50	;'2'
   922  007E2B  58                 	db	88	;'X'
   923  007E2C  20                 	db	32
   924  007E2D  25                 	db	37
   925  007E2E  32                 	db	50	;'2'
   926  007E2F  58                 	db	88	;'X'
   927  007E30  20                 	db	32
   928  007E31  25                 	db	37
   929  007E32  32                 	db	50	;'2'
   930  007E33  58                 	db	88	;'X'
   931  007E34  20                 	db	32
   932  007E35  25                 	db	37
   933  007E36  32                 	db	50	;'2'
   934  007E37  58                 	db	88	;'X'
   935  007E38  20                 	db	32
   936  007E39  20                 	db	32
   937  007E3A  25                 	db	37
   938  007E3B  64                 	db	100	;'d'
   939  007E3C  20                 	db	32
   940  007E3D  20                 	db	32
   941  007E3E  25                 	db	37
   942  007E3F  64                 	db	100	;'d'
   943  007E40  20                 	db	32
   944  007E41  20                 	db	32
   945  007E42  25                 	db	37
   946  007E43  64                 	db	100	;'d'
   947  007E44  20                 	db	32
   948  007E45  20                 	db	32
   949  007E46  25                 	db	37
   950  007E47  64                 	db	100	;'d'
   951  007E48  20                 	db	32
   952  007E49  20                 	db	32
   953  007E4A  25                 	db	37
   954  007E4B  64                 	db	100	;'d'
   955  007E4C  20                 	db	32
   956  007E4D  20                 	db	32
   957  007E4E  25                 	db	37
   958  007E4F  64                 	db	100	;'d'
   959  007E50  20                 	db	32
   960  007E51  20                 	db	32
   961  007E52  25                 	db	37
   962  007E53  64                 	db	100	;'d'
   963  007E54  20                 	db	32
   964  007E55  20                 	db	32
   965  007E56  25                 	db	37
   966  007E57  64                 	db	100	;'d'
   967  007E58  20                 	db	32
   968  007E59  20                 	db	32
   969  007E5A  25                 	db	37
   970  007E5B  64                 	db	100	;'d'
   971  007E5C  20                 	db	32
   972  007E5D  20                 	db	32
   973  007E5E  25                 	db	37
   974  007E5F  64                 	db	100	;'d'
   975  007E60  20                 	db	32
   976  007E61  20                 	db	32
   977  007E62  25                 	db	37
   978  007E63  64                 	db	100	;'d'
   979  007E64  20                 	db	32
   980  007E65  20                 	db	32
   981  007E66  25                 	db	37
   982  007E67  64                 	db	100	;'d'
   983  007E68  20                 	db	32
   984  007E69  0A                 	db	10
   985  007E6A  0D                 	db	13
   986  007E6B  00                 	db	0
   987  007E6C                     STR_24:
   988  007E6C  25                 	db	37
   989  007E6D  73                 	db	115	;'s'
   990  007E6E  20                 	db	32
   991  007E6F  25                 	db	37
   992  007E70  2E                 	db	46
   993  007E71  32                 	db	50	;'2'
   994  007E72  78                 	db	120	;'x'
   995  007E73  25                 	db	37
   996  007E74  2E                 	db	46
   997  007E75  32                 	db	50	;'2'
   998  007E76  78                 	db	120	;'x'
   999  007E77  25                 	db	37
  1000  007E78  2E                 	db	46
  1001  007E79  32                 	db	50	;'2'
  1002  007E7A  78                 	db	120	;'x'
  1003  007E7B  25                 	db	37
  1004  007E7C  2E                 	db	46
  1005  007E7D  32                 	db	50	;'2'
  1006  007E7E  78                 	db	120	;'x'
  1007  007E7F  25                 	db	37
  1008  007E80  2E                 	db	46
  1009  007E81  32                 	db	50	;'2'
  1010  007E82  78                 	db	120	;'x'
  1011  007E83  25                 	db	37
  1012  007E84  2E                 	db	46
  1013  007E85  32                 	db	50	;'2'
  1014  007E86  78                 	db	120	;'x'
  1015  007E87  25                 	db	37
  1016  007E88  2E                 	db	46
  1017  007E89  32                 	db	50	;'2'
  1018  007E8A  78                 	db	120	;'x'
  1019  007E8B  25                 	db	37
  1020  007E8C  2E                 	db	46
  1021  007E8D  32                 	db	50	;'2'
  1022  007E8E  78                 	db	120	;'x'
  1023  007E8F  25                 	db	37
  1024  007E90  2E                 	db	46
  1025  007E91  32                 	db	50	;'2'
  1026  007E92  78                 	db	120	;'x'
  1027  007E93  25                 	db	37
  1028  007E94  2E                 	db	46
  1029  007E95  32                 	db	50	;'2'
  1030  007E96  78                 	db	120	;'x'
  1031  007E97  25                 	db	37
  1032  007E98  2E                 	db	46
  1033  007E99  32                 	db	50	;'2'
  1034  007E9A  78                 	db	120	;'x'
  1035  007E9B  25                 	db	37
  1036  007E9C  2E                 	db	46
  1037  007E9D  32                 	db	50	;'2'
  1038  007E9E  78                 	db	120	;'x'
  1039  007E9F  25                 	db	37
  1040  007EA0  2E                 	db	46
  1041  007EA1  32                 	db	50	;'2'
  1042  007EA2  78                 	db	120	;'x'
  1043  007EA3  25                 	db	37
  1044  007EA4  2E                 	db	46
  1045  007EA5  32                 	db	50	;'2'
  1046  007EA6  78                 	db	120	;'x'
  1047  007EA7  25                 	db	37
  1048  007EA8  2E                 	db	46
  1049  007EA9  32                 	db	50	;'2'
  1050  007EAA  78                 	db	120	;'x'
  1051  007EAB  25                 	db	37
  1052  007EAC  2E                 	db	46
  1053  007EAD  32                 	db	50	;'2'
  1054  007EAE  78                 	db	120	;'x'
  1055  007EAF  00                 	db	0
  1056  007EB0                     STR_22:
  1057  007EB0  25                 	db	37
  1058  007EB1  73                 	db	115	;'s'
  1059  007EB2  20                 	db	32
  1060  007EB3  25                 	db	37
  1061  007EB4  2E                 	db	46
  1062  007EB5  32                 	db	50	;'2'
  1063  007EB6  78                 	db	120	;'x'
  1064  007EB7  25                 	db	37
  1065  007EB8  2E                 	db	46
  1066  007EB9  32                 	db	50	;'2'
  1067  007EBA  78                 	db	120	;'x'
  1068  007EBB  25                 	db	37
  1069  007EBC  2E                 	db	46
  1070  007EBD  32                 	db	50	;'2'
  1071  007EBE  78                 	db	120	;'x'
  1072  007EBF  25                 	db	37
  1073  007EC0  2E                 	db	46
  1074  007EC1  32                 	db	50	;'2'
  1075  007EC2  78                 	db	120	;'x'
  1076  007EC3  25                 	db	37
  1077  007EC4  2E                 	db	46
  1078  007EC5  32                 	db	50	;'2'
  1079  007EC6  78                 	db	120	;'x'
  1080  007EC7  25                 	db	37
  1081  007EC8  2E                 	db	46
  1082  007EC9  32                 	db	50	;'2'
  1083  007ECA  78                 	db	120	;'x'
  1084  007ECB  25                 	db	37
  1085  007ECC  2E                 	db	46
  1086  007ECD  32                 	db	50	;'2'
  1087  007ECE  78                 	db	120	;'x'
  1088  007ECF  25                 	db	37
  1089  007ED0  2E                 	db	46
  1090  007ED1  32                 	db	50	;'2'
  1091  007ED2  78                 	db	120	;'x'
  1092  007ED3  00                 	db	0
  1093  007ED4                     STR_11:
  1094  007ED4  66                 	db	102	;'f'
  1095  007ED5  72                 	db	114	;'r'
  1096  007ED6  61                 	db	97	;'a'
  1097  007ED7  6D                 	db	109	;'m'
  1098  007ED8  65                 	db	101	;'e'
  1099  007ED9  5F                 	db	95	;'_'
  1100  007EDA  63                 	db	99	;'c'
  1101  007EDB  6F                 	db	111	;'o'
  1102  007EDC  75                 	db	117	;'u'
  1103  007EDD  6E                 	db	110	;'n'
  1104  007EDE  74                 	db	116	;'t'
  1105  007EDF  65                 	db	101	;'e'
  1106  007EE0  72                 	db	114	;'r'
  1107  007EE1  5F                 	db	95	;'_'
  1108  007EE2  65                 	db	101	;'e'
  1109  007EE3  72                 	db	114	;'r'
  1110  007EE4  72                 	db	114	;'r'
  1111  007EE5  5F                 	db	95	;'_'
  1112  007EE6  72                 	db	114	;'r'
  1113  007EE7  65                 	db	101	;'e'
  1114  007EE8  6A                 	db	106	;'j'
  1115  007EE9  6F                 	db	111	;'o'
  1116  007EEA  69                 	db	105	;'i'
  1117  007EEB  6E                 	db	110	;'n'
  1118  007EEC  5F                 	db	95	;'_'
  1119  007EED  6E                 	db	110	;'n'
  1120  007EEE  65                 	db	101	;'e'
  1121  007EEF  65                 	db	101	;'e'
  1122  007EF0  64                 	db	100	;'d'
  1123  007EF1  65                 	db	101	;'e'
  1124  007EF2  64                 	db	100	;'d'
  1125  007EF3  00                 	db	0
  1126  007EF4                     STR_37:
  1127  007EF4  30                 	db	48	;'0'
  1128  007EF5  31                 	db	49	;'1'
  1129  007EF6  32                 	db	50	;'2'
  1130  007EF7  33                 	db	51	;'3'
  1131  007EF8  34                 	db	52	;'4'
  1132  007EF9  35                 	db	53	;'5'
  1133  007EFA  36                 	db	54	;'6'
  1134  007EFB  37                 	db	55	;'7'
  1135  007EFC  38                 	db	56	;'8'
  1136  007EFD  39                 	db	57	;'9'
  1137  007EFE  41                 	db	65	;'A'
  1138  007EFF  42                 	db	66	;'B'
  1139  007F00  43                 	db	67	;'C'
  1140  007F01  44                 	db	68	;'D'
  1141  007F02  45                 	db	69	;'E'
  1142  007F03  46                 	db	70	;'F'
  1143  007F04  00                 	db	0
  1144  007F05                     STR_38:
  1145  007F05  30                 	db	48	;'0'
  1146  007F06  31                 	db	49	;'1'
  1147  007F07  32                 	db	50	;'2'
  1148  007F08  33                 	db	51	;'3'
  1149  007F09  34                 	db	52	;'4'
  1150  007F0A  35                 	db	53	;'5'
  1151  007F0B  36                 	db	54	;'6'
  1152  007F0C  37                 	db	55	;'7'
  1153  007F0D  38                 	db	56	;'8'
  1154  007F0E  39                 	db	57	;'9'
  1155  007F0F  61                 	db	97	;'a'
  1156  007F10  62                 	db	98	;'b'
  1157  007F11  63                 	db	99	;'c'
  1158  007F12  64                 	db	100	;'d'
  1159  007F13  65                 	db	101	;'e'
  1160  007F14  66                 	db	102	;'f'
  1161  007F15  00                 	db	0
  1162  007F16                     STR_14:
  1163  007F16  69                 	db	105	;'i'
  1164  007F17  6E                 	db	110	;'n'
  1165  007F18  76                 	db	118	;'v'
  1166  007F19  61                 	db	97	;'a'
  1167  007F1A  6C                 	db	108	;'l'
  1168  007F1B  69                 	db	105	;'i'
  1169  007F1C  64                 	db	100	;'d'
  1170  007F1D  5F                 	db	95	;'_'
  1171  007F1E  64                 	db	100	;'d'
  1172  007F1F  61                 	db	97	;'a'
  1173  007F20  74                 	db	116	;'t'
  1174  007F21  61                 	db	97	;'a'
  1175  007F22  5F                 	db	95	;'_'
  1176  007F23  6C                 	db	108	;'l'
  1177  007F24  65                 	db	101	;'e'
  1178  007F25  6E                 	db	110	;'n'
  1179  007F26  00                 	db	0
  1180  007F27  3C                 	db	60	;'<'
  1181  007F28  3D                 	db	61	;'='
  1182  007F29  3E                 	db	62	;'>'
  1183  007F2A  80                 	db	-128
  1184  007F2B  4E                 	db	78	;'N'
  1185  007F2C  23                 	db	35
  1186  007F2D  25                 	db	37
  1187  007F2E  6C                 	db	108	;'l'
  1188  007F2F  64                 	db	100	;'d'
  1189  007F30  23                 	db	35
  1190  007F31  25                 	db	37
  1191  007F32  73                 	db	115	;'s'
  1192  007F33  23                 	db	35
  1193  007F34  25                 	db	37
  1194  007F35  64                 	db	100	;'d'
  1195  007F36  23                 	db	35
  1196  007F37  00                 	db	0
  1197  007F38                     STR_20:
  1198  007F38  61                 	db	97	;'a'
  1199  007F39  63                 	db	99	;'c'
  1200  007F3A  63                 	db	99	;'c'
  1201  007F3B  65                 	db	101	;'e'
  1202  007F3C  70                 	db	112	;'p'
  1203  007F3D  74                 	db	116	;'t'
  1204  007F3E  65                 	db	101	;'e'
  1205  007F3F  64                 	db	100	;'d'
  1206  007F40  52                 	db	82	;'R'
  1207  007F41  4E                 	db	78	;'N'
  1208  007F42  32                 	db	50	;'2'
  1209  007F43  39                 	db	57	;'9'
  1210  007F44  30                 	db	48	;'0'
  1211  007F45  33                 	db	51	;'3'
  1212  007F46  20                 	db	32
  1213  007F47  00                 	db	0
  1214  007F48                     STR_7:
  1215  007F48  69                 	db	105	;'i'
  1216  007F49  6E                 	db	110	;'n'
  1217  007F4A  76                 	db	118	;'v'
  1218  007F4B  61                 	db	97	;'a'
  1219  007F4C  6C                 	db	108	;'l'
  1220  007F4D  69                 	db	105	;'i'
  1221  007F4E  64                 	db	100	;'d'
  1222  007F4F  5F                 	db	95	;'_'
  1223  007F50  70                 	db	112	;'p'
  1224  007F51  61                 	db	97	;'a'
  1225  007F52  72                 	db	114	;'r'
  1226  007F53  61                 	db	97	;'a'
  1227  007F54  6D                 	db	109	;'m'
  1228  007F55  00                 	db	0
  1229  007F56                     STR_18:
  1230  007F56  6B                 	db	107	;'k'
  1231  007F57  65                 	db	101	;'e'
  1232  007F58  79                 	db	121	;'y'
  1233  007F59  73                 	db	115	;'s'
  1234  007F5A  5F                 	db	95	;'_'
  1235  007F5B  6E                 	db	110	;'n'
  1236  007F5C  6F                 	db	111	;'o'
  1237  007F5D  74                 	db	116	;'t'
  1238  007F5E  5F                 	db	95	;'_'
  1239  007F5F  69                 	db	105	;'i'
  1240  007F60  6E                 	db	110	;'n'
  1241  007F61  69                 	db	105	;'i'
  1242  007F62  74                 	db	116	;'t'
  1243  007F63  00                 	db	0
  1244  007F64                     STR_8:
  1245  007F64  6E                 	db	110	;'n'
  1246  007F65  6F                 	db	111	;'o'
  1247  007F66  74                 	db	116	;'t'
  1248  007F67  5F                 	db	95	;'_'
  1249  007F68  6A                 	db	106	;'j'
  1250  007F69  6F                 	db	111	;'o'
  1251  007F6A  69                 	db	105	;'i'
  1252  007F6B  6E                 	db	110	;'n'
  1253  007F6C  65                 	db	101	;'e'
  1254  007F6D  64                 	db	100	;'d'
  1255  007F6E  00                 	db	0
  1256  007F6F                     STR_13:
  1257  007F6F  6D                 	db	109	;'m'
  1258  007F70  61                 	db	97	;'a'
  1259  007F71  63                 	db	99	;'c'
  1260  007F72  5F                 	db	95	;'_'
  1261  007F73  70                 	db	112	;'p'
  1262  007F74  61                 	db	97	;'a'
  1263  007F75  75                 	db	117	;'u'
  1264  007F76  73                 	db	115	;'s'
  1265  007F77  65                 	db	101	;'e'
  1266  007F78  64                 	db	100	;'d'
  1267  007F79  00                 	db	0
  1268  007F7A                     STR_9:
  1269  007F7A  6E                 	db	110	;'n'
  1270  007F7B  6F                 	db	111	;'o'
  1271  007F7C  5F                 	db	95	;'_'
  1272  007F7D  66                 	db	102	;'f'
  1273  007F7E  72                 	db	114	;'r'
  1274  007F7F  65                 	db	101	;'e'
  1275  007F80  65                 	db	101	;'e'
  1276  007F81  5F                 	db	95	;'_'
  1277  007F82  63                 	db	99	;'c'
  1278  007F83  68                 	db	104	;'h'
  1279  007F84  00                 	db	0
  1280  007F85                     STR_26:
  1281  007F85  25                 	db	37
  1282  007F86  73                 	db	115	;'s'
  1283  007F87  20                 	db	32
  1284  007F88  25                 	db	37
  1285  007F89  64                 	db	100	;'d'
  1286  007F8A  20                 	db	32
  1287  007F8B  6F                 	db	111	;'o'
  1288  007F8C  66                 	db	102	;'f'
  1289  007F8D  66                 	db	102	;'f'
  1290  007F8E  00                 	db	0
  1291  007F8F                     STR_15:
  1292  007F8F  6D                 	db	109	;'m'
  1293  007F90  61                 	db	97	;'a'
  1294  007F91  63                 	db	99	;'c'
  1295  007F92  5F                 	db	95	;'_'
  1296  007F93  74                 	db	116	;'t'
  1297  007F94  78                 	db	120	;'x'
  1298  007F95  5F                 	db	95	;'_'
  1299  007F96  6F                 	db	111	;'o'
  1300  007F97  6B                 	db	107	;'k'
  1301  007F98  00                 	db	0
  1302  007F99                     STR_25:
  1303  007F99  25                 	db	37
  1304  007F9A  73                 	db	115	;'s'
  1305  007F9B  20                 	db	32
  1306  007F9C  25                 	db	37
  1307  007F9D  64                 	db	100	;'d'
  1308  007F9E  20                 	db	32
  1309  007F9F  6F                 	db	111	;'o'
  1310  007FA0  6E                 	db	110	;'n'
  1311  007FA1  00                 	db	0
  1312  007FA2                     STR_16:
  1313  007FA2  6D                 	db	109	;'m'
  1314  007FA3  61                 	db	97	;'a'
  1315  007FA4  63                 	db	99	;'c'
  1316  007FA5  5F                 	db	95	;'_'
  1317  007FA6  72                 	db	114	;'r'
  1318  007FA7  78                 	db	120	;'x'
  1319  007FA8  20                 	db	32
  1320  007FA9  00                 	db	0
  1321  007FAA                     STR_17:
  1322  007FAA  6D                 	db	109	;'m'
  1323  007FAB  61                 	db	97	;'a'
  1324  007FAC  63                 	db	99	;'c'
  1325  007FAD  5F                 	db	95	;'_'
  1326  007FAE  65                 	db	101	;'e'
  1327  007FAF  72                 	db	114	;'r'
  1328  007FB0  72                 	db	114	;'r'
  1329  007FB1  00                 	db	0
  1330  007FB2  25                 	db	37
  1331  007FB3  73                 	db	115	;'s'
  1332  007FB4  3A                 	db	58	;':'
  1333  007FB5  25                 	db	37
  1334  007FB6  6C                 	db	108	;'l'
  1335  007FB7  75                 	db	117	;'u'
  1336  007FB8  23                 	db	35
  1337  007FB9  00                 	db	0
  1338  007FBA                     STR_36:
  1339  007FBA  28                 	db	40
  1340  007FBB  6E                 	db	110	;'n'
  1341  007FBC  75                 	db	117	;'u'
  1342  007FBD  6C                 	db	108	;'l'
  1343  007FBE  6C                 	db	108	;'l'
  1344  007FBF  29                 	db	41
  1345  007FC0  00                 	db	0
  1346  007FC1                     STR_33:
  1347  007FC1  25                 	db	37
  1348  007FC2  73                 	db	115	;'s'
  1349  007FC3  20                 	db	32
  1350  007FC4  25                 	db	37
  1351  007FC5  64                 	db	100	;'d'
  1352  007FC6  20                 	db	32
  1353  007FC7  00                 	db	0
  1354  007FC8                     STR_19:
  1355  007FC8  64                 	db	100	;'d'
  1356  007FC9  65                 	db	101	;'e'
  1357  007FCA  6E                 	db	110	;'n'
  1358  007FCB  69                 	db	105	;'i'
  1359  007FCC  65                 	db	101	;'e'
  1360  007FCD  64                 	db	100	;'d'
  1361  007FCE  00                 	db	0
  1362  007FCF                     STR_10:
  1363  007FCF  73                 	db	115	;'s'
  1364  007FD0  69                 	db	105	;'i'
  1365  007FD1  6C                 	db	108	;'l'
  1366  007FD2  65                 	db	101	;'e'
  1367  007FD3  6E                 	db	110	;'n'
  1368  007FD4  74                 	db	116	;'t'
  1369  007FD5  00                 	db	0
  1370  007FD6  25                 	db	37
  1371  007FD7  73                 	db	115	;'s'
  1372  007FD8  3A                 	db	58	;':'
  1373  007FD9  25                 	db	37
  1374  007FDA  66                 	db	102	;'f'
  1375  007FDB  23                 	db	35
  1376  007FDC  00                 	db	0
  1377  007FDD  25                 	db	37
  1378  007FDE  73                 	db	115	;'s'
  1379  007FDF  3A                 	db	58	;':'
  1380  007FE0  25                 	db	37
  1381  007FE1  73                 	db	115	;'s'
  1382  007FE2  23                 	db	35
  1383  007FE3  00                 	db	0
  1384  007FE4                     STR_31:
  1385  007FE4  25                 	db	37
  1386  007FE5  73                 	db	115	;'s'
  1387  007FE6  20                 	db	32
  1388  007FE7  25                 	db	37
  1389  007FE8  64                 	db	100	;'d'
  1390  007FE9  00                 	db	0
  1391  007FEA                     STR_27:
  1392  007FEA  25                 	db	37
  1393  007FEB  73                 	db	115	;'s'
  1394  007FEC  20                 	db	32
  1395  007FED  25                 	db	37
  1396  007FEE  73                 	db	115	;'s'
  1397  007FEF  00                 	db	0
  1398  007FF0                     STR_35:
  1399  007FF0  25                 	db	37
  1400  007FF1  30                 	db	48	;'0'
  1401  007FF2  32                 	db	50	;'2'
  1402  007FF3  58                 	db	88	;'X'
  1403  007FF4  00                 	db	0
  1404  007FF5                     STR_30:
  1405  007FF5  25                 	db	37
  1406  007FF6  73                 	db	115	;'s'
  1407  007FF7  25                 	db	37
  1408  007FF8  64                 	db	100	;'d'
  1409  007FF9  00                 	db	0
  1410  007FFA                     STR_12:
  1411  007FFA  62                 	db	98	;'b'
  1412  007FFB  75                 	db	117	;'u'
  1413  007FFC  73                 	db	115	;'s'
  1414  007FFD  79                 	db	121	;'y'
  1415  007FFE  00                 	db	0
  1416  0000                     
  1417                           ; #config settings
  1418  007FFF  00                 	db	0	; dummy byte at the end
  1419  0000                     
  1420                           	psect	cinit
  1421  0042AA                     __pcinit:
  1422                           	opt stack 0
  1423  0042AA                     start_initialization:
  1424                           	opt stack 0
  1425  0042AA                     __initialization:
  1426                           	opt stack 0
  1427                           
  1428                           ; Initialize objects allocated to BANK3 (30 bytes)
  1429                           ; load TBLPTR registers with __pidataBANK3
  1430  0042AA  0E02               	movlw	low __pidataBANK3
  1431  0042AC  6EF6               	movwf	tblptrl,c
  1432  0042AE  0E57               	movlw	high __pidataBANK3
  1433  0042B0  6EF7               	movwf	tblptrh,c
  1434  0042B2  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1435  0042B4  6EF8               	movwf	tblptru,c
  1436  0042B6  EE03  F0C3         	lfsr	0,__pdataBANK3
  1437  0042BA  EE10 F01E          	lfsr	1,30
  1438  0042BE                     copy_data0:
  1439  0042BE  0009               	tblrd		*+
  1440  0042C0  CFF5 FFEE          	movff	tablat,postinc0
  1441  0042C4  50E5               	movf	postdec1,w,c
  1442  0042C6  50E1               	movf	fsr1l,w,c
  1443  0042C8  E1FA               	bnz	copy_data0
  1444                           
  1445                           ; Initialize objects allocated to BANK2 (1 bytes)
  1446                           ; load TBLPTR registers with __pidataBANK2
  1447  0042CA  0E76               	movlw	low __pidataBANK2
  1448  0042CC  6EF6               	movwf	tblptrl,c
  1449  0042CE  0E57               	movlw	high __pidataBANK2
  1450  0042D0  6EF7               	movwf	tblptrh,c
  1451  0042D2  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1452  0042D4  6EF8               	movwf	tblptru,c
  1453  0042D6  0009               	tblrd		*+	;fetch initializer
  1454  0042D8  CFF5 F2FE          	movff	tablat,__pdataBANK2
  1455                           
  1456                           ; Clear objects allocated to BANK7 (200 bytes)
  1457  0042DC  EE07  F000         	lfsr	0,__pbssBANK7
  1458  0042E0  0EC8               	movlw	200
  1459  0042E2                     clear_0:
  1460  0042E2  6AEE               	clrf	postinc0,c
  1461  0042E4  06E8               	decf	wreg,f,c
  1462  0042E6  E1FD               	bnz	clear_0
  1463                           
  1464                           ; Clear objects allocated to BANK6 (200 bytes)
  1465  0042E8  EE06  F000         	lfsr	0,__pbssBANK6
  1466  0042EC  0EC8               	movlw	200
  1467  0042EE                     clear_1:
  1468  0042EE  6AEE               	clrf	postinc0,c
  1469  0042F0  06E8               	decf	wreg,f,c
  1470  0042F2  E1FD               	bnz	clear_1
  1471                           
  1472                           ; Clear objects allocated to BANK3 (195 bytes)
  1473  0042F4  EE03  F000         	lfsr	0,__pbssBANK3
  1474  0042F8  0EC3               	movlw	195
  1475  0042FA                     clear_2:
  1476  0042FA  6AEE               	clrf	postinc0,c
  1477  0042FC  06E8               	decf	wreg,f,c
  1478  0042FE  E1FD               	bnz	clear_2
  1479                           
  1480                           ; Clear objects allocated to BANK2 (54 bytes)
  1481  004300  EE02  F0C8         	lfsr	0,__pbssBANK2
  1482  004304  0E36               	movlw	54
  1483  004306                     clear_3:
  1484  004306  6AEE               	clrf	postinc0,c
  1485  004308  06E8               	decf	wreg,f,c
  1486  00430A  E1FD               	bnz	clear_3
  1487                           
  1488                           ; Clear objects allocated to BANK1 (7 bytes)
  1489  00430C  EE01  F0F9         	lfsr	0,__pbssBANK1
  1490  004310  0E07               	movlw	7
  1491  004312                     clear_4:
  1492  004312  6AEE               	clrf	postinc0,c
  1493  004314  06E8               	decf	wreg,f,c
  1494  004316  E1FD               	bnz	clear_4
  1495                           
  1496                           ; Clear objects allocated to BANK4 (100 bytes)
  1497  004318  EE04  F040         	lfsr	0,__pbssBANK4
  1498  00431C  0E64               	movlw	100
  1499  00431E                     clear_5:
  1500  00431E  6AEE               	clrf	postinc0,c
  1501  004320  06E8               	decf	wreg,f,c
  1502  004322  E1FD               	bnz	clear_5
  1503                           
  1504                           ; Clear objects allocated to BANK0 (6 bytes)
  1505  004324  0100               	movlb	0
  1506  004326  6BFF               	clrf	(__pbssBANK0+5)& (0+255),b
  1507  004328  6BFE               	clrf	(__pbssBANK0+4)& (0+255),b
  1508  00432A  6BFD               	clrf	(__pbssBANK0+3)& (0+255),b
  1509  00432C  6BFC               	clrf	(__pbssBANK0+2)& (0+255),b
  1510  00432E  6BFB               	clrf	(__pbssBANK0+1)& (0+255),b
  1511  004330  6BFA               	clrf	__pbssBANK0& (0+255),b
  1512                           
  1513                           ; Clear objects allocated to BANK5 (100 bytes)
  1514  004332  EE05  F080         	lfsr	0,__pbssBANK5
  1515  004336  0E64               	movlw	100
  1516  004338                     clear_6:
  1517  004338  6AEE               	clrf	postinc0,c
  1518  00433A  06E8               	decf	wreg,f,c
  1519  00433C  E1FD               	bnz	clear_6
  1520                           
  1521                           ; Clear objects allocated to COMRAM (39 bytes)
  1522  00433E  EE00  F038         	lfsr	0,__pbssCOMRAM
  1523  004342  0E27               	movlw	39
  1524  004344                     clear_7:
  1525  004344  6AEE               	clrf	postinc0,c
  1526  004346  06E8               	decf	wreg,f,c
  1527  004348  E1FD               	bnz	clear_7
  1528  00434A                     end_of_initialization:
  1529                           	opt stack 0
  1530  00434A                     __end_of__initialization:
  1531                           	opt stack 0
  1532  00434A  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1533  00434C  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1534  00434E  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1535  004350  6EF8               	movwf	tblptru,c
  1536  004352  0100               	movlb	0
  1537  004354  EF08  F007         	goto	_main	;jump to C main() function
  1538                           tblptru	equ	0xFF8
  1539                           tblptrh	equ	0xFF7
  1540                           tblptrl	equ	0xFF6
  1541                           tablat	equ	0xFF5
  1542                           postinc0	equ	0xFEE
  1543                           wreg	equ	0xFE8
  1544                           postdec1	equ	0xFE5
  1545                           fsr1l	equ	0xFE1
  1546                           
  1547                           	psect	bssCOMRAM
  1548  000038                     __pbssCOMRAM:
  1549                           	opt stack 0
  1550  000038                     _outPipes:
  1551                           	opt stack 0
  1552  000038                     	ds	8
  1553  000040                     _pBDTEntryIn:
  1554                           	opt stack 0
  1555  000040                     	ds	6
  1556  000046                     recebeByte@sizeData:
  1557                           	opt stack 0
  1558  000046                     	ds	2
  1559  000048                     recebeByte@tamanhoMensagem:
  1560                           	opt stack 0
  1561  000048                     	ds	2
  1562  00004A                     _CDCDataOutHandle:
  1563                           	opt stack 0
  1564  00004A                     	ds	2
  1565  00004C                     _pBDTEntryEP0OutNext:
  1566                           	opt stack 0
  1567  00004C                     	ds	2
  1568  00004E                     _pBDTEntryEP0OutCurrent:
  1569                           	opt stack 0
  1570  00004E                     	ds	2
  1571  000050                     recebeByte@escapeCaracter:
  1572                           	opt stack 0
  1573  000050                     	ds	1
  1574  000051                     _cdc_tx_len:
  1575                           	opt stack 0
  1576  000051                     	ds	1
  1577  000052                     _cdc_rx_len:
  1578                           	opt stack 0
  1579  000052                     	ds	1
  1580  000053                     _USBDeferStatusStagePacket:
  1581                           	opt stack 0
  1582  000053                     	ds	1
  1583  000054                     _USBStatusStageTimeoutCounter:
  1584                           	opt stack 0
  1585  000054                     	ds	1
  1586  000055                     _endpoint_number:
  1587                           	opt stack 0
  1588  000055                     	ds	1
  1589  000056                     _controlTransferState:
  1590                           	opt stack 0
  1591  000056                     	ds	1
  1592  000057                     _shortPacketStatus:
  1593                           	opt stack 0
  1594  000057                     	ds	1
  1595  000058                     _USBDeviceState:
  1596                           	opt stack 0
  1597  000058                     	ds	1
  1598  000059                     _novaMsgLoRaWan:
  1599                           	opt stack 0
  1600  000059                     	ds	1
  1601  00005A                     _tamFrame:
  1602                           	opt stack 0
  1603  00005A                     	ds	1
  1604  00005B                     _tamDadosRecebidos:
  1605                           	opt stack 0
  1606  00005B                     	ds	1
  1607  00005C                     _command:
  1608                           	opt stack 0
  1609  00005C                     	ds	1
  1610  00005D                     _USTATcopy:
  1611                           	opt stack 0
  1612  00005D                     	ds	1
  1613  00005E                     _USBActiveConfiguration:
  1614                           	opt stack 0
  1615  00005E                     	ds	1
  1616                           tblptru	equ	0xFF8
  1617                           tblptrh	equ	0xFF7
  1618                           tblptrl	equ	0xFF6
  1619                           tablat	equ	0xFF5
  1620                           postinc0	equ	0xFEE
  1621                           wreg	equ	0xFE8
  1622                           postdec1	equ	0xFE5
  1623                           fsr1l	equ	0xFE1
  1624                           
  1625                           	psect	bssBANK0
  1626  0000FA                     __pbssBANK0:
  1627                           	opt stack 0
  1628  0000FA                     _inPipes:
  1629                           	opt stack 0
  1630  0000FA                     	ds	6
  1631                           tblptru	equ	0xFF8
  1632                           tblptrh	equ	0xFF7
  1633                           tblptrl	equ	0xFF6
  1634                           tablat	equ	0xFF5
  1635                           postinc0	equ	0xFEE
  1636                           wreg	equ	0xFE8
  1637                           postdec1	equ	0xFE5
  1638                           fsr1l	equ	0xFE1
  1639                           
  1640                           	psect	bssBANK1
  1641  0001F9                     __pbssBANK1:
  1642                           	opt stack 0
  1643  0001F9                     _tamanhoCommand:
  1644                           	opt stack 0
  1645  0001F9                     	ds	2
  1646  0001FB                     _BothEP0OutUOWNsSet:
  1647                           	opt stack 0
  1648  0001FB                     	ds	1
  1649  0001FC                     _USBBusIsSuspended:
  1650                           	opt stack 0
  1651  0001FC                     	ds	1
  1652  0001FD                     _RemoteWakeup:
  1653                           	opt stack 0
  1654  0001FD                     	ds	1
  1655  0001FE                     _responseLoRaWan:
  1656                           	opt stack 0
  1657  0001FE                     	ds	1
  1658  0001FF                     _error_TX:
  1659                           	opt stack 0
  1660  0001FF                     	ds	1
  1661                           tblptru	equ	0xFF8
  1662                           tblptrh	equ	0xFF7
  1663                           tblptrl	equ	0xFF6
  1664                           tablat	equ	0xFF5
  1665                           postinc0	equ	0xFEE
  1666                           wreg	equ	0xFE8
  1667                           postdec1	equ	0xFE5
  1668                           fsr1l	equ	0xFE1
  1669                           
  1670                           	psect	bssBANK2
  1671  0002C8                     __pbssBANK2:
  1672                           	opt stack 0
  1673  0002C8                     _pBDTEntryOut:
  1674                           	opt stack 0
  1675  0002C8                     	ds	6
  1676  0002CE                     _USB1msTickCount:
  1677                           	opt stack 0
  1678  0002CE                     	ds	4
  1679  0002D2                     _ep_data_out:
  1680                           	opt stack 0
  1681  0002D2                     	ds	3
  1682  0002D5                     _ep_data_in:
  1683                           	opt stack 0
  1684  0002D5                     	ds	3
  1685  0002D8                     _CDCDataInHandle:
  1686                           	opt stack 0
  1687  0002D8                     	ds	2
  1688  0002DA                     _dig_4:
  1689                           	opt stack 0
  1690  0002DA                     	ds	2
  1691  0002DC                     _dig_3:
  1692                           	opt stack 0
  1693  0002DC                     	ds	2
  1694  0002DE                     _dig_2:
  1695                           	opt stack 0
  1696  0002DE                     	ds	2
  1697  0002E0                     _dig_1:
  1698                           	opt stack 0
  1699  0002E0                     	ds	2
  1700  0002E2                     _cs:
  1701                           	opt stack 0
  1702  0002E2                     	ds	1
  1703  0002E3                     recebeByte@checksumRecebimento:
  1704                           	opt stack 0
  1705  0002E3                     	ds	1
  1706  0002E4                     recebeByte@estadoRecepcao:
  1707                           	opt stack 0
  1708  0002E4                     	ds	1
  1709  0002E5                     _control_signal_bitmap:
  1710                           	opt stack 0
  1711  0002E5                     	ds	1
  1712  0002E6                     _cdc_mem_type:
  1713                           	opt stack 0
  1714  0002E6                     	ds	1
  1715  0002E7                     _cdc_trf_state:
  1716                           	opt stack 0
  1717  0002E7                     	ds	1
  1718  0002E8                     _USBTicksSinceSuspendEnd:
  1719                           	opt stack 0
  1720  0002E8                     	ds	1
  1721  0002E9                     _USBDeferOUTDataStagePackets:
  1722                           	opt stack 0
  1723  0002E9                     	ds	1
  1724  0002EA                     _USBDeferINDataStagePackets:
  1725                           	opt stack 0
  1726  0002EA                     	ds	1
  1727  0002EB                     _USBStatusStageEnabledFlag2:
  1728                           	opt stack 0
  1729  0002EB                     	ds	1
  1730  0002EC                     _USBStatusStageEnabledFlag1:
  1731                           	opt stack 0
  1732  0002EC                     	ds	1
  1733  0002ED                     _teste1:
  1734                           	opt stack 0
  1735  0002ED                     	ds	1
  1736  0002EE                     _teste0:
  1737                           	opt stack 0
  1738  0002EE                     	ds	1
  1739  0002EF                     _feedback2:
  1740                           	opt stack 0
  1741  0002EF                     	ds	1
  1742  0002F0                     _feedback1:
  1743                           	opt stack 0
  1744  0002F0                     	ds	1
  1745  0002F1                     _numPacote:
  1746                           	opt stack 0
  1747  0002F1                     	ds	1
  1748  0002F2                     _aaa:
  1749                           	opt stack 0
  1750  0002F2                     	ds	1
  1751  0002F3                     _encryptMode:
  1752                           	opt stack 0
  1753  0002F3                     	ds	1
  1754  0002F4                     _retries_sending:
  1755                           	opt stack 0
  1756  0002F4                     	ds	1
  1757  0002F5                     _discovery_status:
  1758                           	opt stack 0
  1759  0002F5                     	ds	1
  1760  0002F6                     _delivery_status:
  1761                           	opt stack 0
  1762  0002F6                     	ds	1
  1763  0002F7                     _channel:
  1764                           	opt stack 0
  1765  0002F7                     	ds	1
  1766  0002F8                     _error_RX:
  1767                           	opt stack 0
  1768  0002F8                     	ds	1
  1769  0002F9                     _protocol:
  1770                           	opt stack 0
  1771  0002F9                     	ds	1
  1772  0002FA                     _error_AT:
  1773                           	opt stack 0
  1774  0002FA                     	ds	1
  1775  0002FB                     __preambleID:
  1776                           	opt stack 0
  1777  0002FB                     	ds	1
  1778  0002FC                     _USBAlternateInterface:
  1779                           	opt stack 0
  1780  0002FC                     	ds	2
  1781                           tblptru	equ	0xFF8
  1782                           tblptrh	equ	0xFF7
  1783                           tblptrl	equ	0xFF6
  1784                           tablat	equ	0xFF5
  1785                           postinc0	equ	0xFEE
  1786                           wreg	equ	0xFE8
  1787                           postdec1	equ	0xFE5
  1788                           fsr1l	equ	0xFE1
  1789                           
  1790                           	psect	dataBANK2
  1791  0002FE                     __pdataBANK2:
  1792                           	opt stack 0
  1793  0002FE                     __send_retries:
  1794                           	opt stack 0
  1795  0002FE                     	ds	1
  1796                           tblptru	equ	0xFF8
  1797                           tblptrh	equ	0xFF7
  1798                           tblptrl	equ	0xFF6
  1799                           tablat	equ	0xFF5
  1800                           postinc0	equ	0xFEE
  1801                           wreg	equ	0xFE8
  1802                           postdec1	equ	0xFE5
  1803                           fsr1l	equ	0xFE1
  1804                           
  1805                           	psect	bssBANK3
  1806  000300                     __pbssBANK3:
  1807                           	opt stack 0
  1808  000300                     _dadosRecebidos:
  1809                           	opt stack 0
  1810  000300                     	ds	20
  1811  000314                     _cdc_notice:
  1812                           	opt stack 0
  1813  000314                     	ds	10
  1814  00031E                     __channelMask:
  1815                           	opt stack 0
  1816  00031E                     	ds	8
  1817  000326                     _BaudRateGen:
  1818                           	opt stack 0
  1819  000326                     	ds	4
  1820  00032A                     _ticks:
  1821                           	opt stack 0
  1822  00032A                     	ds	4
  1823  00032E                     _freqPulses4:
  1824                           	opt stack 0
  1825  00032E                     	ds	4
  1826  000332                     _freqPulses3:
  1827                           	opt stack 0
  1828  000332                     	ds	4
  1829  000336                     _freqPulses2:
  1830                           	opt stack 0
  1831  000336                     	ds	4
  1832  00033A                     _freqPulses1:
  1833                           	opt stack 0
  1834  00033A                     	ds	4
  1835  00033E                     _sourceMacHigh:
  1836                           	opt stack 0
  1837  00033E                     	ds	4
  1838  000342                     _sourceMacLow:
  1839                           	opt stack 0
  1840  000342                     	ds	4
  1841  000346                     _pCDCDst:
  1842                           	opt stack 0
  1843  000346                     	ds	3
  1844  000349                     _pCDCSrc:
  1845                           	opt stack 0
  1846  000349                     	ds	3
  1847  00034C                     _pDst:
  1848                           	opt stack 0
  1849  00034C                     	ds	2
  1850  00034E                     _PAN_ID:
  1851                           	opt stack 0
  1852  00034E                     	ds	2
  1853  000350                     _response:
  1854                           	opt stack 0
  1855  000350                     	ds	100
  1856  0003B4                     _dummy_encapsulated_cmd_response:
  1857                           	opt stack 0
  1858  0003B4                     	ds	8
  1859  0003BC                     _line_coding:
  1860                           	opt stack 0
  1861  0003BC                     	ds	7
  1862                           tblptru	equ	0xFF8
  1863                           tblptrh	equ	0xFF7
  1864                           tblptrl	equ	0xFF6
  1865                           tablat	equ	0xFF5
  1866                           postinc0	equ	0xFEE
  1867                           wreg	equ	0xFE8
  1868                           postdec1	equ	0xFE5
  1869                           fsr1l	equ	0xFE1
  1870                           
  1871                           	psect	dataBANK3
  1872  0003C3                     __pdataBANK3:
  1873                           	opt stack 0
  1874  0003C3                     _MSG_LORAWAN:
  1875                           	opt stack 0
  1876  0003C3                     	ds	30
  1877                           tblptru	equ	0xFF8
  1878                           tblptrh	equ	0xFF7
  1879                           tblptrl	equ	0xFF6
  1880                           tablat	equ	0xFF5
  1881                           postinc0	equ	0xFEE
  1882                           wreg	equ	0xFE8
  1883                           postdec1	equ	0xFE5
  1884                           fsr1l	equ	0xFE1
  1885                           
  1886                           	psect	bssBANK4
  1887  000440                     __pbssBANK4:
  1888                           	opt stack 0
  1889  000440                     recebeByteLoRaWan@frameData:
  1890                           	opt stack 0
  1891  000440                     	ds	100
  1892                           tblptru	equ	0xFF8
  1893                           tblptrh	equ	0xFF7
  1894                           tblptrl	equ	0xFF6
  1895                           tablat	equ	0xFF5
  1896                           postinc0	equ	0xFEE
  1897                           wreg	equ	0xFE8
  1898                           postdec1	equ	0xFE5
  1899                           fsr1l	equ	0xFE1
  1900                           
  1901                           	psect	bssBANK5
  1902  000580                     __pbssBANK5:
  1903                           	opt stack 0
  1904  000580                     _receivePacket:
  1905                           	opt stack 0
  1906  000580                     	ds	100
  1907                           tblptru	equ	0xFF8
  1908                           tblptrh	equ	0xFF7
  1909                           tblptrl	equ	0xFF6
  1910                           tablat	equ	0xFF5
  1911                           postinc0	equ	0xFEE
  1912                           wreg	equ	0xFE8
  1913                           postdec1	equ	0xFE5
  1914                           fsr1l	equ	0xFE1
  1915                           
  1916                           	psect	bssBANK6
  1917  000600                     __pbssBANK6:
  1918                           	opt stack 0
  1919  000600                     _data:
  1920                           	opt stack 0
  1921  000600                     	ds	100
  1922  000664                     recebeByte@frameData:
  1923                           	opt stack 0
  1924  000664                     	ds	100
  1925                           tblptru	equ	0xFF8
  1926                           tblptrh	equ	0xFF7
  1927                           tblptrl	equ	0xFF6
  1928                           tablat	equ	0xFF5
  1929                           postinc0	equ	0xFEE
  1930                           wreg	equ	0xFE8
  1931                           postdec1	equ	0xFE5
  1932                           fsr1l	equ	0xFE1
  1933                           
  1934                           	psect	bssBANK7
  1935  000700                     __pbssBANK7:
  1936                           	opt stack 0
  1937  000700                     _frameBuffer:
  1938                           	opt stack 0
  1939  000700                     	ds	200
  1940                           tblptru	equ	0xFF8
  1941                           tblptrh	equ	0xFF7
  1942                           tblptrl	equ	0xFF6
  1943                           tablat	equ	0xFF5
  1944                           postinc0	equ	0xFEE
  1945                           wreg	equ	0xFE8
  1946                           postdec1	equ	0xFE5
  1947                           fsr1l	equ	0xFE1
  1948                           
  1949                           	psect	cstackBANK2
  1950  000200                     __pcstackBANK2:
  1951                           	opt stack 0
  1952  000200                     main@data:
  1953                           	opt stack 0
  1954                           
  1955                           ; 150 bytes @ 0x0
  1956  000200                     	ds	150
  1957  000296                     main@tempo:
  1958                           	opt stack 0
  1959                           
  1960                           ; 4 bytes @ 0x96
  1961  000296                     	ds	4
  1962  00029A                     main@tempoTimeOut:
  1963                           	opt stack 0
  1964                           
  1965                           ; 4 bytes @ 0x9A
  1966  00029A                     	ds	4
  1967  00029E                     main@Icanal:
  1968                           	opt stack 0
  1969                           
  1970                           ; 1 bytes @ 0x9E
  1971  00029E                     	ds	1
  1972  00029F                     main@sf:
  1973                           	opt stack 0
  1974                           
  1975                           ; 1 bytes @ 0x9F
  1976  00029F                     	ds	1
  1977  0002A0                     main@resp:
  1978                           	opt stack 0
  1979                           
  1980                           ; 1 bytes @ 0xA0
  1981  0002A0                     	ds	1
  1982  0002A1                     main@contador:
  1983                           	opt stack 0
  1984                           
  1985                           ; 1 bytes @ 0xA1
  1986  0002A1                     	ds	1
  1987  0002A2                     main@deltaTempo:
  1988                           	opt stack 0
  1989                           
  1990                           ; 4 bytes @ 0xA2
  1991  0002A2                     	ds	4
  1992  0002A6                     _main$5820:
  1993                           	opt stack 0
  1994                           
  1995                           ; 3 bytes @ 0xA6
  1996  0002A6                     	ds	3
  1997  0002A9                     main@i:
  1998                           	opt stack 0
  1999                           
  2000                           ; 2 bytes @ 0xA9
  2001  0002A9                     	ds	2
  2002  0002AB                     main@Fcanal:
  2003                           	opt stack 0
  2004                           
  2005                           ; 1 bytes @ 0xAB
  2006  0002AB                     	ds	1
  2007  0002AC                     main@i_3303:
  2008                           	opt stack 0
  2009                           
  2010                           ; 1 bytes @ 0xAC
  2011  0002AC                     	ds	1
  2012  0002AD                     main@i_3304:
  2013                           	opt stack 0
  2014                           
  2015                           ; 1 bytes @ 0xAD
  2016  0002AD                     	ds	1
  2017  0002AE                     main@dr:
  2018                           	opt stack 0
  2019                           
  2020                           ; 1 bytes @ 0xAE
  2021  0002AE                     	ds	1
  2022  0002AF                     main@pisca:
  2023                           	opt stack 0
  2024                           
  2025                           ; 1 bytes @ 0xAF
  2026  0002AF                     	ds	1
  2027  0002B0                     main@i_3271:
  2028                           	opt stack 0
  2029                           
  2030                           ; 1 bytes @ 0xB0
  2031  0002B0                     	ds	1
  2032  0002B1                     main@i_3272:
  2033                           	opt stack 0
  2034                           
  2035                           ; 1 bytes @ 0xB1
  2036  0002B1                     	ds	1
  2037  0002B2                     main@dadoPoco:
  2038                           	opt stack 0
  2039                           
  2040                           ; 22 bytes @ 0xB2
  2041  0002B2                     	ds	22
  2042                           tblptru	equ	0xFF8
  2043                           tblptrh	equ	0xFF7
  2044                           tblptrl	equ	0xFF6
  2045                           tablat	equ	0xFF5
  2046                           postinc0	equ	0xFEE
  2047                           wreg	equ	0xFE8
  2048                           postdec1	equ	0xFE5
  2049                           fsr1l	equ	0xFE1
  2050                           
  2051                           	psect	cstackBANK1
  2052  000100                     __pcstackBANK1:
  2053                           	opt stack 0
  2054  000100                     _sprintf$5825:
  2055                           	opt stack 0
  2056                           
  2057                           ; 3 bytes @ 0x0
  2058  000100                     	ds	3
  2059  000103                     _sprintf$5031:
  2060                           	opt stack 0
  2061                           
  2062                           ; 2 bytes @ 0x3
  2063  000103                     	ds	2
  2064  000105                     sprintf@idx:
  2065                           	opt stack 0
  2066                           
  2067                           ; 1 bytes @ 0x5
  2068  000105                     	ds	1
  2069  000106                     sprintf@cp:
  2070                           	opt stack 0
  2071                           
  2072                           ; 2 bytes @ 0x6
  2073  000106                     	ds	2
  2074  000108                     sprintf@len:
  2075                           	opt stack 0
  2076                           
  2077                           ; 2 bytes @ 0x8
  2078  000108                     	ds	2
  2079  00010A                     sprintf@ap:
  2080                           	opt stack 0
  2081                           
  2082                           ; 2 bytes @ 0xA
  2083  00010A                     	ds	2
  2084  00010C                     sprintf@tmpval:
  2085                           	opt stack 0
  2086                           
  2087                           ; 4 bytes @ 0xC
  2088  00010C                     	ds	4
  2089  000110                     sprintf@exp:
  2090                           	opt stack 0
  2091                           
  2092                           ; 2 bytes @ 0x10
  2093  000110                     	ds	2
  2094  000112                     sprintf@val:
  2095                           	opt stack 0
  2096                           
  2097                           ; 4 bytes @ 0x12
  2098  000112                     	ds	4
  2099  000116                     sprintf@fval:
  2100                           	opt stack 0
  2101                           
  2102                           ; 3 bytes @ 0x16
  2103  000116                     	ds	3
  2104  000119                     sprintf@width:
  2105                           	opt stack 0
  2106                           
  2107                           ; 2 bytes @ 0x19
  2108  000119                     	ds	2
  2109  00011B                     sprintf@flag:
  2110                           	opt stack 0
  2111                           
  2112                           ; 2 bytes @ 0x1B
  2113  00011B                     	ds	2
  2114  00011D                     sprintf@prec:
  2115                           	opt stack 0
  2116                           
  2117                           ; 2 bytes @ 0x1D
  2118  00011D                     	ds	2
  2119  00011F                     sprintf@c:
  2120                           	opt stack 0
  2121                           
  2122                           ; 1 bytes @ 0x1F
  2123  00011F                     	ds	1
  2124  000120                     SetDevEUI@comando:
  2125                           	opt stack 0
  2126  000120                     SetAppEUI@comando:
  2127                           	opt stack 0
  2128  000120                     SetAppKey@comando:
  2129                           	opt stack 0
  2130  000120                     SetChannelLoRaWan@comando:
  2131                           	opt stack 0
  2132  000120                     SetAdr@comando:
  2133                           	opt stack 0
  2134  000120                     MacSave@comando:
  2135                           	opt stack 0
  2136  000120                     SetSpreadingFactor@comando:
  2137                           	opt stack 0
  2138  000120                     SetBandWidth@comando:
  2139                           	opt stack 0
  2140  000120                     DataRate@comando:
  2141                           	opt stack 0
  2142  000120                     TxLoRaWan@comando:
  2143                           	opt stack 0
  2144                           
  2145                           ; 200 bytes @ 0x20
  2146  000120                     	ds	200
  2147  0001E8                     SetDevEUI@status:
  2148                           	opt stack 0
  2149  0001E8                     SetAppEUI@status:
  2150                           	opt stack 0
  2151  0001E8                     SetAppKey@status:
  2152                           	opt stack 0
  2153  0001E8                     SetChannelLoRaWan@status:
  2154                           	opt stack 0
  2155  0001E8                     SetAdr@status:
  2156                           	opt stack 0
  2157  0001E8                     MacSave@status:
  2158                           	opt stack 0
  2159  0001E8                     SetSpreadingFactor@status:
  2160                           	opt stack 0
  2161  0001E8                     TxLoRaWan@conf:
  2162                           	opt stack 0
  2163  0001E8                     SetBandWidth@status:
  2164                           	opt stack 0
  2165  0001E8                     DataRate@status:
  2166                           	opt stack 0
  2167                           
  2168                           ; 2 bytes @ 0xE8
  2169  0001E8                     	ds	1
  2170  0001E9                     SetChannelLoRaWan@canal:
  2171                           	opt stack 0
  2172  0001E9                     SetSpreadingFactor@sf:
  2173                           	opt stack 0
  2174  0001E9                     TxLoRaWan@status:
  2175                           	opt stack 0
  2176                           
  2177                           ; 1 bytes @ 0xE9
  2178  0001E9                     	ds	1
  2179  0001EA                     TxLoRaWan@hex:
  2180                           	opt stack 0
  2181                           
  2182                           ; 4 bytes @ 0xEA
  2183  0001EA                     	ds	4
  2184  0001EE                     TxLoRaWan@i:
  2185                           	opt stack 0
  2186                           
  2187                           ; 1 bytes @ 0xEE
  2188  0001EE                     	ds	1
  2189  0001EF                     ??_main:
  2190                           
  2191                           ; 1 bytes @ 0xEF
  2192  0001EF                     	ds	10
  2193                           tblptru	equ	0xFF8
  2194                           tblptrh	equ	0xFF7
  2195                           tblptrl	equ	0xFF6
  2196                           tablat	equ	0xFF5
  2197                           postinc0	equ	0xFEE
  2198                           wreg	equ	0xFE8
  2199                           postdec1	equ	0xFE5
  2200                           fsr1l	equ	0xFE1
  2201                           
  2202                           	psect	cstackBANK0
  2203  000060                     __pcstackBANK0:
  2204                           	opt stack 0
  2205  000060                     ??_setup_pulsos:
  2206  000060                     ??_isdigit:
  2207  000060                     ?_USBTransferOnePacket:
  2208                           	opt stack 0
  2209  000060                     ?_strlen:
  2210                           	opt stack 0
  2211  000060                     ?___awmod:
  2212                           	opt stack 0
  2213  000060                     ?___ftpack:
  2214                           	opt stack 0
  2215  000060                     ?___ftneg:
  2216                           	opt stack 0
  2217  000060                     ?_millis:
  2218                           	opt stack 0
  2219  000060                     ?__tdiv_to_l_:
  2220                           	opt stack 0
  2221  000060                     ?__div_to_l_:
  2222                           	opt stack 0
  2223  000060                     ?___lldiv:
  2224                           	opt stack 0
  2225  000060                     USBTransferOnePacket@dir:
  2226                           	opt stack 0
  2227  000060                     putch@data:
  2228                           	opt stack 0
  2229  000060                     retornaDado@dadoBit:
  2230                           	opt stack 0
  2231  000060                     putsUSBUSART@data:
  2232                           	opt stack 0
  2233  000060                     ___awmod@dividend:
  2234                           	opt stack 0
  2235  000060                     memset@p1:
  2236                           	opt stack 0
  2237  000060                     strcat@to:
  2238                           	opt stack 0
  2239  000060                     strlen@s:
  2240                           	opt stack 0
  2241  000060                     __div_to_l_@f1:
  2242                           	opt stack 0
  2243  000060                     ___ftpack@arg:
  2244                           	opt stack 0
  2245  000060                     __tdiv_to_l_@f1:
  2246                           	opt stack 0
  2247  000060                     ___ftge@ff1:
  2248                           	opt stack 0
  2249  000060                     ___ftneg@f1:
  2250                           	opt stack 0
  2251  000060                     ___lldiv@dividend:
  2252                           	opt stack 0
  2253                           
  2254                           ; 4 bytes @ 0x0
  2255  000060                     	ds	1
  2256  000061                     ??_retornaDado:
  2257  000061                     _isdigit$5257:
  2258                           	opt stack 0
  2259  000061                     USBTransferOnePacket@data:
  2260                           	opt stack 0
  2261                           
  2262                           ; 2 bytes @ 0x1
  2263  000061                     	ds	1
  2264  000062                     ??_strlen:
  2265  000062                     isdigit@c:
  2266                           	opt stack 0
  2267  000062                     putsUSBUSART@pData:
  2268                           	opt stack 0
  2269  000062                     ___awmod@divisor:
  2270                           	opt stack 0
  2271  000062                     memset@c:
  2272                           	opt stack 0
  2273  000062                     strcat@from:
  2274                           	opt stack 0
  2275                           
  2276                           ; 2 bytes @ 0x2
  2277  000062                     	ds	1
  2278  000063                     USBTransferOnePacket@len:
  2279                           	opt stack 0
  2280  000063                     retornaDado@selectDado:
  2281                           	opt stack 0
  2282  000063                     ___ftpack@exp:
  2283                           	opt stack 0
  2284  000063                     __div_to_l_@f2:
  2285                           	opt stack 0
  2286  000063                     __tdiv_to_l_@f2:
  2287                           	opt stack 0
  2288  000063                     ___ftge@ff2:
  2289                           	opt stack 0
  2290                           
  2291                           ; 3 bytes @ 0x3
  2292  000063                     	ds	1
  2293  000064                     ??_USBTransferOnePacket:
  2294  000064                     putsUSBUSART@len:
  2295                           	opt stack 0
  2296  000064                     retornaDado@dadoByte:
  2297                           	opt stack 0
  2298  000064                     ___awmod@counter:
  2299                           	opt stack 0
  2300  000064                     ___ftpack@sign:
  2301                           	opt stack 0
  2302  000064                     memset@n:
  2303                           	opt stack 0
  2304  000064                     strcat@cp:
  2305                           	opt stack 0
  2306  000064                     strlen@cp:
  2307                           	opt stack 0
  2308  000064                     millis@m:
  2309                           	opt stack 0
  2310  000064                     ___lldiv@divisor:
  2311                           	opt stack 0
  2312                           
  2313                           ; 4 bytes @ 0x4
  2314  000064                     	ds	1
  2315  000065                     ??___ftpack:
  2316  000065                     ??_FeedBack:
  2317  000065                     ?_le_pulsos:
  2318                           	opt stack 0
  2319  000065                     le_pulsos@modo:
  2320                           	opt stack 0
  2321  000065                     ___awmod@sign:
  2322                           	opt stack 0
  2323                           
  2324                           ; 1 bytes @ 0x5
  2325  000065                     	ds	1
  2326  000066                     ??__tdiv_to_l_:
  2327  000066                     ??___ftge:
  2328  000066                     ?___awdiv:
  2329                           	opt stack 0
  2330  000066                     ___awdiv@dividend:
  2331                           	opt stack 0
  2332  000066                     memset@p:
  2333                           	opt stack 0
  2334  000066                     __div_to_l_@quot:
  2335                           	opt stack 0
  2336                           
  2337                           ; 4 bytes @ 0x6
  2338  000066                     	ds	2
  2339  000068                     ??_parseLoRaWan:
  2340  000068                     ?___awtoft:
  2341                           	opt stack 0
  2342  000068                     ?___lltoft:
  2343                           	opt stack 0
  2344  000068                     USBDeviceInit@i:
  2345                           	opt stack 0
  2346  000068                     USBTransferOnePacket@ep:
  2347                           	opt stack 0
  2348  000068                     ___awdiv@divisor:
  2349                           	opt stack 0
  2350  000068                     ___awtoft@c:
  2351                           	opt stack 0
  2352  000068                     ___lldiv@quotient:
  2353                           	opt stack 0
  2354  000068                     ___lltoft@c:
  2355                           	opt stack 0
  2356                           
  2357                           ; 4 bytes @ 0x8
  2358  000068                     	ds	1
  2359  000069                     le_pulsos@freqPulses:
  2360                           	opt stack 0
  2361  000069                     USBTransferOnePacket@handle:
  2362                           	opt stack 0
  2363  000069                     __tdiv_to_l_@quot:
  2364                           	opt stack 0
  2365                           
  2366                           ; 4 bytes @ 0x9
  2367  000069                     	ds	1
  2368  00006A                     ___awdiv@counter:
  2369                           	opt stack 0
  2370  00006A                     __div_to_l_@cntr:
  2371                           	opt stack 0
  2372  00006A                     le_pulsos@freq:
  2373                           	opt stack 0
  2374                           
  2375                           ; 4 bytes @ 0xA
  2376  00006A                     	ds	1
  2377  00006B                     CDCTxService@i:
  2378                           	opt stack 0
  2379  00006B                     ___awdiv@sign:
  2380                           	opt stack 0
  2381  00006B                     ___awtoft@sign:
  2382                           	opt stack 0
  2383  00006B                     __div_to_l_@exp1:
  2384                           	opt stack 0
  2385                           
  2386                           ; 1 bytes @ 0xB
  2387  00006B                     	ds	1
  2388  00006C                     ??___lltoft:
  2389  00006C                     CDCTxService@byte_to_send:
  2390                           	opt stack 0
  2391  00006C                     ___lldiv@counter:
  2392                           	opt stack 0
  2393  00006C                     ___awdiv@quotient:
  2394                           	opt stack 0
  2395                           
  2396                           ; 2 bytes @ 0xC
  2397  00006C                     	ds	1
  2398  00006D                     ?___llmod:
  2399                           	opt stack 0
  2400  00006D                     __tdiv_to_l_@cntr:
  2401                           	opt stack 0
  2402  00006D                     delay@time:
  2403                           	opt stack 0
  2404  00006D                     setup_uart@baudRate:
  2405                           	opt stack 0
  2406  00006D                     ___llmod@dividend:
  2407                           	opt stack 0
  2408                           
  2409                           ; 4 bytes @ 0xD
  2410  00006D                     	ds	1
  2411  00006E                     ?___wmul:
  2412                           	opt stack 0
  2413  00006E                     __tdiv_to_l_@exp1:
  2414                           	opt stack 0
  2415  00006E                     ___wmul@multiplier:
  2416                           	opt stack 0
  2417                           
  2418                           ; 2 bytes @ 0xE
  2419  00006E                     	ds	2
  2420  000070                     ___lltoft@exp:
  2421                           	opt stack 0
  2422  000070                     ___wmul@multiplicand:
  2423                           	opt stack 0
  2424                           
  2425                           ; 2 bytes @ 0x10
  2426  000070                     	ds	1
  2427  000071                     ??_delay:
  2428  000071                     setup_uart@brg:
  2429                           	opt stack 0
  2430  000071                     ___llmod@divisor:
  2431                           	opt stack 0
  2432                           
  2433                           ; 4 bytes @ 0x11
  2434  000071                     	ds	1
  2435  000072                     ___wmul@product:
  2436                           	opt stack 0
  2437                           
  2438                           ; 2 bytes @ 0x12
  2439  000072                     	ds	2
  2440  000074                     ?___ftadd:
  2441                           	opt stack 0
  2442  000074                     ___ftadd@f1:
  2443                           	opt stack 0
  2444  000074                     parseLoRaWan@previous:
  2445                           	opt stack 0
  2446                           
  2447                           ; 4 bytes @ 0x14
  2448  000074                     	ds	1
  2449  000075                     ___llmod@counter:
  2450                           	opt stack 0
  2451                           
  2452                           ; 1 bytes @ 0x15
  2453  000075                     	ds	2
  2454  000077                     ___ftadd@f2:
  2455                           	opt stack 0
  2456                           
  2457                           ; 3 bytes @ 0x17
  2458  000077                     	ds	1
  2459  000078                     parseLoRaWan@intervalMAX:
  2460                           	opt stack 0
  2461                           
  2462                           ; 2 bytes @ 0x18
  2463  000078                     	ds	1
  2464  000079                     delay@to:
  2465                           	opt stack 0
  2466                           
  2467                           ; 4 bytes @ 0x19
  2468  000079                     	ds	1
  2469  00007A                     ??___ftadd:
  2470  00007A                     parseLoRaWan@status:
  2471                           	opt stack 0
  2472                           
  2473                           ; 1 bytes @ 0x1A
  2474  00007A                     	ds	1
  2475  00007B                     parseLoRaWan@timeout:
  2476                           	opt stack 0
  2477                           
  2478                           ; 1 bytes @ 0x1B
  2479  00007B                     	ds	1
  2480  00007C                     enviaComando@cmd:
  2481                           	opt stack 0
  2482                           
  2483                           ; 2 bytes @ 0x1C
  2484  00007C                     	ds	1
  2485  00007D                     ___ftadd@sign:
  2486                           	opt stack 0
  2487                           
  2488                           ; 1 bytes @ 0x1D
  2489  00007D                     	ds	1
  2490  00007E                     enviaComando@tipoComando:
  2491                           	opt stack 0
  2492  00007E                     ___ftadd@exp2:
  2493                           	opt stack 0
  2494                           
  2495                           ; 1 bytes @ 0x1E
  2496  00007E                     	ds	1
  2497  00007F                     ??_enviaComando:
  2498  00007F                     ___ftadd@exp1:
  2499                           	opt stack 0
  2500                           
  2501                           ; 1 bytes @ 0x1F
  2502  00007F                     	ds	1
  2503  000080                     ?___ftmul:
  2504                           	opt stack 0
  2505  000080                     ?___ftsub:
  2506                           	opt stack 0
  2507  000080                     ___ftmul@f1:
  2508                           	opt stack 0
  2509  000080                     ___ftsub@f1:
  2510                           	opt stack 0
  2511                           
  2512                           ; 3 bytes @ 0x20
  2513  000080                     	ds	1
  2514  000081                     enviaComando@i:
  2515                           	opt stack 0
  2516                           
  2517                           ; 2 bytes @ 0x21
  2518  000081                     	ds	2
  2519  000083                     enviaComando@i_4788:
  2520                           	opt stack 0
  2521  000083                     ___ftmul@f2:
  2522                           	opt stack 0
  2523  000083                     ___ftsub@f2:
  2524                           	opt stack 0
  2525                           
  2526                           ; 3 bytes @ 0x23
  2527  000083                     	ds	2
  2528  000085                     enviaComando@i_4789:
  2529                           	opt stack 0
  2530                           
  2531                           ; 2 bytes @ 0x25
  2532  000085                     	ds	1
  2533  000086                     ??___ftmul:
  2534  000086                     
  2535                           ; 1 bytes @ 0x26
  2536  000086                     	ds	1
  2537  000087                     ResetModuloLoRaWan@status:
  2538                           	opt stack 0
  2539  000087                     JoinLoRaWan@status:
  2540                           	opt stack 0
  2541                           
  2542                           ; 1 bytes @ 0x27
  2543  000087                     	ds	2
  2544  000089                     ___ftmul@exp:
  2545                           	opt stack 0
  2546                           
  2547                           ; 1 bytes @ 0x29
  2548  000089                     	ds	1
  2549  00008A                     ___ftmul@f3_as_product:
  2550                           	opt stack 0
  2551                           
  2552                           ; 3 bytes @ 0x2A
  2553  00008A                     	ds	3
  2554  00008D                     ___ftmul@cntr:
  2555                           	opt stack 0
  2556                           
  2557                           ; 1 bytes @ 0x2D
  2558  00008D                     	ds	1
  2559  00008E                     ___ftmul@sign:
  2560                           	opt stack 0
  2561                           
  2562                           ; 1 bytes @ 0x2E
  2563  00008E                     	ds	1
  2564  00008F                     ?___ftdiv:
  2565                           	opt stack 0
  2566  00008F                     ?_fround:
  2567                           	opt stack 0
  2568  00008F                     ?_scale:
  2569                           	opt stack 0
  2570  00008F                     ___ftdiv@f1:
  2571                           	opt stack 0
  2572                           
  2573                           ; 3 bytes @ 0x2F
  2574  00008F                     	ds	3
  2575  000092                     ___ftdiv@f2:
  2576                           	opt stack 0
  2577  000092                     _fround$5823:
  2578                           	opt stack 0
  2579  000092                     _scale$5824:
  2580                           	opt stack 0
  2581                           
  2582                           ; 3 bytes @ 0x32
  2583  000092                     	ds	3
  2584  000095                     ??___ftdiv:
  2585  000095                     scale@scl:
  2586                           	opt stack 0
  2587  000095                     _fround$5822:
  2588                           	opt stack 0
  2589                           
  2590                           ; 3 bytes @ 0x35
  2591  000095                     	ds	3
  2592  000098                     fround@prec:
  2593                           	opt stack 0
  2594  000098                     ___ftdiv@cntr:
  2595                           	opt stack 0
  2596                           
  2597                           ; 1 bytes @ 0x38
  2598  000098                     	ds	1
  2599  000099                     ___ftdiv@f3:
  2600                           	opt stack 0
  2601                           
  2602                           ; 3 bytes @ 0x39
  2603  000099                     	ds	3
  2604  00009C                     ___ftdiv@exp:
  2605                           	opt stack 0
  2606                           
  2607                           ; 1 bytes @ 0x3C
  2608  00009C                     	ds	1
  2609  00009D                     ___ftdiv@sign:
  2610                           	opt stack 0
  2611                           
  2612                           ; 1 bytes @ 0x3D
  2613  00009D                     	ds	1
  2614  00009E                     ?_le_AD:
  2615                           	opt stack 0
  2616                           
  2617                           ; 3 bytes @ 0x3E
  2618  00009E                     	ds	3
  2619  0000A1                     ??_le_AD:
  2620                           
  2621                           ; 1 bytes @ 0x41
  2622  0000A1                     	ds	2
  2623  0000A3                     _le_AD$5821:
  2624                           	opt stack 0
  2625                           
  2626                           ; 3 bytes @ 0x43
  2627  0000A3                     	ds	3
  2628  0000A6                     le_AD@corrente:
  2629                           	opt stack 0
  2630                           
  2631                           ; 3 bytes @ 0x46
  2632  0000A6                     	ds	3
  2633  0000A9                     le_AD@AnalogPort:
  2634                           	opt stack 0
  2635                           
  2636                           ; 1 bytes @ 0x49
  2637  0000A9                     	ds	1
  2638  0000AA                     le_AD@leituraAux:
  2639                           	opt stack 0
  2640                           
  2641                           ; 2 bytes @ 0x4A
  2642  0000AA                     	ds	2
  2643  0000AC                     le_AD@i:
  2644                           	opt stack 0
  2645                           
  2646                           ; 2 bytes @ 0x4C
  2647  0000AC                     	ds	2
  2648  0000AE                     le_AD@leitura:
  2649                           	opt stack 0
  2650                           
  2651                           ; 2 bytes @ 0x4E
  2652  0000AE                     	ds	2
  2653  0000B0                     ?___fttol:
  2654                           	opt stack 0
  2655  0000B0                     ___fttol@f1:
  2656                           	opt stack 0
  2657                           
  2658                           ; 3 bytes @ 0x50
  2659  0000B0                     	ds	4
  2660  0000B4                     ??___fttol:
  2661                           
  2662                           ; 1 bytes @ 0x54
  2663  0000B4                     	ds	5
  2664  0000B9                     ___fttol@sign1:
  2665                           	opt stack 0
  2666                           
  2667                           ; 1 bytes @ 0x59
  2668  0000B9                     	ds	1
  2669  0000BA                     ___fttol@lval:
  2670                           	opt stack 0
  2671                           
  2672                           ; 4 bytes @ 0x5A
  2673  0000BA                     	ds	4
  2674  0000BE                     ___fttol@exp1:
  2675                           	opt stack 0
  2676                           
  2677                           ; 1 bytes @ 0x5E
  2678  0000BE                     	ds	1
  2679  0000BF                     ?_sprintf:
  2680                           	opt stack 0
  2681  0000BF                     sprintf@sp:
  2682                           	opt stack 0
  2683                           
  2684                           ; 2 bytes @ 0x5F
  2685  0000BF                     	ds	2
  2686  0000C1                     sprintf@f:
  2687                           	opt stack 0
  2688                           
  2689                           ; 2 bytes @ 0x61
  2690  0000C1                     	ds	46
  2691  0000EF                     ??_sprintf:
  2692                           
  2693                           ; 1 bytes @ 0x8F
  2694  0000EF                     	ds	6
  2695  0000F5                     SetChannelLoRaWan@ligado:
  2696                           	opt stack 0
  2697  0000F5                     TxLoRaWan@porta:
  2698                           	opt stack 0
  2699  0000F5                     SetAdr@state:
  2700                           	opt stack 0
  2701  0000F5                     SetBandWidth@bw:
  2702                           	opt stack 0
  2703  0000F5                     DataRate@dr:
  2704                           	opt stack 0
  2705                           
  2706                           ; 2 bytes @ 0x95
  2707  0000F5                     	ds	1
  2708  0000F6                     TxLoRaWan@data:
  2709                           	opt stack 0
  2710                           
  2711                           ; 2 bytes @ 0x96
  2712  0000F6                     	ds	1
  2713  0000F7                     ??_DataRate:
  2714  0000F7                     ??_SetBandWidth:
  2715                           
  2716                           ; 1 bytes @ 0x97
  2717  0000F7                     	ds	1
  2718  0000F8                     TxLoRaWan@tamData:
  2719                           	opt stack 0
  2720                           
  2721                           ; 1 bytes @ 0x98
  2722  0000F8                     	ds	1
  2723  0000F9                     ??_TxLoRaWan:
  2724                           
  2725                           ; 1 bytes @ 0x99
  2726  0000F9                     	ds	1
  2727                           tblptru	equ	0xFF8
  2728                           tblptrh	equ	0xFF7
  2729                           tblptrl	equ	0xFF6
  2730                           tablat	equ	0xFF5
  2731                           postinc0	equ	0xFEE
  2732                           wreg	equ	0xFE8
  2733                           postdec1	equ	0xFE5
  2734                           fsr1l	equ	0xFE1
  2735                           
  2736                           	psect	cstackCOMRAM
  2737  000001                     __pcstackCOMRAM:
  2738                           	opt stack 0
  2739  000001                     ??_getch:
  2740  000001                     ??_USBStdGetDscHandler:
  2741  000001                     ??_USBStdGetStatusHandler:
  2742  000001                     ?_strcmp:
  2743                           	opt stack 0
  2744  000001                     ?_strncmp:
  2745                           	opt stack 0
  2746  000001                     ?i2_USBTransferOnePacket:
  2747                           	opt stack 0
  2748  000001                     ?i2_strlen:
  2749                           	opt stack 0
  2750  000001                     USBConfigureEndpoint@direction:
  2751                           	opt stack 0
  2752  000001                     USBCtrlTrfTxService@byteToSend:
  2753                           	opt stack 0
  2754  000001                     USBCtrlTrfRxService@i:
  2755                           	opt stack 0
  2756  000001                     toupper@c:
  2757                           	opt stack 0
  2758  000001                     i2USBTransferOnePacket@dir:
  2759                           	opt stack 0
  2760  000001                     memcpy@d1:
  2761                           	opt stack 0
  2762  000001                     strcmp@s1:
  2763                           	opt stack 0
  2764  000001                     strcpy@to:
  2765                           	opt stack 0
  2766  000001                     strncmp@s1:
  2767                           	opt stack 0
  2768  000001                     i2memset@p1:
  2769                           	opt stack 0
  2770  000001                     i2strlen@s:
  2771                           	opt stack 0
  2772                           
  2773                           ; 2 bytes @ 0x0
  2774  000001                     	ds	1
  2775  000002                     ??_USBConfigureEndpoint:
  2776  000002                     USBCtrlTrfRxService@byteToRead:
  2777                           	opt stack 0
  2778  000002                     USBCtrlTrfInHandler@lastDTS:
  2779                           	opt stack 0
  2780  000002                     getch@RC:
  2781                           	opt stack 0
  2782  000002                     converter@conv2:
  2783                           	opt stack 0
  2784  000002                     USBStdGetStatusHandler@p:
  2785                           	opt stack 0
  2786  000002                     i2USBTransferOnePacket@data:
  2787                           	opt stack 0
  2788                           
  2789                           ; 2 bytes @ 0x1
  2790  000002                     	ds	1
  2791  000003                     ??i2_strlen:
  2792  000003                     getch@data:
  2793                           	opt stack 0
  2794  000003                     converter@resul:
  2795                           	opt stack 0
  2796  000003                     memcpy@s1:
  2797                           	opt stack 0
  2798  000003                     strcmp@s2:
  2799                           	opt stack 0
  2800  000003                     strcpy@from:
  2801                           	opt stack 0
  2802  000003                     strncmp@s2:
  2803                           	opt stack 0
  2804  000003                     i2memset@c:
  2805                           	opt stack 0
  2806                           
  2807                           ; 2 bytes @ 0x2
  2808  000003                     	ds	1
  2809  000004                     converter@aux:
  2810                           	opt stack 0
  2811  000004                     i2USBTransferOnePacket@len:
  2812                           	opt stack 0
  2813                           
  2814                           ; 1 bytes @ 0x3
  2815  000004                     	ds	1
  2816  000005                     ??_strcmp:
  2817  000005                     ??i2_USBTransferOnePacket:
  2818  000005                     converter@aux2:
  2819                           	opt stack 0
  2820  000005                     memcpy@n:
  2821                           	opt stack 0
  2822  000005                     strcpy@cp:
  2823                           	opt stack 0
  2824  000005                     strncmp@len:
  2825                           	opt stack 0
  2826  000005                     i2memset@n:
  2827                           	opt stack 0
  2828  000005                     i2strlen@cp:
  2829                           	opt stack 0
  2830                           
  2831                           ; 2 bytes @ 0x4
  2832  000005                     	ds	1
  2833  000006                     USBConfigureEndpoint@EPNum:
  2834                           	opt stack 0
  2835  000006                     converter@conv1:
  2836                           	opt stack 0
  2837  000006                     strcmp@r:
  2838                           	opt stack 0
  2839                           
  2840                           ; 1 bytes @ 0x5
  2841  000006                     	ds	1
  2842  000007                     ??_strncmp:
  2843  000007                     USBConfigureEndpoint@handle:
  2844                           	opt stack 0
  2845  000007                     memcpy@d:
  2846                           	opt stack 0
  2847  000007                     i2memset@p:
  2848                           	opt stack 0
  2849                           
  2850                           ; 2 bytes @ 0x6
  2851  000007                     	ds	2
  2852  000009                     USBEnableEndpoint@options:
  2853                           	opt stack 0
  2854  000009                     i2USBDeviceInit@i:
  2855                           	opt stack 0
  2856  000009                     i2USBTransferOnePacket@ep:
  2857                           	opt stack 0
  2858  000009                     memcpy@s:
  2859                           	opt stack 0
  2860                           
  2861                           ; 2 bytes @ 0x8
  2862  000009                     	ds	1
  2863  00000A                     ??_recebeByteLoRaWan:
  2864  00000A                     USBEnableEndpoint@p:
  2865                           	opt stack 0
  2866  00000A                     i2USBTransferOnePacket@handle:
  2867                           	opt stack 0
  2868                           
  2869                           ; 2 bytes @ 0x9
  2870  00000A                     	ds	1
  2871  00000B                     memcpy@tmp:
  2872                           	opt stack 0
  2873                           
  2874                           ; 1 bytes @ 0xA
  2875  00000B                     	ds	1
  2876  00000C                     USBEnableEndpoint@ep:
  2877                           	opt stack 0
  2878                           
  2879                           ; 1 bytes @ 0xB
  2880  00000C                     	ds	1
  2881  00000D                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  2882                           	opt stack 0
  2883                           
  2884                           ; 2 bytes @ 0xC
  2885  00000D                     	ds	1
  2886  00000E                     recebeByteLoRaWan@len:
  2887                           	opt stack 0
  2888                           
  2889                           ; 1 bytes @ 0xD
  2890  00000E                     	ds	1
  2891  00000F                     recebeByteLoRaWan@port:
  2892                           	opt stack 0
  2893  00000F                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  2894                           	opt stack 0
  2895                           
  2896                           ; 2 bytes @ 0xE
  2897  00000F                     	ds	1
  2898  000010                     recebeByteLoRaWan@b:
  2899                           	opt stack 0
  2900                           
  2901                           ; 1 bytes @ 0xF
  2902  000010                     	ds	1
  2903  000011                     recebeByteLoRaWan@tamMsgRx:
  2904                           	opt stack 0
  2905  000011                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  2906                           	opt stack 0
  2907                           
  2908                           ; 2 bytes @ 0x10
  2909  000011                     	ds	1
  2910  000012                     recebeByteLoRaWan@i:
  2911                           	opt stack 0
  2912                           
  2913                           ; 1 bytes @ 0x11
  2914  000012                     	ds	1
  2915  000013                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  2916  000013                     recebeByteLoRaWan@i_4802:
  2917                           	opt stack 0
  2918                           
  2919                           ; 1 bytes @ 0x12
  2920  000013                     	ds	2
  2921  000015                     ??_USBStdFeatureReqHandler:
  2922  000015                     USBStdSetCfgHandler@i:
  2923                           	opt stack 0
  2924                           
  2925                           ; 1 bytes @ 0x14
  2926  000015                     	ds	1
  2927  000016                     USBStdFeatureReqHandler@pUEP:
  2928                           	opt stack 0
  2929                           
  2930                           ; 2 bytes @ 0x15
  2931  000016                     	ds	2
  2932  000018                     USBStdFeatureReqHandler@current_ep_data:
  2933                           	opt stack 0
  2934                           
  2935                           ; 1 bytes @ 0x17
  2936  000018                     	ds	1
  2937  000019                     USBStdFeatureReqHandler@p:
  2938                           	opt stack 0
  2939                           
  2940                           ; 2 bytes @ 0x18
  2941  000019                     	ds	2
  2942  00001B                     ??_USBCtrlEPService:
  2943  00001B                     
  2944                           ; 1 bytes @ 0x1A
  2945  00001B                     	ds	1
  2946  00001C                     USBDeviceTasks@i:
  2947                           	opt stack 0
  2948                           
  2949                           ; 1 bytes @ 0x1B
  2950  00001C                     	ds	1
  2951  00001D                     ??_SYS_InterruptHigh:
  2952                           
  2953                           ; 1 bytes @ 0x1C
  2954  00001D                     	ds	19
  2955  000030                     SYS_InterruptHigh@dig1:
  2956                           	opt stack 0
  2957                           
  2958                           ; 2 bytes @ 0x2F
  2959  000030                     	ds	2
  2960  000032                     SYS_InterruptHigh@dig2:
  2961                           	opt stack 0
  2962                           
  2963                           ; 2 bytes @ 0x31
  2964  000032                     	ds	2
  2965  000034                     SYS_InterruptHigh@dig3:
  2966                           	opt stack 0
  2967                           
  2968                           ; 2 bytes @ 0x33
  2969  000034                     	ds	2
  2970  000036                     SYS_InterruptHigh@dig4:
  2971                           	opt stack 0
  2972                           
  2973                           ; 2 bytes @ 0x35
  2974  000036                     	ds	2
  2975                           tblptru	equ	0xFF8
  2976                           tblptrh	equ	0xFF7
  2977                           tblptrl	equ	0xFF6
  2978                           tablat	equ	0xFF5
  2979                           postinc0	equ	0xFEE
  2980                           wreg	equ	0xFE8
  2981                           postdec1	equ	0xFE5
  2982                           fsr1l	equ	0xFE1
  2983                           
  2984 ;;
  2985 ;;Main: autosize = 0, tempsize = 10, incstack = 0, save=0
  2986 ;;
  2987 ;; *************** function _main *****************
  2988 ;; Defined at:
  2989 ;;		line 62 in file "UT.c"
  2990 ;; Parameters:    Size  Location     Type
  2991 ;;		None
  2992 ;; Auto vars:     Size  Location     Type
  2993 ;;  sf              1  159[BANK2 ] unsigned char 
  2994 ;;  dr              1  174[BANK2 ] unsigned char 
  2995 ;;  i               1  173[BANK2 ] unsigned char 
  2996 ;;  i               1  172[BANK2 ] unsigned char 
  2997 ;;  tempoTimeOut    4  154[BANK2 ] unsigned long 
  2998 ;;  data          150    0[BANK2 ] unsigned char [150]
  2999 ;;  Fcanal          1  171[BANK2 ] unsigned char 
  3000 ;;  Icanal          1  158[BANK2 ] unsigned char 
  3001 ;;  deltaTempo      4  162[BANK2 ] unsigned long 
  3002 ;;  tempo           4  150[BANK2 ] unsigned long 
  3003 ;;  resp            1  160[BANK2 ] unsigned char 
  3004 ;;  i               1  177[BANK2 ] unsigned char 
  3005 ;;  i               1  176[BANK2 ] unsigned char 
  3006 ;;  i               2  169[BANK2 ] int 
  3007 ;;  dadoPoco       22  178[BANK2 ] struct .
  3008 ;;  pisca           1  175[BANK2 ] unsigned char 
  3009 ;;  contador        1  161[BANK2 ] unsigned char 
  3010 ;; Return value:  Size  Location     Type
  3011 ;;                  1    wreg      void 
  3012 ;; Registers used:
  3013 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3014 ;; Tracked objects:
  3015 ;;		On entry : 0/0
  3016 ;;		On exit  : 0/0
  3017 ;;		Unchanged: 0/0
  3018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3019 ;;      Params:         0       0       0       0       0       0       0       0       0
  3020 ;;      Locals:         0       0       0     200       0       0       0       0       0
  3021 ;;      Temps:          0       0      10       0       0       0       0       0       0
  3022 ;;      Totals:         0       0      10     200       0       0       0       0       0
  3023 ;;Total ram usage:      210 bytes
  3024 ;; Hardware stack levels required when called:   15
  3025 ;; This function calls:
  3026 ;;		_DataRate
  3027 ;;		_FeedBack
  3028 ;;		_MacSave
  3029 ;;		_SetAdr
  3030 ;;		_SetAppEUI
  3031 ;;		_SetAppKey
  3032 ;;		_SetBandWidth
  3033 ;;		_SetChannelLoRaWan
  3034 ;;		_SetDevEUI
  3035 ;;		_SetSpreadingFactor
  3036 ;;		_TxLoRaWan
  3037 ;;		_USBDeviceInit
  3038 ;;		___ftmul
  3039 ;;		___fttol
  3040 ;;		_delay
  3041 ;;		_le_AD
  3042 ;;		_le_pulsos
  3043 ;;		_millis
  3044 ;;		_putch
  3045 ;;		_putsUSBUSART
  3046 ;;		_retornaDado
  3047 ;;		_setup_AD
  3048 ;;		_setup_ccp1
  3049 ;;		_setup_pulsos
  3050 ;;		_setup_uart
  3051 ;;		_sprintf
  3052 ;;		_verificaUSB
  3053 ;; This function is called by:
  3054 ;;		Startup code after reset
  3055 ;; This function uses a non-reentrant model
  3056 ;;
  3057                           
  3058                           	psect	text0
  3059  000E10                     __ptext0:
  3060                           	opt stack 0
  3061  000E10                     _main:
  3062                           	opt stack 16
  3063                           
  3064                           ;UT.c: 63: uint8_t pisca=0;
  3065                           
  3066                           ;incstack = 0
  3067  000E10  0E00               	movlw	0
  3068  000E12  0102               	movlb	2	; () banked
  3069  000E14  6FAF               	movwf	main@pisca& (0+255),b
  3070                           
  3071                           ; BSR set to: 2
  3072                           ;UT.c: 64: uint8_t contador;
  3073                           ;UT.c: 66: TRISEbits.RE2=0;
  3074  000E16  9496               	bcf	3990,2,c	;volatile
  3075                           
  3076                           ; BSR set to: 2
  3077                           ;UT.c: 67: PORTDbits.RD4=0;
  3078  000E18  9883               	bcf	3971,4,c	;volatile
  3079                           
  3080                           ; BSR set to: 2
  3081                           ;UT.c: 68: TRISDbits.RD4=0;
  3082  000E1A  9895               	bcf	3989,4,c	;volatile
  3083                           
  3084                           ; BSR set to: 2
  3085                           ;UT.c: 69: PORTDbits.RD5=0;
  3086  000E1C  9A83               	bcf	3971,5,c	;volatile
  3087                           
  3088                           ; BSR set to: 2
  3089                           ;UT.c: 70: TRISDbits.RD5=0;
  3090  000E1E  9A95               	bcf	3989,5,c	;volatile
  3091                           
  3092                           ; BSR set to: 2
  3093                           ;UT.c: 71: PORTDbits.RD6=0;
  3094  000E20  9C83               	bcf	3971,6,c	;volatile
  3095                           
  3096                           ; BSR set to: 2
  3097                           ;UT.c: 72: TRISDbits.RD6=0;
  3098  000E22  9C95               	bcf	3989,6,c	;volatile
  3099                           
  3100                           ; BSR set to: 2
  3101                           ;UT.c: 73: PORTDbits.RD7=0;
  3102  000E24  9E83               	bcf	3971,7,c	;volatile
  3103                           
  3104                           ; BSR set to: 2
  3105                           ;UT.c: 74: TRISDbits.RD7=0;
  3106  000E26  9E95               	bcf	3989,7,c	;volatile
  3107                           
  3108                           ;UT.c: 76: for (int i=0;i<25;i++)
  3109  000E28  0E00               	movlw	0
  3110  000E2A  6FAA               	movwf	(main@i+1)& (0+255),b
  3111  000E2C  0E00               	movlw	0
  3112  000E2E  6FA9               	movwf	main@i& (0+255),b
  3113  000E30                     l10291:
  3114                           
  3115                           ; BSR set to: 2
  3116  000E30  BFAA               	btfsc	(main@i+1)& (0+255),7,b
  3117  000E32  D006               	goto	l1012
  3118  000E34  51AA               	movf	(main@i+1)& (0+255),w,b
  3119  000E36  E11C               	bnz	l10303
  3120  000E38  0E19               	movlw	25
  3121  000E3A  5DA9               	subwf	main@i& (0+255),w,b
  3122  000E3C  B0D8               	btfsc	status,0,c
  3123  000E3E  D018               	goto	u10470
  3124  000E40                     l1012:
  3125                           
  3126                           ; BSR set to: 2
  3127                           ;UT.c: 77: {
  3128                           ;UT.c: 78: pisca ^= 1;
  3129                           
  3130                           ; BSR set to: 2
  3131  000E40  0E01               	movlw	1
  3132  000E42  1BAF               	xorwf	main@pisca& (0+255),f,b
  3133                           
  3134                           ; BSR set to: 2
  3135                           ;UT.c: 79: PORTEbits.RE2 = pisca;
  3136  000E44  B1AF               	btfsc	main@pisca& (0+255),0,b
  3137  000E46  D002               	bra	u10465
  3138  000E48  9484               	bcf	3972,2,c	;volatile
  3139  000E4A  D001               	bra	u10466
  3140  000E4C                     u10465:
  3141  000E4C  8484               	bsf	3972,2,c	;volatile
  3142  000E4E                     u10466:
  3143                           
  3144                           ;UT.c: 80: _delay((unsigned long)((200)*(48000000/4000.0)));
  3145  000E4E  0E0D               	movlw	13
  3146  000E50  0101               	movlb	1	; () banked
  3147  000E52  6FF0               	movwf	(??_main+1)& (0+255),b
  3148  000E54  0E2D               	movlw	45
  3149  000E56  6FEF               	movwf	??_main& (0+255),b
  3150  000E58  0ED7               	movlw	215
  3151  000E5A                     u11097:
  3152  000E5A  2EE8               	decfsz	wreg,f,c
  3153  000E5C  D7FE               	bra	u11097
  3154  000E5E  2FEF               	decfsz	??_main& (0+255),f,b
  3155  000E60  D7FC               	bra	u11097
  3156  000E62  2FF0               	decfsz	(??_main+1)& (0+255),f,b
  3157  000E64  D7FA               	bra	u11097
  3158  000E66  D000               	nop2	
  3159  000E68  0102               	movlb	2	; () banked
  3160  000E6A  4BA9               	infsnz	main@i& (0+255),f,b
  3161  000E6C  2BAA               	incf	(main@i+1)& (0+255),f,b
  3162  000E6E  D7E0               	goto	l10291
  3163  000E70                     u10470:
  3164  000E70                     l10303:
  3165                           
  3166                           ; BSR set to: 2
  3167                           ;UT.c: 81: }
  3168                           ;UT.c: 90: setup_uart(57600);
  3169  000E70  0E00               	movlw	0
  3170  000E72  0100               	movlb	0	; () banked
  3171  000E74  6F6D               	movwf	setup_uart@baudRate& (0+255),b
  3172  000E76  0EE1               	movlw	225
  3173  000E78  6F6E               	movwf	(setup_uart@baudRate+1)& (0+255),b
  3174  000E7A  0E00               	movlw	0
  3175  000E7C  6F6F               	movwf	(setup_uart@baudRate+2)& (0+255),b
  3176  000E7E  0E00               	movlw	0
  3177  000E80  6F70               	movwf	(setup_uart@baudRate+3)& (0+255),b
  3178  000E82  EC04  F023         	call	_setup_uart	;wreg free
  3179                           
  3180                           ;UT.c: 93: USBDeviceInit();
  3181  000E86  EC66  F015         	call	_USBDeviceInit	;wreg free
  3182                           
  3183                           ;UT.c: 94: setup_AD();
  3184  000E8A  ECA5  F02B         	call	_setup_AD	;wreg free
  3185                           
  3186                           ;UT.c: 95: setup_pulsos();
  3187  000E8E  EC03  F022         	call	_setup_pulsos	;wreg free
  3188                           
  3189                           ;UT.c: 96: setup_ccp1();
  3190  000E92  EC3F  F029         	call	_setup_ccp1	;wreg free
  3191                           
  3192                           ;UT.c: 98: verificaUSB();
  3193  000E96  EC89  F02A         	call	_verificaUSB	;wreg free
  3194                           
  3195                           ;UT.c: 100: for (uint8_t i=0; i<48; i++){
  3196  000E9A  0E00               	movlw	0
  3197  000E9C  0102               	movlb	2	; () banked
  3198  000E9E  6FB0               	movwf	main@i_3271& (0+255),b
  3199  000EA0                     l10317:
  3200                           
  3201                           ; BSR set to: 2
  3202  000EA0  0E2F               	movlw	47
  3203  000EA2  65B0               	cpfsgt	main@i_3271& (0+255),b
  3204  000EA4  D001               	goto	l1014
  3205  000EA6  D00A               	goto	u10490
  3206  000EA8                     l1014:
  3207                           
  3208                           ; BSR set to: 2
  3209                           ;UT.c: 101: SetChannelLoRaWan (i,0);
  3210                           
  3211                           ; BSR set to: 2
  3212  000EA8  0E00               	movlw	0
  3213  000EAA  0100               	movlb	0	; () banked
  3214  000EAC  6FF5               	movwf	SetChannelLoRaWan@ligado& (0+255),b
  3215  000EAE  0102               	movlb	2	; () banked
  3216  000EB0  51B0               	movf	main@i_3271& (0+255),w,b
  3217  000EB2  ECBC  F026         	call	_SetChannelLoRaWan
  3218  000EB6  0102               	movlb	2	; () banked
  3219  000EB8  2BB0               	incf	main@i_3271& (0+255),f,b
  3220  000EBA  D7F2               	goto	l10317
  3221  000EBC                     u10490:
  3222                           
  3223                           ; BSR set to: 2
  3224                           ;UT.c: 102: }
  3225                           ;UT.c: 103: for (uint8_t i=48; i<=63; i++){
  3226                           
  3227                           ; BSR set to: 2
  3228  000EBC  0E30               	movlw	48
  3229  000EBE  6FB1               	movwf	main@i_3272& (0+255),b
  3230  000EC0                     l10329:
  3231                           
  3232                           ; BSR set to: 2
  3233  000EC0  0E3F               	movlw	63
  3234  000EC2  65B1               	cpfsgt	main@i_3272& (0+255),b
  3235  000EC4  D001               	goto	l1016
  3236  000EC6  D00A               	goto	u10510
  3237  000EC8                     l1016:
  3238                           
  3239                           ; BSR set to: 2
  3240                           ;UT.c: 104: SetChannelLoRaWan (i,1);
  3241                           
  3242                           ; BSR set to: 2
  3243  000EC8  0E01               	movlw	1
  3244  000ECA  0100               	movlb	0	; () banked
  3245  000ECC  6FF5               	movwf	SetChannelLoRaWan@ligado& (0+255),b
  3246  000ECE  0102               	movlb	2	; () banked
  3247  000ED0  51B1               	movf	main@i_3272& (0+255),w,b
  3248  000ED2  ECBC  F026         	call	_SetChannelLoRaWan
  3249  000ED6  0102               	movlb	2	; () banked
  3250  000ED8  2BB1               	incf	main@i_3272& (0+255),f,b
  3251  000EDA  D7F2               	goto	l10329
  3252  000EDC                     u10510:
  3253                           
  3254                           ; BSR set to: 2
  3255                           ;UT.c: 105: }
  3256                           ;UT.c: 107: DataRate(6);
  3257                           
  3258                           ; BSR set to: 2
  3259  000EDC  0E00               	movlw	0
  3260  000EDE  0100               	movlb	0	; () banked
  3261  000EE0  6FF6               	movwf	(DataRate@dr+1)& (0+255),b
  3262  000EE2  0E06               	movlw	6
  3263  000EE4  6FF5               	movwf	DataRate@dr& (0+255),b
  3264  000EE6  ECFA  F028         	call	_DataRate	;wreg free
  3265                           
  3266                           ;UT.c: 108: SetAdr(STATE_OFF);
  3267  000EEA  0EEA               	movlw	low _STATE_OFF
  3268  000EEC  0100               	movlb	0	; () banked
  3269  000EEE  6FF5               	movwf	SetAdr@state& (0+255),b
  3270  000EF0  0E7D               	movlw	high _STATE_OFF
  3271  000EF2  6FF6               	movwf	(SetAdr@state+1)& (0+255),b
  3272  000EF4  ECC2  F029         	call	_SetAdr	;wreg free
  3273                           
  3274                           ;UT.c: 109: SetDevEUI();
  3275  000EF8  ECD4  F025         	call	_SetDevEUI	;wreg free
  3276                           
  3277                           ;UT.c: 110: SetAppEUI();
  3278  000EFC  EC0F  F026         	call	_SetAppEUI	;wreg free
  3279                           
  3280                           ;UT.c: 111: SetAppKey();
  3281  000F00  ECA2  F020         	call	_SetAppKey	;wreg free
  3282                           
  3283                           ;UT.c: 112: MacSave();
  3284  000F04  EC39  F02A         	call	_MacSave	;wreg free
  3285                           
  3286                           ;UT.c: 132: struct
  3287                           ;UT.c: 133: {
  3288                           ;UT.c: 135: uint8_t feedback1;
  3289                           ;UT.c: 136: uint8_t feedback2;
  3290                           ;UT.c: 137: uint16_t nivel1;
  3291                           ;UT.c: 138: uint16_t nivel2;
  3292                           ;UT.c: 139: uint32_t pulsos1;
  3293                           ;UT.c: 140: uint32_t pulsos2;
  3294                           ;UT.c: 141: uint32_t pulsos3;
  3295                           ;UT.c: 142: uint32_t pulsos4;
  3296                           ;UT.c: 143: } dadoPoco;
  3297                           ;UT.c: 147: putch(0x34);
  3298  000F08  0E34               	movlw	52
  3299  000F0A  ECB4  F02B         	call	_putch
  3300  000F0E                     
  3301                           ;UT.c: 190: {
  3302                           ;UT.c: 191: uint32_t tempo=millis();
  3303  000F0E  EC38  F02B         	call	_millis	;wreg free
  3304  000F12  C060  F296         	movff	?_millis,main@tempo
  3305  000F16  C061  F297         	movff	?_millis+1,main@tempo+1
  3306  000F1A  C062  F298         	movff	?_millis+2,main@tempo+2
  3307  000F1E  C063  F299         	movff	?_millis+3,main@tempo+3
  3308                           
  3309                           ;UT.c: 192: pisca ^= 1;
  3310  000F22  0E01               	movlw	1
  3311  000F24  0102               	movlb	2	; () banked
  3312  000F26  1BAF               	xorwf	main@pisca& (0+255),f,b
  3313                           
  3314                           ; BSR set to: 2
  3315                           ;UT.c: 193: PORTEbits.RE2 = pisca;
  3316  000F28  B1AF               	btfsc	main@pisca& (0+255),0,b
  3317  000F2A  D002               	bra	u10525
  3318  000F2C  9484               	bcf	3972,2,c	;volatile
  3319  000F2E  D001               	bra	u10526
  3320  000F30                     u10525:
  3321  000F30  8484               	bsf	3972,2,c	;volatile
  3322  000F32                     u10526:
  3323                           
  3324                           ;UT.c: 205: dadoPoco.nivel1 =(uint16_t)(le_AD(0)*1000.0);
  3325  000F32  0E00               	movlw	0
  3326  000F34  EC07  F019         	call	_le_AD
  3327  000F38  C09E  F2A6         	movff	?_le_AD,_main$5820
  3328  000F3C  C09F  F2A7         	movff	?_le_AD+1,_main$5820+1
  3329  000F40  C0A0  F2A8         	movff	?_le_AD+2,_main$5820+2
  3330                           
  3331                           ;UT.c: 205: dadoPoco.nivel1 =(uint16_t)(le_AD(0)*1000.0);
  3332  000F44  0E00               	movlw	0
  3333  000F46  0100               	movlb	0	; () banked
  3334  000F48  6F83               	movwf	___ftmul@f2& (0+255),b
  3335  000F4A  0E7A               	movlw	122
  3336  000F4C  6F84               	movwf	(___ftmul@f2+1)& (0+255),b
  3337  000F4E  0E44               	movlw	68
  3338  000F50  6F85               	movwf	(___ftmul@f2+2)& (0+255),b
  3339  000F52  C2A6  F080         	movff	_main$5820,___ftmul@f1
  3340  000F56  C2A7  F081         	movff	_main$5820+1,___ftmul@f1+1
  3341  000F5A  C2A8  F082         	movff	_main$5820+2,___ftmul@f1+2
  3342  000F5E  EC38  F01D         	call	___ftmul	;wreg free
  3343  000F62  C080  F0B0         	movff	?___ftmul,___fttol@f1
  3344  000F66  C081  F0B1         	movff	?___ftmul+1,___fttol@f1+1
  3345  000F6A  C082  F0B2         	movff	?___ftmul+2,___fttol@f1+2
  3346  000F6E  ECBC  F01C         	call	___fttol	;wreg free
  3347  000F72  C0B0  F2B4         	movff	?___fttol,main@dadoPoco+2
  3348  000F76  C0B1  F2B5         	movff	?___fttol+1,main@dadoPoco+3
  3349                           
  3350                           ;UT.c: 206: dadoPoco.nivel2 =(uint16_t)(le_AD(1)*1000.0);
  3351  000F7A  0E01               	movlw	1
  3352  000F7C  EC07  F019         	call	_le_AD
  3353  000F80  C09E  F2A6         	movff	?_le_AD,_main$5820
  3354  000F84  C09F  F2A7         	movff	?_le_AD+1,_main$5820+1
  3355  000F88  C0A0  F2A8         	movff	?_le_AD+2,_main$5820+2
  3356                           
  3357                           ;UT.c: 206: dadoPoco.nivel2 =(uint16_t)(le_AD(1)*1000.0);
  3358  000F8C  0E00               	movlw	0
  3359  000F8E  0100               	movlb	0	; () banked
  3360  000F90  6F83               	movwf	___ftmul@f2& (0+255),b
  3361  000F92  0E7A               	movlw	122
  3362  000F94  6F84               	movwf	(___ftmul@f2+1)& (0+255),b
  3363  000F96  0E44               	movlw	68
  3364  000F98  6F85               	movwf	(___ftmul@f2+2)& (0+255),b
  3365  000F9A  C2A6  F080         	movff	_main$5820,___ftmul@f1
  3366  000F9E  C2A7  F081         	movff	_main$5820+1,___ftmul@f1+1
  3367  000FA2  C2A8  F082         	movff	_main$5820+2,___ftmul@f1+2
  3368  000FA6  EC38  F01D         	call	___ftmul	;wreg free
  3369  000FAA  C080  F0B0         	movff	?___ftmul,___fttol@f1
  3370  000FAE  C081  F0B1         	movff	?___ftmul+1,___fttol@f1+1
  3371  000FB2  C082  F0B2         	movff	?___ftmul+2,___fttol@f1+2
  3372  000FB6  ECBC  F01C         	call	___fttol	;wreg free
  3373  000FBA  C0B0  F2B6         	movff	?___fttol,main@dadoPoco+4
  3374  000FBE  C0B1  F2B7         	movff	?___fttol+1,main@dadoPoco+5
  3375                           
  3376                           ;UT.c: 207: dadoPoco.pulsos1 =le_pulsos(1,retornaDado(1,0));
  3377  000FC2  0E00               	movlw	0
  3378  000FC4  0100               	movlb	0	; () banked
  3379  000FC6  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3380  000FC8  0E01               	movlw	1
  3381  000FCA  EC58  F027         	call	_retornaDado
  3382  000FCE  0100               	movlb	0	; () banked
  3383  000FD0  6F65               	movwf	le_pulsos@modo& (0+255),b
  3384  000FD2  0E01               	movlw	1
  3385  000FD4  EC98  F01E         	call	_le_pulsos
  3386  000FD8  C065  F2B8         	movff	?_le_pulsos,main@dadoPoco+6
  3387  000FDC  C066  F2B9         	movff	?_le_pulsos+1,main@dadoPoco+7
  3388  000FE0  C067  F2BA         	movff	?_le_pulsos+2,main@dadoPoco+8
  3389  000FE4  C068  F2BB         	movff	?_le_pulsos+3,main@dadoPoco+9
  3390                           
  3391                           ;UT.c: 208: dadoPoco.pulsos2 =le_pulsos(2,retornaDado(1,1));
  3392  000FE8  0E01               	movlw	1
  3393  000FEA  0100               	movlb	0	; () banked
  3394  000FEC  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3395  000FEE  0E01               	movlw	1
  3396  000FF0  EC58  F027         	call	_retornaDado
  3397  000FF4  0100               	movlb	0	; () banked
  3398  000FF6  6F65               	movwf	le_pulsos@modo& (0+255),b
  3399  000FF8  0E02               	movlw	2
  3400  000FFA  EC98  F01E         	call	_le_pulsos
  3401  000FFE  C065  F2BC         	movff	?_le_pulsos,main@dadoPoco+10
  3402  001002  C066  F2BD         	movff	?_le_pulsos+1,main@dadoPoco+11
  3403  001006  C067  F2BE         	movff	?_le_pulsos+2,main@dadoPoco+12
  3404  00100A  C068  F2BF         	movff	?_le_pulsos+3,main@dadoPoco+13
  3405                           
  3406                           ;UT.c: 209: dadoPoco.pulsos3 =le_pulsos(3,retornaDado(1,2));
  3407  00100E  0E02               	movlw	2
  3408  001010  0100               	movlb	0	; () banked
  3409  001012  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3410  001014  0E01               	movlw	1
  3411  001016  EC58  F027         	call	_retornaDado
  3412  00101A  0100               	movlb	0	; () banked
  3413  00101C  6F65               	movwf	le_pulsos@modo& (0+255),b
  3414  00101E  0E03               	movlw	3
  3415  001020  EC98  F01E         	call	_le_pulsos
  3416  001024  C065  F2C0         	movff	?_le_pulsos,main@dadoPoco+14
  3417  001028  C066  F2C1         	movff	?_le_pulsos+1,main@dadoPoco+15
  3418  00102C  C067  F2C2         	movff	?_le_pulsos+2,main@dadoPoco+16
  3419  001030  C068  F2C3         	movff	?_le_pulsos+3,main@dadoPoco+17
  3420                           
  3421                           ;UT.c: 210: dadoPoco.pulsos4 =le_pulsos(4,retornaDado(1,3));
  3422  001034  0E03               	movlw	3
  3423  001036  0100               	movlb	0	; () banked
  3424  001038  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3425  00103A  0E01               	movlw	1
  3426  00103C  EC58  F027         	call	_retornaDado
  3427  001040  0100               	movlb	0	; () banked
  3428  001042  6F65               	movwf	le_pulsos@modo& (0+255),b
  3429  001044  0E04               	movlw	4
  3430  001046  EC98  F01E         	call	_le_pulsos
  3431  00104A  C065  F2C4         	movff	?_le_pulsos,main@dadoPoco+18
  3432  00104E  C066  F2C5         	movff	?_le_pulsos+1,main@dadoPoco+19
  3433  001052  C067  F2C6         	movff	?_le_pulsos+2,main@dadoPoco+20
  3434  001056  C068  F2C7         	movff	?_le_pulsos+3,main@dadoPoco+21
  3435                           
  3436                           ;UT.c: 212: LATDbits.LATD4 = retornaDado(0,0);
  3437  00105A  0E00               	movlw	0
  3438  00105C  0100               	movlb	0	; () banked
  3439  00105E  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3440  001060  0E00               	movlw	0
  3441  001062  EC58  F027         	call	_retornaDado
  3442  001066  0101               	movlb	1	; () banked
  3443  001068  6FEF               	movwf	??_main& (0+255),b
  3444  00106A  3BEF               	swapf	??_main& (0+255),f,b
  3445  00106C  508C               	movf	3980,w,c	;volatile
  3446  00106E  19EF               	xorwf	??_main& (0+255),w,b
  3447  001070  0BEF               	andlw	-17
  3448  001072  19EF               	xorwf	??_main& (0+255),w,b
  3449  001074  6E8C               	movwf	3980,c	;volatile
  3450                           
  3451                           ; BSR set to: 1
  3452                           ;UT.c: 213: LATDbits.LATD5 = retornaDado(0,3);
  3453  001076  0E03               	movlw	3
  3454  001078  0100               	movlb	0	; () banked
  3455  00107A  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3456  00107C  0E00               	movlw	0
  3457  00107E  EC58  F027         	call	_retornaDado
  3458  001082  0101               	movlb	1	; () banked
  3459  001084  6FEF               	movwf	??_main& (0+255),b
  3460  001086  3BEF               	swapf	??_main& (0+255),f,b
  3461  001088  47EF               	rlncf	??_main& (0+255),f,b
  3462  00108A  508C               	movf	3980,w,c	;volatile
  3463  00108C  19EF               	xorwf	??_main& (0+255),w,b
  3464  00108E  0BDF               	andlw	-33
  3465  001090  19EF               	xorwf	??_main& (0+255),w,b
  3466  001092  6E8C               	movwf	3980,c	;volatile
  3467                           
  3468                           ; BSR set to: 1
  3469                           ;UT.c: 214: LATDbits.LATD6 = retornaDado(0,2);
  3470  001094  0E02               	movlw	2
  3471  001096  0100               	movlb	0	; () banked
  3472  001098  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3473  00109A  0E00               	movlw	0
  3474  00109C  EC58  F027         	call	_retornaDado
  3475  0010A0  0101               	movlb	1	; () banked
  3476  0010A2  6FEF               	movwf	??_main& (0+255),b
  3477  0010A4  3BEF               	swapf	??_main& (0+255),f,b
  3478  0010A6  47EF               	rlncf	??_main& (0+255),f,b
  3479  0010A8  47EF               	rlncf	??_main& (0+255),f,b
  3480  0010AA  508C               	movf	3980,w,c	;volatile
  3481  0010AC  19EF               	xorwf	??_main& (0+255),w,b
  3482  0010AE  0BBF               	andlw	-65
  3483  0010B0  19EF               	xorwf	??_main& (0+255),w,b
  3484  0010B2  6E8C               	movwf	3980,c	;volatile
  3485                           
  3486                           ; BSR set to: 1
  3487                           ;UT.c: 215: LATDbits.LATD7 = retornaDado(0,1);
  3488  0010B4  0E01               	movlw	1
  3489  0010B6  0100               	movlb	0	; () banked
  3490  0010B8  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3491  0010BA  0E00               	movlw	0
  3492  0010BC  EC58  F027         	call	_retornaDado
  3493  0010C0  0101               	movlb	1	; () banked
  3494  0010C2  6FEF               	movwf	??_main& (0+255),b
  3495  0010C4  33EF               	rrcf	??_main& (0+255),f,b
  3496  0010C6  33EF               	rrcf	??_main& (0+255),f,b
  3497  0010C8  508C               	movf	3980,w,c	;volatile
  3498  0010CA  19EF               	xorwf	??_main& (0+255),w,b
  3499  0010CC  0B7F               	andlw	-129
  3500  0010CE  19EF               	xorwf	??_main& (0+255),w,b
  3501  0010D0  6E8C               	movwf	3980,c	;volatile
  3502                           
  3503                           ; BSR set to: 1
  3504                           ;UT.c: 217: FeedBack();
  3505  0010D2  ECA4  F012         	call	_FeedBack	;wreg free
  3506                           
  3507                           ;UT.c: 219: if (retornaDado(0,4) == 1){
  3508  0010D6  0E04               	movlw	4
  3509  0010D8  0100               	movlb	0	; () banked
  3510  0010DA  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3511  0010DC  0E00               	movlw	0
  3512  0010DE  EC58  F027         	call	_retornaDado
  3513  0010E2  06E8               	decf	wreg,f,c
  3514  0010E4  A4D8               	btfss	status,2,c
  3515  0010E6  D182               	goto	l1019
  3516                           
  3517                           ;UT.c: 220: uint8_t Icanal = retornaDado(6,6)<<6 | retornaDado(6,5)<<5 | retornaDado(6,4
      +                          )<<4 | retornaDado(6,3)<<3 | retornaDado(6,2)<<2 | retornaDado(6,1)<<1 | retornaDado(6,0
      +                          );
  3518  0010E8  0E00               	movlw	0
  3519  0010EA  0100               	movlb	0	; () banked
  3520  0010EC  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3521  0010EE  0E06               	movlw	6
  3522  0010F0  EC58  F027         	call	_retornaDado
  3523  0010F4  0101               	movlb	1	; () banked
  3524  0010F6  6FEF               	movwf	??_main& (0+255),b
  3525  0010F8  0E01               	movlw	1
  3526  0010FA  0100               	movlb	0	; () banked
  3527  0010FC  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3528  0010FE  0E06               	movlw	6
  3529  001100  EC58  F027         	call	_retornaDado
  3530  001104  0101               	movlb	1	; () banked
  3531  001106  6FF0               	movwf	(??_main+1)& (0+255),b
  3532  001108  90D8               	bcf	status,0,c
  3533  00110A  35F0               	rlcf	(??_main+1)& (0+255),w,b
  3534  00110C  6FF1               	movwf	(??_main+2)& (0+255),b
  3535  00110E  0E02               	movlw	2
  3536  001110  0100               	movlb	0	; () banked
  3537  001112  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3538  001114  0E06               	movlw	6
  3539  001116  EC58  F027         	call	_retornaDado
  3540  00111A  0101               	movlb	1	; () banked
  3541  00111C  6FF2               	movwf	(??_main+3)& (0+255),b
  3542  00111E  90D8               	bcf	status,0,c
  3543  001120  37F2               	rlcf	(??_main+3)& (0+255),f,b
  3544  001122  90D8               	bcf	status,0,c
  3545  001124  37F2               	rlcf	(??_main+3)& (0+255),f,b
  3546  001126  0E03               	movlw	3
  3547  001128  0100               	movlb	0	; () banked
  3548  00112A  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3549  00112C  0E06               	movlw	6
  3550  00112E  EC58  F027         	call	_retornaDado
  3551  001132  0101               	movlb	1	; () banked
  3552  001134  6FF3               	movwf	(??_main+4)& (0+255),b
  3553  001136  90D8               	bcf	status,0,c
  3554  001138  37F3               	rlcf	(??_main+4)& (0+255),f,b
  3555  00113A  90D8               	bcf	status,0,c
  3556  00113C  37F3               	rlcf	(??_main+4)& (0+255),f,b
  3557  00113E  90D8               	bcf	status,0,c
  3558  001140  37F3               	rlcf	(??_main+4)& (0+255),f,b
  3559  001142  0E04               	movlw	4
  3560  001144  0100               	movlb	0	; () banked
  3561  001146  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3562  001148  0E06               	movlw	6
  3563  00114A  EC58  F027         	call	_retornaDado
  3564  00114E  0101               	movlb	1	; () banked
  3565  001150  6FF4               	movwf	(??_main+5)& (0+255),b
  3566  001152  3BF4               	swapf	(??_main+5)& (0+255),f,b
  3567  001154  0EF0               	movlw	240
  3568  001156  17F4               	andwf	(??_main+5)& (0+255),f,b
  3569  001158  0E05               	movlw	5
  3570  00115A  0100               	movlb	0	; () banked
  3571  00115C  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3572  00115E  0E06               	movlw	6
  3573  001160  EC58  F027         	call	_retornaDado
  3574  001164  0101               	movlb	1	; () banked
  3575  001166  6FF5               	movwf	(??_main+6)& (0+255),b
  3576  001168  0E05               	movlw	5
  3577  00116A  6FF6               	movwf	(??_main+7)& (0+255),b
  3578  00116C                     u10545:
  3579  00116C  90D8               	bcf	status,0,c
  3580  00116E  37F5               	rlcf	(??_main+6)& (0+255),f,b
  3581  001170  2FF6               	decfsz	(??_main+7)& (0+255),f,b
  3582  001172  D7FC               	goto	u10545
  3583  001174  0E06               	movlw	6
  3584  001176  0100               	movlb	0	; () banked
  3585  001178  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3586  00117A  0E06               	movlw	6
  3587  00117C  EC58  F027         	call	_retornaDado
  3588  001180  0101               	movlb	1	; () banked
  3589  001182  6FF7               	movwf	(??_main+8)& (0+255),b
  3590  001184  0E06               	movlw	6
  3591  001186  6FF8               	movwf	(??_main+9)& (0+255),b
  3592  001188                     u10555:
  3593  001188  90D8               	bcf	status,0,c
  3594  00118A  37F7               	rlcf	(??_main+8)& (0+255),f,b
  3595  00118C  2FF8               	decfsz	(??_main+9)& (0+255),f,b
  3596  00118E  D7FC               	goto	u10555
  3597  001190  51F7               	movf	(??_main+8)& (0+255),w,b
  3598  001192  11F5               	iorwf	(??_main+6)& (0+255),w,b
  3599  001194  11F4               	iorwf	(??_main+5)& (0+255),w,b
  3600  001196  11F3               	iorwf	(??_main+4)& (0+255),w,b
  3601  001198  11F2               	iorwf	(??_main+3)& (0+255),w,b
  3602  00119A  11F1               	iorwf	(??_main+2)& (0+255),w,b
  3603  00119C  11EF               	iorwf	??_main& (0+255),w,b
  3604  00119E  0102               	movlb	2	; () banked
  3605  0011A0  6F9E               	movwf	main@Icanal& (0+255),b
  3606                           
  3607                           ;UT.c: 221: uint8_t Fcanal = retornaDado(7,6)<<6 | retornaDado(7,5)<<5 | retornaDado(7,4
      +                          )<<4 | retornaDado(7,3)<<3 | retornaDado(7,2)<<2 | retornaDado(7,1)<<1 | retornaDado(7,0
      +                          );
  3608  0011A2  0E00               	movlw	0
  3609  0011A4  0100               	movlb	0	; () banked
  3610  0011A6  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3611  0011A8  0E07               	movlw	7
  3612  0011AA  EC58  F027         	call	_retornaDado
  3613  0011AE  0101               	movlb	1	; () banked
  3614  0011B0  6FEF               	movwf	??_main& (0+255),b
  3615  0011B2  0E01               	movlw	1
  3616  0011B4  0100               	movlb	0	; () banked
  3617  0011B6  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3618  0011B8  0E07               	movlw	7
  3619  0011BA  EC58  F027         	call	_retornaDado
  3620  0011BE  0101               	movlb	1	; () banked
  3621  0011C0  6FF0               	movwf	(??_main+1)& (0+255),b
  3622  0011C2  90D8               	bcf	status,0,c
  3623  0011C4  35F0               	rlcf	(??_main+1)& (0+255),w,b
  3624  0011C6  6FF1               	movwf	(??_main+2)& (0+255),b
  3625  0011C8  0E02               	movlw	2
  3626  0011CA  0100               	movlb	0	; () banked
  3627  0011CC  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3628  0011CE  0E07               	movlw	7
  3629  0011D0  EC58  F027         	call	_retornaDado
  3630  0011D4  0101               	movlb	1	; () banked
  3631  0011D6  6FF2               	movwf	(??_main+3)& (0+255),b
  3632  0011D8  90D8               	bcf	status,0,c
  3633  0011DA  37F2               	rlcf	(??_main+3)& (0+255),f,b
  3634  0011DC  90D8               	bcf	status,0,c
  3635  0011DE  37F2               	rlcf	(??_main+3)& (0+255),f,b
  3636  0011E0  0E03               	movlw	3
  3637  0011E2  0100               	movlb	0	; () banked
  3638  0011E4  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3639  0011E6  0E07               	movlw	7
  3640  0011E8  EC58  F027         	call	_retornaDado
  3641  0011EC  0101               	movlb	1	; () banked
  3642  0011EE  6FF3               	movwf	(??_main+4)& (0+255),b
  3643  0011F0  90D8               	bcf	status,0,c
  3644  0011F2  37F3               	rlcf	(??_main+4)& (0+255),f,b
  3645  0011F4  90D8               	bcf	status,0,c
  3646  0011F6  37F3               	rlcf	(??_main+4)& (0+255),f,b
  3647  0011F8  90D8               	bcf	status,0,c
  3648  0011FA  37F3               	rlcf	(??_main+4)& (0+255),f,b
  3649  0011FC  0E04               	movlw	4
  3650  0011FE  0100               	movlb	0	; () banked
  3651  001200  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3652  001202  0E07               	movlw	7
  3653  001204  EC58  F027         	call	_retornaDado
  3654  001208  0101               	movlb	1	; () banked
  3655  00120A  6FF4               	movwf	(??_main+5)& (0+255),b
  3656  00120C  3BF4               	swapf	(??_main+5)& (0+255),f,b
  3657  00120E  0EF0               	movlw	240
  3658  001210  17F4               	andwf	(??_main+5)& (0+255),f,b
  3659  001212  0E05               	movlw	5
  3660  001214  0100               	movlb	0	; () banked
  3661  001216  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3662  001218  0E07               	movlw	7
  3663  00121A  EC58  F027         	call	_retornaDado
  3664  00121E  0101               	movlb	1	; () banked
  3665  001220  6FF5               	movwf	(??_main+6)& (0+255),b
  3666  001222  0E05               	movlw	5
  3667  001224  6FF6               	movwf	(??_main+7)& (0+255),b
  3668  001226                     u10565:
  3669  001226  90D8               	bcf	status,0,c
  3670  001228  37F5               	rlcf	(??_main+6)& (0+255),f,b
  3671  00122A  2FF6               	decfsz	(??_main+7)& (0+255),f,b
  3672  00122C  D7FC               	goto	u10565
  3673  00122E  0E06               	movlw	6
  3674  001230  0100               	movlb	0	; () banked
  3675  001232  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3676  001234  0E07               	movlw	7
  3677  001236  EC58  F027         	call	_retornaDado
  3678  00123A  0101               	movlb	1	; () banked
  3679  00123C  6FF7               	movwf	(??_main+8)& (0+255),b
  3680  00123E  0E06               	movlw	6
  3681  001240  6FF8               	movwf	(??_main+9)& (0+255),b
  3682  001242                     u10575:
  3683  001242  90D8               	bcf	status,0,c
  3684  001244  37F7               	rlcf	(??_main+8)& (0+255),f,b
  3685  001246  2FF8               	decfsz	(??_main+9)& (0+255),f,b
  3686  001248  D7FC               	goto	u10575
  3687  00124A  51F7               	movf	(??_main+8)& (0+255),w,b
  3688  00124C  11F5               	iorwf	(??_main+6)& (0+255),w,b
  3689  00124E  11F4               	iorwf	(??_main+5)& (0+255),w,b
  3690  001250  11F3               	iorwf	(??_main+4)& (0+255),w,b
  3691  001252  11F2               	iorwf	(??_main+3)& (0+255),w,b
  3692  001254  11F1               	iorwf	(??_main+2)& (0+255),w,b
  3693  001256  11EF               	iorwf	??_main& (0+255),w,b
  3694  001258  0102               	movlb	2	; () banked
  3695  00125A  6FAB               	movwf	main@Fcanal& (0+255),b
  3696                           
  3697                           ; BSR set to: 2
  3698                           ;UT.c: 222: for (uint8_t i=0; i<Fcanal; i++){
  3699  00125C  0E00               	movlw	0
  3700  00125E  6FAC               	movwf	main@i_3303& (0+255),b
  3701  001260  D009               	goto	l1020
  3702  001262                     
  3703                           ; BSR set to: 2
  3704                           ;UT.c: 223: SetChannelLoRaWan (i,0);
  3705                           
  3706                           ; BSR set to: 2
  3707  001262  0E00               	movlw	0
  3708  001264  0100               	movlb	0	; () banked
  3709  001266  6FF5               	movwf	SetChannelLoRaWan@ligado& (0+255),b
  3710  001268  0102               	movlb	2	; () banked
  3711  00126A  51AC               	movf	main@i_3303& (0+255),w,b
  3712  00126C  ECBC  F026         	call	_SetChannelLoRaWan
  3713  001270  0102               	movlb	2	; () banked
  3714  001272  2BAC               	incf	main@i_3303& (0+255),f,b
  3715  001274                     l1020:
  3716                           
  3717                           ; BSR set to: 2
  3718                           
  3719                           ; BSR set to: 2
  3720  001274  51AB               	movf	main@Fcanal& (0+255),w,b
  3721  001276  5DAC               	subwf	main@i_3303& (0+255),w,b
  3722  001278  A0D8               	btfss	status,0,c
  3723  00127A  D7F3               	goto	l1021
  3724                           
  3725                           ; BSR set to: 2
  3726                           ;UT.c: 224: }
  3727                           ;UT.c: 225: for (uint8_t i=Icanal; i<=Fcanal; i++){
  3728  00127C  C29E  F2AD         	movff	main@Icanal,main@i_3304
  3729  001280  D009               	goto	l1023
  3730  001282                     
  3731                           ; BSR set to: 2
  3732                           ;UT.c: 226: SetChannelLoRaWan (i,1);
  3733                           
  3734                           ; BSR set to: 2
  3735  001282  0E01               	movlw	1
  3736  001284  0100               	movlb	0	; () banked
  3737  001286  6FF5               	movwf	SetChannelLoRaWan@ligado& (0+255),b
  3738  001288  0102               	movlb	2	; () banked
  3739  00128A  51AD               	movf	main@i_3304& (0+255),w,b
  3740  00128C  ECBC  F026         	call	_SetChannelLoRaWan
  3741  001290  0102               	movlb	2	; () banked
  3742  001292  2BAD               	incf	main@i_3304& (0+255),f,b
  3743  001294                     l1023:
  3744                           
  3745                           ; BSR set to: 2
  3746                           
  3747                           ; BSR set to: 2
  3748  001294  51AD               	movf	main@i_3304& (0+255),w,b
  3749  001296  5DAB               	subwf	main@Fcanal& (0+255),w,b
  3750  001298  B0D8               	btfsc	status,0,c
  3751  00129A  D7F3               	goto	l1024
  3752                           
  3753                           ; BSR set to: 2
  3754                           ;UT.c: 227: }
  3755                           ;UT.c: 228: if (retornaDado(0,7) == 1){
  3756                           
  3757                           ; BSR set to: 2
  3758  00129C  0E07               	movlw	7
  3759  00129E  0100               	movlb	0	; () banked
  3760  0012A0  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3761  0012A2  0E00               	movlw	0
  3762  0012A4  EC58  F027         	call	_retornaDado
  3763  0012A8  06E8               	decf	wreg,f,c
  3764  0012AA  A4D8               	btfss	status,2,c
  3765  0012AC  D096               	goto	l1026
  3766                           
  3767                           ;UT.c: 229: SetAdr(STATE_OFF);
  3768  0012AE  0EEA               	movlw	low _STATE_OFF
  3769  0012B0  0100               	movlb	0	; () banked
  3770  0012B2  6FF5               	movwf	SetAdr@state& (0+255),b
  3771  0012B4  0E7D               	movlw	high _STATE_OFF
  3772  0012B6  6FF6               	movwf	(SetAdr@state+1)& (0+255),b
  3773  0012B8  ECC2  F029         	call	_SetAdr	;wreg free
  3774                           
  3775                           ;UT.c: 230: uint8_t dr = retornaDado(2,3)<<3 | retornaDado(2,2)<<2 | retornaDado(2,1)<<1
      +                           | retornaDado(2,0);
  3776  0012BC  0E00               	movlw	0
  3777  0012BE  0100               	movlb	0	; () banked
  3778  0012C0  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3779  0012C2  0E02               	movlw	2
  3780  0012C4  EC58  F027         	call	_retornaDado
  3781  0012C8  0101               	movlb	1	; () banked
  3782  0012CA  6FEF               	movwf	??_main& (0+255),b
  3783  0012CC  0E01               	movlw	1
  3784  0012CE  0100               	movlb	0	; () banked
  3785  0012D0  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3786  0012D2  0E02               	movlw	2
  3787  0012D4  EC58  F027         	call	_retornaDado
  3788  0012D8  0101               	movlb	1	; () banked
  3789  0012DA  6FF0               	movwf	(??_main+1)& (0+255),b
  3790  0012DC  90D8               	bcf	status,0,c
  3791  0012DE  35F0               	rlcf	(??_main+1)& (0+255),w,b
  3792  0012E0  6FF1               	movwf	(??_main+2)& (0+255),b
  3793  0012E2  0E02               	movlw	2
  3794  0012E4  0100               	movlb	0	; () banked
  3795  0012E6  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3796  0012E8  0E02               	movlw	2
  3797  0012EA  EC58  F027         	call	_retornaDado
  3798  0012EE  0101               	movlb	1	; () banked
  3799  0012F0  6FF2               	movwf	(??_main+3)& (0+255),b
  3800  0012F2  90D8               	bcf	status,0,c
  3801  0012F4  37F2               	rlcf	(??_main+3)& (0+255),f,b
  3802  0012F6  90D8               	bcf	status,0,c
  3803  0012F8  37F2               	rlcf	(??_main+3)& (0+255),f,b
  3804  0012FA  0E03               	movlw	3
  3805  0012FC  0100               	movlb	0	; () banked
  3806  0012FE  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3807  001300  0E02               	movlw	2
  3808  001302  EC58  F027         	call	_retornaDado
  3809  001306  0101               	movlb	1	; () banked
  3810  001308  6FF3               	movwf	(??_main+4)& (0+255),b
  3811  00130A  90D8               	bcf	status,0,c
  3812  00130C  37F3               	rlcf	(??_main+4)& (0+255),f,b
  3813  00130E  90D8               	bcf	status,0,c
  3814  001310  37F3               	rlcf	(??_main+4)& (0+255),f,b
  3815  001312  90D8               	bcf	status,0,c
  3816  001314  35F3               	rlcf	(??_main+4)& (0+255),w,b
  3817  001316  11F2               	iorwf	(??_main+3)& (0+255),w,b
  3818  001318  11F1               	iorwf	(??_main+2)& (0+255),w,b
  3819  00131A  11EF               	iorwf	??_main& (0+255),w,b
  3820  00131C  0102               	movlb	2	; () banked
  3821  00131E  6FAE               	movwf	main@dr& (0+255),b
  3822                           
  3823                           ; BSR set to: 2
  3824                           ;UT.c: 233: DataRate(dr);
  3825                           
  3826                           ; BSR set to: 2
  3827                           
  3828                           ; BSR set to: 2
  3829                           ;UT.c: 232: dr++;
  3830                           
  3831                           ; BSR set to: 2
  3832                           
  3833                           ;UT.c: 231: if (sizeof(dadoPoco)<11 && dr==0)
  3834  001320  C2AE  F0F5         	movff	main@dr,DataRate@dr
  3835  001324  0100               	movlb	0	; () banked
  3836  001326  6BF6               	clrf	(DataRate@dr+1)& (0+255),b
  3837  001328  ECFA  F028         	call	_DataRate	;wreg free
  3838                           
  3839                           ;UT.c: 234: if (retornaDado(0,5) == 1){
  3840  00132C  0E05               	movlw	5
  3841  00132E  0100               	movlb	0	; () banked
  3842  001330  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3843  001332  0E00               	movlw	0
  3844  001334  EC58  F027         	call	_retornaDado
  3845  001338  06E8               	decf	wreg,f,c
  3846  00133A  A4D8               	btfss	status,2,c
  3847  00133C  D055               	goto	l1031
  3848                           
  3849                           ;UT.c: 235: uint8_t sf = retornaDado(2,7)<<3 | retornaDado(2,6)<<2 | retornaDado(2,5)<<1
      +                           | retornaDado(2,4);
  3850  00133E  0E04               	movlw	4
  3851  001340  0100               	movlb	0	; () banked
  3852  001342  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3853  001344  0E02               	movlw	2
  3854  001346  EC58  F027         	call	_retornaDado
  3855  00134A  0101               	movlb	1	; () banked
  3856  00134C  6FEF               	movwf	??_main& (0+255),b
  3857  00134E  0E05               	movlw	5
  3858  001350  0100               	movlb	0	; () banked
  3859  001352  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3860  001354  0E02               	movlw	2
  3861  001356  EC58  F027         	call	_retornaDado
  3862  00135A  0101               	movlb	1	; () banked
  3863  00135C  6FF0               	movwf	(??_main+1)& (0+255),b
  3864  00135E  90D8               	bcf	status,0,c
  3865  001360  35F0               	rlcf	(??_main+1)& (0+255),w,b
  3866  001362  6FF1               	movwf	(??_main+2)& (0+255),b
  3867  001364  0E06               	movlw	6
  3868  001366  0100               	movlb	0	; () banked
  3869  001368  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3870  00136A  0E02               	movlw	2
  3871  00136C  EC58  F027         	call	_retornaDado
  3872  001370  0101               	movlb	1	; () banked
  3873  001372  6FF2               	movwf	(??_main+3)& (0+255),b
  3874  001374  90D8               	bcf	status,0,c
  3875  001376  37F2               	rlcf	(??_main+3)& (0+255),f,b
  3876  001378  90D8               	bcf	status,0,c
  3877  00137A  37F2               	rlcf	(??_main+3)& (0+255),f,b
  3878  00137C  0E07               	movlw	7
  3879  00137E  0100               	movlb	0	; () banked
  3880  001380  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3881  001382  0E02               	movlw	2
  3882  001384  EC58  F027         	call	_retornaDado
  3883  001388  0101               	movlb	1	; () banked
  3884  00138A  6FF3               	movwf	(??_main+4)& (0+255),b
  3885  00138C  90D8               	bcf	status,0,c
  3886  00138E  37F3               	rlcf	(??_main+4)& (0+255),f,b
  3887  001390  90D8               	bcf	status,0,c
  3888  001392  37F3               	rlcf	(??_main+4)& (0+255),f,b
  3889  001394  90D8               	bcf	status,0,c
  3890  001396  35F3               	rlcf	(??_main+4)& (0+255),w,b
  3891  001398  11F2               	iorwf	(??_main+3)& (0+255),w,b
  3892  00139A  11F1               	iorwf	(??_main+2)& (0+255),w,b
  3893  00139C  11EF               	iorwf	??_main& (0+255),w,b
  3894  00139E  0102               	movlb	2	; () banked
  3895  0013A0  6F9F               	movwf	main@sf& (0+255),b
  3896                           
  3897                           ; BSR set to: 2
  3898                           ;UT.c: 236: SetSpreadingFactor (sf);
  3899  0013A2  519F               	movf	main@sf& (0+255),w,b
  3900  0013A4  ECA2  F029         	call	_SetSpreadingFactor
  3901                           
  3902                           ;UT.c: 237: if (retornaDado(0,6) == 0)
  3903  0013A8  0E06               	movlw	6
  3904  0013AA  0100               	movlb	0	; () banked
  3905  0013AC  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3906  0013AE  0E00               	movlw	0
  3907  0013B0  EC58  F027         	call	_retornaDado
  3908  0013B4  0900               	iorlw	0
  3909  0013B6  A4D8               	btfss	status,2,c
  3910  0013B8  D008               	goto	l1029
  3911                           
  3912                           ;UT.c: 238: SetBandWidth (125);
  3913  0013BA  0E00               	movlw	0
  3914  0013BC  0100               	movlb	0	; () banked
  3915  0013BE  6FF6               	movwf	(SetBandWidth@bw+1)& (0+255),b
  3916  0013C0  0E7D               	movlw	125
  3917  0013C2  6FF5               	movwf	SetBandWidth@bw& (0+255),b
  3918  0013C4  ECD7  F028         	call	_SetBandWidth	;wreg free
  3919  0013C8  D00F               	goto	l1031
  3920  0013CA                     l1029:
  3921                           
  3922                           ;UT.c: 239: else
  3923                           ;UT.c: 240: SetBandWidth (500);
  3924  0013CA  0E01               	movlw	1
  3925  0013CC  0100               	movlb	0	; () banked
  3926  0013CE  6FF6               	movwf	(SetBandWidth@bw+1)& (0+255),b
  3927  0013D0  0EF4               	movlw	244
  3928  0013D2  6FF5               	movwf	SetBandWidth@bw& (0+255),b
  3929  0013D4  ECD7  F028         	call	_SetBandWidth	;wreg free
  3930                           
  3931                           ;UT.c: 241: }}
  3932  0013D8  D007               	goto	l1031
  3933  0013DA                     l1026:
  3934                           
  3935                           ;UT.c: 242: else
  3936                           ;UT.c: 243: SetAdr(STATE_ON);
  3937  0013DA  0EEE               	movlw	low _STATE_ON
  3938  0013DC  0100               	movlb	0	; () banked
  3939  0013DE  6FF5               	movwf	SetAdr@state& (0+255),b
  3940  0013E0  0E7D               	movlw	high _STATE_ON
  3941  0013E2  6FF6               	movwf	(SetAdr@state+1)& (0+255),b
  3942  0013E4  ECC2  F029         	call	_SetAdr	;wreg free
  3943  0013E8                     l1031:
  3944                           
  3945                           ;UT.c: 244: MacSave();
  3946  0013E8  EC39  F02A         	call	_MacSave	;wreg free
  3947  0013EC                     l1019:
  3948                           
  3949                           ;UT.c: 245: }
  3950                           ;UT.c: 247: dadoPoco.feedback1=feedback1;
  3951  0013EC  C2F0  F2B2         	movff	_feedback1,main@dadoPoco
  3952                           
  3953                           ;UT.c: 248: dadoPoco.feedback2=feedback2;
  3954  0013F0  C2EF  F2B3         	movff	_feedback2,main@dadoPoco+1
  3955                           
  3956                           ;UT.c: 250: uint8_t resp=TxLoRaWan(1, 3, (const uint8_t*)&dadoPoco, sizeof(dadoPoco));
  3957  0013F4  0E03               	movlw	3
  3958  0013F6  0100               	movlb	0	; () banked
  3959  0013F8  6FF5               	movwf	TxLoRaWan@porta& (0+255),b
  3960  0013FA  0EB2               	movlw	low main@dadoPoco
  3961  0013FC  6FF6               	movwf	TxLoRaWan@data& (0+255),b
  3962  0013FE  0E02               	movlw	high main@dadoPoco
  3963  001400  6FF7               	movwf	(TxLoRaWan@data+1)& (0+255),b
  3964  001402  0E16               	movlw	22
  3965  001404  6FF8               	movwf	TxLoRaWan@tamData& (0+255),b
  3966  001406  0E01               	movlw	1
  3967  001408  EC00  F00D         	call	_TxLoRaWan
  3968  00140C  0102               	movlb	2	; () banked
  3969  00140E  6FA0               	movwf	main@resp& (0+255),b
  3970                           
  3971                           ; BSR set to: 2
  3972                           ;UT.c: 252: if (resp == 0){
  3973  001410  51A0               	movf	main@resp& (0+255),w,b
  3974  001412  A4D8               	btfss	status,2,c
  3975  001414  D017               	goto	l1033
  3976                           
  3977                           ; BSR set to: 2
  3978                           ;UT.c: 253: contador++;
  3979  001416  2BA1               	incf	main@contador& (0+255),f,b
  3980                           
  3981                           ; BSR set to: 2
  3982                           ;UT.c: 254: if (contador > 2 ){
  3983  001418  0E02               	movlw	2
  3984  00141A  65A1               	cpfsgt	main@contador& (0+255),b
  3985  00141C  D013               	goto	l1033
  3986                           
  3987                           ; BSR set to: 2
  3988                           ;UT.c: 255: SetAdr(STATE_OFF);
  3989  00141E  0EEA               	movlw	low _STATE_OFF
  3990  001420  0100               	movlb	0	; () banked
  3991  001422  6FF5               	movwf	SetAdr@state& (0+255),b
  3992  001424  0E7D               	movlw	high _STATE_OFF
  3993  001426  6FF6               	movwf	(SetAdr@state+1)& (0+255),b
  3994  001428  ECC2  F029         	call	_SetAdr	;wreg free
  3995                           
  3996                           ;UT.c: 256: DataRate(1);
  3997  00142C  0E00               	movlw	0
  3998  00142E  0100               	movlb	0	; () banked
  3999  001430  6FF6               	movwf	(DataRate@dr+1)& (0+255),b
  4000  001432  0E01               	movlw	1
  4001  001434  6FF5               	movwf	DataRate@dr& (0+255),b
  4002  001436  ECFA  F028         	call	_DataRate	;wreg free
  4003                           
  4004                           ;UT.c: 257: MacSave();
  4005  00143A  EC39  F02A         	call	_MacSave	;wreg free
  4006                           
  4007                           ;UT.c: 258: contador=0;
  4008  00143E  0E00               	movlw	0
  4009  001440  0102               	movlb	2	; () banked
  4010  001442  6FA1               	movwf	main@contador& (0+255),b
  4011  001444                     l1033:
  4012                           
  4013                           ; BSR set to: 2
  4014                           ;UT.c: 259: }
  4015                           ;UT.c: 260: }
  4016                           ;UT.c: 266: if (verificaUSB() && (cdc_trf_state == 0))
  4017                           
  4018                           ; BSR set to: 2
  4019                           
  4020                           ; BSR set to: 2
  4021  001444  EC89  F02A         	call	_verificaUSB	;wreg free
  4022  001448  0900               	iorlw	0
  4023  00144A  B4D8               	btfsc	status,2,c
  4024  00144C  D058               	goto	l1034
  4025  00144E  0102               	movlb	2	; () banked
  4026  001450  51E7               	movf	_cdc_trf_state& (0+255),w,b
  4027  001452  A4D8               	btfss	status,2,c
  4028  001454  D054               	goto	l1034
  4029                           
  4030                           ; BSR set to: 2
  4031                           ;UT.c: 267: {
  4032                           ;UT.c: 268: char data[150];
  4033                           ;UT.c: 270: sprintf(data,"resposta: %2X %2X %2X %2X %2X %2X %2X %2X %2X %2X  %d  %d  %d 
      +                           %d  %d  %d  %d  %d  %d  %d  %d  %d \n\r",
  4034                           ;UT.c: 271: dadosRecebidos[0].data,
  4035                           ;UT.c: 272: dadosRecebidos[1].data,
  4036                           ;UT.c: 273: dadosRecebidos[2].data,
  4037                           ;UT.c: 274: dadosRecebidos[3].data,
  4038                           ;UT.c: 275: dadosRecebidos[4].data,
  4039                           ;UT.c: 276: dadosRecebidos[5].data,
  4040                           ;UT.c: 277: dadosRecebidos[6].data,
  4041                           ;UT.c: 278: dadosRecebidos[7].data,
  4042                           ;UT.c: 279: dadosRecebidos[8].data,
  4043                           ;UT.c: 280: dadosRecebidos[9].data,
  4044  001456  0E00               	movlw	low main@data
  4045  001458  0100               	movlb	0	; () banked
  4046  00145A  6FBF               	movwf	sprintf@sp& (0+255),b
  4047  00145C  0E02               	movlw	high main@data
  4048  00145E  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  4049  001460  0E07               	movlw	low STR_1
  4050  001462  6FC1               	movwf	sprintf@f& (0+255),b
  4051  001464  0E7E               	movlw	high STR_1
  4052  001466  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  4053  001468  C301  F0C3         	movff	_dadosRecebidos+1,?_sprintf+4	;volatile
  4054  00146C  6BC4               	clrf	(?_sprintf+5)& (0+255),b
  4055  00146E  C303  F0C5         	movff	_dadosRecebidos+3,?_sprintf+6	;volatile
  4056  001472  6BC6               	clrf	(?_sprintf+7)& (0+255),b
  4057  001474  C305  F0C7         	movff	_dadosRecebidos+5,?_sprintf+8	;volatile
  4058  001478  6BC8               	clrf	(?_sprintf+9)& (0+255),b
  4059  00147A  C307  F0C9         	movff	_dadosRecebidos+7,?_sprintf+10	;volatile
  4060  00147E  6BCA               	clrf	(?_sprintf+11)& (0+255),b
  4061  001480  C309  F0CB         	movff	_dadosRecebidos+9,?_sprintf+12	;volatile
  4062  001484  6BCC               	clrf	(?_sprintf+13)& (0+255),b
  4063  001486  C30B  F0CD         	movff	_dadosRecebidos+11,?_sprintf+14	;volatile
  4064  00148A  6BCE               	clrf	(?_sprintf+15)& (0+255),b
  4065  00148C  C30D  F0CF         	movff	_dadosRecebidos+13,?_sprintf+16	;volatile
  4066  001490  6BD0               	clrf	(?_sprintf+17)& (0+255),b
  4067  001492  C30F  F0D1         	movff	_dadosRecebidos+15,?_sprintf+18	;volatile
  4068  001496  6BD2               	clrf	(?_sprintf+19)& (0+255),b
  4069  001498  C311  F0D3         	movff	_dadosRecebidos+17,?_sprintf+20	;volatile
  4070  00149C  6BD4               	clrf	(?_sprintf+21)& (0+255),b
  4071  00149E  C313  F0D5         	movff	_dadosRecebidos+19,?_sprintf+22	;volatile
  4072  0014A2  6BD6               	clrf	(?_sprintf+23)& (0+255),b
  4073  0014A4  C300  F0D7         	movff	_dadosRecebidos,?_sprintf+24	;volatile
  4074  0014A8  6BD8               	clrf	(?_sprintf+25)& (0+255),b
  4075  0014AA  C302  F0D9         	movff	_dadosRecebidos+2,?_sprintf+26	;volatile
  4076  0014AE  6BDA               	clrf	(?_sprintf+27)& (0+255),b
  4077  0014B0  C304  F0DB         	movff	_dadosRecebidos+4,?_sprintf+28	;volatile
  4078  0014B4  6BDC               	clrf	(?_sprintf+29)& (0+255),b
  4079  0014B6  C306  F0DD         	movff	_dadosRecebidos+6,?_sprintf+30	;volatile
  4080  0014BA  6BDE               	clrf	(?_sprintf+31)& (0+255),b
  4081  0014BC  C308  F0DF         	movff	_dadosRecebidos+8,?_sprintf+32	;volatile
  4082  0014C0  6BE0               	clrf	(?_sprintf+33)& (0+255),b
  4083  0014C2  C30A  F0E1         	movff	_dadosRecebidos+10,?_sprintf+34	;volatile
  4084  0014C6  6BE2               	clrf	(?_sprintf+35)& (0+255),b
  4085  0014C8  C30C  F0E3         	movff	_dadosRecebidos+12,?_sprintf+36	;volatile
  4086  0014CC  6BE4               	clrf	(?_sprintf+37)& (0+255),b
  4087  0014CE  C30E  F0E5         	movff	_dadosRecebidos+14,?_sprintf+38	;volatile
  4088  0014D2  6BE6               	clrf	(?_sprintf+39)& (0+255),b
  4089  0014D4  C310  F0E7         	movff	_dadosRecebidos+16,?_sprintf+40	;volatile
  4090  0014D8  6BE8               	clrf	(?_sprintf+41)& (0+255),b
  4091  0014DA  C312  F0E9         	movff	_dadosRecebidos+18,?_sprintf+42	;volatile
  4092  0014DE  6BEA               	clrf	(?_sprintf+43)& (0+255),b
  4093  0014E0  C2EE  F0EB         	movff	_teste0,?_sprintf+44
  4094  0014E4  6BEC               	clrf	(?_sprintf+45)& (0+255),b
  4095  0014E6  C2ED  F0ED         	movff	_teste1,?_sprintf+46
  4096  0014EA  6BEE               	clrf	(?_sprintf+47)& (0+255),b
  4097  0014EC  EC09  F000         	call	_sprintf	;wreg free
  4098                           
  4099                           ;UT.c: 294: putsUSBUSART(data);
  4100  0014F0  0E00               	movlw	low main@data
  4101  0014F2  0100               	movlb	0	; () banked
  4102  0014F4  6F60               	movwf	putsUSBUSART@data& (0+255),b
  4103  0014F6  0E02               	movlw	high main@data
  4104  0014F8  6F61               	movwf	(putsUSBUSART@data+1)& (0+255),b
  4105  0014FA  EC68  F028         	call	_putsUSBUSART	;wreg free
  4106  0014FE                     l1034:
  4107                           
  4108                           ;UT.c: 295: }
  4109                           ;UT.c: 296: uint32_t deltaTempo=(millis()-tempo);
  4110  0014FE  C296  F1EF         	movff	main@tempo,??_main
  4111  001502  C297  F1F0         	movff	main@tempo+1,??_main+1
  4112  001506  C298  F1F1         	movff	main@tempo+2,??_main+2
  4113  00150A  C299  F1F2         	movff	main@tempo+3,??_main+3
  4114  00150E  0101               	movlb	1	; () banked
  4115  001510  1FEF               	comf	??_main& (0+255),f,b
  4116  001512  1FF0               	comf	(??_main+1)& (0+255),f,b
  4117  001514  1FF1               	comf	(??_main+2)& (0+255),f,b
  4118  001516  1FF2               	comf	(??_main+3)& (0+255),f,b
  4119  001518  2BEF               	incf	??_main& (0+255),f,b
  4120  00151A  0E00               	movlw	0
  4121  00151C  23F0               	addwfc	(??_main+1)& (0+255),f,b
  4122  00151E  23F1               	addwfc	(??_main+2)& (0+255),f,b
  4123  001520  23F2               	addwfc	(??_main+3)& (0+255),f,b
  4124  001522  EC38  F02B         	call	_millis	;wreg free
  4125  001526  0101               	movlb	1	; () banked
  4126  001528  51EF               	movf	??_main& (0+255),w,b
  4127  00152A  0100               	movlb	0	; () banked
  4128  00152C  2560               	addwf	?_millis& (0+255),w,b
  4129  00152E  0102               	movlb	2	; () banked
  4130  001530  6FA2               	movwf	main@deltaTempo& (0+255),b
  4131  001532  0101               	movlb	1	; () banked
  4132  001534  51F0               	movf	(??_main+1)& (0+255),w,b
  4133  001536  0100               	movlb	0	; () banked
  4134  001538  2161               	addwfc	(?_millis+1)& (0+255),w,b
  4135  00153A  0102               	movlb	2	; () banked
  4136  00153C  6FA3               	movwf	(main@deltaTempo+1)& (0+255),b
  4137  00153E  0101               	movlb	1	; () banked
  4138  001540  51F1               	movf	(??_main+2)& (0+255),w,b
  4139  001542  0100               	movlb	0	; () banked
  4140  001544  2162               	addwfc	(?_millis+2)& (0+255),w,b
  4141  001546  0102               	movlb	2	; () banked
  4142  001548  6FA4               	movwf	(main@deltaTempo+2)& (0+255),b
  4143  00154A  0101               	movlb	1	; () banked
  4144  00154C  51F2               	movf	(??_main+3)& (0+255),w,b
  4145  00154E  0100               	movlb	0	; () banked
  4146  001550  2163               	addwfc	(?_millis+3)& (0+255),w,b
  4147  001552  0102               	movlb	2	; () banked
  4148  001554  6FA5               	movwf	(main@deltaTempo+3)& (0+255),b
  4149                           
  4150                           ; BSR set to: 2
  4151                           ;UT.c: 297: if (deltaTempo<30000)
  4152  001556  51A5               	movf	(main@deltaTempo+3)& (0+255),w,b
  4153  001558  11A4               	iorwf	(main@deltaTempo+2)& (0+255),w,b
  4154  00155A  E105               	bnz	u10681
  4155  00155C  0E30               	movlw	48
  4156  00155E  5DA2               	subwf	main@deltaTempo& (0+255),w,b
  4157  001560  0E75               	movlw	117
  4158  001562  59A3               	subwfb	(main@deltaTempo+1)& (0+255),w,b
  4159  001564  B0D8               	btfsc	status,0,c
  4160  001566                     u10681:
  4161  001566  D4D3               	goto	l1018
  4162                           
  4163                           ; BSR set to: 2
  4164                           ;UT.c: 298: {
  4165                           ;UT.c: 299: uint32_t tempoTimeOut=30000-deltaTempo;
  4166  001568  C2A2  F1EF         	movff	main@deltaTempo,??_main
  4167  00156C  C2A3  F1F0         	movff	main@deltaTempo+1,??_main+1
  4168  001570  C2A4  F1F1         	movff	main@deltaTempo+2,??_main+2
  4169  001574  C2A5  F1F2         	movff	main@deltaTempo+3,??_main+3
  4170  001578  0101               	movlb	1	; () banked
  4171  00157A  1FEF               	comf	??_main& (0+255),f,b
  4172  00157C  1FF0               	comf	(??_main+1)& (0+255),f,b
  4173  00157E  1FF1               	comf	(??_main+2)& (0+255),f,b
  4174  001580  1FF2               	comf	(??_main+3)& (0+255),f,b
  4175  001582  2BEF               	incf	??_main& (0+255),f,b
  4176  001584  0E00               	movlw	0
  4177  001586  23F0               	addwfc	(??_main+1)& (0+255),f,b
  4178  001588  23F1               	addwfc	(??_main+2)& (0+255),f,b
  4179  00158A  23F2               	addwfc	(??_main+3)& (0+255),f,b
  4180  00158C  0E30               	movlw	48
  4181  00158E  25EF               	addwf	??_main& (0+255),w,b
  4182  001590  0102               	movlb	2	; () banked
  4183  001592  6F9A               	movwf	main@tempoTimeOut& (0+255),b
  4184  001594  0E75               	movlw	117
  4185  001596  0101               	movlb	1	; () banked
  4186  001598  21F0               	addwfc	(??_main+1)& (0+255),w,b
  4187  00159A  0102               	movlb	2	; () banked
  4188  00159C  6F9B               	movwf	(main@tempoTimeOut+1)& (0+255),b
  4189  00159E  0E00               	movlw	0
  4190  0015A0  0101               	movlb	1	; () banked
  4191  0015A2  21F1               	addwfc	(??_main+2)& (0+255),w,b
  4192  0015A4  0102               	movlb	2	; () banked
  4193  0015A6  6F9C               	movwf	(main@tempoTimeOut+2)& (0+255),b
  4194  0015A8  0E00               	movlw	0
  4195  0015AA  0101               	movlb	1	; () banked
  4196  0015AC  21F2               	addwfc	(??_main+3)& (0+255),w,b
  4197  0015AE  0102               	movlb	2	; () banked
  4198  0015B0  6F9D               	movwf	(main@tempoTimeOut+3)& (0+255),b
  4199                           
  4200                           ; BSR set to: 2
  4201                           ;UT.c: 300: delay(tempoTimeOut);
  4202  0015B2  C29A  F06D         	movff	main@tempoTimeOut,delay@time
  4203  0015B6  C29B  F06E         	movff	main@tempoTimeOut+1,delay@time+1
  4204  0015BA  C29C  F06F         	movff	main@tempoTimeOut+2,delay@time+2
  4205  0015BE  C29D  F070         	movff	main@tempoTimeOut+3,delay@time+3
  4206  0015C2  EC4A  F026         	call	_delay	;wreg free
  4207  0015C6  D4A3               	goto	l1018
  4208  0015C8                     __end_of_main:
  4209                           	opt stack 0
  4210                           tblptru	equ	0xFF8
  4211                           tblptrh	equ	0xFF7
  4212                           tblptrl	equ	0xFF6
  4213                           tablat	equ	0xFF5
  4214                           postinc0	equ	0xFEE
  4215                           wreg	equ	0xFE8
  4216                           postdec1	equ	0xFE5
  4217                           fsr1l	equ	0xFE1
  4218                           status	equ	0xFD8
  4219                           
  4220 ;; *************** function _setup_uart *****************
  4221 ;; Defined at:
  4222 ;;		line 13 in file "uart/uart.c"
  4223 ;; Parameters:    Size  Location     Type
  4224 ;;  baudRate        4   13[BANK0 ] unsigned long 
  4225 ;; Auto vars:     Size  Location     Type
  4226 ;;  brg             4   17[BANK0 ] unsigned long 
  4227 ;; Return value:  Size  Location     Type
  4228 ;;                  1    wreg      void 
  4229 ;; Registers used:
  4230 ;;		wreg, status,2, status,0, cstack
  4231 ;; Tracked objects:
  4232 ;;		On entry : 0/0
  4233 ;;		On exit  : 0/0
  4234 ;;		Unchanged: 0/0
  4235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4236 ;;      Params:         0       4       0       0       0       0       0       0       0
  4237 ;;      Locals:         0       4       0       0       0       0       0       0       0
  4238 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4239 ;;      Totals:         0       8       0       0       0       0       0       0       0
  4240 ;;Total ram usage:        8 bytes
  4241 ;; Hardware stack levels used:    1
  4242 ;; Hardware stack levels required when called:   11
  4243 ;; This function calls:
  4244 ;;		___lldiv
  4245 ;; This function is called by:
  4246 ;;		_main
  4247 ;; This function uses a non-reentrant model
  4248 ;;
  4249                           
  4250                           	psect	text1
  4251  004608                     __ptext1:
  4252                           	opt stack 0
  4253  004608                     _setup_uart:
  4254                           	opt stack 19
  4255                           
  4256                           ;uart.c: 15: uint32_t brg;
  4257                           ;uart.c: 17: PORTCbits.RC6=1;
  4258                           
  4259                           ;incstack = 0
  4260  004608  8C82               	bsf	3970,6,c	;volatile
  4261                           
  4262                           ;uart.c: 18: TRISCbits.RC6=0;
  4263  00460A  9C94               	bcf	3988,6,c	;volatile
  4264                           
  4265                           ;uart.c: 20: PORTCbits.RC7=1;
  4266  00460C  8E82               	bsf	3970,7,c	;volatile
  4267                           
  4268                           ;uart.c: 21: TRISCbits.RC7=1;
  4269  00460E  8E94               	bsf	3988,7,c	;volatile
  4270                           
  4271                           ;uart.c: 23: TXSTAbits.BRGH=1;
  4272  004610  84AC               	bsf	4012,2,c	;volatile
  4273                           
  4274                           ;uart.c: 24: BAUDCONbits.BRG16=1;
  4275  004612  86B8               	bsf	4024,3,c	;volatile
  4276                           
  4277                           ;uart.c: 25: brg = ((48000000*10/4)/(baudRate)-5);
  4278  004614  0E00               	movlw	0
  4279  004616  0100               	movlb	0	; () banked
  4280  004618  6F60               	movwf	___lldiv@dividend& (0+255),b
  4281  00461A  0E0E               	movlw	14
  4282  00461C  6F61               	movwf	(___lldiv@dividend+1)& (0+255),b
  4283  00461E  0E27               	movlw	39
  4284  004620  6F62               	movwf	(___lldiv@dividend+2)& (0+255),b
  4285  004622  0E07               	movlw	7
  4286  004624  6F63               	movwf	(___lldiv@dividend+3)& (0+255),b
  4287  004626  C06D  F064         	movff	setup_uart@baudRate,___lldiv@divisor
  4288  00462A  C06E  F065         	movff	setup_uart@baudRate+1,___lldiv@divisor+1
  4289  00462E  C06F  F066         	movff	setup_uart@baudRate+2,___lldiv@divisor+2
  4290  004632  C070  F067         	movff	setup_uart@baudRate+3,___lldiv@divisor+3
  4291  004636  EC51  F025         	call	___lldiv	;wreg free
  4292  00463A  0EFB               	movlw	251
  4293  00463C  0100               	movlb	0	; () banked
  4294  00463E  2560               	addwf	?___lldiv& (0+255),w,b
  4295  004640  6F71               	movwf	setup_uart@brg& (0+255),b
  4296  004642  0EFF               	movlw	255
  4297  004644  2161               	addwfc	(?___lldiv+1)& (0+255),w,b
  4298  004646  6F72               	movwf	(setup_uart@brg+1)& (0+255),b
  4299  004648  0EFF               	movlw	255
  4300  00464A  2162               	addwfc	(?___lldiv+2)& (0+255),w,b
  4301  00464C  6F73               	movwf	(setup_uart@brg+2)& (0+255),b
  4302  00464E  0EFF               	movlw	255
  4303  004650  2163               	addwfc	(?___lldiv+3)& (0+255),w,b
  4304  004652  6F74               	movwf	(setup_uart@brg+3)& (0+255),b
  4305                           
  4306                           ;uart.c: 26: brg /= 10;
  4307  004654  C071  F060         	movff	setup_uart@brg,___lldiv@dividend
  4308  004658  C072  F061         	movff	setup_uart@brg+1,___lldiv@dividend+1
  4309  00465C  C073  F062         	movff	setup_uart@brg+2,___lldiv@dividend+2
  4310  004660  C074  F063         	movff	setup_uart@brg+3,___lldiv@dividend+3
  4311  004664  0E0A               	movlw	10
  4312  004666  6F64               	movwf	___lldiv@divisor& (0+255),b
  4313  004668  0E00               	movlw	0
  4314  00466A  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  4315  00466C  0E00               	movlw	0
  4316  00466E  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  4317  004670  0E00               	movlw	0
  4318  004672  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  4319  004674  EC51  F025         	call	___lldiv	;wreg free
  4320  004678  C060  F071         	movff	?___lldiv,setup_uart@brg
  4321  00467C  C061  F072         	movff	?___lldiv+1,setup_uart@brg+1
  4322  004680  C062  F073         	movff	?___lldiv+2,setup_uart@brg+2
  4323  004684  C063  F074         	movff	?___lldiv+3,setup_uart@brg+3
  4324                           
  4325                           ;uart.c: 27: SPBRG=(uint8_t)brg;
  4326  004688  C071  FFAF         	movff	setup_uart@brg,4015	;volatile
  4327                           
  4328                           ;uart.c: 28: SPBRGH=(uint8_t)(brg >> 8);
  4329  00468C  C072  FFB0         	movff	setup_uart@brg+1,4016	;volatile
  4330                           
  4331                           ;uart.c: 30: TXSTAbits.SYNC=0;
  4332  004690  98AC               	bcf	4012,4,c	;volatile
  4333                           
  4334                           ;uart.c: 31: TXSTAbits.SENDB=0;
  4335  004692  96AC               	bcf	4012,3,c	;volatile
  4336                           
  4337                           ;uart.c: 32: RCSTAbits.SPEN=1;
  4338  004694  8EAB               	bsf	4011,7,c	;volatile
  4339                           
  4340                           ;uart.c: 34: BAUDCONbits.TXCKP=0;
  4341  004696  98B8               	bcf	4024,4,c	;volatile
  4342                           
  4343                           ;uart.c: 35: BAUDCONbits.RXDTP=0;
  4344  004698  9AB8               	bcf	4024,5,c	;volatile
  4345                           
  4346                           ;uart.c: 36: BAUDCONbits.ABDEN=0;
  4347  00469A  90B8               	bcf	4024,0,c	;volatile
  4348                           
  4349                           ;uart.c: 37: TXSTAbits.TX9=0;
  4350  00469C  9CAC               	bcf	4012,6,c	;volatile
  4351                           
  4352                           ;uart.c: 38: RCSTAbits.RX9=0;
  4353  00469E  9CAB               	bcf	4011,6,c	;volatile
  4354                           
  4355                           ;uart.c: 40: RCSTAbits.CREN=1;
  4356  0046A0  88AB               	bsf	4011,4,c	;volatile
  4357                           
  4358                           ;uart.c: 41: TXSTAbits.TXEN=1;
  4359  0046A2  8AAC               	bsf	4012,5,c	;volatile
  4360                           
  4361                           ;uart.c: 43: RCIE=1;
  4362  0046A4  8A9D               	bsf	3997,5,c	;volatile
  4363  0046A6  0012               	return		;funcret
  4364  0046A8                     __end_of_setup_uart:
  4365                           	opt stack 0
  4366                           tblptru	equ	0xFF8
  4367                           tblptrh	equ	0xFF7
  4368                           tblptrl	equ	0xFF6
  4369                           tablat	equ	0xFF5
  4370                           postinc0	equ	0xFEE
  4371                           wreg	equ	0xFE8
  4372                           postdec1	equ	0xFE5
  4373                           fsr1l	equ	0xFE1
  4374                           status	equ	0xFD8
  4375                           
  4376 ;; *************** function _setup_pulsos *****************
  4377 ;; Defined at:
  4378 ;;		line 10 in file "Pulses.c"
  4379 ;; Parameters:    Size  Location     Type
  4380 ;;		None
  4381 ;; Auto vars:     Size  Location     Type
  4382 ;;		None
  4383 ;; Return value:  Size  Location     Type
  4384 ;;                  1    wreg      void 
  4385 ;; Registers used:
  4386 ;;		wreg, status,2
  4387 ;; Tracked objects:
  4388 ;;		On entry : 0/0
  4389 ;;		On exit  : 0/0
  4390 ;;		Unchanged: 0/0
  4391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4392 ;;      Params:         0       0       0       0       0       0       0       0       0
  4393 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4394 ;;      Temps:          0       1       0       0       0       0       0       0       0
  4395 ;;      Totals:         0       1       0       0       0       0       0       0       0
  4396 ;;Total ram usage:        1 bytes
  4397 ;; Hardware stack levels used:    1
  4398 ;; Hardware stack levels required when called:   10
  4399 ;; This function calls:
  4400 ;;		Nothing
  4401 ;; This function is called by:
  4402 ;;		_main
  4403 ;; This function uses a non-reentrant model
  4404 ;;
  4405                           
  4406                           	psect	text2
  4407  004406                     __ptext2:
  4408                           	opt stack 0
  4409  004406                     _setup_pulsos:
  4410                           	opt stack 20
  4411                           
  4412                           ;Pulses.c: 12: TRISDbits.RD0=1;
  4413                           
  4414                           ;incstack = 0
  4415  004406  8095               	bsf	3989,0,c	;volatile
  4416                           
  4417                           ;Pulses.c: 13: dig_1=PORTDbits.RD0;
  4418  004408  A083               	btfss	3971,0,c	;volatile
  4419  00440A  D004               	goto	u9370
  4420  00440C  0100               	movlb	0	; () banked
  4421  00440E  6B60               	clrf	??_setup_pulsos& (0+255),b
  4422  004410  2B60               	incf	??_setup_pulsos& (0+255),f,b
  4423  004412  D002               	goto	u9378
  4424  004414                     u9370:
  4425  004414  0100               	movlb	0	; () banked
  4426  004416  6B60               	clrf	??_setup_pulsos& (0+255),b
  4427  004418                     u9378:
  4428  004418  5160               	movf	??_setup_pulsos& (0+255),w,b
  4429  00441A  0102               	movlb	2	; () banked
  4430  00441C  6FE0               	movwf	_dig_1& (0+255),b	;volatile
  4431  00441E  6BE1               	clrf	(_dig_1+1)& (0+255),b	;volatile
  4432                           
  4433                           ; BSR set to: 2
  4434                           ;Pulses.c: 14: TRISDbits.RD1=1;
  4435  004420  8295               	bsf	3989,1,c	;volatile
  4436                           
  4437                           ;Pulses.c: 15: dig_2=PORTDbits.RD1;
  4438  004422  A283               	btfss	3971,1,c	;volatile
  4439  004424  D004               	goto	u9380
  4440  004426  0100               	movlb	0	; () banked
  4441  004428  6B60               	clrf	??_setup_pulsos& (0+255),b
  4442  00442A  2B60               	incf	??_setup_pulsos& (0+255),f,b
  4443  00442C  D002               	goto	u9388
  4444  00442E                     u9380:
  4445  00442E  0100               	movlb	0	; () banked
  4446  004430  6B60               	clrf	??_setup_pulsos& (0+255),b
  4447  004432                     u9388:
  4448  004432  5160               	movf	??_setup_pulsos& (0+255),w,b
  4449  004434  0102               	movlb	2	; () banked
  4450  004436  6FDE               	movwf	_dig_2& (0+255),b	;volatile
  4451  004438  6BDF               	clrf	(_dig_2+1)& (0+255),b	;volatile
  4452                           
  4453                           ; BSR set to: 2
  4454                           ;Pulses.c: 16: TRISDbits.RD2=1;
  4455  00443A  8495               	bsf	3989,2,c	;volatile
  4456                           
  4457                           ;Pulses.c: 17: dig_3=PORTDbits.RD2;
  4458  00443C  A483               	btfss	3971,2,c	;volatile
  4459  00443E  D004               	goto	u9390
  4460  004440  0100               	movlb	0	; () banked
  4461  004442  6B60               	clrf	??_setup_pulsos& (0+255),b
  4462  004444  2B60               	incf	??_setup_pulsos& (0+255),f,b
  4463  004446  D002               	goto	u9398
  4464  004448                     u9390:
  4465  004448  0100               	movlb	0	; () banked
  4466  00444A  6B60               	clrf	??_setup_pulsos& (0+255),b
  4467  00444C                     u9398:
  4468  00444C  5160               	movf	??_setup_pulsos& (0+255),w,b
  4469  00444E  0102               	movlb	2	; () banked
  4470  004450  6FDC               	movwf	_dig_3& (0+255),b	;volatile
  4471  004452  6BDD               	clrf	(_dig_3+1)& (0+255),b	;volatile
  4472                           
  4473                           ; BSR set to: 2
  4474                           ;Pulses.c: 18: TRISDbits.RD3=1;
  4475  004454  8695               	bsf	3989,3,c	;volatile
  4476                           
  4477                           ;Pulses.c: 19: dig_4=PORTDbits.RD3;
  4478  004456  A683               	btfss	3971,3,c	;volatile
  4479  004458  D004               	goto	u9400
  4480  00445A  0100               	movlb	0	; () banked
  4481  00445C  6B60               	clrf	??_setup_pulsos& (0+255),b
  4482  00445E  2B60               	incf	??_setup_pulsos& (0+255),f,b
  4483  004460  D002               	goto	u9408
  4484  004462                     u9400:
  4485  004462  0100               	movlb	0	; () banked
  4486  004464  6B60               	clrf	??_setup_pulsos& (0+255),b
  4487  004466                     u9408:
  4488  004466  5160               	movf	??_setup_pulsos& (0+255),w,b
  4489  004468  0102               	movlb	2	; () banked
  4490  00446A  6FDA               	movwf	_dig_4& (0+255),b	;volatile
  4491  00446C  6BDB               	clrf	(_dig_4+1)& (0+255),b	;volatile
  4492                           
  4493                           ;Pulses.c: 20: freqPulses1=0;
  4494  00446E  0E00               	movlw	0
  4495  004470  0103               	movlb	3	; () banked
  4496  004472  6F3A               	movwf	_freqPulses1& (0+255),b	;volatile
  4497  004474  0E00               	movlw	0
  4498  004476  6F3B               	movwf	(_freqPulses1+1)& (0+255),b	;volatile
  4499  004478  0E00               	movlw	0
  4500  00447A  6F3C               	movwf	(_freqPulses1+2)& (0+255),b	;volatile
  4501  00447C  0E00               	movlw	0
  4502  00447E  6F3D               	movwf	(_freqPulses1+3)& (0+255),b	;volatile
  4503                           
  4504                           ;Pulses.c: 21: freqPulses2=0;
  4505  004480  0E00               	movlw	0
  4506  004482  6F36               	movwf	_freqPulses2& (0+255),b	;volatile
  4507  004484  0E00               	movlw	0
  4508  004486  6F37               	movwf	(_freqPulses2+1)& (0+255),b	;volatile
  4509  004488  0E00               	movlw	0
  4510  00448A  6F38               	movwf	(_freqPulses2+2)& (0+255),b	;volatile
  4511  00448C  0E00               	movlw	0
  4512  00448E  6F39               	movwf	(_freqPulses2+3)& (0+255),b	;volatile
  4513                           
  4514                           ;Pulses.c: 22: freqPulses3=0;
  4515  004490  0E00               	movlw	0
  4516  004492  6F32               	movwf	_freqPulses3& (0+255),b	;volatile
  4517  004494  0E00               	movlw	0
  4518  004496  6F33               	movwf	(_freqPulses3+1)& (0+255),b	;volatile
  4519  004498  0E00               	movlw	0
  4520  00449A  6F34               	movwf	(_freqPulses3+2)& (0+255),b	;volatile
  4521  00449C  0E00               	movlw	0
  4522  00449E  6F35               	movwf	(_freqPulses3+3)& (0+255),b	;volatile
  4523                           
  4524                           ;Pulses.c: 23: freqPulses4=0;
  4525  0044A0  0E00               	movlw	0
  4526  0044A2  6F2E               	movwf	_freqPulses4& (0+255),b	;volatile
  4527  0044A4  0E00               	movlw	0
  4528  0044A6  6F2F               	movwf	(_freqPulses4+1)& (0+255),b	;volatile
  4529  0044A8  0E00               	movlw	0
  4530  0044AA  6F30               	movwf	(_freqPulses4+2)& (0+255),b	;volatile
  4531  0044AC  0E00               	movlw	0
  4532  0044AE  6F31               	movwf	(_freqPulses4+3)& (0+255),b	;volatile
  4533                           
  4534                           ; BSR set to: 3
  4535  0044B0  0012               	return		;funcret
  4536  0044B2                     __end_of_setup_pulsos:
  4537                           	opt stack 0
  4538                           tblptru	equ	0xFF8
  4539                           tblptrh	equ	0xFF7
  4540                           tblptrl	equ	0xFF6
  4541                           tablat	equ	0xFF5
  4542                           postinc0	equ	0xFEE
  4543                           wreg	equ	0xFE8
  4544                           postdec1	equ	0xFE5
  4545                           fsr1l	equ	0xFE1
  4546                           status	equ	0xFD8
  4547                           
  4548 ;; *************** function _setup_ccp1 *****************
  4549 ;; Defined at:
  4550 ;;		line 27 in file "Timer.c"
  4551 ;; Parameters:    Size  Location     Type
  4552 ;;		None
  4553 ;; Auto vars:     Size  Location     Type
  4554 ;;		None
  4555 ;; Return value:  Size  Location     Type
  4556 ;;                  1    wreg      void 
  4557 ;; Registers used:
  4558 ;;		wreg, status,2
  4559 ;; Tracked objects:
  4560 ;;		On entry : 0/0
  4561 ;;		On exit  : 0/0
  4562 ;;		Unchanged: 0/0
  4563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4564 ;;      Params:         0       0       0       0       0       0       0       0       0
  4565 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4566 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4567 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4568 ;;Total ram usage:        0 bytes
  4569 ;; Hardware stack levels used:    1
  4570 ;; Hardware stack levels required when called:   10
  4571 ;; This function calls:
  4572 ;;		Nothing
  4573 ;; This function is called by:
  4574 ;;		_main
  4575 ;; This function uses a non-reentrant model
  4576 ;;
  4577                           
  4578                           	psect	text3
  4579  00527E                     __ptext3:
  4580                           	opt stack 0
  4581  00527E                     _setup_ccp1:
  4582                           	opt stack 20
  4583                           
  4584                           ;Timer.c: 29: aaa = 1;
  4585                           
  4586                           ; BSR set to: 3
  4587                           ;incstack = 0
  4588  00527E  0E01               	movlw	1
  4589  005280  0102               	movlb	2	; () banked
  4590  005282  6FF2               	movwf	_aaa& (0+255),b
  4591                           
  4592                           ; BSR set to: 2
  4593                           ;Timer.c: 30: GIEH = 0;
  4594  005284  9EF2               	bcf	intcon,7,c	;volatile
  4595                           
  4596                           ;Timer.c: 31: T3CON=0b10111000;
  4597  005286  0EB8               	movlw	184
  4598  005288  6EB1               	movwf	4017,c	;volatile
  4599                           
  4600                           ;Timer.c: 32: TMR1H=0x00;
  4601  00528A  0E00               	movlw	0
  4602  00528C  6ECF               	movwf	4047,c	;volatile
  4603                           
  4604                           ;Timer.c: 33: TMR1L=0x00;
  4605  00528E  0E00               	movlw	0
  4606  005290  6ECE               	movwf	4046,c	;volatile
  4607                           
  4608                           ;Timer.c: 34: CCPR1H=0x05;
  4609  005292  0E05               	movlw	5
  4610  005294  6EBF               	movwf	4031,c	;volatile
  4611                           
  4612                           ;Timer.c: 35: CCPR1L=0xDC;
  4613  005296  0EDC               	movlw	220
  4614  005298  6EBE               	movwf	4030,c	;volatile
  4615                           
  4616                           ;Timer.c: 36: ticks=0;
  4617  00529A  0E00               	movlw	0
  4618  00529C  0103               	movlb	3	; () banked
  4619  00529E  6F2A               	movwf	_ticks& (0+255),b	;volatile
  4620  0052A0  0E00               	movlw	0
  4621  0052A2  6F2B               	movwf	(_ticks+1)& (0+255),b	;volatile
  4622  0052A4  0E00               	movlw	0
  4623  0052A6  6F2C               	movwf	(_ticks+2)& (0+255),b	;volatile
  4624  0052A8  0E00               	movlw	0
  4625  0052AA  6F2D               	movwf	(_ticks+3)& (0+255),b	;volatile
  4626                           
  4627                           ; BSR set to: 3
  4628                           ;Timer.c: 38: CCP1IF=0;
  4629  0052AC  949E               	bcf	3998,2,c	;volatile
  4630                           
  4631                           ;Timer.c: 39: T1CON=0b11110001;
  4632  0052AE  0EF1               	movlw	241
  4633  0052B0  6ECD               	movwf	4045,c	;volatile
  4634                           
  4635                           ;Timer.c: 40: CCP1CON = 0b00001011;
  4636  0052B2  0E0B               	movlw	11
  4637  0052B4  6EBD               	movwf	4029,c	;volatile
  4638                           
  4639                           ; BSR set to: 3
  4640                           ;Timer.c: 41: CCP1IE=1;
  4641  0052B6  849D               	bsf	3997,2,c	;volatile
  4642                           
  4643                           ; BSR set to: 3
  4644                           ;Timer.c: 42: IPR1bits.CCP1IP=1;
  4645  0052B8  849F               	bsf	3999,2,c	;volatile
  4646                           
  4647                           ; BSR set to: 3
  4648                           ;Timer.c: 43: RCONbits.IPEN = 1;
  4649  0052BA  8ED0               	bsf	4048,7,c	;volatile
  4650                           
  4651                           ; BSR set to: 3
  4652                           ;Timer.c: 44: GIEH = 1;
  4653  0052BC  8EF2               	bsf	intcon,7,c	;volatile
  4654                           
  4655                           ; BSR set to: 3
  4656  0052BE  0012               	return		;funcret
  4657  0052C0                     __end_of_setup_ccp1:
  4658                           	opt stack 0
  4659                           tblptru	equ	0xFF8
  4660                           tblptrh	equ	0xFF7
  4661                           tblptrl	equ	0xFF6
  4662                           tablat	equ	0xFF5
  4663                           intcon	equ	0xFF2
  4664                           postinc0	equ	0xFEE
  4665                           wreg	equ	0xFE8
  4666                           postdec1	equ	0xFE5
  4667                           fsr1l	equ	0xFE1
  4668                           status	equ	0xFD8
  4669                           
  4670 ;; *************** function _setup_AD *****************
  4671 ;; Defined at:
  4672 ;;		line 10 in file "AD.c"
  4673 ;; Parameters:    Size  Location     Type
  4674 ;;		None
  4675 ;; Auto vars:     Size  Location     Type
  4676 ;;		None
  4677 ;; Return value:  Size  Location     Type
  4678 ;;                  1    wreg      void 
  4679 ;; Registers used:
  4680 ;;		wreg, status,2
  4681 ;; Tracked objects:
  4682 ;;		On entry : 0/0
  4683 ;;		On exit  : 0/0
  4684 ;;		Unchanged: 0/0
  4685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4686 ;;      Params:         0       0       0       0       0       0       0       0       0
  4687 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4688 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4689 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4690 ;;Total ram usage:        0 bytes
  4691 ;; Hardware stack levels used:    1
  4692 ;; Hardware stack levels required when called:   10
  4693 ;; This function calls:
  4694 ;;		Nothing
  4695 ;; This function is called by:
  4696 ;;		_main
  4697 ;; This function uses a non-reentrant model
  4698 ;;
  4699                           
  4700                           	psect	text4
  4701  00574A                     __ptext4:
  4702                           	opt stack 0
  4703  00574A                     _setup_AD:
  4704                           	opt stack 20
  4705                           
  4706                           ;AD.c: 12: ADON=0;
  4707                           
  4708                           ; BSR set to: 3
  4709                           ;incstack = 0
  4710  00574A  90C2               	bcf	4034,0,c	;volatile
  4711                           
  4712                           ;AD.c: 13: ADCON1=0b00001101;
  4713  00574C  0E0D               	movlw	13
  4714  00574E  6EC1               	movwf	4033,c	;volatile
  4715                           
  4716                           ;AD.c: 14: ADCON2=0b10111110;
  4717  005750  0EBE               	movlw	190
  4718  005752  6EC0               	movwf	4032,c	;volatile
  4719                           
  4720                           ;AD.c: 16: ADIF=0;
  4721  005754  9C9E               	bcf	3998,6,c	;volatile
  4722                           
  4723                           ;AD.c: 17: ADIE=0;
  4724  005756  9C9D               	bcf	3997,6,c	;volatile
  4725  005758  0012               	return		;funcret
  4726  00575A                     __end_of_setup_AD:
  4727                           	opt stack 0
  4728                           tblptru	equ	0xFF8
  4729                           tblptrh	equ	0xFF7
  4730                           tblptrl	equ	0xFF6
  4731                           tablat	equ	0xFF5
  4732                           intcon	equ	0xFF2
  4733                           postinc0	equ	0xFEE
  4734                           wreg	equ	0xFE8
  4735                           postdec1	equ	0xFE5
  4736                           fsr1l	equ	0xFE1
  4737                           status	equ	0xFD8
  4738                           
  4739 ;; *************** function _putsUSBUSART *****************
  4740 ;; Defined at:
  4741 ;;		line 629 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device_cdc.c"
  4742 ;; Parameters:    Size  Location     Type
  4743 ;;  data            2    0[BANK0 ] PTR unsigned char 
  4744 ;;		 -> main@data(150), 
  4745 ;; Auto vars:     Size  Location     Type
  4746 ;;  pData           2    2[BANK0 ] PTR unsigned char 
  4747 ;;		 -> main@data(150), 
  4748 ;;  len             1    4[BANK0 ] unsigned char 
  4749 ;; Return value:  Size  Location     Type
  4750 ;;                  1    wreg      void 
  4751 ;; Registers used:
  4752 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4753 ;; Tracked objects:
  4754 ;;		On entry : 0/0
  4755 ;;		On exit  : 0/0
  4756 ;;		Unchanged: 0/0
  4757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4758 ;;      Params:         0       2       0       0       0       0       0       0       0
  4759 ;;      Locals:         0       3       0       0       0       0       0       0       0
  4760 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4761 ;;      Totals:         0       5       0       0       0       0       0       0       0
  4762 ;;Total ram usage:        5 bytes
  4763 ;; Hardware stack levels used:    1
  4764 ;; Hardware stack levels required when called:   10
  4765 ;; This function calls:
  4766 ;;		Nothing
  4767 ;; This function is called by:
  4768 ;;		_main
  4769 ;; This function uses a non-reentrant model
  4770 ;;
  4771                           
  4772                           	psect	text5
  4773  0050D0                     __ptext5:
  4774                           	opt stack 0
  4775  0050D0                     _putsUSBUSART:
  4776                           	opt stack 20
  4777                           
  4778                           ;usb_device_cdc.c: 631: uint8_t len;
  4779                           ;usb_device_cdc.c: 632: char *pData;
  4780                           ;usb_device_cdc.c: 657: {PIE2bits.USBIE = 0;};
  4781                           
  4782                           ;incstack = 0
  4783  0050D0  9AA0               	bcf	4000,5,c	;volatile
  4784                           
  4785                           ;usb_device_cdc.c: 658: if(cdc_trf_state != 0)
  4786  0050D2  0102               	movlb	2	; () banked
  4787  0050D4  51E7               	movf	_cdc_trf_state& (0+255),w,b
  4788  0050D6  B4D8               	btfsc	status,2,c
  4789  0050D8  D002               	goto	l802
  4790                           
  4791                           ; BSR set to: 2
  4792                           ;usb_device_cdc.c: 659: {
  4793                           ;usb_device_cdc.c: 660: {PIE2bits.USBIE = 1;};
  4794  0050DA  8AA0               	bsf	4000,5,c	;volatile
  4795                           
  4796                           ;usb_device_cdc.c: 661: return;
  4797  0050DC  0012               	return	
  4798  0050DE                     l802:
  4799                           
  4800                           ; BSR set to: 2
  4801                           ;usb_device_cdc.c: 662: }
  4802                           ;usb_device_cdc.c: 668: len = 0;
  4803                           
  4804                           ; BSR set to: 2
  4805  0050DE  0E00               	movlw	0
  4806  0050E0  0100               	movlb	0	; () banked
  4807  0050E2  6F64               	movwf	putsUSBUSART@len& (0+255),b
  4808                           
  4809                           ; BSR set to: 0
  4810                           ;usb_device_cdc.c: 669: pData = data;
  4811  0050E4  C060  F062         	movff	putsUSBUSART@data,putsUSBUSART@pData
  4812  0050E8  C061  F063         	movff	putsUSBUSART@data+1,putsUSBUSART@pData+1
  4813  0050EC                     
  4814                           ; BSR set to: 0
  4815                           ;usb_device_cdc.c: 671: {
  4816                           ;usb_device_cdc.c: 672: len++;
  4817                           
  4818                           ; BSR set to: 0
  4819  0050EC  2B64               	incf	putsUSBUSART@len& (0+255),f,b
  4820                           
  4821                           ; BSR set to: 0
  4822                           ;usb_device_cdc.c: 673: if(len == 255) break;
  4823  0050EE  2964               	incf	putsUSBUSART@len& (0+255),w,b
  4824  0050F0  B4D8               	btfsc	status,2,c
  4825  0050F2  D009               	goto	u9320
  4826                           
  4827                           ; BSR set to: 0
  4828                           ;usb_device_cdc.c: 674: }while(*pData++);
  4829                           
  4830                           ; BSR set to: 0
  4831                           
  4832                           ; BSR set to: 0
  4833  0050F4  C062  FFD9         	movff	putsUSBUSART@pData,fsr2l
  4834  0050F8  C063  FFDA         	movff	putsUSBUSART@pData+1,fsr2h
  4835  0050FC  4B62               	infsnz	putsUSBUSART@pData& (0+255),f,b
  4836  0050FE  2B63               	incf	(putsUSBUSART@pData+1)& (0+255),f,b
  4837  005100  50DF               	movf	indf2,w,c
  4838  005102  A4D8               	btfss	status,2,c
  4839  005104  D7F3               	goto	l804
  4840  005106                     u9320:
  4841                           
  4842                           ; BSR set to: 0
  4843                           ;usb_device_cdc.c: 682: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = len; cdc_mem_type 
      +                          = 0x01; cdc_trf_state = 1; };
  4844                           
  4845                           ; BSR set to: 0
  4846  005106  C060  F349         	movff	putsUSBUSART@data,_pCDCSrc
  4847  00510A  C061  F34A         	movff	putsUSBUSART@data+1,_pCDCSrc+1
  4848                           
  4849                           ; BSR set to: 0
  4850  00510E  C064  F051         	movff	putsUSBUSART@len,_cdc_tx_len
  4851                           
  4852                           ; BSR set to: 0
  4853  005112  0E01               	movlw	1
  4854  005114  0102               	movlb	2	; () banked
  4855  005116  6FE6               	movwf	_cdc_mem_type& (0+255),b
  4856                           
  4857                           ; BSR set to: 2
  4858  005118  0E01               	movlw	1
  4859  00511A  6FE7               	movwf	_cdc_trf_state& (0+255),b
  4860                           
  4861                           ; BSR set to: 2
  4862                           ;usb_device_cdc.c: 683: {PIE2bits.USBIE = 1;};
  4863  00511C  8AA0               	bsf	4000,5,c	;volatile
  4864                           
  4865                           ; BSR set to: 2
  4866  00511E  0012               	return		;funcret
  4867  005120                     __end_of_putsUSBUSART:
  4868                           	opt stack 0
  4869                           tblptru	equ	0xFF8
  4870                           tblptrh	equ	0xFF7
  4871                           tblptrl	equ	0xFF6
  4872                           tablat	equ	0xFF5
  4873                           intcon	equ	0xFF2
  4874                           postinc0	equ	0xFEE
  4875                           wreg	equ	0xFE8
  4876                           postdec1	equ	0xFE5
  4877                           fsr1l	equ	0xFE1
  4878                           indf2	equ	0xFDF
  4879                           fsr2h	equ	0xFDA
  4880                           fsr2l	equ	0xFD9
  4881                           status	equ	0xFD8
  4882                           
  4883 ;; *************** function _le_pulsos *****************
  4884 ;; Defined at:
  4885 ;;		line 26 in file "Pulses.c"
  4886 ;; Parameters:    Size  Location     Type
  4887 ;;  freqPulses      1    wreg     unsigned char 
  4888 ;;  modo            1    5[BANK0 ] unsigned char 
  4889 ;; Auto vars:     Size  Location     Type
  4890 ;;  freqPulses      1    9[BANK0 ] unsigned char 
  4891 ;;  freq            4   10[BANK0 ] unsigned long 
  4892 ;; Return value:  Size  Location     Type
  4893 ;;                  4    5[BANK0 ] unsigned long 
  4894 ;; Registers used:
  4895 ;;		wreg, status,2, status,0
  4896 ;; Tracked objects:
  4897 ;;		On entry : 0/0
  4898 ;;		On exit  : 0/0
  4899 ;;		Unchanged: 0/0
  4900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4901 ;;      Params:         0       4       0       0       0       0       0       0       0
  4902 ;;      Locals:         0       5       0       0       0       0       0       0       0
  4903 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4904 ;;      Totals:         0       9       0       0       0       0       0       0       0
  4905 ;;Total ram usage:        9 bytes
  4906 ;; Hardware stack levels used:    1
  4907 ;; Hardware stack levels required when called:   10
  4908 ;; This function calls:
  4909 ;;		Nothing
  4910 ;; This function is called by:
  4911 ;;		_main
  4912 ;; This function uses a non-reentrant model
  4913 ;;
  4914                           
  4915                           	psect	text6
  4916  003D30                     __ptext6:
  4917                           	opt stack 0
  4918  003D30                     _le_pulsos:
  4919                           	opt stack 20
  4920                           
  4921                           ; BSR set to: 2
  4922                           ;incstack = 0
  4923                           ;le_pulsos@freqPulses stored from wreg
  4924  003D30  0100               	movlb	0	; () banked
  4925  003D32  6F69               	movwf	le_pulsos@freqPulses& (0+255),b
  4926                           
  4927                           ;Pulses.c: 28: CCP1IE=0;
  4928  003D34  949D               	bcf	3997,2,c	;volatile
  4929                           
  4930                           ;Pulses.c: 29: uint32_t freq;
  4931                           ;Pulses.c: 30: switch(freqPulses){
  4932  003D36  D054               	goto	l1954
  4933  003D38                     l1955:
  4934                           
  4935                           ; BSR set to: 0
  4936                           ;Pulses.c: 32: freq = freqPulses1;
  4937  003D38  C33A  F06A         	movff	_freqPulses1,le_pulsos@freq	;volatile
  4938  003D3C  C33B  F06B         	movff	_freqPulses1+1,le_pulsos@freq+1	;volatile
  4939  003D40  C33C  F06C         	movff	_freqPulses1+2,le_pulsos@freq+2	;volatile
  4940  003D44  C33D  F06D         	movff	_freqPulses1+3,le_pulsos@freq+3	;volatile
  4941                           
  4942                           ; BSR set to: 0
  4943                           ;Pulses.c: 33: if (modo)
  4944  003D48  5165               	movf	le_pulsos@modo& (0+255),w,b
  4945  003D4A  B4D8               	btfsc	status,2,c
  4946  003D4C  D057               	goto	l1957
  4947                           
  4948                           ; BSR set to: 0
  4949                           ;Pulses.c: 34: freqPulses1=0;
  4950  003D4E  0E00               	movlw	0
  4951  003D50  0103               	movlb	3	; () banked
  4952  003D52  6F3A               	movwf	_freqPulses1& (0+255),b	;volatile
  4953  003D54  0E00               	movlw	0
  4954  003D56  6F3B               	movwf	(_freqPulses1+1)& (0+255),b	;volatile
  4955  003D58  0E00               	movlw	0
  4956  003D5A  6F3C               	movwf	(_freqPulses1+2)& (0+255),b	;volatile
  4957  003D5C  0E00               	movlw	0
  4958  003D5E  6F3D               	movwf	(_freqPulses1+3)& (0+255),b	;volatile
  4959                           
  4960                           ; BSR set to: 3
  4961                           ;Pulses.c: 35: break;
  4962  003D60  D04D               	goto	l1957
  4963  003D62                     l1958:
  4964                           
  4965                           ; BSR set to: 0
  4966                           ;Pulses.c: 37: freq = freqPulses2;
  4967  003D62  C336  F06A         	movff	_freqPulses2,le_pulsos@freq	;volatile
  4968  003D66  C337  F06B         	movff	_freqPulses2+1,le_pulsos@freq+1	;volatile
  4969  003D6A  C338  F06C         	movff	_freqPulses2+2,le_pulsos@freq+2	;volatile
  4970  003D6E  C339  F06D         	movff	_freqPulses2+3,le_pulsos@freq+3	;volatile
  4971                           
  4972                           ; BSR set to: 0
  4973                           ;Pulses.c: 38: if (modo)
  4974  003D72  5165               	movf	le_pulsos@modo& (0+255),w,b
  4975  003D74  B4D8               	btfsc	status,2,c
  4976  003D76  D042               	goto	l1957
  4977                           
  4978                           ; BSR set to: 0
  4979                           ;Pulses.c: 39: freqPulses2=0;
  4980  003D78  0E00               	movlw	0
  4981  003D7A  0103               	movlb	3	; () banked
  4982  003D7C  6F36               	movwf	_freqPulses2& (0+255),b	;volatile
  4983  003D7E  0E00               	movlw	0
  4984  003D80  6F37               	movwf	(_freqPulses2+1)& (0+255),b	;volatile
  4985  003D82  0E00               	movlw	0
  4986  003D84  6F38               	movwf	(_freqPulses2+2)& (0+255),b	;volatile
  4987  003D86  0E00               	movlw	0
  4988  003D88  6F39               	movwf	(_freqPulses2+3)& (0+255),b	;volatile
  4989                           
  4990                           ; BSR set to: 3
  4991                           ;Pulses.c: 40: break;
  4992  003D8A  D038               	goto	l1957
  4993  003D8C                     l1960:
  4994                           
  4995                           ; BSR set to: 0
  4996                           ;Pulses.c: 42: freq = freqPulses3;
  4997  003D8C  C332  F06A         	movff	_freqPulses3,le_pulsos@freq	;volatile
  4998  003D90  C333  F06B         	movff	_freqPulses3+1,le_pulsos@freq+1	;volatile
  4999  003D94  C334  F06C         	movff	_freqPulses3+2,le_pulsos@freq+2	;volatile
  5000  003D98  C335  F06D         	movff	_freqPulses3+3,le_pulsos@freq+3	;volatile
  5001                           
  5002                           ; BSR set to: 0
  5003                           ;Pulses.c: 43: if (modo)
  5004  003D9C  5165               	movf	le_pulsos@modo& (0+255),w,b
  5005  003D9E  B4D8               	btfsc	status,2,c
  5006  003DA0  D02D               	goto	l1957
  5007                           
  5008                           ; BSR set to: 0
  5009                           ;Pulses.c: 44: freqPulses3=0;
  5010  003DA2  0E00               	movlw	0
  5011  003DA4  0103               	movlb	3	; () banked
  5012  003DA6  6F32               	movwf	_freqPulses3& (0+255),b	;volatile
  5013  003DA8  0E00               	movlw	0
  5014  003DAA  6F33               	movwf	(_freqPulses3+1)& (0+255),b	;volatile
  5015  003DAC  0E00               	movlw	0
  5016  003DAE  6F34               	movwf	(_freqPulses3+2)& (0+255),b	;volatile
  5017  003DB0  0E00               	movlw	0
  5018  003DB2  6F35               	movwf	(_freqPulses3+3)& (0+255),b	;volatile
  5019                           
  5020                           ; BSR set to: 3
  5021                           ;Pulses.c: 45: break;
  5022  003DB4  D023               	goto	l1957
  5023  003DB6                     l1962:
  5024                           
  5025                           ; BSR set to: 0
  5026                           ;Pulses.c: 47: freq = freqPulses4;
  5027  003DB6  C32E  F06A         	movff	_freqPulses4,le_pulsos@freq	;volatile
  5028  003DBA  C32F  F06B         	movff	_freqPulses4+1,le_pulsos@freq+1	;volatile
  5029  003DBE  C330  F06C         	movff	_freqPulses4+2,le_pulsos@freq+2	;volatile
  5030  003DC2  C331  F06D         	movff	_freqPulses4+3,le_pulsos@freq+3	;volatile
  5031                           
  5032                           ; BSR set to: 0
  5033                           ;Pulses.c: 48: if (modo)
  5034  003DC6  5165               	movf	le_pulsos@modo& (0+255),w,b
  5035  003DC8  B4D8               	btfsc	status,2,c
  5036  003DCA  D018               	goto	l1957
  5037                           
  5038                           ; BSR set to: 0
  5039                           ;Pulses.c: 49: freqPulses4=0;
  5040  003DCC  0E00               	movlw	0
  5041  003DCE  0103               	movlb	3	; () banked
  5042  003DD0  6F2E               	movwf	_freqPulses4& (0+255),b	;volatile
  5043  003DD2  0E00               	movlw	0
  5044  003DD4  6F2F               	movwf	(_freqPulses4+1)& (0+255),b	;volatile
  5045  003DD6  0E00               	movlw	0
  5046  003DD8  6F30               	movwf	(_freqPulses4+2)& (0+255),b	;volatile
  5047  003DDA  0E00               	movlw	0
  5048  003DDC  6F31               	movwf	(_freqPulses4+3)& (0+255),b	;volatile
  5049                           
  5050                           ; BSR set to: 3
  5051                           ;Pulses.c: 51: }
  5052                           
  5053                           ; BSR set to: 3
  5054                           ;Pulses.c: 50: break;
  5055  003DDE  D00E               	goto	l1957
  5056  003DE0                     l1954:
  5057                           
  5058                           ; BSR set to: 3
  5059  003DE0  0100               	movlb	0	; () banked
  5060  003DE2  5169               	movf	le_pulsos@freqPulses& (0+255),w,b
  5061                           
  5062                           ; Switch size 1, requested type "space"
  5063                           ; Number of cases is 4, Range of values is 1 to 4
  5064                           ; switch strategies available:
  5065                           ; Name         Instructions Cycles
  5066                           ; simple_byte           13     7 (average)
  5067                           ;	Chosen strategy is simple_byte
  5068  003DE4  0A01               	xorlw	1	; case 1
  5069  003DE6  B4D8               	btfsc	status,2,c
  5070  003DE8  D7A7               	goto	l1955
  5071  003DEA  0A03               	xorlw	3	; case 2
  5072  003DEC  B4D8               	btfsc	status,2,c
  5073  003DEE  D7B9               	goto	l1958
  5074  003DF0  0A01               	xorlw	1	; case 3
  5075  003DF2  B4D8               	btfsc	status,2,c
  5076  003DF4  D7CB               	goto	l1960
  5077  003DF6  0A07               	xorlw	7	; case 4
  5078  003DF8  B4D8               	btfsc	status,2,c
  5079  003DFA  D7DD               	goto	l1962
  5080  003DFC                     l1957:
  5081                           
  5082                           ;Pulses.c: 53: CCP1IE=1;
  5083  003DFC  849D               	bsf	3997,2,c	;volatile
  5084                           
  5085                           ;Pulses.c: 54: return freq;
  5086  003DFE  C06A  F065         	movff	le_pulsos@freq,?_le_pulsos
  5087  003E02  C06B  F066         	movff	le_pulsos@freq+1,?_le_pulsos+1
  5088  003E06  C06C  F067         	movff	le_pulsos@freq+2,?_le_pulsos+2
  5089  003E0A  C06D  F068         	movff	le_pulsos@freq+3,?_le_pulsos+3
  5090  003E0E  0012               	return		;funcret
  5091  003E10                     __end_of_le_pulsos:
  5092                           	opt stack 0
  5093                           tblptru	equ	0xFF8
  5094                           tblptrh	equ	0xFF7
  5095                           tblptrl	equ	0xFF6
  5096                           tablat	equ	0xFF5
  5097                           intcon	equ	0xFF2
  5098                           postinc0	equ	0xFEE
  5099                           wreg	equ	0xFE8
  5100                           postdec1	equ	0xFE5
  5101                           fsr1l	equ	0xFE1
  5102                           indf2	equ	0xFDF
  5103                           fsr2h	equ	0xFDA
  5104                           fsr2l	equ	0xFD9
  5105                           status	equ	0xFD8
  5106                           
  5107 ;; *************** function _le_AD *****************
  5108 ;; Defined at:
  5109 ;;		line 20 in file "AD.c"
  5110 ;; Parameters:    Size  Location     Type
  5111 ;;  AnalogPort      1    wreg     unsigned char 
  5112 ;; Auto vars:     Size  Location     Type
  5113 ;;  AnalogPort      1   73[BANK0 ] unsigned char 
  5114 ;;  i               2   76[BANK0 ] int 
  5115 ;;  corrente        3   70[BANK0 ] float 
  5116 ;;  leitura         2   78[BANK0 ] unsigned int 
  5117 ;;  leituraAux      2   74[BANK0 ] unsigned int 
  5118 ;; Return value:  Size  Location     Type
  5119 ;;                  3   62[BANK0 ] float 
  5120 ;; Registers used:
  5121 ;;		wreg, status,2, status,0, cstack
  5122 ;; Tracked objects:
  5123 ;;		On entry : 0/0
  5124 ;;		On exit  : 0/0
  5125 ;;		Unchanged: 0/0
  5126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5127 ;;      Params:         0       3       0       0       0       0       0       0       0
  5128 ;;      Locals:         0      13       0       0       0       0       0       0       0
  5129 ;;      Temps:          0       2       0       0       0       0       0       0       0
  5130 ;;      Totals:         0      18       0       0       0       0       0       0       0
  5131 ;;Total ram usage:       18 bytes
  5132 ;; Hardware stack levels used:    1
  5133 ;; Hardware stack levels required when called:   12
  5134 ;; This function calls:
  5135 ;;		___awtoft
  5136 ;;		___ftadd
  5137 ;;		___ftdiv
  5138 ;;		___ftmul
  5139 ;; This function is called by:
  5140 ;;		_main
  5141 ;; This function uses a non-reentrant model
  5142 ;;
  5143                           
  5144                           	psect	text7
  5145  00320E                     __ptext7:
  5146                           	opt stack 0
  5147  00320E                     _le_AD:
  5148                           	opt stack 18
  5149                           
  5150                           ;incstack = 0
  5151                           ;le_AD@AnalogPort stored from wreg
  5152  00320E  0100               	movlb	0	; () banked
  5153  003210  6FA9               	movwf	le_AD@AnalogPort& (0+255),b
  5154                           
  5155                           ;AD.c: 22: if (AnalogPort == 0){
  5156  003212  0100               	movlb	0	; () banked
  5157  003214  51A9               	movf	le_AD@AnalogPort& (0+255),w,b
  5158  003216  A4D8               	btfss	status,2,c
  5159  003218  D002               	goto	l1849
  5160                           
  5161                           ; BSR set to: 0
  5162                           ;AD.c: 23: ADCON0=0b00000001;
  5163  00321A  0E01               	movlw	1
  5164  00321C  6EC2               	movwf	4034,c	;volatile
  5165  00321E                     l1849:
  5166                           
  5167                           ; BSR set to: 0
  5168                           ;AD.c: 24: }
  5169                           ;AD.c: 25: if (AnalogPort == 1){
  5170                           
  5171                           ; BSR set to: 0
  5172  00321E  05A9               	decf	le_AD@AnalogPort& (0+255),w,b
  5173  003220  A4D8               	btfss	status,2,c
  5174  003222  D002               	goto	l1850
  5175                           
  5176                           ; BSR set to: 0
  5177                           ;AD.c: 26: ADCON0=0b00000101;
  5178  003224  0E05               	movlw	5
  5179  003226  6EC2               	movwf	4034,c	;volatile
  5180  003228                     l1850:
  5181                           
  5182                           ; BSR set to: 0
  5183                           ;AD.c: 27: }
  5184                           ;AD.c: 35: float corrente;
  5185                           ;AD.c: 37: uint16_t leituraAux;
  5186                           ;AD.c: 38: uint16_t leitura=0;
  5187  003228  0E00               	movlw	0
  5188  00322A  6FAF               	movwf	(le_AD@leitura+1)& (0+255),b
  5189  00322C  0E00               	movlw	0
  5190  00322E  6FAE               	movwf	le_AD@leitura& (0+255),b
  5191                           
  5192                           ;AD.c: 40: for (int i=0;i<32;i++)
  5193  003230  0E00               	movlw	0
  5194  003232  6FAD               	movwf	(le_AD@i+1)& (0+255),b
  5195  003234  0E00               	movlw	0
  5196  003236  6FAC               	movwf	le_AD@i& (0+255),b
  5197  003238                     l9827:
  5198                           
  5199                           ; BSR set to: 0
  5200  003238  BFAD               	btfsc	(le_AD@i+1)& (0+255),7,b
  5201  00323A  D006               	goto	l1851
  5202  00323C  51AD               	movf	(le_AD@i+1)& (0+255),w,b
  5203  00323E  E119               	bnz	l9839
  5204  003240  0E20               	movlw	32
  5205  003242  5DAC               	subwf	le_AD@i& (0+255),w,b
  5206  003244  B0D8               	btfsc	status,0,c
  5207  003246  D015               	goto	u9460
  5208  003248                     l1851:
  5209                           
  5210                           ; BSR set to: 0
  5211                           ;AD.c: 41: {
  5212                           ;AD.c: 42: GO_DONE=1;
  5213  003248  82C2               	bsf	4034,1,c	;volatile
  5214                           
  5215                           ;AD.c: 43: __nop();
  5216  00324A  F000               	nop	
  5217  00324C  B2C2               	btfsc	4034,1,c	;volatile
  5218  00324E  D7FE               	goto	l1854
  5219                           
  5220                           ;AD.c: 47: leituraAux=ADRESH;
  5221  003250  CFC4 F0AA          	movff	4036,le_AD@leituraAux	;volatile
  5222  003254  0100               	movlb	0	; () banked
  5223  003256  6BAB               	clrf	(le_AD@leituraAux+1)& (0+255),b
  5224                           
  5225                           ; BSR set to: 0
  5226                           ;AD.c: 48: leituraAux=(leituraAux <<8) | ADRESL;
  5227  003258  51AA               	movf	le_AD@leituraAux& (0+255),w,b
  5228  00325A  6FA1               	movwf	??_le_AD& (0+255),b
  5229  00325C  50C3               	movf	4035,w,c	;volatile
  5230  00325E  6FAA               	movwf	le_AD@leituraAux& (0+255),b
  5231  003260  C0A1  F0AB         	movff	??_le_AD,le_AD@leituraAux+1
  5232                           
  5233                           ; BSR set to: 0
  5234                           ;AD.c: 49: leitura+=leituraAux;
  5235  003264  51AA               	movf	le_AD@leituraAux& (0+255),w,b
  5236  003266  27AE               	addwf	le_AD@leitura& (0+255),f,b
  5237  003268  51AB               	movf	(le_AD@leituraAux+1)& (0+255),w,b
  5238  00326A  23AF               	addwfc	(le_AD@leitura+1)& (0+255),f,b
  5239                           
  5240                           ; BSR set to: 0
  5241  00326C  4BAC               	infsnz	le_AD@i& (0+255),f,b
  5242  00326E  2BAD               	incf	(le_AD@i+1)& (0+255),f,b
  5243  003270  D7E3               	goto	l9827
  5244  003272                     u9460:
  5245  003272                     l9839:
  5246                           
  5247                           ; BSR set to: 0
  5248                           ;AD.c: 51: }
  5249                           ;AD.c: 53: leitura>>=5;
  5250  003272  0E05               	movlw	5
  5251  003274  6FA1               	movwf	??_le_AD& (0+255),b
  5252  003276                     u9475:
  5253  003276  90D8               	bcf	status,0,c
  5254  003278  33AF               	rrcf	(le_AD@leitura+1)& (0+255),f,b
  5255  00327A  33AE               	rrcf	le_AD@leitura& (0+255),f,b
  5256  00327C  2FA1               	decfsz	??_le_AD& (0+255),f,b
  5257  00327E  D7FB               	goto	u9475
  5258                           
  5259                           ;AD.c: 55: if (leitura==0)
  5260  003280  51AE               	movf	le_AD@leitura& (0+255),w,b
  5261  003282  11AF               	iorwf	(le_AD@leitura+1)& (0+255),w,b
  5262  003284  A4D8               	btfss	status,2,c
  5263  003286  D007               	goto	l1856
  5264                           
  5265                           ; BSR set to: 0
  5266                           ;AD.c: 56: corrente=0;
  5267  003288  0E00               	movlw	0
  5268  00328A  6FA6               	movwf	le_AD@corrente& (0+255),b
  5269  00328C  0E00               	movlw	0
  5270  00328E  6FA7               	movwf	(le_AD@corrente+1)& (0+255),b
  5271  003290  0E00               	movlw	0
  5272  003292  6FA8               	movwf	(le_AD@corrente+2)& (0+255),b
  5273  003294  D04B               	goto	l1857
  5274  003296                     l1856:
  5275                           
  5276                           ; BSR set to: 0
  5277                           ;AD.c: 57: else
  5278                           ;AD.c: 58: corrente=((int16_t) leitura-195.0)*16.0/784.0+4.0;
  5279                           
  5280                           ; BSR set to: 0
  5281  003296  0E00               	movlw	0
  5282  003298  6F92               	movwf	___ftdiv@f2& (0+255),b
  5283  00329A  0E44               	movlw	68
  5284  00329C  6F93               	movwf	(___ftdiv@f2+1)& (0+255),b
  5285  00329E  0E44               	movlw	68
  5286  0032A0  6F94               	movwf	(___ftdiv@f2+2)& (0+255),b
  5287  0032A2  0E00               	movlw	0
  5288  0032A4  6F83               	movwf	___ftmul@f2& (0+255),b
  5289  0032A6  0E80               	movlw	128
  5290  0032A8  6F84               	movwf	(___ftmul@f2+1)& (0+255),b
  5291  0032AA  0E41               	movlw	65
  5292  0032AC  6F85               	movwf	(___ftmul@f2+2)& (0+255),b
  5293  0032AE  0E00               	movlw	0
  5294  0032B0  6F77               	movwf	___ftadd@f2& (0+255),b
  5295  0032B2  0E43               	movlw	67
  5296  0032B4  6F78               	movwf	(___ftadd@f2+1)& (0+255),b
  5297  0032B6  0EC3               	movlw	195
  5298  0032B8  6F79               	movwf	(___ftadd@f2+2)& (0+255),b
  5299  0032BA  C0AE  F068         	movff	le_AD@leitura,___awtoft@c
  5300  0032BE  C0AF  F069         	movff	le_AD@leitura+1,___awtoft@c+1
  5301  0032C2  ECFF  F029         	call	___awtoft	;wreg free
  5302  0032C6  C068  F074         	movff	?___awtoft,___ftadd@f1
  5303  0032CA  C069  F075         	movff	?___awtoft+1,___ftadd@f1+1
  5304  0032CE  C06A  F076         	movff	?___awtoft+2,___ftadd@f1+2
  5305  0032D2  EC8F  F014         	call	___ftadd	;wreg free
  5306  0032D6  C074  F080         	movff	?___ftadd,___ftmul@f1
  5307  0032DA  C075  F081         	movff	?___ftadd+1,___ftmul@f1+1
  5308  0032DE  C076  F082         	movff	?___ftadd+2,___ftmul@f1+2
  5309  0032E2  EC38  F01D         	call	___ftmul	;wreg free
  5310  0032E6  C080  F08F         	movff	?___ftmul,___ftdiv@f1
  5311  0032EA  C081  F090         	movff	?___ftmul+1,___ftdiv@f1+1
  5312  0032EE  C082  F091         	movff	?___ftmul+2,___ftdiv@f1+2
  5313  0032F2  ECB3  F01D         	call	___ftdiv	;wreg free
  5314  0032F6  C08F  F0A3         	movff	?___ftdiv,_le_AD$5821
  5315  0032FA  C090  F0A4         	movff	?___ftdiv+1,_le_AD$5821+1
  5316  0032FE  C091  F0A5         	movff	?___ftdiv+2,_le_AD$5821+2
  5317                           
  5318                           ;AD.c: 57: else
  5319                           ;AD.c: 58: corrente=((int16_t) leitura-195.0)*16.0/784.0+4.0;
  5320  003302  C0A3  F074         	movff	_le_AD$5821,___ftadd@f1
  5321  003306  C0A4  F075         	movff	_le_AD$5821+1,___ftadd@f1+1
  5322  00330A  C0A5  F076         	movff	_le_AD$5821+2,___ftadd@f1+2
  5323  00330E  0E00               	movlw	0
  5324  003310  0100               	movlb	0	; () banked
  5325  003312  6F77               	movwf	___ftadd@f2& (0+255),b
  5326  003314  0E80               	movlw	128
  5327  003316  6F78               	movwf	(___ftadd@f2+1)& (0+255),b
  5328  003318  0E40               	movlw	64
  5329  00331A  6F79               	movwf	(___ftadd@f2+2)& (0+255),b
  5330  00331C  EC8F  F014         	call	___ftadd	;wreg free
  5331  003320  C074  F0A6         	movff	?___ftadd,le_AD@corrente
  5332  003324  C075  F0A7         	movff	?___ftadd+1,le_AD@corrente+1
  5333  003328  C076  F0A8         	movff	?___ftadd+2,le_AD@corrente+2
  5334  00332C                     l1857:
  5335                           
  5336                           ;AD.c: 60: return corrente;
  5337  00332C  C0A6  F09E         	movff	le_AD@corrente,?_le_AD
  5338  003330  C0A7  F09F         	movff	le_AD@corrente+1,?_le_AD+1
  5339  003334  C0A8  F0A0         	movff	le_AD@corrente+2,?_le_AD+2
  5340  003338  0012               	return	
  5341  00333A                     __end_of_le_AD:
  5342                           	opt stack 0
  5343                           tblptru	equ	0xFF8
  5344                           tblptrh	equ	0xFF7
  5345                           tblptrl	equ	0xFF6
  5346                           tablat	equ	0xFF5
  5347                           intcon	equ	0xFF2
  5348                           postinc0	equ	0xFEE
  5349                           wreg	equ	0xFE8
  5350                           postdec1	equ	0xFE5
  5351                           fsr1l	equ	0xFE1
  5352                           indf2	equ	0xFDF
  5353                           fsr2h	equ	0xFDA
  5354                           fsr2l	equ	0xFD9
  5355                           status	equ	0xFD8
  5356                           
  5357 ;; *************** function ___ftdiv *****************
  5358 ;; Defined at:
  5359 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftdiv.c"
  5360 ;; Parameters:    Size  Location     Type
  5361 ;;  f1              3   47[BANK0 ] float 
  5362 ;;  f2              3   50[BANK0 ] float 
  5363 ;; Auto vars:     Size  Location     Type
  5364 ;;  f3              3   57[BANK0 ] float 
  5365 ;;  sign            1   61[BANK0 ] unsigned char 
  5366 ;;  exp             1   60[BANK0 ] unsigned char 
  5367 ;;  cntr            1   56[BANK0 ] unsigned char 
  5368 ;; Return value:  Size  Location     Type
  5369 ;;                  3   47[BANK0 ] float 
  5370 ;; Registers used:
  5371 ;;		wreg, status,2, status,0, cstack
  5372 ;; Tracked objects:
  5373 ;;		On entry : 0/0
  5374 ;;		On exit  : 0/0
  5375 ;;		Unchanged: 0/0
  5376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5377 ;;      Params:         0       6       0       0       0       0       0       0       0
  5378 ;;      Locals:         0       6       0       0       0       0       0       0       0
  5379 ;;      Temps:          0       3       0       0       0       0       0       0       0
  5380 ;;      Totals:         0      15       0       0       0       0       0       0       0
  5381 ;;Total ram usage:       15 bytes
  5382 ;; Hardware stack levels used:    1
  5383 ;; Hardware stack levels required when called:   11
  5384 ;; This function calls:
  5385 ;;		___ftpack
  5386 ;; This function is called by:
  5387 ;;		_le_AD
  5388 ;; This function uses a non-reentrant model
  5389 ;;
  5390                           
  5391                           	psect	text8
  5392  003B66                     __ptext8:
  5393                           	opt stack 0
  5394  003B66                     ___ftdiv:
  5395                           	opt stack 18
  5396                           
  5397                           ;incstack = 0
  5398  003B66  C091  F095         	movff	___ftdiv@f1+2,??___ftdiv
  5399  003B6A  0100               	movlb	0	; () banked
  5400  003B6C  6B96               	clrf	(??___ftdiv+1)& (0+255),b
  5401  003B6E  6B97               	clrf	(??___ftdiv+2)& (0+255),b
  5402  003B70  3590               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  5403  003B72  3795               	rlcf	??___ftdiv& (0+255),f,b
  5404  003B74  E301               	bnc	u8711
  5405  003B76  8196               	bsf	(??___ftdiv+1)& (0+255),0,b
  5406  003B78                     u8711:
  5407  003B78  5195               	movf	??___ftdiv& (0+255),w,b
  5408  003B7A  6F9C               	movwf	___ftdiv@exp& (0+255),b
  5409  003B7C  519C               	movf	___ftdiv@exp& (0+255),w,b
  5410  003B7E  A4D8               	btfss	status,2,c
  5411  003B80  D007               	goto	l2892
  5412                           
  5413                           ; BSR set to: 0
  5414  003B82  0E00               	movlw	0
  5415  003B84  6F8F               	movwf	?___ftdiv& (0+255),b
  5416  003B86  0E00               	movlw	0
  5417  003B88  6F90               	movwf	(?___ftdiv+1)& (0+255),b
  5418  003B8A  0E00               	movlw	0
  5419  003B8C  6F91               	movwf	(?___ftdiv+2)& (0+255),b
  5420                           
  5421                           ; BSR set to: 0
  5422  003B8E  0012               	return	
  5423  003B90                     l2892:
  5424                           
  5425                           ; BSR set to: 0
  5426                           
  5427                           ; BSR set to: 0
  5428  003B90  C094  F095         	movff	___ftdiv@f2+2,??___ftdiv
  5429  003B94  6B96               	clrf	(??___ftdiv+1)& (0+255),b
  5430  003B96  6B97               	clrf	(??___ftdiv+2)& (0+255),b
  5431  003B98  3593               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  5432  003B9A  3795               	rlcf	??___ftdiv& (0+255),f,b
  5433  003B9C  E301               	bnc	u8731
  5434  003B9E  8196               	bsf	(??___ftdiv+1)& (0+255),0,b
  5435  003BA0                     u8731:
  5436  003BA0  5195               	movf	??___ftdiv& (0+255),w,b
  5437  003BA2  6F9D               	movwf	___ftdiv@sign& (0+255),b
  5438  003BA4  519D               	movf	___ftdiv@sign& (0+255),w,b
  5439  003BA6  A4D8               	btfss	status,2,c
  5440  003BA8  D007               	goto	l2894
  5441                           
  5442                           ; BSR set to: 0
  5443  003BAA  0E00               	movlw	0
  5444  003BAC  6F8F               	movwf	?___ftdiv& (0+255),b
  5445  003BAE  0E00               	movlw	0
  5446  003BB0  6F90               	movwf	(?___ftdiv+1)& (0+255),b
  5447  003BB2  0E00               	movlw	0
  5448  003BB4  6F91               	movwf	(?___ftdiv+2)& (0+255),b
  5449                           
  5450                           ; BSR set to: 0
  5451  003BB6  0012               	return	
  5452  003BB8                     l2894:
  5453                           
  5454                           ; BSR set to: 0
  5455                           
  5456                           ; BSR set to: 0
  5457  003BB8  0E00               	movlw	0
  5458  003BBA  6F99               	movwf	___ftdiv@f3& (0+255),b
  5459  003BBC  0E00               	movlw	0
  5460  003BBE  6F9A               	movwf	(___ftdiv@f3+1)& (0+255),b
  5461  003BC0  0E00               	movlw	0
  5462  003BC2  6F9B               	movwf	(___ftdiv@f3+2)& (0+255),b
  5463                           
  5464                           ; BSR set to: 0
  5465  003BC4  519D               	movf	___ftdiv@sign& (0+255),w,b
  5466  003BC6  0F89               	addlw	137
  5467  003BC8  5F9C               	subwf	___ftdiv@exp& (0+255),f,b
  5468                           
  5469                           ; BSR set to: 0
  5470  003BCA  C091  F09D         	movff	___ftdiv@f1+2,___ftdiv@sign
  5471                           
  5472                           ; BSR set to: 0
  5473  003BCE  5194               	movf	(___ftdiv@f2+2)& (0+255),w,b
  5474  003BD0  1B9D               	xorwf	___ftdiv@sign& (0+255),f,b
  5475                           
  5476                           ; BSR set to: 0
  5477  003BD2  0E80               	movlw	128
  5478  003BD4  179D               	andwf	___ftdiv@sign& (0+255),f,b
  5479                           
  5480                           ; BSR set to: 0
  5481  003BD6  8F90               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  5482                           
  5483                           ; BSR set to: 0
  5484  003BD8  0EFF               	movlw	255
  5485  003BDA  178F               	andwf	___ftdiv@f1& (0+255),f,b
  5486  003BDC  0EFF               	movlw	255
  5487  003BDE  1790               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  5488  003BE0  0E00               	movlw	0
  5489  003BE2  1791               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  5490                           
  5491                           ; BSR set to: 0
  5492  003BE4  8F93               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  5493                           
  5494                           ; BSR set to: 0
  5495  003BE6  0EFF               	movlw	255
  5496  003BE8  1792               	andwf	___ftdiv@f2& (0+255),f,b
  5497  003BEA  0EFF               	movlw	255
  5498  003BEC  1793               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  5499  003BEE  0E00               	movlw	0
  5500  003BF0  1794               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  5501                           
  5502                           ; BSR set to: 0
  5503  003BF2  0E18               	movlw	24
  5504  003BF4  6F98               	movwf	___ftdiv@cntr& (0+255),b
  5505  003BF6                     
  5506                           ; BSR set to: 0
  5507                           
  5508                           ; BSR set to: 0
  5509  003BF6  90D8               	bcf	status,0,c
  5510  003BF8  3799               	rlcf	___ftdiv@f3& (0+255),f,b
  5511  003BFA  379A               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  5512  003BFC  379B               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  5513                           
  5514                           ; BSR set to: 0
  5515  003BFE  5192               	movf	___ftdiv@f2& (0+255),w,b
  5516  003C00  5D8F               	subwf	___ftdiv@f1& (0+255),w,b
  5517  003C02  5193               	movf	(___ftdiv@f2+1)& (0+255),w,b
  5518  003C04  5990               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  5519  003C06  5194               	movf	(___ftdiv@f2+2)& (0+255),w,b
  5520  003C08  5991               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  5521  003C0A  A0D8               	btfss	status,0,c
  5522  003C0C  D007               	goto	l2896
  5523                           
  5524                           ; BSR set to: 0
  5525  003C0E  5192               	movf	___ftdiv@f2& (0+255),w,b
  5526  003C10  5F8F               	subwf	___ftdiv@f1& (0+255),f,b
  5527  003C12  5193               	movf	(___ftdiv@f2+1)& (0+255),w,b
  5528  003C14  5B90               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  5529  003C16  5194               	movf	(___ftdiv@f2+2)& (0+255),w,b
  5530  003C18  5B91               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  5531                           
  5532                           ; BSR set to: 0
  5533  003C1A  8199               	bsf	___ftdiv@f3& (0+255),0,b
  5534  003C1C                     l2896:
  5535                           
  5536                           ; BSR set to: 0
  5537  003C1C  90D8               	bcf	status,0,c
  5538  003C1E  378F               	rlcf	___ftdiv@f1& (0+255),f,b
  5539  003C20  3790               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  5540  003C22  3791               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  5541                           
  5542                           ; BSR set to: 0
  5543  003C24  2F98               	decfsz	___ftdiv@cntr& (0+255),f,b
  5544  003C26  D7E7               	goto	l2895
  5545                           
  5546                           ; BSR set to: 0
  5547                           
  5548                           ; BSR set to: 0
  5549  003C28  C099  F060         	movff	___ftdiv@f3,___ftpack@arg
  5550  003C2C  C09A  F061         	movff	___ftdiv@f3+1,___ftpack@arg+1
  5551  003C30  C09B  F062         	movff	___ftdiv@f3+2,___ftpack@arg+2
  5552  003C34  C09C  F063         	movff	___ftdiv@exp,___ftpack@exp
  5553  003C38  C09D  F064         	movff	___ftdiv@sign,___ftpack@sign
  5554  003C3C  ECFD  F020         	call	___ftpack	;wreg free
  5555  003C40  C060  F08F         	movff	?___ftpack,?___ftdiv
  5556  003C44  C061  F090         	movff	?___ftpack+1,?___ftdiv+1
  5557  003C48  C062  F091         	movff	?___ftpack+2,?___ftdiv+2
  5558  003C4C  0012               	return	
  5559  003C4E                     __end_of___ftdiv:
  5560                           	opt stack 0
  5561                           tblptru	equ	0xFF8
  5562                           tblptrh	equ	0xFF7
  5563                           tblptrl	equ	0xFF6
  5564                           tablat	equ	0xFF5
  5565                           intcon	equ	0xFF2
  5566                           postinc0	equ	0xFEE
  5567                           wreg	equ	0xFE8
  5568                           postdec1	equ	0xFE5
  5569                           fsr1l	equ	0xFE1
  5570                           indf2	equ	0xFDF
  5571                           fsr2h	equ	0xFDA
  5572                           fsr2l	equ	0xFD9
  5573                           status	equ	0xFD8
  5574                           
  5575 ;; *************** function ___awtoft *****************
  5576 ;; Defined at:
  5577 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\awtoft.c"
  5578 ;; Parameters:    Size  Location     Type
  5579 ;;  c               2    8[BANK0 ] int 
  5580 ;; Auto vars:     Size  Location     Type
  5581 ;;  sign            1   11[BANK0 ] unsigned char 
  5582 ;; Return value:  Size  Location     Type
  5583 ;;                  3    8[BANK0 ] float 
  5584 ;; Registers used:
  5585 ;;		wreg, status,2, status,0, cstack
  5586 ;; Tracked objects:
  5587 ;;		On entry : 0/0
  5588 ;;		On exit  : 0/0
  5589 ;;		Unchanged: 0/0
  5590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5591 ;;      Params:         0       3       0       0       0       0       0       0       0
  5592 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5593 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5594 ;;      Totals:         0       4       0       0       0       0       0       0       0
  5595 ;;Total ram usage:        4 bytes
  5596 ;; Hardware stack levels used:    1
  5597 ;; Hardware stack levels required when called:   11
  5598 ;; This function calls:
  5599 ;;		___ftpack
  5600 ;; This function is called by:
  5601 ;;		_le_AD
  5602 ;; This function uses a non-reentrant model
  5603 ;;
  5604                           
  5605                           	psect	text9
  5606  0053FE                     __ptext9:
  5607                           	opt stack 0
  5608  0053FE                     ___awtoft:
  5609                           	opt stack 18
  5610                           
  5611                           ;incstack = 0
  5612  0053FE  0E00               	movlw	0
  5613  005400  0100               	movlb	0	; () banked
  5614  005402  6F6B               	movwf	___awtoft@sign& (0+255),b
  5615                           
  5616                           ; BSR set to: 0
  5617  005404  AF69               	btfss	(___awtoft@c+1)& (0+255),7,b
  5618  005406  D006               	goto	l2792
  5619                           
  5620                           ; BSR set to: 0
  5621  005408  6D68               	negf	___awtoft@c& (0+255),b
  5622  00540A  1F69               	comf	(___awtoft@c+1)& (0+255),f,b
  5623  00540C  B0D8               	btfsc	status,0,c
  5624  00540E  2B69               	incf	(___awtoft@c+1)& (0+255),f,b
  5625                           
  5626                           ; BSR set to: 0
  5627  005410  0E01               	movlw	1
  5628  005412  6F6B               	movwf	___awtoft@sign& (0+255),b
  5629  005414                     l2792:
  5630                           
  5631                           ; BSR set to: 0
  5632                           
  5633                           ; BSR set to: 0
  5634  005414  C068  F060         	movff	___awtoft@c,___ftpack@arg
  5635  005418  C069  F061         	movff	___awtoft@c+1,___ftpack@arg+1
  5636  00541C  6B62               	clrf	(___ftpack@arg+2)& (0+255),b
  5637  00541E  0E8E               	movlw	142
  5638  005420  6F63               	movwf	___ftpack@exp& (0+255),b
  5639  005422  C06B  F064         	movff	___awtoft@sign,___ftpack@sign
  5640  005426  ECFD  F020         	call	___ftpack	;wreg free
  5641  00542A  C060  F068         	movff	?___ftpack,?___awtoft
  5642  00542E  C061  F069         	movff	?___ftpack+1,?___awtoft+1
  5643  005432  C062  F06A         	movff	?___ftpack+2,?___awtoft+2
  5644  005436  0012               	return	
  5645  005438                     __end_of___awtoft:
  5646                           	opt stack 0
  5647                           tblptru	equ	0xFF8
  5648                           tblptrh	equ	0xFF7
  5649                           tblptrl	equ	0xFF6
  5650                           tablat	equ	0xFF5
  5651                           intcon	equ	0xFF2
  5652                           postinc0	equ	0xFEE
  5653                           wreg	equ	0xFE8
  5654                           postdec1	equ	0xFE5
  5655                           fsr1l	equ	0xFE1
  5656                           indf2	equ	0xFDF
  5657                           fsr2h	equ	0xFDA
  5658                           fsr2l	equ	0xFD9
  5659                           status	equ	0xFD8
  5660                           
  5661 ;; *************** function _delay *****************
  5662 ;; Defined at:
  5663 ;;		line 33 in file "UT.c"
  5664 ;; Parameters:    Size  Location     Type
  5665 ;;  time            4   13[BANK0 ] unsigned long 
  5666 ;; Auto vars:     Size  Location     Type
  5667 ;;  to              4   25[BANK0 ] unsigned long 
  5668 ;; Return value:  Size  Location     Type
  5669 ;;                  1    wreg      void 
  5670 ;; Registers used:
  5671 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5672 ;; Tracked objects:
  5673 ;;		On entry : 0/0
  5674 ;;		On exit  : 0/0
  5675 ;;		Unchanged: 0/0
  5676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5677 ;;      Params:         0       4       0       0       0       0       0       0       0
  5678 ;;      Locals:         0       4       0       0       0       0       0       0       0
  5679 ;;      Temps:          0       8       0       0       0       0       0       0       0
  5680 ;;      Totals:         0      16       0       0       0       0       0       0       0
  5681 ;;Total ram usage:       16 bytes
  5682 ;; Hardware stack levels used:    1
  5683 ;; Hardware stack levels required when called:   13
  5684 ;; This function calls:
  5685 ;;		_millis
  5686 ;;		_verificaUSB
  5687 ;; This function is called by:
  5688 ;;		_main
  5689 ;; This function uses a non-reentrant model
  5690 ;;
  5691                           
  5692                           	psect	text10
  5693  004C94                     __ptext10:
  5694                           	opt stack 0
  5695  004C94                     _delay:
  5696                           	opt stack 17
  5697                           
  5698                           ;UT.c: 35: uint32_t to=millis();
  5699                           
  5700                           ;incstack = 0
  5701  004C94  EC38  F02B         	call	_millis	;wreg free
  5702  004C98  C060  F079         	movff	?_millis,delay@to
  5703  004C9C  C061  F07A         	movff	?_millis+1,delay@to+1
  5704  004CA0  C062  F07B         	movff	?_millis+2,delay@to+2
  5705  004CA4  C063  F07C         	movff	?_millis+3,delay@to+3
  5706                           
  5707                           ;UT.c: 36: while ((millis()-to)<time)
  5708  004CA8  D002               	goto	l1001
  5709  004CAA                     
  5710                           ;UT.c: 37: {
  5711                           ;UT.c: 38: verificaUSB();
  5712  004CAA  EC89  F02A         	call	_verificaUSB	;wreg free
  5713  004CAE                     l1001:
  5714  004CAE  C079  F071         	movff	delay@to,??_delay
  5715  004CB2  C07A  F072         	movff	delay@to+1,??_delay+1
  5716  004CB6  C07B  F073         	movff	delay@to+2,??_delay+2
  5717  004CBA  C07C  F074         	movff	delay@to+3,??_delay+3
  5718  004CBE  0100               	movlb	0	; () banked
  5719  004CC0  1F71               	comf	??_delay& (0+255),f,b
  5720  004CC2  1F72               	comf	(??_delay+1)& (0+255),f,b
  5721  004CC4  1F73               	comf	(??_delay+2)& (0+255),f,b
  5722  004CC6  1F74               	comf	(??_delay+3)& (0+255),f,b
  5723  004CC8  2B71               	incf	??_delay& (0+255),f,b
  5724  004CCA  0E00               	movlw	0
  5725  004CCC  2372               	addwfc	(??_delay+1)& (0+255),f,b
  5726  004CCE  2373               	addwfc	(??_delay+2)& (0+255),f,b
  5727  004CD0  2374               	addwfc	(??_delay+3)& (0+255),f,b
  5728  004CD2  EC38  F02B         	call	_millis	;wreg free
  5729  004CD6  0100               	movlb	0	; () banked
  5730  004CD8  5171               	movf	??_delay& (0+255),w,b
  5731  004CDA  2560               	addwf	?_millis& (0+255),w,b
  5732  004CDC  6F75               	movwf	(??_delay+4)& (0+255),b
  5733  004CDE  5172               	movf	(??_delay+1)& (0+255),w,b
  5734  004CE0  2161               	addwfc	(?_millis+1)& (0+255),w,b
  5735  004CE2  6F76               	movwf	(??_delay+5)& (0+255),b
  5736  004CE4  5173               	movf	(??_delay+2)& (0+255),w,b
  5737  004CE6  2162               	addwfc	(?_millis+2)& (0+255),w,b
  5738  004CE8  6F77               	movwf	(??_delay+6)& (0+255),b
  5739  004CEA  5174               	movf	(??_delay+3)& (0+255),w,b
  5740  004CEC  2163               	addwfc	(?_millis+3)& (0+255),w,b
  5741  004CEE  6F78               	movwf	(??_delay+7)& (0+255),b
  5742  004CF0  516D               	movf	delay@time& (0+255),w,b
  5743  004CF2  5D75               	subwf	(??_delay+4)& (0+255),w,b
  5744  004CF4  516E               	movf	(delay@time+1)& (0+255),w,b
  5745  004CF6  5976               	subwfb	(??_delay+5)& (0+255),w,b
  5746  004CF8  516F               	movf	(delay@time+2)& (0+255),w,b
  5747  004CFA  5977               	subwfb	(??_delay+6)& (0+255),w,b
  5748  004CFC  5170               	movf	(delay@time+3)& (0+255),w,b
  5749  004CFE  5978               	subwfb	(??_delay+7)& (0+255),w,b
  5750  004D00  B0D8               	btfsc	status,0,c
  5751  004D02  0012               	return	
  5752  004D04  D7D2               	goto	l1002
  5753  004D06                     __end_of_delay:
  5754                           	opt stack 0
  5755                           tblptru	equ	0xFF8
  5756                           tblptrh	equ	0xFF7
  5757                           tblptrl	equ	0xFF6
  5758                           tablat	equ	0xFF5
  5759                           intcon	equ	0xFF2
  5760                           postinc0	equ	0xFEE
  5761                           wreg	equ	0xFE8
  5762                           postdec1	equ	0xFE5
  5763                           fsr1l	equ	0xFE1
  5764                           indf2	equ	0xFDF
  5765                           fsr2h	equ	0xFDA
  5766                           fsr2l	equ	0xFD9
  5767                           status	equ	0xFD8
  5768                           
  5769 ;; *************** function _verificaUSB *****************
  5770 ;; Defined at:
  5771 ;;		line 13 in file "UT.c"
  5772 ;; Parameters:    Size  Location     Type
  5773 ;;		None
  5774 ;; Auto vars:     Size  Location     Type
  5775 ;;		None
  5776 ;; Return value:  Size  Location     Type
  5777 ;;                  1    wreg      unsigned char 
  5778 ;; Registers used:
  5779 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5780 ;; Tracked objects:
  5781 ;;		On entry : 0/0
  5782 ;;		On exit  : 0/0
  5783 ;;		Unchanged: 0/0
  5784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5785 ;;      Params:         0       0       0       0       0       0       0       0       0
  5786 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5787 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5788 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5789 ;;Total ram usage:        0 bytes
  5790 ;; Hardware stack levels used:    1
  5791 ;; Hardware stack levels required when called:   12
  5792 ;; This function calls:
  5793 ;;		_CDCTxService
  5794 ;;		_USBDeviceAttach
  5795 ;;		_USBDeviceDetach
  5796 ;; This function is called by:
  5797 ;;		_delay
  5798 ;;		_main
  5799 ;; This function uses a non-reentrant model
  5800 ;;
  5801                           
  5802                           	psect	text11
  5803  005512                     __ptext11:
  5804                           	opt stack 0
  5805  005512                     _verificaUSB:
  5806                           	opt stack 18
  5807                           
  5808                           ;UT.c: 15: if ((USBDeviceState == DETACHED_STATE) && (PORTCbits.RC2 == 1))
  5809                           
  5810                           ; BSR set to: 0
  5811                           ;incstack = 0
  5812  005512  5058               	movf	_USBDeviceState,w,c	;volatile
  5813  005514  B4D8               	btfsc	status,2,c
  5814  005516  A482               	btfss	3970,2,c	;volatile
  5815  005518  D003               	goto	l992
  5816                           
  5817                           ;UT.c: 16: {
  5818                           ;UT.c: 17: USBDeviceAttach();
  5819  00551A  EC6F  F02A         	call	_USBDeviceAttach	;wreg free
  5820                           
  5821                           ;UT.c: 18: }
  5822  00551E  D006               	goto	l994
  5823  005520                     l992:
  5824                           
  5825                           ;UT.c: 19: else if ((USBDeviceState == ATTACHED_STATE) && (PORTCbits.RC2 != 1))
  5826  005520  0458               	decf	_USBDeviceState,w,c	;volatile
  5827  005522  B4D8               	btfsc	status,2,c
  5828  005524  B482               	btfsc	3970,2,c	;volatile
  5829  005526  D002               	goto	l994
  5830                           
  5831                           ;UT.c: 20: {
  5832                           ;UT.c: 21: USBDeviceDetach();
  5833  005528  ECAD  F02B         	call	_USBDeviceDetach	;wreg free
  5834  00552C                     l994:
  5835                           
  5836                           ;UT.c: 22: }
  5837                           ;UT.c: 24: if ((USBDeviceState < CONFIGURED_STATE) || (UCONbits.SUSPND))
  5838  00552C  0E1F               	movlw	31
  5839  00552E  6458               	cpfsgt	_USBDeviceState,c	;volatile
  5840  005530  D002               	goto	u7740
  5841  005532  A26D               	btfss	3949,1,c	;volatile
  5842  005534  D002               	goto	l995
  5843  005536                     u7740:
  5844                           
  5845                           ;UT.c: 25: {
  5846                           ;UT.c: 26: return 0;
  5847  005536  0E00               	movlw	0
  5848  005538  0012               	return	
  5849  00553A                     l995:
  5850                           
  5851                           ;UT.c: 27: }
  5852                           ;UT.c: 29: CDCTxService();
  5853  00553A  EC42  F017         	call	_CDCTxService	;wreg free
  5854                           
  5855                           ;UT.c: 30: return 1;
  5856  00553E  0E01               	movlw	1
  5857  005540  0012               	return	
  5858  005542                     __end_of_verificaUSB:
  5859                           	opt stack 0
  5860                           tblptru	equ	0xFF8
  5861                           tblptrh	equ	0xFF7
  5862                           tblptrl	equ	0xFF6
  5863                           tablat	equ	0xFF5
  5864                           intcon	equ	0xFF2
  5865                           postinc0	equ	0xFEE
  5866                           wreg	equ	0xFE8
  5867                           postdec1	equ	0xFE5
  5868                           fsr1l	equ	0xFE1
  5869                           indf2	equ	0xFDF
  5870                           fsr2h	equ	0xFDA
  5871                           fsr2l	equ	0xFD9
  5872                           status	equ	0xFD8
  5873                           
  5874 ;; *************** function _USBDeviceDetach *****************
  5875 ;; Defined at:
  5876 ;;		line 1247 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
  5877 ;; Parameters:    Size  Location     Type
  5878 ;;		None
  5879 ;; Auto vars:     Size  Location     Type
  5880 ;;		None
  5881 ;; Return value:  Size  Location     Type
  5882 ;;                  1    wreg      void 
  5883 ;; Registers used:
  5884 ;;		wreg, status,2
  5885 ;; Tracked objects:
  5886 ;;		On entry : 0/0
  5887 ;;		On exit  : 0/0
  5888 ;;		Unchanged: 0/0
  5889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5890 ;;      Params:         0       0       0       0       0       0       0       0       0
  5891 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5892 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5893 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5894 ;;Total ram usage:        0 bytes
  5895 ;; Hardware stack levels used:    1
  5896 ;; Hardware stack levels required when called:   10
  5897 ;; This function calls:
  5898 ;;		Nothing
  5899 ;; This function is called by:
  5900 ;;		_verificaUSB
  5901 ;; This function uses a non-reentrant model
  5902 ;;
  5903                           
  5904                           	psect	text12
  5905  00575A                     __ptext12:
  5906                           	opt stack 0
  5907  00575A                     _USBDeviceDetach:
  5908                           	opt stack 19
  5909                           
  5910                           ;usb_device.c: 1255: {
  5911                           ;usb_device.c: 1257: UCON = 0;
  5912                           
  5913                           ;incstack = 0
  5914  00575A  0E00               	movlw	0
  5915  00575C  6E6D               	movwf	3949,c	;volatile
  5916                           
  5917                           ;usb_device.c: 1260: UIE = 0;
  5918  00575E  0E00               	movlw	0
  5919  005760  6E69               	movwf	3945,c	;volatile
  5920                           
  5921                           ;usb_device.c: 1263: USBDeviceState = DETACHED_STATE;
  5922  005762  0E00               	movlw	0
  5923  005764  6E58               	movwf	_USBDeviceState,c	;volatile
  5924  005766  0012               	return	
  5925  005768                     __end_of_USBDeviceDetach:
  5926                           	opt stack 0
  5927                           tblptru	equ	0xFF8
  5928                           tblptrh	equ	0xFF7
  5929                           tblptrl	equ	0xFF6
  5930                           tablat	equ	0xFF5
  5931                           intcon	equ	0xFF2
  5932                           postinc0	equ	0xFEE
  5933                           wreg	equ	0xFE8
  5934                           postdec1	equ	0xFE5
  5935                           fsr1l	equ	0xFE1
  5936                           indf2	equ	0xFDF
  5937                           fsr2h	equ	0xFDA
  5938                           fsr2l	equ	0xFD9
  5939                           status	equ	0xFD8
  5940                           
  5941 ;; *************** function _USBDeviceAttach *****************
  5942 ;; Defined at:
  5943 ;;		line 1352 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
  5944 ;; Parameters:    Size  Location     Type
  5945 ;;		None
  5946 ;; Auto vars:     Size  Location     Type
  5947 ;;		None
  5948 ;; Return value:  Size  Location     Type
  5949 ;;                  1    wreg      void 
  5950 ;; Registers used:
  5951 ;;		wreg, status,2
  5952 ;; Tracked objects:
  5953 ;;		On entry : 0/0
  5954 ;;		On exit  : 0/0
  5955 ;;		Unchanged: 0/0
  5956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5957 ;;      Params:         0       0       0       0       0       0       0       0       0
  5958 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5959 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5960 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5961 ;;Total ram usage:        0 bytes
  5962 ;; Hardware stack levels used:    1
  5963 ;; Hardware stack levels required when called:   10
  5964 ;; This function calls:
  5965 ;;		Nothing
  5966 ;; This function is called by:
  5967 ;;		_verificaUSB
  5968 ;; This function uses a non-reentrant model
  5969 ;;
  5970                           
  5971                           	psect	text13
  5972  0054DE                     __ptext13:
  5973                           	opt stack 0
  5974  0054DE                     _USBDeviceAttach:
  5975                           	opt stack 19
  5976                           
  5977                           ;usb_device.c: 1355: if(USBDeviceState == DETACHED_STATE)
  5978                           
  5979                           ;incstack = 0
  5980  0054DE  5058               	movf	_USBDeviceState,w,c	;volatile
  5981  0054E0  A4D8               	btfss	status,2,c
  5982  0054E2  0012               	return	
  5983                           
  5984                           ;usb_device.c: 1356: {
  5985                           ;usb_device.c: 1357: if(PORTCbits.RC2 == 1)
  5986  0054E4  A482               	btfss	3970,2,c	;volatile
  5987  0054E6  0012               	return	
  5988                           
  5989                           ;usb_device.c: 1358: {
  5990                           ;usb_device.c: 1360: UCON = 0;
  5991  0054E8  0E00               	movlw	0
  5992  0054EA  6E6D               	movwf	3949,c	;volatile
  5993                           
  5994                           ;usb_device.c: 1363: UIE = 0;
  5995  0054EC  0E00               	movlw	0
  5996  0054EE  6E69               	movwf	3945,c	;volatile
  5997                           
  5998                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
  5999  0054F0  0E16               	movlw	22
  6000  0054F2  6E6F               	movwf	3951,c	;volatile
  6001  0054F4  0E9F               	movlw	159
  6002  0054F6  6E6B               	movwf	3947,c	;volatile
  6003  0054F8  0E7B               	movlw	123
  6004  0054FA  6E69               	movwf	3945,c	;volatile
  6005                           
  6006                           ;usb_device.c: 1369: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
  6007  0054FC  8ED0               	bsf	4048,7,c	;volatile
  6008  0054FE  8AA2               	bsf	4002,5,c	;volatile
  6009  005500  8AA0               	bsf	4000,5,c	;volatile
  6010  005502  8EF2               	bsf	intcon,7,c	;volatile
  6011                           
  6012                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  6013  005504  D001               	goto	l435
  6014  005506                     l436:
  6015  005506  866D               	bsf	3949,3,c	;volatile
  6016  005508                     l435:
  6017  005508  A66D               	btfss	3949,3,c	;volatile
  6018  00550A  D7FD               	goto	l436
  6019                           
  6020                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
  6021  00550C  0E01               	movlw	1
  6022  00550E  6E58               	movwf	_USBDeviceState,c	;volatile
  6023  005510  0012               	return	
  6024  005512                     __end_of_USBDeviceAttach:
  6025                           	opt stack 0
  6026                           tblptru	equ	0xFF8
  6027                           tblptrh	equ	0xFF7
  6028                           tblptrl	equ	0xFF6
  6029                           tablat	equ	0xFF5
  6030                           intcon	equ	0xFF2
  6031                           postinc0	equ	0xFEE
  6032                           wreg	equ	0xFE8
  6033                           postdec1	equ	0xFE5
  6034                           fsr1l	equ	0xFE1
  6035                           indf2	equ	0xFDF
  6036                           fsr2h	equ	0xFDA
  6037                           fsr2l	equ	0xFD9
  6038                           status	equ	0xFD8
  6039                           
  6040 ;; *************** function _CDCTxService *****************
  6041 ;; Defined at:
  6042 ;;		line 836 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device_cdc.c"
  6043 ;; Parameters:    Size  Location     Type
  6044 ;;		None
  6045 ;; Auto vars:     Size  Location     Type
  6046 ;;  byte_to_send    1   12[BANK0 ] unsigned char 
  6047 ;;  i               1   11[BANK0 ] unsigned char 
  6048 ;; Return value:  Size  Location     Type
  6049 ;;                  1    wreg      void 
  6050 ;; Registers used:
  6051 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6052 ;; Tracked objects:
  6053 ;;		On entry : 0/0
  6054 ;;		On exit  : 0/0
  6055 ;;		Unchanged: 0/0
  6056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6057 ;;      Params:         0       0       0       0       0       0       0       0       0
  6058 ;;      Locals:         0       2       0       0       0       0       0       0       0
  6059 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6060 ;;      Totals:         0       2       0       0       0       0       0       0       0
  6061 ;;Total ram usage:        2 bytes
  6062 ;; Hardware stack levels used:    1
  6063 ;; Hardware stack levels required when called:   11
  6064 ;; This function calls:
  6065 ;;		_USBTransferOnePacket
  6066 ;; This function is called by:
  6067 ;;		_verificaUSB
  6068 ;; This function uses a non-reentrant model
  6069 ;;
  6070                           
  6071                           	psect	text14
  6072  002E84                     __ptext14:
  6073                           	opt stack 0
  6074  002E84                     _CDCTxService:
  6075                           	opt stack 18
  6076                           
  6077                           ;usb_device_cdc.c: 838: uint8_t byte_to_send;
  6078                           ;usb_device_cdc.c: 839: uint8_t i;
  6079                           ;usb_device_cdc.c: 841: {PIE2bits.USBIE = 0;};
  6080                           
  6081                           ;incstack = 0
  6082  002E84  9AA0               	bcf	4000,5,c	;volatile
  6083                           
  6084                           ;usb_device_cdc.c: 843: {};
  6085                           ;usb_device_cdc.c: 845: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
  6086  002E86  0102               	movlb	2	; () banked
  6087  002E88  51D8               	movf	_CDCDataInHandle& (0+255),w,b
  6088  002E8A  11D9               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
  6089  002E8C  B4D8               	btfsc	status,2,c
  6090  002E8E  D008               	goto	l816
  6091                           
  6092                           ; BSR set to: 2
  6093  002E90  C2D8  FFD9         	movff	_CDCDataInHandle,fsr2l
  6094  002E94  C2D9  FFDA         	movff	_CDCDataInHandle+1,fsr2h
  6095  002E98  AEDF               	btfss	indf2,7,c
  6096  002E9A  D002               	goto	l816
  6097                           
  6098                           ; BSR set to: 2
  6099                           ;usb_device_cdc.c: 846: {
  6100                           ;usb_device_cdc.c: 847: {PIE2bits.USBIE = 1;};
  6101  002E9C  8AA0               	bsf	4000,5,c	;volatile
  6102                           
  6103                           ;usb_device_cdc.c: 848: return;
  6104  002E9E  0012               	return	
  6105  002EA0                     l816:
  6106                           
  6107                           ; BSR set to: 2
  6108                           ;usb_device_cdc.c: 849: }
  6109                           ;usb_device_cdc.c: 856: if(cdc_trf_state == 3)
  6110                           
  6111                           ; BSR set to: 2
  6112  002EA0  0E03               	movlw	3
  6113  002EA2  19E7               	xorwf	_cdc_trf_state& (0+255),w,b
  6114  002EA4  A4D8               	btfss	status,2,c
  6115  002EA6  D002               	goto	l818
  6116                           
  6117                           ; BSR set to: 2
  6118                           ;usb_device_cdc.c: 857: cdc_trf_state = 0;
  6119  002EA8  0E00               	movlw	0
  6120  002EAA  6FE7               	movwf	_cdc_trf_state& (0+255),b
  6121  002EAC                     l818:
  6122                           
  6123                           ; BSR set to: 2
  6124                           ;usb_device_cdc.c: 862: if(cdc_trf_state == 0)
  6125  002EAC  51E7               	movf	_cdc_trf_state& (0+255),w,b
  6126  002EAE  A4D8               	btfss	status,2,c
  6127  002EB0  D002               	goto	l819
  6128                           
  6129                           ; BSR set to: 2
  6130                           ;usb_device_cdc.c: 863: {
  6131                           ;usb_device_cdc.c: 864: {PIE2bits.USBIE = 1;};
  6132  002EB2  8AA0               	bsf	4000,5,c	;volatile
  6133                           
  6134                           ;usb_device_cdc.c: 865: return;
  6135  002EB4  0012               	return	
  6136  002EB6                     l819:
  6137                           
  6138                           ; BSR set to: 2
  6139                           ;usb_device_cdc.c: 866: }
  6140                           ;usb_device_cdc.c: 871: if(cdc_trf_state == 2)
  6141                           
  6142                           ; BSR set to: 2
  6143  002EB6  0E02               	movlw	2
  6144  002EB8  19E7               	xorwf	_cdc_trf_state& (0+255),w,b
  6145  002EBA  A4D8               	btfss	status,2,c
  6146  002EBC  D014               	goto	l820
  6147                           
  6148                           ; BSR set to: 2
  6149                           ;usb_device_cdc.c: 872: {
  6150                           ;usb_device_cdc.c: 873: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
  6151  002EBE  0E01               	movlw	1
  6152  002EC0  0100               	movlb	0	; () banked
  6153  002EC2  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
  6154  002EC4  0E00               	movlw	0
  6155  002EC6  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
  6156  002EC8  0E00               	movlw	0
  6157  002ECA  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  6158  002ECC  0E00               	movlw	0
  6159  002ECE  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
  6160  002ED0  0E02               	movlw	2
  6161  002ED2  ECB8  F01A         	call	_USBTransferOnePacket
  6162  002ED6  C060  F2D8         	movff	?_USBTransferOnePacket,_CDCDataInHandle
  6163  002EDA  C061  F2D9         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
  6164                           
  6165                           ;usb_device_cdc.c: 875: cdc_trf_state = 3;
  6166  002EDE  0E03               	movlw	3
  6167  002EE0  0102               	movlb	2	; () banked
  6168  002EE2  6FE7               	movwf	_cdc_trf_state& (0+255),b
  6169                           
  6170                           ;usb_device_cdc.c: 876: }
  6171  002EE4  D064               	goto	l822
  6172  002EE6                     l820:
  6173                           
  6174                           ; BSR set to: 2
  6175                           ;usb_device_cdc.c: 877: else if(cdc_trf_state == 1)
  6176                           
  6177                           ; BSR set to: 2
  6178  002EE6  05E7               	decf	_cdc_trf_state& (0+255),w,b
  6179  002EE8  A4D8               	btfss	status,2,c
  6180  002EEA  D061               	goto	l822
  6181                           
  6182                           ; BSR set to: 2
  6183                           ;usb_device_cdc.c: 878: {
  6184                           ;usb_device_cdc.c: 882: if(cdc_tx_len > sizeof(cdc_data_tx))
  6185  002EEC  0E40               	movlw	64
  6186  002EEE  6451               	cpfsgt	_cdc_tx_len,c
  6187  002EF0  D004               	goto	l823
  6188                           
  6189                           ; BSR set to: 2
  6190                           ;usb_device_cdc.c: 883: byte_to_send = sizeof(cdc_data_tx);
  6191  002EF2  0E40               	movlw	64
  6192  002EF4  0100               	movlb	0	; () banked
  6193  002EF6  6F6C               	movwf	CDCTxService@byte_to_send& (0+255),b
  6194  002EF8  D002               	goto	l824
  6195  002EFA                     l823:
  6196                           
  6197                           ; BSR set to: 2
  6198                           ;usb_device_cdc.c: 884: else
  6199                           ;usb_device_cdc.c: 885: byte_to_send = cdc_tx_len;
  6200  002EFA  C051  F06C         	movff	_cdc_tx_len,CDCTxService@byte_to_send
  6201  002EFE                     l824:
  6202                           
  6203                           ;usb_device_cdc.c: 890: cdc_tx_len = cdc_tx_len - byte_to_send;
  6204                           
  6205                           ; BSR set to: 2
  6206  002EFE  0100               	movlb	0	; () banked
  6207  002F00  516C               	movf	CDCTxService@byte_to_send& (0+255),w,b
  6208  002F02  0800               	sublw	0
  6209  002F04  2451               	addwf	_cdc_tx_len,w,c
  6210  002F06  6E51               	movwf	_cdc_tx_len,c
  6211                           
  6212                           ;usb_device_cdc.c: 892: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
  6213  002F08  0E00               	movlw	0
  6214  002F0A  0103               	movlb	3	; () banked
  6215  002F0C  6F46               	movwf	_pCDCDst& (0+255),b
  6216  002F0E  0E05               	movlw	5
  6217  002F10  6F47               	movwf	(_pCDCDst+1)& (0+255),b
  6218                           
  6219                           ; BSR set to: 3
  6220                           ;usb_device_cdc.c: 894: i = byte_to_send;
  6221  002F12  C06C  F06B         	movff	CDCTxService@byte_to_send,CDCTxService@i
  6222                           
  6223                           ; BSR set to: 3
  6224                           ;usb_device_cdc.c: 895: if(cdc_mem_type == 0x00)
  6225  002F16  0102               	movlb	2	; () banked
  6226  002F18  51E6               	movf	_cdc_mem_type& (0+255),w,b
  6227  002F1A  B4D8               	btfsc	status,2,c
  6228  002F1C  D012               	goto	l826
  6229  002F1E  D027               	goto	l830
  6230  002F20                     
  6231                           ;usb_device_cdc.c: 898: {
  6232                           ;usb_device_cdc.c: 899: *pCDCDst.bRam = *pCDCSrc.bRom;
  6233                           
  6234                           ; BSR set to: 2
  6235  002F20  C349  FFD9         	movff	_pCDCSrc,fsr2l
  6236  002F24  C34A  FFDA         	movff	_pCDCSrc+1,fsr2h
  6237  002F28  C346  FFE1         	movff	_pCDCDst,fsr1l
  6238  002F2C  C347  FFE2         	movff	_pCDCDst+1,fsr1h
  6239  002F30  CFDF FFE7          	movff	indf2,indf1
  6240                           
  6241                           ;usb_device_cdc.c: 900: pCDCDst.bRam++;
  6242  002F34  0103               	movlb	3	; () banked
  6243  002F36  4B46               	infsnz	_pCDCDst& (0+255),f,b
  6244  002F38  2B47               	incf	(_pCDCDst+1)& (0+255),f,b
  6245                           
  6246                           ; BSR set to: 3
  6247                           ;usb_device_cdc.c: 901: pCDCSrc.bRom++;
  6248  002F3A  4B49               	infsnz	_pCDCSrc& (0+255),f,b
  6249  002F3C  2B4A               	incf	(_pCDCSrc+1)& (0+255),f,b
  6250                           
  6251                           ; BSR set to: 3
  6252                           ;usb_device_cdc.c: 902: i--;
  6253  002F3E  0100               	movlb	0	; () banked
  6254  002F40  076B               	decf	CDCTxService@i& (0+255),f,b
  6255  002F42                     l826:
  6256                           
  6257                           ; BSR set to: 0
  6258  002F42  0100               	movlb	0	; () banked
  6259  002F44  516B               	movf	CDCTxService@i& (0+255),w,b
  6260  002F46  B4D8               	btfsc	status,2,c
  6261  002F48  D016               	goto	u7050
  6262  002F4A  D7EA               	goto	l827
  6263  002F4C                     
  6264                           ; BSR set to: 0
  6265                           ;usb_device_cdc.c: 908: {
  6266                           ;usb_device_cdc.c: 909: *pCDCDst.bRam = *pCDCSrc.bRam;
  6267                           
  6268                           ; BSR set to: 0
  6269  002F4C  C349  FFD9         	movff	_pCDCSrc,fsr2l
  6270  002F50  C34A  FFDA         	movff	_pCDCSrc+1,fsr2h
  6271  002F54  C346  FFE1         	movff	_pCDCDst,fsr1l
  6272  002F58  C347  FFE2         	movff	_pCDCDst+1,fsr1h
  6273  002F5C  CFDF FFE7          	movff	indf2,indf1
  6274                           
  6275                           ; BSR set to: 0
  6276                           ;usb_device_cdc.c: 910: pCDCDst.bRam++;
  6277  002F60  0103               	movlb	3	; () banked
  6278  002F62  4B46               	infsnz	_pCDCDst& (0+255),f,b
  6279  002F64  2B47               	incf	(_pCDCDst+1)& (0+255),f,b
  6280                           
  6281                           ; BSR set to: 3
  6282                           ;usb_device_cdc.c: 911: pCDCSrc.bRam++;
  6283  002F66  4B49               	infsnz	_pCDCSrc& (0+255),f,b
  6284  002F68  2B4A               	incf	(_pCDCSrc+1)& (0+255),f,b
  6285                           
  6286                           ; BSR set to: 3
  6287                           ;usb_device_cdc.c: 912: i--;
  6288  002F6A  0100               	movlb	0	; () banked
  6289  002F6C  076B               	decf	CDCTxService@i& (0+255),f,b
  6290  002F6E                     l830:
  6291                           
  6292                           ; BSR set to: 0
  6293  002F6E  0100               	movlb	0	; () banked
  6294  002F70  516B               	movf	CDCTxService@i& (0+255),w,b
  6295  002F72  A4D8               	btfss	status,2,c
  6296  002F74  D7EB               	goto	l831
  6297  002F76                     u7050:
  6298                           
  6299                           ; BSR set to: 0
  6300                           ;usb_device_cdc.c: 913: }
  6301                           ;usb_device_cdc.c: 914: }
  6302                           ;usb_device_cdc.c: 920: if(cdc_tx_len == 0)
  6303                           
  6304                           ; BSR set to: 0
  6305                           
  6306                           ; BSR set to: 0
  6307  002F76  5051               	movf	_cdc_tx_len,w,c
  6308  002F78  A4D8               	btfss	status,2,c
  6309  002F7A  D009               	goto	l835
  6310                           
  6311                           ; BSR set to: 0
  6312                           ;usb_device_cdc.c: 921: {
  6313                           ;usb_device_cdc.c: 922: if(byte_to_send == 64)
  6314  002F7C  0E40               	movlw	64
  6315  002F7E  196C               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
  6316  002F80  A4D8               	btfss	status,2,c
  6317  002F82  D002               	goto	l834
  6318                           
  6319                           ; BSR set to: 0
  6320                           ;usb_device_cdc.c: 923: cdc_trf_state = 2;
  6321  002F84  0E02               	movlw	2
  6322  002F86  D001               	goto	L1
  6323  002F88                     l834:
  6324                           
  6325                           ;usb_device_cdc.c: 924: else
  6326                           ;usb_device_cdc.c: 925: cdc_trf_state = 3;
  6327                           
  6328                           ; BSR set to: 2
  6329  002F88  0E03               	movlw	3
  6330  002F8A                     L1:
  6331  002F8A  0102               	movlb	2	; () banked
  6332  002F8C  6FE7               	movwf	_cdc_trf_state& (0+255),b
  6333  002F8E                     l835:
  6334                           
  6335                           ;usb_device_cdc.c: 926: }
  6336                           ;usb_device_cdc.c: 927: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
  6337                           
  6338                           ; BSR set to: 2
  6339                           
  6340                           ; BSR set to: 2
  6341  002F8E  0E01               	movlw	1
  6342  002F90  0100               	movlb	0	; () banked
  6343  002F92  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
  6344  002F94  0E00               	movlw	0
  6345  002F96  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
  6346  002F98  0E05               	movlw	5
  6347  002F9A  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  6348  002F9C  C06C  F063         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
  6349  002FA0  0E02               	movlw	2
  6350  002FA2  ECB8  F01A         	call	_USBTransferOnePacket
  6351  002FA6  C060  F2D8         	movff	?_USBTransferOnePacket,_CDCDataInHandle
  6352  002FAA  C061  F2D9         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
  6353  002FAE                     l822:
  6354                           
  6355                           ;usb_device_cdc.c: 929: }
  6356                           ;usb_device_cdc.c: 931: {PIE2bits.USBIE = 1;};
  6357  002FAE  8AA0               	bsf	4000,5,c	;volatile
  6358  002FB0  0012               	return		;funcret
  6359  002FB2                     __end_of_CDCTxService:
  6360                           	opt stack 0
  6361                           tblptru	equ	0xFF8
  6362                           tblptrh	equ	0xFF7
  6363                           tblptrl	equ	0xFF6
  6364                           tablat	equ	0xFF5
  6365                           intcon	equ	0xFF2
  6366                           postinc0	equ	0xFEE
  6367                           wreg	equ	0xFE8
  6368                           indf1	equ	0xFE7
  6369                           postdec1	equ	0xFE5
  6370                           fsr1h	equ	0xFE2
  6371                           fsr1l	equ	0xFE1
  6372                           indf2	equ	0xFDF
  6373                           fsr2h	equ	0xFDA
  6374                           fsr2l	equ	0xFD9
  6375                           status	equ	0xFD8
  6376                           
  6377 ;; *************** function _USBTransferOnePacket *****************
  6378 ;; Defined at:
  6379 ;;		line 995 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
  6380 ;; Parameters:    Size  Location     Type
  6381 ;;  ep              1    wreg     unsigned char 
  6382 ;;  dir             1    0[BANK0 ] unsigned char 
  6383 ;;  data            2    1[BANK0 ] PTR unsigned char 
  6384 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
  6385 ;;  len             1    3[BANK0 ] unsigned char 
  6386 ;; Auto vars:     Size  Location     Type
  6387 ;;  ep              1    8[BANK0 ] unsigned char 
  6388 ;;  handle          2    9[BANK0 ] PTR volatile struct __BD
  6389 ;;		 -> RAM(2047), NULL(0), BDT(48), 
  6390 ;; Return value:  Size  Location     Type
  6391 ;;                  2    0[BANK0 ] PTR void 
  6392 ;; Registers used:
  6393 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6394 ;; Tracked objects:
  6395 ;;		On entry : 0/0
  6396 ;;		On exit  : 0/0
  6397 ;;		Unchanged: 0/0
  6398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6399 ;;      Params:         0       4       0       0       0       0       0       0       0
  6400 ;;      Locals:         0       3       0       0       0       0       0       0       0
  6401 ;;      Temps:          0       4       0       0       0       0       0       0       0
  6402 ;;      Totals:         0      11       0       0       0       0       0       0       0
  6403 ;;Total ram usage:       11 bytes
  6404 ;; Hardware stack levels used:    1
  6405 ;; Hardware stack levels required when called:   10
  6406 ;; This function calls:
  6407 ;;		Nothing
  6408 ;; This function is called by:
  6409 ;;		_CDCTxService
  6410 ;;		_USBCDCEventHandler
  6411 ;;		_getsUSBUSART
  6412 ;; This function uses a non-reentrant model
  6413 ;;
  6414                           
  6415                           	psect	text15
  6416  003570                     __ptext15:
  6417                           	opt stack 0
  6418  003570                     _USBTransferOnePacket:
  6419                           	opt stack 18
  6420                           
  6421                           ;incstack = 0
  6422                           ;USBTransferOnePacket@ep stored from wreg
  6423  003570  0100               	movlb	0	; () banked
  6424  003572  6F68               	movwf	USBTransferOnePacket@ep& (0+255),b
  6425                           
  6426                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
  6427                           ;usb_device.c: 1000: if(dir != 0)
  6428  003574  0100               	movlb	0	; () banked
  6429  003576  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
  6430  003578  B4D8               	btfsc	status,2,c
  6431  00357A  D007               	goto	l413
  6432                           
  6433                           ; BSR set to: 0
  6434                           ;usb_device.c: 1001: {
  6435                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
  6436  00357C  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
  6437  00357E  0D02               	mullw	2
  6438  003580  0E40               	movlw	low _pBDTEntryIn
  6439  003582  24F3               	addwf	prodl,w,c
  6440  003584  6ED9               	movwf	fsr2l,c
  6441  003586  0E00               	movlw	high _pBDTEntryIn
  6442  003588  D006               	goto	L2
  6443  00358A                     l413:
  6444                           
  6445                           ; BSR set to: 0
  6446                           ;usb_device.c: 1005: else
  6447                           ;usb_device.c: 1006: {
  6448                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
  6449                           
  6450                           ; BSR set to: 0
  6451  00358A  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
  6452  00358C  0D02               	mullw	2
  6453  00358E  0EC8               	movlw	low _pBDTEntryOut
  6454  003590  24F3               	addwf	prodl,w,c
  6455  003592  6ED9               	movwf	fsr2l,c
  6456  003594  0E02               	movlw	high _pBDTEntryOut
  6457  003596                     L2:
  6458  003596  20F4               	addwfc	prodh,w,c
  6459  003598  6EDA               	movwf	fsr2h,c
  6460  00359A  CFDE F069          	movff	postinc2,USBTransferOnePacket@handle
  6461  00359E  CFDD F06A          	movff	postdec2,USBTransferOnePacket@handle+1
  6462                           
  6463                           ; BSR set to: 0
  6464                           ;usb_device.c: 1009: }
  6465                           ;usb_device.c: 1013: if(handle == 0)
  6466                           
  6467                           ; BSR set to: 0
  6468  0035A2  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
  6469  0035A4  116A               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  6470  0035A6  A4D8               	btfss	status,2,c
  6471  0035A8  D005               	goto	l415
  6472                           
  6473                           ; BSR set to: 0
  6474                           ;usb_device.c: 1014: {
  6475                           ;usb_device.c: 1015: return 0;
  6476  0035AA  0E00               	movlw	0
  6477  0035AC  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
  6478  0035AE  0E00               	movlw	0
  6479  0035B0  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
  6480                           
  6481                           ; BSR set to: 0
  6482  0035B2  0012               	return	
  6483  0035B4                     l415:
  6484                           
  6485                           ; BSR set to: 0
  6486                           ;usb_device.c: 1016: }
  6487                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
  6488                           
  6489                           ; BSR set to: 0
  6490  0035B4  EE20 F002          	lfsr	2,2
  6491  0035B8  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
  6492  0035BA  26D9               	addwf	fsr2l,f,c
  6493  0035BC  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  6494  0035BE  22DA               	addwfc	fsr2h,f,c
  6495  0035C0  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
  6496  0035C4  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
  6497                           
  6498                           ;usb_device.c: 1030: handle->CNT = len;
  6499  0035C8  EE20 F001          	lfsr	2,1
  6500  0035CC  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
  6501  0035CE  26D9               	addwf	fsr2l,f,c
  6502  0035D0  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  6503  0035D2  22DA               	addwfc	fsr2h,f,c
  6504  0035D4  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
  6505                           
  6506                           ; BSR set to: 0
  6507                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
  6508  0035D8  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  6509  0035DC  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  6510  0035E0  0E40               	movlw	64
  6511  0035E2  16DF               	andwf	indf2,f,c
  6512                           
  6513                           ; BSR set to: 0
  6514                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
  6515  0035E4  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  6516  0035E8  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  6517  0035EC  0E00               	movlw	0
  6518  0035EE  86DB               	bsf	plusw2,3,c
  6519                           
  6520                           ; BSR set to: 0
  6521                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
  6522  0035F0  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  6523  0035F4  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  6524  0035F8  0E00               	movlw	0
  6525  0035FA  8EDB               	bsf	plusw2,7,c
  6526                           
  6527                           ; BSR set to: 0
  6528                           ;usb_device.c: 1036: if(dir != 0)
  6529  0035FC  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
  6530  0035FE  B4D8               	btfsc	status,2,c
  6531  003600  D018               	goto	l417
  6532                           
  6533                           ; BSR set to: 0
  6534                           ;usb_device.c: 1037: {
  6535                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
  6536  003602  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
  6537  003604  0D02               	mullw	2
  6538  003606  0E40               	movlw	low _pBDTEntryIn
  6539  003608  24F3               	addwf	prodl,w,c
  6540  00360A  6ED9               	movwf	fsr2l,c
  6541  00360C  0E00               	movlw	high _pBDTEntryIn
  6542  00360E  20F4               	addwfc	prodh,w,c
  6543  003610  6EDA               	movwf	fsr2h,c
  6544  003612  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
  6545  003616  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
  6546  00361A  0E04               	movlw	4
  6547  00361C  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
  6548  00361E  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
  6549  003620  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
  6550  003622  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
  6551  003624  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
  6552  003626  0D02               	mullw	2
  6553  003628  0E40               	movlw	low _pBDTEntryIn
  6554  00362A  24F3               	addwf	prodl,w,c
  6555  00362C  6ED9               	movwf	fsr2l,c
  6556  00362E  0E00               	movlw	high _pBDTEntryIn
  6557  003630  D017               	goto	L3
  6558  003632                     l417:
  6559                           
  6560                           ; BSR set to: 0
  6561                           ;usb_device.c: 1041: else
  6562                           ;usb_device.c: 1042: {
  6563                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
  6564                           
  6565                           ; BSR set to: 0
  6566  003632  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
  6567  003634  0D02               	mullw	2
  6568  003636  0EC8               	movlw	low _pBDTEntryOut
  6569  003638  24F3               	addwf	prodl,w,c
  6570  00363A  6ED9               	movwf	fsr2l,c
  6571  00363C  0E02               	movlw	high _pBDTEntryOut
  6572  00363E  20F4               	addwfc	prodh,w,c
  6573  003640  6EDA               	movwf	fsr2h,c
  6574  003642  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
  6575  003646  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
  6576  00364A  0E04               	movlw	4
  6577  00364C  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
  6578  00364E  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
  6579  003650  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
  6580  003652  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
  6581  003654  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
  6582  003656  0D02               	mullw	2
  6583  003658  0EC8               	movlw	low _pBDTEntryOut
  6584  00365A  24F3               	addwf	prodl,w,c
  6585  00365C  6ED9               	movwf	fsr2l,c
  6586  00365E  0E02               	movlw	high _pBDTEntryOut
  6587  003660                     L3:
  6588  003660  20F4               	addwfc	prodh,w,c
  6589  003662  6EDA               	movwf	fsr2h,c
  6590  003664  C066  FFDE         	movff	??_USBTransferOnePacket+2,postinc2
  6591  003668  C067  FFDD         	movff	??_USBTransferOnePacket+3,postdec2
  6592                           
  6593                           ; BSR set to: 0
  6594                           ;usb_device.c: 1045: }
  6595                           ;usb_device.c: 1046: return (void*)handle;
  6596                           
  6597                           ; BSR set to: 0
  6598  00366C  C069  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
  6599  003670  C06A  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
  6600  003674  0012               	return	
  6601  003676                     __end_of_USBTransferOnePacket:
  6602                           	opt stack 0
  6603                           tblptru	equ	0xFF8
  6604                           tblptrh	equ	0xFF7
  6605                           tblptrl	equ	0xFF6
  6606                           tablat	equ	0xFF5
  6607                           prodh	equ	0xFF4
  6608                           prodl	equ	0xFF3
  6609                           intcon	equ	0xFF2
  6610                           postinc0	equ	0xFEE
  6611                           wreg	equ	0xFE8
  6612                           indf1	equ	0xFE7
  6613                           postdec1	equ	0xFE5
  6614                           fsr1h	equ	0xFE2
  6615                           fsr1l	equ	0xFE1
  6616                           indf2	equ	0xFDF
  6617                           postinc2	equ	0xFDE
  6618                           postdec2	equ	0xFDD
  6619                           plusw2	equ	0xFDB
  6620                           fsr2h	equ	0xFDA
  6621                           fsr2l	equ	0xFD9
  6622                           status	equ	0xFD8
  6623                           
  6624 ;; *************** function _USBDeviceInit *****************
  6625 ;; Defined at:
  6626 ;;		line 277 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
  6627 ;; Parameters:    Size  Location     Type
  6628 ;;		None
  6629 ;; Auto vars:     Size  Location     Type
  6630 ;;  i               1    8[BANK0 ] unsigned char 
  6631 ;; Return value:  Size  Location     Type
  6632 ;;                  1    wreg      void 
  6633 ;; Registers used:
  6634 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6635 ;; Tracked objects:
  6636 ;;		On entry : 0/0
  6637 ;;		On exit  : 0/0
  6638 ;;		Unchanged: 0/0
  6639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6640 ;;      Params:         0       0       0       0       0       0       0       0       0
  6641 ;;      Locals:         0       1       0       0       0       0       0       0       0
  6642 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6643 ;;      Totals:         0       1       0       0       0       0       0       0       0
  6644 ;;Total ram usage:        1 bytes
  6645 ;; Hardware stack levels used:    1
  6646 ;; Hardware stack levels required when called:   11
  6647 ;; This function calls:
  6648 ;;		_memset
  6649 ;; This function is called by:
  6650 ;;		_main
  6651 ;; This function uses a non-reentrant model
  6652 ;;
  6653                           
  6654                           	psect	text16
  6655  002ACC                     __ptext16:
  6656                           	opt stack 0
  6657  002ACC                     _USBDeviceInit:
  6658                           	opt stack 19
  6659                           
  6660                           ;usb_device.c: 279: uint8_t i;
  6661                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
  6662                           
  6663                           ; BSR set to: 0
  6664                           ;incstack = 0
  6665  002ACC  9AA0               	bcf	4000,5,c	;volatile
  6666                           
  6667                           ;usb_device.c: 285: ;
  6668                           ;usb_device.c: 288: {UEIR = 0;};
  6669  002ACE  0E00               	movlw	0
  6670  002AD0  6E6A               	movwf	3946,c	;volatile
  6671                           
  6672                           ;usb_device.c: 291: {UIR = 0;};
  6673  002AD2  0E00               	movlw	0
  6674  002AD4  6E68               	movwf	3944,c	;volatile
  6675                           
  6676                           ;usb_device.c: 294: UEP0 = 0;
  6677  002AD6  0E00               	movlw	0
  6678  002AD8  6E70               	movwf	3952,c	;volatile
  6679                           
  6680                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
  6681  002ADA  0E71               	movlw	113
  6682  002ADC  0100               	movlb	0	; () banked
  6683  002ADE  6F60               	movwf	memset@p1& (0+255),b
  6684  002AE0  0E0F               	movlw	15
  6685  002AE2  6F61               	movwf	(memset@p1+1)& (0+255),b
  6686  002AE4  0E00               	movlw	0
  6687  002AE6  6F63               	movwf	(memset@c+1)& (0+255),b
  6688  002AE8  0E00               	movlw	0
  6689  002AEA  6F62               	movwf	memset@c& (0+255),b
  6690  002AEC  0E00               	movlw	0
  6691  002AEE  6F65               	movwf	(memset@n+1)& (0+255),b
  6692  002AF0  0E02               	movlw	2
  6693  002AF2  6F64               	movwf	memset@n& (0+255),b
  6694  002AF4  ECA1  F02A         	call	_memset	;wreg free
  6695                           
  6696                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  6697  002AF8  0E16               	movlw	22
  6698  002AFA  6E6F               	movwf	3951,c	;volatile
  6699  002AFC  0E9F               	movlw	159
  6700  002AFE  6E6B               	movwf	3947,c	;volatile
  6701  002B00  0E7B               	movlw	123
  6702  002B02  6E69               	movwf	3945,c	;volatile
  6703                           
  6704                           ;usb_device.c: 301: ;
  6705                           ;usb_device.c: 304: ;
  6706                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  6707  002B04  0E00               	movlw	0
  6708  002B06  0100               	movlb	0	; () banked
  6709  002B08  6F68               	movwf	USBDeviceInit@i& (0+255),b
  6710  002B0A                     l9617:
  6711                           
  6712                           ; BSR set to: 0
  6713  002B0A  0E0B               	movlw	11
  6714  002B0C  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
  6715  002B0E  D001               	goto	l374
  6716  002B10  D00E               	goto	u9260
  6717  002B12                     l374:
  6718                           
  6719                           ; BSR set to: 0
  6720                           ;usb_device.c: 308: {
  6721                           ;usb_device.c: 309: BDT[i].Val = 0x00;
  6722                           
  6723                           ; BSR set to: 0
  6724  002B12  5168               	movf	USBDeviceInit@i& (0+255),w,b
  6725  002B14  0D04               	mullw	4
  6726  002B16  0E00               	movlw	0
  6727  002B18  24F3               	addwf	prodl,w,c
  6728  002B1A  6ED9               	movwf	fsr2l,c
  6729  002B1C  0E04               	movlw	4
  6730  002B1E  20F4               	addwfc	prodh,w,c
  6731  002B20  6EDA               	movwf	fsr2h,c
  6732  002B22  6ADE               	clrf	postinc2,c
  6733  002B24  6ADE               	clrf	postinc2,c
  6734  002B26  6ADE               	clrf	postinc2,c
  6735  002B28  6ADD               	clrf	postdec2,c
  6736                           
  6737                           ; BSR set to: 0
  6738  002B2A  2B68               	incf	USBDeviceInit@i& (0+255),f,b
  6739  002B2C  D7EE               	goto	l9617
  6740  002B2E                     u9260:
  6741                           
  6742                           ; BSR set to: 0
  6743                           ;usb_device.c: 310: }
  6744                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
  6745  002B2E  8C6D               	bsf	3949,6,c	;volatile
  6746                           
  6747                           ; BSR set to: 0
  6748                           ;usb_device.c: 316: UADDR = 0x00;
  6749  002B30  0E00               	movlw	0
  6750  002B32  6E6E               	movwf	3950,c	;volatile
  6751                           
  6752                           ; BSR set to: 0
  6753                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
  6754  002B34  986D               	bcf	3949,4,c	;volatile
  6755                           
  6756                           ; BSR set to: 0
  6757                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
  6758  002B36  9C6D               	bcf	3949,6,c	;volatile
  6759  002B38                     
  6760                           ; BSR set to: 0
  6761                           ;usb_device.c: 326: {
  6762                           ;usb_device.c: 327: (UIR &= 0xF7);
  6763                           
  6764                           ; BSR set to: 0
  6765  002B38  9668               	bcf	3944,3,c	;volatile
  6766                           
  6767                           ; BSR set to: 0
  6768                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
  6769  002B3A  0E00               	movlw	0
  6770  002B3C  6FFD               	movwf	(_inPipes+3)& (0+255),b	;volatile
  6771                           
  6772                           ; BSR set to: 0
  6773                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
  6774  002B3E  0E00               	movlw	0
  6775  002B40  6E3B               	movwf	_outPipes+3,c	;volatile
  6776                           
  6777                           ; BSR set to: 0
  6778                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
  6779  002B42  0E00               	movlw	0
  6780  002B44  6E3D               	movwf	_outPipes+5,c	;volatile
  6781  002B46  0E00               	movlw	0
  6782  002B48  6E3C               	movwf	_outPipes+4,c	;volatile
  6783                           
  6784                           ; BSR set to: 0
  6785                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
  6786  002B4A  B668               	btfsc	3944,3,c	;volatile
  6787  002B4C  D7F5               	goto	l376
  6788                           
  6789                           ; BSR set to: 0
  6790                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
  6791                           
  6792                           ; BSR set to: 0
  6793  002B4E  0E01               	movlw	1
  6794  002B50  0102               	movlb	2	; () banked
  6795  002B52  6FEC               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  6796                           
  6797                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
  6798  002B54  0E01               	movlw	1
  6799  002B56  6FEB               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
  6800                           
  6801                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
  6802  002B58  0E00               	movlw	0
  6803  002B5A  6FEA               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
  6804                           
  6805                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
  6806  002B5C  0E00               	movlw	0
  6807  002B5E  6FE9               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
  6808                           
  6809                           ;usb_device.c: 341: USBBusIsSuspended = 0;
  6810  002B60  0E00               	movlw	0
  6811  002B62  0101               	movlb	1	; () banked
  6812  002B64  6FFC               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
  6813                           
  6814                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
  6815  002B66  0E00               	movlw	0
  6816  002B68  0100               	movlb	0	; () banked
  6817  002B6A  6F68               	movwf	USBDeviceInit@i& (0+255),b
  6818  002B6C                     l9645:
  6819                           
  6820                           ; BSR set to: 0
  6821  002B6C  0E02               	movlw	2
  6822  002B6E  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
  6823  002B70  D001               	goto	l378
  6824  002B72  D02E               	goto	u9290
  6825  002B74                     l378:
  6826                           
  6827                           ; BSR set to: 0
  6828                           ;usb_device.c: 346: {
  6829                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
  6830                           
  6831                           ; BSR set to: 0
  6832  002B74  5168               	movf	USBDeviceInit@i& (0+255),w,b
  6833  002B76  0D02               	mullw	2
  6834  002B78  0E40               	movlw	low _pBDTEntryIn
  6835  002B7A  24F3               	addwf	prodl,w,c
  6836  002B7C  6ED9               	movwf	fsr2l,c
  6837  002B7E  0E00               	movlw	high _pBDTEntryIn
  6838  002B80  20F4               	addwfc	prodh,w,c
  6839  002B82  6EDA               	movwf	fsr2h,c
  6840  002B84  0E00               	movlw	0
  6841  002B86  6EDE               	movwf	postinc2,c
  6842  002B88  0E00               	movlw	0
  6843  002B8A  6EDD               	movwf	postdec2,c
  6844                           
  6845                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
  6846  002B8C  5168               	movf	USBDeviceInit@i& (0+255),w,b
  6847  002B8E  0D02               	mullw	2
  6848  002B90  0EC8               	movlw	low _pBDTEntryOut
  6849  002B92  24F3               	addwf	prodl,w,c
  6850  002B94  6ED9               	movwf	fsr2l,c
  6851  002B96  0E02               	movlw	high _pBDTEntryOut
  6852  002B98  20F4               	addwfc	prodh,w,c
  6853  002B9A  6EDA               	movwf	fsr2h,c
  6854  002B9C  0E00               	movlw	0
  6855  002B9E  6EDE               	movwf	postinc2,c
  6856  002BA0  0E00               	movlw	0
  6857  002BA2  6EDD               	movwf	postdec2,c
  6858                           
  6859                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
  6860  002BA4  5168               	movf	USBDeviceInit@i& (0+255),w,b
  6861  002BA6  0D01               	mullw	1
  6862  002BA8  0ED5               	movlw	low _ep_data_in
  6863  002BAA  24F3               	addwf	prodl,w,c
  6864  002BAC  6ED9               	movwf	fsr2l,c
  6865  002BAE  0E02               	movlw	high _ep_data_in
  6866  002BB0  20F4               	addwfc	prodh,w,c
  6867  002BB2  6EDA               	movwf	fsr2h,c
  6868  002BB4  0E00               	movlw	0
  6869  002BB6  6EDF               	movwf	indf2,c
  6870                           
  6871                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
  6872  002BB8  5168               	movf	USBDeviceInit@i& (0+255),w,b
  6873  002BBA  0D01               	mullw	1
  6874  002BBC  0ED2               	movlw	low _ep_data_out
  6875  002BBE  24F3               	addwf	prodl,w,c
  6876  002BC0  6ED9               	movwf	fsr2l,c
  6877  002BC2  0E02               	movlw	high _ep_data_out
  6878  002BC4  20F4               	addwfc	prodh,w,c
  6879  002BC6  6EDA               	movwf	fsr2h,c
  6880  002BC8  0E00               	movlw	0
  6881  002BCA  6EDF               	movwf	indf2,c
  6882                           
  6883                           ; BSR set to: 0
  6884  002BCC  2B68               	incf	USBDeviceInit@i& (0+255),f,b
  6885  002BCE  D7CE               	goto	l9645
  6886  002BD0                     u9290:
  6887                           
  6888                           ; BSR set to: 0
  6889                           ;usb_device.c: 351: }
  6890                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  6891                           
  6892                           ; BSR set to: 0
  6893  002BD0  0E08               	movlw	8
  6894  002BD2  6E40               	movwf	_pBDTEntryIn,c
  6895  002BD4  0E04               	movlw	4
  6896  002BD6  6E41               	movwf	_pBDTEntryIn+1,c
  6897                           
  6898                           ; BSR set to: 0
  6899                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
  6900  002BD8  0E16               	movlw	22
  6901  002BDA  6E70               	movwf	3952,c	;volatile
  6902                           
  6903                           ; BSR set to: 0
  6904                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  6905  002BDC  0E04               	movlw	4
  6906  002BDE  0104               	movlb	4	; () banked
  6907  002BE0  6F03               	movwf	3,b	;volatile
  6908  002BE2  0E30               	movlw	48
  6909  002BE4  6F02               	movwf	2,b	;volatile
  6910                           
  6911                           ; BSR set to: 4
  6912                           ;usb_device.c: 359: BDT[0].CNT = 8;
  6913  002BE6  0E08               	movlw	8
  6914  002BE8  6F01               	movwf	1,b	;volatile
  6915                           
  6916                           ; BSR set to: 4
  6917                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
  6918  002BEA  0E04               	movlw	4
  6919  002BEC  6F00               	movwf	0,b	;volatile
  6920                           
  6921                           ; BSR set to: 4
  6922                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
  6923  002BEE  8F00               	bsf	0,7,b	;volatile
  6924                           
  6925                           ; BSR set to: 4
  6926                           ;usb_device.c: 364: USBActiveConfiguration = 0;
  6927  002BF0  0E00               	movlw	0
  6928  002BF2  6E5E               	movwf	_USBActiveConfiguration,c	;volatile
  6929                           
  6930                           ; BSR set to: 4
  6931                           ;usb_device.c: 366: USB1msTickCount = 0;
  6932  002BF4  0E00               	movlw	0
  6933  002BF6  0102               	movlb	2	; () banked
  6934  002BF8  6FCE               	movwf	_USB1msTickCount& (0+255),b	;volatile
  6935  002BFA  0E00               	movlw	0
  6936  002BFC  6FCF               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
  6937  002BFE  0E00               	movlw	0
  6938  002C00  6FD0               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
  6939  002C02  0E00               	movlw	0
  6940  002C04  6FD1               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
  6941                           
  6942                           ; BSR set to: 2
  6943                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
  6944  002C06  0E00               	movlw	0
  6945  002C08  6FE8               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
  6946                           
  6947                           ; BSR set to: 2
  6948                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
  6949  002C0A  0E00               	movlw	0
  6950  002C0C  6E58               	movwf	_USBDeviceState,c	;volatile
  6951                           
  6952                           ; BSR set to: 2
  6953  002C0E  0012               	return		;funcret
  6954  002C10                     __end_of_USBDeviceInit:
  6955                           	opt stack 0
  6956                           tblptru	equ	0xFF8
  6957                           tblptrh	equ	0xFF7
  6958                           tblptrl	equ	0xFF6
  6959                           tablat	equ	0xFF5
  6960                           prodh	equ	0xFF4
  6961                           prodl	equ	0xFF3
  6962                           intcon	equ	0xFF2
  6963                           postinc0	equ	0xFEE
  6964                           wreg	equ	0xFE8
  6965                           indf1	equ	0xFE7
  6966                           postdec1	equ	0xFE5
  6967                           fsr1h	equ	0xFE2
  6968                           fsr1l	equ	0xFE1
  6969                           indf2	equ	0xFDF
  6970                           postinc2	equ	0xFDE
  6971                           postdec2	equ	0xFDD
  6972                           plusw2	equ	0xFDB
  6973                           fsr2h	equ	0xFDA
  6974                           fsr2l	equ	0xFD9
  6975                           status	equ	0xFD8
  6976                           
  6977 ;; *************** function _memset *****************
  6978 ;; Defined at:
  6979 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\memset.c"
  6980 ;; Parameters:    Size  Location     Type
  6981 ;;  p1              2    0[BANK0 ] PTR void 
  6982 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  6983 ;;  c               2    2[BANK0 ] int 
  6984 ;;  n               2    4[BANK0 ] unsigned int 
  6985 ;; Auto vars:     Size  Location     Type
  6986 ;;  p               2    6[BANK0 ] PTR unsigned char 
  6987 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  6988 ;; Return value:  Size  Location     Type
  6989 ;;                  2    0[BANK0 ] PTR void 
  6990 ;; Registers used:
  6991 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6992 ;; Tracked objects:
  6993 ;;		On entry : 0/0
  6994 ;;		On exit  : 0/0
  6995 ;;		Unchanged: 0/0
  6996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6997 ;;      Params:         0       6       0       0       0       0       0       0       0
  6998 ;;      Locals:         0       2       0       0       0       0       0       0       0
  6999 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7000 ;;      Totals:         0       8       0       0       0       0       0       0       0
  7001 ;;Total ram usage:        8 bytes
  7002 ;; Hardware stack levels used:    1
  7003 ;; Hardware stack levels required when called:   10
  7004 ;; This function calls:
  7005 ;;		Nothing
  7006 ;; This function is called by:
  7007 ;;		_USBDeviceInit
  7008 ;; This function uses a non-reentrant model
  7009 ;;
  7010                           
  7011                           	psect	text17
  7012  005542                     __ptext17:
  7013                           	opt stack 0
  7014  005542                     _memset:
  7015                           	opt stack 19
  7016                           
  7017                           ; BSR set to: 2
  7018                           ;incstack = 0
  7019  005542  C060  F066         	movff	memset@p1,memset@p
  7020  005546  C061  F067         	movff	memset@p1+1,memset@p+1
  7021  00554A  D009               	goto	l3069
  7022  00554C                     l8589:
  7023  00554C  C066  FFD9         	movff	memset@p,fsr2l
  7024  005550  C067  FFDA         	movff	memset@p+1,fsr2h
  7025  005554  C062  FFDF         	movff	memset@c,indf2
  7026  005558  0100               	movlb	0	; () banked
  7027  00555A  4B66               	infsnz	memset@p& (0+255),f,b
  7028  00555C  2B67               	incf	(memset@p+1)& (0+255),f,b
  7029  00555E                     l3069:
  7030                           
  7031                           ; BSR set to: 0
  7032  00555E  0100               	movlb	0	; () banked
  7033  005560  0764               	decf	memset@n& (0+255),f,b
  7034  005562  A0D8               	btfss	status,0,c
  7035  005564  0765               	decf	(memset@n+1)& (0+255),f,b
  7036  005566  2964               	incf	memset@n& (0+255),w,b
  7037  005568  E1F1               	bnz	l8589
  7038  00556A  2965               	incf	(memset@n+1)& (0+255),w,b
  7039  00556C  B4D8               	btfsc	status,2,c
  7040  00556E  0012               	return	
  7041  005570  D7ED               	goto	l3070
  7042  005572                     __end_of_memset:
  7043                           	opt stack 0
  7044                           tblptru	equ	0xFF8
  7045                           tblptrh	equ	0xFF7
  7046                           tblptrl	equ	0xFF6
  7047                           tablat	equ	0xFF5
  7048                           prodh	equ	0xFF4
  7049                           prodl	equ	0xFF3
  7050                           intcon	equ	0xFF2
  7051                           postinc0	equ	0xFEE
  7052                           wreg	equ	0xFE8
  7053                           indf1	equ	0xFE7
  7054                           postdec1	equ	0xFE5
  7055                           fsr1h	equ	0xFE2
  7056                           fsr1l	equ	0xFE1
  7057                           indf2	equ	0xFDF
  7058                           postinc2	equ	0xFDE
  7059                           postdec2	equ	0xFDD
  7060                           plusw2	equ	0xFDB
  7061                           fsr2h	equ	0xFDA
  7062                           fsr2l	equ	0xFD9
  7063                           status	equ	0xFD8
  7064                           
  7065 ;; *************** function _TxLoRaWan *****************
  7066 ;; Defined at:
  7067 ;;		line 173 in file "LoRaWanCore.c"
  7068 ;; Parameters:    Size  Location     Type
  7069 ;;  conf            1    wreg     unsigned char 
  7070 ;;  porta           1  149[BANK0 ] unsigned char 
  7071 ;;  data            2  150[BANK0 ] PTR const unsigned char 
  7072 ;;		 -> main@dadoPoco(22), 
  7073 ;;  tamData         1  152[BANK0 ] unsigned char 
  7074 ;; Auto vars:     Size  Location     Type
  7075 ;;  conf            1  232[BANK1 ] unsigned char 
  7076 ;;  status          1  233[BANK1 ] unsigned char 
  7077 ;;  i               1  238[BANK1 ] unsigned char 
  7078 ;;  comando       200   32[BANK1 ] unsigned char [200]
  7079 ;;  hex             4  234[BANK1 ] unsigned char [4]
  7080 ;; Return value:  Size  Location     Type
  7081 ;;                  1    wreg      unsigned char 
  7082 ;; Registers used:
  7083 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7084 ;; Tracked objects:
  7085 ;;		On entry : 0/0
  7086 ;;		On exit  : 0/0
  7087 ;;		Unchanged: 0/0
  7088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7089 ;;      Params:         0       4       0       0       0       0       0       0       0
  7090 ;;      Locals:         0       0     207       0       0       0       0       0       0
  7091 ;;      Temps:          0       1       0       0       0       0       0       0       0
  7092 ;;      Totals:         0       5     207       0       0       0       0       0       0
  7093 ;;Total ram usage:      212 bytes
  7094 ;; Hardware stack levels used:    1
  7095 ;; Hardware stack levels required when called:   14
  7096 ;; This function calls:
  7097 ;;		_JoinLoRaWan
  7098 ;;		_ResetModuloLoRaWan
  7099 ;;		_enviaComando
  7100 ;;		_parseLoRaWan
  7101 ;;		_retornaDado
  7102 ;;		_sprintf
  7103 ;;		_strcat
  7104 ;; This function is called by:
  7105 ;;		_main
  7106 ;; This function uses a non-reentrant model
  7107 ;;
  7108                           
  7109                           	psect	text18
  7110  001A00                     __ptext18:
  7111                           	opt stack 0
  7112  001A00                     _TxLoRaWan:
  7113                           	opt stack 16
  7114                           
  7115                           ; BSR set to: 0
  7116                           ;incstack = 0
  7117                           ;TxLoRaWan@conf stored from wreg
  7118  001A00  0101               	movlb	1	; () banked
  7119  001A02  6FE8               	movwf	TxLoRaWan@conf& (0+255),b
  7120                           
  7121                           ;LoRaWanCore.c: 175: char comando[200];
  7122                           ;LoRaWanCore.c: 176: char hex[4];
  7123                           ;LoRaWanCore.c: 178: if (conf)
  7124  001A04  0101               	movlb	1	; () banked
  7125  001A06  51E8               	movf	TxLoRaWan@conf& (0+255),w,b
  7126  001A08  B4D8               	btfsc	status,2,c
  7127  001A0A  D013               	goto	l2163
  7128                           
  7129                           ; BSR set to: 1
  7130                           ;LoRaWanCore.c: 179: sprintf(comando, "%s %d ", MAC_TX_CNF, porta);
  7131  001A0C  0E20               	movlw	low TxLoRaWan@comando
  7132  001A0E  0100               	movlb	0	; () banked
  7133  001A10  6FBF               	movwf	sprintf@sp& (0+255),b
  7134  001A12  0E01               	movlw	high TxLoRaWan@comando
  7135  001A14  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  7136  001A16  0EC1               	movlw	low STR_33
  7137  001A18  6FC1               	movwf	sprintf@f& (0+255),b
  7138  001A1A  0E7F               	movlw	high STR_33
  7139  001A1C  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  7140  001A1E  0ECA               	movlw	low _MAC_TX_CNF
  7141  001A20  6FC3               	movwf	(?_sprintf+4)& (0+255),b
  7142  001A22  0E7D               	movlw	high _MAC_TX_CNF
  7143  001A24  6FC4               	movwf	(?_sprintf+5)& (0+255),b
  7144  001A26  C0F5  F0C5         	movff	TxLoRaWan@porta,?_sprintf+6
  7145  001A2A  6BC6               	clrf	(?_sprintf+7)& (0+255),b
  7146  001A2C  EC09  F000         	call	_sprintf	;wreg free
  7147  001A30  D012               	goto	l2164
  7148  001A32                     l2163:
  7149                           
  7150                           ;LoRaWanCore.c: 180: else
  7151                           ;LoRaWanCore.c: 181: sprintf(comando, "%s %d ", MAC_TX_UNCNF, porta);
  7152  001A32  0E20               	movlw	low TxLoRaWan@comando
  7153  001A34  0100               	movlb	0	; () banked
  7154  001A36  6FBF               	movwf	sprintf@sp& (0+255),b
  7155  001A38  0E01               	movlw	high TxLoRaWan@comando
  7156  001A3A  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  7157  001A3C  0EC1               	movlw	low STR_33
  7158  001A3E  6FC1               	movwf	sprintf@f& (0+255),b
  7159  001A40  0E7F               	movlw	high STR_33
  7160  001A42  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  7161  001A44  0EAA               	movlw	low _MAC_TX_UNCNF
  7162  001A46  6FC3               	movwf	(?_sprintf+4)& (0+255),b
  7163  001A48  0E7D               	movlw	high _MAC_TX_UNCNF
  7164  001A4A  6FC4               	movwf	(?_sprintf+5)& (0+255),b
  7165  001A4C  C0F5  F0C5         	movff	TxLoRaWan@porta,?_sprintf+6
  7166  001A50  6BC6               	clrf	(?_sprintf+7)& (0+255),b
  7167  001A52  EC09  F000         	call	_sprintf	;wreg free
  7168  001A56                     l2164:
  7169                           
  7170                           ;LoRaWanCore.c: 183: for (uint8_t i=0;i<tamData;i++)
  7171  001A56  0E00               	movlw	0
  7172  001A58  0101               	movlb	1	; () banked
  7173  001A5A  6FEE               	movwf	TxLoRaWan@i& (0+255),b
  7174  001A5C  D175               	goto	l2165
  7175  001A5E                     
  7176                           ; BSR set to: 1
  7177                           ;LoRaWanCore.c: 184: {
  7178                           ;LoRaWanCore.c: 186: if (i == 2 || i == 3) {
  7179                           
  7180                           ; BSR set to: 1
  7181  001A5E  0E02               	movlw	2
  7182  001A60  19EE               	xorwf	TxLoRaWan@i& (0+255),w,b
  7183  001A62  B4D8               	btfsc	status,2,c
  7184  001A64  D004               	goto	u9550
  7185                           
  7186                           ; BSR set to: 1
  7187  001A66  0E03               	movlw	3
  7188  001A68  19EE               	xorwf	TxLoRaWan@i& (0+255),w,b
  7189  001A6A  A4D8               	btfss	status,2,c
  7190  001A6C  D00A               	goto	l2167
  7191  001A6E                     u9550:
  7192                           
  7193                           ; BSR set to: 1
  7194                           ;LoRaWanCore.c: 187: if (retornaDado(1,4) == 1) {
  7195                           
  7196                           ; BSR set to: 1
  7197  001A6E  0E04               	movlw	4
  7198  001A70  0100               	movlb	0	; () banked
  7199  001A72  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7200  001A74  0E01               	movlw	1
  7201  001A76  EC58  F027         	call	_retornaDado
  7202  001A7A                     L4:
  7203  001A7A  06E8               	decf	wreg,f,c
  7204  001A7C  B4D8               	btfsc	status,2,c
  7205  001A7E  D162               	goto	l2171
  7206  001A80  D13C               	goto	l2240
  7207  001A82                     l2167:
  7208                           
  7209                           ;LoRaWanCore.c: 189: else if (i == 4 || i == 5 ){
  7210  001A82  0E04               	movlw	4
  7211  001A84  0101               	movlb	1	; () banked
  7212  001A86  19EE               	xorwf	TxLoRaWan@i& (0+255),w,b
  7213  001A88  B4D8               	btfsc	status,2,c
  7214  001A8A  D004               	goto	u9580
  7215                           
  7216                           ; BSR set to: 1
  7217  001A8C  0E05               	movlw	5
  7218  001A8E  19EE               	xorwf	TxLoRaWan@i& (0+255),w,b
  7219  001A90  A4D8               	btfss	status,2,c
  7220  001A92  D007               	goto	l2173
  7221  001A94                     u9580:
  7222                           
  7223                           ; BSR set to: 1
  7224                           ;LoRaWanCore.c: 190: if (retornaDado(1,5) == 1) {
  7225                           
  7226                           ; BSR set to: 1
  7227  001A94  0E05               	movlw	5
  7228  001A96  0100               	movlb	0	; () banked
  7229  001A98  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7230  001A9A  0E01               	movlw	1
  7231  001A9C  EC58  F027         	call	_retornaDado
  7232  001AA0  D7EC               	goto	L4
  7233  001AA2                     l2173:
  7234                           
  7235                           ;LoRaWanCore.c: 193: else if (i == 9){
  7236  001AA2  0E09               	movlw	9
  7237  001AA4  0101               	movlb	1	; () banked
  7238  001AA6  19EE               	xorwf	TxLoRaWan@i& (0+255),w,b
  7239  001AA8  A4D8               	btfss	status,2,c
  7240  001AAA  D010               	goto	l2178
  7241                           
  7242                           ; BSR set to: 1
  7243                           ;LoRaWanCore.c: 194: if((retornaDado(5,0) == 1) || (retornaDado(5,1) == 1)){
  7244  001AAC  0E00               	movlw	0
  7245  001AAE  0100               	movlb	0	; () banked
  7246  001AB0  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7247  001AB2  0E05               	movlw	5
  7248  001AB4  EC58  F027         	call	_retornaDado
  7249  001AB8  06E8               	decf	wreg,f,c
  7250  001ABA  B4D8               	btfsc	status,2,c
  7251  001ABC  D143               	goto	l2171
  7252  001ABE  0E01               	movlw	1
  7253  001AC0  0100               	movlb	0	; () banked
  7254  001AC2  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7255  001AC4  0E05               	movlw	5
  7256  001AC6  EC58  F027         	call	_retornaDado
  7257  001ACA  D7D7               	goto	L4
  7258  001ACC                     l2178:
  7259                           
  7260                           ;LoRaWanCore.c: 196: else if (i == 8){
  7261  001ACC  0E08               	movlw	8
  7262  001ACE  0101               	movlb	1	; () banked
  7263  001AD0  19EE               	xorwf	TxLoRaWan@i& (0+255),w,b
  7264  001AD2  A4D8               	btfss	status,2,c
  7265  001AD4  D010               	goto	l2183
  7266                           
  7267                           ; BSR set to: 1
  7268                           ;LoRaWanCore.c: 197: if((retornaDado(5,0) == 1) || (retornaDado(5,1) == 1)){
  7269  001AD6  0E00               	movlw	0
  7270  001AD8  0100               	movlb	0	; () banked
  7271  001ADA  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7272  001ADC  0E05               	movlw	5
  7273  001ADE  EC58  F027         	call	_retornaDado
  7274  001AE2  06E8               	decf	wreg,f,c
  7275  001AE4  B4D8               	btfsc	status,2,c
  7276  001AE6  D12E               	goto	l2171
  7277  001AE8  0E01               	movlw	1
  7278  001AEA  0100               	movlb	0	; () banked
  7279  001AEC  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7280  001AEE  0E05               	movlw	5
  7281  001AF0  EC58  F027         	call	_retornaDado
  7282  001AF4  D7C2               	goto	L4
  7283  001AF6                     l2183:
  7284                           
  7285                           ;LoRaWanCore.c: 199: else if (i == 7){
  7286  001AF6  0E07               	movlw	7
  7287  001AF8  0101               	movlb	1	; () banked
  7288  001AFA  19EE               	xorwf	TxLoRaWan@i& (0+255),w,b
  7289  001AFC  A4D8               	btfss	status,2,c
  7290  001AFE  D007               	goto	l2188
  7291                           
  7292                           ; BSR set to: 1
  7293                           ;LoRaWanCore.c: 200: if((retornaDado(5,0) == 1)){
  7294  001B00  0E00               	movlw	0
  7295  001B02  0100               	movlb	0	; () banked
  7296  001B04  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7297  001B06  0E05               	movlw	5
  7298  001B08  EC58  F027         	call	_retornaDado
  7299  001B0C  D7B6               	goto	L4
  7300  001B0E                     l2188:
  7301                           
  7302                           ;LoRaWanCore.c: 202: else if (i == 6){
  7303  001B0E  0E06               	movlw	6
  7304  001B10  0101               	movlb	1	; () banked
  7305  001B12  19EE               	xorwf	TxLoRaWan@i& (0+255),w,b
  7306  001B14  A4D8               	btfss	status,2,c
  7307  001B16  D010               	goto	l2191
  7308                           
  7309                           ; BSR set to: 1
  7310                           ;LoRaWanCore.c: 203: if((retornaDado(5,0) == 1) && (retornaDado(5,1) == 1)){
  7311  001B18  0E00               	movlw	0
  7312  001B1A  0100               	movlb	0	; () banked
  7313  001B1C  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7314  001B1E  0E05               	movlw	5
  7315  001B20  EC58  F027         	call	_retornaDado
  7316  001B24  06E8               	decf	wreg,f,c
  7317  001B26  A4D8               	btfss	status,2,c
  7318  001B28  D0E8               	goto	l2240
  7319  001B2A  0E01               	movlw	1
  7320  001B2C  0100               	movlb	0	; () banked
  7321  001B2E  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7322  001B30  0E05               	movlw	5
  7323  001B32  EC58  F027         	call	_retornaDado
  7324  001B36  D7A1               	goto	L4
  7325  001B38                     l2191:
  7326                           
  7327                           ;LoRaWanCore.c: 206: else if (i == 13){
  7328  001B38  0E0D               	movlw	13
  7329  001B3A  0101               	movlb	1	; () banked
  7330  001B3C  19EE               	xorwf	TxLoRaWan@i& (0+255),w,b
  7331  001B3E  A4D8               	btfss	status,2,c
  7332  001B40  D010               	goto	l2194
  7333                           
  7334                           ; BSR set to: 1
  7335                           ;LoRaWanCore.c: 207: if((retornaDado(5,2) == 1) || (retornaDado(5,3) == 1)){
  7336  001B42  0E02               	movlw	2
  7337  001B44  0100               	movlb	0	; () banked
  7338  001B46  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7339  001B48  0E05               	movlw	5
  7340  001B4A  EC58  F027         	call	_retornaDado
  7341  001B4E  06E8               	decf	wreg,f,c
  7342  001B50  B4D8               	btfsc	status,2,c
  7343  001B52  D0F8               	goto	l2171
  7344  001B54  0E03               	movlw	3
  7345  001B56  0100               	movlb	0	; () banked
  7346  001B58  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7347  001B5A  0E05               	movlw	5
  7348  001B5C  EC58  F027         	call	_retornaDado
  7349  001B60  D78C               	goto	L4
  7350  001B62                     l2194:
  7351                           
  7352                           ;LoRaWanCore.c: 209: else if (i == 12){
  7353  001B62  0E0C               	movlw	12
  7354  001B64  0101               	movlb	1	; () banked
  7355  001B66  19EE               	xorwf	TxLoRaWan@i& (0+255),w,b
  7356  001B68  A4D8               	btfss	status,2,c
  7357  001B6A  D010               	goto	l2199
  7358                           
  7359                           ; BSR set to: 1
  7360                           ;LoRaWanCore.c: 210: if((retornaDado(5,2) == 1) || (retornaDado(5,3) == 1)){
  7361  001B6C  0E02               	movlw	2
  7362  001B6E  0100               	movlb	0	; () banked
  7363  001B70  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7364  001B72  0E05               	movlw	5
  7365  001B74  EC58  F027         	call	_retornaDado
  7366  001B78  06E8               	decf	wreg,f,c
  7367  001B7A  B4D8               	btfsc	status,2,c
  7368  001B7C  D0E3               	goto	l2171
  7369  001B7E  0E03               	movlw	3
  7370  001B80  0100               	movlb	0	; () banked
  7371  001B82  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7372  001B84  0E05               	movlw	5
  7373  001B86  EC58  F027         	call	_retornaDado
  7374  001B8A  D777               	goto	L4
  7375  001B8C                     l2199:
  7376                           
  7377                           ;LoRaWanCore.c: 212: else if (i == 11){
  7378  001B8C  0E0B               	movlw	11
  7379  001B8E  0101               	movlb	1	; () banked
  7380  001B90  19EE               	xorwf	TxLoRaWan@i& (0+255),w,b
  7381  001B92  A4D8               	btfss	status,2,c
  7382  001B94  D007               	goto	l2204
  7383                           
  7384                           ; BSR set to: 1
  7385                           ;LoRaWanCore.c: 213: if((retornaDado(5,2) == 1)){
  7386  001B96  0E02               	movlw	2
  7387  001B98  0100               	movlb	0	; () banked
  7388  001B9A  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7389  001B9C  0E05               	movlw	5
  7390  001B9E  EC58  F027         	call	_retornaDado
  7391  001BA2  D76B               	goto	L4
  7392  001BA4                     l2204:
  7393                           
  7394                           ;LoRaWanCore.c: 215: else if (i == 10){
  7395  001BA4  0E0A               	movlw	10
  7396  001BA6  0101               	movlb	1	; () banked
  7397  001BA8  19EE               	xorwf	TxLoRaWan@i& (0+255),w,b
  7398  001BAA  A4D8               	btfss	status,2,c
  7399  001BAC  D010               	goto	l2207
  7400                           
  7401                           ; BSR set to: 1
  7402                           ;LoRaWanCore.c: 216: if((retornaDado(5,2) == 1) && (retornaDado(5,3) == 1)){
  7403  001BAE  0E02               	movlw	2
  7404  001BB0  0100               	movlb	0	; () banked
  7405  001BB2  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7406  001BB4  0E05               	movlw	5
  7407  001BB6  EC58  F027         	call	_retornaDado
  7408  001BBA  06E8               	decf	wreg,f,c
  7409  001BBC  A4D8               	btfss	status,2,c
  7410  001BBE  D09D               	goto	l2240
  7411  001BC0  0E03               	movlw	3
  7412  001BC2  0100               	movlb	0	; () banked
  7413  001BC4  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7414  001BC6  0E05               	movlw	5
  7415  001BC8  EC58  F027         	call	_retornaDado
  7416  001BCC  D756               	goto	L4
  7417  001BCE                     l2207:
  7418                           
  7419                           ;LoRaWanCore.c: 219: else if (i == 17){
  7420  001BCE  0E11               	movlw	17
  7421  001BD0  0101               	movlb	1	; () banked
  7422  001BD2  19EE               	xorwf	TxLoRaWan@i& (0+255),w,b
  7423  001BD4  A4D8               	btfss	status,2,c
  7424  001BD6  D010               	goto	l2210
  7425                           
  7426                           ; BSR set to: 1
  7427                           ;LoRaWanCore.c: 220: if((retornaDado(5,4) == 1) || (retornaDado(5,5) == 1)){
  7428  001BD8  0E04               	movlw	4
  7429  001BDA  0100               	movlb	0	; () banked
  7430  001BDC  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7431  001BDE  0E05               	movlw	5
  7432  001BE0  EC58  F027         	call	_retornaDado
  7433  001BE4  06E8               	decf	wreg,f,c
  7434  001BE6  B4D8               	btfsc	status,2,c
  7435  001BE8  D0AD               	goto	l2171
  7436  001BEA  0E05               	movlw	5
  7437  001BEC  0100               	movlb	0	; () banked
  7438  001BEE  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7439  001BF0  0E05               	movlw	5
  7440  001BF2  EC58  F027         	call	_retornaDado
  7441  001BF6  D741               	goto	L4
  7442  001BF8                     l2210:
  7443                           
  7444                           ;LoRaWanCore.c: 222: else if (i == 16){
  7445  001BF8  0E10               	movlw	16
  7446  001BFA  0101               	movlb	1	; () banked
  7447  001BFC  19EE               	xorwf	TxLoRaWan@i& (0+255),w,b
  7448  001BFE  A4D8               	btfss	status,2,c
  7449  001C00  D010               	goto	l2215
  7450                           
  7451                           ; BSR set to: 1
  7452                           ;LoRaWanCore.c: 223: if((retornaDado(5,4) == 1) || (retornaDado(5,5) == 1)){
  7453  001C02  0E04               	movlw	4
  7454  001C04  0100               	movlb	0	; () banked
  7455  001C06  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7456  001C08  0E05               	movlw	5
  7457  001C0A  EC58  F027         	call	_retornaDado
  7458  001C0E  06E8               	decf	wreg,f,c
  7459  001C10  B4D8               	btfsc	status,2,c
  7460  001C12  D098               	goto	l2171
  7461  001C14  0E05               	movlw	5
  7462  001C16  0100               	movlb	0	; () banked
  7463  001C18  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7464  001C1A  0E05               	movlw	5
  7465  001C1C  EC58  F027         	call	_retornaDado
  7466  001C20  D72C               	goto	L4
  7467  001C22                     l2215:
  7468                           
  7469                           ;LoRaWanCore.c: 225: else if (i == 15){
  7470  001C22  0E0F               	movlw	15
  7471  001C24  0101               	movlb	1	; () banked
  7472  001C26  19EE               	xorwf	TxLoRaWan@i& (0+255),w,b
  7473  001C28  A4D8               	btfss	status,2,c
  7474  001C2A  D007               	goto	l2220
  7475                           
  7476                           ; BSR set to: 1
  7477                           ;LoRaWanCore.c: 226: if((retornaDado(5,4) == 1)){
  7478  001C2C  0E04               	movlw	4
  7479  001C2E  0100               	movlb	0	; () banked
  7480  001C30  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7481  001C32  0E05               	movlw	5
  7482  001C34  EC58  F027         	call	_retornaDado
  7483  001C38  D720               	goto	L4
  7484  001C3A                     l2220:
  7485                           
  7486                           ;LoRaWanCore.c: 228: else if (i == 14){
  7487  001C3A  0E0E               	movlw	14
  7488  001C3C  0101               	movlb	1	; () banked
  7489  001C3E  19EE               	xorwf	TxLoRaWan@i& (0+255),w,b
  7490  001C40  A4D8               	btfss	status,2,c
  7491  001C42  D010               	goto	l2223
  7492                           
  7493                           ; BSR set to: 1
  7494                           ;LoRaWanCore.c: 229: if((retornaDado(5,4) == 1) && (retornaDado(5,5) == 1)){
  7495  001C44  0E04               	movlw	4
  7496  001C46  0100               	movlb	0	; () banked
  7497  001C48  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7498  001C4A  0E05               	movlw	5
  7499  001C4C  EC58  F027         	call	_retornaDado
  7500  001C50  06E8               	decf	wreg,f,c
  7501  001C52  A4D8               	btfss	status,2,c
  7502  001C54  D052               	goto	l2240
  7503  001C56  0E05               	movlw	5
  7504  001C58  0100               	movlb	0	; () banked
  7505  001C5A  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7506  001C5C  0E05               	movlw	5
  7507  001C5E  EC58  F027         	call	_retornaDado
  7508  001C62  D70B               	goto	L4
  7509  001C64                     l2223:
  7510                           
  7511                           ;LoRaWanCore.c: 232: else if (i == 21){
  7512  001C64  0E15               	movlw	21
  7513  001C66  0101               	movlb	1	; () banked
  7514  001C68  19EE               	xorwf	TxLoRaWan@i& (0+255),w,b
  7515  001C6A  A4D8               	btfss	status,2,c
  7516  001C6C  D010               	goto	l2226
  7517                           
  7518                           ; BSR set to: 1
  7519                           ;LoRaWanCore.c: 233: if((retornaDado(5,6) == 1) || (retornaDado(5,7) == 1)){
  7520  001C6E  0E06               	movlw	6
  7521  001C70  0100               	movlb	0	; () banked
  7522  001C72  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7523  001C74  0E05               	movlw	5
  7524  001C76  EC58  F027         	call	_retornaDado
  7525  001C7A  06E8               	decf	wreg,f,c
  7526  001C7C  B4D8               	btfsc	status,2,c
  7527  001C7E  D062               	goto	l2171
  7528  001C80  0E07               	movlw	7
  7529  001C82  0100               	movlb	0	; () banked
  7530  001C84  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7531  001C86  0E05               	movlw	5
  7532  001C88  EC58  F027         	call	_retornaDado
  7533  001C8C  D6F6               	goto	L4
  7534  001C8E                     l2226:
  7535                           
  7536                           ;LoRaWanCore.c: 235: else if (i == 20){
  7537  001C8E  0E14               	movlw	20
  7538  001C90  0101               	movlb	1	; () banked
  7539  001C92  19EE               	xorwf	TxLoRaWan@i& (0+255),w,b
  7540  001C94  A4D8               	btfss	status,2,c
  7541  001C96  D010               	goto	l2231
  7542                           
  7543                           ; BSR set to: 1
  7544                           ;LoRaWanCore.c: 236: if((retornaDado(5,6) == 1) || (retornaDado(5,7) == 1)){
  7545  001C98  0E06               	movlw	6
  7546  001C9A  0100               	movlb	0	; () banked
  7547  001C9C  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7548  001C9E  0E05               	movlw	5
  7549  001CA0  EC58  F027         	call	_retornaDado
  7550  001CA4  06E8               	decf	wreg,f,c
  7551  001CA6  B4D8               	btfsc	status,2,c
  7552  001CA8  D04D               	goto	l2171
  7553  001CAA  0E07               	movlw	7
  7554  001CAC  0100               	movlb	0	; () banked
  7555  001CAE  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7556  001CB0  0E05               	movlw	5
  7557  001CB2  EC58  F027         	call	_retornaDado
  7558  001CB6  D6E1               	goto	L4
  7559  001CB8                     l2231:
  7560                           
  7561                           ;LoRaWanCore.c: 238: else if (i == 19){
  7562  001CB8  0E13               	movlw	19
  7563  001CBA  0101               	movlb	1	; () banked
  7564  001CBC  19EE               	xorwf	TxLoRaWan@i& (0+255),w,b
  7565  001CBE  A4D8               	btfss	status,2,c
  7566  001CC0  D007               	goto	l2236
  7567                           
  7568                           ; BSR set to: 1
  7569                           ;LoRaWanCore.c: 239: if((retornaDado(5,6) == 1)){
  7570  001CC2  0E06               	movlw	6
  7571  001CC4  0100               	movlb	0	; () banked
  7572  001CC6  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7573  001CC8  0E05               	movlw	5
  7574  001CCA  EC58  F027         	call	_retornaDado
  7575  001CCE  D6D5               	goto	L4
  7576  001CD0                     l2236:
  7577                           
  7578                           ;LoRaWanCore.c: 241: else if (i == 18){
  7579  001CD0  0E12               	movlw	18
  7580  001CD2  0101               	movlb	1	; () banked
  7581  001CD4  19EE               	xorwf	TxLoRaWan@i& (0+255),w,b
  7582  001CD6  A4D8               	btfss	status,2,c
  7583  001CD8  D010               	goto	l2240
  7584                           
  7585                           ; BSR set to: 1
  7586                           ;LoRaWanCore.c: 242: if((retornaDado(5,6) == 1) && (retornaDado(5,7) == 1)){
  7587  001CDA  0E06               	movlw	6
  7588  001CDC  0100               	movlb	0	; () banked
  7589  001CDE  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7590  001CE0  0E05               	movlw	5
  7591  001CE2  EC58  F027         	call	_retornaDado
  7592  001CE6  06E8               	decf	wreg,f,c
  7593  001CE8  A4D8               	btfss	status,2,c
  7594  001CEA  D007               	goto	l2240
  7595  001CEC  0E07               	movlw	7
  7596  001CEE  0100               	movlb	0	; () banked
  7597  001CF0  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7598  001CF2  0E05               	movlw	5
  7599  001CF4  EC58  F027         	call	_retornaDado
  7600  001CF8  D6C0               	goto	L4
  7601  001CFA                     l2240:
  7602                           
  7603                           ;LoRaWanCore.c: 246: sprintf(hex, "%02X", data[i]);
  7604  001CFA  0EEA               	movlw	low TxLoRaWan@hex
  7605  001CFC  0100               	movlb	0	; () banked
  7606  001CFE  6FBF               	movwf	sprintf@sp& (0+255),b
  7607  001D00  0E01               	movlw	high TxLoRaWan@hex
  7608  001D02  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  7609  001D04  0EF0               	movlw	low STR_35
  7610  001D06  6FC1               	movwf	sprintf@f& (0+255),b
  7611  001D08  0E7F               	movlw	high STR_35
  7612  001D0A  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  7613  001D0C  0101               	movlb	1	; () banked
  7614  001D0E  51EE               	movf	TxLoRaWan@i& (0+255),w,b
  7615  001D10  0D01               	mullw	1
  7616  001D12  50F3               	movf	prodl,w,c
  7617  001D14  0100               	movlb	0	; () banked
  7618  001D16  25F6               	addwf	TxLoRaWan@data& (0+255),w,b
  7619  001D18  6ED9               	movwf	fsr2l,c
  7620  001D1A  50F4               	movf	prodh,w,c
  7621  001D1C  21F7               	addwfc	(TxLoRaWan@data+1)& (0+255),w,b
  7622  001D1E  6EDA               	movwf	fsr2h,c
  7623  001D20  50DF               	movf	indf2,w,c
  7624  001D22  6FF9               	movwf	??_TxLoRaWan& (0+255),b
  7625  001D24  51F9               	movf	??_TxLoRaWan& (0+255),w,b
  7626  001D26  6FC3               	movwf	(?_sprintf+4)& (0+255),b
  7627  001D28  6BC4               	clrf	(?_sprintf+5)& (0+255),b
  7628  001D2A  EC09  F000         	call	_sprintf	;wreg free
  7629                           
  7630                           ;LoRaWanCore.c: 247: strcat(comando,hex);
  7631  001D2E  0E20               	movlw	low TxLoRaWan@comando
  7632  001D30  0100               	movlb	0	; () banked
  7633  001D32  6F60               	movwf	strcat@to& (0+255),b
  7634  001D34  0E01               	movlw	high TxLoRaWan@comando
  7635  001D36  6F61               	movwf	(strcat@to+1)& (0+255),b
  7636  001D38  0EEA               	movlw	low TxLoRaWan@hex
  7637  001D3A  6F62               	movwf	strcat@from& (0+255),b
  7638  001D3C  0E01               	movlw	high TxLoRaWan@hex
  7639  001D3E  6F63               	movwf	(strcat@from+1)& (0+255),b
  7640  001D40  ECB4  F028         	call	_strcat	;wreg free
  7641  001D44                     l2171:
  7642  001D44  0101               	movlb	1	; () banked
  7643  001D46  2BEE               	incf	TxLoRaWan@i& (0+255),f,b
  7644  001D48                     l2165:
  7645                           
  7646                           ; BSR set to: 1
  7647                           
  7648                           ; BSR set to: 1
  7649  001D48  0100               	movlb	0	; () banked
  7650  001D4A  51F8               	movf	TxLoRaWan@tamData& (0+255),w,b
  7651  001D4C  0101               	movlb	1	; () banked
  7652  001D4E  5DEE               	subwf	TxLoRaWan@i& (0+255),w,b
  7653  001D50  A0D8               	btfss	status,0,c
  7654  001D52  D685               	goto	l2166
  7655  001D54                     u10040:
  7656                           
  7657                           ;LoRaWanCore.c: 252: {
  7658                           ;LoRaWanCore.c: 253: uint8_t status=enviaComando(comando,0);
  7659                           
  7660                           ; BSR set to: 1
  7661                           
  7662                           ;LoRaWanCore.c: 248: }
  7663                           ;LoRaWanCore.c: 251: while (1)
  7664                           
  7665                           ; BSR set to: 1
  7666  001D54  0E20               	movlw	low TxLoRaWan@comando
  7667  001D56  0100               	movlb	0	; () banked
  7668  001D58  6F7C               	movwf	enviaComando@cmd& (0+255),b
  7669  001D5A  0E01               	movlw	high TxLoRaWan@comando
  7670  001D5C  6F7D               	movwf	(enviaComando@cmd+1)& (0+255),b
  7671  001D5E  0E00               	movlw	0
  7672  001D60  6F7E               	movwf	enviaComando@tipoComando& (0+255),b
  7673  001D62  EC3B  F01B         	call	_enviaComando	;wreg free
  7674  001D66  0101               	movlb	1	; () banked
  7675  001D68  6FE9               	movwf	TxLoRaWan@status& (0+255),b
  7676                           
  7677                           ;LoRaWanCore.c: 254: switch (status)
  7678  001D6A  D015               	goto	l2243
  7679  001D6C                     
  7680                           ; BSR set to: 1
  7681                           ;LoRaWanCore.c: 257: return (parseLoRaWan()==9);
  7682                           
  7683                           ; BSR set to: 1
  7684  001D6C  EC59  F022         	call	_parseLoRaWan	;wreg free
  7685  001D70  0A09               	xorlw	9
  7686  001D72  A4D8               	btfss	status,2,c
  7687  001D74  D002               	goto	u10050
  7688  001D76  0E01               	movlw	1
  7689  001D78  0012               	return	
  7690  001D7A                     u10050:
  7691  001D7A  0E00               	movlw	0
  7692  001D7C  0012               	return	
  7693  001D7E                     
  7694                           ;LoRaWanCore.c: 259: case 5:
  7695                           ;LoRaWanCore.c: 260: {
  7696                           ;LoRaWanCore.c: 261: if (!JoinLoRaWan())
  7697  001D7E  EC1C  F02A         	call	_JoinLoRaWan	;wreg free
  7698  001D82  D002               	goto	L5
  7699  001D84                     
  7700                           ;LoRaWanCore.c: 266: {
  7701                           ;LoRaWanCore.c: 267: if (!ResetModuloLoRaWan())
  7702  001D84  EC12  F02B         	call	_ResetModuloLoRaWan	;wreg free
  7703  001D88                     L5:
  7704  001D88  0900               	iorlw	0
  7705  001D8A  A4D8               	btfss	status,2,c
  7706  001D8C  D7E3               	goto	u10040
  7707                           
  7708                           ;LoRaWanCore.c: 268: return 0;
  7709  001D8E  0E00               	movlw	0
  7710  001D90  0012               	return	
  7711  001D92                     
  7712                           ;LoRaWanCore.c: 273: return 0;
  7713  001D92  0E00               	movlw	0
  7714  001D94  0012               	return	
  7715  001D96                     l2243:
  7716  001D96  0101               	movlb	1	; () banked
  7717  001D98  51E9               	movf	TxLoRaWan@status& (0+255),w,b
  7718                           
  7719                           ; Switch size 1, requested type "space"
  7720                           ; Number of cases is 4, Range of values is 0 to 6
  7721                           ; switch strategies available:
  7722                           ; Name         Instructions Cycles
  7723                           ; simple_byte           13     7 (average)
  7724                           ;	Chosen strategy is simple_byte
  7725  001D9A  0A00               	xorlw	0	; case 0
  7726  001D9C  B4D8               	btfsc	status,2,c
  7727  001D9E  D7E6               	goto	l2244
  7728  001DA0  0A02               	xorlw	2	; case 2
  7729  001DA2  B4D8               	btfsc	status,2,c
  7730  001DA4  D7EC               	goto	l2246
  7731  001DA6  0A07               	xorlw	7	; case 5
  7732  001DA8  B4D8               	btfsc	status,2,c
  7733  001DAA  D7E9               	goto	l2246
  7734  001DAC  0A03               	xorlw	3	; case 6
  7735  001DAE  B4D8               	btfsc	status,2,c
  7736  001DB0  D7E9               	goto	l2250
  7737  001DB2  D7EF               	goto	l2252
  7738  001DB4                     __end_of_TxLoRaWan:
  7739                           	opt stack 0
  7740                           tblptru	equ	0xFF8
  7741                           tblptrh	equ	0xFF7
  7742                           tblptrl	equ	0xFF6
  7743                           tablat	equ	0xFF5
  7744                           prodh	equ	0xFF4
  7745                           prodl	equ	0xFF3
  7746                           intcon	equ	0xFF2
  7747                           postinc0	equ	0xFEE
  7748                           wreg	equ	0xFE8
  7749                           indf1	equ	0xFE7
  7750                           postdec1	equ	0xFE5
  7751                           fsr1h	equ	0xFE2
  7752                           fsr1l	equ	0xFE1
  7753                           indf2	equ	0xFDF
  7754                           postinc2	equ	0xFDE
  7755                           postdec2	equ	0xFDD
  7756                           plusw2	equ	0xFDB
  7757                           fsr2h	equ	0xFDA
  7758                           fsr2l	equ	0xFD9
  7759                           status	equ	0xFD8
  7760                           
  7761 ;; *************** function _strcat *****************
  7762 ;; Defined at:
  7763 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strcat.c"
  7764 ;; Parameters:    Size  Location     Type
  7765 ;;  to              2    0[BANK0 ] PTR unsigned char 
  7766 ;;		 -> TxLoRaWan@comando(200), frameBuffer(200), 
  7767 ;;  from            2    2[BANK0 ] PTR const unsigned char 
  7768 ;;		 -> TxLoRaWan@hex(4), addSensorFloat@f(30), addSensorInt@f(30), addSensorStr@f(30), 
  7769 ;; Auto vars:     Size  Location     Type
  7770 ;;  cp              2    4[BANK0 ] PTR unsigned char 
  7771 ;;		 -> TxLoRaWan@comando(200), frameBuffer(200), 
  7772 ;; Return value:  Size  Location     Type
  7773 ;;                  2    0[BANK0 ] PTR unsigned char 
  7774 ;; Registers used:
  7775 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7776 ;; Tracked objects:
  7777 ;;		On entry : 0/0
  7778 ;;		On exit  : 0/0
  7779 ;;		Unchanged: 0/0
  7780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7781 ;;      Params:         0       4       0       0       0       0       0       0       0
  7782 ;;      Locals:         0       2       0       0       0       0       0       0       0
  7783 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7784 ;;      Totals:         0       6       0       0       0       0       0       0       0
  7785 ;;Total ram usage:        6 bytes
  7786 ;; Hardware stack levels used:    1
  7787 ;; Hardware stack levels required when called:   10
  7788 ;; This function calls:
  7789 ;;		Nothing
  7790 ;; This function is called by:
  7791 ;;		_TxLoRaWan
  7792 ;;		_addSensorStr
  7793 ;;		_addSensorInt
  7794 ;;		_addSensorFloat
  7795 ;; This function uses a non-reentrant model
  7796 ;;
  7797                           
  7798                           	psect	text19
  7799  005168                     __ptext19:
  7800                           	opt stack 0
  7801  005168                     _strcat:
  7802                           	opt stack 19
  7803                           
  7804                           ;incstack = 0
  7805  005168  C060  F064         	movff	strcat@to,strcat@cp
  7806  00516C  C061  F065         	movff	strcat@to+1,strcat@cp+1
  7807  005170  D003               	goto	l3199
  7808  005172  0100               	movlb	0	; () banked
  7809  005174  4B64               	infsnz	strcat@cp& (0+255),f,b
  7810  005176  2B65               	incf	(strcat@cp+1)& (0+255),f,b
  7811  005178                     l3199:
  7812                           
  7813                           ; BSR set to: 0
  7814  005178  C064  FFD9         	movff	strcat@cp,fsr2l
  7815  00517C  C065  FFDA         	movff	strcat@cp+1,fsr2h
  7816  005180  50DF               	movf	indf2,w,c
  7817  005182  B4D8               	btfsc	status,2,c
  7818  005184  D006               	goto	l3202
  7819  005186  D7F5               	goto	l3200
  7820  005188  0100               	movlb	0	; () banked
  7821  00518A  4B64               	infsnz	strcat@cp& (0+255),f,b
  7822  00518C  2B65               	incf	(strcat@cp+1)& (0+255),f,b
  7823  00518E  4B62               	infsnz	strcat@from& (0+255),f,b
  7824  005190  2B63               	incf	(strcat@from+1)& (0+255),f,b
  7825  005192                     l3202:
  7826                           
  7827                           ; BSR set to: 0
  7828  005192  C062  FFD9         	movff	strcat@from,fsr2l
  7829  005196  C063  FFDA         	movff	strcat@from+1,fsr2h
  7830  00519A  C064  FFE1         	movff	strcat@cp,fsr1l
  7831  00519E  C065  FFE2         	movff	strcat@cp+1,fsr1h
  7832  0051A2  CFDF FFE7          	movff	indf2,indf1
  7833  0051A6  50E7               	movf	indf1,w,c
  7834  0051A8  B4D8               	btfsc	status,2,c
  7835  0051AA  0012               	return	
  7836  0051AC  D7ED               	goto	l3203
  7837  0051AE                     __end_of_strcat:
  7838                           	opt stack 0
  7839                           tblptru	equ	0xFF8
  7840                           tblptrh	equ	0xFF7
  7841                           tblptrl	equ	0xFF6
  7842                           tablat	equ	0xFF5
  7843                           prodh	equ	0xFF4
  7844                           prodl	equ	0xFF3
  7845                           intcon	equ	0xFF2
  7846                           postinc0	equ	0xFEE
  7847                           wreg	equ	0xFE8
  7848                           indf1	equ	0xFE7
  7849                           postdec1	equ	0xFE5
  7850                           fsr1h	equ	0xFE2
  7851                           fsr1l	equ	0xFE1
  7852                           indf2	equ	0xFDF
  7853                           postinc2	equ	0xFDE
  7854                           postdec2	equ	0xFDD
  7855                           plusw2	equ	0xFDB
  7856                           fsr2h	equ	0xFDA
  7857                           fsr2l	equ	0xFD9
  7858                           status	equ	0xFD8
  7859                           
  7860 ;; *************** function _ResetModuloLoRaWan *****************
  7861 ;; Defined at:
  7862 ;;		line 92 in file "LoRaWanCore.c"
  7863 ;; Parameters:    Size  Location     Type
  7864 ;;		None
  7865 ;; Auto vars:     Size  Location     Type
  7866 ;;  status          1   39[BANK0 ] unsigned char 
  7867 ;; Return value:  Size  Location     Type
  7868 ;;                  1    wreg      unsigned char 
  7869 ;; Registers used:
  7870 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7871 ;; Tracked objects:
  7872 ;;		On entry : 0/0
  7873 ;;		On exit  : 0/0
  7874 ;;		Unchanged: 0/0
  7875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7876 ;;      Params:         0       0       0       0       0       0       0       0       0
  7877 ;;      Locals:         0       1       0       0       0       0       0       0       0
  7878 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7879 ;;      Totals:         0       1       0       0       0       0       0       0       0
  7880 ;;Total ram usage:        1 bytes
  7881 ;; Hardware stack levels used:    1
  7882 ;; Hardware stack levels required when called:   13
  7883 ;; This function calls:
  7884 ;;		_enviaComando
  7885 ;; This function is called by:
  7886 ;;		_TxLoRaWan
  7887 ;; This function uses a non-reentrant model
  7888 ;;
  7889                           
  7890                           	psect	text20
  7891  005624                     __ptext20:
  7892                           	opt stack 0
  7893  005624                     _ResetModuloLoRaWan:
  7894                           	opt stack 16
  7895                           
  7896                           ;LoRaWanCore.c: 94: uint8_t status;
  7897                           ;LoRaWanCore.c: 96: status=enviaComando(SYS_RESET,1);
  7898                           
  7899                           ;incstack = 0
  7900  005624  0ED1               	movlw	low _SYS_RESET
  7901  005626  0100               	movlb	0	; () banked
  7902  005628  6F7C               	movwf	enviaComando@cmd& (0+255),b
  7903  00562A  0E7D               	movlw	high _SYS_RESET
  7904  00562C  6F7D               	movwf	(enviaComando@cmd+1)& (0+255),b
  7905  00562E  0E01               	movlw	1
  7906  005630  6F7E               	movwf	enviaComando@tipoComando& (0+255),b
  7907  005632  EC3B  F01B         	call	_enviaComando	;wreg free
  7908  005636  0100               	movlb	0	; () banked
  7909  005638  6F87               	movwf	ResetModuloLoRaWan@status& (0+255),b
  7910                           
  7911                           ; BSR set to: 0
  7912                           ;LoRaWanCore.c: 97: return (status==15);
  7913  00563A  0E0F               	movlw	15
  7914  00563C  1987               	xorwf	ResetModuloLoRaWan@status& (0+255),w,b
  7915  00563E  A4D8               	btfss	status,2,c
  7916  005640  D002               	goto	u8610
  7917  005642  0E01               	movlw	1
  7918  005644  0012               	return	
  7919  005646                     u8610:
  7920  005646  0E00               	movlw	0
  7921  005648  0012               	return	
  7922  00564A                     __end_of_ResetModuloLoRaWan:
  7923                           	opt stack 0
  7924                           tblptru	equ	0xFF8
  7925                           tblptrh	equ	0xFF7
  7926                           tblptrl	equ	0xFF6
  7927                           tablat	equ	0xFF5
  7928                           prodh	equ	0xFF4
  7929                           prodl	equ	0xFF3
  7930                           intcon	equ	0xFF2
  7931                           postinc0	equ	0xFEE
  7932                           wreg	equ	0xFE8
  7933                           indf1	equ	0xFE7
  7934                           postdec1	equ	0xFE5
  7935                           fsr1h	equ	0xFE2
  7936                           fsr1l	equ	0xFE1
  7937                           indf2	equ	0xFDF
  7938                           postinc2	equ	0xFDE
  7939                           postdec2	equ	0xFDD
  7940                           plusw2	equ	0xFDB
  7941                           fsr2h	equ	0xFDA
  7942                           fsr2l	equ	0xFD9
  7943                           status	equ	0xFD8
  7944                           
  7945 ;; *************** function _JoinLoRaWan *****************
  7946 ;; Defined at:
  7947 ;;		line 100 in file "LoRaWanCore.c"
  7948 ;; Parameters:    Size  Location     Type
  7949 ;;		None
  7950 ;; Auto vars:     Size  Location     Type
  7951 ;;  status          1   39[BANK0 ] unsigned char 
  7952 ;; Return value:  Size  Location     Type
  7953 ;;                  1    wreg      unsigned char 
  7954 ;; Registers used:
  7955 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7956 ;; Tracked objects:
  7957 ;;		On entry : 0/0
  7958 ;;		On exit  : 0/0
  7959 ;;		Unchanged: 0/0
  7960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7961 ;;      Params:         0       0       0       0       0       0       0       0       0
  7962 ;;      Locals:         0       1       0       0       0       0       0       0       0
  7963 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7964 ;;      Totals:         0       1       0       0       0       0       0       0       0
  7965 ;;Total ram usage:        1 bytes
  7966 ;; Hardware stack levels used:    1
  7967 ;; Hardware stack levels required when called:   13
  7968 ;; This function calls:
  7969 ;;		_enviaComando
  7970 ;;		_parseLoRaWan
  7971 ;; This function is called by:
  7972 ;;		_TxLoRaWan
  7973 ;; This function uses a non-reentrant model
  7974 ;;
  7975                           
  7976                           	psect	text21
  7977  005438                     __ptext21:
  7978                           	opt stack 0
  7979  005438                     _JoinLoRaWan:
  7980                           	opt stack 16
  7981                           
  7982                           ;LoRaWanCore.c: 102: uint8_t status;
  7983                           ;LoRaWanCore.c: 104: status=enviaComando(MAC_JOIN_OTAA,0);
  7984                           
  7985                           ; BSR set to: 0
  7986                           ;incstack = 0
  7987  005438  0EA0               	movlw	low _MAC_JOIN_OTAA
  7988  00543A  0100               	movlb	0	; () banked
  7989  00543C  6F7C               	movwf	enviaComando@cmd& (0+255),b
  7990  00543E  0E7D               	movlw	high _MAC_JOIN_OTAA
  7991  005440  6F7D               	movwf	(enviaComando@cmd+1)& (0+255),b
  7992  005442  0E00               	movlw	0
  7993  005444  6F7E               	movwf	enviaComando@tipoComando& (0+255),b
  7994  005446  EC3B  F01B         	call	_enviaComando	;wreg free
  7995  00544A  0100               	movlb	0	; () banked
  7996  00544C  6F87               	movwf	JoinLoRaWan@status& (0+255),b
  7997                           
  7998                           ;LoRaWanCore.c: 105: switch (status)
  7999  00544E  D00B               	goto	l2133
  8000  005450                     
  8001                           ; BSR set to: 0
  8002                           ;LoRaWanCore.c: 108: return (parseLoRaWan()==0);
  8003                           
  8004                           ; BSR set to: 0
  8005  005450  EC59  F022         	call	_parseLoRaWan	;wreg free
  8006  005454  0900               	iorlw	0
  8007  005456  A4D8               	btfss	status,2,c
  8008  005458  D002               	goto	u8630
  8009  00545A  0E01               	movlw	1
  8010  00545C  0012               	return	
  8011  00545E                     u8630:
  8012  00545E  0E00               	movlw	0
  8013  005460  0012               	return	
  8014  005462                     
  8015                           ;LoRaWanCore.c: 110: return 0;
  8016  005462  0E00               	movlw	0
  8017                           
  8018                           ;LoRaWanCore.c: 111: }
  8019  005464  0012               	return	
  8020  005466                     l2133:
  8021  005466  0100               	movlb	0	; () banked
  8022  005468  5187               	movf	JoinLoRaWan@status& (0+255),w,b
  8023                           
  8024                           ; Switch size 1, requested type "space"
  8025                           ; Number of cases is 1, Range of values is 0 to 0
  8026                           ; switch strategies available:
  8027                           ; Name         Instructions Cycles
  8028                           ; simple_byte            4     3 (average)
  8029                           ;	Chosen strategy is simple_byte
  8030  00546A  0A00               	xorlw	0	; case 0
  8031  00546C  B4D8               	btfsc	status,2,c
  8032  00546E  D7F0               	goto	l2134
  8033  005470  D7F8               	goto	l2136
  8034  005472                     __end_of_JoinLoRaWan:
  8035                           	opt stack 0
  8036                           tblptru	equ	0xFF8
  8037                           tblptrh	equ	0xFF7
  8038                           tblptrl	equ	0xFF6
  8039                           tablat	equ	0xFF5
  8040                           prodh	equ	0xFF4
  8041                           prodl	equ	0xFF3
  8042                           intcon	equ	0xFF2
  8043                           postinc0	equ	0xFEE
  8044                           wreg	equ	0xFE8
  8045                           indf1	equ	0xFE7
  8046                           postdec1	equ	0xFE5
  8047                           fsr1h	equ	0xFE2
  8048                           fsr1l	equ	0xFE1
  8049                           indf2	equ	0xFDF
  8050                           postinc2	equ	0xFDE
  8051                           postdec2	equ	0xFDD
  8052                           plusw2	equ	0xFDB
  8053                           fsr2h	equ	0xFDA
  8054                           fsr2l	equ	0xFD9
  8055                           status	equ	0xFD8
  8056                           
  8057 ;; *************** function _SetSpreadingFactor *****************
  8058 ;; Defined at:
  8059 ;;		line 149 in file "LoRaWanCore.c"
  8060 ;; Parameters:    Size  Location     Type
  8061 ;;  sf              1    wreg     unsigned char 
  8062 ;; Auto vars:     Size  Location     Type
  8063 ;;  sf              1  233[BANK1 ] unsigned char 
  8064 ;;  comando       200   32[BANK1 ] unsigned char [200]
  8065 ;;  status          1  232[BANK1 ] unsigned char 
  8066 ;; Return value:  Size  Location     Type
  8067 ;;                  1    wreg      unsigned char 
  8068 ;; Registers used:
  8069 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8070 ;; Tracked objects:
  8071 ;;		On entry : 0/0
  8072 ;;		On exit  : 0/0
  8073 ;;		Unchanged: 0/0
  8074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8075 ;;      Params:         0       0       0       0       0       0       0       0       0
  8076 ;;      Locals:         0       0     202       0       0       0       0       0       0
  8077 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8078 ;;      Totals:         0       0     202       0       0       0       0       0       0
  8079 ;;Total ram usage:      202 bytes
  8080 ;; Hardware stack levels used:    1
  8081 ;; Hardware stack levels required when called:   14
  8082 ;; This function calls:
  8083 ;;		_enviaComando
  8084 ;;		_sprintf
  8085 ;; This function is called by:
  8086 ;;		_main
  8087 ;; This function uses a non-reentrant model
  8088 ;;
  8089                           
  8090                           	psect	text22
  8091  005344                     __ptext22:
  8092                           	opt stack 0
  8093  005344                     _SetSpreadingFactor:
  8094                           	opt stack 16
  8095                           
  8096                           ;incstack = 0
  8097                           ;SetSpreadingFactor@sf stored from wreg
  8098  005344  0101               	movlb	1	; () banked
  8099  005346  6FE9               	movwf	SetSpreadingFactor@sf& (0+255),b
  8100                           
  8101                           ;LoRaWanCore.c: 150: char comando[200];
  8102                           ;LoRaWanCore.c: 152: sprintf(comando, "%s%d", MAC_SET_SF, sf);
  8103  005348  0E20               	movlw	low SetSpreadingFactor@comando
  8104  00534A  0100               	movlb	0	; () banked
  8105  00534C  6FBF               	movwf	sprintf@sp& (0+255),b
  8106  00534E  0E01               	movlw	high SetSpreadingFactor@comando
  8107  005350  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  8108  005352  0EF5               	movlw	low STR_30
  8109  005354  6FC1               	movwf	sprintf@f& (0+255),b
  8110  005356  0E7F               	movlw	high STR_30
  8111  005358  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  8112  00535A  0E4A               	movlw	low _MAC_SET_SF
  8113  00535C  6FC3               	movwf	(?_sprintf+4)& (0+255),b
  8114  00535E  0E7D               	movlw	high _MAC_SET_SF
  8115  005360  6FC4               	movwf	(?_sprintf+5)& (0+255),b
  8116  005362  C1E9  F0C5         	movff	SetSpreadingFactor@sf,?_sprintf+6
  8117  005366  6BC6               	clrf	(?_sprintf+7)& (0+255),b
  8118  005368  EC09  F000         	call	_sprintf	;wreg free
  8119                           
  8120                           ;LoRaWanCore.c: 153: uint8_t status=enviaComando(comando,0);
  8121  00536C  0E20               	movlw	low SetSpreadingFactor@comando
  8122  00536E  0100               	movlb	0	; () banked
  8123  005370  6F7C               	movwf	enviaComando@cmd& (0+255),b
  8124  005372  0E01               	movlw	high SetSpreadingFactor@comando
  8125  005374  6F7D               	movwf	(enviaComando@cmd+1)& (0+255),b
  8126  005376  0E00               	movlw	0
  8127  005378  6F7E               	movwf	enviaComando@tipoComando& (0+255),b
  8128  00537A  EC3B  F01B         	call	_enviaComando	;wreg free
  8129  00537E  0101               	movlb	1	; () banked
  8130  005380  6FE8               	movwf	SetSpreadingFactor@status& (0+255),b
  8131  005382  0012               	return	
  8132  005384                     __end_of_SetSpreadingFactor:
  8133                           	opt stack 0
  8134                           tblptru	equ	0xFF8
  8135                           tblptrh	equ	0xFF7
  8136                           tblptrl	equ	0xFF6
  8137                           tablat	equ	0xFF5
  8138                           prodh	equ	0xFF4
  8139                           prodl	equ	0xFF3
  8140                           intcon	equ	0xFF2
  8141                           postinc0	equ	0xFEE
  8142                           wreg	equ	0xFE8
  8143                           indf1	equ	0xFE7
  8144                           postdec1	equ	0xFE5
  8145                           fsr1h	equ	0xFE2
  8146                           fsr1l	equ	0xFE1
  8147                           indf2	equ	0xFDF
  8148                           postinc2	equ	0xFDE
  8149                           postdec2	equ	0xFDD
  8150                           plusw2	equ	0xFDB
  8151                           fsr2h	equ	0xFDA
  8152                           fsr2l	equ	0xFD9
  8153                           status	equ	0xFD8
  8154                           
  8155 ;; *************** function _SetDevEUI *****************
  8156 ;; Defined at:
  8157 ;;		line 68 in file "LoRaWanCore.c"
  8158 ;; Parameters:    Size  Location     Type
  8159 ;;		None
  8160 ;; Auto vars:     Size  Location     Type
  8161 ;;  comando       200   32[BANK1 ] unsigned char [200]
  8162 ;;  status          1  232[BANK1 ] unsigned char 
  8163 ;; Return value:  Size  Location     Type
  8164 ;;                  1    wreg      unsigned char 
  8165 ;; Registers used:
  8166 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8167 ;; Tracked objects:
  8168 ;;		On entry : 0/0
  8169 ;;		On exit  : 0/0
  8170 ;;		Unchanged: 0/0
  8171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8172 ;;      Params:         0       0       0       0       0       0       0       0       0
  8173 ;;      Locals:         0       0     201       0       0       0       0       0       0
  8174 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8175 ;;      Totals:         0       0     201       0       0       0       0       0       0
  8176 ;;Total ram usage:      201 bytes
  8177 ;; Hardware stack levels used:    1
  8178 ;; Hardware stack levels required when called:   14
  8179 ;; This function calls:
  8180 ;;		_enviaComando
  8181 ;;		_sprintf
  8182 ;; This function is called by:
  8183 ;;		_main
  8184 ;; This function uses a non-reentrant model
  8185 ;;
  8186                           
  8187                           	psect	text23
  8188  004BA8                     __ptext23:
  8189                           	opt stack 0
  8190  004BA8                     _SetDevEUI:
  8191                           	opt stack 16
  8192                           
  8193                           ;LoRaWanCore.c: 70: char comando[200];
  8194                           ;LoRaWanCore.c: 72: sprintf(comando, "%s %.2x%.2x%.2x%.2x%.2x%.2x%.2x%.2x", MAC_SET_DEVE
      +                          UI, 0x00,0x04,0xa3,0x0b,0x00,0x1b,0x8f,0x98 );
  8195                           
  8196                           ; BSR set to: 1
  8197                           ;incstack = 0
  8198  004BA8  0E20               	movlw	low SetDevEUI@comando
  8199  004BAA  0100               	movlb	0	; () banked
  8200  004BAC  6FBF               	movwf	sprintf@sp& (0+255),b
  8201  004BAE  0E01               	movlw	high SetDevEUI@comando
  8202  004BB0  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  8203  004BB2  0EB0               	movlw	low STR_22
  8204  004BB4  6FC1               	movwf	sprintf@f& (0+255),b
  8205  004BB6  0E7E               	movlw	high STR_22
  8206  004BB8  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  8207  004BBA  0E8B               	movlw	low _MAC_SET_DEVEUI
  8208  004BBC  6FC3               	movwf	(?_sprintf+4)& (0+255),b
  8209  004BBE  0E7D               	movlw	high _MAC_SET_DEVEUI
  8210  004BC0  6FC4               	movwf	(?_sprintf+5)& (0+255),b
  8211  004BC2  0E00               	movlw	0
  8212  004BC4  6FC6               	movwf	(?_sprintf+7)& (0+255),b
  8213  004BC6  0E00               	movlw	0
  8214  004BC8  6FC5               	movwf	(?_sprintf+6)& (0+255),b
  8215  004BCA  0E00               	movlw	0
  8216  004BCC  6FC8               	movwf	(?_sprintf+9)& (0+255),b
  8217  004BCE  0E04               	movlw	4
  8218  004BD0  6FC7               	movwf	(?_sprintf+8)& (0+255),b
  8219  004BD2  0E00               	movlw	0
  8220  004BD4  6FCA               	movwf	(?_sprintf+11)& (0+255),b
  8221  004BD6  0EA3               	movlw	163
  8222  004BD8  6FC9               	movwf	(?_sprintf+10)& (0+255),b
  8223  004BDA  0E00               	movlw	0
  8224  004BDC  6FCC               	movwf	(?_sprintf+13)& (0+255),b
  8225  004BDE  0E0B               	movlw	11
  8226  004BE0  6FCB               	movwf	(?_sprintf+12)& (0+255),b
  8227  004BE2  0E00               	movlw	0
  8228  004BE4  6FCE               	movwf	(?_sprintf+15)& (0+255),b
  8229  004BE6  0E00               	movlw	0
  8230  004BE8  6FCD               	movwf	(?_sprintf+14)& (0+255),b
  8231  004BEA  0E00               	movlw	0
  8232  004BEC  6FD0               	movwf	(?_sprintf+17)& (0+255),b
  8233  004BEE  0E1B               	movlw	27
  8234  004BF0  6FCF               	movwf	(?_sprintf+16)& (0+255),b
  8235  004BF2  0E00               	movlw	0
  8236  004BF4  6FD2               	movwf	(?_sprintf+19)& (0+255),b
  8237  004BF6  0E8F               	movlw	143
  8238  004BF8  6FD1               	movwf	(?_sprintf+18)& (0+255),b
  8239  004BFA  0E00               	movlw	0
  8240  004BFC  6FD4               	movwf	(?_sprintf+21)& (0+255),b
  8241  004BFE  0E98               	movlw	152
  8242  004C00  6FD3               	movwf	(?_sprintf+20)& (0+255),b
  8243  004C02  EC09  F000         	call	_sprintf	;wreg free
  8244                           
  8245                           ;LoRaWanCore.c: 73: uint8_t status=enviaComando(comando,0);
  8246  004C06  0E20               	movlw	low SetDevEUI@comando
  8247  004C08  0100               	movlb	0	; () banked
  8248  004C0A  6F7C               	movwf	enviaComando@cmd& (0+255),b
  8249  004C0C  0E01               	movlw	high SetDevEUI@comando
  8250  004C0E  6F7D               	movwf	(enviaComando@cmd+1)& (0+255),b
  8251  004C10  0E00               	movlw	0
  8252  004C12  6F7E               	movwf	enviaComando@tipoComando& (0+255),b
  8253  004C14  EC3B  F01B         	call	_enviaComando	;wreg free
  8254  004C18  0101               	movlb	1	; () banked
  8255  004C1A  6FE8               	movwf	SetDevEUI@status& (0+255),b
  8256  004C1C  0012               	return	
  8257  004C1E                     __end_of_SetDevEUI:
  8258                           	opt stack 0
  8259                           tblptru	equ	0xFF8
  8260                           tblptrh	equ	0xFF7
  8261                           tblptrl	equ	0xFF6
  8262                           tablat	equ	0xFF5
  8263                           prodh	equ	0xFF4
  8264                           prodl	equ	0xFF3
  8265                           intcon	equ	0xFF2
  8266                           postinc0	equ	0xFEE
  8267                           wreg	equ	0xFE8
  8268                           indf1	equ	0xFE7
  8269                           postdec1	equ	0xFE5
  8270                           fsr1h	equ	0xFE2
  8271                           fsr1l	equ	0xFE1
  8272                           indf2	equ	0xFDF
  8273                           postinc2	equ	0xFDE
  8274                           postdec2	equ	0xFDD
  8275                           plusw2	equ	0xFDB
  8276                           fsr2h	equ	0xFDA
  8277                           fsr2l	equ	0xFD9
  8278                           status	equ	0xFD8
  8279                           
  8280 ;; *************** function _SetChannelLoRaWan *****************
  8281 ;; Defined at:
  8282 ;;		line 114 in file "LoRaWanCore.c"
  8283 ;; Parameters:    Size  Location     Type
  8284 ;;  canal           1    wreg     unsigned char 
  8285 ;;  ligado          1  149[BANK0 ] unsigned char 
  8286 ;; Auto vars:     Size  Location     Type
  8287 ;;  canal           1  233[BANK1 ] unsigned char 
  8288 ;;  comando       200   32[BANK1 ] unsigned char [200]
  8289 ;;  status          1  232[BANK1 ] unsigned char 
  8290 ;; Return value:  Size  Location     Type
  8291 ;;                  1    wreg      unsigned char 
  8292 ;; Registers used:
  8293 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8294 ;; Tracked objects:
  8295 ;;		On entry : 0/0
  8296 ;;		On exit  : 0/0
  8297 ;;		Unchanged: 0/0
  8298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8299 ;;      Params:         0       1       0       0       0       0       0       0       0
  8300 ;;      Locals:         0       0     202       0       0       0       0       0       0
  8301 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8302 ;;      Totals:         0       1     202       0       0       0       0       0       0
  8303 ;;Total ram usage:      203 bytes
  8304 ;; Hardware stack levels used:    1
  8305 ;; Hardware stack levels required when called:   14
  8306 ;; This function calls:
  8307 ;;		_enviaComando
  8308 ;;		_sprintf
  8309 ;; This function is called by:
  8310 ;;		_main
  8311 ;; This function uses a non-reentrant model
  8312 ;;
  8313                           
  8314                           	psect	text24
  8315  004D78                     __ptext24:
  8316                           	opt stack 0
  8317  004D78                     _SetChannelLoRaWan:
  8318                           	opt stack 16
  8319                           
  8320                           ; BSR set to: 1
  8321                           ;incstack = 0
  8322                           ;SetChannelLoRaWan@canal stored from wreg
  8323  004D78  0101               	movlb	1	; () banked
  8324  004D7A  6FE9               	movwf	SetChannelLoRaWan@canal& (0+255),b
  8325                           
  8326                           ;LoRaWanCore.c: 116: char comando[200];
  8327                           ;LoRaWanCore.c: 117: if (ligado)
  8328  004D7C  0100               	movlb	0	; () banked
  8329  004D7E  51F5               	movf	SetChannelLoRaWan@ligado& (0+255),w,b
  8330  004D80  B4D8               	btfsc	status,2,c
  8331  004D82  D012               	goto	l2140
  8332                           
  8333                           ; BSR set to: 0
  8334                           ;LoRaWanCore.c: 118: sprintf(comando, "%s %d on", MAC_SET_CH_STATUS, canal);
  8335  004D84  0E20               	movlw	low SetChannelLoRaWan@comando
  8336  004D86  6FBF               	movwf	sprintf@sp& (0+255),b
  8337  004D88  0E01               	movlw	high SetChannelLoRaWan@comando
  8338  004D8A  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  8339  004D8C  0E99               	movlw	low STR_25
  8340  004D8E  6FC1               	movwf	sprintf@f& (0+255),b
  8341  004D90  0E7F               	movlw	high STR_25
  8342  004D92  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  8343  004D94  0E5A               	movlw	low _MAC_SET_CH_STATUS
  8344  004D96  6FC3               	movwf	(?_sprintf+4)& (0+255),b
  8345  004D98  0E7D               	movlw	high _MAC_SET_CH_STATUS
  8346  004D9A  6FC4               	movwf	(?_sprintf+5)& (0+255),b
  8347  004D9C  C1E9  F0C5         	movff	SetChannelLoRaWan@canal,?_sprintf+6
  8348  004DA0  6BC6               	clrf	(?_sprintf+7)& (0+255),b
  8349  004DA2  EC09  F000         	call	_sprintf	;wreg free
  8350  004DA6  D012               	goto	l2141
  8351  004DA8                     l2140:
  8352                           
  8353                           ;LoRaWanCore.c: 119: else
  8354                           ;LoRaWanCore.c: 120: sprintf(comando, "%s %d off", MAC_SET_CH_STATUS, canal);
  8355  004DA8  0E20               	movlw	low SetChannelLoRaWan@comando
  8356  004DAA  0100               	movlb	0	; () banked
  8357  004DAC  6FBF               	movwf	sprintf@sp& (0+255),b
  8358  004DAE  0E01               	movlw	high SetChannelLoRaWan@comando
  8359  004DB0  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  8360  004DB2  0E85               	movlw	low STR_26
  8361  004DB4  6FC1               	movwf	sprintf@f& (0+255),b
  8362  004DB6  0E7F               	movlw	high STR_26
  8363  004DB8  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  8364  004DBA  0E5A               	movlw	low _MAC_SET_CH_STATUS
  8365  004DBC  6FC3               	movwf	(?_sprintf+4)& (0+255),b
  8366  004DBE  0E7D               	movlw	high _MAC_SET_CH_STATUS
  8367  004DC0  6FC4               	movwf	(?_sprintf+5)& (0+255),b
  8368  004DC2  C1E9  F0C5         	movff	SetChannelLoRaWan@canal,?_sprintf+6
  8369  004DC6  6BC6               	clrf	(?_sprintf+7)& (0+255),b
  8370  004DC8  EC09  F000         	call	_sprintf	;wreg free
  8371  004DCC                     l2141:
  8372                           
  8373                           ;LoRaWanCore.c: 121: uint8_t status=enviaComando(comando,0);
  8374  004DCC  0E20               	movlw	low SetChannelLoRaWan@comando
  8375  004DCE  0100               	movlb	0	; () banked
  8376  004DD0  6F7C               	movwf	enviaComando@cmd& (0+255),b
  8377  004DD2  0E01               	movlw	high SetChannelLoRaWan@comando
  8378  004DD4  6F7D               	movwf	(enviaComando@cmd+1)& (0+255),b
  8379  004DD6  0E00               	movlw	0
  8380  004DD8  6F7E               	movwf	enviaComando@tipoComando& (0+255),b
  8381  004DDA  EC3B  F01B         	call	_enviaComando	;wreg free
  8382  004DDE  0101               	movlb	1	; () banked
  8383  004DE0  6FE8               	movwf	SetChannelLoRaWan@status& (0+255),b
  8384  004DE2  0012               	return	
  8385  004DE4                     __end_of_SetChannelLoRaWan:
  8386                           	opt stack 0
  8387                           tblptru	equ	0xFF8
  8388                           tblptrh	equ	0xFF7
  8389                           tblptrl	equ	0xFF6
  8390                           tablat	equ	0xFF5
  8391                           prodh	equ	0xFF4
  8392                           prodl	equ	0xFF3
  8393                           intcon	equ	0xFF2
  8394                           postinc0	equ	0xFEE
  8395                           wreg	equ	0xFE8
  8396                           indf1	equ	0xFE7
  8397                           postdec1	equ	0xFE5
  8398                           fsr1h	equ	0xFE2
  8399                           fsr1l	equ	0xFE1
  8400                           indf2	equ	0xFDF
  8401                           postinc2	equ	0xFDE
  8402                           postdec2	equ	0xFDD
  8403                           plusw2	equ	0xFDB
  8404                           fsr2h	equ	0xFDA
  8405                           fsr2l	equ	0xFD9
  8406                           status	equ	0xFD8
  8407                           
  8408 ;; *************** function _SetBandWidth *****************
  8409 ;; Defined at:
  8410 ;;		line 157 in file "LoRaWanCore.c"
  8411 ;; Parameters:    Size  Location     Type
  8412 ;;  bw              2  149[BANK0 ] unsigned int 
  8413 ;; Auto vars:     Size  Location     Type
  8414 ;;  comando       200   32[BANK1 ] unsigned char [200]
  8415 ;;  status          2  232[BANK1 ] unsigned int 
  8416 ;; Return value:  Size  Location     Type
  8417 ;;                  1    wreg      unsigned char 
  8418 ;; Registers used:
  8419 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8420 ;; Tracked objects:
  8421 ;;		On entry : 0/0
  8422 ;;		On exit  : 0/0
  8423 ;;		Unchanged: 0/0
  8424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8425 ;;      Params:         0       2       0       0       0       0       0       0       0
  8426 ;;      Locals:         0       0     202       0       0       0       0       0       0
  8427 ;;      Temps:          0       1       0       0       0       0       0       0       0
  8428 ;;      Totals:         0       3     202       0       0       0       0       0       0
  8429 ;;Total ram usage:      205 bytes
  8430 ;; Hardware stack levels used:    1
  8431 ;; Hardware stack levels required when called:   14
  8432 ;; This function calls:
  8433 ;;		_enviaComando
  8434 ;;		_sprintf
  8435 ;; This function is called by:
  8436 ;;		_main
  8437 ;; This function uses a non-reentrant model
  8438 ;;
  8439                           
  8440                           	psect	text25
  8441  0051AE                     __ptext25:
  8442                           	opt stack 0
  8443  0051AE                     _SetBandWidth:
  8444                           	opt stack 16
  8445                           
  8446                           ;LoRaWanCore.c: 158: char comando[200];
  8447                           ;LoRaWanCore.c: 160: sprintf(comando, "%s %d", MAC_SET_BW, bw);
  8448                           
  8449                           ; BSR set to: 1
  8450                           ;incstack = 0
  8451  0051AE  0E20               	movlw	low SetBandWidth@comando
  8452  0051B0  0100               	movlb	0	; () banked
  8453  0051B2  6FBF               	movwf	sprintf@sp& (0+255),b
  8454  0051B4  0E01               	movlw	high SetBandWidth@comando
  8455  0051B6  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  8456  0051B8  0EE4               	movlw	low STR_31
  8457  0051BA  6FC1               	movwf	sprintf@f& (0+255),b
  8458  0051BC  0E7F               	movlw	high STR_31
  8459  0051BE  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  8460  0051C0  0E68               	movlw	low _MAC_SET_BW
  8461  0051C2  6FC3               	movwf	(?_sprintf+4)& (0+255),b
  8462  0051C4  0E7D               	movlw	high _MAC_SET_BW
  8463  0051C6  6FC4               	movwf	(?_sprintf+5)& (0+255),b
  8464  0051C8  C0F5  F0C5         	movff	SetBandWidth@bw,?_sprintf+6
  8465  0051CC  C0F6  F0C6         	movff	SetBandWidth@bw+1,?_sprintf+7
  8466  0051D0  EC09  F000         	call	_sprintf	;wreg free
  8467                           
  8468                           ;LoRaWanCore.c: 161: uint16_t status=enviaComando(comando,0);
  8469  0051D4  0E20               	movlw	low SetBandWidth@comando
  8470  0051D6  0100               	movlb	0	; () banked
  8471  0051D8  6F7C               	movwf	enviaComando@cmd& (0+255),b
  8472  0051DA  0E01               	movlw	high SetBandWidth@comando
  8473  0051DC  6F7D               	movwf	(enviaComando@cmd+1)& (0+255),b
  8474  0051DE  0E00               	movlw	0
  8475  0051E0  6F7E               	movwf	enviaComando@tipoComando& (0+255),b
  8476  0051E2  EC3B  F01B         	call	_enviaComando	;wreg free
  8477  0051E6  0100               	movlb	0	; () banked
  8478  0051E8  6FF7               	movwf	??_SetBandWidth& (0+255),b
  8479  0051EA  51F7               	movf	??_SetBandWidth& (0+255),w,b
  8480  0051EC  0101               	movlb	1	; () banked
  8481  0051EE  6FE8               	movwf	SetBandWidth@status& (0+255),b
  8482  0051F0  6BE9               	clrf	(SetBandWidth@status+1)& (0+255),b
  8483  0051F2  0012               	return	
  8484  0051F4                     __end_of_SetBandWidth:
  8485                           	opt stack 0
  8486                           tblptru	equ	0xFF8
  8487                           tblptrh	equ	0xFF7
  8488                           tblptrl	equ	0xFF6
  8489                           tablat	equ	0xFF5
  8490                           prodh	equ	0xFF4
  8491                           prodl	equ	0xFF3
  8492                           intcon	equ	0xFF2
  8493                           postinc0	equ	0xFEE
  8494                           wreg	equ	0xFE8
  8495                           indf1	equ	0xFE7
  8496                           postdec1	equ	0xFE5
  8497                           fsr1h	equ	0xFE2
  8498                           fsr1l	equ	0xFE1
  8499                           indf2	equ	0xFDF
  8500                           postinc2	equ	0xFDE
  8501                           postdec2	equ	0xFDD
  8502                           plusw2	equ	0xFDB
  8503                           fsr2h	equ	0xFDA
  8504                           fsr2l	equ	0xFD9
  8505                           status	equ	0xFD8
  8506                           
  8507 ;; *************** function _SetAppKey *****************
  8508 ;; Defined at:
  8509 ;;		line 83 in file "LoRaWanCore.c"
  8510 ;; Parameters:    Size  Location     Type
  8511 ;;		None
  8512 ;; Auto vars:     Size  Location     Type
  8513 ;;  comando       200   32[BANK1 ] unsigned char [200]
  8514 ;;  status          1  232[BANK1 ] unsigned char 
  8515 ;; Return value:  Size  Location     Type
  8516 ;;                  1    wreg      unsigned char 
  8517 ;; Registers used:
  8518 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8519 ;; Tracked objects:
  8520 ;;		On entry : 0/0
  8521 ;;		On exit  : 0/0
  8522 ;;		Unchanged: 0/0
  8523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8524 ;;      Params:         0       0       0       0       0       0       0       0       0
  8525 ;;      Locals:         0       0     201       0       0       0       0       0       0
  8526 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8527 ;;      Totals:         0       0     201       0       0       0       0       0       0
  8528 ;;Total ram usage:      201 bytes
  8529 ;; Hardware stack levels used:    1
  8530 ;; Hardware stack levels required when called:   14
  8531 ;; This function calls:
  8532 ;;		_enviaComando
  8533 ;;		_sprintf
  8534 ;; This function is called by:
  8535 ;;		_main
  8536 ;; This function uses a non-reentrant model
  8537 ;;
  8538                           
  8539                           	psect	text26
  8540  004144                     __ptext26:
  8541                           	opt stack 0
  8542  004144                     _SetAppKey:
  8543                           	opt stack 16
  8544                           
  8545                           ;LoRaWanCore.c: 85: char comando[200];
  8546                           ;LoRaWanCore.c: 87: sprintf(comando, "%s %.2x%.2x%.2x%.2x%.2x%.2x%.2x%.2x%.2x%.2x%.2x%.2
      +                          x%.2x%.2x%.2x%.2x", MAC_SET_APPKEY,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x4
      +                          4,0x44,0x44,0x44,0x44,0x44 );
  8547                           
  8548                           ; BSR set to: 1
  8549                           ;incstack = 0
  8550  004144  0E20               	movlw	low SetAppKey@comando
  8551  004146  0100               	movlb	0	; () banked
  8552  004148  6FBF               	movwf	sprintf@sp& (0+255),b
  8553  00414A  0E01               	movlw	high SetAppKey@comando
  8554  00414C  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  8555  00414E  0E6C               	movlw	low STR_24
  8556  004150  6FC1               	movwf	sprintf@f& (0+255),b
  8557  004152  0E7E               	movlw	high STR_24
  8558  004154  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  8559  004156  0E75               	movlw	low _MAC_SET_APPKEY
  8560  004158  6FC3               	movwf	(?_sprintf+4)& (0+255),b
  8561  00415A  0E7D               	movlw	high _MAC_SET_APPKEY
  8562  00415C  6FC4               	movwf	(?_sprintf+5)& (0+255),b
  8563  00415E  0E00               	movlw	0
  8564  004160  6FC6               	movwf	(?_sprintf+7)& (0+255),b
  8565  004162  0E44               	movlw	68
  8566  004164  6FC5               	movwf	(?_sprintf+6)& (0+255),b
  8567  004166  0E00               	movlw	0
  8568  004168  6FC8               	movwf	(?_sprintf+9)& (0+255),b
  8569  00416A  0E44               	movlw	68
  8570  00416C  6FC7               	movwf	(?_sprintf+8)& (0+255),b
  8571  00416E  0E00               	movlw	0
  8572  004170  6FCA               	movwf	(?_sprintf+11)& (0+255),b
  8573  004172  0E44               	movlw	68
  8574  004174  6FC9               	movwf	(?_sprintf+10)& (0+255),b
  8575  004176  0E00               	movlw	0
  8576  004178  6FCC               	movwf	(?_sprintf+13)& (0+255),b
  8577  00417A  0E44               	movlw	68
  8578  00417C  6FCB               	movwf	(?_sprintf+12)& (0+255),b
  8579  00417E  0E00               	movlw	0
  8580  004180  6FCE               	movwf	(?_sprintf+15)& (0+255),b
  8581  004182  0E44               	movlw	68
  8582  004184  6FCD               	movwf	(?_sprintf+14)& (0+255),b
  8583  004186  0E00               	movlw	0
  8584  004188  6FD0               	movwf	(?_sprintf+17)& (0+255),b
  8585  00418A  0E44               	movlw	68
  8586  00418C  6FCF               	movwf	(?_sprintf+16)& (0+255),b
  8587  00418E  0E00               	movlw	0
  8588  004190  6FD2               	movwf	(?_sprintf+19)& (0+255),b
  8589  004192  0E44               	movlw	68
  8590  004194  6FD1               	movwf	(?_sprintf+18)& (0+255),b
  8591  004196  0E00               	movlw	0
  8592  004198  6FD4               	movwf	(?_sprintf+21)& (0+255),b
  8593  00419A  0E44               	movlw	68
  8594  00419C  6FD3               	movwf	(?_sprintf+20)& (0+255),b
  8595  00419E  0E00               	movlw	0
  8596  0041A0  6FD6               	movwf	(?_sprintf+23)& (0+255),b
  8597  0041A2  0E44               	movlw	68
  8598  0041A4  6FD5               	movwf	(?_sprintf+22)& (0+255),b
  8599  0041A6  0E00               	movlw	0
  8600  0041A8  6FD8               	movwf	(?_sprintf+25)& (0+255),b
  8601  0041AA  0E44               	movlw	68
  8602  0041AC  6FD7               	movwf	(?_sprintf+24)& (0+255),b
  8603  0041AE  0E00               	movlw	0
  8604  0041B0  6FDA               	movwf	(?_sprintf+27)& (0+255),b
  8605  0041B2  0E44               	movlw	68
  8606  0041B4  6FD9               	movwf	(?_sprintf+26)& (0+255),b
  8607  0041B6  0E00               	movlw	0
  8608  0041B8  6FDC               	movwf	(?_sprintf+29)& (0+255),b
  8609  0041BA  0E44               	movlw	68
  8610  0041BC  6FDB               	movwf	(?_sprintf+28)& (0+255),b
  8611  0041BE  0E00               	movlw	0
  8612  0041C0  6FDE               	movwf	(?_sprintf+31)& (0+255),b
  8613  0041C2  0E44               	movlw	68
  8614  0041C4  6FDD               	movwf	(?_sprintf+30)& (0+255),b
  8615  0041C6  0E00               	movlw	0
  8616  0041C8  6FE0               	movwf	(?_sprintf+33)& (0+255),b
  8617  0041CA  0E44               	movlw	68
  8618  0041CC  6FDF               	movwf	(?_sprintf+32)& (0+255),b
  8619  0041CE  0E00               	movlw	0
  8620  0041D0  6FE2               	movwf	(?_sprintf+35)& (0+255),b
  8621  0041D2  0E44               	movlw	68
  8622  0041D4  6FE1               	movwf	(?_sprintf+34)& (0+255),b
  8623  0041D6  0E00               	movlw	0
  8624  0041D8  6FE4               	movwf	(?_sprintf+37)& (0+255),b
  8625  0041DA  0E44               	movlw	68
  8626  0041DC  6FE3               	movwf	(?_sprintf+36)& (0+255),b
  8627  0041DE  EC09  F000         	call	_sprintf	;wreg free
  8628                           
  8629                           ;LoRaWanCore.c: 88: uint8_t status=enviaComando(comando,0);
  8630  0041E2  0E20               	movlw	low SetAppKey@comando
  8631  0041E4  0100               	movlb	0	; () banked
  8632  0041E6  6F7C               	movwf	enviaComando@cmd& (0+255),b
  8633  0041E8  0E01               	movlw	high SetAppKey@comando
  8634  0041EA  6F7D               	movwf	(enviaComando@cmd+1)& (0+255),b
  8635  0041EC  0E00               	movlw	0
  8636  0041EE  6F7E               	movwf	enviaComando@tipoComando& (0+255),b
  8637  0041F0  EC3B  F01B         	call	_enviaComando	;wreg free
  8638  0041F4  0101               	movlb	1	; () banked
  8639  0041F6  6FE8               	movwf	SetAppKey@status& (0+255),b
  8640  0041F8  0012               	return	
  8641  0041FA                     __end_of_SetAppKey:
  8642                           	opt stack 0
  8643                           tblptru	equ	0xFF8
  8644                           tblptrh	equ	0xFF7
  8645                           tblptrl	equ	0xFF6
  8646                           tablat	equ	0xFF5
  8647                           prodh	equ	0xFF4
  8648                           prodl	equ	0xFF3
  8649                           intcon	equ	0xFF2
  8650                           postinc0	equ	0xFEE
  8651                           wreg	equ	0xFE8
  8652                           indf1	equ	0xFE7
  8653                           postdec1	equ	0xFE5
  8654                           fsr1h	equ	0xFE2
  8655                           fsr1l	equ	0xFE1
  8656                           indf2	equ	0xFDF
  8657                           postinc2	equ	0xFDE
  8658                           postdec2	equ	0xFDD
  8659                           plusw2	equ	0xFDB
  8660                           fsr2h	equ	0xFDA
  8661                           fsr2l	equ	0xFD9
  8662                           status	equ	0xFD8
  8663                           
  8664 ;; *************** function _SetAppEUI *****************
  8665 ;; Defined at:
  8666 ;;		line 76 in file "LoRaWanCore.c"
  8667 ;; Parameters:    Size  Location     Type
  8668 ;;		None
  8669 ;; Auto vars:     Size  Location     Type
  8670 ;;  comando       200   32[BANK1 ] unsigned char [200]
  8671 ;;  status          1  232[BANK1 ] unsigned char 
  8672 ;; Return value:  Size  Location     Type
  8673 ;;                  1    wreg      unsigned char 
  8674 ;; Registers used:
  8675 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8676 ;; Tracked objects:
  8677 ;;		On entry : 0/0
  8678 ;;		On exit  : 0/0
  8679 ;;		Unchanged: 0/0
  8680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8681 ;;      Params:         0       0       0       0       0       0       0       0       0
  8682 ;;      Locals:         0       0     201       0       0       0       0       0       0
  8683 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8684 ;;      Totals:         0       0     201       0       0       0       0       0       0
  8685 ;;Total ram usage:      201 bytes
  8686 ;; Hardware stack levels used:    1
  8687 ;; Hardware stack levels required when called:   14
  8688 ;; This function calls:
  8689 ;;		_enviaComando
  8690 ;;		_sprintf
  8691 ;; This function is called by:
  8692 ;;		_main
  8693 ;; This function uses a non-reentrant model
  8694 ;;
  8695                           
  8696                           	psect	text27
  8697  004C1E                     __ptext27:
  8698                           	opt stack 0
  8699  004C1E                     _SetAppEUI:
  8700                           	opt stack 16
  8701                           
  8702                           ;LoRaWanCore.c: 78: char comando[200];
  8703                           ;LoRaWanCore.c: 79: sprintf(comando, "%s %.2x%.2x%.2x%.2x%.2x%.2x%.2x%.2x", MAC_SET_APPE
      +                          UI, 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 );
  8704                           
  8705                           ; BSR set to: 1
  8706                           ;incstack = 0
  8707  004C1E  0E20               	movlw	low SetAppEUI@comando
  8708  004C20  0100               	movlb	0	; () banked
  8709  004C22  6FBF               	movwf	sprintf@sp& (0+255),b
  8710  004C24  0E01               	movlw	high SetAppEUI@comando
  8711  004C26  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  8712  004C28  0EB0               	movlw	low STR_22
  8713  004C2A  6FC1               	movwf	sprintf@f& (0+255),b
  8714  004C2C  0E7E               	movlw	high STR_22
  8715  004C2E  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  8716  004C30  0E80               	movlw	low _MAC_SET_APPEUI
  8717  004C32  6FC3               	movwf	(?_sprintf+4)& (0+255),b
  8718  004C34  0E7D               	movlw	high _MAC_SET_APPEUI
  8719  004C36  6FC4               	movwf	(?_sprintf+5)& (0+255),b
  8720  004C38  0E00               	movlw	0
  8721  004C3A  6FC6               	movwf	(?_sprintf+7)& (0+255),b
  8722  004C3C  0E00               	movlw	0
  8723  004C3E  6FC5               	movwf	(?_sprintf+6)& (0+255),b
  8724  004C40  0E00               	movlw	0
  8725  004C42  6FC8               	movwf	(?_sprintf+9)& (0+255),b
  8726  004C44  0E00               	movlw	0
  8727  004C46  6FC7               	movwf	(?_sprintf+8)& (0+255),b
  8728  004C48  0E00               	movlw	0
  8729  004C4A  6FCA               	movwf	(?_sprintf+11)& (0+255),b
  8730  004C4C  0E00               	movlw	0
  8731  004C4E  6FC9               	movwf	(?_sprintf+10)& (0+255),b
  8732  004C50  0E00               	movlw	0
  8733  004C52  6FCC               	movwf	(?_sprintf+13)& (0+255),b
  8734  004C54  0E00               	movlw	0
  8735  004C56  6FCB               	movwf	(?_sprintf+12)& (0+255),b
  8736  004C58  0E00               	movlw	0
  8737  004C5A  6FCE               	movwf	(?_sprintf+15)& (0+255),b
  8738  004C5C  0E00               	movlw	0
  8739  004C5E  6FCD               	movwf	(?_sprintf+14)& (0+255),b
  8740  004C60  0E00               	movlw	0
  8741  004C62  6FD0               	movwf	(?_sprintf+17)& (0+255),b
  8742  004C64  0E00               	movlw	0
  8743  004C66  6FCF               	movwf	(?_sprintf+16)& (0+255),b
  8744  004C68  0E00               	movlw	0
  8745  004C6A  6FD2               	movwf	(?_sprintf+19)& (0+255),b
  8746  004C6C  0E00               	movlw	0
  8747  004C6E  6FD1               	movwf	(?_sprintf+18)& (0+255),b
  8748  004C70  0E00               	movlw	0
  8749  004C72  6FD4               	movwf	(?_sprintf+21)& (0+255),b
  8750  004C74  0E00               	movlw	0
  8751  004C76  6FD3               	movwf	(?_sprintf+20)& (0+255),b
  8752  004C78  EC09  F000         	call	_sprintf	;wreg free
  8753                           
  8754                           ;LoRaWanCore.c: 80: uint8_t status=enviaComando(comando,0);
  8755  004C7C  0E20               	movlw	low SetAppEUI@comando
  8756  004C7E  0100               	movlb	0	; () banked
  8757  004C80  6F7C               	movwf	enviaComando@cmd& (0+255),b
  8758  004C82  0E01               	movlw	high SetAppEUI@comando
  8759  004C84  6F7D               	movwf	(enviaComando@cmd+1)& (0+255),b
  8760  004C86  0E00               	movlw	0
  8761  004C88  6F7E               	movwf	enviaComando@tipoComando& (0+255),b
  8762  004C8A  EC3B  F01B         	call	_enviaComando	;wreg free
  8763  004C8E  0101               	movlb	1	; () banked
  8764  004C90  6FE8               	movwf	SetAppEUI@status& (0+255),b
  8765  004C92  0012               	return	
  8766  004C94                     __end_of_SetAppEUI:
  8767                           	opt stack 0
  8768                           tblptru	equ	0xFF8
  8769                           tblptrh	equ	0xFF7
  8770                           tblptrl	equ	0xFF6
  8771                           tablat	equ	0xFF5
  8772                           prodh	equ	0xFF4
  8773                           prodl	equ	0xFF3
  8774                           intcon	equ	0xFF2
  8775                           postinc0	equ	0xFEE
  8776                           wreg	equ	0xFE8
  8777                           indf1	equ	0xFE7
  8778                           postdec1	equ	0xFE5
  8779                           fsr1h	equ	0xFE2
  8780                           fsr1l	equ	0xFE1
  8781                           indf2	equ	0xFDF
  8782                           postinc2	equ	0xFDE
  8783                           postdec2	equ	0xFDD
  8784                           plusw2	equ	0xFDB
  8785                           fsr2h	equ	0xFDA
  8786                           fsr2l	equ	0xFD9
  8787                           status	equ	0xFD8
  8788                           
  8789 ;; *************** function _SetAdr *****************
  8790 ;; Defined at:
  8791 ;;		line 125 in file "LoRaWanCore.c"
  8792 ;; Parameters:    Size  Location     Type
  8793 ;;  state           2  149[BANK0 ] PTR const unsigned char 
  8794 ;;		 -> STATE_ON(3), STATE_OFF(4), 
  8795 ;; Auto vars:     Size  Location     Type
  8796 ;;  comando       200   32[BANK1 ] unsigned char [200]
  8797 ;;  status          1  232[BANK1 ] unsigned char 
  8798 ;; Return value:  Size  Location     Type
  8799 ;;                  1    wreg      unsigned char 
  8800 ;; Registers used:
  8801 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8802 ;; Tracked objects:
  8803 ;;		On entry : 0/0
  8804 ;;		On exit  : 0/0
  8805 ;;		Unchanged: 0/0
  8806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8807 ;;      Params:         0       2       0       0       0       0       0       0       0
  8808 ;;      Locals:         0       0     201       0       0       0       0       0       0
  8809 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8810 ;;      Totals:         0       2     201       0       0       0       0       0       0
  8811 ;;Total ram usage:      203 bytes
  8812 ;; Hardware stack levels used:    1
  8813 ;; Hardware stack levels required when called:   14
  8814 ;; This function calls:
  8815 ;;		_enviaComando
  8816 ;;		_sprintf
  8817 ;; This function is called by:
  8818 ;;		_main
  8819 ;; This function uses a non-reentrant model
  8820 ;;
  8821                           
  8822                           	psect	text28
  8823  005384                     __ptext28:
  8824                           	opt stack 0
  8825  005384                     _SetAdr:
  8826                           	opt stack 16
  8827                           
  8828                           ;LoRaWanCore.c: 126: char comando[200];
  8829                           ;LoRaWanCore.c: 128: sprintf(comando, "%s %s", MAC_SET_ADR, state);
  8830                           
  8831                           ; BSR set to: 1
  8832                           ;incstack = 0
  8833  005384  0E20               	movlw	low SetAdr@comando
  8834  005386  0100               	movlb	0	; () banked
  8835  005388  6FBF               	movwf	sprintf@sp& (0+255),b
  8836  00538A  0E01               	movlw	high SetAdr@comando
  8837  00538C  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  8838  00538E  0EEA               	movlw	low STR_27
  8839  005390  6FC1               	movwf	sprintf@f& (0+255),b
  8840  005392  0E7F               	movlw	high STR_27
  8841  005394  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  8842  005396  0EBB               	movlw	low _MAC_SET_ADR
  8843  005398  6FC3               	movwf	(?_sprintf+4)& (0+255),b
  8844  00539A  0E7D               	movlw	high _MAC_SET_ADR
  8845  00539C  6FC4               	movwf	(?_sprintf+5)& (0+255),b
  8846  00539E  C0F5  F0C5         	movff	SetAdr@state,?_sprintf+6
  8847  0053A2  C0F6  F0C6         	movff	SetAdr@state+1,?_sprintf+7
  8848  0053A6  EC09  F000         	call	_sprintf	;wreg free
  8849                           
  8850                           ;LoRaWanCore.c: 129: uint8_t status=enviaComando(comando,0);
  8851  0053AA  0E20               	movlw	low SetAdr@comando
  8852  0053AC  0100               	movlb	0	; () banked
  8853  0053AE  6F7C               	movwf	enviaComando@cmd& (0+255),b
  8854  0053B0  0E01               	movlw	high SetAdr@comando
  8855  0053B2  6F7D               	movwf	(enviaComando@cmd+1)& (0+255),b
  8856  0053B4  0E00               	movlw	0
  8857  0053B6  6F7E               	movwf	enviaComando@tipoComando& (0+255),b
  8858  0053B8  EC3B  F01B         	call	_enviaComando	;wreg free
  8859  0053BC  0101               	movlb	1	; () banked
  8860  0053BE  6FE8               	movwf	SetAdr@status& (0+255),b
  8861  0053C0  0012               	return	
  8862  0053C2                     __end_of_SetAdr:
  8863                           	opt stack 0
  8864                           tblptru	equ	0xFF8
  8865                           tblptrh	equ	0xFF7
  8866                           tblptrl	equ	0xFF6
  8867                           tablat	equ	0xFF5
  8868                           prodh	equ	0xFF4
  8869                           prodl	equ	0xFF3
  8870                           intcon	equ	0xFF2
  8871                           postinc0	equ	0xFEE
  8872                           wreg	equ	0xFE8
  8873                           indf1	equ	0xFE7
  8874                           postdec1	equ	0xFE5
  8875                           fsr1h	equ	0xFE2
  8876                           fsr1l	equ	0xFE1
  8877                           indf2	equ	0xFDF
  8878                           postinc2	equ	0xFDE
  8879                           postdec2	equ	0xFDD
  8880                           plusw2	equ	0xFDB
  8881                           fsr2h	equ	0xFDA
  8882                           fsr2l	equ	0xFD9
  8883                           status	equ	0xFD8
  8884                           
  8885 ;; *************** function _MacSave *****************
  8886 ;; Defined at:
  8887 ;;		line 141 in file "LoRaWanCore.c"
  8888 ;; Parameters:    Size  Location     Type
  8889 ;;		None
  8890 ;; Auto vars:     Size  Location     Type
  8891 ;;  comando       200   32[BANK1 ] unsigned char [200]
  8892 ;;  status          1  232[BANK1 ] unsigned char 
  8893 ;; Return value:  Size  Location     Type
  8894 ;;                  1    wreg      unsigned char 
  8895 ;; Registers used:
  8896 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8897 ;; Tracked objects:
  8898 ;;		On entry : 0/0
  8899 ;;		On exit  : 0/0
  8900 ;;		Unchanged: 0/0
  8901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8902 ;;      Params:         0       0       0       0       0       0       0       0       0
  8903 ;;      Locals:         0       0     201       0       0       0       0       0       0
  8904 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8905 ;;      Totals:         0       0     201       0       0       0       0       0       0
  8906 ;;Total ram usage:      201 bytes
  8907 ;; Hardware stack levels used:    1
  8908 ;; Hardware stack levels required when called:   14
  8909 ;; This function calls:
  8910 ;;		_enviaComando
  8911 ;;		_sprintf
  8912 ;; This function is called by:
  8913 ;;		_main
  8914 ;; This function uses a non-reentrant model
  8915 ;;
  8916                           
  8917                           	psect	text29
  8918  005472                     __ptext29:
  8919                           	opt stack 0
  8920  005472                     _MacSave:
  8921                           	opt stack 16
  8922                           
  8923                           ;LoRaWanCore.c: 142: char comando[200];
  8924                           ;LoRaWanCore.c: 144: sprintf(comando, "%s", MAC_SAVE);
  8925                           
  8926                           ; BSR set to: 1
  8927                           ;incstack = 0
  8928  005472  0E20               	movlw	low MacSave@comando
  8929  005474  0100               	movlb	0	; () banked
  8930  005476  6FBF               	movwf	sprintf@sp& (0+255),b
  8931  005478  0E01               	movlw	high MacSave@comando
  8932  00547A  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  8933  00547C  0EED               	movlw	low (STR_27+3)
  8934  00547E  6FC1               	movwf	sprintf@f& (0+255),b
  8935  005480  0E7F               	movlw	high (STR_27+3)
  8936  005482  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  8937  005484  0EDC               	movlw	low _MAC_SAVE
  8938  005486  6FC3               	movwf	(?_sprintf+4)& (0+255),b
  8939  005488  0E7D               	movlw	high _MAC_SAVE
  8940  00548A  6FC4               	movwf	(?_sprintf+5)& (0+255),b
  8941  00548C  EC09  F000         	call	_sprintf	;wreg free
  8942                           
  8943                           ;LoRaWanCore.c: 145: uint8_t status=enviaComando(comando,0);
  8944  005490  0E20               	movlw	low MacSave@comando
  8945  005492  0100               	movlb	0	; () banked
  8946  005494  6F7C               	movwf	enviaComando@cmd& (0+255),b
  8947  005496  0E01               	movlw	high MacSave@comando
  8948  005498  6F7D               	movwf	(enviaComando@cmd+1)& (0+255),b
  8949  00549A  0E00               	movlw	0
  8950  00549C  6F7E               	movwf	enviaComando@tipoComando& (0+255),b
  8951  00549E  EC3B  F01B         	call	_enviaComando	;wreg free
  8952  0054A2  0101               	movlb	1	; () banked
  8953  0054A4  6FE8               	movwf	MacSave@status& (0+255),b
  8954  0054A6  0012               	return	
  8955  0054A8                     __end_of_MacSave:
  8956                           	opt stack 0
  8957                           tblptru	equ	0xFF8
  8958                           tblptrh	equ	0xFF7
  8959                           tblptrl	equ	0xFF6
  8960                           tablat	equ	0xFF5
  8961                           prodh	equ	0xFF4
  8962                           prodl	equ	0xFF3
  8963                           intcon	equ	0xFF2
  8964                           postinc0	equ	0xFEE
  8965                           wreg	equ	0xFE8
  8966                           indf1	equ	0xFE7
  8967                           postdec1	equ	0xFE5
  8968                           fsr1h	equ	0xFE2
  8969                           fsr1l	equ	0xFE1
  8970                           indf2	equ	0xFDF
  8971                           postinc2	equ	0xFDE
  8972                           postdec2	equ	0xFDD
  8973                           plusw2	equ	0xFDB
  8974                           fsr2h	equ	0xFDA
  8975                           fsr2l	equ	0xFD9
  8976                           status	equ	0xFD8
  8977                           
  8978 ;; *************** function _FeedBack *****************
  8979 ;; Defined at:
  8980 ;;		line 41 in file "UT.c"
  8981 ;; Parameters:    Size  Location     Type
  8982 ;;		None
  8983 ;; Auto vars:     Size  Location     Type
  8984 ;;		None
  8985 ;; Return value:  Size  Location     Type
  8986 ;;                  1    wreg      void 
  8987 ;; Registers used:
  8988 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8989 ;; Tracked objects:
  8990 ;;		On entry : 0/0
  8991 ;;		On exit  : 0/0
  8992 ;;		Unchanged: 0/0
  8993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8994 ;;      Params:         0       0       0       0       0       0       0       0       0
  8995 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8996 ;;      Temps:          0       2       0       0       0       0       0       0       0
  8997 ;;      Totals:         0       2       0       0       0       0       0       0       0
  8998 ;;Total ram usage:        2 bytes
  8999 ;; Hardware stack levels used:    1
  9000 ;; Hardware stack levels required when called:   11
  9001 ;; This function calls:
  9002 ;;		_retornaDado
  9003 ;; This function is called by:
  9004 ;;		_main
  9005 ;; This function uses a non-reentrant model
  9006 ;;
  9007                           
  9008                           	psect	text30
  9009  002548                     __ptext30:
  9010                           	opt stack 0
  9011  002548                     _FeedBack:
  9012                           	opt stack 19
  9013                           
  9014                           ;UT.c: 42: feedback1 = (feedback1 & (~(1))) | (retornaDado(0,0));
  9015                           
  9016                           ; BSR set to: 1
  9017                           ;incstack = 0
  9018  002548  0E00               	movlw	0
  9019  00254A  0100               	movlb	0	; () banked
  9020  00254C  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  9021  00254E  0E00               	movlw	0
  9022  002550  EC58  F027         	call	_retornaDado
  9023  002554  0100               	movlb	0	; () banked
  9024  002556  6F65               	movwf	??_FeedBack& (0+255),b
  9025  002558  0102               	movlb	2	; () banked
  9026  00255A  51F0               	movf	_feedback1& (0+255),w,b
  9027  00255C  0BFE               	andlw	254
  9028  00255E  0100               	movlb	0	; () banked
  9029  002560  1165               	iorwf	??_FeedBack& (0+255),w,b
  9030  002562  0102               	movlb	2	; () banked
  9031  002564  6FF0               	movwf	_feedback1& (0+255),b
  9032                           
  9033                           ;UT.c: 43: feedback1 = (feedback1 & (~(1<<1))) | (retornaDado(0,3)<<1);
  9034  002566  0E03               	movlw	3
  9035  002568  0100               	movlb	0	; () banked
  9036  00256A  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  9037  00256C  0E00               	movlw	0
  9038  00256E  EC58  F027         	call	_retornaDado
  9039  002572  0100               	movlb	0	; () banked
  9040  002574  6F65               	movwf	??_FeedBack& (0+255),b
  9041  002576  90D8               	bcf	status,0,c
  9042  002578  3565               	rlcf	??_FeedBack& (0+255),w,b
  9043  00257A  6F66               	movwf	(??_FeedBack+1)& (0+255),b
  9044  00257C  0102               	movlb	2	; () banked
  9045  00257E  51F0               	movf	_feedback1& (0+255),w,b
  9046  002580  0BFD               	andlw	253
  9047  002582  0100               	movlb	0	; () banked
  9048  002584  1166               	iorwf	(??_FeedBack+1)& (0+255),w,b
  9049  002586  0102               	movlb	2	; () banked
  9050  002588  6FF0               	movwf	_feedback1& (0+255),b
  9051                           
  9052                           ;UT.c: 44: feedback1 = (feedback1 & (~(1<<2))) | (retornaDado(0,2)<<2);
  9053  00258A  0E02               	movlw	2
  9054  00258C  0100               	movlb	0	; () banked
  9055  00258E  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  9056  002590  0E00               	movlw	0
  9057  002592  EC58  F027         	call	_retornaDado
  9058  002596  0100               	movlb	0	; () banked
  9059  002598  6F65               	movwf	??_FeedBack& (0+255),b
  9060  00259A  90D8               	bcf	status,0,c
  9061  00259C  3765               	rlcf	??_FeedBack& (0+255),f,b
  9062  00259E  90D8               	bcf	status,0,c
  9063  0025A0  3765               	rlcf	??_FeedBack& (0+255),f,b
  9064  0025A2  0102               	movlb	2	; () banked
  9065  0025A4  51F0               	movf	_feedback1& (0+255),w,b
  9066  0025A6  0BFB               	andlw	251
  9067  0025A8  0100               	movlb	0	; () banked
  9068  0025AA  1165               	iorwf	??_FeedBack& (0+255),w,b
  9069  0025AC  0102               	movlb	2	; () banked
  9070  0025AE  6FF0               	movwf	_feedback1& (0+255),b
  9071                           
  9072                           ;UT.c: 45: feedback1 = (feedback1 & (~(1<<3))) | (retornaDado(0,1)<<3);
  9073  0025B0  0E01               	movlw	1
  9074  0025B2  0100               	movlb	0	; () banked
  9075  0025B4  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  9076  0025B6  0E00               	movlw	0
  9077  0025B8  EC58  F027         	call	_retornaDado
  9078  0025BC  0100               	movlb	0	; () banked
  9079  0025BE  6F65               	movwf	??_FeedBack& (0+255),b
  9080  0025C0  90D8               	bcf	status,0,c
  9081  0025C2  3765               	rlcf	??_FeedBack& (0+255),f,b
  9082  0025C4  90D8               	bcf	status,0,c
  9083  0025C6  3765               	rlcf	??_FeedBack& (0+255),f,b
  9084  0025C8  90D8               	bcf	status,0,c
  9085  0025CA  3765               	rlcf	??_FeedBack& (0+255),f,b
  9086  0025CC  0102               	movlb	2	; () banked
  9087  0025CE  51F0               	movf	_feedback1& (0+255),w,b
  9088  0025D0  0BF7               	andlw	247
  9089  0025D2  0100               	movlb	0	; () banked
  9090  0025D4  1165               	iorwf	??_FeedBack& (0+255),w,b
  9091  0025D6  0102               	movlb	2	; () banked
  9092  0025D8  6FF0               	movwf	_feedback1& (0+255),b
  9093                           
  9094                           ;UT.c: 46: feedback1 = (feedback1 & (~(1<<4))) | (retornaDado(1,4)<<4);
  9095  0025DA  0E04               	movlw	4
  9096  0025DC  0100               	movlb	0	; () banked
  9097  0025DE  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  9098  0025E0  0E01               	movlw	1
  9099  0025E2  EC58  F027         	call	_retornaDado
  9100  0025E6  0100               	movlb	0	; () banked
  9101  0025E8  6F65               	movwf	??_FeedBack& (0+255),b
  9102  0025EA  3B65               	swapf	??_FeedBack& (0+255),f,b
  9103  0025EC  0EF0               	movlw	240
  9104  0025EE  1765               	andwf	??_FeedBack& (0+255),f,b
  9105  0025F0  0102               	movlb	2	; () banked
  9106  0025F2  51F0               	movf	_feedback1& (0+255),w,b
  9107  0025F4  0BEF               	andlw	239
  9108  0025F6  0100               	movlb	0	; () banked
  9109  0025F8  1165               	iorwf	??_FeedBack& (0+255),w,b
  9110  0025FA  0102               	movlb	2	; () banked
  9111  0025FC  6FF0               	movwf	_feedback1& (0+255),b
  9112                           
  9113                           ;UT.c: 47: feedback1 = (feedback1 & (~(1<<5))) | (retornaDado(1,5)<<5);
  9114  0025FE  0E05               	movlw	5
  9115  002600  0100               	movlb	0	; () banked
  9116  002602  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  9117  002604  0E01               	movlw	1
  9118  002606  EC58  F027         	call	_retornaDado
  9119  00260A  0100               	movlb	0	; () banked
  9120  00260C  6F65               	movwf	??_FeedBack& (0+255),b
  9121  00260E  0E05               	movlw	5
  9122  002610  6F66               	movwf	(??_FeedBack+1)& (0+255),b
  9123  002612                     u9345:
  9124  002612  90D8               	bcf	status,0,c
  9125  002614  3765               	rlcf	??_FeedBack& (0+255),f,b
  9126  002616  2F66               	decfsz	(??_FeedBack+1)& (0+255),f,b
  9127  002618  D7FC               	goto	u9345
  9128  00261A  0102               	movlb	2	; () banked
  9129  00261C  51F0               	movf	_feedback1& (0+255),w,b
  9130  00261E  0BDF               	andlw	223
  9131  002620  0100               	movlb	0	; () banked
  9132  002622  1165               	iorwf	??_FeedBack& (0+255),w,b
  9133  002624  0102               	movlb	2	; () banked
  9134  002626  6FF0               	movwf	_feedback1& (0+255),b
  9135                           
  9136                           ;UT.c: 48: feedback2 = (feedback2 & (~(1))) | (retornaDado(5,6));
  9137  002628  0E06               	movlw	6
  9138  00262A  0100               	movlb	0	; () banked
  9139  00262C  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  9140  00262E  0E05               	movlw	5
  9141  002630  EC58  F027         	call	_retornaDado
  9142  002634  0100               	movlb	0	; () banked
  9143  002636  6F65               	movwf	??_FeedBack& (0+255),b
  9144  002638  0102               	movlb	2	; () banked
  9145  00263A  51EF               	movf	_feedback2& (0+255),w,b
  9146  00263C  0BFE               	andlw	254
  9147  00263E  0100               	movlb	0	; () banked
  9148  002640  1165               	iorwf	??_FeedBack& (0+255),w,b
  9149  002642  0102               	movlb	2	; () banked
  9150  002644  6FEF               	movwf	_feedback2& (0+255),b
  9151                           
  9152                           ;UT.c: 49: feedback2 = (feedback2 & (~(1<<1))) | (retornaDado(5,7)<<1);
  9153  002646  0E07               	movlw	7
  9154  002648  0100               	movlb	0	; () banked
  9155  00264A  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  9156  00264C  0E05               	movlw	5
  9157  00264E  EC58  F027         	call	_retornaDado
  9158  002652  0100               	movlb	0	; () banked
  9159  002654  6F65               	movwf	??_FeedBack& (0+255),b
  9160  002656  90D8               	bcf	status,0,c
  9161  002658  3565               	rlcf	??_FeedBack& (0+255),w,b
  9162  00265A  6F66               	movwf	(??_FeedBack+1)& (0+255),b
  9163  00265C  0102               	movlb	2	; () banked
  9164  00265E  51EF               	movf	_feedback2& (0+255),w,b
  9165  002660  0BFD               	andlw	253
  9166  002662  0100               	movlb	0	; () banked
  9167  002664  1166               	iorwf	(??_FeedBack+1)& (0+255),w,b
  9168  002666  0102               	movlb	2	; () banked
  9169  002668  6FEF               	movwf	_feedback2& (0+255),b
  9170                           
  9171                           ;UT.c: 50: feedback2 = (feedback2 & (~(1<<2))) | (retornaDado(5,4)<<2);
  9172  00266A  0E04               	movlw	4
  9173  00266C  0100               	movlb	0	; () banked
  9174  00266E  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  9175  002670  0E05               	movlw	5
  9176  002672  EC58  F027         	call	_retornaDado
  9177  002676  0100               	movlb	0	; () banked
  9178  002678  6F65               	movwf	??_FeedBack& (0+255),b
  9179  00267A  90D8               	bcf	status,0,c
  9180  00267C  3765               	rlcf	??_FeedBack& (0+255),f,b
  9181  00267E  90D8               	bcf	status,0,c
  9182  002680  3765               	rlcf	??_FeedBack& (0+255),f,b
  9183  002682  0102               	movlb	2	; () banked
  9184  002684  51EF               	movf	_feedback2& (0+255),w,b
  9185  002686  0BFB               	andlw	251
  9186  002688  0100               	movlb	0	; () banked
  9187  00268A  1165               	iorwf	??_FeedBack& (0+255),w,b
  9188  00268C  0102               	movlb	2	; () banked
  9189  00268E  6FEF               	movwf	_feedback2& (0+255),b
  9190                           
  9191                           ;UT.c: 51: feedback2 = (feedback2 & (~(1<<3))) | (retornaDado(5,5)<<3);
  9192  002690  0E05               	movlw	5
  9193  002692  0100               	movlb	0	; () banked
  9194  002694  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  9195  002696  0E05               	movlw	5
  9196  002698  EC58  F027         	call	_retornaDado
  9197  00269C  0100               	movlb	0	; () banked
  9198  00269E  6F65               	movwf	??_FeedBack& (0+255),b
  9199  0026A0  90D8               	bcf	status,0,c
  9200  0026A2  3765               	rlcf	??_FeedBack& (0+255),f,b
  9201  0026A4  90D8               	bcf	status,0,c
  9202  0026A6  3765               	rlcf	??_FeedBack& (0+255),f,b
  9203  0026A8  90D8               	bcf	status,0,c
  9204  0026AA  3765               	rlcf	??_FeedBack& (0+255),f,b
  9205  0026AC  0102               	movlb	2	; () banked
  9206  0026AE  51EF               	movf	_feedback2& (0+255),w,b
  9207  0026B0  0BF7               	andlw	247
  9208  0026B2  0100               	movlb	0	; () banked
  9209  0026B4  1165               	iorwf	??_FeedBack& (0+255),w,b
  9210  0026B6  0102               	movlb	2	; () banked
  9211  0026B8  6FEF               	movwf	_feedback2& (0+255),b
  9212                           
  9213                           ;UT.c: 52: feedback2 = (feedback2 & (~(1<<4))) | (retornaDado(5,2)<<4);
  9214  0026BA  0E02               	movlw	2
  9215  0026BC  0100               	movlb	0	; () banked
  9216  0026BE  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  9217  0026C0  0E05               	movlw	5
  9218  0026C2  EC58  F027         	call	_retornaDado
  9219  0026C6  0100               	movlb	0	; () banked
  9220  0026C8  6F65               	movwf	??_FeedBack& (0+255),b
  9221  0026CA  3B65               	swapf	??_FeedBack& (0+255),f,b
  9222  0026CC  0EF0               	movlw	240
  9223  0026CE  1765               	andwf	??_FeedBack& (0+255),f,b
  9224  0026D0  0102               	movlb	2	; () banked
  9225  0026D2  51EF               	movf	_feedback2& (0+255),w,b
  9226  0026D4  0BEF               	andlw	239
  9227  0026D6  0100               	movlb	0	; () banked
  9228  0026D8  1165               	iorwf	??_FeedBack& (0+255),w,b
  9229  0026DA  0102               	movlb	2	; () banked
  9230  0026DC  6FEF               	movwf	_feedback2& (0+255),b
  9231                           
  9232                           ;UT.c: 53: feedback2 = (feedback2 & (~(1<<5))) | (retornaDado(5,3)<<5);
  9233  0026DE  0E03               	movlw	3
  9234  0026E0  0100               	movlb	0	; () banked
  9235  0026E2  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  9236  0026E4  0E05               	movlw	5
  9237  0026E6  EC58  F027         	call	_retornaDado
  9238  0026EA  0100               	movlb	0	; () banked
  9239  0026EC  6F65               	movwf	??_FeedBack& (0+255),b
  9240  0026EE  0E05               	movlw	5
  9241  0026F0  6F66               	movwf	(??_FeedBack+1)& (0+255),b
  9242  0026F2                     u9355:
  9243  0026F2  90D8               	bcf	status,0,c
  9244  0026F4  3765               	rlcf	??_FeedBack& (0+255),f,b
  9245  0026F6  2F66               	decfsz	(??_FeedBack+1)& (0+255),f,b
  9246  0026F8  D7FC               	goto	u9355
  9247  0026FA  0102               	movlb	2	; () banked
  9248  0026FC  51EF               	movf	_feedback2& (0+255),w,b
  9249  0026FE  0BDF               	andlw	223
  9250  002700  0100               	movlb	0	; () banked
  9251  002702  1165               	iorwf	??_FeedBack& (0+255),w,b
  9252  002704  0102               	movlb	2	; () banked
  9253  002706  6FEF               	movwf	_feedback2& (0+255),b
  9254                           
  9255                           ;UT.c: 54: feedback2 = (feedback2 & (~(1<<6))) | (retornaDado(5,0)<<6);
  9256  002708  0E00               	movlw	0
  9257  00270A  0100               	movlb	0	; () banked
  9258  00270C  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  9259  00270E  0E05               	movlw	5
  9260  002710  EC58  F027         	call	_retornaDado
  9261  002714  0100               	movlb	0	; () banked
  9262  002716  6F65               	movwf	??_FeedBack& (0+255),b
  9263  002718  0E06               	movlw	6
  9264  00271A  6F66               	movwf	(??_FeedBack+1)& (0+255),b
  9265  00271C                     u9365:
  9266  00271C  90D8               	bcf	status,0,c
  9267  00271E  3765               	rlcf	??_FeedBack& (0+255),f,b
  9268  002720  2F66               	decfsz	(??_FeedBack+1)& (0+255),f,b
  9269  002722  D7FC               	goto	u9365
  9270  002724  0102               	movlb	2	; () banked
  9271  002726  51EF               	movf	_feedback2& (0+255),w,b
  9272  002728  0BBF               	andlw	191
  9273  00272A  0100               	movlb	0	; () banked
  9274  00272C  1165               	iorwf	??_FeedBack& (0+255),w,b
  9275  00272E  0102               	movlb	2	; () banked
  9276  002730  6FEF               	movwf	_feedback2& (0+255),b
  9277                           
  9278                           ;UT.c: 55: feedback2 = (feedback2 & (~(1<<7))) | (retornaDado(5,1)<<7);
  9279  002732  0E01               	movlw	1
  9280  002734  0100               	movlb	0	; () banked
  9281  002736  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  9282  002738  0E05               	movlw	5
  9283  00273A  EC58  F027         	call	_retornaDado
  9284  00273E  0100               	movlb	0	; () banked
  9285  002740  6F65               	movwf	??_FeedBack& (0+255),b
  9286  002742  0E00               	movlw	0
  9287  002744  B165               	btfsc	??_FeedBack& (0+255),0,b
  9288  002746  0E80               	movlw	128
  9289  002748  6F65               	movwf	??_FeedBack& (0+255),b
  9290  00274A  0102               	movlb	2	; () banked
  9291  00274C  51EF               	movf	_feedback2& (0+255),w,b
  9292  00274E  0B7F               	andlw	127
  9293  002750  0100               	movlb	0	; () banked
  9294  002752  1165               	iorwf	??_FeedBack& (0+255),w,b
  9295  002754  0102               	movlb	2	; () banked
  9296  002756  6FEF               	movwf	_feedback2& (0+255),b
  9297                           
  9298                           ; BSR set to: 2
  9299  002758  0012               	return		;funcret
  9300  00275A                     __end_of_FeedBack:
  9301                           	opt stack 0
  9302                           tblptru	equ	0xFF8
  9303                           tblptrh	equ	0xFF7
  9304                           tblptrl	equ	0xFF6
  9305                           tablat	equ	0xFF5
  9306                           prodh	equ	0xFF4
  9307                           prodl	equ	0xFF3
  9308                           intcon	equ	0xFF2
  9309                           postinc0	equ	0xFEE
  9310                           wreg	equ	0xFE8
  9311                           indf1	equ	0xFE7
  9312                           postdec1	equ	0xFE5
  9313                           fsr1h	equ	0xFE2
  9314                           fsr1l	equ	0xFE1
  9315                           indf2	equ	0xFDF
  9316                           postinc2	equ	0xFDE
  9317                           postdec2	equ	0xFDD
  9318                           plusw2	equ	0xFDB
  9319                           fsr2h	equ	0xFDA
  9320                           fsr2l	equ	0xFD9
  9321                           status	equ	0xFD8
  9322                           
  9323 ;; *************** function _retornaDado *****************
  9324 ;; Defined at:
  9325 ;;		line 51 in file "LoRaWanCore.c"
  9326 ;; Parameters:    Size  Location     Type
  9327 ;;  dadoByte        1    wreg     unsigned char 
  9328 ;;  dadoBit         1    0[BANK0 ] unsigned char 
  9329 ;; Auto vars:     Size  Location     Type
  9330 ;;  dadoByte        1    4[BANK0 ] unsigned char 
  9331 ;;  selectDado      1    3[BANK0 ] unsigned char 
  9332 ;; Return value:  Size  Location     Type
  9333 ;;                  1    wreg      unsigned char 
  9334 ;; Registers used:
  9335 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9336 ;; Tracked objects:
  9337 ;;		On entry : 0/0
  9338 ;;		On exit  : 0/0
  9339 ;;		Unchanged: 0/0
  9340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9341 ;;      Params:         0       1       0       0       0       0       0       0       0
  9342 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9343 ;;      Temps:          0       2       0       0       0       0       0       0       0
  9344 ;;      Totals:         0       5       0       0       0       0       0       0       0
  9345 ;;Total ram usage:        5 bytes
  9346 ;; Hardware stack levels used:    1
  9347 ;; Hardware stack levels required when called:   10
  9348 ;; This function calls:
  9349 ;;		Nothing
  9350 ;; This function is called by:
  9351 ;;		_FeedBack
  9352 ;;		_main
  9353 ;;		_TxLoRaWan
  9354 ;; This function uses a non-reentrant model
  9355 ;;
  9356                           
  9357                           	psect	text31
  9358  004EB0                     __ptext31:
  9359                           	opt stack 0
  9360  004EB0                     _retornaDado:
  9361                           	opt stack 20
  9362                           
  9363                           ; BSR set to: 2
  9364                           ;incstack = 0
  9365                           ;retornaDado@dadoByte stored from wreg
  9366  004EB0  0100               	movlb	0	; () banked
  9367  004EB2  6F64               	movwf	retornaDado@dadoByte& (0+255),b
  9368                           
  9369                           ;LoRaWanCore.c: 52: uint8_t selectDado;
  9370                           ;LoRaWanCore.c: 53: if (dadoBit){
  9371  004EB4  0100               	movlb	0	; () banked
  9372  004EB6  5160               	movf	retornaDado@dadoBit& (0+255),w,b
  9373  004EB8  B4D8               	btfsc	status,2,c
  9374  004EBA  D019               	goto	l2113
  9375                           
  9376                           ; BSR set to: 0
  9377                           ;LoRaWanCore.c: 54: selectDado = (dadosRecebidos[dadoByte].data >> dadoBit) & 1;
  9378  004EBC  C060  F061         	movff	retornaDado@dadoBit,??_retornaDado
  9379  004EC0  5164               	movf	retornaDado@dadoByte& (0+255),w,b
  9380  004EC2  0D02               	mullw	2
  9381  004EC4  0E01               	movlw	1
  9382  004EC6  26F3               	addwf	prodl,f,c
  9383  004EC8  0E00               	movlw	0
  9384  004ECA  22F4               	addwfc	prodh,f,c
  9385  004ECC  0E00               	movlw	low _dadosRecebidos
  9386  004ECE  24F3               	addwf	prodl,w,c
  9387  004ED0  6ED9               	movwf	fsr2l,c
  9388  004ED2  0E03               	movlw	high _dadosRecebidos
  9389  004ED4  20F4               	addwfc	prodh,w,c
  9390  004ED6  6EDA               	movwf	fsr2h,c
  9391  004ED8  50DF               	movf	indf2,w,c
  9392  004EDA  6F62               	movwf	(??_retornaDado+1)& (0+255),b
  9393  004EDC  2B61               	incf	??_retornaDado& (0+255),f,b
  9394  004EDE  D002               	goto	u7764
  9395  004EE0                     u7765:
  9396  004EE0  90D8               	bcf	status,0,c
  9397  004EE2  3362               	rrcf	(??_retornaDado+1)& (0+255),f,b
  9398  004EE4                     u7764:
  9399  004EE4  2F61               	decfsz	??_retornaDado& (0+255),f,b
  9400  004EE6  D7FC               	goto	u7765
  9401  004EE8  0100               	movlb	0	; () banked
  9402  004EEA  5162               	movf	(??_retornaDado+1)& (0+255),w,b
  9403  004EEC  D00D               	goto	L6
  9404  004EEE                     l2113:
  9405                           
  9406                           ; BSR set to: 0
  9407                           ;LoRaWanCore.c: 56: selectDado = (dadosRecebidos[dadoByte].data) & 1;}
  9408                           
  9409                           ; BSR set to: 0
  9410  004EEE  5164               	movf	retornaDado@dadoByte& (0+255),w,b
  9411  004EF0  0D02               	mullw	2
  9412  004EF2  0E01               	movlw	1
  9413  004EF4  26F3               	addwf	prodl,f,c
  9414  004EF6  0E00               	movlw	0
  9415  004EF8  22F4               	addwfc	prodh,f,c
  9416  004EFA  0E00               	movlw	low _dadosRecebidos
  9417  004EFC  24F3               	addwf	prodl,w,c
  9418  004EFE  6ED9               	movwf	fsr2l,c
  9419  004F00  0E03               	movlw	high _dadosRecebidos
  9420  004F02  20F4               	addwfc	prodh,w,c
  9421  004F04  6EDA               	movwf	fsr2h,c
  9422  004F06  50DF               	movf	indf2,w,c
  9423  004F08                     L6:
  9424  004F08  0B01               	andlw	1
  9425  004F0A  6F63               	movwf	retornaDado@selectDado& (0+255),b
  9426                           
  9427                           ; BSR set to: 0
  9428                           ;LoRaWanCore.c: 57: return selectDado;
  9429                           
  9430                           ; BSR set to: 0
  9431  004F0C  5163               	movf	retornaDado@selectDado& (0+255),w,b
  9432  004F0E  0012               	return	
  9433  004F10                     __end_of_retornaDado:
  9434                           	opt stack 0
  9435                           tblptru	equ	0xFF8
  9436                           tblptrh	equ	0xFF7
  9437                           tblptrl	equ	0xFF6
  9438                           tablat	equ	0xFF5
  9439                           prodh	equ	0xFF4
  9440                           prodl	equ	0xFF3
  9441                           intcon	equ	0xFF2
  9442                           postinc0	equ	0xFEE
  9443                           wreg	equ	0xFE8
  9444                           indf1	equ	0xFE7
  9445                           postdec1	equ	0xFE5
  9446                           fsr1h	equ	0xFE2
  9447                           fsr1l	equ	0xFE1
  9448                           indf2	equ	0xFDF
  9449                           postinc2	equ	0xFDE
  9450                           postdec2	equ	0xFDD
  9451                           plusw2	equ	0xFDB
  9452                           fsr2h	equ	0xFDA
  9453                           fsr2l	equ	0xFD9
  9454                           status	equ	0xFD8
  9455                           
  9456 ;; *************** function _DataRate *****************
  9457 ;; Defined at:
  9458 ;;		line 165 in file "LoRaWanCore.c"
  9459 ;; Parameters:    Size  Location     Type
  9460 ;;  dr              2  149[BANK0 ] unsigned int 
  9461 ;; Auto vars:     Size  Location     Type
  9462 ;;  comando       200   32[BANK1 ] unsigned char [200]
  9463 ;;  status          2  232[BANK1 ] unsigned int 
  9464 ;; Return value:  Size  Location     Type
  9465 ;;                  1    wreg      unsigned char 
  9466 ;; Registers used:
  9467 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9468 ;; Tracked objects:
  9469 ;;		On entry : 0/0
  9470 ;;		On exit  : 0/0
  9471 ;;		Unchanged: 0/0
  9472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9473 ;;      Params:         0       2       0       0       0       0       0       0       0
  9474 ;;      Locals:         0       0     202       0       0       0       0       0       0
  9475 ;;      Temps:          0       1       0       0       0       0       0       0       0
  9476 ;;      Totals:         0       3     202       0       0       0       0       0       0
  9477 ;;Total ram usage:      205 bytes
  9478 ;; Hardware stack levels used:    1
  9479 ;; Hardware stack levels required when called:   14
  9480 ;; This function calls:
  9481 ;;		_enviaComando
  9482 ;;		_sprintf
  9483 ;; This function is called by:
  9484 ;;		_main
  9485 ;; This function uses a non-reentrant model
  9486 ;;
  9487                           
  9488                           	psect	text32
  9489  0051F4                     __ptext32:
  9490                           	opt stack 0
  9491  0051F4                     _DataRate:
  9492                           	opt stack 16
  9493                           
  9494                           ;LoRaWanCore.c: 166: char comando[200];
  9495                           ;LoRaWanCore.c: 168: sprintf(comando, "%s %d", MAC_SET_DR, dr);
  9496                           
  9497                           ; BSR set to: 0
  9498                           ;incstack = 0
  9499  0051F4  0E20               	movlw	low DataRate@comando
  9500  0051F6  0100               	movlb	0	; () banked
  9501  0051F8  6FBF               	movwf	sprintf@sp& (0+255),b
  9502  0051FA  0E01               	movlw	high DataRate@comando
  9503  0051FC  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  9504  0051FE  0EE4               	movlw	low STR_31
  9505  005200  6FC1               	movwf	sprintf@f& (0+255),b
  9506  005202  0E7F               	movlw	high STR_31
  9507  005204  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  9508  005206  0EC3               	movlw	low _MAC_SET_DR
  9509  005208  6FC3               	movwf	(?_sprintf+4)& (0+255),b
  9510  00520A  0E7D               	movlw	high _MAC_SET_DR
  9511  00520C  6FC4               	movwf	(?_sprintf+5)& (0+255),b
  9512  00520E  C0F5  F0C5         	movff	DataRate@dr,?_sprintf+6
  9513  005212  C0F6  F0C6         	movff	DataRate@dr+1,?_sprintf+7
  9514  005216  EC09  F000         	call	_sprintf	;wreg free
  9515                           
  9516                           ;LoRaWanCore.c: 169: uint16_t status=enviaComando(comando,0);
  9517  00521A  0E20               	movlw	low DataRate@comando
  9518  00521C  0100               	movlb	0	; () banked
  9519  00521E  6F7C               	movwf	enviaComando@cmd& (0+255),b
  9520  005220  0E01               	movlw	high DataRate@comando
  9521  005222  6F7D               	movwf	(enviaComando@cmd+1)& (0+255),b
  9522  005224  0E00               	movlw	0
  9523  005226  6F7E               	movwf	enviaComando@tipoComando& (0+255),b
  9524  005228  EC3B  F01B         	call	_enviaComando	;wreg free
  9525  00522C  0100               	movlb	0	; () banked
  9526  00522E  6FF7               	movwf	??_DataRate& (0+255),b
  9527  005230  51F7               	movf	??_DataRate& (0+255),w,b
  9528  005232  0101               	movlb	1	; () banked
  9529  005234  6FE8               	movwf	DataRate@status& (0+255),b
  9530  005236  6BE9               	clrf	(DataRate@status+1)& (0+255),b
  9531  005238  0012               	return	
  9532  00523A                     __end_of_DataRate:
  9533                           	opt stack 0
  9534                           tblptru	equ	0xFF8
  9535                           tblptrh	equ	0xFF7
  9536                           tblptrl	equ	0xFF6
  9537                           tablat	equ	0xFF5
  9538                           prodh	equ	0xFF4
  9539                           prodl	equ	0xFF3
  9540                           intcon	equ	0xFF2
  9541                           postinc0	equ	0xFEE
  9542                           wreg	equ	0xFE8
  9543                           indf1	equ	0xFE7
  9544                           postdec1	equ	0xFE5
  9545                           fsr1h	equ	0xFE2
  9546                           fsr1l	equ	0xFE1
  9547                           indf2	equ	0xFDF
  9548                           postinc2	equ	0xFDE
  9549                           postdec2	equ	0xFDD
  9550                           plusw2	equ	0xFDB
  9551                           fsr2h	equ	0xFDA
  9552                           fsr2l	equ	0xFD9
  9553                           status	equ	0xFD8
  9554                           
  9555 ;; *************** function _sprintf *****************
  9556 ;; Defined at:
  9557 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\doprnt.c"
  9558 ;; Parameters:    Size  Location     Type
  9559 ;;  sp              2   95[BANK0 ] PTR unsigned char 
  9560 ;;		 -> TxLoRaWan@hex(4), TxLoRaWan@comando(200), DataRate@comando(200), SetBandWidth@comando(200), 
  9561 ;;		 -> SetSpreadingFactor@comando(200), MacSave@comando(200), GetAdr@comando(200), SetAdr@comando(200), 
  9562 ;;		 -> SetChannelLoRaWan@comando(200), SetAppKey@comando(200), SetAppEUI@comando(200), SetDevEUI@comando(200), 
  9563 ;;		 -> GetDnctr@comando(200), addSensorFloat@f(30), addSensorInt@f(30), addSensorStr@f(30), 
  9564 ;;		 -> frameBuffer(200), main@data(150), 
  9565 ;;  f               2   97[BANK0 ] PTR const unsigned char 
  9566 ;;		 -> STR_35(5), STR_34(7), STR_33(7), STR_32(6), 
  9567 ;;		 -> STR_31(6), STR_30(5), STR_29(3), STR_28(3), 
  9568 ;;		 -> STR_27(6), STR_26(10), STR_25(9), STR_24(68), 
  9569 ;;		 -> STR_23(36), STR_22(36), STR_21(3), STR_5(7), 
  9570 ;;		 -> STR_4(8), STR_3(7), STR_2(17), STR_1(101), 
  9571 ;; Auto vars:     Size  Location     Type
  9572 ;;  idx             1    5[BANK1 ] unsigned char 
  9573 ;;  val             4   18[BANK1 ] unsigned long 
  9574 ;;  tmpval          4   12[BANK1 ] struct .
  9575 ;;  fval            3   22[BANK1 ] struct .
  9576 ;;  prec            2   29[BANK1 ] int 
  9577 ;;  flag            2   27[BANK1 ] unsigned short 
  9578 ;;  width           2   25[BANK1 ] int 
  9579 ;;  exp             2   16[BANK1 ] int 
  9580 ;;  ap              2   10[BANK1 ] PTR void [1]
  9581 ;;		 -> ?_sprintf(2), 
  9582 ;;  len             2    8[BANK1 ] unsigned int 
  9583 ;;  cp              2    6[BANK1 ] PTR const unsigned char 
  9584 ;;		 -> STR_36(7), MAC_TX_UNCNF(9), MAC_TX_CNF(7), MAC_SET_DR(7), 
  9585 ;;		 -> MAC_SET_BW(13), MAC_SET_SF(16), MAC_SAVE(5), MAC_GET_ADR(8), 
  9586 ;;		 -> MAC_SET_ADR(8), MAC_SET_CH_STATUS(14), MAC_SET_APPKEY(11), MAC_SET_APPEUI(11), 
  9587 ;;		 -> MAC_SET_DEVEUI(11), MAC_GET_DNCTR(10), STATE_ON(3), STATE_OFF(4), 
  9588 ;;  c               1   31[BANK1 ] char 
  9589 ;;  d               1    0        unsigned char 
  9590 ;; Return value:  Size  Location     Type
  9591 ;;                  2   95[BANK0 ] int 
  9592 ;; Registers used:
  9593 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9594 ;; Tracked objects:
  9595 ;;		On entry : 0/0
  9596 ;;		On exit  : 0/0
  9597 ;;		Unchanged: 0/0
  9598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9599 ;;      Params:         0      48       0       0       0       0       0       0       0
  9600 ;;      Locals:         0       0      32       0       0       0       0       0       0
  9601 ;;      Temps:          0       6       0       0       0       0       0       0       0
  9602 ;;      Totals:         0      54      32       0       0       0       0       0       0
  9603 ;;Total ram usage:       86 bytes
  9604 ;; Hardware stack levels used:    1
  9605 ;; Hardware stack levels required when called:   13
  9606 ;; This function calls:
  9607 ;;		___awdiv
  9608 ;;		___ftadd
  9609 ;;		___ftge
  9610 ;;		___ftmul
  9611 ;;		___ftneg
  9612 ;;		___ftsub
  9613 ;;		___fttol
  9614 ;;		___lldiv
  9615 ;;		___llmod
  9616 ;;		___lltoft
  9617 ;;		___wmul
  9618 ;;		__div_to_l_
  9619 ;;		__tdiv_to_l_
  9620 ;;		_fround
  9621 ;;		_isdigit
  9622 ;;		_scale
  9623 ;; This function is called by:
  9624 ;;		_main
  9625 ;;		_SetDevEUI
  9626 ;;		_SetAppEUI
  9627 ;;		_SetAppKey
  9628 ;;		_SetChannelLoRaWan
  9629 ;;		_SetAdr
  9630 ;;		_MacSave
  9631 ;;		_SetSpreadingFactor
  9632 ;;		_SetBandWidth
  9633 ;;		_DataRate
  9634 ;;		_TxLoRaWan
  9635 ;;		_createFrameHeader
  9636 ;;		_addSensorStr
  9637 ;;		_addSensorInt
  9638 ;;		_addSensorFloat
  9639 ;;		_GetDnctr
  9640 ;;		_GetAdr
  9641 ;; This function uses a non-reentrant model
  9642 ;;
  9643                           
  9644                           	psect	text33
  9645  000012                     __ptext33:
  9646                           	opt stack 0
  9647  000012                     _sprintf:
  9648                           	opt stack 17
  9649                           
  9650                           ;doprnt.c: 494: va_list ap;
  9651                           ;doprnt.c: 499: signed char c;
  9652                           ;doprnt.c: 501: int width;
  9653                           ;doprnt.c: 504: int prec;
  9654                           ;doprnt.c: 508: unsigned short flag;
  9655                           ;doprnt.c: 515: char d;
  9656                           ;doprnt.c: 516: double fval;
  9657                           ;doprnt.c: 517: int exp;
  9658                           ;doprnt.c: 523: union {
  9659                           ;doprnt.c: 524: unsigned long vd;
  9660                           ;doprnt.c: 525: double integ;
  9661                           ;doprnt.c: 526: } tmpval;
  9662                           ;doprnt.c: 528: unsigned long val;
  9663                           ;doprnt.c: 529: unsigned len;
  9664                           ;doprnt.c: 530: const char * cp;
  9665                           ;doprnt.c: 533: *ap = __va_start();
  9666                           
  9667                           ; BSR set to: 1
  9668                           ;incstack = 0
  9669  000012  0EC3               	movlw	low (?_sprintf+4)
  9670  000014  0101               	movlb	1	; () banked
  9671  000016  6F0A               	movwf	sprintf@ap& (0+255),b
  9672  000018  0E00               	movlw	high (?_sprintf+4)
  9673  00001A  6F0B               	movwf	(sprintf@ap+1)& (0+255),b
  9674                           
  9675                           ;doprnt.c: 536: while(c = *f++) {
  9676  00001C  EFF2  F006         	goto	u8460
  9677  000020                     
  9678                           ; BSR set to: 1
  9679                           ;doprnt.c: 538: if(c != '%')
  9680                           
  9681                           ; BSR set to: 1
  9682  000020  0E25               	movlw	37
  9683  000022  191F               	xorwf	sprintf@c& (0+255),w,b
  9684  000024  B4D8               	btfsc	status,2,c
  9685  000026  D00B               	goto	l2454
  9686                           
  9687                           ; BSR set to: 1
  9688                           ;doprnt.c: 540: {
  9689                           ;doprnt.c: 541: ((*sp++ = (c)));
  9690  000028  C0BF  FFD9         	movff	sprintf@sp,fsr2l
  9691  00002C  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
  9692  000030  C11F  FFDF         	movff	sprintf@c,indf2
  9693                           
  9694                           ; BSR set to: 1
  9695  000034  0100               	movlb	0	; () banked
  9696  000036  4BBF               	infsnz	sprintf@sp& (0+255),f,b
  9697  000038  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
  9698                           
  9699                           ;doprnt.c: 542: continue;
  9700  00003A  EFF2  F006         	goto	u8460
  9701  00003E                     l2454:
  9702                           
  9703                           ;doprnt.c: 543: }
  9704                           ;doprnt.c: 546: width = 0;
  9705                           
  9706                           ; BSR set to: 0
  9707  00003E  0E00               	movlw	0
  9708  000040  0101               	movlb	1	; () banked
  9709  000042  6F1A               	movwf	(sprintf@width+1)& (0+255),b
  9710  000044  0E00               	movlw	0
  9711  000046  6F19               	movwf	sprintf@width& (0+255),b
  9712                           
  9713                           ;doprnt.c: 548: flag = 0;
  9714  000048  0E00               	movlw	0
  9715  00004A  6F1C               	movwf	(sprintf@flag+1)& (0+255),b
  9716  00004C  0E00               	movlw	0
  9717  00004E  6F1B               	movwf	sprintf@flag& (0+255),b
  9718                           
  9719                           ; BSR set to: 1
  9720                           ;doprnt.c: 551: switch(*f) {
  9721                           
  9722                           ;doprnt.c: 550: for(;;) {
  9723  000050  D005               	goto	l2456
  9724  000052                     
  9725                           ;doprnt.c: 580: flag |= 0x04;
  9726                           
  9727                           ; BSR set to: 1
  9728  000052  0101               	movlb	1	; () banked
  9729  000054  851B               	bsf	sprintf@flag& (0+255),2,b
  9730                           
  9731                           ;doprnt.c: 581: f++;
  9732  000056  0100               	movlb	0	; () banked
  9733  000058  4BC1               	infsnz	sprintf@f& (0+255),f,b
  9734  00005A  2BC2               	incf	(sprintf@f+1)& (0+255),f,b
  9735  00005C                     l2456:
  9736                           
  9737                           ; BSR set to: 0
  9738  00005C  C0C1  FFF6         	movff	sprintf@f,tblptrl
  9739  000060  C0C2  FFF7         	movff	sprintf@f+1,tblptrh
  9740  000064                     	if	0	;tblptru may be non-zero
  9741  000064                     	endif
  9742  000064                     	if	0	;tblptru may be non-zero
  9743  000064                     	endif
  9744  000064  0008               	tblrd		*
  9745  000066  50F5               	movf	tablat,w,c
  9746                           
  9747                           ; Switch size 1, requested type "space"
  9748                           ; Number of cases is 1, Range of values is 48 to 48
  9749                           ; switch strategies available:
  9750                           ; Name         Instructions Cycles
  9751                           ; simple_byte            4     3 (average)
  9752                           ;	Chosen strategy is simple_byte
  9753  000068  0A30               	xorlw	48	; case 48
  9754  00006A  B4D8               	btfsc	status,2,c
  9755  00006C  D7F2               	goto	l2457
  9756                           
  9757                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  9758                           
  9759                           ;doprnt.c: 586: }
  9760                           
  9761                           ;doprnt.c: 585: break;
  9762  00006E  C0C1  FFF6         	movff	sprintf@f,tblptrl
  9763  000072  C0C2  FFF7         	movff	sprintf@f+1,tblptrh
  9764  000076                     	if	0	;tblptru may be non-zero
  9765  000076                     	endif
  9766  000076                     	if	0	;tblptru may be non-zero
  9767  000076                     	endif
  9768  000076  0008               	tblrd		*
  9769  000078  50F5               	movf	tablat,w,c
  9770  00007A  EC70  F02B         	call	_isdigit
  9771  00007E  A0D8               	btfss	status,0,c
  9772  000080  D039               	goto	u7790
  9773                           
  9774                           ;doprnt.c: 598: width = 0;
  9775  000082  0E00               	movlw	0
  9776  000084  0101               	movlb	1	; () banked
  9777  000086  6F1A               	movwf	(sprintf@width+1)& (0+255),b
  9778  000088  0E00               	movlw	0
  9779  00008A  6F19               	movwf	sprintf@width& (0+255),b
  9780  00008C                     
  9781                           ;doprnt.c: 600: width *= 10;
  9782                           
  9783                           ; BSR set to: 1
  9784  00008C  C119  F06E         	movff	sprintf@width,___wmul@multiplier
  9785  000090  C11A  F06F         	movff	sprintf@width+1,___wmul@multiplier+1
  9786  000094  0E00               	movlw	0
  9787  000096  0100               	movlb	0	; () banked
  9788  000098  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9789  00009A  0E0A               	movlw	10
  9790  00009C  6F70               	movwf	___wmul@multiplicand& (0+255),b
  9791  00009E  ECFE  F02A         	call	___wmul	;wreg free
  9792  0000A2  C06E  F119         	movff	?___wmul,sprintf@width
  9793  0000A6  C06F  F11A         	movff	?___wmul+1,sprintf@width+1
  9794                           
  9795                           ;doprnt.c: 601: width += *f++ - '0';
  9796  0000AA  0ED0               	movlw	208
  9797  0000AC  0100               	movlb	0	; () banked
  9798  0000AE  6FEF               	movwf	??_sprintf& (0+255),b
  9799  0000B0  0EFF               	movlw	255
  9800  0000B2  6FF0               	movwf	(??_sprintf+1)& (0+255),b
  9801  0000B4  C0C1  FFF6         	movff	sprintf@f,tblptrl
  9802  0000B8  C0C2  FFF7         	movff	sprintf@f+1,tblptrh
  9803  0000BC                     	if	0	;tblptru may be non-zero
  9804  0000BC                     	endif
  9805  0000BC                     	if	0	;tblptru may be non-zero
  9806  0000BC                     	endif
  9807  0000BC  0008               	tblrd		*
  9808  0000BE  50F5               	movf	tablat,w,c
  9809  0000C0  6FF1               	movwf	(??_sprintf+2)& (0+255),b
  9810  0000C2  6BF2               	clrf	(??_sprintf+3)& (0+255),b
  9811  0000C4  51EF               	movf	??_sprintf& (0+255),w,b
  9812  0000C6  27F1               	addwf	(??_sprintf+2)& (0+255),f,b
  9813  0000C8  51F0               	movf	(??_sprintf+1)& (0+255),w,b
  9814  0000CA  23F2               	addwfc	(??_sprintf+3)& (0+255),f,b
  9815  0000CC  51F1               	movf	(??_sprintf+2)& (0+255),w,b
  9816  0000CE  0101               	movlb	1	; () banked
  9817  0000D0  2719               	addwf	sprintf@width& (0+255),f,b
  9818  0000D2  0100               	movlb	0	; () banked
  9819  0000D4  51F2               	movf	(??_sprintf+3)& (0+255),w,b
  9820  0000D6  0101               	movlb	1	; () banked
  9821  0000D8  231A               	addwfc	(sprintf@width+1)& (0+255),f,b
  9822                           
  9823                           ; BSR set to: 1
  9824  0000DA  0100               	movlb	0	; () banked
  9825  0000DC  4BC1               	infsnz	sprintf@f& (0+255),f,b
  9826  0000DE  2BC2               	incf	(sprintf@f+1)& (0+255),f,b
  9827                           
  9828                           ; BSR set to: 0
  9829                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  9830  0000E0  C0C1  FFF6         	movff	sprintf@f,tblptrl
  9831  0000E4  C0C2  FFF7         	movff	sprintf@f+1,tblptrh
  9832  0000E8                     	if	0	;tblptru may be non-zero
  9833  0000E8                     	endif
  9834  0000E8                     	if	0	;tblptru may be non-zero
  9835  0000E8                     	endif
  9836  0000E8  0008               	tblrd		*
  9837  0000EA  50F5               	movf	tablat,w,c
  9838  0000EC  EC70  F02B         	call	_isdigit
  9839  0000F0  B0D8               	btfsc	status,0,c
  9840  0000F2  D7CC               	goto	l2462
  9841  0000F4                     u7790:
  9842                           
  9843                           ;doprnt.c: 608: }
  9844                           ;doprnt.c: 611: if(*f == '.') {
  9845  0000F4  C0C1  FFF6         	movff	sprintf@f,tblptrl
  9846  0000F8  C0C2  FFF7         	movff	sprintf@f+1,tblptrh
  9847  0000FC                     	if	0	;tblptru may be non-zero
  9848  0000FC                     	endif
  9849  0000FC                     	if	0	;tblptru may be non-zero
  9850  0000FC                     	endif
  9851  0000FC  0008               	tblrd		*
  9852  0000FE  50F5               	movf	tablat,w,c
  9853  000100  0A2E               	xorlw	46
  9854  000102  A4D8               	btfss	status,2,c
  9855  000104  D037               	goto	l2464
  9856                           
  9857                           ;doprnt.c: 612: flag |= 0x4000;
  9858  000106  0101               	movlb	1	; () banked
  9859  000108  8D1C               	bsf	(sprintf@flag+1)& (0+255),6,b
  9860                           
  9861                           ;doprnt.c: 613: f++;
  9862  00010A  0100               	movlb	0	; () banked
  9863  00010C  4BC1               	infsnz	sprintf@f& (0+255),f,b
  9864  00010E  2BC2               	incf	(sprintf@f+1)& (0+255),f,b
  9865                           
  9866                           ; BSR set to: 0
  9867                           ;doprnt.c: 620: {
  9868                           ;doprnt.c: 621: prec = 0;
  9869  000110  0E00               	movlw	0
  9870  000112  0101               	movlb	1	; () banked
  9871  000114  6F1E               	movwf	(sprintf@prec+1)& (0+255),b
  9872  000116  0E00               	movlw	0
  9873  000118  6F1D               	movwf	sprintf@prec& (0+255),b
  9874                           
  9875                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  9876  00011A  D021               	goto	l2465
  9877  00011C                     
  9878                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  9879                           
  9880                           ; BSR set to: 1
  9881  00011C  C11D  F06E         	movff	sprintf@prec,___wmul@multiplier
  9882  000120  C11E  F06F         	movff	sprintf@prec+1,___wmul@multiplier+1
  9883  000124  0E00               	movlw	0
  9884  000126  0100               	movlb	0	; () banked
  9885  000128  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9886  00012A  0E0A               	movlw	10
  9887  00012C  6F70               	movwf	___wmul@multiplicand& (0+255),b
  9888  00012E  ECFE  F02A         	call	___wmul	;wreg free
  9889  000132  C0C1  FFF6         	movff	sprintf@f,tblptrl
  9890  000136  C0C2  FFF7         	movff	sprintf@f+1,tblptrh
  9891  00013A                     	if	0	;tblptru may be non-zero
  9892  00013A                     	endif
  9893  00013A                     	if	0	;tblptru may be non-zero
  9894  00013A                     	endif
  9895  00013A  0008               	tblrd		*
  9896  00013C  50F5               	movf	tablat,w,c
  9897  00013E  0100               	movlb	0	; () banked
  9898  000140  276E               	addwf	?___wmul& (0+255),f,b
  9899  000142  0E00               	movlw	0
  9900  000144  236F               	addwfc	(?___wmul+1)& (0+255),f,b
  9901  000146  0ED0               	movlw	208
  9902  000148  256E               	addwf	?___wmul& (0+255),w,b
  9903  00014A  0101               	movlb	1	; () banked
  9904  00014C  6F1D               	movwf	sprintf@prec& (0+255),b
  9905  00014E  0EFF               	movlw	255
  9906  000150  0100               	movlb	0	; () banked
  9907  000152  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  9908  000154  0101               	movlb	1	; () banked
  9909  000156  6F1E               	movwf	(sprintf@prec+1)& (0+255),b
  9910                           
  9911                           ; BSR set to: 1
  9912  000158  0100               	movlb	0	; () banked
  9913  00015A  4BC1               	infsnz	sprintf@f& (0+255),f,b
  9914  00015C  2BC2               	incf	(sprintf@f+1)& (0+255),f,b
  9915  00015E                     l2465:
  9916                           
  9917                           ; BSR set to: 0
  9918  00015E  C0C1  FFF6         	movff	sprintf@f,tblptrl
  9919  000162  C0C2  FFF7         	movff	sprintf@f+1,tblptrh
  9920  000166                     	if	0	;tblptru may be non-zero
  9921  000166                     	endif
  9922  000166                     	if	0	;tblptru may be non-zero
  9923  000166                     	endif
  9924  000166  0008               	tblrd		*
  9925  000168  50F5               	movf	tablat,w,c
  9926  00016A  EC70  F02B         	call	_isdigit
  9927  00016E  A0D8               	btfss	status,0,c
  9928  000170  D08D               	goto	l2470
  9929  000172  D7D4               	goto	l2466
  9930  000174                     l2464:
  9931                           
  9932                           ;doprnt.c: 626: prec = 0;
  9933  000174  0E00               	movlw	0
  9934  000176  0101               	movlb	1	; () banked
  9935  000178  6F1E               	movwf	(sprintf@prec+1)& (0+255),b
  9936  00017A  0E00               	movlw	0
  9937  00017C  6F1D               	movwf	sprintf@prec& (0+255),b
  9938                           
  9939                           ; BSR set to: 1
  9940                           ;doprnt.c: 628: flag |= 0x1000;
  9941  00017E  891C               	bsf	(sprintf@flag+1)& (0+255),4,b
  9942                           
  9943                           ; BSR set to: 1
  9944                           ;doprnt.c: 635: switch(c = *f++) {
  9945                           
  9946                           ;doprnt.c: 630: }
  9947                           ;doprnt.c: 633: loop:
  9948                           
  9949                           ; BSR set to: 1
  9950  000180  D085               	goto	l2470
  9951  000182                     
  9952                           ; BSR set to: 1
  9953                           ;doprnt.c: 643: flag |= 0x10;
  9954                           
  9955                           ; BSR set to: 1
  9956  000182  891B               	bsf	sprintf@flag& (0+255),4,b
  9957                           
  9958                           ;doprnt.c: 644: goto loop;
  9959  000184  D083               	goto	l2470
  9960  000186                     
  9961                           ; BSR set to: 1
  9962                           ;doprnt.c: 663: flag |= 0x400;
  9963                           
  9964                           ; BSR set to: 1
  9965  000186  851C               	bsf	(sprintf@flag+1)& (0+255),2,b
  9966                           
  9967                           ; BSR set to: 1
  9968                           ;doprnt.c: 698: case 'i':
  9969                           ;doprnt.c: 699: break;
  9970                           
  9971                           ; BSR set to: 1
  9972                           
  9973                           ;doprnt.c: 697: case 'd':
  9974                           
  9975                           ;doprnt.c: 664: break;
  9976  000188  D0AB               	goto	l2475
  9977  00018A                     
  9978                           ; BSR set to: 1
  9979                           ;doprnt.c: 714: flag |= 0x20;
  9980                           
  9981                           ; BSR set to: 1
  9982  00018A  8B1B               	bsf	sprintf@flag& (0+255),5,b
  9983  00018C                     l2479:
  9984                           
  9985                           ; BSR set to: 1
  9986                           ;doprnt.c: 721: flag |= 0x80;
  9987  00018C  8F1B               	bsf	sprintf@flag& (0+255),7,b
  9988                           
  9989                           ;doprnt.c: 723: break;
  9990  00018E  D0A8               	goto	l2475
  9991  000190                     
  9992                           ; BSR set to: 1
  9993                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  9994                           
  9995                           ; BSR set to: 1
  9996  000190  C10A  FFD9         	movff	sprintf@ap,fsr2l
  9997  000194  C10B  FFDA         	movff	sprintf@ap+1,fsr2h
  9998  000198  CFDE F106          	movff	postinc2,sprintf@cp
  9999  00019C  CFDD F107          	movff	postdec2,sprintf@cp+1
 10000                           
 10001                           ; BSR set to: 1
 10002  0001A0  0E02               	movlw	2
 10003  0001A2  270A               	addwf	sprintf@ap& (0+255),f,b
 10004  0001A4  0E00               	movlw	0
 10005  0001A6  230B               	addwfc	(sprintf@ap+1)& (0+255),f,b
 10006                           
 10007                           ; BSR set to: 1
 10008                           ;doprnt.c: 740: if(!cp)
 10009  0001A8  5106               	movf	sprintf@cp& (0+255),w,b
 10010  0001AA  1107               	iorwf	(sprintf@cp+1)& (0+255),w,b
 10011  0001AC  A4D8               	btfss	status,2,c
 10012  0001AE  D004               	goto	l2481
 10013                           
 10014                           ; BSR set to: 1
 10015                           ;doprnt.c: 741: cp = "(null)";
 10016  0001B0  0EBA               	movlw	low STR_36
 10017  0001B2  6F06               	movwf	sprintf@cp& (0+255),b
 10018  0001B4  0E7F               	movlw	high STR_36
 10019  0001B6  6F07               	movwf	(sprintf@cp+1)& (0+255),b
 10020  0001B8                     l2481:
 10021                           
 10022                           ; BSR set to: 1
 10023                           ;doprnt.c: 745: len = 0;
 10024                           
 10025                           ; BSR set to: 1
 10026  0001B8  0E00               	movlw	0
 10027  0001BA  6F09               	movwf	(sprintf@len+1)& (0+255),b
 10028  0001BC  0E00               	movlw	0
 10029  0001BE  6F08               	movwf	sprintf@len& (0+255),b
 10030                           
 10031                           ;doprnt.c: 746: while(cp[len])
 10032  0001C0  D003               	goto	l2482
 10033  0001C2                     
 10034                           ;doprnt.c: 747: len++;
 10035                           
 10036                           ; BSR set to: 1
 10037  0001C2  0101               	movlb	1	; () banked
 10038  0001C4  4B08               	infsnz	sprintf@len& (0+255),f,b
 10039  0001C6  2B09               	incf	(sprintf@len+1)& (0+255),f,b
 10040  0001C8                     l2482:
 10041                           
 10042                           ; BSR set to: 1
 10043                           
 10044                           ; BSR set to: 1
 10045  0001C8  5108               	movf	sprintf@len& (0+255),w,b
 10046  0001CA  2506               	addwf	sprintf@cp& (0+255),w,b
 10047  0001CC  0100               	movlb	0	; () banked
 10048  0001CE  6FEF               	movwf	??_sprintf& (0+255),b
 10049  0001D0  0101               	movlb	1	; () banked
 10050  0001D2  5109               	movf	(sprintf@len+1)& (0+255),w,b
 10051  0001D4  2107               	addwfc	(sprintf@cp+1)& (0+255),w,b
 10052  0001D6  0100               	movlb	0	; () banked
 10053  0001D8  6FF0               	movwf	(??_sprintf+1)& (0+255),b
 10054  0001DA  C0EF  FFF6         	movff	??_sprintf,tblptrl
 10055  0001DE  C0F0  FFF7         	movff	??_sprintf+1,tblptrh
 10056  0001E2                     	if	0	;tblptru may be non-zero
 10057  0001E2                     	endif
 10058  0001E2                     	if	0	;tblptru may be non-zero
 10059  0001E2                     	endif
 10060  0001E2  0008               	tblrd		*
 10061  0001E4  50F5               	movf	tablat,w,c
 10062  0001E6  0900               	iorlw	0
 10063  0001E8  A4D8               	btfss	status,2,c
 10064  0001EA  D7EB               	goto	l2483
 10065                           
 10066                           ; BSR set to: 0
 10067                           ;doprnt.c: 753: if(prec && prec < len)
 10068                           
 10069                           ; BSR set to: 0
 10070  0001EC  0101               	movlb	1	; () banked
 10071  0001EE  511D               	movf	sprintf@prec& (0+255),w,b
 10072  0001F0  111E               	iorwf	(sprintf@prec+1)& (0+255),w,b
 10073  0001F2  B4D8               	btfsc	status,2,c
 10074  0001F4  D00A               	goto	l2485
 10075                           
 10076                           ; BSR set to: 1
 10077  0001F6  5108               	movf	sprintf@len& (0+255),w,b
 10078  0001F8  5D1D               	subwf	sprintf@prec& (0+255),w,b
 10079  0001FA  5109               	movf	(sprintf@len+1)& (0+255),w,b
 10080  0001FC  591E               	subwfb	(sprintf@prec+1)& (0+255),w,b
 10081  0001FE  B0D8               	btfsc	status,0,c
 10082  000200  D004               	goto	l2485
 10083                           
 10084                           ; BSR set to: 1
 10085                           ;doprnt.c: 754: len = prec;
 10086  000202  C11D  F108         	movff	sprintf@prec,sprintf@len
 10087  000206  C11E  F109         	movff	sprintf@prec+1,sprintf@len+1
 10088  00020A                     l2485:
 10089                           
 10090                           ; BSR set to: 1
 10091                           ;doprnt.c: 757: if(width > len)
 10092                           
 10093                           ; BSR set to: 1
 10094  00020A  5119               	movf	sprintf@width& (0+255),w,b
 10095  00020C  5D08               	subwf	sprintf@len& (0+255),w,b
 10096  00020E  511A               	movf	(sprintf@width+1)& (0+255),w,b
 10097  000210  5909               	subwfb	(sprintf@len+1)& (0+255),w,b
 10098  000212  B0D8               	btfsc	status,0,c
 10099  000214  D005               	goto	l2486
 10100                           
 10101                           ; BSR set to: 1
 10102                           ;doprnt.c: 758: width -= len;
 10103  000216  5108               	movf	sprintf@len& (0+255),w,b
 10104  000218  5F19               	subwf	sprintf@width& (0+255),f,b
 10105  00021A  5109               	movf	(sprintf@len+1)& (0+255),w,b
 10106  00021C  5B1A               	subwfb	(sprintf@width+1)& (0+255),f,b
 10107  00021E  D00E               	goto	l2488
 10108  000220                     l2486:
 10109                           
 10110                           ; BSR set to: 1
 10111                           ;doprnt.c: 759: else
 10112                           ;doprnt.c: 760: width = 0;
 10113                           
 10114                           ; BSR set to: 1
 10115  000220  0E00               	movlw	0
 10116  000222  6F1A               	movwf	(sprintf@width+1)& (0+255),b
 10117  000224  0E00               	movlw	0
 10118  000226  6F19               	movwf	sprintf@width& (0+255),b
 10119                           
 10120                           ; BSR set to: 1
 10121                           ;doprnt.c: 764: while(width--)
 10122  000228  D009               	goto	l2488
 10123  00022A                     l8777:
 10124                           
 10125                           ; BSR set to: 1
 10126                           ;doprnt.c: 765: ((*sp++ = (' ')));
 10127  00022A  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 10128  00022E  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 10129  000232  0E20               	movlw	32
 10130  000234  6EDF               	movwf	indf2,c
 10131                           
 10132                           ; BSR set to: 1
 10133  000236  0100               	movlb	0	; () banked
 10134  000238  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 10135  00023A  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 10136  00023C                     l2488:
 10137                           
 10138                           ; BSR set to: 0
 10139  00023C  0101               	movlb	1	; () banked
 10140  00023E  0719               	decf	sprintf@width& (0+255),f,b
 10141  000240  A0D8               	btfss	status,0,c
 10142  000242  071A               	decf	(sprintf@width+1)& (0+255),f,b
 10143  000244  2919               	incf	sprintf@width& (0+255),w,b
 10144  000246  E1F1               	bnz	l8777
 10145  000248  291A               	incf	(sprintf@width+1)& (0+255),w,b
 10146  00024A  B4D8               	btfsc	status,2,c
 10147  00024C  D011               	goto	l2491
 10148  00024E  D7ED               	goto	l2489
 10149  000250                     l8783:
 10150                           
 10151                           ; BSR set to: 1
 10152                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
 10153  000250  C106  FFF6         	movff	sprintf@cp,tblptrl
 10154  000254  C107  FFF7         	movff	sprintf@cp+1,tblptrh
 10155  000258                     	if	0	;tblptru may be non-zero
 10156  000258                     	endif
 10157  000258                     	if	0	;tblptru may be non-zero
 10158  000258                     	endif
 10159  000258  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 10160  00025C  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 10161  000260  0008               	tblrd		*
 10162  000262  CFF5 FFDF          	movff	tablat,indf2
 10163                           
 10164                           ; BSR set to: 1
 10165  000266  4B06               	infsnz	sprintf@cp& (0+255),f,b
 10166  000268  2B07               	incf	(sprintf@cp+1)& (0+255),f,b
 10167                           
 10168                           ; BSR set to: 1
 10169  00026A  0100               	movlb	0	; () banked
 10170  00026C  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 10171  00026E  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 10172  000270                     l2491:
 10173                           
 10174                           ; BSR set to: 0
 10175  000270  0101               	movlb	1	; () banked
 10176  000272  0708               	decf	sprintf@len& (0+255),f,b
 10177  000274  A0D8               	btfss	status,0,c
 10178  000276  0709               	decf	(sprintf@len+1)& (0+255),f,b
 10179  000278  2908               	incf	sprintf@len& (0+255),w,b
 10180  00027A  E1EA               	bnz	l8783
 10181  00027C  2909               	incf	(sprintf@len+1)& (0+255),w,b
 10182  00027E  B4D8               	btfsc	status,2,c
 10183  000280  EFF2  F006         	goto	u8460
 10184  000284  D7E5               	goto	l2492
 10185  000286                     
 10186                           ; BSR set to: 1
 10187                           ;doprnt.c: 818: flag |= 0xC0;
 10188                           
 10189                           ; BSR set to: 1
 10190  000286  0EC0               	movlw	192
 10191  000288  131B               	iorwf	sprintf@flag& (0+255),f,b
 10192                           
 10193                           ; BSR set to: 1
 10194                           ;doprnt.c: 822: }
 10195                           
 10196                           ;doprnt.c: 819: break;
 10197  00028A  D02A               	goto	l2475
 10198  00028C                     l2470:
 10199                           
 10200                           ; BSR set to: 1
 10201  00028C  C0C1  FFF6         	movff	sprintf@f,tblptrl
 10202  000290  C0C2  FFF7         	movff	sprintf@f+1,tblptrh
 10203  000294  0100               	movlb	0	; () banked
 10204  000296  4BC1               	infsnz	sprintf@f& (0+255),f,b
 10205  000298  2BC2               	incf	(sprintf@f+1)& (0+255),f,b
 10206  00029A                     	if	0	;tblptru may be non-zero
 10207  00029A                     	endif
 10208  00029A                     	if	0	;tblptru may be non-zero
 10209  00029A                     	endif
 10210  00029A  0008               	tblrd		*
 10211  00029C  CFF5 F11F          	movff	tablat,sprintf@c
 10212  0002A0  0101               	movlb	1	; () banked
 10213  0002A2  511F               	movf	sprintf@c& (0+255),w,b
 10214                           
 10215                           ; Switch size 1, requested type "space"
 10216                           ; Number of cases is 9, Range of values is 0 to 120
 10217                           ; switch strategies available:
 10218                           ; Name         Instructions Cycles
 10219                           ; simple_byte           28    15 (average)
 10220                           ;	Chosen strategy is simple_byte
 10221  0002A4  0A00               	xorlw	0	; case 0
 10222  0002A6  B4D8               	btfsc	status,2,c
 10223  0002A8  EF01  F007         	goto	u8470
 10224  0002AC  0A58               	xorlw	88	; case 88
 10225  0002AE  B4D8               	btfsc	status,2,c
 10226  0002B0  D76C               	goto	l2478
 10227  0002B2  0A3C               	xorlw	60	; case 100
 10228  0002B4  B4D8               	btfsc	status,2,c
 10229  0002B6  D014               	goto	l2475
 10230  0002B8  0A02               	xorlw	2	; case 102
 10231  0002BA  B4D8               	btfsc	status,2,c
 10232  0002BC  D764               	goto	l2474
 10233  0002BE  0A0F               	xorlw	15	; case 105
 10234  0002C0  B4D8               	btfsc	status,2,c
 10235  0002C2  D00E               	goto	l2475
 10236  0002C4  0A05               	xorlw	5	; case 108
 10237  0002C6  B4D8               	btfsc	status,2,c
 10238  0002C8  D75C               	goto	l2473
 10239  0002CA  0A1F               	xorlw	31	; case 115
 10240  0002CC  B4D8               	btfsc	status,2,c
 10241  0002CE  D760               	goto	l2480
 10242  0002D0  0A06               	xorlw	6	; case 117
 10243  0002D2  B4D8               	btfsc	status,2,c
 10244  0002D4  D7D8               	goto	l2495
 10245  0002D6  0A0D               	xorlw	13	; case 120
 10246  0002D8  B4D8               	btfsc	status,2,c
 10247  0002DA  D758               	goto	l2479
 10248  0002DC  EFF2  F006         	goto	u8460
 10249  0002E0                     l2475:
 10250                           
 10251                           ; BSR set to: 1
 10252                           ;doprnt.c: 825: if(flag & (0x700)) {
 10253                           
 10254                           ; BSR set to: 1
 10255  0002E0  0E07               	movlw	7
 10256  0002E2  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
 10257  0002E4  B4D8               	btfsc	status,2,c
 10258  0002E6  D35F               	goto	l2496
 10259                           
 10260                           ; BSR set to: 1
 10261                           ;doprnt.c: 827: if(flag & 0x1000)
 10262  0002E8  A91C               	btfss	(sprintf@flag+1)& (0+255),4,b
 10263  0002EA  D004               	goto	l2497
 10264                           
 10265                           ; BSR set to: 1
 10266                           ;doprnt.c: 829: prec = 6;
 10267  0002EC  0E00               	movlw	0
 10268  0002EE  6F1E               	movwf	(sprintf@prec+1)& (0+255),b
 10269  0002F0  0E06               	movlw	6
 10270  0002F2  6F1D               	movwf	sprintf@prec& (0+255),b
 10271  0002F4                     l2497:
 10272                           
 10273                           ; BSR set to: 1
 10274                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 10275                           
 10276                           ; BSR set to: 1
 10277  0002F4  C10A  FFD9         	movff	sprintf@ap,fsr2l
 10278  0002F8  C10B  FFDA         	movff	sprintf@ap+1,fsr2h
 10279  0002FC  CFDE F116          	movff	postinc2,sprintf@fval
 10280  000300  CFDE F117          	movff	postinc2,sprintf@fval+1
 10281  000304  CFDD F118          	movff	postdec2,sprintf@fval+2
 10282                           
 10283                           ; BSR set to: 1
 10284  000308  0E03               	movlw	3
 10285  00030A  270A               	addwf	sprintf@ap& (0+255),f,b
 10286  00030C  0E00               	movlw	0
 10287  00030E  230B               	addwfc	(sprintf@ap+1)& (0+255),f,b
 10288                           
 10289                           ; BSR set to: 1
 10290                           ;doprnt.c: 831: if(fval < 0.0) {
 10291  000310  AF18               	btfss	(sprintf@fval+2)& (0+255),7,b
 10292  000312  D011               	goto	l2498
 10293                           
 10294                           ; BSR set to: 1
 10295                           ;doprnt.c: 832: fval = -fval;
 10296  000314  C116  F060         	movff	sprintf@fval,___ftneg@f1
 10297  000318  C117  F061         	movff	sprintf@fval+1,___ftneg@f1+1
 10298  00031C  C118  F062         	movff	sprintf@fval+2,___ftneg@f1+2
 10299  000320  EC25  F02B         	call	___ftneg	;wreg free
 10300  000324  C060  F116         	movff	?___ftneg,sprintf@fval
 10301  000328  C061  F117         	movff	?___ftneg+1,sprintf@fval+1
 10302  00032C  C062  F118         	movff	?___ftneg+2,sprintf@fval+2
 10303                           
 10304                           ;doprnt.c: 833: flag |= 0x03;
 10305  000330  0E03               	movlw	3
 10306  000332  0101               	movlb	1	; () banked
 10307  000334  131B               	iorwf	sprintf@flag& (0+255),f,b
 10308  000336                     l2498:
 10309                           
 10310                           ; BSR set to: 1
 10311                           ;doprnt.c: 834: }
 10312                           ;doprnt.c: 835: exp = 0;
 10313                           
 10314                           ; BSR set to: 1
 10315  000336  0E00               	movlw	0
 10316  000338  6F11               	movwf	(sprintf@exp+1)& (0+255),b
 10317  00033A  0E00               	movlw	0
 10318  00033C  6F10               	movwf	sprintf@exp& (0+255),b
 10319                           
 10320                           ; BSR set to: 1
 10321                           ;doprnt.c: 836: if( fval!=0) {
 10322  00033E  5116               	movf	sprintf@fval& (0+255),w,b
 10323  000340  1117               	iorwf	(sprintf@fval+1)& (0+255),w,b
 10324  000342  1118               	iorwf	(sprintf@fval+2)& (0+255),w,b
 10325  000344  B4D8               	btfsc	status,2,c
 10326  000346  D090               	goto	l2503
 10327                           
 10328                           ; BSR set to: 1
 10329                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
 10330  000348  0E82               	movlw	130
 10331  00034A  0100               	movlb	0	; () banked
 10332  00034C  6FEF               	movwf	??_sprintf& (0+255),b
 10333  00034E  0EFF               	movlw	255
 10334  000350  6FF0               	movwf	(??_sprintf+1)& (0+255),b
 10335  000352  C116  F0F1         	movff	sprintf@fval,??_sprintf+2
 10336  000356  C117  F0F2         	movff	sprintf@fval+1,??_sprintf+3
 10337  00035A  C118  F0F3         	movff	sprintf@fval+2,??_sprintf+4
 10338  00035E  C119  F0F4         	movff	sprintf@fval+3,??_sprintf+5
 10339  000362  0E10               	movlw	16
 10340  000364  D005               	goto	u7930
 10341  000366                     u7935:
 10342  000366  90D8               	bcf	status,0,c
 10343  000368  33F4               	rrcf	(??_sprintf+5)& (0+255),f,b
 10344  00036A  33F3               	rrcf	(??_sprintf+4)& (0+255),f,b
 10345  00036C  33F2               	rrcf	(??_sprintf+3)& (0+255),f,b
 10346  00036E  33F1               	rrcf	(??_sprintf+2)& (0+255),f,b
 10347  000370                     u7930:
 10348  000370  2EE8               	decfsz	wreg,f,c
 10349  000372  D7F9               	goto	u7935
 10350  000374  51F1               	movf	(??_sprintf+2)& (0+255),w,b
 10351  000376  25EF               	addwf	??_sprintf& (0+255),w,b
 10352  000378  0101               	movlb	1	; () banked
 10353  00037A  6F10               	movwf	sprintf@exp& (0+255),b
 10354  00037C  0E00               	movlw	0
 10355  00037E  0100               	movlb	0	; () banked
 10356  000380  21F0               	addwfc	(??_sprintf+1)& (0+255),w,b
 10357  000382  0101               	movlb	1	; () banked
 10358  000384  6F11               	movwf	(sprintf@exp+1)& (0+255),b
 10359                           
 10360                           ; BSR set to: 1
 10361                           ;doprnt.c: 838: exp--;
 10362  000386  0710               	decf	sprintf@exp& (0+255),f,b
 10363  000388  A0D8               	btfss	status,0,c
 10364  00038A  0711               	decf	(sprintf@exp+1)& (0+255),f,b
 10365                           
 10366                           ; BSR set to: 1
 10367                           ;doprnt.c: 839: exp *= 3;
 10368  00038C  C110  F06E         	movff	sprintf@exp,___wmul@multiplier
 10369  000390  C111  F06F         	movff	sprintf@exp+1,___wmul@multiplier+1
 10370  000394  0E00               	movlw	0
 10371  000396  0100               	movlb	0	; () banked
 10372  000398  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10373  00039A  0E03               	movlw	3
 10374  00039C  6F70               	movwf	___wmul@multiplicand& (0+255),b
 10375  00039E  ECFE  F02A         	call	___wmul	;wreg free
 10376  0003A2  C06E  F110         	movff	?___wmul,sprintf@exp
 10377  0003A6  C06F  F111         	movff	?___wmul+1,sprintf@exp+1
 10378                           
 10379                           ;doprnt.c: 840: exp /= 10;
 10380  0003AA  C110  F066         	movff	sprintf@exp,___awdiv@dividend
 10381  0003AE  C111  F067         	movff	sprintf@exp+1,___awdiv@dividend+1
 10382  0003B2  0E00               	movlw	0
 10383  0003B4  0100               	movlb	0	; () banked
 10384  0003B6  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 10385  0003B8  0E0A               	movlw	10
 10386  0003BA  6F68               	movwf	___awdiv@divisor& (0+255),b
 10387  0003BC  ECCB  F024         	call	___awdiv	;wreg free
 10388  0003C0  C066  F110         	movff	?___awdiv,sprintf@exp
 10389  0003C4  C067  F111         	movff	?___awdiv+1,sprintf@exp+1
 10390                           
 10391                           ;doprnt.c: 841: if(exp < 0)
 10392  0003C8  0101               	movlb	1	; () banked
 10393  0003CA  AF11               	btfss	(sprintf@exp+1)& (0+255),7,b
 10394  0003CC  D003               	goto	l2500
 10395                           
 10396                           ; BSR set to: 1
 10397                           ;doprnt.c: 842: exp--;
 10398  0003CE  0710               	decf	sprintf@exp& (0+255),f,b
 10399  0003D0  A0D8               	btfss	status,0,c
 10400  0003D2  0711               	decf	(sprintf@exp+1)& (0+255),f,b
 10401  0003D4                     l2500:
 10402                           
 10403                           ; BSR set to: 1
 10404                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 10405                           
 10406                           ; BSR set to: 1
 10407  0003D4  5110               	movf	sprintf@exp& (0+255),w,b
 10408  0003D6  0800               	sublw	0
 10409  0003D8  ECE4  F00A         	call	_scale
 10410  0003DC  C08F  F10C         	movff	?_scale,sprintf@tmpval
 10411  0003E0  C090  F10D         	movff	?_scale+1,sprintf@tmpval+1
 10412  0003E4  C091  F10E         	movff	?_scale+2,sprintf@tmpval+2
 10413                           
 10414                           ;doprnt.c: 847: tmpval.integ *= fval;
 10415  0003E8  C10C  F080         	movff	sprintf@tmpval,___ftmul@f1
 10416  0003EC  C10D  F081         	movff	sprintf@tmpval+1,___ftmul@f1+1
 10417  0003F0  C10E  F082         	movff	sprintf@tmpval+2,___ftmul@f1+2
 10418  0003F4  C116  F083         	movff	sprintf@fval,___ftmul@f2
 10419  0003F8  C117  F084         	movff	sprintf@fval+1,___ftmul@f2+1
 10420  0003FC  C118  F085         	movff	sprintf@fval+2,___ftmul@f2+2
 10421  000400  EC38  F01D         	call	___ftmul	;wreg free
 10422  000404  C080  F10C         	movff	?___ftmul,sprintf@tmpval
 10423  000408  C081  F10D         	movff	?___ftmul+1,sprintf@tmpval+1
 10424  00040C  C082  F10E         	movff	?___ftmul+2,sprintf@tmpval+2
 10425                           
 10426                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 10427  000410  C10C  F060         	movff	sprintf@tmpval,___ftge@ff1
 10428  000414  C10D  F061         	movff	sprintf@tmpval+1,___ftge@ff1+1
 10429  000418  C10E  F062         	movff	sprintf@tmpval+2,___ftge@ff1+2
 10430  00041C  0E00               	movlw	0
 10431  00041E  0100               	movlb	0	; () banked
 10432  000420  6F63               	movwf	___ftge@ff2& (0+255),b
 10433  000422  0E80               	movlw	128
 10434  000424  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
 10435  000426  0E3F               	movlw	63
 10436  000428  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
 10437  00042A  EC82  F024         	call	___ftge	;wreg free
 10438  00042E  0100               	movlb	0	; () banked
 10439  000430  B0D8               	btfsc	status,0,c
 10440  000432  D005               	goto	l2501
 10441                           
 10442                           ; BSR set to: 0
 10443                           ;doprnt.c: 849: exp--;
 10444  000434  0101               	movlb	1	; () banked
 10445  000436  0710               	decf	sprintf@exp& (0+255),f,b
 10446  000438  A0D8               	btfss	status,0,c
 10447  00043A  0711               	decf	(sprintf@exp+1)& (0+255),f,b
 10448  00043C  D015               	goto	l2503
 10449  00043E                     l2501:
 10450                           
 10451                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 10452                           
 10453                           ; BSR set to: 1
 10454  00043E  C10C  F060         	movff	sprintf@tmpval,___ftge@ff1
 10455  000442  C10D  F061         	movff	sprintf@tmpval+1,___ftge@ff1+1
 10456  000446  C10E  F062         	movff	sprintf@tmpval+2,___ftge@ff1+2
 10457  00044A  0E00               	movlw	0
 10458  00044C  0100               	movlb	0	; () banked
 10459  00044E  6F63               	movwf	___ftge@ff2& (0+255),b
 10460  000450  0E20               	movlw	32
 10461  000452  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
 10462  000454  0E41               	movlw	65
 10463  000456  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
 10464  000458  EC82  F024         	call	___ftge	;wreg free
 10465  00045C  0100               	movlb	0	; () banked
 10466  00045E  A0D8               	btfss	status,0,c
 10467  000460  D003               	goto	l2503
 10468                           
 10469                           ; BSR set to: 0
 10470                           ;doprnt.c: 851: exp++;
 10471  000462  0101               	movlb	1	; () banked
 10472  000464  4B10               	infsnz	sprintf@exp& (0+255),f,b
 10473  000466  2B11               	incf	(sprintf@exp+1)& (0+255),f,b
 10474  000468                     l2503:
 10475                           
 10476                           ;doprnt.c: 852: }
 10477                           ;doprnt.c: 1112: if(prec <= 12)
 10478                           
 10479                           ; BSR set to: 1
 10480                           
 10481                           ; BSR set to: 1
 10482                           
 10483                           ; BSR set to: 1
 10484  000468  0101               	movlb	1	; () banked
 10485  00046A  BF1E               	btfsc	(sprintf@prec+1)& (0+255),7,b
 10486  00046C  D006               	goto	u7970
 10487  00046E  511E               	movf	(sprintf@prec+1)& (0+255),w,b
 10488  000470  E11B               	bnz	l8845
 10489  000472  0E0D               	movlw	13
 10490  000474  5D1D               	subwf	sprintf@prec& (0+255),w,b
 10491  000476  B0D8               	btfsc	status,0,c
 10492  000478  D017               	goto	l2504
 10493  00047A                     u7970:
 10494                           
 10495                           ; BSR set to: 1
 10496                           ;doprnt.c: 1113: fval += fround(prec);
 10497  00047A  C116  F074         	movff	sprintf@fval,___ftadd@f1
 10498  00047E  C117  F075         	movff	sprintf@fval+1,___ftadd@f1+1
 10499  000482  C118  F076         	movff	sprintf@fval+2,___ftadd@f1+2
 10500  000486  511D               	movf	sprintf@prec& (0+255),w,b
 10501  000488  EC6C  F011         	call	_fround
 10502  00048C  C08F  F077         	movff	?_fround,___ftadd@f2
 10503  000490  C090  F078         	movff	?_fround+1,___ftadd@f2+1
 10504  000494  C091  F079         	movff	?_fround+2,___ftadd@f2+2
 10505  000498  EC8F  F014         	call	___ftadd	;wreg free
 10506  00049C  C074  F116         	movff	?___ftadd,sprintf@fval
 10507  0004A0  C075  F117         	movff	?___ftadd+1,sprintf@fval+1
 10508  0004A4  C076  F118         	movff	?___ftadd+2,sprintf@fval+2
 10509  0004A8                     l2504:
 10510  0004A8                     l8845:
 10511                           
 10512                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 10513  0004A8  0101               	movlb	1	; () banked
 10514  0004AA  BF11               	btfsc	(sprintf@exp+1)& (0+255),7,b
 10515  0004AC  D006               	goto	u7980
 10516  0004AE  5111               	movf	(sprintf@exp+1)& (0+255),w,b
 10517  0004B0  E121               	bnz	l8853
 10518  0004B2  0E0A               	movlw	10
 10519  0004B4  5D10               	subwf	sprintf@exp& (0+255),w,b
 10520  0004B6  B0D8               	btfsc	status,0,c
 10521  0004B8  D01D               	goto	u8010
 10522  0004BA                     u7980:
 10523                           
 10524                           ; BSR set to: 1
 10525  0004BA  5116               	movf	sprintf@fval& (0+255),w,b
 10526  0004BC  1117               	iorwf	(sprintf@fval+1)& (0+255),w,b
 10527  0004BE  1118               	iorwf	(sprintf@fval+2)& (0+255),w,b
 10528  0004C0  B4D8               	btfsc	status,2,c
 10529  0004C2  D059               	goto	l2505
 10530                           
 10531                           ; BSR set to: 1
 10532  0004C4  C116  F0B0         	movff	sprintf@fval,___fttol@f1
 10533  0004C8  C117  F0B1         	movff	sprintf@fval+1,___fttol@f1+1
 10534  0004CC  C118  F0B2         	movff	sprintf@fval+2,___fttol@f1+2
 10535  0004D0  ECBC  F01C         	call	___fttol	;wreg free
 10536  0004D4  0100               	movlb	0	; () banked
 10537  0004D6  51B0               	movf	?___fttol& (0+255),w,b
 10538  0004D8  11B1               	iorwf	(?___fttol+1)& (0+255),w,b
 10539  0004DA  11B2               	iorwf	(?___fttol+2)& (0+255),w,b
 10540  0004DC  11B3               	iorwf	(?___fttol+3)& (0+255),w,b
 10541  0004DE  A4D8               	btfss	status,2,c
 10542  0004E0  D04A               	goto	l2505
 10543                           
 10544                           ; BSR set to: 0
 10545  0004E2  0101               	movlb	1	; () banked
 10546  0004E4  BF11               	btfsc	(sprintf@exp+1)& (0+255),7,b
 10547  0004E6  D047               	goto	l2505
 10548  0004E8  5111               	movf	(sprintf@exp+1)& (0+255),w,b
 10549  0004EA  E104               	bnz	l8853
 10550  0004EC  0E02               	movlw	2
 10551  0004EE  5D10               	subwf	sprintf@exp& (0+255),w,b
 10552  0004F0  A0D8               	btfss	status,0,c
 10553  0004F2  D041               	goto	l2505
 10554  0004F4                     u8010:
 10555  0004F4                     l8853:
 10556                           
 10557                           ; BSR set to: 1
 10558                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 10559  0004F4  C10C  F060         	movff	sprintf@tmpval,___ftge@ff1
 10560  0004F8  C10D  F061         	movff	sprintf@tmpval+1,___ftge@ff1+1
 10561  0004FC  C10E  F062         	movff	sprintf@tmpval+2,___ftge@ff1+2
 10562  000500  0E70               	movlw	112
 10563  000502  0100               	movlb	0	; () banked
 10564  000504  6F63               	movwf	___ftge@ff2& (0+255),b
 10565  000506  0E89               	movlw	137
 10566  000508  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
 10567  00050A  0E40               	movlw	64
 10568  00050C  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
 10569  00050E  EC82  F024         	call	___ftge	;wreg free
 10570  000512  0100               	movlb	0	; () banked
 10571  000514  B0D8               	btfsc	status,0,c
 10572  000516  D003               	goto	l2508
 10573                           
 10574                           ; BSR set to: 0
 10575                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 10576  000518  0101               	movlb	1	; () banked
 10577  00051A  0EF7               	movlw	247
 10578  00051C  D002               	goto	L7
 10579  00051E                     l2508:
 10580                           
 10581                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 10582                           
 10583                           ; BSR set to: 1
 10584  00051E  0101               	movlb	1	; () banked
 10585  000520  0EF8               	movlw	248
 10586  000522                     L7:
 10587  000522  2710               	addwf	sprintf@exp& (0+255),f,b
 10588  000524  0EFF               	movlw	255
 10589  000526  2311               	addwfc	(sprintf@exp+1)& (0+255),f,b
 10590                           
 10591                           ; BSR set to: 1
 10592                           ;doprnt.c: 1124: }
 10593                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
 10594                           
 10595                           ; BSR set to: 1
 10596  000528  5110               	movf	sprintf@exp& (0+255),w,b
 10597  00052A  ECE4  F00A         	call	_scale
 10598  00052E  C08F  F10C         	movff	?_scale,sprintf@tmpval
 10599  000532  C090  F10D         	movff	?_scale+1,sprintf@tmpval+1
 10600  000536  C091  F10E         	movff	?_scale+2,sprintf@tmpval+2
 10601                           
 10602                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 10603  00053A  C116  F060         	movff	sprintf@fval,__tdiv_to_l_@f1
 10604  00053E  C117  F061         	movff	sprintf@fval+1,__tdiv_to_l_@f1+1
 10605  000542  C118  F062         	movff	sprintf@fval+2,__tdiv_to_l_@f1+2
 10606  000546  C10C  F063         	movff	sprintf@tmpval,__tdiv_to_l_@f2
 10607  00054A  C10D  F064         	movff	sprintf@tmpval+1,__tdiv_to_l_@f2+1
 10608  00054E  C10E  F065         	movff	sprintf@tmpval+2,__tdiv_to_l_@f2+2
 10609  000552  ECA8  F016         	call	__tdiv_to_l_	;wreg free
 10610  000556  C060  F112         	movff	?__tdiv_to_l_,sprintf@val
 10611  00055A  C061  F113         	movff	?__tdiv_to_l_+1,sprintf@val+1
 10612  00055E  C062  F114         	movff	?__tdiv_to_l_+2,sprintf@val+2
 10613  000562  C063  F115         	movff	?__tdiv_to_l_+3,sprintf@val+3
 10614                           
 10615                           ;doprnt.c: 1129: fval = 0.0;
 10616  000566  0E00               	movlw	0
 10617  000568  0101               	movlb	1	; () banked
 10618  00056A  6F16               	movwf	sprintf@fval& (0+255),b
 10619  00056C  0E00               	movlw	0
 10620  00056E  6F17               	movwf	(sprintf@fval+1)& (0+255),b
 10621  000570  0E00               	movlw	0
 10622  000572  6F18               	movwf	(sprintf@fval+2)& (0+255),b
 10623                           
 10624                           ;doprnt.c: 1130: } else {
 10625  000574  D033               	goto	l2514
 10626  000576                     l2505:
 10627                           
 10628                           ;doprnt.c: 1131: val = (unsigned long)fval;
 10629                           
 10630                           ; BSR set to: 1
 10631  000576  C116  F0B0         	movff	sprintf@fval,___fttol@f1
 10632  00057A  C117  F0B1         	movff	sprintf@fval+1,___fttol@f1+1
 10633  00057E  C118  F0B2         	movff	sprintf@fval+2,___fttol@f1+2
 10634  000582  ECBC  F01C         	call	___fttol	;wreg free
 10635  000586  C0B0  F112         	movff	?___fttol,sprintf@val
 10636  00058A  C0B1  F113         	movff	?___fttol+1,sprintf@val+1
 10637  00058E  C0B2  F114         	movff	?___fttol+2,sprintf@val+2
 10638  000592  C0B3  F115         	movff	?___fttol+3,sprintf@val+3
 10639                           
 10640                           ;doprnt.c: 1132: fval -= (double)val;
 10641  000596  C116  F080         	movff	sprintf@fval,___ftsub@f1
 10642  00059A  C117  F081         	movff	sprintf@fval+1,___ftsub@f1+1
 10643  00059E  C118  F082         	movff	sprintf@fval+2,___ftsub@f1+2
 10644  0005A2  C112  F068         	movff	sprintf@val,___lltoft@c
 10645  0005A6  C113  F069         	movff	sprintf@val+1,___lltoft@c+1
 10646  0005AA  C114  F06A         	movff	sprintf@val+2,___lltoft@c+2
 10647  0005AE  C115  F06B         	movff	sprintf@val+3,___lltoft@c+3
 10648  0005B2  EC88  F027         	call	___lltoft	;wreg free
 10649  0005B6  C068  F083         	movff	?___lltoft,___ftsub@f2
 10650  0005BA  C069  F084         	movff	?___lltoft+1,___ftsub@f2+1
 10651  0005BE  C06A  F085         	movff	?___lltoft+2,___ftsub@f2+2
 10652  0005C2  EC60  F029         	call	___ftsub	;wreg free
 10653  0005C6  C080  F116         	movff	?___ftsub,sprintf@fval
 10654  0005CA  C081  F117         	movff	?___ftsub+1,sprintf@fval+1
 10655  0005CE  C082  F118         	movff	?___ftsub+2,sprintf@fval+2
 10656                           
 10657                           ;doprnt.c: 1133: exp = 0;
 10658  0005D2  0E00               	movlw	0
 10659  0005D4  0101               	movlb	1	; () banked
 10660  0005D6  6F11               	movwf	(sprintf@exp+1)& (0+255),b
 10661  0005D8  0E00               	movlw	0
 10662  0005DA  6F10               	movwf	sprintf@exp& (0+255),b
 10663  0005DC                     l2514:
 10664                           
 10665                           ; BSR set to: 1
 10666                           ;doprnt.c: 1134: }
 10667                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 10668                           
 10669                           ; BSR set to: 1
 10670  0005DC  0E01               	movlw	1
 10671  0005DE  6F1F               	movwf	sprintf@c& (0+255),b
 10672  0005E0                     l8873:
 10673                           
 10674                           ; BSR set to: 1
 10675  0005E0  0E0A               	movlw	10
 10676  0005E2  191F               	xorwf	sprintf@c& (0+255),w,b
 10677  0005E4  B4D8               	btfsc	status,2,c
 10678  0005E6  D018               	goto	u8050
 10679                           
 10680                           ; BSR set to: 1
 10681                           ;doprnt.c: 1137: if(val < dpowers[c])
 10682                           
 10683                           ; BSR set to: 1
 10684                           
 10685                           ; BSR set to: 1
 10686  0005E8  511F               	movf	sprintf@c& (0+255),w,b
 10687  0005EA  0D04               	mullw	4
 10688  0005EC  0EEF               	movlw	low _dpowers
 10689  0005EE  24F3               	addwf	prodl,w,c
 10690  0005F0  6EF6               	movwf	tblptrl,c
 10691  0005F2  0E7B               	movlw	high _dpowers
 10692  0005F4  20F4               	addwfc	prodh,w,c
 10693  0005F6  6EF7               	movwf	tblptrh,c
 10694  0005F8                     	if	0	;There are less than 3 active tblptr bytes
 10695  0005F8                     	endif
 10696  0005F8  0009               	tblrd		*+
 10697  0005FA  50F5               	movf	tablat,w,c
 10698  0005FC  5D12               	subwf	sprintf@val& (0+255),w,b
 10699  0005FE  0009               	tblrd		*+
 10700  000600  50F5               	movf	tablat,w,c
 10701  000602  5913               	subwfb	(sprintf@val+1)& (0+255),w,b
 10702  000604  0009               	tblrd		*+
 10703  000606  50F5               	movf	tablat,w,c
 10704  000608  5914               	subwfb	(sprintf@val+2)& (0+255),w,b
 10705  00060A  0009               	tblrd		*+
 10706  00060C  50F5               	movf	tablat,w,c
 10707  00060E  5915               	subwfb	(sprintf@val+3)& (0+255),w,b
 10708  000610  A0D8               	btfss	status,0,c
 10709  000612  D002               	goto	u8050
 10710                           
 10711                           ; BSR set to: 1
 10712                           
 10713                           ; BSR set to: 1
 10714                           
 10715                           ; BSR set to: 1
 10716                           ;doprnt.c: 1138: break;
 10717  000614  2B1F               	incf	sprintf@c& (0+255),f,b
 10718  000616  D7E4               	goto	l8873
 10719  000618                     u8050:
 10720                           
 10721                           ; BSR set to: 1
 10722                           ;doprnt.c: 1142: width -= prec + c + exp;
 10723                           
 10724                           ; BSR set to: 1
 10725  000618  C11F  F0EF         	movff	sprintf@c,??_sprintf
 10726  00061C  0100               	movlb	0	; () banked
 10727  00061E  6BF0               	clrf	(??_sprintf+1)& (0+255),b
 10728  000620  BFEF               	btfsc	??_sprintf& (0+255),7,b
 10729  000622  07F0               	decf	(??_sprintf+1)& (0+255),f,b
 10730  000624  0101               	movlb	1	; () banked
 10731  000626  511D               	movf	sprintf@prec& (0+255),w,b
 10732  000628  0100               	movlb	0	; () banked
 10733  00062A  27EF               	addwf	??_sprintf& (0+255),f,b
 10734  00062C  0101               	movlb	1	; () banked
 10735  00062E  511E               	movf	(sprintf@prec+1)& (0+255),w,b
 10736  000630  0100               	movlb	0	; () banked
 10737  000632  23F0               	addwfc	(??_sprintf+1)& (0+255),f,b
 10738  000634  0101               	movlb	1	; () banked
 10739  000636  5110               	movf	sprintf@exp& (0+255),w,b
 10740  000638  0100               	movlb	0	; () banked
 10741  00063A  27EF               	addwf	??_sprintf& (0+255),f,b
 10742  00063C  0101               	movlb	1	; () banked
 10743  00063E  5111               	movf	(sprintf@exp+1)& (0+255),w,b
 10744  000640  0100               	movlb	0	; () banked
 10745  000642  23F0               	addwfc	(??_sprintf+1)& (0+255),f,b
 10746  000644  51EF               	movf	??_sprintf& (0+255),w,b
 10747  000646  0101               	movlb	1	; () banked
 10748  000648  5F19               	subwf	sprintf@width& (0+255),f,b
 10749  00064A  0100               	movlb	0	; () banked
 10750  00064C  51F0               	movf	(??_sprintf+1)& (0+255),w,b
 10751  00064E  0101               	movlb	1	; () banked
 10752  000650  5B1A               	subwfb	(sprintf@width+1)& (0+255),f,b
 10753                           
 10754                           ;doprnt.c: 1143: if(
 10755                           ;doprnt.c: 1147: prec)
 10756  000652  511D               	movf	sprintf@prec& (0+255),w,b
 10757  000654  111E               	iorwf	(sprintf@prec+1)& (0+255),w,b
 10758  000656  B4D8               	btfsc	status,2,c
 10759  000658  D003               	goto	l2518
 10760                           
 10761                           ; BSR set to: 1
 10762                           ;doprnt.c: 1148: width--;
 10763  00065A  0719               	decf	sprintf@width& (0+255),f,b
 10764  00065C  A0D8               	btfss	status,0,c
 10765  00065E  071A               	decf	(sprintf@width+1)& (0+255),f,b
 10766  000660                     l2518:
 10767                           
 10768                           ; BSR set to: 1
 10769                           ;doprnt.c: 1149: if(flag & 0x03)
 10770                           
 10771                           ; BSR set to: 1
 10772  000660  0E03               	movlw	3
 10773  000662  151B               	andwf	sprintf@flag& (0+255),w,b
 10774  000664  0100               	movlb	0	; () banked
 10775  000666  6FEF               	movwf	??_sprintf& (0+255),b
 10776  000668  0E00               	movlw	0
 10777  00066A  0101               	movlb	1	; () banked
 10778  00066C  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
 10779  00066E  0100               	movlb	0	; () banked
 10780  000670  6FF0               	movwf	(??_sprintf+1)& (0+255),b
 10781  000672  51EF               	movf	??_sprintf& (0+255),w,b
 10782  000674  11F0               	iorwf	(??_sprintf+1)& (0+255),w,b
 10783  000676  B4D8               	btfsc	status,2,c
 10784  000678  D004               	goto	l2519
 10785                           
 10786                           ; BSR set to: 0
 10787                           ;doprnt.c: 1150: width--;
 10788  00067A  0101               	movlb	1	; () banked
 10789  00067C  0719               	decf	sprintf@width& (0+255),f,b
 10790  00067E  A0D8               	btfss	status,0,c
 10791  000680  071A               	decf	(sprintf@width+1)& (0+255),f,b
 10792  000682                     l2519:
 10793                           
 10794                           ;doprnt.c: 1153: if(flag & 0x04) {
 10795                           
 10796                           ; BSR set to: 1
 10797  000682  0101               	movlb	1	; () banked
 10798  000684  A51B               	btfss	sprintf@flag& (0+255),2,b
 10799  000686  D039               	goto	l2526
 10800                           
 10801                           ; BSR set to: 1
 10802                           ;doprnt.c: 1157: if(flag & 0x03)
 10803  000688  0E03               	movlw	3
 10804  00068A  151B               	andwf	sprintf@flag& (0+255),w,b
 10805  00068C  0100               	movlb	0	; () banked
 10806  00068E  6FEF               	movwf	??_sprintf& (0+255),b
 10807  000690  0E00               	movlw	0
 10808  000692  0101               	movlb	1	; () banked
 10809  000694  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
 10810  000696  0100               	movlb	0	; () banked
 10811  000698  6FF0               	movwf	(??_sprintf+1)& (0+255),b
 10812  00069A  51EF               	movf	??_sprintf& (0+255),w,b
 10813  00069C  11F0               	iorwf	(??_sprintf+1)& (0+255),w,b
 10814  00069E  B4D8               	btfsc	status,2,c
 10815  0006A0  D016               	goto	l2522
 10816                           
 10817                           ; BSR set to: 0
 10818                           ;doprnt.c: 1159: ((*sp++ = ('-')));
 10819  0006A2  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 10820  0006A6  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 10821  0006AA  0E2D               	movlw	45
 10822  0006AC  6EDF               	movwf	indf2,c
 10823                           
 10824                           ; BSR set to: 0
 10825  0006AE  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 10826  0006B0  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 10827                           
 10828                           ; BSR set to: 0
 10829                           ;doprnt.c: 1168: while(width > 0) {
 10830  0006B2  D00D               	goto	l2522
 10831  0006B4                     l8901:
 10832                           
 10833                           ;doprnt.c: 1169: ((*sp++ = ('0')));
 10834  0006B4  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 10835  0006B8  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 10836  0006BC  0E30               	movlw	48
 10837  0006BE  6EDF               	movwf	indf2,c
 10838  0006C0  0100               	movlb	0	; () banked
 10839  0006C2  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 10840  0006C4  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 10841                           
 10842                           ; BSR set to: 0
 10843                           ;doprnt.c: 1170: width--;
 10844  0006C6  0101               	movlb	1	; () banked
 10845  0006C8  0719               	decf	sprintf@width& (0+255),f,b
 10846  0006CA  A0D8               	btfss	status,0,c
 10847  0006CC  071A               	decf	(sprintf@width+1)& (0+255),f,b
 10848  0006CE                     l2522:
 10849                           
 10850                           ; BSR set to: 1
 10851  0006CE  0101               	movlb	1	; () banked
 10852  0006D0  BF1A               	btfsc	(sprintf@width+1)& (0+255),7,b
 10853  0006D2  D07B               	goto	l2530
 10854  0006D4  511A               	movf	(sprintf@width+1)& (0+255),w,b
 10855  0006D6  E1EE               	bnz	l8901
 10856  0006D8  0519               	decf	sprintf@width& (0+255),w,b
 10857  0006DA  A0D8               	btfss	status,0,c
 10858  0006DC  D076               	goto	l2530
 10859  0006DE  D7EA               	goto	l2523
 10860  0006E0                     l8909:
 10861                           
 10862                           ; BSR set to: 1
 10863                           ;doprnt.c: 1181: ((*sp++ = (' ')));
 10864  0006E0  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 10865  0006E4  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 10866  0006E8  0E20               	movlw	32
 10867  0006EA  6EDF               	movwf	indf2,c
 10868                           
 10869                           ; BSR set to: 1
 10870  0006EC  0100               	movlb	0	; () banked
 10871  0006EE  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 10872  0006F0  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 10873                           
 10874                           ; BSR set to: 0
 10875                           ;doprnt.c: 1182: width--;
 10876  0006F2  0101               	movlb	1	; () banked
 10877  0006F4  0719               	decf	sprintf@width& (0+255),f,b
 10878  0006F6  A0D8               	btfss	status,0,c
 10879  0006F8  071A               	decf	(sprintf@width+1)& (0+255),f,b
 10880  0006FA                     l2526:
 10881                           
 10882                           ; BSR set to: 1
 10883                           
 10884                           ; BSR set to: 1
 10885  0006FA  BF1A               	btfsc	(sprintf@width+1)& (0+255),7,b
 10886  0006FC  D005               	goto	u8110
 10887  0006FE  511A               	movf	(sprintf@width+1)& (0+255),w,b
 10888  000700  E1EF               	bnz	l8909
 10889  000702  0519               	decf	sprintf@width& (0+255),w,b
 10890  000704  B0D8               	btfsc	status,0,c
 10891  000706  D7EC               	goto	l2527
 10892  000708                     u8110:
 10893                           
 10894                           ; BSR set to: 1
 10895                           ;doprnt.c: 1183: }
 10896                           ;doprnt.c: 1188: if(flag & 0x03)
 10897                           
 10898                           ; BSR set to: 1
 10899  000708  0E03               	movlw	3
 10900  00070A  151B               	andwf	sprintf@flag& (0+255),w,b
 10901  00070C  0100               	movlb	0	; () banked
 10902  00070E  6FEF               	movwf	??_sprintf& (0+255),b
 10903  000710  0E00               	movlw	0
 10904  000712  0101               	movlb	1	; () banked
 10905  000714  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
 10906  000716  0100               	movlb	0	; () banked
 10907  000718  6FF0               	movwf	(??_sprintf+1)& (0+255),b
 10908  00071A  51EF               	movf	??_sprintf& (0+255),w,b
 10909  00071C  11F0               	iorwf	(??_sprintf+1)& (0+255),w,b
 10910  00071E  B4D8               	btfsc	status,2,c
 10911  000720  D054               	goto	l2530
 10912                           
 10913                           ; BSR set to: 0
 10914                           ;doprnt.c: 1190: ((*sp++ = ('-')));
 10915  000722  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 10916  000726  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 10917  00072A  0E2D               	movlw	45
 10918  00072C  6EDF               	movwf	indf2,c
 10919  00072E  D04B               	goto	L8
 10920  000730                     
 10921                           ;doprnt.c: 1200: {
 10922                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 10923                           
 10924                           ; BSR set to: 0
 10925  000730  C112  F060         	movff	sprintf@val,___lldiv@dividend
 10926  000734  C113  F061         	movff	sprintf@val+1,___lldiv@dividend+1
 10927  000738  C114  F062         	movff	sprintf@val+2,___lldiv@dividend+2
 10928  00073C  C115  F063         	movff	sprintf@val+3,___lldiv@dividend+3
 10929  000740  0101               	movlb	1	; () banked
 10930  000742  511F               	movf	sprintf@c& (0+255),w,b
 10931  000744  0D04               	mullw	4
 10932  000746  0EEF               	movlw	low _dpowers
 10933  000748  24F3               	addwf	prodl,w,c
 10934  00074A  6EF6               	movwf	tblptrl,c
 10935  00074C  0E7B               	movlw	high _dpowers
 10936  00074E  20F4               	addwfc	prodh,w,c
 10937  000750  6EF7               	movwf	tblptrh,c
 10938  000752                     	if	0	;There are less than 3 active tblptr bytes
 10939  000752                     	endif
 10940  000752  0009               	tblrd		*+
 10941  000754  CFF5 F064          	movff	tablat,___lldiv@divisor
 10942  000758  0009               	tblrd		*+
 10943  00075A  CFF5 F065          	movff	tablat,___lldiv@divisor+1
 10944  00075E  0009               	tblrd		*+
 10945  000760  CFF5 F066          	movff	tablat,___lldiv@divisor+2
 10946  000764  000A               	tblrd		*-
 10947  000766  CFF5 F067          	movff	tablat,___lldiv@divisor+3
 10948  00076A  EC51  F025         	call	___lldiv	;wreg free
 10949  00076E  C060  F10C         	movff	?___lldiv,sprintf@tmpval
 10950  000772  C061  F10D         	movff	?___lldiv+1,sprintf@tmpval+1
 10951  000776  C062  F10E         	movff	?___lldiv+2,sprintf@tmpval+2
 10952  00077A  C063  F10F         	movff	?___lldiv+3,sprintf@tmpval+3
 10953                           
 10954                           ;doprnt.c: 1202: tmpval.vd %= 10;
 10955  00077E  C10C  F06D         	movff	sprintf@tmpval,___llmod@dividend
 10956  000782  C10D  F06E         	movff	sprintf@tmpval+1,___llmod@dividend+1
 10957  000786  C10E  F06F         	movff	sprintf@tmpval+2,___llmod@dividend+2
 10958  00078A  C10F  F070         	movff	sprintf@tmpval+3,___llmod@dividend+3
 10959  00078E  0E0A               	movlw	10
 10960  000790  0100               	movlb	0	; () banked
 10961  000792  6F71               	movwf	___llmod@divisor& (0+255),b
 10962  000794  0E00               	movlw	0
 10963  000796  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 10964  000798  0E00               	movlw	0
 10965  00079A  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 10966  00079C  0E00               	movlw	0
 10967  00079E  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 10968  0007A0  ECF2  F026         	call	___llmod	;wreg free
 10969  0007A4  C06D  F10C         	movff	?___llmod,sprintf@tmpval
 10970  0007A8  C06E  F10D         	movff	?___llmod+1,sprintf@tmpval+1
 10971  0007AC  C06F  F10E         	movff	?___llmod+2,sprintf@tmpval+2
 10972  0007B0  C070  F10F         	movff	?___llmod+3,sprintf@tmpval+3
 10973                           
 10974                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
 10975  0007B4  0101               	movlb	1	; () banked
 10976  0007B6  510C               	movf	sprintf@tmpval& (0+255),w,b
 10977  0007B8  0F30               	addlw	48
 10978  0007BA  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 10979  0007BE  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 10980  0007C2  6EDF               	movwf	indf2,c
 10981                           
 10982                           ; BSR set to: 1
 10983  0007C4  0100               	movlb	0	; () banked
 10984  0007C6                     L8:
 10985  0007C6  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 10986  0007C8  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 10987  0007CA                     l2530:
 10988                           
 10989                           ; BSR set to: 0
 10990  0007CA  0101               	movlb	1	; () banked
 10991  0007CC  071F               	decf	sprintf@c& (0+255),f,b
 10992  0007CE  291F               	incf	sprintf@c& (0+255),w,b
 10993  0007D0  B4D8               	btfsc	status,2,c
 10994  0007D2  D00E               	goto	l2533
 10995  0007D4  D7AD               	goto	l2531
 10996  0007D6                     l8933:
 10997                           
 10998                           ; BSR set to: 1
 10999                           ;doprnt.c: 1208: ((*sp++ = ('0')));
 11000  0007D6  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 11001  0007DA  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 11002  0007DE  0E30               	movlw	48
 11003  0007E0  6EDF               	movwf	indf2,c
 11004                           
 11005                           ; BSR set to: 1
 11006  0007E2  0100               	movlb	0	; () banked
 11007  0007E4  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 11008  0007E6  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 11009                           
 11010                           ; BSR set to: 0
 11011                           ;doprnt.c: 1209: exp--;
 11012  0007E8  0101               	movlb	1	; () banked
 11013  0007EA  0710               	decf	sprintf@exp& (0+255),f,b
 11014  0007EC  A0D8               	btfss	status,0,c
 11015  0007EE  0711               	decf	(sprintf@exp+1)& (0+255),f,b
 11016  0007F0                     l2533:
 11017                           
 11018                           ; BSR set to: 1
 11019                           
 11020                           ; BSR set to: 1
 11021  0007F0  BF11               	btfsc	(sprintf@exp+1)& (0+255),7,b
 11022  0007F2  D005               	goto	u8140
 11023  0007F4  5111               	movf	(sprintf@exp+1)& (0+255),w,b
 11024  0007F6  E1EF               	bnz	l8933
 11025  0007F8  0510               	decf	sprintf@exp& (0+255),w,b
 11026  0007FA  B0D8               	btfsc	status,0,c
 11027  0007FC  D7EC               	goto	l2534
 11028  0007FE                     u8140:
 11029                           
 11030                           ; BSR set to: 1
 11031                           ;doprnt.c: 1210: }
 11032                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 11033                           
 11034                           ; BSR set to: 1
 11035  0007FE  BF1E               	btfsc	(sprintf@prec+1)& (0+255),7,b
 11036  000800  D009               	goto	l2536
 11037  000802  511E               	movf	(sprintf@prec+1)& (0+255),w,b
 11038  000804  E104               	bnz	u8150
 11039  000806  0E09               	movlw	9
 11040  000808  5D1D               	subwf	sprintf@prec& (0+255),w,b
 11041  00080A  A0D8               	btfss	status,0,c
 11042  00080C  D003               	goto	l2536
 11043  00080E                     u8150:
 11044                           
 11045                           ; BSR set to: 1
 11046                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 11047  00080E  0E08               	movlw	8
 11048  000810  6F1F               	movwf	sprintf@c& (0+255),b
 11049  000812  D002               	goto	l2537
 11050  000814                     l2536:
 11051                           
 11052                           ; BSR set to: 1
 11053                           ;doprnt.c: 1213: else
 11054                           ;doprnt.c: 1214: c = prec;
 11055  000814  C11D  F11F         	movff	sprintf@prec,sprintf@c
 11056  000818                     l2537:
 11057                           
 11058                           ; BSR set to: 1
 11059                           ;doprnt.c: 1215: prec -= c;
 11060                           
 11061                           ; BSR set to: 1
 11062  000818  511F               	movf	sprintf@c& (0+255),w,b
 11063  00081A  5F1D               	subwf	sprintf@prec& (0+255),f,b
 11064  00081C  0E00               	movlw	0
 11065  00081E  BF1F               	btfsc	sprintf@c& (0+255),7,b
 11066  000820  0EFF               	movlw	255
 11067  000822  5B1E               	subwfb	(sprintf@prec+1)& (0+255),f,b
 11068                           
 11069                           ; BSR set to: 1
 11070                           ;doprnt.c: 1219: if(c)
 11071  000824  511F               	movf	sprintf@c& (0+255),w,b
 11072  000826  B4D8               	btfsc	status,2,c
 11073  000828  D009               	goto	l2538
 11074                           
 11075                           ; BSR set to: 1
 11076                           ;doprnt.c: 1221: ((*sp++ = ('.')));
 11077  00082A  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 11078  00082E  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 11079  000832  0E2E               	movlw	46
 11080  000834  6EDF               	movwf	indf2,c
 11081                           
 11082                           ; BSR set to: 1
 11083  000836  0100               	movlb	0	; () banked
 11084  000838  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 11085  00083A  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 11086  00083C                     l2538:
 11087                           
 11088                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 11089                           
 11090                           ; BSR set to: 0
 11091  00083C  0101               	movlb	1	; () banked
 11092  00083E  511F               	movf	sprintf@c& (0+255),w,b
 11093  000840  ECE4  F00A         	call	_scale
 11094  000844  C08F  F100         	movff	?_scale,_sprintf$5825
 11095  000848  C090  F101         	movff	?_scale+1,_sprintf$5825+1
 11096  00084C  C091  F102         	movff	?_scale+2,_sprintf$5825+2
 11097                           
 11098                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 11099  000850  C116  F083         	movff	sprintf@fval,___ftmul@f2
 11100  000854  C117  F084         	movff	sprintf@fval+1,___ftmul@f2+1
 11101  000858  C118  F085         	movff	sprintf@fval+2,___ftmul@f2+2
 11102  00085C  C100  F080         	movff	_sprintf$5825,___ftmul@f1
 11103  000860  C101  F081         	movff	_sprintf$5825+1,___ftmul@f1+1
 11104  000864  C102  F082         	movff	_sprintf$5825+2,___ftmul@f1+2
 11105  000868  EC38  F01D         	call	___ftmul	;wreg free
 11106  00086C  C080  F0B0         	movff	?___ftmul,___fttol@f1
 11107  000870  C081  F0B1         	movff	?___ftmul+1,___fttol@f1+1
 11108  000874  C082  F0B2         	movff	?___ftmul+2,___fttol@f1+2
 11109  000878  ECBC  F01C         	call	___fttol	;wreg free
 11110  00087C  C0B0  F112         	movff	?___fttol,sprintf@val
 11111  000880  C0B1  F113         	movff	?___fttol+1,sprintf@val+1
 11112  000884  C0B2  F114         	movff	?___fttol+2,sprintf@val+2
 11113  000888  C0B3  F115         	movff	?___fttol+3,sprintf@val+3
 11114                           
 11115                           ;doprnt.c: 1228: while(c--) {
 11116  00088C  D074               	goto	l2539
 11117  00088E                     
 11118                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 11119  00088E  C112  F060         	movff	sprintf@val,___lldiv@dividend
 11120  000892  C113  F061         	movff	sprintf@val+1,___lldiv@dividend+1
 11121  000896  C114  F062         	movff	sprintf@val+2,___lldiv@dividend+2
 11122  00089A  C115  F063         	movff	sprintf@val+3,___lldiv@dividend+3
 11123  00089E  0101               	movlb	1	; () banked
 11124  0008A0  511F               	movf	sprintf@c& (0+255),w,b
 11125  0008A2  0D04               	mullw	4
 11126  0008A4  0EEF               	movlw	low _dpowers
 11127  0008A6  24F3               	addwf	prodl,w,c
 11128  0008A8  6EF6               	movwf	tblptrl,c
 11129  0008AA  0E7B               	movlw	high _dpowers
 11130  0008AC  20F4               	addwfc	prodh,w,c
 11131  0008AE  6EF7               	movwf	tblptrh,c
 11132  0008B0                     	if	0	;There are less than 3 active tblptr bytes
 11133  0008B0                     	endif
 11134  0008B0  0009               	tblrd		*+
 11135  0008B2  CFF5 F064          	movff	tablat,___lldiv@divisor
 11136  0008B6  0009               	tblrd		*+
 11137  0008B8  CFF5 F065          	movff	tablat,___lldiv@divisor+1
 11138  0008BC  0009               	tblrd		*+
 11139  0008BE  CFF5 F066          	movff	tablat,___lldiv@divisor+2
 11140  0008C2  000A               	tblrd		*-
 11141  0008C4  CFF5 F067          	movff	tablat,___lldiv@divisor+3
 11142  0008C8  EC51  F025         	call	___lldiv	;wreg free
 11143  0008CC  C060  F10C         	movff	?___lldiv,sprintf@tmpval
 11144  0008D0  C061  F10D         	movff	?___lldiv+1,sprintf@tmpval+1
 11145  0008D4  C062  F10E         	movff	?___lldiv+2,sprintf@tmpval+2
 11146  0008D8  C063  F10F         	movff	?___lldiv+3,sprintf@tmpval+3
 11147                           
 11148                           ;doprnt.c: 1230: tmpval.vd %= 10;
 11149  0008DC  C10C  F06D         	movff	sprintf@tmpval,___llmod@dividend
 11150  0008E0  C10D  F06E         	movff	sprintf@tmpval+1,___llmod@dividend+1
 11151  0008E4  C10E  F06F         	movff	sprintf@tmpval+2,___llmod@dividend+2
 11152  0008E8  C10F  F070         	movff	sprintf@tmpval+3,___llmod@dividend+3
 11153  0008EC  0E0A               	movlw	10
 11154  0008EE  0100               	movlb	0	; () banked
 11155  0008F0  6F71               	movwf	___llmod@divisor& (0+255),b
 11156  0008F2  0E00               	movlw	0
 11157  0008F4  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 11158  0008F6  0E00               	movlw	0
 11159  0008F8  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 11160  0008FA  0E00               	movlw	0
 11161  0008FC  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 11162  0008FE  ECF2  F026         	call	___llmod	;wreg free
 11163  000902  C06D  F10C         	movff	?___llmod,sprintf@tmpval
 11164  000906  C06E  F10D         	movff	?___llmod+1,sprintf@tmpval+1
 11165  00090A  C06F  F10E         	movff	?___llmod+2,sprintf@tmpval+2
 11166  00090E  C070  F10F         	movff	?___llmod+3,sprintf@tmpval+3
 11167                           
 11168                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
 11169  000912  0101               	movlb	1	; () banked
 11170  000914  510C               	movf	sprintf@tmpval& (0+255),w,b
 11171  000916  0F30               	addlw	48
 11172  000918  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 11173  00091C  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 11174  000920  6EDF               	movwf	indf2,c
 11175                           
 11176                           ; BSR set to: 1
 11177  000922  0100               	movlb	0	; () banked
 11178  000924  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 11179  000926  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 11180                           
 11181                           ; BSR set to: 0
 11182                           ;doprnt.c: 1232: val %= dpowers[c];
 11183  000928  C112  F06D         	movff	sprintf@val,___llmod@dividend
 11184  00092C  C113  F06E         	movff	sprintf@val+1,___llmod@dividend+1
 11185  000930  C114  F06F         	movff	sprintf@val+2,___llmod@dividend+2
 11186  000934  C115  F070         	movff	sprintf@val+3,___llmod@dividend+3
 11187  000938  0101               	movlb	1	; () banked
 11188  00093A  511F               	movf	sprintf@c& (0+255),w,b
 11189  00093C  0D04               	mullw	4
 11190  00093E  0EEF               	movlw	low _dpowers
 11191  000940  24F3               	addwf	prodl,w,c
 11192  000942  6EF6               	movwf	tblptrl,c
 11193  000944  0E7B               	movlw	high _dpowers
 11194  000946  20F4               	addwfc	prodh,w,c
 11195  000948  6EF7               	movwf	tblptrh,c
 11196  00094A                     	if	0	;There are less than 3 active tblptr bytes
 11197  00094A                     	endif
 11198  00094A  0009               	tblrd		*+
 11199  00094C  CFF5 F071          	movff	tablat,___llmod@divisor
 11200  000950  0009               	tblrd		*+
 11201  000952  CFF5 F072          	movff	tablat,___llmod@divisor+1
 11202  000956  0009               	tblrd		*+
 11203  000958  CFF5 F073          	movff	tablat,___llmod@divisor+2
 11204  00095C  000A               	tblrd		*-
 11205  00095E  CFF5 F074          	movff	tablat,___llmod@divisor+3
 11206  000962  ECF2  F026         	call	___llmod	;wreg free
 11207  000966  C06D  F112         	movff	?___llmod,sprintf@val
 11208  00096A  C06E  F113         	movff	?___llmod+1,sprintf@val+1
 11209  00096E  C06F  F114         	movff	?___llmod+2,sprintf@val+2
 11210  000972  C070  F115         	movff	?___llmod+3,sprintf@val+3
 11211  000976                     l2539:
 11212  000976  0101               	movlb	1	; () banked
 11213  000978  071F               	decf	sprintf@c& (0+255),f,b
 11214  00097A  291F               	incf	sprintf@c& (0+255),w,b
 11215  00097C  B4D8               	btfsc	status,2,c
 11216  00097E  D00E               	goto	l2542
 11217  000980  D786               	goto	l2540
 11218  000982                     
 11219                           ; BSR set to: 1
 11220                           ;doprnt.c: 1236: ((*sp++ = ('0')));
 11221                           
 11222                           ; BSR set to: 1
 11223  000982  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 11224  000986  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 11225  00098A  0E30               	movlw	48
 11226  00098C  6EDF               	movwf	indf2,c
 11227                           
 11228                           ; BSR set to: 1
 11229  00098E  0100               	movlb	0	; () banked
 11230  000990  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 11231  000992  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 11232                           
 11233                           ; BSR set to: 0
 11234                           ;doprnt.c: 1237: prec--;
 11235  000994  0101               	movlb	1	; () banked
 11236  000996  071D               	decf	sprintf@prec& (0+255),f,b
 11237  000998  A0D8               	btfss	status,0,c
 11238  00099A  071E               	decf	(sprintf@prec+1)& (0+255),f,b
 11239  00099C                     l2542:
 11240                           
 11241                           ; BSR set to: 1
 11242                           
 11243                           ; BSR set to: 1
 11244  00099C  511D               	movf	sprintf@prec& (0+255),w,b
 11245  00099E  111E               	iorwf	(sprintf@prec+1)& (0+255),w,b
 11246  0009A0  B4D8               	btfsc	status,2,c
 11247  0009A2  D220               	goto	u8460
 11248  0009A4  D7EE               	goto	l2543
 11249  0009A6                     l2496:
 11250                           
 11251                           ; BSR set to: 1
 11252                           ;doprnt.c: 1246: }
 11253                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 11254                           
 11255                           ; BSR set to: 1
 11256  0009A6  0EC0               	movlw	192
 11257  0009A8  151B               	andwf	sprintf@flag& (0+255),w,b
 11258  0009AA  0100               	movlb	0	; () banked
 11259  0009AC  6FEF               	movwf	??_sprintf& (0+255),b
 11260  0009AE  0E00               	movlw	0
 11261  0009B0  0101               	movlb	1	; () banked
 11262  0009B2  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
 11263  0009B4  0100               	movlb	0	; () banked
 11264  0009B6  6FF0               	movwf	(??_sprintf+1)& (0+255),b
 11265  0009B8  51EF               	movf	??_sprintf& (0+255),w,b
 11266  0009BA  11F0               	iorwf	(??_sprintf+1)& (0+255),w,b
 11267  0009BC  A4D8               	btfss	status,2,c
 11268  0009BE  D02F               	goto	l2545
 11269                           
 11270                           ; BSR set to: 0
 11271                           ;doprnt.c: 1253: {
 11272                           ;doprnt.c: 1255: if(flag & 0x10)
 11273  0009C0  0101               	movlb	1	; () banked
 11274  0009C2  A91B               	btfss	sprintf@flag& (0+255),4,b
 11275  0009C4  D00E               	goto	l2546
 11276                           
 11277                           ; BSR set to: 1
 11278                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 11279  0009C6  C10A  FFD9         	movff	sprintf@ap,fsr2l
 11280  0009CA  C10B  FFDA         	movff	sprintf@ap+1,fsr2h
 11281  0009CE  CFDE F112          	movff	postinc2,sprintf@val
 11282  0009D2  CFDE F113          	movff	postinc2,sprintf@val+1
 11283  0009D6  CFDE F114          	movff	postinc2,sprintf@val+2
 11284  0009DA  CFDE F115          	movff	postinc2,sprintf@val+3
 11285                           
 11286                           ; BSR set to: 1
 11287  0009DE  0E04               	movlw	4
 11288  0009E0  D00E               	goto	L9
 11289  0009E2                     l2546:
 11290                           
 11291                           ; BSR set to: 1
 11292                           ;doprnt.c: 1257: else
 11293                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 11294                           
 11295                           ; BSR set to: 1
 11296  0009E2  C10A  FFD9         	movff	sprintf@ap,fsr2l
 11297  0009E6  C10B  FFDA         	movff	sprintf@ap+1,fsr2h
 11298  0009EA  CFDE F112          	movff	postinc2,sprintf@val
 11299  0009EE  CFDD F113          	movff	postdec2,sprintf@val+1
 11300  0009F2  0E00               	movlw	0
 11301  0009F4  BF13               	btfsc	(sprintf@val+1)& (0+255),7,b
 11302  0009F6  0EFF               	movlw	-1
 11303  0009F8  6F14               	movwf	(sprintf@val+2)& (0+255),b
 11304  0009FA  6F15               	movwf	(sprintf@val+3)& (0+255),b
 11305                           
 11306                           ; BSR set to: 1
 11307  0009FC  0E02               	movlw	2
 11308  0009FE                     L9:
 11309  0009FE  270A               	addwf	sprintf@ap& (0+255),f,b
 11310  000A00  0E00               	movlw	0
 11311  000A02  230B               	addwfc	(sprintf@ap+1)& (0+255),f,b
 11312                           
 11313                           ; BSR set to: 1
 11314                           ;doprnt.c: 1261: if((long)val < 0) {
 11315                           
 11316                           ; BSR set to: 1
 11317  000A04  AF15               	btfss	(sprintf@val+3)& (0+255),7,b
 11318  000A06  D02E               	goto	l2551
 11319                           
 11320                           ; BSR set to: 1
 11321                           ;doprnt.c: 1262: flag |= 0x03;
 11322  000A08  0E03               	movlw	3
 11323  000A0A  131B               	iorwf	sprintf@flag& (0+255),f,b
 11324                           
 11325                           ; BSR set to: 1
 11326                           ;doprnt.c: 1263: val = -val;
 11327  000A0C  1F15               	comf	(sprintf@val+3)& (0+255),f,b
 11328  000A0E  1F14               	comf	(sprintf@val+2)& (0+255),f,b
 11329  000A10  1F13               	comf	(sprintf@val+1)& (0+255),f,b
 11330  000A12  6D12               	negf	sprintf@val& (0+255),b
 11331  000A14  0E00               	movlw	0
 11332  000A16  2313               	addwfc	(sprintf@val+1)& (0+255),f,b
 11333  000A18  2314               	addwfc	(sprintf@val+2)& (0+255),f,b
 11334  000A1A  2315               	addwfc	(sprintf@val+3)& (0+255),f,b
 11335                           
 11336                           ; BSR set to: 1
 11337                           ;doprnt.c: 1264: }
 11338                           ;doprnt.c: 1266: }
 11339  000A1C  D023               	goto	l2551
 11340  000A1E                     l2545:
 11341                           
 11342                           ; BSR set to: 0
 11343                           ;doprnt.c: 1268: else
 11344                           ;doprnt.c: 1273: {
 11345                           ;doprnt.c: 1281: if(flag & 0x10)
 11346  000A1E  0101               	movlb	1	; () banked
 11347  000A20  A91B               	btfss	sprintf@flag& (0+255),4,b
 11348  000A22  D00E               	goto	l2550
 11349                           
 11350                           ; BSR set to: 1
 11351                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
 11352  000A24  C10A  FFD9         	movff	sprintf@ap,fsr2l
 11353  000A28  C10B  FFDA         	movff	sprintf@ap+1,fsr2h
 11354  000A2C  CFDE F112          	movff	postinc2,sprintf@val
 11355  000A30  CFDE F113          	movff	postinc2,sprintf@val+1
 11356  000A34  CFDE F114          	movff	postinc2,sprintf@val+2
 11357  000A38  CFDE F115          	movff	postinc2,sprintf@val+3
 11358                           
 11359                           ; BSR set to: 1
 11360  000A3C  0E04               	movlw	4
 11361  000A3E  D00F               	goto	L10
 11362  000A40                     l2550:
 11363                           
 11364                           ; BSR set to: 1
 11365                           ;doprnt.c: 1283: else
 11366                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 11367                           
 11368                           ; BSR set to: 1
 11369  000A40  C10A  FFD9         	movff	sprintf@ap,fsr2l
 11370  000A44  C10B  FFDA         	movff	sprintf@ap+1,fsr2h
 11371  000A48  CFDE F0EF          	movff	postinc2,??_sprintf
 11372  000A4C  CFDD F0F0          	movff	postdec2,??_sprintf+1
 11373  000A50  C0EF  F112         	movff	??_sprintf,sprintf@val
 11374  000A54  C0F0  F113         	movff	??_sprintf+1,sprintf@val+1
 11375  000A58  6B14               	clrf	(sprintf@val+2)& (0+255),b
 11376  000A5A  6B15               	clrf	(sprintf@val+3)& (0+255),b
 11377                           
 11378                           ; BSR set to: 1
 11379  000A5C  0E02               	movlw	2
 11380  000A5E                     L10:
 11381  000A5E  270A               	addwf	sprintf@ap& (0+255),f,b
 11382  000A60  0E00               	movlw	0
 11383  000A62  230B               	addwfc	(sprintf@ap+1)& (0+255),f,b
 11384  000A64                     l2551:
 11385                           
 11386                           ; BSR set to: 1
 11387                           ;doprnt.c: 1287: }
 11388                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 11389                           
 11390                           ; BSR set to: 1
 11391                           
 11392                           ; BSR set to: 1
 11393  000A64  511D               	movf	sprintf@prec& (0+255),w,b
 11394  000A66  111E               	iorwf	(sprintf@prec+1)& (0+255),w,b
 11395  000A68  A4D8               	btfss	status,2,c
 11396  000A6A  D045               	goto	l2553
 11397                           
 11398                           ; BSR set to: 1
 11399  000A6C  5112               	movf	sprintf@val& (0+255),w,b
 11400  000A6E  1113               	iorwf	(sprintf@val+1)& (0+255),w,b
 11401  000A70  1114               	iorwf	(sprintf@val+2)& (0+255),w,b
 11402  000A72  1115               	iorwf	(sprintf@val+3)& (0+255),w,b
 11403  000A74  A4D8               	btfss	status,2,c
 11404  000A76  D03F               	goto	l2553
 11405                           
 11406                           ; BSR set to: 1
 11407                           ;doprnt.c: 1291: prec++;
 11408  000A78  4B1D               	infsnz	sprintf@prec& (0+255),f,b
 11409  000A7A  2B1E               	incf	(sprintf@prec+1)& (0+255),f,b
 11410                           
 11411                           ; BSR set to: 1
 11412                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 11413  000A7C  D03C               	goto	l2553
 11414  000A7E                     
 11415                           ; BSR set to: 1
 11416                           ;doprnt.c: 1302: case 0xC0:
 11417                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 11418                           
 11419                           ; BSR set to: 1
 11420                           
 11421                           ; BSR set to: 1
 11422  000A7E  0E01               	movlw	1
 11423  000A80  6F1F               	movwf	sprintf@c& (0+255),b
 11424  000A82                     l9011:
 11425                           
 11426                           ; BSR set to: 1
 11427  000A82  0E0A               	movlw	10
 11428  000A84  191F               	xorwf	sprintf@c& (0+255),w,b
 11429  000A86  B4D8               	btfsc	status,2,c
 11430  000A88  D041               	goto	l2559
 11431                           
 11432                           ; BSR set to: 1
 11433                           ;doprnt.c: 1306: if(val < dpowers[c])
 11434                           
 11435                           ; BSR set to: 1
 11436                           
 11437                           ; BSR set to: 1
 11438  000A8A  511F               	movf	sprintf@c& (0+255),w,b
 11439  000A8C  0D04               	mullw	4
 11440  000A8E  0EEF               	movlw	low _dpowers
 11441  000A90  24F3               	addwf	prodl,w,c
 11442  000A92  6EF6               	movwf	tblptrl,c
 11443  000A94  0E7B               	movlw	high _dpowers
 11444  000A96  20F4               	addwfc	prodh,w,c
 11445  000A98  6EF7               	movwf	tblptrh,c
 11446  000A9A                     	if	0	;There are less than 3 active tblptr bytes
 11447  000A9A                     	endif
 11448  000A9A  0009               	tblrd		*+
 11449  000A9C  50F5               	movf	tablat,w,c
 11450  000A9E  5D12               	subwf	sprintf@val& (0+255),w,b
 11451  000AA0  0009               	tblrd		*+
 11452  000AA2  50F5               	movf	tablat,w,c
 11453  000AA4  5913               	subwfb	(sprintf@val+1)& (0+255),w,b
 11454  000AA6  0009               	tblrd		*+
 11455  000AA8  50F5               	movf	tablat,w,c
 11456  000AAA  5914               	subwfb	(sprintf@val+2)& (0+255),w,b
 11457  000AAC  0009               	tblrd		*+
 11458  000AAE  50F5               	movf	tablat,w,c
 11459  000AB0  5915               	subwfb	(sprintf@val+3)& (0+255),w,b
 11460  000AB2  A0D8               	btfss	status,0,c
 11461  000AB4  D02B               	goto	l2559
 11462                           
 11463                           ; BSR set to: 1
 11464                           
 11465                           ; BSR set to: 1
 11466                           
 11467                           ; BSR set to: 1
 11468                           ;doprnt.c: 1307: break;
 11469  000AB6  2B1F               	incf	sprintf@c& (0+255),f,b
 11470  000AB8  D7E4               	goto	l9011
 11471  000ABA                     
 11472                           ; BSR set to: 1
 11473                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 11474                           
 11475                           ; BSR set to: 1
 11476  000ABA  0E01               	movlw	1
 11477  000ABC  6F1F               	movwf	sprintf@c& (0+255),b
 11478  000ABE                     l9025:
 11479                           
 11480                           ; BSR set to: 1
 11481  000ABE  0E08               	movlw	8
 11482  000AC0  191F               	xorwf	sprintf@c& (0+255),w,b
 11483  000AC2  B4D8               	btfsc	status,2,c
 11484  000AC4  D023               	goto	l2559
 11485                           
 11486                           ; BSR set to: 1
 11487                           ;doprnt.c: 1317: if(val < hexpowers[c])
 11488                           
 11489                           ; BSR set to: 1
 11490                           
 11491                           ; BSR set to: 1
 11492  000AC6  511F               	movf	sprintf@c& (0+255),w,b
 11493  000AC8  0D04               	mullw	4
 11494  000ACA  0E65               	movlw	low _hexpowers
 11495  000ACC  24F3               	addwf	prodl,w,c
 11496  000ACE  6EF6               	movwf	tblptrl,c
 11497  000AD0  0E7C               	movlw	high _hexpowers
 11498  000AD2  20F4               	addwfc	prodh,w,c
 11499  000AD4  6EF7               	movwf	tblptrh,c
 11500  000AD6                     	if	0	;There are less than 3 active tblptr bytes
 11501  000AD6                     	endif
 11502  000AD6  0009               	tblrd		*+
 11503  000AD8  50F5               	movf	tablat,w,c
 11504  000ADA  5D12               	subwf	sprintf@val& (0+255),w,b
 11505  000ADC  0009               	tblrd		*+
 11506  000ADE  50F5               	movf	tablat,w,c
 11507  000AE0  5913               	subwfb	(sprintf@val+1)& (0+255),w,b
 11508  000AE2  0009               	tblrd		*+
 11509  000AE4  50F5               	movf	tablat,w,c
 11510  000AE6  5914               	subwfb	(sprintf@val+2)& (0+255),w,b
 11511  000AE8  0009               	tblrd		*+
 11512  000AEA  50F5               	movf	tablat,w,c
 11513  000AEC  5915               	subwfb	(sprintf@val+3)& (0+255),w,b
 11514  000AEE  A0D8               	btfss	status,0,c
 11515  000AF0  D00D               	goto	l2559
 11516                           
 11517                           ; BSR set to: 1
 11518                           
 11519                           ; BSR set to: 1
 11520                           
 11521                           ; BSR set to: 1
 11522                           ;doprnt.c: 1318: break;
 11523  000AF2  2B1F               	incf	sprintf@c& (0+255),f,b
 11524  000AF4  D7E4               	goto	l9025
 11525  000AF6                     l2553:
 11526                           
 11527                           ; BSR set to: 1
 11528                           
 11529                           ; BSR set to: 1
 11530  000AF6  511B               	movf	sprintf@flag& (0+255),w,b
 11531  000AF8  0BC0               	andlw	192
 11532                           
 11533                           ; Switch size 1, requested type "space"
 11534                           ; Number of cases is 3, Range of values is 0 to 192
 11535                           ; switch strategies available:
 11536                           ; Name         Instructions Cycles
 11537                           ; simple_byte           10     6 (average)
 11538                           ;	Chosen strategy is simple_byte
 11539  000AFA  0A00               	xorlw	0	; case 0
 11540  000AFC  B4D8               	btfsc	status,2,c
 11541  000AFE  D7BF               	goto	l2554
 11542  000B00  0A80               	xorlw	128	; case 128
 11543  000B02  B4D8               	btfsc	status,2,c
 11544  000B04  D7DA               	goto	l2560
 11545  000B06  0A40               	xorlw	64	; case 192
 11546  000B08  B4D8               	btfsc	status,2,c
 11547  000B0A  D7B9               	goto	l2554
 11548  000B0C                     l2559:
 11549                           
 11550                           ; BSR set to: 1
 11551                           ;doprnt.c: 1339: if(c < prec)
 11552                           
 11553                           ; BSR set to: 1
 11554  000B0C  0E80               	movlw	128
 11555  000B0E  BF1F               	btfsc	sprintf@c& (0+255),7,b
 11556  000B10  0E7F               	movlw	127
 11557  000B12  0100               	movlb	0	; () banked
 11558  000B14  6FEF               	movwf	??_sprintf& (0+255),b
 11559  000B16  0101               	movlb	1	; () banked
 11560  000B18  511D               	movf	sprintf@prec& (0+255),w,b
 11561  000B1A  5D1F               	subwf	sprintf@c& (0+255),w,b
 11562  000B1C  511E               	movf	(sprintf@prec+1)& (0+255),w,b
 11563  000B1E  0A80               	xorlw	128
 11564  000B20  0100               	movlb	0	; () banked
 11565  000B22  59EF               	subwfb	??_sprintf& (0+255),w,b
 11566  000B24  B0D8               	btfsc	status,0,c
 11567  000B26  D003               	goto	l2564
 11568                           
 11569                           ; BSR set to: 0
 11570                           ;doprnt.c: 1340: c = prec;
 11571  000B28  C11D  F11F         	movff	sprintf@prec,sprintf@c
 11572  000B2C  D015               	goto	l2566
 11573  000B2E                     l2564:
 11574                           
 11575                           ; BSR set to: 0
 11576                           ;doprnt.c: 1341: else if(prec < c)
 11577                           
 11578                           ; BSR set to: 0
 11579  000B2E  0101               	movlb	1	; () banked
 11580  000B30  511E               	movf	(sprintf@prec+1)& (0+255),w,b
 11581  000B32  0A80               	xorlw	128
 11582  000B34  0100               	movlb	0	; () banked
 11583  000B36  6FEF               	movwf	??_sprintf& (0+255),b
 11584  000B38  0101               	movlb	1	; () banked
 11585  000B3A  511F               	movf	sprintf@c& (0+255),w,b
 11586  000B3C  5D1D               	subwf	sprintf@prec& (0+255),w,b
 11587  000B3E  0E80               	movlw	128
 11588  000B40  BF1F               	btfsc	sprintf@c& (0+255),7,b
 11589  000B42  0E7F               	movlw	127
 11590  000B44  0100               	movlb	0	; () banked
 11591  000B46  59EF               	subwfb	??_sprintf& (0+255),w,b
 11592  000B48  B0D8               	btfsc	status,0,c
 11593  000B4A  D006               	goto	l2566
 11594                           
 11595                           ; BSR set to: 0
 11596                           ;doprnt.c: 1342: prec = c;
 11597  000B4C  0101               	movlb	1	; () banked
 11598  000B4E  511F               	movf	sprintf@c& (0+255),w,b
 11599  000B50  6F1D               	movwf	sprintf@prec& (0+255),b
 11600  000B52  6B1E               	clrf	(sprintf@prec+1)& (0+255),b
 11601  000B54  BF1D               	btfsc	sprintf@prec& (0+255),7,b
 11602  000B56  071E               	decf	(sprintf@prec+1)& (0+255),f,b
 11603  000B58                     l2566:
 11604                           
 11605                           ;doprnt.c: 1345: if(width && flag & 0x03)
 11606                           
 11607                           ; BSR set to: 1
 11608                           
 11609                           ; BSR set to: 1
 11610  000B58  0101               	movlb	1	; () banked
 11611  000B5A  5119               	movf	sprintf@width& (0+255),w,b
 11612  000B5C  111A               	iorwf	(sprintf@width+1)& (0+255),w,b
 11613  000B5E  B4D8               	btfsc	status,2,c
 11614  000B60  D011               	goto	l2567
 11615                           
 11616                           ; BSR set to: 1
 11617  000B62  0E03               	movlw	3
 11618  000B64  151B               	andwf	sprintf@flag& (0+255),w,b
 11619  000B66  0100               	movlb	0	; () banked
 11620  000B68  6FEF               	movwf	??_sprintf& (0+255),b
 11621  000B6A  0E00               	movlw	0
 11622  000B6C  0101               	movlb	1	; () banked
 11623  000B6E  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
 11624  000B70  0100               	movlb	0	; () banked
 11625  000B72  6FF0               	movwf	(??_sprintf+1)& (0+255),b
 11626  000B74  51EF               	movf	??_sprintf& (0+255),w,b
 11627  000B76  11F0               	iorwf	(??_sprintf+1)& (0+255),w,b
 11628  000B78  B4D8               	btfsc	status,2,c
 11629  000B7A  D004               	goto	l2567
 11630                           
 11631                           ; BSR set to: 0
 11632                           ;doprnt.c: 1346: width--;
 11633  000B7C  0101               	movlb	1	; () banked
 11634  000B7E  0719               	decf	sprintf@width& (0+255),f,b
 11635  000B80  A0D8               	btfss	status,0,c
 11636  000B82  071A               	decf	(sprintf@width+1)& (0+255),f,b
 11637  000B84                     l2567:
 11638                           
 11639                           ;doprnt.c: 1348: if(flag & 0x4000) {
 11640                           
 11641                           ; BSR set to: 1
 11642  000B84  0101               	movlb	1	; () banked
 11643  000B86  AD1C               	btfss	(sprintf@flag+1)& (0+255),6,b
 11644  000B88  D018               	goto	l2570
 11645                           
 11646                           ; BSR set to: 1
 11647                           ;doprnt.c: 1349: if(width > prec)
 11648  000B8A  5119               	movf	sprintf@width& (0+255),w,b
 11649  000B8C  5D1D               	subwf	sprintf@prec& (0+255),w,b
 11650  000B8E  511E               	movf	(sprintf@prec+1)& (0+255),w,b
 11651  000B90  0A80               	xorlw	128
 11652  000B92  0100               	movlb	0	; () banked
 11653  000B94  6FEF               	movwf	??_sprintf& (0+255),b
 11654  000B96  0101               	movlb	1	; () banked
 11655  000B98  511A               	movf	(sprintf@width+1)& (0+255),w,b
 11656  000B9A  0A80               	xorlw	128
 11657  000B9C  0100               	movlb	0	; () banked
 11658  000B9E  59EF               	subwfb	??_sprintf& (0+255),w,b
 11659  000BA0  B0D8               	btfsc	status,0,c
 11660  000BA2  D006               	goto	l2569
 11661                           
 11662                           ; BSR set to: 0
 11663                           ;doprnt.c: 1350: width -= prec;
 11664  000BA4  0101               	movlb	1	; () banked
 11665  000BA6  511D               	movf	sprintf@prec& (0+255),w,b
 11666  000BA8  5F19               	subwf	sprintf@width& (0+255),f,b
 11667  000BAA  511E               	movf	(sprintf@prec+1)& (0+255),w,b
 11668  000BAC  5B1A               	subwfb	(sprintf@width+1)& (0+255),f,b
 11669  000BAE  D005               	goto	l2570
 11670  000BB0                     l2569:
 11671                           
 11672                           ;doprnt.c: 1351: else
 11673                           ;doprnt.c: 1352: width = 0;
 11674                           
 11675                           ; BSR set to: 1
 11676  000BB0  0E00               	movlw	0
 11677  000BB2  0101               	movlb	1	; () banked
 11678  000BB4  6F1A               	movwf	(sprintf@width+1)& (0+255),b
 11679  000BB6  0E00               	movlw	0
 11680  000BB8  6F19               	movwf	sprintf@width& (0+255),b
 11681  000BBA                     l2570:
 11682                           
 11683                           ; BSR set to: 1
 11684                           ;doprnt.c: 1353: }
 11685                           ;doprnt.c: 1381: if(width > c)
 11686                           
 11687                           ; BSR set to: 1
 11688                           
 11689                           ; BSR set to: 1
 11690  000BBA  0E80               	movlw	128
 11691  000BBC  BF1F               	btfsc	sprintf@c& (0+255),7,b
 11692  000BBE  0E7F               	movlw	127
 11693  000BC0  0100               	movlb	0	; () banked
 11694  000BC2  6FEF               	movwf	??_sprintf& (0+255),b
 11695  000BC4  0101               	movlb	1	; () banked
 11696  000BC6  5119               	movf	sprintf@width& (0+255),w,b
 11697  000BC8  5D1F               	subwf	sprintf@c& (0+255),w,b
 11698  000BCA  511A               	movf	(sprintf@width+1)& (0+255),w,b
 11699  000BCC  0A80               	xorlw	128
 11700  000BCE  0100               	movlb	0	; () banked
 11701  000BD0  59EF               	subwfb	??_sprintf& (0+255),w,b
 11702  000BD2  B0D8               	btfsc	status,0,c
 11703  000BD4  D008               	goto	l2571
 11704                           
 11705                           ; BSR set to: 0
 11706                           ;doprnt.c: 1382: width -= c;
 11707  000BD6  0101               	movlb	1	; () banked
 11708  000BD8  511F               	movf	sprintf@c& (0+255),w,b
 11709  000BDA  5F19               	subwf	sprintf@width& (0+255),f,b
 11710  000BDC  0E00               	movlw	0
 11711  000BDE  BF1F               	btfsc	sprintf@c& (0+255),7,b
 11712  000BE0  0EFF               	movlw	255
 11713  000BE2  5B1A               	subwfb	(sprintf@width+1)& (0+255),f,b
 11714  000BE4  D005               	goto	l2572
 11715  000BE6                     l2571:
 11716                           
 11717                           ;doprnt.c: 1383: else
 11718                           ;doprnt.c: 1384: width = 0;
 11719                           
 11720                           ; BSR set to: 1
 11721  000BE6  0E00               	movlw	0
 11722  000BE8  0101               	movlb	1	; () banked
 11723  000BEA  6F1A               	movwf	(sprintf@width+1)& (0+255),b
 11724  000BEC  0E00               	movlw	0
 11725  000BEE  6F19               	movwf	sprintf@width& (0+255),b
 11726  000BF0                     l2572:
 11727                           
 11728                           ; BSR set to: 1
 11729                           ;doprnt.c: 1387: if(flag & 0x04) {
 11730                           
 11731                           ; BSR set to: 1
 11732  000BF0  A51B               	btfss	sprintf@flag& (0+255),2,b
 11733  000BF2  D028               	goto	l2573
 11734                           
 11735                           ; BSR set to: 1
 11736                           ;doprnt.c: 1392: if(flag & 0x03)
 11737  000BF4  0E03               	movlw	3
 11738  000BF6  151B               	andwf	sprintf@flag& (0+255),w,b
 11739  000BF8  0100               	movlb	0	; () banked
 11740  000BFA  6FEF               	movwf	??_sprintf& (0+255),b
 11741  000BFC  0E00               	movlw	0
 11742  000BFE  0101               	movlb	1	; () banked
 11743  000C00  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
 11744  000C02  0100               	movlb	0	; () banked
 11745  000C04  6FF0               	movwf	(??_sprintf+1)& (0+255),b
 11746  000C06  51EF               	movf	??_sprintf& (0+255),w,b
 11747  000C08  11F0               	iorwf	(??_sprintf+1)& (0+255),w,b
 11748  000C0A  B4D8               	btfsc	status,2,c
 11749  000C0C  D008               	goto	l2574
 11750                           
 11751                           ; BSR set to: 0
 11752                           ;doprnt.c: 1393: ((*sp++ = ('-')));
 11753  000C0E  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 11754  000C12  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 11755  000C16  0E2D               	movlw	45
 11756  000C18  6EDF               	movwf	indf2,c
 11757                           
 11758                           ; BSR set to: 0
 11759  000C1A  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 11760  000C1C  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 11761  000C1E                     l2574:
 11762                           
 11763                           ; BSR set to: 0
 11764                           ;doprnt.c: 1415: if(width)
 11765                           
 11766                           ; BSR set to: 0
 11767  000C1E  0101               	movlb	1	; () banked
 11768  000C20  5119               	movf	sprintf@width& (0+255),w,b
 11769  000C22  111A               	iorwf	(sprintf@width+1)& (0+255),w,b
 11770  000C24  B4D8               	btfsc	status,2,c
 11771  000C26  D0D5               	goto	l2583
 11772                           
 11773                           ; BSR set to: 1
 11774                           ;doprnt.c: 1417: ((*sp++ = ('0')));
 11775                           
 11776                           ; BSR set to: 1
 11777                           
 11778                           ;doprnt.c: 1416: do
 11779  000C28  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 11780  000C2C  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 11781  000C30  0E30               	movlw	48
 11782  000C32  6EDF               	movwf	indf2,c
 11783                           
 11784                           ; BSR set to: 1
 11785  000C34  0100               	movlb	0	; () banked
 11786  000C36  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 11787  000C38  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 11788                           
 11789                           ; BSR set to: 0
 11790                           ;doprnt.c: 1418: while(--width);
 11791  000C3A  0101               	movlb	1	; () banked
 11792  000C3C  0719               	decf	sprintf@width& (0+255),f,b
 11793  000C3E  A0D8               	btfss	status,0,c
 11794  000C40  071A               	decf	(sprintf@width+1)& (0+255),f,b
 11795  000C42  D7EE               	goto	L29
 11796  000C44                     l2573:
 11797                           
 11798                           ; BSR set to: 1
 11799                           ;doprnt.c: 1422: {
 11800                           ;doprnt.c: 1424: if(width
 11801                           ;doprnt.c: 1428: )
 11802                           
 11803                           ; BSR set to: 1
 11804  000C44  5119               	movf	sprintf@width& (0+255),w,b
 11805  000C46  111A               	iorwf	(sprintf@width+1)& (0+255),w,b
 11806  000C48  B4D8               	btfsc	status,2,c
 11807  000C4A  D011               	goto	u8430
 11808  000C4C                     u8420:
 11809                           
 11810                           ; BSR set to: 1
 11811                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 11812                           
 11813                           ; BSR set to: 1
 11814                           
 11815                           ;doprnt.c: 1429: do
 11816  000C4C  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 11817  000C50  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 11818  000C54  0E20               	movlw	32
 11819  000C56  6EDF               	movwf	indf2,c
 11820                           
 11821                           ; BSR set to: 1
 11822  000C58  0100               	movlb	0	; () banked
 11823  000C5A  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 11824  000C5C  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 11825                           
 11826                           ; BSR set to: 0
 11827                           ;doprnt.c: 1431: while(--width);
 11828  000C5E  0101               	movlb	1	; () banked
 11829  000C60  0719               	decf	sprintf@width& (0+255),f,b
 11830  000C62  A0D8               	btfss	status,0,c
 11831  000C64  071A               	decf	(sprintf@width+1)& (0+255),f,b
 11832  000C66  5119               	movf	sprintf@width& (0+255),w,b
 11833  000C68  111A               	iorwf	(sprintf@width+1)& (0+255),w,b
 11834  000C6A  A4D8               	btfss	status,2,c
 11835  000C6C  D7EF               	goto	u8420
 11836  000C6E                     u8430:
 11837                           
 11838                           ; BSR set to: 1
 11839                           ;doprnt.c: 1438: if(flag & 0x03)
 11840                           
 11841                           ; BSR set to: 1
 11842                           
 11843                           ; BSR set to: 1
 11844  000C6E  0E03               	movlw	3
 11845  000C70  151B               	andwf	sprintf@flag& (0+255),w,b
 11846  000C72  0100               	movlb	0	; () banked
 11847  000C74  6FEF               	movwf	??_sprintf& (0+255),b
 11848  000C76  0E00               	movlw	0
 11849  000C78  0101               	movlb	1	; () banked
 11850  000C7A  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
 11851  000C7C  0100               	movlb	0	; () banked
 11852  000C7E  6FF0               	movwf	(??_sprintf+1)& (0+255),b
 11853  000C80  51EF               	movf	??_sprintf& (0+255),w,b
 11854  000C82  11F0               	iorwf	(??_sprintf+1)& (0+255),w,b
 11855  000C84  B4D8               	btfsc	status,2,c
 11856  000C86  D0A5               	goto	l2583
 11857                           
 11858                           ; BSR set to: 0
 11859                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 11860  000C88  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 11861  000C8C  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 11862  000C90  0E2D               	movlw	45
 11863  000C92  6EDF               	movwf	indf2,c
 11864  000C94  D09C               	goto	L11
 11865  000C96                     
 11866                           ;doprnt.c: 1486: case 0xC0:
 11867                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 11868                           
 11869                           ; BSR set to: 0
 11870                           
 11871                           ; BSR set to: 0
 11872  000C96  C11D  F0EF         	movff	sprintf@prec,??_sprintf
 11873  000C9A  C11E  F0F0         	movff	sprintf@prec+1,??_sprintf+1
 11874  000C9E  0100               	movlb	0	; () banked
 11875  000CA0  90D8               	bcf	status,0,c
 11876  000CA2  37EF               	rlcf	??_sprintf& (0+255),f,b
 11877  000CA4  37F0               	rlcf	(??_sprintf+1)& (0+255),f,b
 11878  000CA6  90D8               	bcf	status,0,c
 11879  000CA8  37EF               	rlcf	??_sprintf& (0+255),f,b
 11880  000CAA  37F0               	rlcf	(??_sprintf+1)& (0+255),f,b
 11881  000CAC  0EEF               	movlw	low _dpowers
 11882  000CAE  25EF               	addwf	??_sprintf& (0+255),w,b
 11883  000CB0  6EF6               	movwf	tblptrl,c
 11884  000CB2  0E7B               	movlw	high _dpowers
 11885  000CB4  21F0               	addwfc	(??_sprintf+1)& (0+255),w,b
 11886  000CB6  6EF7               	movwf	tblptrh,c
 11887  000CB8                     	if	0	;There are less than 3 active tblptr bytes
 11888  000CB8                     	endif
 11889  000CB8  0009               	tblrd		*+
 11890  000CBA  CFF5 F064          	movff	tablat,___lldiv@divisor
 11891  000CBE  0009               	tblrd		*+
 11892  000CC0  CFF5 F065          	movff	tablat,___lldiv@divisor+1
 11893  000CC4  0009               	tblrd		*+
 11894  000CC6  CFF5 F066          	movff	tablat,___lldiv@divisor+2
 11895  000CCA  000A               	tblrd		*-
 11896  000CCC  CFF5 F067          	movff	tablat,___lldiv@divisor+3
 11897  000CD0  C112  F060         	movff	sprintf@val,___lldiv@dividend
 11898  000CD4  C113  F061         	movff	sprintf@val+1,___lldiv@dividend+1
 11899  000CD8  C114  F062         	movff	sprintf@val+2,___lldiv@dividend+2
 11900  000CDC  C115  F063         	movff	sprintf@val+3,___lldiv@dividend+3
 11901  000CE0  EC51  F025         	call	___lldiv	;wreg free
 11902  000CE4  C060  F06D         	movff	?___lldiv,___llmod@dividend
 11903  000CE8  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
 11904  000CEC  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
 11905  000CF0  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
 11906  000CF4  0E0A               	movlw	10
 11907  000CF6  0100               	movlb	0	; () banked
 11908  000CF8  6F71               	movwf	___llmod@divisor& (0+255),b
 11909  000CFA  0E00               	movlw	0
 11910  000CFC  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 11911  000CFE  0E00               	movlw	0
 11912  000D00  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 11913  000D02  0E00               	movlw	0
 11914  000D04  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 11915  000D06  ECF2  F026         	call	___llmod	;wreg free
 11916  000D0A  0100               	movlb	0	; () banked
 11917  000D0C  516D               	movf	?___llmod& (0+255),w,b
 11918  000D0E  0F30               	addlw	48
 11919  000D10  0101               	movlb	1	; () banked
 11920  000D12  6F1F               	movwf	sprintf@c& (0+255),b
 11921                           
 11922                           ;doprnt.c: 1491: break;
 11923  000D14  D055               	goto	l2588
 11924  000D16                     
 11925                           ; BSR set to: 1
 11926                           ;doprnt.c: 1499: {
 11927                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 11928                           
 11929                           ; BSR set to: 1
 11930  000D16  C112  F060         	movff	sprintf@val,___lldiv@dividend
 11931  000D1A  C113  F061         	movff	sprintf@val+1,___lldiv@dividend+1
 11932  000D1E  C114  F062         	movff	sprintf@val+2,___lldiv@dividend+2
 11933  000D22  C115  F063         	movff	sprintf@val+3,___lldiv@dividend+3
 11934  000D26  C11D  F0EF         	movff	sprintf@prec,??_sprintf
 11935  000D2A  C11E  F0F0         	movff	sprintf@prec+1,??_sprintf+1
 11936  000D2E  0100               	movlb	0	; () banked
 11937  000D30  90D8               	bcf	status,0,c
 11938  000D32  37EF               	rlcf	??_sprintf& (0+255),f,b
 11939  000D34  37F0               	rlcf	(??_sprintf+1)& (0+255),f,b
 11940  000D36  90D8               	bcf	status,0,c
 11941  000D38  37EF               	rlcf	??_sprintf& (0+255),f,b
 11942  000D3A  37F0               	rlcf	(??_sprintf+1)& (0+255),f,b
 11943  000D3C  0E65               	movlw	low _hexpowers
 11944  000D3E  25EF               	addwf	??_sprintf& (0+255),w,b
 11945  000D40  6EF6               	movwf	tblptrl,c
 11946  000D42  0E7C               	movlw	high _hexpowers
 11947  000D44  21F0               	addwfc	(??_sprintf+1)& (0+255),w,b
 11948  000D46  6EF7               	movwf	tblptrh,c
 11949  000D48                     	if	0	;There are less than 3 active tblptr bytes
 11950  000D48                     	endif
 11951  000D48  0009               	tblrd		*+
 11952  000D4A  CFF5 F064          	movff	tablat,___lldiv@divisor
 11953  000D4E  0009               	tblrd		*+
 11954  000D50  CFF5 F065          	movff	tablat,___lldiv@divisor+1
 11955  000D54  0009               	tblrd		*+
 11956  000D56  CFF5 F066          	movff	tablat,___lldiv@divisor+2
 11957  000D5A  000A               	tblrd		*-
 11958  000D5C  CFF5 F067          	movff	tablat,___lldiv@divisor+3
 11959  000D60  EC51  F025         	call	___lldiv	;wreg free
 11960  000D64  0100               	movlb	0	; () banked
 11961  000D66  5160               	movf	?___lldiv& (0+255),w,b
 11962  000D68  0B0F               	andlw	15
 11963  000D6A  0101               	movlb	1	; () banked
 11964  000D6C  6F05               	movwf	sprintf@idx& (0+255),b
 11965                           
 11966                           ; BSR set to: 1
 11967                           ;doprnt.c: 1502: c = (flag & 0x20 ? "0123456789ABCDEF" : "0123456789abcdef")[idx];
 11968  000D6E  BB1B               	btfsc	sprintf@flag& (0+255),5,b
 11969  000D70  D004               	goto	l2591
 11970                           
 11971                           ; BSR set to: 1
 11972  000D72  0E05               	movlw	low STR_38
 11973  000D74  6F03               	movwf	_sprintf$5031& (0+255),b
 11974  000D76  0E7F               	movlw	high STR_38
 11975  000D78  D003               	goto	L12
 11976  000D7A                     l2591:
 11977                           
 11978                           ; BSR set to: 1
 11979                           
 11980                           ; BSR set to: 1
 11981  000D7A  0EF4               	movlw	low STR_37
 11982  000D7C  6F03               	movwf	_sprintf$5031& (0+255),b
 11983  000D7E  0E7E               	movlw	high STR_37
 11984  000D80                     L12:
 11985  000D80  6F04               	movwf	(_sprintf$5031+1)& (0+255),b
 11986                           
 11987                           ; BSR set to: 1
 11988                           
 11989                           ; BSR set to: 1
 11990  000D82  5105               	movf	sprintf@idx& (0+255),w,b
 11991  000D84  0D01               	mullw	1
 11992  000D86  C103  F0EF         	movff	_sprintf$5031,??_sprintf
 11993  000D8A  C104  F0F0         	movff	_sprintf$5031+1,??_sprintf+1
 11994  000D8E  50F3               	movf	prodl,w,c
 11995  000D90  0100               	movlb	0	; () banked
 11996  000D92  27EF               	addwf	??_sprintf& (0+255),f,b
 11997  000D94  50F4               	movf	prodh,w,c
 11998  000D96  23F0               	addwfc	(??_sprintf+1)& (0+255),f,b
 11999  000D98  C0EF  FFF6         	movff	??_sprintf,tblptrl
 12000  000D9C  C0F0  FFF7         	movff	??_sprintf+1,tblptrh
 12001  000DA0                     	if	0	;tblptru may be non-zero
 12002  000DA0                     	endif
 12003  000DA0                     	if	0	;tblptru may be non-zero
 12004  000DA0                     	endif
 12005  000DA0  0008               	tblrd		*
 12006  000DA2  CFF5 F11F          	movff	tablat,sprintf@c
 12007                           
 12008                           ; BSR set to: 0
 12009                           ;doprnt.c: 1523: }
 12010                           
 12011                           ;doprnt.c: 1508: }
 12012                           ;doprnt.c: 1510: break;
 12013  000DA6  D00C               	goto	l2588
 12014  000DA8                     l9113:
 12015  000DA8  0101               	movlb	1	; () banked
 12016  000DAA  511B               	movf	sprintf@flag& (0+255),w,b
 12017  000DAC  0BC0               	andlw	192
 12018                           
 12019                           ; Switch size 1, requested type "space"
 12020                           ; Number of cases is 3, Range of values is 0 to 192
 12021                           ; switch strategies available:
 12022                           ; Name         Instructions Cycles
 12023                           ; simple_byte           10     6 (average)
 12024                           ;	Chosen strategy is simple_byte
 12025  000DAE  0A00               	xorlw	0	; case 0
 12026  000DB0  B4D8               	btfsc	status,2,c
 12027  000DB2  D771               	goto	l2586
 12028  000DB4  0A80               	xorlw	128	; case 128
 12029  000DB6  B4D8               	btfsc	status,2,c
 12030  000DB8  D7AE               	goto	l2589
 12031  000DBA  0A40               	xorlw	64	; case 192
 12032  000DBC  B4D8               	btfsc	status,2,c
 12033  000DBE  D76B               	goto	l2586
 12034  000DC0                     l2588:
 12035                           
 12036                           ;doprnt.c: 1524: ((*sp++ = (c)));
 12037                           
 12038                           ; BSR set to: 1
 12039  000DC0  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 12040  000DC4  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 12041  000DC8  C11F  FFDF         	movff	sprintf@c,indf2
 12042  000DCC  0100               	movlb	0	; () banked
 12043  000DCE                     L11:
 12044  000DCE  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 12045  000DD0  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 12046  000DD2                     l2583:
 12047                           
 12048                           ; BSR set to: 0
 12049  000DD2  0101               	movlb	1	; () banked
 12050  000DD4  071D               	decf	sprintf@prec& (0+255),f,b
 12051  000DD6  A0D8               	btfss	status,0,c
 12052  000DD8  071E               	decf	(sprintf@prec+1)& (0+255),f,b
 12053  000DDA  291D               	incf	sprintf@prec& (0+255),w,b
 12054  000DDC  E1E5               	bnz	l9113
 12055  000DDE  291E               	incf	(sprintf@prec+1)& (0+255),w,b
 12056  000DE0  A4D8               	btfss	status,2,c
 12057  000DE2  D7E2               	goto	l2585
 12058  000DE4                     u8460:
 12059                           
 12060                           ; BSR set to: 1
 12061                           
 12062                           ; BSR set to: 1
 12063  000DE4  C0C1  FFF6         	movff	sprintf@f,tblptrl
 12064  000DE8  C0C2  FFF7         	movff	sprintf@f+1,tblptrh
 12065  000DEC  0100               	movlb	0	; () banked
 12066  000DEE  4BC1               	infsnz	sprintf@f& (0+255),f,b
 12067  000DF0  2BC2               	incf	(sprintf@f+1)& (0+255),f,b
 12068  000DF2                     	if	0	;tblptru may be non-zero
 12069  000DF2                     	endif
 12070  000DF2                     	if	0	;tblptru may be non-zero
 12071  000DF2                     	endif
 12072  000DF2  0008               	tblrd		*
 12073  000DF4  CFF5 F11F          	movff	tablat,sprintf@c
 12074  000DF8  0101               	movlb	1	; () banked
 12075  000DFA  511F               	movf	sprintf@c& (0+255),w,b
 12076  000DFC  A4D8               	btfss	status,2,c
 12077  000DFE  EF10  F000         	goto	l2453
 12078  000E02                     u8470:
 12079                           
 12080                           ; BSR set to: 1
 12081                           ;doprnt.c: 1538: *sp = 0;
 12082                           
 12083                           ; BSR set to: 1
 12084                           
 12085                           ;doprnt.c: 1525: }
 12086                           ;doprnt.c: 1533: }
 12087                           ;doprnt.c: 1535: alldone:
 12088                           
 12089                           ; BSR set to: 1
 12090  000E02  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 12091  000E06  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 12092  000E0A  0E00               	movlw	0
 12093  000E0C  6EDF               	movwf	indf2,c
 12094  000E0E  0012               	return	
 12095  000E10                     __end_of_sprintf:
 12096                           	opt stack 0
 12097                           tblptru	equ	0xFF8
 12098                           tblptrh	equ	0xFF7
 12099                           tblptrl	equ	0xFF6
 12100                           tablat	equ	0xFF5
 12101                           prodh	equ	0xFF4
 12102                           prodl	equ	0xFF3
 12103                           intcon	equ	0xFF2
 12104                           postinc0	equ	0xFEE
 12105                           wreg	equ	0xFE8
 12106                           indf1	equ	0xFE7
 12107                           postdec1	equ	0xFE5
 12108                           fsr1h	equ	0xFE2
 12109                           fsr1l	equ	0xFE1
 12110                           indf2	equ	0xFDF
 12111                           postinc2	equ	0xFDE
 12112                           postdec2	equ	0xFDD
 12113                           plusw2	equ	0xFDB
 12114                           fsr2h	equ	0xFDA
 12115                           fsr2l	equ	0xFD9
 12116                           status	equ	0xFD8
 12117                           
 12118 ;; *************** function _scale *****************
 12119 ;; Defined at:
 12120 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\doprnt.c"
 12121 ;; Parameters:    Size  Location     Type
 12122 ;;  scl             1    wreg     char 
 12123 ;; Auto vars:     Size  Location     Type
 12124 ;;  scl             1   53[BANK0 ] char 
 12125 ;; Return value:  Size  Location     Type
 12126 ;;                  3   47[BANK0 ] char 
 12127 ;; Registers used:
 12128 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12129 ;; Tracked objects:
 12130 ;;		On entry : 0/0
 12131 ;;		On exit  : 0/0
 12132 ;;		Unchanged: 0/0
 12133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12134 ;;      Params:         0       3       0       0       0       0       0       0       0
 12135 ;;      Locals:         0       4       0       0       0       0       0       0       0
 12136 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12137 ;;      Totals:         0       7       0       0       0       0       0       0       0
 12138 ;;Total ram usage:        7 bytes
 12139 ;; Hardware stack levels used:    1
 12140 ;; Hardware stack levels required when called:   12
 12141 ;; This function calls:
 12142 ;;		___awdiv
 12143 ;;		___awmod
 12144 ;;		___ftmul
 12145 ;;		___wmul
 12146 ;; This function is called by:
 12147 ;;		_sprintf
 12148 ;; This function uses a non-reentrant model
 12149 ;;
 12150                           
 12151                           	psect	text34
 12152  0015C8                     __ptext34:
 12153                           	opt stack 0
 12154  0015C8                     _scale:
 12155                           	opt stack 17
 12156                           
 12157                           ; BSR set to: 1
 12158                           ;incstack = 0
 12159                           ;scale@scl stored from wreg
 12160  0015C8  0100               	movlb	0	; () banked
 12161  0015CA  6F95               	movwf	scale@scl& (0+255),b
 12162                           
 12163                           ;doprnt.c: 428: if(scl < 0) {
 12164  0015CC  0100               	movlb	0	; () banked
 12165  0015CE  AF95               	btfss	scale@scl& (0+255),7,b
 12166  0015D0  D10C               	goto	l2442
 12167                           
 12168                           ; BSR set to: 0
 12169                           ;doprnt.c: 429: scl = -scl;
 12170  0015D2  6D95               	negf	scale@scl& (0+255),b
 12171                           
 12172                           ;doprnt.c: 430: if(scl>=110)
 12173  0015D4  5195               	movf	scale@scl& (0+255),w,b
 12174  0015D6  0A80               	xorlw	128
 12175  0015D8  0F12               	addlw	-238
 12176  0015DA  A0D8               	btfss	status,0,c
 12177  0015DC  D097               	goto	l2443
 12178                           
 12179                           ; BSR set to: 0
 12180                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 12181  0015DE  0E00               	movlw	0
 12182  0015E0  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12183  0015E2  0E03               	movlw	3
 12184  0015E4  6F70               	movwf	___wmul@multiplicand& (0+255),b
 12185  0015E6  0E00               	movlw	0
 12186  0015E8  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 12187  0015EA  0E0A               	movlw	10
 12188  0015EC  6F68               	movwf	___awdiv@divisor& (0+255),b
 12189  0015EE  0E00               	movlw	0
 12190  0015F0  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 12191  0015F2  0E64               	movlw	100
 12192  0015F4  6F62               	movwf	___awmod@divisor& (0+255),b
 12193  0015F6  5195               	movf	scale@scl& (0+255),w,b
 12194  0015F8  6F60               	movwf	___awmod@dividend& (0+255),b
 12195  0015FA  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 12196  0015FC  BF60               	btfsc	___awmod@dividend& (0+255),7,b
 12197  0015FE  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
 12198  001600  EC83  F026         	call	___awmod	;wreg free
 12199  001604  C060  F066         	movff	?___awmod,___awdiv@dividend
 12200  001608  C061  F067         	movff	?___awmod+1,___awdiv@dividend+1
 12201  00160C  ECCB  F024         	call	___awdiv	;wreg free
 12202  001610  0E09               	movlw	9
 12203  001612  0100               	movlb	0	; () banked
 12204  001614  2566               	addwf	?___awdiv& (0+255),w,b
 12205  001616  6F6E               	movwf	___wmul@multiplier& (0+255),b
 12206  001618  0E00               	movlw	0
 12207  00161A  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 12208  00161C  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 12209  00161E  ECFE  F02A         	call	___wmul	;wreg free
 12210  001622  0E3E               	movlw	low __npowers_
 12211  001624  0100               	movlb	0	; () banked
 12212  001626  256E               	addwf	?___wmul& (0+255),w,b
 12213  001628  6EF6               	movwf	tblptrl,c
 12214  00162A  0E7C               	movlw	high __npowers_
 12215  00162C  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 12216  00162E  6EF7               	movwf	tblptrh,c
 12217  001630                     	if	0	;There are less than 3 active tblptr bytes
 12218  001630                     	endif
 12219  001630  0009               	tblrd		*+
 12220  001632  CFF5 F083          	movff	tablat,___ftmul@f2
 12221  001636  0009               	tblrd		*+
 12222  001638  CFF5 F084          	movff	tablat,___ftmul@f2+1
 12223  00163C  000A               	tblrd		*-
 12224  00163E  CFF5 F085          	movff	tablat,___ftmul@f2+2
 12225  001642  0E00               	movlw	0
 12226  001644  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 12227  001646  0E64               	movlw	100
 12228  001648  6F68               	movwf	___awdiv@divisor& (0+255),b
 12229  00164A  5195               	movf	scale@scl& (0+255),w,b
 12230  00164C  6F66               	movwf	___awdiv@dividend& (0+255),b
 12231  00164E  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
 12232  001650  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
 12233  001652  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
 12234  001654  ECCB  F024         	call	___awdiv	;wreg free
 12235  001658  0E12               	movlw	18
 12236  00165A  0100               	movlb	0	; () banked
 12237  00165C  2566               	addwf	?___awdiv& (0+255),w,b
 12238  00165E  6F6E               	movwf	___wmul@multiplier& (0+255),b
 12239  001660  0E00               	movlw	0
 12240  001662  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 12241  001664  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 12242  001666  0E00               	movlw	0
 12243  001668  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12244  00166A  0E03               	movlw	3
 12245  00166C  6F70               	movwf	___wmul@multiplicand& (0+255),b
 12246  00166E  ECFE  F02A         	call	___wmul	;wreg free
 12247  001672  0E3E               	movlw	low __npowers_
 12248  001674  0100               	movlb	0	; () banked
 12249  001676  256E               	addwf	?___wmul& (0+255),w,b
 12250  001678  6EF6               	movwf	tblptrl,c
 12251  00167A  0E7C               	movlw	high __npowers_
 12252  00167C  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 12253  00167E  6EF7               	movwf	tblptrh,c
 12254  001680                     	if	0	;There are less than 3 active tblptr bytes
 12255  001680                     	endif
 12256  001680  0009               	tblrd		*+
 12257  001682  CFF5 F080          	movff	tablat,___ftmul@f1
 12258  001686  0009               	tblrd		*+
 12259  001688  CFF5 F081          	movff	tablat,___ftmul@f1+1
 12260  00168C  000A               	tblrd		*-
 12261  00168E  CFF5 F082          	movff	tablat,___ftmul@f1+2
 12262  001692  EC38  F01D         	call	___ftmul	;wreg free
 12263  001696  C080  F092         	movff	?___ftmul,_scale$5824
 12264  00169A  C081  F093         	movff	?___ftmul+1,_scale$5824+1
 12265  00169E  C082  F094         	movff	?___ftmul+2,_scale$5824+2
 12266                           
 12267                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 12268  0016A2  C092  F080         	movff	_scale$5824,___ftmul@f1
 12269  0016A6  C093  F081         	movff	_scale$5824+1,___ftmul@f1+1
 12270  0016AA  C094  F082         	movff	_scale$5824+2,___ftmul@f1+2
 12271  0016AE  0E00               	movlw	0
 12272  0016B0  0100               	movlb	0	; () banked
 12273  0016B2  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12274  0016B4  0E03               	movlw	3
 12275  0016B6  6F70               	movwf	___wmul@multiplicand& (0+255),b
 12276  0016B8  0E00               	movlw	0
 12277  0016BA  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 12278  0016BC  0E0A               	movlw	10
 12279  0016BE  6F62               	movwf	___awmod@divisor& (0+255),b
 12280  0016C0  5195               	movf	scale@scl& (0+255),w,b
 12281  0016C2  6F60               	movwf	___awmod@dividend& (0+255),b
 12282  0016C4  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 12283  0016C6  BF60               	btfsc	___awmod@dividend& (0+255),7,b
 12284  0016C8  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
 12285  0016CA  EC83  F026         	call	___awmod	;wreg free
 12286  0016CE  C060  F06E         	movff	?___awmod,___wmul@multiplier
 12287  0016D2  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
 12288  0016D6  ECFE  F02A         	call	___wmul	;wreg free
 12289  0016DA  0E3E               	movlw	low __npowers_
 12290  0016DC  0100               	movlb	0	; () banked
 12291  0016DE  256E               	addwf	?___wmul& (0+255),w,b
 12292  0016E0  6EF6               	movwf	tblptrl,c
 12293  0016E2  0E7C               	movlw	high __npowers_
 12294  0016E4  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 12295  0016E6  6EF7               	movwf	tblptrh,c
 12296  0016E8                     	if	0	;There are less than 3 active tblptr bytes
 12297  0016E8                     	endif
 12298  0016E8  0009               	tblrd		*+
 12299  0016EA  CFF5 F083          	movff	tablat,___ftmul@f2
 12300  0016EE  0009               	tblrd		*+
 12301  0016F0  CFF5 F084          	movff	tablat,___ftmul@f2+1
 12302  0016F4  000A               	tblrd		*-
 12303  0016F6  CFF5 F085          	movff	tablat,___ftmul@f2+2
 12304  0016FA  EC38  F01D         	call	___ftmul	;wreg free
 12305  0016FE  C080  F08F         	movff	?___ftmul,?_scale
 12306  001702  C081  F090         	movff	?___ftmul+1,?_scale+1
 12307  001706  C082  F091         	movff	?___ftmul+2,?_scale+2
 12308  00170A  0012               	return	
 12309  00170C                     l2443:
 12310                           
 12311                           ;doprnt.c: 432: else if(scl > 10)
 12312  00170C  0100               	movlb	0	; () banked
 12313  00170E  5195               	movf	scale@scl& (0+255),w,b
 12314  001710  0A80               	xorlw	128
 12315  001712  0F75               	addlw	-139
 12316  001714  A0D8               	btfss	status,0,c
 12317  001716  D056               	goto	l2446
 12318                           
 12319                           ; BSR set to: 0
 12320                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 12321  001718  0E00               	movlw	0
 12322  00171A  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 12323  00171C  0E0A               	movlw	10
 12324  00171E  6F68               	movwf	___awdiv@divisor& (0+255),b
 12325  001720  5195               	movf	scale@scl& (0+255),w,b
 12326  001722  6F66               	movwf	___awdiv@dividend& (0+255),b
 12327  001724  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
 12328  001726  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
 12329  001728  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
 12330  00172A  ECCB  F024         	call	___awdiv	;wreg free
 12331  00172E  0E09               	movlw	9
 12332  001730  0100               	movlb	0	; () banked
 12333  001732  2566               	addwf	?___awdiv& (0+255),w,b
 12334  001734  6F6E               	movwf	___wmul@multiplier& (0+255),b
 12335  001736  0E00               	movlw	0
 12336  001738  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 12337  00173A  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 12338  00173C  0E00               	movlw	0
 12339  00173E  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12340  001740  0E03               	movlw	3
 12341  001742  6F70               	movwf	___wmul@multiplicand& (0+255),b
 12342  001744  ECFE  F02A         	call	___wmul	;wreg free
 12343  001748  0E3E               	movlw	low __npowers_
 12344  00174A  0100               	movlb	0	; () banked
 12345  00174C  256E               	addwf	?___wmul& (0+255),w,b
 12346  00174E  6EF6               	movwf	tblptrl,c
 12347  001750  0E7C               	movlw	high __npowers_
 12348  001752  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 12349  001754  6EF7               	movwf	tblptrh,c
 12350  001756                     	if	0	;There are less than 3 active tblptr bytes
 12351  001756                     	endif
 12352  001756  0009               	tblrd		*+
 12353  001758  CFF5 F080          	movff	tablat,___ftmul@f1
 12354  00175C  0009               	tblrd		*+
 12355  00175E  CFF5 F081          	movff	tablat,___ftmul@f1+1
 12356  001762  000A               	tblrd		*-
 12357  001764  CFF5 F082          	movff	tablat,___ftmul@f1+2
 12358  001768  0E00               	movlw	0
 12359  00176A  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12360  00176C  0E03               	movlw	3
 12361  00176E  6F70               	movwf	___wmul@multiplicand& (0+255),b
 12362  001770  0E00               	movlw	0
 12363  001772  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 12364  001774  0E0A               	movlw	10
 12365  001776  6F62               	movwf	___awmod@divisor& (0+255),b
 12366  001778  5195               	movf	scale@scl& (0+255),w,b
 12367  00177A  6F60               	movwf	___awmod@dividend& (0+255),b
 12368  00177C  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 12369  00177E  BF60               	btfsc	___awmod@dividend& (0+255),7,b
 12370  001780  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
 12371  001782  EC83  F026         	call	___awmod	;wreg free
 12372  001786  C060  F06E         	movff	?___awmod,___wmul@multiplier
 12373  00178A  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
 12374  00178E  ECFE  F02A         	call	___wmul	;wreg free
 12375  001792  0E3E               	movlw	low __npowers_
 12376  001794  0100               	movlb	0	; () banked
 12377  001796  256E               	addwf	?___wmul& (0+255),w,b
 12378  001798  6EF6               	movwf	tblptrl,c
 12379  00179A  0E7C               	movlw	high __npowers_
 12380  00179C  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 12381  00179E  6EF7               	movwf	tblptrh,c
 12382  0017A0                     	if	0	;There are less than 3 active tblptr bytes
 12383  0017A0                     	endif
 12384  0017A0  0009               	tblrd		*+
 12385  0017A2  CFF5 F083          	movff	tablat,___ftmul@f2
 12386  0017A6  0009               	tblrd		*+
 12387  0017A8  CFF5 F084          	movff	tablat,___ftmul@f2+1
 12388  0017AC  000A               	tblrd		*-
 12389  0017AE  CFF5 F085          	movff	tablat,___ftmul@f2+2
 12390  0017B2  EC38  F01D         	call	___ftmul	;wreg free
 12391  0017B6  C080  F08F         	movff	?___ftmul,?_scale
 12392  0017BA  C081  F090         	movff	?___ftmul+1,?_scale+1
 12393  0017BE  C082  F091         	movff	?___ftmul+2,?_scale+2
 12394  0017C2  0012               	return	
 12395  0017C4                     l2446:
 12396                           
 12397                           ;doprnt.c: 434: return _npowers_[scl];
 12398  0017C4  0100               	movlb	0	; () banked
 12399  0017C6  5195               	movf	scale@scl& (0+255),w,b
 12400  0017C8  0D03               	mullw	3
 12401  0017CA  0E3E               	movlw	low __npowers_
 12402  0017CC  24F3               	addwf	prodl,w,c
 12403  0017CE  6EF6               	movwf	tblptrl,c
 12404  0017D0  0E7C               	movlw	high __npowers_
 12405  0017D2  20F4               	addwfc	prodh,w,c
 12406  0017D4  6EF7               	movwf	tblptrh,c
 12407  0017D6                     	if	0	;There are less than 3 active tblptr bytes
 12408  0017D6                     	endif
 12409  0017D6  0009               	tblrd		*+
 12410  0017D8  CFF5 F08F          	movff	tablat,?_scale
 12411  0017DC  0009               	tblrd		*+
 12412  0017DE  CFF5 F090          	movff	tablat,?_scale+1
 12413  0017E2  000A               	tblrd		*-
 12414  0017E4  CFF5 F091          	movff	tablat,?_scale+2
 12415                           
 12416                           ; BSR set to: 0
 12417  0017E8  0012               	return	
 12418  0017EA                     l2442:
 12419                           
 12420                           ; BSR set to: 0
 12421                           ;doprnt.c: 435: }
 12422                           ;doprnt.c: 436: if(scl>=110)
 12423                           
 12424                           ; BSR set to: 0
 12425  0017EA  5195               	movf	scale@scl& (0+255),w,b
 12426  0017EC  0A80               	xorlw	128
 12427  0017EE  0F12               	addlw	-238
 12428  0017F0  A0D8               	btfss	status,0,c
 12429  0017F2  D097               	goto	l2447
 12430                           
 12431                           ; BSR set to: 0
 12432                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 12433  0017F4  0E00               	movlw	0
 12434  0017F6  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12435  0017F8  0E03               	movlw	3
 12436  0017FA  6F70               	movwf	___wmul@multiplicand& (0+255),b
 12437  0017FC  0E00               	movlw	0
 12438  0017FE  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 12439  001800  0E0A               	movlw	10
 12440  001802  6F68               	movwf	___awdiv@divisor& (0+255),b
 12441  001804  0E00               	movlw	0
 12442  001806  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 12443  001808  0E64               	movlw	100
 12444  00180A  6F62               	movwf	___awmod@divisor& (0+255),b
 12445  00180C  5195               	movf	scale@scl& (0+255),w,b
 12446  00180E  6F60               	movwf	___awmod@dividend& (0+255),b
 12447  001810  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 12448  001812  BF60               	btfsc	___awmod@dividend& (0+255),7,b
 12449  001814  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
 12450  001816  EC83  F026         	call	___awmod	;wreg free
 12451  00181A  C060  F066         	movff	?___awmod,___awdiv@dividend
 12452  00181E  C061  F067         	movff	?___awmod+1,___awdiv@dividend+1
 12453  001822  ECCB  F024         	call	___awdiv	;wreg free
 12454  001826  0E09               	movlw	9
 12455  001828  0100               	movlb	0	; () banked
 12456  00182A  2566               	addwf	?___awdiv& (0+255),w,b
 12457  00182C  6F6E               	movwf	___wmul@multiplier& (0+255),b
 12458  00182E  0E00               	movlw	0
 12459  001830  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 12460  001832  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 12461  001834  ECFE  F02A         	call	___wmul	;wreg free
 12462  001838  0E17               	movlw	low __powers_
 12463  00183A  0100               	movlb	0	; () banked
 12464  00183C  256E               	addwf	?___wmul& (0+255),w,b
 12465  00183E  6EF6               	movwf	tblptrl,c
 12466  001840  0E7C               	movlw	high __powers_
 12467  001842  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 12468  001844  6EF7               	movwf	tblptrh,c
 12469  001846                     	if	0	;There are less than 3 active tblptr bytes
 12470  001846                     	endif
 12471  001846  0009               	tblrd		*+
 12472  001848  CFF5 F083          	movff	tablat,___ftmul@f2
 12473  00184C  0009               	tblrd		*+
 12474  00184E  CFF5 F084          	movff	tablat,___ftmul@f2+1
 12475  001852  000A               	tblrd		*-
 12476  001854  CFF5 F085          	movff	tablat,___ftmul@f2+2
 12477  001858  0E00               	movlw	0
 12478  00185A  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 12479  00185C  0E64               	movlw	100
 12480  00185E  6F68               	movwf	___awdiv@divisor& (0+255),b
 12481  001860  5195               	movf	scale@scl& (0+255),w,b
 12482  001862  6F66               	movwf	___awdiv@dividend& (0+255),b
 12483  001864  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
 12484  001866  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
 12485  001868  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
 12486  00186A  ECCB  F024         	call	___awdiv	;wreg free
 12487  00186E  0E12               	movlw	18
 12488  001870  0100               	movlb	0	; () banked
 12489  001872  2566               	addwf	?___awdiv& (0+255),w,b
 12490  001874  6F6E               	movwf	___wmul@multiplier& (0+255),b
 12491  001876  0E00               	movlw	0
 12492  001878  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 12493  00187A  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 12494  00187C  0E00               	movlw	0
 12495  00187E  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12496  001880  0E03               	movlw	3
 12497  001882  6F70               	movwf	___wmul@multiplicand& (0+255),b
 12498  001884  ECFE  F02A         	call	___wmul	;wreg free
 12499  001888  0E17               	movlw	low __powers_
 12500  00188A  0100               	movlb	0	; () banked
 12501  00188C  256E               	addwf	?___wmul& (0+255),w,b
 12502  00188E  6EF6               	movwf	tblptrl,c
 12503  001890  0E7C               	movlw	high __powers_
 12504  001892  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 12505  001894  6EF7               	movwf	tblptrh,c
 12506  001896                     	if	0	;There are less than 3 active tblptr bytes
 12507  001896                     	endif
 12508  001896  0009               	tblrd		*+
 12509  001898  CFF5 F080          	movff	tablat,___ftmul@f1
 12510  00189C  0009               	tblrd		*+
 12511  00189E  CFF5 F081          	movff	tablat,___ftmul@f1+1
 12512  0018A2  000A               	tblrd		*-
 12513  0018A4  CFF5 F082          	movff	tablat,___ftmul@f1+2
 12514  0018A8  EC38  F01D         	call	___ftmul	;wreg free
 12515  0018AC  C080  F092         	movff	?___ftmul,_scale$5824
 12516  0018B0  C081  F093         	movff	?___ftmul+1,_scale$5824+1
 12517  0018B4  C082  F094         	movff	?___ftmul+2,_scale$5824+2
 12518                           
 12519                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 12520  0018B8  C092  F080         	movff	_scale$5824,___ftmul@f1
 12521  0018BC  C093  F081         	movff	_scale$5824+1,___ftmul@f1+1
 12522  0018C0  C094  F082         	movff	_scale$5824+2,___ftmul@f1+2
 12523  0018C4  0E00               	movlw	0
 12524  0018C6  0100               	movlb	0	; () banked
 12525  0018C8  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12526  0018CA  0E03               	movlw	3
 12527  0018CC  6F70               	movwf	___wmul@multiplicand& (0+255),b
 12528  0018CE  0E00               	movlw	0
 12529  0018D0  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 12530  0018D2  0E0A               	movlw	10
 12531  0018D4  6F62               	movwf	___awmod@divisor& (0+255),b
 12532  0018D6  5195               	movf	scale@scl& (0+255),w,b
 12533  0018D8  6F60               	movwf	___awmod@dividend& (0+255),b
 12534  0018DA  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 12535  0018DC  BF60               	btfsc	___awmod@dividend& (0+255),7,b
 12536  0018DE  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
 12537  0018E0  EC83  F026         	call	___awmod	;wreg free
 12538  0018E4  C060  F06E         	movff	?___awmod,___wmul@multiplier
 12539  0018E8  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
 12540  0018EC  ECFE  F02A         	call	___wmul	;wreg free
 12541  0018F0  0E17               	movlw	low __powers_
 12542  0018F2  0100               	movlb	0	; () banked
 12543  0018F4  256E               	addwf	?___wmul& (0+255),w,b
 12544  0018F6  6EF6               	movwf	tblptrl,c
 12545  0018F8  0E7C               	movlw	high __powers_
 12546  0018FA  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 12547  0018FC  6EF7               	movwf	tblptrh,c
 12548  0018FE                     	if	0	;There are less than 3 active tblptr bytes
 12549  0018FE                     	endif
 12550  0018FE  0009               	tblrd		*+
 12551  001900  CFF5 F083          	movff	tablat,___ftmul@f2
 12552  001904  0009               	tblrd		*+
 12553  001906  CFF5 F084          	movff	tablat,___ftmul@f2+1
 12554  00190A  000A               	tblrd		*-
 12555  00190C  CFF5 F085          	movff	tablat,___ftmul@f2+2
 12556  001910  EC38  F01D         	call	___ftmul	;wreg free
 12557  001914  C080  F08F         	movff	?___ftmul,?_scale
 12558  001918  C081  F090         	movff	?___ftmul+1,?_scale+1
 12559  00191C  C082  F091         	movff	?___ftmul+2,?_scale+2
 12560  001920  0012               	return	
 12561  001922                     l2447:
 12562                           
 12563                           ;doprnt.c: 438: else if(scl > 10)
 12564  001922  0100               	movlb	0	; () banked
 12565  001924  5195               	movf	scale@scl& (0+255),w,b
 12566  001926  0A80               	xorlw	128
 12567  001928  0F75               	addlw	-139
 12568  00192A  A0D8               	btfss	status,0,c
 12569  00192C  D056               	goto	l2449
 12570                           
 12571                           ; BSR set to: 0
 12572                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 12573  00192E  0E00               	movlw	0
 12574  001930  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 12575  001932  0E0A               	movlw	10
 12576  001934  6F68               	movwf	___awdiv@divisor& (0+255),b
 12577  001936  5195               	movf	scale@scl& (0+255),w,b
 12578  001938  6F66               	movwf	___awdiv@dividend& (0+255),b
 12579  00193A  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
 12580  00193C  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
 12581  00193E  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
 12582  001940  ECCB  F024         	call	___awdiv	;wreg free
 12583  001944  0E09               	movlw	9
 12584  001946  0100               	movlb	0	; () banked
 12585  001948  2566               	addwf	?___awdiv& (0+255),w,b
 12586  00194A  6F6E               	movwf	___wmul@multiplier& (0+255),b
 12587  00194C  0E00               	movlw	0
 12588  00194E  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 12589  001950  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 12590  001952  0E00               	movlw	0
 12591  001954  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12592  001956  0E03               	movlw	3
 12593  001958  6F70               	movwf	___wmul@multiplicand& (0+255),b
 12594  00195A  ECFE  F02A         	call	___wmul	;wreg free
 12595  00195E  0E17               	movlw	low __powers_
 12596  001960  0100               	movlb	0	; () banked
 12597  001962  256E               	addwf	?___wmul& (0+255),w,b
 12598  001964  6EF6               	movwf	tblptrl,c
 12599  001966  0E7C               	movlw	high __powers_
 12600  001968  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 12601  00196A  6EF7               	movwf	tblptrh,c
 12602  00196C                     	if	0	;There are less than 3 active tblptr bytes
 12603  00196C                     	endif
 12604  00196C  0009               	tblrd		*+
 12605  00196E  CFF5 F080          	movff	tablat,___ftmul@f1
 12606  001972  0009               	tblrd		*+
 12607  001974  CFF5 F081          	movff	tablat,___ftmul@f1+1
 12608  001978  000A               	tblrd		*-
 12609  00197A  CFF5 F082          	movff	tablat,___ftmul@f1+2
 12610  00197E  0E00               	movlw	0
 12611  001980  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12612  001982  0E03               	movlw	3
 12613  001984  6F70               	movwf	___wmul@multiplicand& (0+255),b
 12614  001986  0E00               	movlw	0
 12615  001988  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 12616  00198A  0E0A               	movlw	10
 12617  00198C  6F62               	movwf	___awmod@divisor& (0+255),b
 12618  00198E  5195               	movf	scale@scl& (0+255),w,b
 12619  001990  6F60               	movwf	___awmod@dividend& (0+255),b
 12620  001992  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 12621  001994  BF60               	btfsc	___awmod@dividend& (0+255),7,b
 12622  001996  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
 12623  001998  EC83  F026         	call	___awmod	;wreg free
 12624  00199C  C060  F06E         	movff	?___awmod,___wmul@multiplier
 12625  0019A0  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
 12626  0019A4  ECFE  F02A         	call	___wmul	;wreg free
 12627  0019A8  0E17               	movlw	low __powers_
 12628  0019AA  0100               	movlb	0	; () banked
 12629  0019AC  256E               	addwf	?___wmul& (0+255),w,b
 12630  0019AE  6EF6               	movwf	tblptrl,c
 12631  0019B0  0E7C               	movlw	high __powers_
 12632  0019B2  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 12633  0019B4  6EF7               	movwf	tblptrh,c
 12634  0019B6                     	if	0	;There are less than 3 active tblptr bytes
 12635  0019B6                     	endif
 12636  0019B6  0009               	tblrd		*+
 12637  0019B8  CFF5 F083          	movff	tablat,___ftmul@f2
 12638  0019BC  0009               	tblrd		*+
 12639  0019BE  CFF5 F084          	movff	tablat,___ftmul@f2+1
 12640  0019C2  000A               	tblrd		*-
 12641  0019C4  CFF5 F085          	movff	tablat,___ftmul@f2+2
 12642  0019C8  EC38  F01D         	call	___ftmul	;wreg free
 12643  0019CC  C080  F08F         	movff	?___ftmul,?_scale
 12644  0019D0  C081  F090         	movff	?___ftmul+1,?_scale+1
 12645  0019D4  C082  F091         	movff	?___ftmul+2,?_scale+2
 12646  0019D8  0012               	return	
 12647  0019DA                     l2449:
 12648                           
 12649                           ;doprnt.c: 440: return _powers_[scl];
 12650  0019DA  0100               	movlb	0	; () banked
 12651  0019DC  5195               	movf	scale@scl& (0+255),w,b
 12652  0019DE  0D03               	mullw	3
 12653  0019E0  0E17               	movlw	low __powers_
 12654  0019E2  24F3               	addwf	prodl,w,c
 12655  0019E4  6EF6               	movwf	tblptrl,c
 12656  0019E6  0E7C               	movlw	high __powers_
 12657  0019E8  20F4               	addwfc	prodh,w,c
 12658  0019EA  6EF7               	movwf	tblptrh,c
 12659  0019EC                     	if	0	;There are less than 3 active tblptr bytes
 12660  0019EC                     	endif
 12661  0019EC  0009               	tblrd		*+
 12662  0019EE  CFF5 F08F          	movff	tablat,?_scale
 12663  0019F2  0009               	tblrd		*+
 12664  0019F4  CFF5 F090          	movff	tablat,?_scale+1
 12665  0019F8  000A               	tblrd		*-
 12666  0019FA  CFF5 F091          	movff	tablat,?_scale+2
 12667  0019FE  0012               	return	
 12668  001A00                     __end_of_scale:
 12669                           	opt stack 0
 12670                           tblptru	equ	0xFF8
 12671                           tblptrh	equ	0xFF7
 12672                           tblptrl	equ	0xFF6
 12673                           tablat	equ	0xFF5
 12674                           prodh	equ	0xFF4
 12675                           prodl	equ	0xFF3
 12676                           intcon	equ	0xFF2
 12677                           postinc0	equ	0xFEE
 12678                           wreg	equ	0xFE8
 12679                           indf1	equ	0xFE7
 12680                           postdec1	equ	0xFE5
 12681                           fsr1h	equ	0xFE2
 12682                           fsr1l	equ	0xFE1
 12683                           indf2	equ	0xFDF
 12684                           postinc2	equ	0xFDE
 12685                           postdec2	equ	0xFDD
 12686                           plusw2	equ	0xFDB
 12687                           fsr2h	equ	0xFDA
 12688                           fsr2l	equ	0xFD9
 12689                           status	equ	0xFD8
 12690                           
 12691 ;; *************** function _isdigit *****************
 12692 ;; Defined at:
 12693 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\isdigit.c"
 12694 ;; Parameters:    Size  Location     Type
 12695 ;;  c               1    wreg     unsigned char 
 12696 ;; Auto vars:     Size  Location     Type
 12697 ;;  c               1    2[BANK0 ] unsigned char 
 12698 ;; Return value:  Size  Location     Type
 12699 ;;		None               void
 12700 ;; Registers used:
 12701 ;;		wreg, status,2, status,0
 12702 ;; Tracked objects:
 12703 ;;		On entry : 0/0
 12704 ;;		On exit  : 0/0
 12705 ;;		Unchanged: 0/0
 12706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12707 ;;      Params:         0       0       0       0       0       0       0       0       0
 12708 ;;      Locals:         0       2       0       0       0       0       0       0       0
 12709 ;;      Temps:          0       1       0       0       0       0       0       0       0
 12710 ;;      Totals:         0       3       0       0       0       0       0       0       0
 12711 ;;Total ram usage:        3 bytes
 12712 ;; Hardware stack levels used:    1
 12713 ;; Hardware stack levels required when called:   10
 12714 ;; This function calls:
 12715 ;;		Nothing
 12716 ;; This function is called by:
 12717 ;;		_sprintf
 12718 ;; This function uses a non-reentrant model
 12719 ;;
 12720                           
 12721                           	psect	text35
 12722  0056E0                     __ptext35:
 12723                           	opt stack 0
 12724  0056E0                     _isdigit:
 12725                           	opt stack 19
 12726                           
 12727                           ;incstack = 0
 12728                           ;isdigit@c stored from wreg
 12729  0056E0  0100               	movlb	0	; () banked
 12730  0056E2  6F62               	movwf	isdigit@c& (0+255),b
 12731  0056E4  0E00               	movlw	0
 12732  0056E6  0100               	movlb	0	; () banked
 12733  0056E8  6F61               	movwf	_isdigit$5257& (0+255),b
 12734                           
 12735                           ; BSR set to: 0
 12736  0056EA  0E3A               	movlw	58
 12737  0056EC  6162               	cpfslt	isdigit@c& (0+255),b
 12738  0056EE  D005               	goto	l2960
 12739                           
 12740                           ; BSR set to: 0
 12741  0056F0  0E2F               	movlw	47
 12742  0056F2  6562               	cpfsgt	isdigit@c& (0+255),b
 12743  0056F4  D002               	goto	l2960
 12744                           
 12745                           ; BSR set to: 0
 12746  0056F6  0E01               	movlw	1
 12747  0056F8  6F61               	movwf	_isdigit$5257& (0+255),b
 12748  0056FA                     l2960:
 12749                           
 12750                           ; BSR set to: 0
 12751                           
 12752                           ; BSR set to: 0
 12753  0056FA  C061  F060         	movff	_isdigit$5257,??_isdigit
 12754  0056FE  3160               	rrcf	??_isdigit& (0+255),w,b
 12755  005700  0012               	return	
 12756  005702                     __end_of_isdigit:
 12757                           	opt stack 0
 12758                           tblptru	equ	0xFF8
 12759                           tblptrh	equ	0xFF7
 12760                           tblptrl	equ	0xFF6
 12761                           tablat	equ	0xFF5
 12762                           prodh	equ	0xFF4
 12763                           prodl	equ	0xFF3
 12764                           intcon	equ	0xFF2
 12765                           postinc0	equ	0xFEE
 12766                           wreg	equ	0xFE8
 12767                           indf1	equ	0xFE7
 12768                           postdec1	equ	0xFE5
 12769                           fsr1h	equ	0xFE2
 12770                           fsr1l	equ	0xFE1
 12771                           indf2	equ	0xFDF
 12772                           postinc2	equ	0xFDE
 12773                           postdec2	equ	0xFDD
 12774                           plusw2	equ	0xFDB
 12775                           fsr2h	equ	0xFDA
 12776                           fsr2l	equ	0xFD9
 12777                           status	equ	0xFD8
 12778                           
 12779 ;; *************** function _fround *****************
 12780 ;; Defined at:
 12781 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\doprnt.c"
 12782 ;; Parameters:    Size  Location     Type
 12783 ;;  prec            1    wreg     unsigned char 
 12784 ;; Auto vars:     Size  Location     Type
 12785 ;;  prec            1   56[BANK0 ] unsigned char 
 12786 ;; Return value:  Size  Location     Type
 12787 ;;                  3   47[BANK0 ] unsigned char 
 12788 ;; Registers used:
 12789 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12790 ;; Tracked objects:
 12791 ;;		On entry : 0/0
 12792 ;;		On exit  : 0/0
 12793 ;;		Unchanged: 0/0
 12794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12795 ;;      Params:         0       3       0       0       0       0       0       0       0
 12796 ;;      Locals:         0       7       0       0       0       0       0       0       0
 12797 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12798 ;;      Totals:         0      10       0       0       0       0       0       0       0
 12799 ;;Total ram usage:       10 bytes
 12800 ;; Hardware stack levels used:    1
 12801 ;; Hardware stack levels required when called:   12
 12802 ;; This function calls:
 12803 ;;		___awdiv
 12804 ;;		___awmod
 12805 ;;		___ftmul
 12806 ;;		___wmul
 12807 ;; This function is called by:
 12808 ;;		_sprintf
 12809 ;; This function uses a non-reentrant model
 12810 ;;
 12811                           
 12812                           	psect	text36
 12813  0022D8                     __ptext36:
 12814                           	opt stack 0
 12815  0022D8                     _fround:
 12816                           	opt stack 17
 12817                           
 12818                           ; BSR set to: 0
 12819                           ;incstack = 0
 12820                           ;fround@prec stored from wreg
 12821  0022D8  0100               	movlb	0	; () banked
 12822  0022DA  6F98               	movwf	fround@prec& (0+255),b
 12823                           
 12824                           ;doprnt.c: 413: if(prec>=110)
 12825  0022DC  0E6D               	movlw	109
 12826  0022DE  0100               	movlb	0	; () banked
 12827  0022E0  6598               	cpfsgt	fround@prec& (0+255),b
 12828  0022E2  D0A6               	goto	l2436
 12829                           
 12830                           ; BSR set to: 0
 12831                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 12832  0022E4  0E00               	movlw	0
 12833  0022E6  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12834  0022E8  0E03               	movlw	3
 12835  0022EA  6F70               	movwf	___wmul@multiplicand& (0+255),b
 12836  0022EC  0E00               	movlw	0
 12837  0022EE  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 12838  0022F0  0E0A               	movlw	10
 12839  0022F2  6F68               	movwf	___awdiv@divisor& (0+255),b
 12840  0022F4  0E00               	movlw	0
 12841  0022F6  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 12842  0022F8  0E64               	movlw	100
 12843  0022FA  6F62               	movwf	___awmod@divisor& (0+255),b
 12844  0022FC  C098  F060         	movff	fround@prec,___awmod@dividend
 12845  002300  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 12846  002302  EC83  F026         	call	___awmod	;wreg free
 12847  002306  C060  F066         	movff	?___awmod,___awdiv@dividend
 12848  00230A  C061  F067         	movff	?___awmod+1,___awdiv@dividend+1
 12849  00230E  ECCB  F024         	call	___awdiv	;wreg free
 12850  002312  0E09               	movlw	9
 12851  002314  0100               	movlb	0	; () banked
 12852  002316  2566               	addwf	?___awdiv& (0+255),w,b
 12853  002318  6F6E               	movwf	___wmul@multiplier& (0+255),b
 12854  00231A  0E00               	movlw	0
 12855  00231C  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 12856  00231E  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 12857  002320  ECFE  F02A         	call	___wmul	;wreg free
 12858  002324  0E3E               	movlw	low __npowers_
 12859  002326  0100               	movlb	0	; () banked
 12860  002328  256E               	addwf	?___wmul& (0+255),w,b
 12861  00232A  6EF6               	movwf	tblptrl,c
 12862  00232C  0E7C               	movlw	high __npowers_
 12863  00232E  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 12864  002330  6EF7               	movwf	tblptrh,c
 12865  002332                     	if	0	;There are less than 3 active tblptr bytes
 12866  002332                     	endif
 12867  002332  0009               	tblrd		*+
 12868  002334  CFF5 F083          	movff	tablat,___ftmul@f2
 12869  002338  0009               	tblrd		*+
 12870  00233A  CFF5 F084          	movff	tablat,___ftmul@f2+1
 12871  00233E  000A               	tblrd		*-
 12872  002340  CFF5 F085          	movff	tablat,___ftmul@f2+2
 12873  002344  0E00               	movlw	0
 12874  002346  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 12875  002348  0E64               	movlw	100
 12876  00234A  6F68               	movwf	___awdiv@divisor& (0+255),b
 12877  00234C  C098  F066         	movff	fround@prec,___awdiv@dividend
 12878  002350  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
 12879  002352  ECCB  F024         	call	___awdiv	;wreg free
 12880  002356  0E12               	movlw	18
 12881  002358  0100               	movlb	0	; () banked
 12882  00235A  2566               	addwf	?___awdiv& (0+255),w,b
 12883  00235C  6F6E               	movwf	___wmul@multiplier& (0+255),b
 12884  00235E  0E00               	movlw	0
 12885  002360  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 12886  002362  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 12887  002364  0E00               	movlw	0
 12888  002366  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12889  002368  0E03               	movlw	3
 12890  00236A  6F70               	movwf	___wmul@multiplicand& (0+255),b
 12891  00236C  ECFE  F02A         	call	___wmul	;wreg free
 12892  002370  0E3E               	movlw	low __npowers_
 12893  002372  0100               	movlb	0	; () banked
 12894  002374  256E               	addwf	?___wmul& (0+255),w,b
 12895  002376  6EF6               	movwf	tblptrl,c
 12896  002378  0E7C               	movlw	high __npowers_
 12897  00237A  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 12898  00237C  6EF7               	movwf	tblptrh,c
 12899  00237E                     	if	0	;There are less than 3 active tblptr bytes
 12900  00237E                     	endif
 12901  00237E  0009               	tblrd		*+
 12902  002380  CFF5 F080          	movff	tablat,___ftmul@f1
 12903  002384  0009               	tblrd		*+
 12904  002386  CFF5 F081          	movff	tablat,___ftmul@f1+1
 12905  00238A  000A               	tblrd		*-
 12906  00238C  CFF5 F082          	movff	tablat,___ftmul@f1+2
 12907  002390  EC38  F01D         	call	___ftmul	;wreg free
 12908  002394  C080  F095         	movff	?___ftmul,_fround$5822
 12909  002398  C081  F096         	movff	?___ftmul+1,_fround$5822+1
 12910  00239C  C082  F097         	movff	?___ftmul+2,_fround$5822+2
 12911                           
 12912                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 12913  0023A0  0E00               	movlw	0
 12914  0023A2  0100               	movlb	0	; () banked
 12915  0023A4  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12916  0023A6  0E03               	movlw	3
 12917  0023A8  6F70               	movwf	___wmul@multiplicand& (0+255),b
 12918  0023AA  0E00               	movlw	0
 12919  0023AC  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 12920  0023AE  0E0A               	movlw	10
 12921  0023B0  6F62               	movwf	___awmod@divisor& (0+255),b
 12922  0023B2  C098  F060         	movff	fround@prec,___awmod@dividend
 12923  0023B6  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 12924  0023B8  EC83  F026         	call	___awmod	;wreg free
 12925  0023BC  C060  F06E         	movff	?___awmod,___wmul@multiplier
 12926  0023C0  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
 12927  0023C4  ECFE  F02A         	call	___wmul	;wreg free
 12928  0023C8  0E3E               	movlw	low __npowers_
 12929  0023CA  0100               	movlb	0	; () banked
 12930  0023CC  256E               	addwf	?___wmul& (0+255),w,b
 12931  0023CE  6EF6               	movwf	tblptrl,c
 12932  0023D0  0E7C               	movlw	high __npowers_
 12933  0023D2  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 12934  0023D4  6EF7               	movwf	tblptrh,c
 12935  0023D6                     	if	0	;There are less than 3 active tblptr bytes
 12936  0023D6                     	endif
 12937  0023D6  0009               	tblrd		*+
 12938  0023D8  CFF5 F083          	movff	tablat,___ftmul@f2
 12939  0023DC  0009               	tblrd		*+
 12940  0023DE  CFF5 F084          	movff	tablat,___ftmul@f2+1
 12941  0023E2  000A               	tblrd		*-
 12942  0023E4  CFF5 F085          	movff	tablat,___ftmul@f2+2
 12943  0023E8  C095  F080         	movff	_fround$5822,___ftmul@f1
 12944  0023EC  C096  F081         	movff	_fround$5822+1,___ftmul@f1+1
 12945  0023F0  C097  F082         	movff	_fround$5822+2,___ftmul@f1+2
 12946  0023F4  EC38  F01D         	call	___ftmul	;wreg free
 12947  0023F8  C080  F092         	movff	?___ftmul,_fround$5823
 12948  0023FC  C081  F093         	movff	?___ftmul+1,_fround$5823+1
 12949  002400  C082  F094         	movff	?___ftmul+2,_fround$5823+2
 12950                           
 12951                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 12952  002404  C092  F080         	movff	_fround$5823,___ftmul@f1
 12953  002408  C093  F081         	movff	_fround$5823+1,___ftmul@f1+1
 12954  00240C  C094  F082         	movff	_fround$5823+2,___ftmul@f1+2
 12955  002410  0E00               	movlw	0
 12956  002412  0100               	movlb	0	; () banked
 12957  002414  6F83               	movwf	___ftmul@f2& (0+255),b
 12958  002416  0E00               	movlw	0
 12959  002418  6F84               	movwf	(___ftmul@f2+1)& (0+255),b
 12960  00241A  0E3F               	movlw	63
 12961  00241C  6F85               	movwf	(___ftmul@f2+2)& (0+255),b
 12962  00241E  EC38  F01D         	call	___ftmul	;wreg free
 12963  002422  C080  F08F         	movff	?___ftmul,?_fround
 12964  002426  C081  F090         	movff	?___ftmul+1,?_fround+1
 12965  00242A  C082  F091         	movff	?___ftmul+2,?_fround+2
 12966  00242E  0012               	return	
 12967  002430                     l2436:
 12968                           
 12969                           ;doprnt.c: 415: else if(prec > 10)
 12970  002430  0E0A               	movlw	10
 12971  002432  0100               	movlb	0	; () banked
 12972  002434  6598               	cpfsgt	fround@prec& (0+255),b
 12973  002436  D067               	goto	l2439
 12974                           
 12975                           ; BSR set to: 0
 12976                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 12977  002438  0E00               	movlw	0
 12978  00243A  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12979  00243C  0E03               	movlw	3
 12980  00243E  6F70               	movwf	___wmul@multiplicand& (0+255),b
 12981  002440  0E00               	movlw	0
 12982  002442  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 12983  002444  0E0A               	movlw	10
 12984  002446  6F62               	movwf	___awmod@divisor& (0+255),b
 12985  002448  C098  F060         	movff	fround@prec,___awmod@dividend
 12986  00244C  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 12987  00244E  EC83  F026         	call	___awmod	;wreg free
 12988  002452  C060  F06E         	movff	?___awmod,___wmul@multiplier
 12989  002456  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
 12990  00245A  ECFE  F02A         	call	___wmul	;wreg free
 12991  00245E  0E3E               	movlw	low __npowers_
 12992  002460  0100               	movlb	0	; () banked
 12993  002462  256E               	addwf	?___wmul& (0+255),w,b
 12994  002464  6EF6               	movwf	tblptrl,c
 12995  002466  0E7C               	movlw	high __npowers_
 12996  002468  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 12997  00246A  6EF7               	movwf	tblptrh,c
 12998  00246C                     	if	0	;There are less than 3 active tblptr bytes
 12999  00246C                     	endif
 13000  00246C  0009               	tblrd		*+
 13001  00246E  CFF5 F083          	movff	tablat,___ftmul@f2
 13002  002472  0009               	tblrd		*+
 13003  002474  CFF5 F084          	movff	tablat,___ftmul@f2+1
 13004  002478  000A               	tblrd		*-
 13005  00247A  CFF5 F085          	movff	tablat,___ftmul@f2+2
 13006  00247E  0E00               	movlw	0
 13007  002480  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 13008  002482  0E0A               	movlw	10
 13009  002484  6F68               	movwf	___awdiv@divisor& (0+255),b
 13010  002486  C098  F066         	movff	fround@prec,___awdiv@dividend
 13011  00248A  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
 13012  00248C  ECCB  F024         	call	___awdiv	;wreg free
 13013  002490  0E09               	movlw	9
 13014  002492  0100               	movlb	0	; () banked
 13015  002494  2566               	addwf	?___awdiv& (0+255),w,b
 13016  002496  6F6E               	movwf	___wmul@multiplier& (0+255),b
 13017  002498  0E00               	movlw	0
 13018  00249A  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 13019  00249C  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 13020  00249E  0E00               	movlw	0
 13021  0024A0  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 13022  0024A2  0E03               	movlw	3
 13023  0024A4  6F70               	movwf	___wmul@multiplicand& (0+255),b
 13024  0024A6  ECFE  F02A         	call	___wmul	;wreg free
 13025  0024AA  0E3E               	movlw	low __npowers_
 13026  0024AC  0100               	movlb	0	; () banked
 13027  0024AE  256E               	addwf	?___wmul& (0+255),w,b
 13028  0024B0  6EF6               	movwf	tblptrl,c
 13029  0024B2  0E7C               	movlw	high __npowers_
 13030  0024B4  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 13031  0024B6  6EF7               	movwf	tblptrh,c
 13032  0024B8                     	if	0	;There are less than 3 active tblptr bytes
 13033  0024B8                     	endif
 13034  0024B8  0009               	tblrd		*+
 13035  0024BA  CFF5 F080          	movff	tablat,___ftmul@f1
 13036  0024BE  0009               	tblrd		*+
 13037  0024C0  CFF5 F081          	movff	tablat,___ftmul@f1+1
 13038  0024C4  000A               	tblrd		*-
 13039  0024C6  CFF5 F082          	movff	tablat,___ftmul@f1+2
 13040  0024CA  EC38  F01D         	call	___ftmul	;wreg free
 13041  0024CE  C080  F095         	movff	?___ftmul,_fround$5822
 13042  0024D2  C081  F096         	movff	?___ftmul+1,_fround$5822+1
 13043  0024D6  C082  F097         	movff	?___ftmul+2,_fround$5822+2
 13044                           
 13045                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 13046  0024DA  C095  F080         	movff	_fround$5822,___ftmul@f1
 13047  0024DE  C096  F081         	movff	_fround$5822+1,___ftmul@f1+1
 13048  0024E2  C097  F082         	movff	_fround$5822+2,___ftmul@f1+2
 13049  0024E6  0E00               	movlw	0
 13050  0024E8  0100               	movlb	0	; () banked
 13051  0024EA  6F83               	movwf	___ftmul@f2& (0+255),b
 13052  0024EC  0E00               	movlw	0
 13053  0024EE  6F84               	movwf	(___ftmul@f2+1)& (0+255),b
 13054  0024F0  0E3F               	movlw	63
 13055  0024F2  6F85               	movwf	(___ftmul@f2+2)& (0+255),b
 13056  0024F4  EC38  F01D         	call	___ftmul	;wreg free
 13057  0024F8  C080  F08F         	movff	?___ftmul,?_fround
 13058  0024FC  C081  F090         	movff	?___ftmul+1,?_fround+1
 13059  002500  C082  F091         	movff	?___ftmul+2,?_fround+2
 13060  002504  0012               	return	
 13061  002506                     l2439:
 13062                           
 13063                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 13064  002506  0100               	movlb	0	; () banked
 13065  002508  5198               	movf	fround@prec& (0+255),w,b
 13066  00250A  0D03               	mullw	3
 13067  00250C  0E3E               	movlw	low __npowers_
 13068  00250E  24F3               	addwf	prodl,w,c
 13069  002510  6EF6               	movwf	tblptrl,c
 13070  002512  0E7C               	movlw	high __npowers_
 13071  002514  20F4               	addwfc	prodh,w,c
 13072  002516  6EF7               	movwf	tblptrh,c
 13073  002518                     	if	0	;There are less than 3 active tblptr bytes
 13074  002518                     	endif
 13075  002518  0009               	tblrd		*+
 13076  00251A  CFF5 F080          	movff	tablat,___ftmul@f1
 13077  00251E  0009               	tblrd		*+
 13078  002520  CFF5 F081          	movff	tablat,___ftmul@f1+1
 13079  002524  000A               	tblrd		*-
 13080  002526  CFF5 F082          	movff	tablat,___ftmul@f1+2
 13081  00252A  0E00               	movlw	0
 13082  00252C  6F83               	movwf	___ftmul@f2& (0+255),b
 13083  00252E  0E00               	movlw	0
 13084  002530  6F84               	movwf	(___ftmul@f2+1)& (0+255),b
 13085  002532  0E3F               	movlw	63
 13086  002534  6F85               	movwf	(___ftmul@f2+2)& (0+255),b
 13087  002536  EC38  F01D         	call	___ftmul	;wreg free
 13088  00253A  C080  F08F         	movff	?___ftmul,?_fround
 13089  00253E  C081  F090         	movff	?___ftmul+1,?_fround+1
 13090  002542  C082  F091         	movff	?___ftmul+2,?_fround+2
 13091  002546  0012               	return	
 13092  002548                     __end_of_fround:
 13093                           	opt stack 0
 13094                           tblptru	equ	0xFF8
 13095                           tblptrh	equ	0xFF7
 13096                           tblptrl	equ	0xFF6
 13097                           tablat	equ	0xFF5
 13098                           prodh	equ	0xFF4
 13099                           prodl	equ	0xFF3
 13100                           intcon	equ	0xFF2
 13101                           postinc0	equ	0xFEE
 13102                           wreg	equ	0xFE8
 13103                           indf1	equ	0xFE7
 13104                           postdec1	equ	0xFE5
 13105                           fsr1h	equ	0xFE2
 13106                           fsr1l	equ	0xFE1
 13107                           indf2	equ	0xFDF
 13108                           postinc2	equ	0xFDE
 13109                           postdec2	equ	0xFDD
 13110                           plusw2	equ	0xFDB
 13111                           fsr2h	equ	0xFDA
 13112                           fsr2l	equ	0xFD9
 13113                           status	equ	0xFD8
 13114                           
 13115 ;; *************** function ___wmul *****************
 13116 ;; Defined at:
 13117 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\Umul16.c"
 13118 ;; Parameters:    Size  Location     Type
 13119 ;;  multiplier      2   14[BANK0 ] unsigned int 
 13120 ;;  multiplicand    2   16[BANK0 ] unsigned int 
 13121 ;; Auto vars:     Size  Location     Type
 13122 ;;  product         2   18[BANK0 ] unsigned int 
 13123 ;; Return value:  Size  Location     Type
 13124 ;;                  2   14[BANK0 ] unsigned int 
 13125 ;; Registers used:
 13126 ;;		wreg, status,2, status,0, prodl, prodh
 13127 ;; Tracked objects:
 13128 ;;		On entry : 0/0
 13129 ;;		On exit  : 0/0
 13130 ;;		Unchanged: 0/0
 13131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13132 ;;      Params:         0       4       0       0       0       0       0       0       0
 13133 ;;      Locals:         0       2       0       0       0       0       0       0       0
 13134 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13135 ;;      Totals:         0       6       0       0       0       0       0       0       0
 13136 ;;Total ram usage:        6 bytes
 13137 ;; Hardware stack levels used:    1
 13138 ;; Hardware stack levels required when called:   10
 13139 ;; This function calls:
 13140 ;;		Nothing
 13141 ;; This function is called by:
 13142 ;;		_fround
 13143 ;;		_scale
 13144 ;;		_sprintf
 13145 ;; This function uses a non-reentrant model
 13146 ;;
 13147                           
 13148                           	psect	text37
 13149  0055FC                     __ptext37:
 13150                           	opt stack 0
 13151  0055FC                     ___wmul:
 13152                           	opt stack 18
 13153                           
 13154                           ;incstack = 0
 13155  0055FC  0100               	movlb	0	; () banked
 13156  0055FE  516E               	movf	___wmul@multiplier& (0+255),w,b
 13157  005600  0370               	mulwf	___wmul@multiplicand& (0+255),b
 13158  005602  CFF3 F072          	movff	prodl,___wmul@product
 13159  005606  CFF4 F073          	movff	prodh,___wmul@product+1
 13160  00560A  516E               	movf	___wmul@multiplier& (0+255),w,b
 13161  00560C  0371               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 13162  00560E  50F3               	movf	prodl,w,c
 13163  005610  2773               	addwf	(___wmul@product+1)& (0+255),f,b
 13164  005612  516F               	movf	(___wmul@multiplier+1)& (0+255),w,b
 13165  005614  0370               	mulwf	___wmul@multiplicand& (0+255),b
 13166  005616  50F3               	movf	prodl,w,c
 13167  005618  2773               	addwf	(___wmul@product+1)& (0+255),f,b
 13168                           
 13169                           ; BSR set to: 0
 13170  00561A  C072  F06E         	movff	___wmul@product,?___wmul
 13171  00561E  C073  F06F         	movff	___wmul@product+1,?___wmul+1
 13172  005622  0012               	return	
 13173  005624                     __end_of___wmul:
 13174                           	opt stack 0
 13175                           tblptru	equ	0xFF8
 13176                           tblptrh	equ	0xFF7
 13177                           tblptrl	equ	0xFF6
 13178                           tablat	equ	0xFF5
 13179                           prodh	equ	0xFF4
 13180                           prodl	equ	0xFF3
 13181                           intcon	equ	0xFF2
 13182                           postinc0	equ	0xFEE
 13183                           wreg	equ	0xFE8
 13184                           indf1	equ	0xFE7
 13185                           postdec1	equ	0xFE5
 13186                           fsr1h	equ	0xFE2
 13187                           fsr1l	equ	0xFE1
 13188                           indf2	equ	0xFDF
 13189                           postinc2	equ	0xFDE
 13190                           postdec2	equ	0xFDD
 13191                           plusw2	equ	0xFDB
 13192                           fsr2h	equ	0xFDA
 13193                           fsr2l	equ	0xFD9
 13194                           status	equ	0xFD8
 13195                           
 13196 ;; *************** function ___ftmul *****************
 13197 ;; Defined at:
 13198 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftmul.c"
 13199 ;; Parameters:    Size  Location     Type
 13200 ;;  f1              3   32[BANK0 ] float 
 13201 ;;  f2              3   35[BANK0 ] float 
 13202 ;; Auto vars:     Size  Location     Type
 13203 ;;  f3_as_produc    3   42[BANK0 ] unsigned um
 13204 ;;  sign            1   46[BANK0 ] unsigned char 
 13205 ;;  cntr            1   45[BANK0 ] unsigned char 
 13206 ;;  exp             1   41[BANK0 ] unsigned char 
 13207 ;; Return value:  Size  Location     Type
 13208 ;;                  3   32[BANK0 ] float 
 13209 ;; Registers used:
 13210 ;;		wreg, status,2, status,0, cstack
 13211 ;; Tracked objects:
 13212 ;;		On entry : 0/0
 13213 ;;		On exit  : 0/0
 13214 ;;		Unchanged: 0/0
 13215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13216 ;;      Params:         0       6       0       0       0       0       0       0       0
 13217 ;;      Locals:         0       6       0       0       0       0       0       0       0
 13218 ;;      Temps:          0       3       0       0       0       0       0       0       0
 13219 ;;      Totals:         0      15       0       0       0       0       0       0       0
 13220 ;;Total ram usage:       15 bytes
 13221 ;; Hardware stack levels used:    1
 13222 ;; Hardware stack levels required when called:   11
 13223 ;; This function calls:
 13224 ;;		___ftpack
 13225 ;; This function is called by:
 13226 ;;		_main
 13227 ;;		_le_AD
 13228 ;;		_fround
 13229 ;;		_scale
 13230 ;;		_sprintf
 13231 ;; This function uses a non-reentrant model
 13232 ;;
 13233                           
 13234                           	psect	text38
 13235  003A70                     __ptext38:
 13236                           	opt stack 0
 13237  003A70                     ___ftmul:
 13238                           	opt stack 17
 13239                           
 13240                           ; BSR set to: 0
 13241                           ;incstack = 0
 13242  003A70  C082  F086         	movff	___ftmul@f1+2,??___ftmul
 13243  003A74  0100               	movlb	0	; () banked
 13244  003A76  6B87               	clrf	(??___ftmul+1)& (0+255),b
 13245  003A78  6B88               	clrf	(??___ftmul+2)& (0+255),b
 13246  003A7A  3581               	rlcf	(___ftmul@f1+1)& (0+255),w,b
 13247  003A7C  3786               	rlcf	??___ftmul& (0+255),f,b
 13248  003A7E  E301               	bnc	u6661
 13249  003A80  8187               	bsf	(??___ftmul+1)& (0+255),0,b
 13250  003A82                     u6661:
 13251  003A82  5186               	movf	??___ftmul& (0+255),w,b
 13252  003A84  6F89               	movwf	___ftmul@exp& (0+255),b
 13253  003A86  5189               	movf	___ftmul@exp& (0+255),w,b
 13254  003A88  A4D8               	btfss	status,2,c
 13255  003A8A  D007               	goto	l2924
 13256                           
 13257                           ; BSR set to: 0
 13258  003A8C  0E00               	movlw	0
 13259  003A8E  6F80               	movwf	?___ftmul& (0+255),b
 13260  003A90  0E00               	movlw	0
 13261  003A92  6F81               	movwf	(?___ftmul+1)& (0+255),b
 13262  003A94  0E00               	movlw	0
 13263  003A96  6F82               	movwf	(?___ftmul+2)& (0+255),b
 13264                           
 13265                           ; BSR set to: 0
 13266  003A98  0012               	return	
 13267  003A9A                     l2924:
 13268                           
 13269                           ; BSR set to: 0
 13270                           
 13271                           ; BSR set to: 0
 13272  003A9A  C085  F086         	movff	___ftmul@f2+2,??___ftmul
 13273  003A9E  6B87               	clrf	(??___ftmul+1)& (0+255),b
 13274  003AA0  6B88               	clrf	(??___ftmul+2)& (0+255),b
 13275  003AA2  3584               	rlcf	(___ftmul@f2+1)& (0+255),w,b
 13276  003AA4  3786               	rlcf	??___ftmul& (0+255),f,b
 13277  003AA6  E301               	bnc	u6681
 13278  003AA8  8187               	bsf	(??___ftmul+1)& (0+255),0,b
 13279  003AAA                     u6681:
 13280  003AAA  5186               	movf	??___ftmul& (0+255),w,b
 13281  003AAC  6F8E               	movwf	___ftmul@sign& (0+255),b
 13282  003AAE  518E               	movf	___ftmul@sign& (0+255),w,b
 13283  003AB0  A4D8               	btfss	status,2,c
 13284  003AB2  D007               	goto	l2926
 13285                           
 13286                           ; BSR set to: 0
 13287  003AB4  0E00               	movlw	0
 13288  003AB6  6F80               	movwf	?___ftmul& (0+255),b
 13289  003AB8  0E00               	movlw	0
 13290  003ABA  6F81               	movwf	(?___ftmul+1)& (0+255),b
 13291  003ABC  0E00               	movlw	0
 13292  003ABE  6F82               	movwf	(?___ftmul+2)& (0+255),b
 13293                           
 13294                           ; BSR set to: 0
 13295  003AC0  0012               	return	
 13296  003AC2                     l2926:
 13297                           
 13298                           ; BSR set to: 0
 13299                           
 13300                           ; BSR set to: 0
 13301  003AC2  518E               	movf	___ftmul@sign& (0+255),w,b
 13302  003AC4  0F7B               	addlw	123
 13303  003AC6  2789               	addwf	___ftmul@exp& (0+255),f,b
 13304                           
 13305                           ; BSR set to: 0
 13306  003AC8  C082  F08E         	movff	___ftmul@f1+2,___ftmul@sign
 13307  003ACC  5185               	movf	(___ftmul@f2+2)& (0+255),w,b
 13308  003ACE  1B8E               	xorwf	___ftmul@sign& (0+255),f,b
 13309  003AD0  0E80               	movlw	128
 13310  003AD2  178E               	andwf	___ftmul@sign& (0+255),f,b
 13311                           
 13312                           ; BSR set to: 0
 13313  003AD4  8F81               	bsf	(___ftmul@f1+1)& (0+255),7,b
 13314                           
 13315                           ; BSR set to: 0
 13316  003AD6  8F84               	bsf	(___ftmul@f2+1)& (0+255),7,b
 13317                           
 13318                           ; BSR set to: 0
 13319  003AD8  0EFF               	movlw	255
 13320  003ADA  1783               	andwf	___ftmul@f2& (0+255),f,b
 13321  003ADC  0EFF               	movlw	255
 13322  003ADE  1784               	andwf	(___ftmul@f2+1)& (0+255),f,b
 13323  003AE0  0E00               	movlw	0
 13324  003AE2  1785               	andwf	(___ftmul@f2+2)& (0+255),f,b
 13325                           
 13326                           ; BSR set to: 0
 13327  003AE4  0E00               	movlw	0
 13328  003AE6  6F8A               	movwf	___ftmul@f3_as_product& (0+255),b
 13329  003AE8  0E00               	movlw	0
 13330  003AEA  6F8B               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
 13331  003AEC  0E00               	movlw	0
 13332  003AEE  6F8C               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
 13333                           
 13334                           ; BSR set to: 0
 13335  003AF0  0E07               	movlw	7
 13336  003AF2  6F8D               	movwf	___ftmul@cntr& (0+255),b
 13337  003AF4                     
 13338                           ; BSR set to: 0
 13339                           
 13340                           ; BSR set to: 0
 13341  003AF4  A180               	btfss	___ftmul@f1& (0+255),0,b
 13342  003AF6  D006               	goto	l2928
 13343                           
 13344                           ; BSR set to: 0
 13345  003AF8  5183               	movf	___ftmul@f2& (0+255),w,b
 13346  003AFA  278A               	addwf	___ftmul@f3_as_product& (0+255),f,b
 13347  003AFC  5184               	movf	(___ftmul@f2+1)& (0+255),w,b
 13348  003AFE  238B               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 13349  003B00  5185               	movf	(___ftmul@f2+2)& (0+255),w,b
 13350  003B02  238C               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 13351  003B04                     l2928:
 13352                           
 13353                           ; BSR set to: 0
 13354                           
 13355                           ; BSR set to: 0
 13356  003B04  90D8               	bcf	status,0,c
 13357  003B06  3382               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 13358  003B08  3381               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 13359  003B0A  3380               	rrcf	___ftmul@f1& (0+255),f,b
 13360  003B0C  90D8               	bcf	status,0,c
 13361  003B0E  3783               	rlcf	___ftmul@f2& (0+255),f,b
 13362  003B10  3784               	rlcf	(___ftmul@f2+1)& (0+255),f,b
 13363  003B12  3785               	rlcf	(___ftmul@f2+2)& (0+255),f,b
 13364                           
 13365                           ; BSR set to: 0
 13366  003B14  2F8D               	decfsz	___ftmul@cntr& (0+255),f,b
 13367  003B16  D7EE               	goto	l2927
 13368                           
 13369                           ; BSR set to: 0
 13370                           
 13371                           ; BSR set to: 0
 13372  003B18  0E09               	movlw	9
 13373  003B1A  6F8D               	movwf	___ftmul@cntr& (0+255),b
 13374  003B1C                     
 13375                           ; BSR set to: 0
 13376                           
 13377                           ; BSR set to: 0
 13378  003B1C  A180               	btfss	___ftmul@f1& (0+255),0,b
 13379  003B1E  D006               	goto	l2931
 13380                           
 13381                           ; BSR set to: 0
 13382  003B20  5183               	movf	___ftmul@f2& (0+255),w,b
 13383  003B22  278A               	addwf	___ftmul@f3_as_product& (0+255),f,b
 13384  003B24  5184               	movf	(___ftmul@f2+1)& (0+255),w,b
 13385  003B26  238B               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 13386  003B28  5185               	movf	(___ftmul@f2+2)& (0+255),w,b
 13387  003B2A  238C               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 13388  003B2C                     l2931:
 13389                           
 13390                           ; BSR set to: 0
 13391                           
 13392                           ; BSR set to: 0
 13393  003B2C  90D8               	bcf	status,0,c
 13394  003B2E  3382               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 13395  003B30  3381               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 13396  003B32  3380               	rrcf	___ftmul@f1& (0+255),f,b
 13397  003B34  90D8               	bcf	status,0,c
 13398  003B36  338C               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
 13399  003B38  338B               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
 13400  003B3A  338A               	rrcf	___ftmul@f3_as_product& (0+255),f,b
 13401                           
 13402                           ; BSR set to: 0
 13403  003B3C  2F8D               	decfsz	___ftmul@cntr& (0+255),f,b
 13404  003B3E  D7EE               	goto	l2930
 13405                           
 13406                           ; BSR set to: 0
 13407                           
 13408                           ; BSR set to: 0
 13409  003B40  C08A  F060         	movff	___ftmul@f3_as_product,___ftpack@arg
 13410  003B44  C08B  F061         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
 13411  003B48  C08C  F062         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
 13412  003B4C  C089  F063         	movff	___ftmul@exp,___ftpack@exp
 13413  003B50  C08E  F064         	movff	___ftmul@sign,___ftpack@sign
 13414  003B54  ECFD  F020         	call	___ftpack	;wreg free
 13415  003B58  C060  F080         	movff	?___ftpack,?___ftmul
 13416  003B5C  C061  F081         	movff	?___ftpack+1,?___ftmul+1
 13417  003B60  C062  F082         	movff	?___ftpack+2,?___ftmul+2
 13418  003B64  0012               	return	
 13419  003B66                     __end_of___ftmul:
 13420                           	opt stack 0
 13421                           tblptru	equ	0xFF8
 13422                           tblptrh	equ	0xFF7
 13423                           tblptrl	equ	0xFF6
 13424                           tablat	equ	0xFF5
 13425                           prodh	equ	0xFF4
 13426                           prodl	equ	0xFF3
 13427                           intcon	equ	0xFF2
 13428                           postinc0	equ	0xFEE
 13429                           wreg	equ	0xFE8
 13430                           indf1	equ	0xFE7
 13431                           postdec1	equ	0xFE5
 13432                           fsr1h	equ	0xFE2
 13433                           fsr1l	equ	0xFE1
 13434                           indf2	equ	0xFDF
 13435                           postinc2	equ	0xFDE
 13436                           postdec2	equ	0xFDD
 13437                           plusw2	equ	0xFDB
 13438                           fsr2h	equ	0xFDA
 13439                           fsr2l	equ	0xFD9
 13440                           status	equ	0xFD8
 13441                           
 13442 ;; *************** function ___awmod *****************
 13443 ;; Defined at:
 13444 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\awmod.c"
 13445 ;; Parameters:    Size  Location     Type
 13446 ;;  dividend        2    0[BANK0 ] int 
 13447 ;;  divisor         2    2[BANK0 ] int 
 13448 ;; Auto vars:     Size  Location     Type
 13449 ;;  sign            1    5[BANK0 ] unsigned char 
 13450 ;;  counter         1    4[BANK0 ] unsigned char 
 13451 ;; Return value:  Size  Location     Type
 13452 ;;                  2    0[BANK0 ] int 
 13453 ;; Registers used:
 13454 ;;		wreg, status,2, status,0
 13455 ;; Tracked objects:
 13456 ;;		On entry : 0/0
 13457 ;;		On exit  : 0/0
 13458 ;;		Unchanged: 0/0
 13459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13460 ;;      Params:         0       4       0       0       0       0       0       0       0
 13461 ;;      Locals:         0       2       0       0       0       0       0       0       0
 13462 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13463 ;;      Totals:         0       6       0       0       0       0       0       0       0
 13464 ;;Total ram usage:        6 bytes
 13465 ;; Hardware stack levels used:    1
 13466 ;; Hardware stack levels required when called:   10
 13467 ;; This function calls:
 13468 ;;		Nothing
 13469 ;; This function is called by:
 13470 ;;		_fround
 13471 ;;		_scale
 13472 ;; This function uses a non-reentrant model
 13473 ;;
 13474                           
 13475                           	psect	text39
 13476  004D06                     __ptext39:
 13477                           	opt stack 0
 13478  004D06                     ___awmod:
 13479                           	opt stack 18
 13480                           
 13481                           ;incstack = 0
 13482  004D06  0E00               	movlw	0
 13483  004D08  0100               	movlb	0	; () banked
 13484  004D0A  6F65               	movwf	___awmod@sign& (0+255),b
 13485                           
 13486                           ; BSR set to: 0
 13487  004D0C  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
 13488  004D0E  D006               	goto	l2777
 13489                           
 13490                           ; BSR set to: 0
 13491  004D10  6D60               	negf	___awmod@dividend& (0+255),b
 13492  004D12  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 13493  004D14  B0D8               	btfsc	status,0,c
 13494  004D16  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 13495                           
 13496                           ; BSR set to: 0
 13497  004D18  0E01               	movlw	1
 13498  004D1A  6F65               	movwf	___awmod@sign& (0+255),b
 13499  004D1C                     l2777:
 13500                           
 13501                           ; BSR set to: 0
 13502                           
 13503                           ; BSR set to: 0
 13504  004D1C  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 13505  004D1E  D004               	goto	l2778
 13506                           
 13507                           ; BSR set to: 0
 13508  004D20  6D62               	negf	___awmod@divisor& (0+255),b
 13509  004D22  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 13510  004D24  B0D8               	btfsc	status,0,c
 13511  004D26  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 13512  004D28                     l2778:
 13513                           
 13514                           ; BSR set to: 0
 13515                           
 13516                           ; BSR set to: 0
 13517  004D28  5162               	movf	___awmod@divisor& (0+255),w,b
 13518  004D2A  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 13519  004D2C  B4D8               	btfsc	status,2,c
 13520  004D2E  D018               	goto	l2785
 13521                           
 13522                           ; BSR set to: 0
 13523  004D30  0E01               	movlw	1
 13524  004D32  6F64               	movwf	___awmod@counter& (0+255),b
 13525  004D34  D004               	goto	l2780
 13526  004D36                     
 13527                           ; BSR set to: 0
 13528                           
 13529                           ; BSR set to: 0
 13530  004D36  90D8               	bcf	status,0,c
 13531  004D38  3762               	rlcf	___awmod@divisor& (0+255),f,b
 13532  004D3A  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 13533  004D3C  2B64               	incf	___awmod@counter& (0+255),f,b
 13534  004D3E                     l2780:
 13535                           
 13536                           ; BSR set to: 0
 13537                           
 13538                           ; BSR set to: 0
 13539  004D3E  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 13540  004D40  D7FA               	goto	l2781
 13541  004D42                     u6810:
 13542                           
 13543                           ; BSR set to: 0
 13544                           
 13545                           ; BSR set to: 0
 13546                           
 13547                           ; BSR set to: 0
 13548  004D42  5162               	movf	___awmod@divisor& (0+255),w,b
 13549  004D44  5D60               	subwf	___awmod@dividend& (0+255),w,b
 13550  004D46  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 13551  004D48  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 13552  004D4A  A0D8               	btfss	status,0,c
 13553  004D4C  D004               	goto	l2784
 13554                           
 13555                           ; BSR set to: 0
 13556  004D4E  5162               	movf	___awmod@divisor& (0+255),w,b
 13557  004D50  5F60               	subwf	___awmod@dividend& (0+255),f,b
 13558  004D52  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 13559  004D54  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 13560  004D56                     l2784:
 13561                           
 13562                           ; BSR set to: 0
 13563                           
 13564                           ; BSR set to: 0
 13565  004D56  90D8               	bcf	status,0,c
 13566  004D58  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 13567  004D5A  3362               	rrcf	___awmod@divisor& (0+255),f,b
 13568                           
 13569                           ; BSR set to: 0
 13570  004D5C  2F64               	decfsz	___awmod@counter& (0+255),f,b
 13571  004D5E  D7F1               	goto	u6810
 13572  004D60                     l2785:
 13573                           
 13574                           ; BSR set to: 0
 13575                           
 13576                           ; BSR set to: 0
 13577                           
 13578                           ; BSR set to: 0
 13579  004D60  5165               	movf	___awmod@sign& (0+255),w,b
 13580  004D62  B4D8               	btfsc	status,2,c
 13581  004D64  D004               	goto	l2786
 13582                           
 13583                           ; BSR set to: 0
 13584  004D66  6D60               	negf	___awmod@dividend& (0+255),b
 13585  004D68  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 13586  004D6A  B0D8               	btfsc	status,0,c
 13587  004D6C  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 13588  004D6E                     l2786:
 13589                           
 13590                           ; BSR set to: 0
 13591                           
 13592                           ; BSR set to: 0
 13593  004D6E  C060  F060         	movff	___awmod@dividend,?___awmod
 13594  004D72  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 13595  004D76  0012               	return	
 13596  004D78                     __end_of___awmod:
 13597                           	opt stack 0
 13598                           tblptru	equ	0xFF8
 13599                           tblptrh	equ	0xFF7
 13600                           tblptrl	equ	0xFF6
 13601                           tablat	equ	0xFF5
 13602                           prodh	equ	0xFF4
 13603                           prodl	equ	0xFF3
 13604                           intcon	equ	0xFF2
 13605                           postinc0	equ	0xFEE
 13606                           wreg	equ	0xFE8
 13607                           indf1	equ	0xFE7
 13608                           postdec1	equ	0xFE5
 13609                           fsr1h	equ	0xFE2
 13610                           fsr1l	equ	0xFE1
 13611                           indf2	equ	0xFDF
 13612                           postinc2	equ	0xFDE
 13613                           postdec2	equ	0xFDD
 13614                           plusw2	equ	0xFDB
 13615                           fsr2h	equ	0xFDA
 13616                           fsr2l	equ	0xFD9
 13617                           status	equ	0xFD8
 13618                           
 13619 ;; *************** function ___awdiv *****************
 13620 ;; Defined at:
 13621 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\awdiv.c"
 13622 ;; Parameters:    Size  Location     Type
 13623 ;;  dividend        2    6[BANK0 ] int 
 13624 ;;  divisor         2    8[BANK0 ] int 
 13625 ;; Auto vars:     Size  Location     Type
 13626 ;;  quotient        2   12[BANK0 ] int 
 13627 ;;  sign            1   11[BANK0 ] unsigned char 
 13628 ;;  counter         1   10[BANK0 ] unsigned char 
 13629 ;; Return value:  Size  Location     Type
 13630 ;;                  2    6[BANK0 ] int 
 13631 ;; Registers used:
 13632 ;;		wreg, status,2, status,0
 13633 ;; Tracked objects:
 13634 ;;		On entry : 0/0
 13635 ;;		On exit  : 0/0
 13636 ;;		Unchanged: 0/0
 13637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13638 ;;      Params:         0       4       0       0       0       0       0       0       0
 13639 ;;      Locals:         0       4       0       0       0       0       0       0       0
 13640 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13641 ;;      Totals:         0       8       0       0       0       0       0       0       0
 13642 ;;Total ram usage:        8 bytes
 13643 ;; Hardware stack levels used:    1
 13644 ;; Hardware stack levels required when called:   10
 13645 ;; This function calls:
 13646 ;;		Nothing
 13647 ;; This function is called by:
 13648 ;;		_fround
 13649 ;;		_scale
 13650 ;;		_sprintf
 13651 ;; This function uses a non-reentrant model
 13652 ;;
 13653                           
 13654                           	psect	text40
 13655  004996                     __ptext40:
 13656                           	opt stack 0
 13657  004996                     ___awdiv:
 13658                           	opt stack 18
 13659                           
 13660                           ; BSR set to: 0
 13661                           ;incstack = 0
 13662  004996  0E00               	movlw	0
 13663  004998  0100               	movlb	0	; () banked
 13664  00499A  6F6B               	movwf	___awdiv@sign& (0+255),b
 13665                           
 13666                           ; BSR set to: 0
 13667  00499C  AF69               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 13668  00499E  D006               	goto	l2764
 13669                           
 13670                           ; BSR set to: 0
 13671  0049A0  6D68               	negf	___awdiv@divisor& (0+255),b
 13672  0049A2  1F69               	comf	(___awdiv@divisor+1)& (0+255),f,b
 13673  0049A4  B0D8               	btfsc	status,0,c
 13674  0049A6  2B69               	incf	(___awdiv@divisor+1)& (0+255),f,b
 13675                           
 13676                           ; BSR set to: 0
 13677  0049A8  0E01               	movlw	1
 13678  0049AA  6F6B               	movwf	___awdiv@sign& (0+255),b
 13679  0049AC                     l2764:
 13680                           
 13681                           ; BSR set to: 0
 13682                           
 13683                           ; BSR set to: 0
 13684  0049AC  AF67               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 13685  0049AE  D006               	goto	l2765
 13686                           
 13687                           ; BSR set to: 0
 13688  0049B0  6D66               	negf	___awdiv@dividend& (0+255),b
 13689  0049B2  1F67               	comf	(___awdiv@dividend+1)& (0+255),f,b
 13690  0049B4  B0D8               	btfsc	status,0,c
 13691  0049B6  2B67               	incf	(___awdiv@dividend+1)& (0+255),f,b
 13692                           
 13693                           ; BSR set to: 0
 13694  0049B8  0E01               	movlw	1
 13695  0049BA  1B6B               	xorwf	___awdiv@sign& (0+255),f,b
 13696  0049BC                     l2765:
 13697                           
 13698                           ; BSR set to: 0
 13699                           
 13700                           ; BSR set to: 0
 13701  0049BC  0E00               	movlw	0
 13702  0049BE  6F6D               	movwf	(___awdiv@quotient+1)& (0+255),b
 13703  0049C0  0E00               	movlw	0
 13704  0049C2  6F6C               	movwf	___awdiv@quotient& (0+255),b
 13705                           
 13706                           ; BSR set to: 0
 13707  0049C4  5168               	movf	___awdiv@divisor& (0+255),w,b
 13708  0049C6  1169               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 13709  0049C8  B4D8               	btfsc	status,2,c
 13710  0049CA  D01C               	goto	l2772
 13711                           
 13712                           ; BSR set to: 0
 13713  0049CC  0E01               	movlw	1
 13714  0049CE  6F6A               	movwf	___awdiv@counter& (0+255),b
 13715  0049D0  D004               	goto	l2767
 13716  0049D2                     
 13717                           ; BSR set to: 0
 13718                           
 13719                           ; BSR set to: 0
 13720  0049D2  90D8               	bcf	status,0,c
 13721  0049D4  3768               	rlcf	___awdiv@divisor& (0+255),f,b
 13722  0049D6  3769               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 13723  0049D8  2B6A               	incf	___awdiv@counter& (0+255),f,b
 13724  0049DA                     l2767:
 13725                           
 13726                           ; BSR set to: 0
 13727                           
 13728                           ; BSR set to: 0
 13729  0049DA  AF69               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 13730  0049DC  D7FA               	goto	l2768
 13731  0049DE                     u6750:
 13732                           
 13733                           ; BSR set to: 0
 13734                           
 13735                           ; BSR set to: 0
 13736                           
 13737                           ; BSR set to: 0
 13738  0049DE  90D8               	bcf	status,0,c
 13739  0049E0  376C               	rlcf	___awdiv@quotient& (0+255),f,b
 13740  0049E2  376D               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 13741                           
 13742                           ; BSR set to: 0
 13743  0049E4  5168               	movf	___awdiv@divisor& (0+255),w,b
 13744  0049E6  5D66               	subwf	___awdiv@dividend& (0+255),w,b
 13745  0049E8  5169               	movf	(___awdiv@divisor+1)& (0+255),w,b
 13746  0049EA  5967               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 13747  0049EC  A0D8               	btfss	status,0,c
 13748  0049EE  D005               	goto	l2771
 13749                           
 13750                           ; BSR set to: 0
 13751  0049F0  5168               	movf	___awdiv@divisor& (0+255),w,b
 13752  0049F2  5F66               	subwf	___awdiv@dividend& (0+255),f,b
 13753  0049F4  5169               	movf	(___awdiv@divisor+1)& (0+255),w,b
 13754  0049F6  5B67               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 13755                           
 13756                           ; BSR set to: 0
 13757  0049F8  816C               	bsf	___awdiv@quotient& (0+255),0,b
 13758  0049FA                     l2771:
 13759                           
 13760                           ; BSR set to: 0
 13761                           
 13762                           ; BSR set to: 0
 13763  0049FA  90D8               	bcf	status,0,c
 13764  0049FC  3369               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 13765  0049FE  3368               	rrcf	___awdiv@divisor& (0+255),f,b
 13766                           
 13767                           ; BSR set to: 0
 13768  004A00  2F6A               	decfsz	___awdiv@counter& (0+255),f,b
 13769  004A02  D7ED               	goto	u6750
 13770  004A04                     l2772:
 13771                           
 13772                           ; BSR set to: 0
 13773                           
 13774                           ; BSR set to: 0
 13775                           
 13776                           ; BSR set to: 0
 13777  004A04  516B               	movf	___awdiv@sign& (0+255),w,b
 13778  004A06  B4D8               	btfsc	status,2,c
 13779  004A08  D004               	goto	l2773
 13780                           
 13781                           ; BSR set to: 0
 13782  004A0A  6D6C               	negf	___awdiv@quotient& (0+255),b
 13783  004A0C  1F6D               	comf	(___awdiv@quotient+1)& (0+255),f,b
 13784  004A0E  B0D8               	btfsc	status,0,c
 13785  004A10  2B6D               	incf	(___awdiv@quotient+1)& (0+255),f,b
 13786  004A12                     l2773:
 13787                           
 13788                           ; BSR set to: 0
 13789                           
 13790                           ; BSR set to: 0
 13791  004A12  C06C  F066         	movff	___awdiv@quotient,?___awdiv
 13792  004A16  C06D  F067         	movff	___awdiv@quotient+1,?___awdiv+1
 13793  004A1A  0012               	return	
 13794  004A1C                     __end_of___awdiv:
 13795                           	opt stack 0
 13796                           tblptru	equ	0xFF8
 13797                           tblptrh	equ	0xFF7
 13798                           tblptrl	equ	0xFF6
 13799                           tablat	equ	0xFF5
 13800                           prodh	equ	0xFF4
 13801                           prodl	equ	0xFF3
 13802                           intcon	equ	0xFF2
 13803                           postinc0	equ	0xFEE
 13804                           wreg	equ	0xFE8
 13805                           indf1	equ	0xFE7
 13806                           postdec1	equ	0xFE5
 13807                           fsr1h	equ	0xFE2
 13808                           fsr1l	equ	0xFE1
 13809                           indf2	equ	0xFDF
 13810                           postinc2	equ	0xFDE
 13811                           postdec2	equ	0xFDD
 13812                           plusw2	equ	0xFDB
 13813                           fsr2h	equ	0xFDA
 13814                           fsr2l	equ	0xFD9
 13815                           status	equ	0xFD8
 13816                           
 13817 ;; *************** function __tdiv_to_l_ *****************
 13818 ;; Defined at:
 13819 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftdivl.c"
 13820 ;; Parameters:    Size  Location     Type
 13821 ;;  f1              3    0[BANK0 ] float 
 13822 ;;  f2              3    3[BANK0 ] float 
 13823 ;; Auto vars:     Size  Location     Type
 13824 ;;  quot            4    9[BANK0 ] unsigned long 
 13825 ;;  exp1            1   14[BANK0 ] unsigned char 
 13826 ;;  cntr            1   13[BANK0 ] unsigned char 
 13827 ;; Return value:  Size  Location     Type
 13828 ;;                  4    0[BANK0 ] unsigned long 
 13829 ;; Registers used:
 13830 ;;		wreg, status,2, status,0
 13831 ;; Tracked objects:
 13832 ;;		On entry : 0/0
 13833 ;;		On exit  : 0/0
 13834 ;;		Unchanged: 0/0
 13835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13836 ;;      Params:         0       6       0       0       0       0       0       0       0
 13837 ;;      Locals:         0       6       0       0       0       0       0       0       0
 13838 ;;      Temps:          0       3       0       0       0       0       0       0       0
 13839 ;;      Totals:         0      15       0       0       0       0       0       0       0
 13840 ;;Total ram usage:       15 bytes
 13841 ;; Hardware stack levels used:    1
 13842 ;; Hardware stack levels required when called:   10
 13843 ;; This function calls:
 13844 ;;		Nothing
 13845 ;; This function is called by:
 13846 ;;		_sprintf
 13847 ;; This function uses a non-reentrant model
 13848 ;;
 13849                           
 13850                           	psect	text41
 13851  002D50                     __ptext41:
 13852                           	opt stack 0
 13853  002D50                     __tdiv_to_l_:
 13854                           	opt stack 19
 13855                           
 13856                           ; BSR set to: 0
 13857                           ;incstack = 0
 13858  002D50  C062  F066         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 13859  002D54  0100               	movlb	0	; () banked
 13860  002D56  6B67               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 13861  002D58  6B68               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 13862  002D5A  3561               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 13863  002D5C  3766               	rlcf	??__tdiv_to_l_& (0+255),f,b
 13864  002D5E  E301               	bnc	u7231
 13865  002D60  8167               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 13866  002D62                     u7231:
 13867  002D62  5166               	movf	??__tdiv_to_l_& (0+255),w,b
 13868  002D64  6F6E               	movwf	__tdiv_to_l_@exp1& (0+255),b
 13869  002D66  516E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 13870  002D68  A4D8               	btfss	status,2,c
 13871  002D6A  D009               	goto	l2900
 13872                           
 13873                           ; BSR set to: 0
 13874  002D6C  0E00               	movlw	0
 13875  002D6E  6F60               	movwf	?__tdiv_to_l_& (0+255),b
 13876  002D70  0E00               	movlw	0
 13877  002D72  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 13878  002D74  0E00               	movlw	0
 13879  002D76  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 13880  002D78  0E00               	movlw	0
 13881  002D7A  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 13882                           
 13883                           ; BSR set to: 0
 13884  002D7C  0012               	return	
 13885  002D7E                     l2900:
 13886                           
 13887                           ; BSR set to: 0
 13888                           
 13889                           ; BSR set to: 0
 13890  002D7E  C065  F066         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 13891  002D82  6B67               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 13892  002D84  6B68               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 13893  002D86  3564               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 13894  002D88  3766               	rlcf	??__tdiv_to_l_& (0+255),f,b
 13895  002D8A  E301               	bnc	u7251
 13896  002D8C  8167               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 13897  002D8E                     u7251:
 13898  002D8E  5166               	movf	??__tdiv_to_l_& (0+255),w,b
 13899  002D90  6F6D               	movwf	__tdiv_to_l_@cntr& (0+255),b
 13900  002D92  516D               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 13901  002D94  A4D8               	btfss	status,2,c
 13902  002D96  D009               	goto	l2902
 13903                           
 13904                           ; BSR set to: 0
 13905  002D98  0E00               	movlw	0
 13906  002D9A  6F60               	movwf	?__tdiv_to_l_& (0+255),b
 13907  002D9C  0E00               	movlw	0
 13908  002D9E  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 13909  002DA0  0E00               	movlw	0
 13910  002DA2  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 13911  002DA4  0E00               	movlw	0
 13912  002DA6  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 13913                           
 13914                           ; BSR set to: 0
 13915  002DA8  0012               	return	
 13916  002DAA                     l2902:
 13917                           
 13918                           ; BSR set to: 0
 13919                           
 13920                           ; BSR set to: 0
 13921  002DAA  8F61               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 13922                           
 13923                           ; BSR set to: 0
 13924  002DAC  0EFF               	movlw	255
 13925  002DAE  1760               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 13926  002DB0  0EFF               	movlw	255
 13927  002DB2  1761               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 13928  002DB4  0E00               	movlw	0
 13929  002DB6  1762               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 13930  002DB8  8F64               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 13931                           
 13932                           ; BSR set to: 0
 13933  002DBA  0EFF               	movlw	255
 13934  002DBC  1763               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 13935  002DBE  0EFF               	movlw	255
 13936  002DC0  1764               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 13937  002DC2  0E00               	movlw	0
 13938  002DC4  1765               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 13939                           
 13940                           ; BSR set to: 0
 13941  002DC6  0E00               	movlw	0
 13942  002DC8  6F69               	movwf	__tdiv_to_l_@quot& (0+255),b
 13943  002DCA  0E00               	movlw	0
 13944  002DCC  6F6A               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 13945  002DCE  0E00               	movlw	0
 13946  002DD0  6F6B               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 13947  002DD2  0E00               	movlw	0
 13948  002DD4  6F6C               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 13949                           
 13950                           ; BSR set to: 0
 13951  002DD6  0E7F               	movlw	127
 13952  002DD8  5F6E               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 13953                           
 13954                           ; BSR set to: 0
 13955  002DDA  516D               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 13956  002DDC  0F98               	addlw	152
 13957  002DDE  5F6E               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 13958                           
 13959                           ; BSR set to: 0
 13960  002DE0  0E18               	movlw	24
 13961  002DE2  6F6D               	movwf	__tdiv_to_l_@cntr& (0+255),b
 13962  002DE4                     l2903:
 13963                           
 13964                           ; BSR set to: 0
 13965  002DE4  90D8               	bcf	status,0,c
 13966  002DE6  3769               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 13967  002DE8  376A               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 13968  002DEA  376B               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 13969  002DEC  376C               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 13970                           
 13971                           ; BSR set to: 0
 13972  002DEE  5163               	movf	__tdiv_to_l_@f2& (0+255),w,b
 13973  002DF0  5D60               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 13974  002DF2  5164               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 13975  002DF4  5961               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 13976  002DF6  5165               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 13977  002DF8  5962               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 13978  002DFA  A0D8               	btfss	status,0,c
 13979  002DFC  D007               	goto	l2904
 13980                           
 13981                           ; BSR set to: 0
 13982  002DFE  5163               	movf	__tdiv_to_l_@f2& (0+255),w,b
 13983  002E00  5F60               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 13984  002E02  5164               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 13985  002E04  5B61               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 13986  002E06  5165               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 13987  002E08  5B62               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 13988                           
 13989                           ; BSR set to: 0
 13990  002E0A  8169               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 13991  002E0C                     l2904:
 13992                           
 13993                           ; BSR set to: 0
 13994  002E0C  90D8               	bcf	status,0,c
 13995  002E0E  3760               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 13996  002E10  3761               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 13997  002E12  3762               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 13998                           
 13999                           ; BSR set to: 0
 14000  002E14  2F6D               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 14001  002E16  D7E6               	goto	l2903
 14002                           
 14003                           ; BSR set to: 0
 14004                           
 14005                           ; BSR set to: 0
 14006  002E18  AF6E               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 14007  002E1A  D016               	goto	l2906
 14008                           
 14009                           ; BSR set to: 0
 14010  002E1C  516E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 14011  002E1E  0A80               	xorlw	128
 14012  002E20  0F97               	addlw	151
 14013  002E22  B0D8               	btfsc	status,0,c
 14014  002E24  D009               	goto	l2907
 14015                           
 14016                           ; BSR set to: 0
 14017  002E26  0E00               	movlw	0
 14018  002E28  6F60               	movwf	?__tdiv_to_l_& (0+255),b
 14019  002E2A  0E00               	movlw	0
 14020  002E2C  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 14021  002E2E  0E00               	movlw	0
 14022  002E30  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 14023  002E32  0E00               	movlw	0
 14024  002E34  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 14025                           
 14026                           ; BSR set to: 0
 14027  002E36  0012               	return	
 14028  002E38                     l2907:
 14029                           
 14030                           ; BSR set to: 0
 14031                           
 14032                           ; BSR set to: 0
 14033                           
 14034                           ; BSR set to: 0
 14035  002E38  90D8               	bcf	status,0,c
 14036  002E3A  336C               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 14037  002E3C  336B               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 14038  002E3E  336A               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 14039  002E40  3369               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 14040                           
 14041                           ; BSR set to: 0
 14042  002E42  3F6E               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 14043  002E44  D7F9               	goto	l2907
 14044                           
 14045                           ; BSR set to: 0
 14046  002E46  D015               	goto	u7310
 14047  002E48                     l2906:
 14048                           
 14049                           ; BSR set to: 0
 14050                           
 14051                           ; BSR set to: 0
 14052  002E48  0E17               	movlw	23
 14053  002E4A  656E               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 14054  002E4C  D00F               	goto	l2912
 14055                           
 14056                           ; BSR set to: 0
 14057  002E4E  0E00               	movlw	0
 14058  002E50  6F60               	movwf	?__tdiv_to_l_& (0+255),b
 14059  002E52  0E00               	movlw	0
 14060  002E54  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 14061  002E56  0E00               	movlw	0
 14062  002E58  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 14063  002E5A  0E00               	movlw	0
 14064  002E5C  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 14065                           
 14066                           ; BSR set to: 0
 14067  002E5E  0012               	return	
 14068  002E60                     
 14069                           ; BSR set to: 0
 14070                           
 14071                           ; BSR set to: 0
 14072  002E60  90D8               	bcf	status,0,c
 14073  002E62  3769               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 14074  002E64  376A               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 14075  002E66  376B               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 14076  002E68  376C               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 14077  002E6A  076E               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 14078  002E6C                     l2912:
 14079                           
 14080                           ; BSR set to: 0
 14081                           
 14082                           ; BSR set to: 0
 14083  002E6C  516E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 14084  002E6E  A4D8               	btfss	status,2,c
 14085  002E70  D7F7               	goto	l2913
 14086  002E72                     u7310:
 14087                           
 14088                           ; BSR set to: 0
 14089                           
 14090                           ; BSR set to: 0
 14091  002E72  C069  F060         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 14092  002E76  C06A  F061         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 14093  002E7A  C06B  F062         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 14094  002E7E  C06C  F063         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 14095                           
 14096                           ; BSR set to: 0
 14097  002E82  0012               	return		;funcret
 14098  002E84                     __end_of__tdiv_to_l_:
 14099                           	opt stack 0
 14100                           tblptru	equ	0xFF8
 14101                           tblptrh	equ	0xFF7
 14102                           tblptrl	equ	0xFF6
 14103                           tablat	equ	0xFF5
 14104                           prodh	equ	0xFF4
 14105                           prodl	equ	0xFF3
 14106                           intcon	equ	0xFF2
 14107                           postinc0	equ	0xFEE
 14108                           wreg	equ	0xFE8
 14109                           indf1	equ	0xFE7
 14110                           postdec1	equ	0xFE5
 14111                           fsr1h	equ	0xFE2
 14112                           fsr1l	equ	0xFE1
 14113                           indf2	equ	0xFDF
 14114                           postinc2	equ	0xFDE
 14115                           postdec2	equ	0xFDD
 14116                           plusw2	equ	0xFDB
 14117                           fsr2h	equ	0xFDA
 14118                           fsr2l	equ	0xFD9
 14119                           status	equ	0xFD8
 14120                           
 14121 ;; *************** function __div_to_l_ *****************
 14122 ;; Defined at:
 14123 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\fldivl.c"
 14124 ;; Parameters:    Size  Location     Type
 14125 ;;  f1              3    0[BANK0 ] unsigned long 
 14126 ;;  f2              3    3[BANK0 ] unsigned long 
 14127 ;; Auto vars:     Size  Location     Type
 14128 ;;  quot            4    6[BANK0 ] unsigned long 
 14129 ;;  exp1            1   11[BANK0 ] unsigned char 
 14130 ;;  cntr            1   10[BANK0 ] unsigned char 
 14131 ;; Return value:  Size  Location     Type
 14132 ;;                  4    0[BANK0 ] unsigned long 
 14133 ;; Registers used:
 14134 ;;		wreg, status,2, status,0
 14135 ;; Tracked objects:
 14136 ;;		On entry : 0/0
 14137 ;;		On exit  : 0/0
 14138 ;;		Unchanged: 0/0
 14139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14140 ;;      Params:         0       6       0       0       0       0       0       0       0
 14141 ;;      Locals:         0       6       0       0       0       0       0       0       0
 14142 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14143 ;;      Totals:         0      12       0       0       0       0       0       0       0
 14144 ;;Total ram usage:       12 bytes
 14145 ;; Hardware stack levels used:    1
 14146 ;; Hardware stack levels required when called:   10
 14147 ;; This function calls:
 14148 ;;		Nothing
 14149 ;; This function is called by:
 14150 ;;		_sprintf
 14151 ;; This function uses a non-reentrant model
 14152 ;;
 14153                           
 14154                           	psect	text42
 14155  00333A                     __ptext42:
 14156                           	opt stack 0
 14157  00333A                     __div_to_l_:
 14158                           	opt stack 19
 14159                           
 14160                           ; BSR set to: 0
 14161                           ;incstack = 0
 14162  00333A  0100               	movlb	0	; () banked
 14163  00333C  3562               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 14164  00333E  3563               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 14165  003340  6F6B               	movwf	__div_to_l_@exp1& (0+255),b
 14166  003342  516B               	movf	__div_to_l_@exp1& (0+255),w,b
 14167  003344  A4D8               	btfss	status,2,c
 14168  003346  D009               	goto	l2796
 14169                           
 14170                           ; BSR set to: 0
 14171  003348  0E00               	movlw	0
 14172  00334A  6F60               	movwf	?__div_to_l_& (0+255),b
 14173  00334C  0E00               	movlw	0
 14174  00334E  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
 14175  003350  0E00               	movlw	0
 14176  003352  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
 14177  003354  0E00               	movlw	0
 14178  003356  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
 14179                           
 14180                           ; BSR set to: 0
 14181  003358  0012               	return	
 14182  00335A                     l2796:
 14183                           
 14184                           ; BSR set to: 0
 14185                           
 14186                           ; BSR set to: 0
 14187  00335A  3565               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 14188  00335C  3566               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 14189  00335E  6F6A               	movwf	__div_to_l_@cntr& (0+255),b
 14190  003360  516A               	movf	__div_to_l_@cntr& (0+255),w,b
 14191  003362  A4D8               	btfss	status,2,c
 14192  003364  D009               	goto	l2798
 14193                           
 14194                           ; BSR set to: 0
 14195  003366  0E00               	movlw	0
 14196  003368  6F60               	movwf	?__div_to_l_& (0+255),b
 14197  00336A  0E00               	movlw	0
 14198  00336C  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
 14199  00336E  0E00               	movlw	0
 14200  003370  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
 14201  003372  0E00               	movlw	0
 14202  003374  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
 14203                           
 14204                           ; BSR set to: 0
 14205  003376  0012               	return	
 14206  003378                     l2798:
 14207                           
 14208                           ; BSR set to: 0
 14209                           
 14210                           ; BSR set to: 0
 14211  003378  8F62               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 14212                           
 14213                           ; BSR set to: 0
 14214  00337A  0EFF               	movlw	255
 14215  00337C  1760               	andwf	__div_to_l_@f1& (0+255),f,b
 14216  00337E  0EFF               	movlw	255
 14217  003380  1761               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 14218  003382  0EFF               	movlw	255
 14219  003384  1762               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 14220  003386  0E00               	movlw	0
 14221  003388  1763               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 14222                           
 14223                           ; BSR set to: 0
 14224  00338A  8F65               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 14225  00338C  0EFF               	movlw	255
 14226  00338E  1763               	andwf	__div_to_l_@f2& (0+255),f,b
 14227  003390  0EFF               	movlw	255
 14228  003392  1764               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 14229  003394  0EFF               	movlw	255
 14230  003396  1765               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 14231  003398  0E00               	movlw	0
 14232  00339A  1766               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 14233                           
 14234                           ; BSR set to: 0
 14235  00339C  0E00               	movlw	0
 14236  00339E  6F66               	movwf	__div_to_l_@quot& (0+255),b
 14237  0033A0  0E00               	movlw	0
 14238  0033A2  6F67               	movwf	(__div_to_l_@quot+1)& (0+255),b
 14239  0033A4  0E00               	movlw	0
 14240  0033A6  6F68               	movwf	(__div_to_l_@quot+2)& (0+255),b
 14241  0033A8  0E00               	movlw	0
 14242  0033AA  6F69               	movwf	(__div_to_l_@quot+3)& (0+255),b
 14243                           
 14244                           ; BSR set to: 0
 14245  0033AC  0E7F               	movlw	127
 14246  0033AE  5F6B               	subwf	__div_to_l_@exp1& (0+255),f,b
 14247                           
 14248                           ; BSR set to: 0
 14249  0033B0  516A               	movf	__div_to_l_@cntr& (0+255),w,b
 14250  0033B2  0FA0               	addlw	160
 14251  0033B4  5F6B               	subwf	__div_to_l_@exp1& (0+255),f,b
 14252                           
 14253                           ; BSR set to: 0
 14254  0033B6  0E20               	movlw	32
 14255  0033B8  6F6A               	movwf	__div_to_l_@cntr& (0+255),b
 14256  0033BA                     
 14257                           ; BSR set to: 0
 14258                           
 14259                           ; BSR set to: 0
 14260  0033BA  90D8               	bcf	status,0,c
 14261  0033BC  3766               	rlcf	__div_to_l_@quot& (0+255),f,b
 14262  0033BE  3767               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 14263  0033C0  3768               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 14264  0033C2  3769               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 14265                           
 14266                           ; BSR set to: 0
 14267  0033C4  5163               	movf	__div_to_l_@f2& (0+255),w,b
 14268  0033C6  5D60               	subwf	__div_to_l_@f1& (0+255),w,b
 14269  0033C8  5164               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 14270  0033CA  5961               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 14271  0033CC  5165               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 14272  0033CE  5962               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 14273  0033D0  5166               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 14274  0033D2  5963               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 14275  0033D4  A0D8               	btfss	status,0,c
 14276  0033D6  D009               	goto	l2800
 14277                           
 14278                           ; BSR set to: 0
 14279  0033D8  5163               	movf	__div_to_l_@f2& (0+255),w,b
 14280  0033DA  5F60               	subwf	__div_to_l_@f1& (0+255),f,b
 14281  0033DC  5164               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 14282  0033DE  5B61               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 14283  0033E0  5165               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 14284  0033E2  5B62               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 14285  0033E4  5166               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 14286  0033E6  5B63               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 14287                           
 14288                           ; BSR set to: 0
 14289  0033E8  8166               	bsf	__div_to_l_@quot& (0+255),0,b
 14290  0033EA                     l2800:
 14291                           
 14292                           ; BSR set to: 0
 14293                           
 14294                           ; BSR set to: 0
 14295  0033EA  90D8               	bcf	status,0,c
 14296  0033EC  3760               	rlcf	__div_to_l_@f1& (0+255),f,b
 14297  0033EE  3761               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 14298  0033F0  3762               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 14299  0033F2  3763               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 14300                           
 14301                           ; BSR set to: 0
 14302  0033F4  2F6A               	decfsz	__div_to_l_@cntr& (0+255),f,b
 14303  0033F6  D7E1               	goto	l2799
 14304                           
 14305                           ; BSR set to: 0
 14306                           
 14307                           ; BSR set to: 0
 14308  0033F8  AF6B               	btfss	__div_to_l_@exp1& (0+255),7,b
 14309  0033FA  D016               	goto	l2802
 14310                           
 14311                           ; BSR set to: 0
 14312  0033FC  516B               	movf	__div_to_l_@exp1& (0+255),w,b
 14313  0033FE  0A80               	xorlw	128
 14314  003400  0F9F               	addlw	159
 14315  003402  B0D8               	btfsc	status,0,c
 14316  003404  D009               	goto	l2803
 14317                           
 14318                           ; BSR set to: 0
 14319  003406  0E00               	movlw	0
 14320  003408  6F60               	movwf	?__div_to_l_& (0+255),b
 14321  00340A  0E00               	movlw	0
 14322  00340C  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
 14323  00340E  0E00               	movlw	0
 14324  003410  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
 14325  003412  0E00               	movlw	0
 14326  003414  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
 14327                           
 14328                           ; BSR set to: 0
 14329  003416  0012               	return	
 14330  003418                     l2803:
 14331                           
 14332                           ; BSR set to: 0
 14333                           
 14334                           ; BSR set to: 0
 14335                           
 14336                           ; BSR set to: 0
 14337  003418  90D8               	bcf	status,0,c
 14338  00341A  3369               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 14339  00341C  3368               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 14340  00341E  3367               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 14341  003420  3366               	rrcf	__div_to_l_@quot& (0+255),f,b
 14342                           
 14343                           ; BSR set to: 0
 14344  003422  3F6B               	incfsz	__div_to_l_@exp1& (0+255),f,b
 14345  003424  D7F9               	goto	l2803
 14346                           
 14347                           ; BSR set to: 0
 14348  003426  D015               	goto	u7380
 14349  003428                     l2802:
 14350                           
 14351                           ; BSR set to: 0
 14352                           
 14353                           ; BSR set to: 0
 14354  003428  0E1F               	movlw	31
 14355  00342A  656B               	cpfsgt	__div_to_l_@exp1& (0+255),b
 14356  00342C  D00F               	goto	l2808
 14357                           
 14358                           ; BSR set to: 0
 14359  00342E  0E00               	movlw	0
 14360  003430  6F60               	movwf	?__div_to_l_& (0+255),b
 14361  003432  0E00               	movlw	0
 14362  003434  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
 14363  003436  0E00               	movlw	0
 14364  003438  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
 14365  00343A  0E00               	movlw	0
 14366  00343C  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
 14367                           
 14368                           ; BSR set to: 0
 14369  00343E  0012               	return	
 14370  003440                     
 14371                           ; BSR set to: 0
 14372                           
 14373                           ; BSR set to: 0
 14374  003440  90D8               	bcf	status,0,c
 14375  003442  3766               	rlcf	__div_to_l_@quot& (0+255),f,b
 14376  003444  3767               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 14377  003446  3768               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 14378  003448  3769               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 14379  00344A  076B               	decf	__div_to_l_@exp1& (0+255),f,b
 14380  00344C                     l2808:
 14381                           
 14382                           ; BSR set to: 0
 14383                           
 14384                           ; BSR set to: 0
 14385  00344C  516B               	movf	__div_to_l_@exp1& (0+255),w,b
 14386  00344E  A4D8               	btfss	status,2,c
 14387  003450  D7F7               	goto	l2809
 14388  003452                     u7380:
 14389                           
 14390                           ; BSR set to: 0
 14391                           
 14392                           ; BSR set to: 0
 14393  003452  C066  F060         	movff	__div_to_l_@quot,?__div_to_l_
 14394  003456  C067  F061         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 14395  00345A  C068  F062         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 14396  00345E  C069  F063         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 14397                           
 14398                           ; BSR set to: 0
 14399  003462  0012               	return		;funcret
 14400  003464                     __end_of__div_to_l_:
 14401                           	opt stack 0
 14402                           tblptru	equ	0xFF8
 14403                           tblptrh	equ	0xFF7
 14404                           tblptrl	equ	0xFF6
 14405                           tablat	equ	0xFF5
 14406                           prodh	equ	0xFF4
 14407                           prodl	equ	0xFF3
 14408                           intcon	equ	0xFF2
 14409                           postinc0	equ	0xFEE
 14410                           wreg	equ	0xFE8
 14411                           indf1	equ	0xFE7
 14412                           postdec1	equ	0xFE5
 14413                           fsr1h	equ	0xFE2
 14414                           fsr1l	equ	0xFE1
 14415                           indf2	equ	0xFDF
 14416                           postinc2	equ	0xFDE
 14417                           postdec2	equ	0xFDD
 14418                           plusw2	equ	0xFDB
 14419                           fsr2h	equ	0xFDA
 14420                           fsr2l	equ	0xFD9
 14421                           status	equ	0xFD8
 14422                           
 14423 ;; *************** function ___lltoft *****************
 14424 ;; Defined at:
 14425 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lltoft.c"
 14426 ;; Parameters:    Size  Location     Type
 14427 ;;  c               4    8[BANK0 ] unsigned long 
 14428 ;; Auto vars:     Size  Location     Type
 14429 ;;  exp             1   16[BANK0 ] unsigned char 
 14430 ;; Return value:  Size  Location     Type
 14431 ;;                  3    8[BANK0 ] float 
 14432 ;; Registers used:
 14433 ;;		wreg, status,2, status,0, cstack
 14434 ;; Tracked objects:
 14435 ;;		On entry : 0/0
 14436 ;;		On exit  : 0/0
 14437 ;;		Unchanged: 0/0
 14438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14439 ;;      Params:         0       4       0       0       0       0       0       0       0
 14440 ;;      Locals:         0       1       0       0       0       0       0       0       0
 14441 ;;      Temps:          0       4       0       0       0       0       0       0       0
 14442 ;;      Totals:         0       9       0       0       0       0       0       0       0
 14443 ;;Total ram usage:        9 bytes
 14444 ;; Hardware stack levels used:    1
 14445 ;; Hardware stack levels required when called:   11
 14446 ;; This function calls:
 14447 ;;		___ftpack
 14448 ;; This function is called by:
 14449 ;;		_sprintf
 14450 ;; This function uses a non-reentrant model
 14451 ;;
 14452                           
 14453                           	psect	text43
 14454  004F10                     __ptext43:
 14455                           	opt stack 0
 14456  004F10                     ___lltoft:
 14457                           	opt stack 18
 14458                           
 14459                           ; BSR set to: 0
 14460                           ;incstack = 0
 14461  004F10  0E8E               	movlw	142
 14462  004F12  0100               	movlb	0	; () banked
 14463  004F14  6F70               	movwf	___lltoft@exp& (0+255),b
 14464  004F16  D006               	goto	l3007
 14465  004F18                     
 14466                           ; BSR set to: 0
 14467                           
 14468                           ; BSR set to: 0
 14469  004F18  90D8               	bcf	status,0,c
 14470  004F1A  336B               	rrcf	(___lltoft@c+3)& (0+255),f,b
 14471  004F1C  336A               	rrcf	(___lltoft@c+2)& (0+255),f,b
 14472  004F1E  3369               	rrcf	(___lltoft@c+1)& (0+255),f,b
 14473  004F20  3368               	rrcf	___lltoft@c& (0+255),f,b
 14474  004F22  2B70               	incf	___lltoft@exp& (0+255),f,b
 14475  004F24                     l3007:
 14476                           
 14477                           ; BSR set to: 0
 14478                           
 14479                           ; BSR set to: 0
 14480  004F24  0E00               	movlw	0
 14481  004F26  1568               	andwf	___lltoft@c& (0+255),w,b
 14482  004F28  6F6C               	movwf	??___lltoft& (0+255),b
 14483  004F2A  0E00               	movlw	0
 14484  004F2C  1569               	andwf	(___lltoft@c+1)& (0+255),w,b
 14485  004F2E  6F6D               	movwf	(??___lltoft+1)& (0+255),b
 14486  004F30  0E00               	movlw	0
 14487  004F32  156A               	andwf	(___lltoft@c+2)& (0+255),w,b
 14488  004F34  6F6E               	movwf	(??___lltoft+2)& (0+255),b
 14489  004F36  0EFF               	movlw	255
 14490  004F38  156B               	andwf	(___lltoft@c+3)& (0+255),w,b
 14491  004F3A  6F6F               	movwf	(??___lltoft+3)& (0+255),b
 14492  004F3C  516C               	movf	??___lltoft& (0+255),w,b
 14493  004F3E  116D               	iorwf	(??___lltoft+1)& (0+255),w,b
 14494  004F40  116E               	iorwf	(??___lltoft+2)& (0+255),w,b
 14495  004F42  116F               	iorwf	(??___lltoft+3)& (0+255),w,b
 14496  004F44  A4D8               	btfss	status,2,c
 14497  004F46  D7E8               	goto	l3008
 14498                           
 14499                           ; BSR set to: 0
 14500                           
 14501                           ; BSR set to: 0
 14502  004F48  C068  F060         	movff	___lltoft@c,___ftpack@arg
 14503  004F4C  C069  F061         	movff	___lltoft@c+1,___ftpack@arg+1
 14504  004F50  C06A  F062         	movff	___lltoft@c+2,___ftpack@arg+2
 14505  004F54  C070  F063         	movff	___lltoft@exp,___ftpack@exp
 14506  004F58  0E00               	movlw	0
 14507  004F5A  6F64               	movwf	___ftpack@sign& (0+255),b
 14508  004F5C  ECFD  F020         	call	___ftpack	;wreg free
 14509  004F60  C060  F068         	movff	?___ftpack,?___lltoft
 14510  004F64  C061  F069         	movff	?___ftpack+1,?___lltoft+1
 14511  004F68  C062  F06A         	movff	?___ftpack+2,?___lltoft+2
 14512  004F6C  0012               	return	
 14513  004F6E                     __end_of___lltoft:
 14514                           	opt stack 0
 14515                           tblptru	equ	0xFF8
 14516                           tblptrh	equ	0xFF7
 14517                           tblptrl	equ	0xFF6
 14518                           tablat	equ	0xFF5
 14519                           prodh	equ	0xFF4
 14520                           prodl	equ	0xFF3
 14521                           intcon	equ	0xFF2
 14522                           postinc0	equ	0xFEE
 14523                           wreg	equ	0xFE8
 14524                           indf1	equ	0xFE7
 14525                           postdec1	equ	0xFE5
 14526                           fsr1h	equ	0xFE2
 14527                           fsr1l	equ	0xFE1
 14528                           indf2	equ	0xFDF
 14529                           postinc2	equ	0xFDE
 14530                           postdec2	equ	0xFDD
 14531                           plusw2	equ	0xFDB
 14532                           fsr2h	equ	0xFDA
 14533                           fsr2l	equ	0xFD9
 14534                           status	equ	0xFD8
 14535                           
 14536 ;; *************** function ___llmod *****************
 14537 ;; Defined at:
 14538 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\llmod.c"
 14539 ;; Parameters:    Size  Location     Type
 14540 ;;  dividend        4   13[BANK0 ] unsigned long 
 14541 ;;  divisor         4   17[BANK0 ] unsigned long 
 14542 ;; Auto vars:     Size  Location     Type
 14543 ;;  counter         1   21[BANK0 ] unsigned char 
 14544 ;; Return value:  Size  Location     Type
 14545 ;;                  4   13[BANK0 ] unsigned long 
 14546 ;; Registers used:
 14547 ;;		wreg, status,2, status,0
 14548 ;; Tracked objects:
 14549 ;;		On entry : 0/0
 14550 ;;		On exit  : 0/0
 14551 ;;		Unchanged: 0/0
 14552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14553 ;;      Params:         0       8       0       0       0       0       0       0       0
 14554 ;;      Locals:         0       1       0       0       0       0       0       0       0
 14555 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14556 ;;      Totals:         0       9       0       0       0       0       0       0       0
 14557 ;;Total ram usage:        9 bytes
 14558 ;; Hardware stack levels used:    1
 14559 ;; Hardware stack levels required when called:   10
 14560 ;; This function calls:
 14561 ;;		Nothing
 14562 ;; This function is called by:
 14563 ;;		_sprintf
 14564 ;; This function uses a non-reentrant model
 14565 ;;
 14566                           
 14567                           	psect	text44
 14568  004DE4                     __ptext44:
 14569                           	opt stack 0
 14570  004DE4                     ___llmod:
 14571                           	opt stack 19
 14572                           
 14573                           ;incstack = 0
 14574  004DE4  0100               	movlb	0	; () banked
 14575  004DE6  5171               	movf	___llmod@divisor& (0+255),w,b
 14576  004DE8  1172               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 14577  004DEA  1173               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 14578  004DEC  1174               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 14579  004DEE  B4D8               	btfsc	status,2,c
 14580  004DF0  D024               	goto	l3001
 14581                           
 14582                           ; BSR set to: 0
 14583  004DF2  0E01               	movlw	1
 14584  004DF4  6F75               	movwf	___llmod@counter& (0+255),b
 14585  004DF6  D006               	goto	l2996
 14586  004DF8                     
 14587                           ; BSR set to: 0
 14588                           
 14589                           ; BSR set to: 0
 14590  004DF8  90D8               	bcf	status,0,c
 14591  004DFA  3771               	rlcf	___llmod@divisor& (0+255),f,b
 14592  004DFC  3772               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 14593  004DFE  3773               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 14594  004E00  3774               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 14595  004E02  2B75               	incf	___llmod@counter& (0+255),f,b
 14596  004E04                     l2996:
 14597                           
 14598                           ; BSR set to: 0
 14599                           
 14600                           ; BSR set to: 0
 14601  004E04  AF74               	btfss	(___llmod@divisor+3)& (0+255),7,b
 14602  004E06  D7F8               	goto	l2997
 14603  004E08                     u7560:
 14604                           
 14605                           ; BSR set to: 0
 14606                           
 14607                           ; BSR set to: 0
 14608                           
 14609                           ; BSR set to: 0
 14610  004E08  5171               	movf	___llmod@divisor& (0+255),w,b
 14611  004E0A  5D6D               	subwf	___llmod@dividend& (0+255),w,b
 14612  004E0C  5172               	movf	(___llmod@divisor+1)& (0+255),w,b
 14613  004E0E  596E               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 14614  004E10  5173               	movf	(___llmod@divisor+2)& (0+255),w,b
 14615  004E12  596F               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 14616  004E14  5174               	movf	(___llmod@divisor+3)& (0+255),w,b
 14617  004E16  5970               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 14618  004E18  A0D8               	btfss	status,0,c
 14619  004E1A  D008               	goto	l3000
 14620                           
 14621                           ; BSR set to: 0
 14622  004E1C  5171               	movf	___llmod@divisor& (0+255),w,b
 14623  004E1E  5F6D               	subwf	___llmod@dividend& (0+255),f,b
 14624  004E20  5172               	movf	(___llmod@divisor+1)& (0+255),w,b
 14625  004E22  5B6E               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 14626  004E24  5173               	movf	(___llmod@divisor+2)& (0+255),w,b
 14627  004E26  5B6F               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 14628  004E28  5174               	movf	(___llmod@divisor+3)& (0+255),w,b
 14629  004E2A  5B70               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 14630  004E2C                     l3000:
 14631                           
 14632                           ; BSR set to: 0
 14633                           
 14634                           ; BSR set to: 0
 14635  004E2C  90D8               	bcf	status,0,c
 14636  004E2E  3374               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 14637  004E30  3373               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 14638  004E32  3372               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 14639  004E34  3371               	rrcf	___llmod@divisor& (0+255),f,b
 14640                           
 14641                           ; BSR set to: 0
 14642  004E36  2F75               	decfsz	___llmod@counter& (0+255),f,b
 14643  004E38  D7E7               	goto	u7560
 14644  004E3A                     l3001:
 14645                           
 14646                           ; BSR set to: 0
 14647                           
 14648                           ; BSR set to: 0
 14649  004E3A  C06D  F06D         	movff	___llmod@dividend,?___llmod
 14650  004E3E  C06E  F06E         	movff	___llmod@dividend+1,?___llmod+1
 14651  004E42  C06F  F06F         	movff	___llmod@dividend+2,?___llmod+2
 14652  004E46  C070  F070         	movff	___llmod@dividend+3,?___llmod+3
 14653                           
 14654                           ; BSR set to: 0
 14655  004E4A  0012               	return		;funcret
 14656  004E4C                     __end_of___llmod:
 14657                           	opt stack 0
 14658                           tblptru	equ	0xFF8
 14659                           tblptrh	equ	0xFF7
 14660                           tblptrl	equ	0xFF6
 14661                           tablat	equ	0xFF5
 14662                           prodh	equ	0xFF4
 14663                           prodl	equ	0xFF3
 14664                           intcon	equ	0xFF2
 14665                           postinc0	equ	0xFEE
 14666                           wreg	equ	0xFE8
 14667                           indf1	equ	0xFE7
 14668                           postdec1	equ	0xFE5
 14669                           fsr1h	equ	0xFE2
 14670                           fsr1l	equ	0xFE1
 14671                           indf2	equ	0xFDF
 14672                           postinc2	equ	0xFDE
 14673                           postdec2	equ	0xFDD
 14674                           plusw2	equ	0xFDB
 14675                           fsr2h	equ	0xFDA
 14676                           fsr2l	equ	0xFD9
 14677                           status	equ	0xFD8
 14678                           
 14679 ;; *************** function ___lldiv *****************
 14680 ;; Defined at:
 14681 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lldiv.c"
 14682 ;; Parameters:    Size  Location     Type
 14683 ;;  dividend        4    0[BANK0 ] unsigned long 
 14684 ;;  divisor         4    4[BANK0 ] unsigned long 
 14685 ;; Auto vars:     Size  Location     Type
 14686 ;;  quotient        4    8[BANK0 ] unsigned long 
 14687 ;;  counter         1   12[BANK0 ] unsigned char 
 14688 ;; Return value:  Size  Location     Type
 14689 ;;                  4    0[BANK0 ] unsigned long 
 14690 ;; Registers used:
 14691 ;;		wreg, status,2, status,0
 14692 ;; Tracked objects:
 14693 ;;		On entry : 0/0
 14694 ;;		On exit  : 0/0
 14695 ;;		Unchanged: 0/0
 14696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14697 ;;      Params:         0       8       0       0       0       0       0       0       0
 14698 ;;      Locals:         0       5       0       0       0       0       0       0       0
 14699 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14700 ;;      Totals:         0      13       0       0       0       0       0       0       0
 14701 ;;Total ram usage:       13 bytes
 14702 ;; Hardware stack levels used:    1
 14703 ;; Hardware stack levels required when called:   10
 14704 ;; This function calls:
 14705 ;;		Nothing
 14706 ;; This function is called by:
 14707 ;;		_setup_uart
 14708 ;;		_sprintf
 14709 ;; This function uses a non-reentrant model
 14710 ;;
 14711                           
 14712                           	psect	text45
 14713  004AA2                     __ptext45:
 14714                           	opt stack 0
 14715  004AA2                     ___lldiv:
 14716                           	opt stack 19
 14717                           
 14718                           ; BSR set to: 0
 14719                           ;incstack = 0
 14720  004AA2  0E00               	movlw	0
 14721  004AA4  0100               	movlb	0	; () banked
 14722  004AA6  6F68               	movwf	___lldiv@quotient& (0+255),b
 14723  004AA8  0E00               	movlw	0
 14724  004AAA  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 14725  004AAC  0E00               	movlw	0
 14726  004AAE  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 14727  004AB0  0E00               	movlw	0
 14728  004AB2  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 14729                           
 14730                           ; BSR set to: 0
 14731  004AB4  5164               	movf	___lldiv@divisor& (0+255),w,b
 14732  004AB6  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 14733  004AB8  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 14734  004ABA  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 14735  004ABC  B4D8               	btfsc	status,2,c
 14736  004ABE  D02A               	goto	l2991
 14737                           
 14738                           ; BSR set to: 0
 14739  004AC0  0E01               	movlw	1
 14740  004AC2  6F6C               	movwf	___lldiv@counter& (0+255),b
 14741  004AC4  D006               	goto	l2986
 14742  004AC6                     
 14743                           ; BSR set to: 0
 14744                           
 14745                           ; BSR set to: 0
 14746  004AC6  90D8               	bcf	status,0,c
 14747  004AC8  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 14748  004ACA  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 14749  004ACC  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 14750  004ACE  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 14751  004AD0  2B6C               	incf	___lldiv@counter& (0+255),f,b
 14752  004AD2                     l2986:
 14753                           
 14754                           ; BSR set to: 0
 14755                           
 14756                           ; BSR set to: 0
 14757  004AD2  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 14758  004AD4  D7F8               	goto	l2987
 14759  004AD6                     u7530:
 14760                           
 14761                           ; BSR set to: 0
 14762                           
 14763                           ; BSR set to: 0
 14764                           
 14765                           ; BSR set to: 0
 14766  004AD6  90D8               	bcf	status,0,c
 14767  004AD8  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 14768  004ADA  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 14769  004ADC  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 14770  004ADE  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 14771                           
 14772                           ; BSR set to: 0
 14773  004AE0  5164               	movf	___lldiv@divisor& (0+255),w,b
 14774  004AE2  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 14775  004AE4  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 14776  004AE6  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 14777  004AE8  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 14778  004AEA  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 14779  004AEC  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 14780  004AEE  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 14781  004AF0  A0D8               	btfss	status,0,c
 14782  004AF2  D009               	goto	l2990
 14783                           
 14784                           ; BSR set to: 0
 14785  004AF4  5164               	movf	___lldiv@divisor& (0+255),w,b
 14786  004AF6  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 14787  004AF8  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 14788  004AFA  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 14789  004AFC  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 14790  004AFE  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 14791  004B00  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 14792  004B02  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 14793                           
 14794                           ; BSR set to: 0
 14795  004B04  8168               	bsf	___lldiv@quotient& (0+255),0,b
 14796  004B06                     l2990:
 14797                           
 14798                           ; BSR set to: 0
 14799                           
 14800                           ; BSR set to: 0
 14801  004B06  90D8               	bcf	status,0,c
 14802  004B08  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 14803  004B0A  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 14804  004B0C  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 14805  004B0E  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 14806                           
 14807                           ; BSR set to: 0
 14808  004B10  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 14809  004B12  D7E1               	goto	u7530
 14810  004B14                     l2991:
 14811                           
 14812                           ; BSR set to: 0
 14813                           
 14814                           ; BSR set to: 0
 14815  004B14  C068  F060         	movff	___lldiv@quotient,?___lldiv
 14816  004B18  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 14817  004B1C  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 14818  004B20  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 14819                           
 14820                           ; BSR set to: 0
 14821  004B24  0012               	return		;funcret
 14822  004B26                     __end_of___lldiv:
 14823                           	opt stack 0
 14824                           tblptru	equ	0xFF8
 14825                           tblptrh	equ	0xFF7
 14826                           tblptrl	equ	0xFF6
 14827                           tablat	equ	0xFF5
 14828                           prodh	equ	0xFF4
 14829                           prodl	equ	0xFF3
 14830                           intcon	equ	0xFF2
 14831                           postinc0	equ	0xFEE
 14832                           wreg	equ	0xFE8
 14833                           indf1	equ	0xFE7
 14834                           postdec1	equ	0xFE5
 14835                           fsr1h	equ	0xFE2
 14836                           fsr1l	equ	0xFE1
 14837                           indf2	equ	0xFDF
 14838                           postinc2	equ	0xFDE
 14839                           postdec2	equ	0xFDD
 14840                           plusw2	equ	0xFDB
 14841                           fsr2h	equ	0xFDA
 14842                           fsr2l	equ	0xFD9
 14843                           status	equ	0xFD8
 14844                           
 14845 ;; *************** function ___fttol *****************
 14846 ;; Defined at:
 14847 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\fttol.c"
 14848 ;; Parameters:    Size  Location     Type
 14849 ;;  f1              3   80[BANK0 ] float 
 14850 ;; Auto vars:     Size  Location     Type
 14851 ;;  lval            4   90[BANK0 ] unsigned long 
 14852 ;;  exp1            1   94[BANK0 ] unsigned char 
 14853 ;;  sign1           1   89[BANK0 ] unsigned char 
 14854 ;; Return value:  Size  Location     Type
 14855 ;;                  4   80[BANK0 ] long 
 14856 ;; Registers used:
 14857 ;;		wreg, status,2, status,0
 14858 ;; Tracked objects:
 14859 ;;		On entry : 0/0
 14860 ;;		On exit  : 0/0
 14861 ;;		Unchanged: 0/0
 14862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14863 ;;      Params:         0       4       0       0       0       0       0       0       0
 14864 ;;      Locals:         0       6       0       0       0       0       0       0       0
 14865 ;;      Temps:          0       5       0       0       0       0       0       0       0
 14866 ;;      Totals:         0      15       0       0       0       0       0       0       0
 14867 ;;Total ram usage:       15 bytes
 14868 ;; Hardware stack levels used:    1
 14869 ;; Hardware stack levels required when called:   10
 14870 ;; This function calls:
 14871 ;;		Nothing
 14872 ;; This function is called by:
 14873 ;;		_main
 14874 ;;		_sprintf
 14875 ;; This function uses a non-reentrant model
 14876 ;;
 14877                           
 14878                           	psect	text46
 14879  003978                     __ptext46:
 14880                           	opt stack 0
 14881  003978                     ___fttol:
 14882                           	opt stack 19
 14883                           
 14884                           ; BSR set to: 0
 14885                           ;incstack = 0
 14886  003978  C0B2  F0B4         	movff	___fttol@f1+2,??___fttol
 14887  00397C  0100               	movlb	0	; () banked
 14888  00397E  6BB5               	clrf	(??___fttol+1)& (0+255),b
 14889  003980  6BB6               	clrf	(??___fttol+2)& (0+255),b
 14890  003982  35B1               	rlcf	(___fttol@f1+1)& (0+255),w,b
 14891  003984  37B4               	rlcf	??___fttol& (0+255),f,b
 14892  003986  E301               	bnc	u7441
 14893  003988  81B5               	bsf	(??___fttol+1)& (0+255),0,b
 14894  00398A                     u7441:
 14895  00398A  51B4               	movf	??___fttol& (0+255),w,b
 14896  00398C  6FBE               	movwf	___fttol@exp1& (0+255),b
 14897  00398E  51BE               	movf	___fttol@exp1& (0+255),w,b
 14898  003990  A4D8               	btfss	status,2,c
 14899  003992  D009               	goto	l2945
 14900                           
 14901                           ; BSR set to: 0
 14902  003994  0E00               	movlw	0
 14903  003996  6FB0               	movwf	?___fttol& (0+255),b
 14904  003998  0E00               	movlw	0
 14905  00399A  6FB1               	movwf	(?___fttol+1)& (0+255),b
 14906  00399C  0E00               	movlw	0
 14907  00399E  6FB2               	movwf	(?___fttol+2)& (0+255),b
 14908  0039A0  0E00               	movlw	0
 14909  0039A2  6FB3               	movwf	(?___fttol+3)& (0+255),b
 14910                           
 14911                           ; BSR set to: 0
 14912  0039A4  0012               	return	
 14913  0039A6                     l2945:
 14914                           
 14915                           ; BSR set to: 0
 14916                           
 14917                           ; BSR set to: 0
 14918  0039A6  0E17               	movlw	23
 14919  0039A8  6FB4               	movwf	??___fttol& (0+255),b
 14920  0039AA  C0B0  F0B5         	movff	___fttol@f1,??___fttol+1
 14921  0039AE  C0B1  F0B6         	movff	___fttol@f1+1,??___fttol+2
 14922  0039B2  C0B2  F0B7         	movff	___fttol@f1+2,??___fttol+3
 14923  0039B6  29B4               	incf	??___fttol& (0+255),w,b
 14924  0039B8  6FB8               	movwf	(??___fttol+4)& (0+255),b
 14925  0039BA  D004               	goto	u7460
 14926  0039BC                     u7465:
 14927  0039BC  90D8               	bcf	status,0,c
 14928  0039BE  33B7               	rrcf	(??___fttol+3)& (0+255),f,b
 14929  0039C0  33B6               	rrcf	(??___fttol+2)& (0+255),f,b
 14930  0039C2  33B5               	rrcf	(??___fttol+1)& (0+255),f,b
 14931  0039C4                     u7460:
 14932  0039C4  2FB8               	decfsz	(??___fttol+4)& (0+255),f,b
 14933  0039C6  D7FA               	goto	u7465
 14934  0039C8  0100               	movlb	0	; () banked
 14935  0039CA  51B5               	movf	(??___fttol+1)& (0+255),w,b
 14936  0039CC  6FB9               	movwf	___fttol@sign1& (0+255),b
 14937                           
 14938                           ; BSR set to: 0
 14939  0039CE  8FB1               	bsf	(___fttol@f1+1)& (0+255),7,b
 14940                           
 14941                           ; BSR set to: 0
 14942  0039D0  0EFF               	movlw	255
 14943  0039D2  17B0               	andwf	___fttol@f1& (0+255),f,b
 14944  0039D4  0EFF               	movlw	255
 14945  0039D6  17B1               	andwf	(___fttol@f1+1)& (0+255),f,b
 14946  0039D8  0E00               	movlw	0
 14947  0039DA  17B2               	andwf	(___fttol@f1+2)& (0+255),f,b
 14948                           
 14949                           ; BSR set to: 0
 14950  0039DC  51B0               	movf	___fttol@f1& (0+255),w,b
 14951  0039DE  6FBA               	movwf	___fttol@lval& (0+255),b
 14952  0039E0  51B1               	movf	(___fttol@f1+1)& (0+255),w,b
 14953  0039E2  6FBB               	movwf	(___fttol@lval+1)& (0+255),b
 14954  0039E4  51B2               	movf	(___fttol@f1+2)& (0+255),w,b
 14955  0039E6  6FBC               	movwf	(___fttol@lval+2)& (0+255),b
 14956  0039E8  6BBD               	clrf	(___fttol@lval+3)& (0+255),b
 14957                           
 14958                           ; BSR set to: 0
 14959  0039EA  0E8E               	movlw	142
 14960  0039EC  5FBE               	subwf	___fttol@exp1& (0+255),f,b
 14961                           
 14962                           ; BSR set to: 0
 14963  0039EE  AFBE               	btfss	___fttol@exp1& (0+255),7,b
 14964  0039F0  D016               	goto	l2947
 14965                           
 14966                           ; BSR set to: 0
 14967  0039F2  51BE               	movf	___fttol@exp1& (0+255),w,b
 14968  0039F4  0A80               	xorlw	128
 14969  0039F6  0F8F               	addlw	143
 14970  0039F8  B0D8               	btfsc	status,0,c
 14971  0039FA  D009               	goto	l2948
 14972                           
 14973                           ; BSR set to: 0
 14974  0039FC  0E00               	movlw	0
 14975  0039FE  6FB0               	movwf	?___fttol& (0+255),b
 14976  003A00  0E00               	movlw	0
 14977  003A02  6FB1               	movwf	(?___fttol+1)& (0+255),b
 14978  003A04  0E00               	movlw	0
 14979  003A06  6FB2               	movwf	(?___fttol+2)& (0+255),b
 14980  003A08  0E00               	movlw	0
 14981  003A0A  6FB3               	movwf	(?___fttol+3)& (0+255),b
 14982                           
 14983                           ; BSR set to: 0
 14984  003A0C  0012               	return	
 14985  003A0E                     l2948:
 14986                           
 14987                           ; BSR set to: 0
 14988                           
 14989                           ; BSR set to: 0
 14990                           
 14991                           ; BSR set to: 0
 14992  003A0E  90D8               	bcf	status,0,c
 14993  003A10  33BD               	rrcf	(___fttol@lval+3)& (0+255),f,b
 14994  003A12  33BC               	rrcf	(___fttol@lval+2)& (0+255),f,b
 14995  003A14  33BB               	rrcf	(___fttol@lval+1)& (0+255),f,b
 14996  003A16  33BA               	rrcf	___fttol@lval& (0+255),f,b
 14997                           
 14998                           ; BSR set to: 0
 14999  003A18  3FBE               	incfsz	___fttol@exp1& (0+255),f,b
 15000  003A1A  D7F9               	goto	l2948
 15001                           
 15002                           ; BSR set to: 0
 15003  003A1C  D015               	goto	u7500
 15004  003A1E                     l2947:
 15005                           
 15006                           ; BSR set to: 0
 15007                           
 15008                           ; BSR set to: 0
 15009  003A1E  0E17               	movlw	23
 15010  003A20  65BE               	cpfsgt	___fttol@exp1& (0+255),b
 15011  003A22  D00F               	goto	l2953
 15012                           
 15013                           ; BSR set to: 0
 15014  003A24  0E00               	movlw	0
 15015  003A26  6FB0               	movwf	?___fttol& (0+255),b
 15016  003A28  0E00               	movlw	0
 15017  003A2A  6FB1               	movwf	(?___fttol+1)& (0+255),b
 15018  003A2C  0E00               	movlw	0
 15019  003A2E  6FB2               	movwf	(?___fttol+2)& (0+255),b
 15020  003A30  0E00               	movlw	0
 15021  003A32  6FB3               	movwf	(?___fttol+3)& (0+255),b
 15022                           
 15023                           ; BSR set to: 0
 15024  003A34  0012               	return	
 15025  003A36                     
 15026                           ; BSR set to: 0
 15027                           
 15028                           ; BSR set to: 0
 15029  003A36  90D8               	bcf	status,0,c
 15030  003A38  37BA               	rlcf	___fttol@lval& (0+255),f,b
 15031  003A3A  37BB               	rlcf	(___fttol@lval+1)& (0+255),f,b
 15032  003A3C  37BC               	rlcf	(___fttol@lval+2)& (0+255),f,b
 15033  003A3E  37BD               	rlcf	(___fttol@lval+3)& (0+255),f,b
 15034  003A40  07BE               	decf	___fttol@exp1& (0+255),f,b
 15035  003A42                     l2953:
 15036                           
 15037                           ; BSR set to: 0
 15038                           
 15039                           ; BSR set to: 0
 15040  003A42  51BE               	movf	___fttol@exp1& (0+255),w,b
 15041  003A44  A4D8               	btfss	status,2,c
 15042  003A46  D7F7               	goto	l2954
 15043  003A48                     u7500:
 15044                           
 15045                           ; BSR set to: 0
 15046                           
 15047                           ; BSR set to: 0
 15048                           
 15049                           ; BSR set to: 0
 15050  003A48  51B9               	movf	___fttol@sign1& (0+255),w,b
 15051  003A4A  B4D8               	btfsc	status,2,c
 15052  003A4C  D008               	goto	l2956
 15053                           
 15054                           ; BSR set to: 0
 15055  003A4E  1FBD               	comf	(___fttol@lval+3)& (0+255),f,b
 15056  003A50  1FBC               	comf	(___fttol@lval+2)& (0+255),f,b
 15057  003A52  1FBB               	comf	(___fttol@lval+1)& (0+255),f,b
 15058  003A54  6DBA               	negf	___fttol@lval& (0+255),b
 15059  003A56  0E00               	movlw	0
 15060  003A58  23BB               	addwfc	(___fttol@lval+1)& (0+255),f,b
 15061  003A5A  23BC               	addwfc	(___fttol@lval+2)& (0+255),f,b
 15062  003A5C  23BD               	addwfc	(___fttol@lval+3)& (0+255),f,b
 15063  003A5E                     l2956:
 15064                           
 15065                           ; BSR set to: 0
 15066                           
 15067                           ; BSR set to: 0
 15068  003A5E  C0BA  F0B0         	movff	___fttol@lval,?___fttol
 15069  003A62  C0BB  F0B1         	movff	___fttol@lval+1,?___fttol+1
 15070  003A66  C0BC  F0B2         	movff	___fttol@lval+2,?___fttol+2
 15071  003A6A  C0BD  F0B3         	movff	___fttol@lval+3,?___fttol+3
 15072  003A6E  0012               	return	
 15073  003A70                     __end_of___fttol:
 15074                           	opt stack 0
 15075                           tblptru	equ	0xFF8
 15076                           tblptrh	equ	0xFF7
 15077                           tblptrl	equ	0xFF6
 15078                           tablat	equ	0xFF5
 15079                           prodh	equ	0xFF4
 15080                           prodl	equ	0xFF3
 15081                           intcon	equ	0xFF2
 15082                           postinc0	equ	0xFEE
 15083                           wreg	equ	0xFE8
 15084                           indf1	equ	0xFE7
 15085                           postdec1	equ	0xFE5
 15086                           fsr1h	equ	0xFE2
 15087                           fsr1l	equ	0xFE1
 15088                           indf2	equ	0xFDF
 15089                           postinc2	equ	0xFDE
 15090                           postdec2	equ	0xFDD
 15091                           plusw2	equ	0xFDB
 15092                           fsr2h	equ	0xFDA
 15093                           fsr2l	equ	0xFD9
 15094                           status	equ	0xFD8
 15095                           
 15096 ;; *************** function ___ftsub *****************
 15097 ;; Defined at:
 15098 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftsub.c"
 15099 ;; Parameters:    Size  Location     Type
 15100 ;;  f1              3   32[BANK0 ] float 
 15101 ;;  f2              3   35[BANK0 ] float 
 15102 ;; Auto vars:     Size  Location     Type
 15103 ;;		None
 15104 ;; Return value:  Size  Location     Type
 15105 ;;                  3   32[BANK0 ] float 
 15106 ;; Registers used:
 15107 ;;		wreg, status,2, status,0, cstack
 15108 ;; Tracked objects:
 15109 ;;		On entry : 0/0
 15110 ;;		On exit  : 0/0
 15111 ;;		Unchanged: 0/0
 15112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15113 ;;      Params:         0       6       0       0       0       0       0       0       0
 15114 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15115 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15116 ;;      Totals:         0       6       0       0       0       0       0       0       0
 15117 ;;Total ram usage:        6 bytes
 15118 ;; Hardware stack levels used:    1
 15119 ;; Hardware stack levels required when called:   12
 15120 ;; This function calls:
 15121 ;;		___ftadd
 15122 ;; This function is called by:
 15123 ;;		_sprintf
 15124 ;; This function uses a non-reentrant model
 15125 ;;
 15126                           
 15127                           	psect	text47
 15128  0052C0                     __ptext47:
 15129                           	opt stack 0
 15130  0052C0                     ___ftsub:
 15131                           	opt stack 17
 15132                           
 15133                           ; BSR set to: 0
 15134                           ;incstack = 0
 15135  0052C0  0100               	movlb	0	; () banked
 15136  0052C2  5183               	movf	___ftsub@f2& (0+255),w,b
 15137  0052C4  1184               	iorwf	(___ftsub@f2+1)& (0+255),w,b
 15138  0052C6  1185               	iorwf	(___ftsub@f2+2)& (0+255),w,b
 15139  0052C8  B4D8               	btfsc	status,2,c
 15140  0052CA  D006               	goto	l2941
 15141                           
 15142                           ; BSR set to: 0
 15143  0052CC  0E00               	movlw	0
 15144  0052CE  1B83               	xorwf	___ftsub@f2& (0+255),f,b
 15145  0052D0  0E00               	movlw	0
 15146  0052D2  1B84               	xorwf	(___ftsub@f2+1)& (0+255),f,b
 15147  0052D4  0E80               	movlw	128
 15148  0052D6  1B85               	xorwf	(___ftsub@f2+2)& (0+255),f,b
 15149  0052D8                     l2941:
 15150                           
 15151                           ; BSR set to: 0
 15152                           
 15153                           ; BSR set to: 0
 15154  0052D8  C080  F074         	movff	___ftsub@f1,___ftadd@f1
 15155  0052DC  C081  F075         	movff	___ftsub@f1+1,___ftadd@f1+1
 15156  0052E0  C082  F076         	movff	___ftsub@f1+2,___ftadd@f1+2
 15157  0052E4  C083  F077         	movff	___ftsub@f2,___ftadd@f2
 15158  0052E8  C084  F078         	movff	___ftsub@f2+1,___ftadd@f2+1
 15159  0052EC  C085  F079         	movff	___ftsub@f2+2,___ftadd@f2+2
 15160  0052F0  EC8F  F014         	call	___ftadd	;wreg free
 15161  0052F4  C074  F080         	movff	?___ftadd,?___ftsub
 15162  0052F8  C075  F081         	movff	?___ftadd+1,?___ftsub+1
 15163  0052FC  C076  F082         	movff	?___ftadd+2,?___ftsub+2
 15164  005300  0012               	return	
 15165  005302                     __end_of___ftsub:
 15166                           	opt stack 0
 15167                           tblptru	equ	0xFF8
 15168                           tblptrh	equ	0xFF7
 15169                           tblptrl	equ	0xFF6
 15170                           tablat	equ	0xFF5
 15171                           prodh	equ	0xFF4
 15172                           prodl	equ	0xFF3
 15173                           intcon	equ	0xFF2
 15174                           postinc0	equ	0xFEE
 15175                           wreg	equ	0xFE8
 15176                           indf1	equ	0xFE7
 15177                           postdec1	equ	0xFE5
 15178                           fsr1h	equ	0xFE2
 15179                           fsr1l	equ	0xFE1
 15180                           indf2	equ	0xFDF
 15181                           postinc2	equ	0xFDE
 15182                           postdec2	equ	0xFDD
 15183                           plusw2	equ	0xFDB
 15184                           fsr2h	equ	0xFDA
 15185                           fsr2l	equ	0xFD9
 15186                           status	equ	0xFD8
 15187                           
 15188 ;; *************** function ___ftadd *****************
 15189 ;; Defined at:
 15190 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftadd.c"
 15191 ;; Parameters:    Size  Location     Type
 15192 ;;  f1              3   20[BANK0 ] float 
 15193 ;;  f2              3   23[BANK0 ] float 
 15194 ;; Auto vars:     Size  Location     Type
 15195 ;;  exp1            1   31[BANK0 ] unsigned char 
 15196 ;;  exp2            1   30[BANK0 ] unsigned char 
 15197 ;;  sign            1   29[BANK0 ] unsigned char 
 15198 ;; Return value:  Size  Location     Type
 15199 ;;                  3   20[BANK0 ] float 
 15200 ;; Registers used:
 15201 ;;		wreg, status,2, status,0, cstack
 15202 ;; Tracked objects:
 15203 ;;		On entry : 0/0
 15204 ;;		On exit  : 0/0
 15205 ;;		Unchanged: 0/0
 15206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15207 ;;      Params:         0       6       0       0       0       0       0       0       0
 15208 ;;      Locals:         0       3       0       0       0       0       0       0       0
 15209 ;;      Temps:          0       3       0       0       0       0       0       0       0
 15210 ;;      Totals:         0      12       0       0       0       0       0       0       0
 15211 ;;Total ram usage:       12 bytes
 15212 ;; Hardware stack levels used:    1
 15213 ;; Hardware stack levels required when called:   11
 15214 ;; This function calls:
 15215 ;;		___ftpack
 15216 ;; This function is called by:
 15217 ;;		_le_AD
 15218 ;;		_sprintf
 15219 ;;		___ftsub
 15220 ;; This function uses a non-reentrant model
 15221 ;;
 15222                           
 15223                           	psect	text48
 15224  00291E                     __ptext48:
 15225                           	opt stack 0
 15226  00291E                     ___ftadd:
 15227                           	opt stack 17
 15228                           
 15229                           ;incstack = 0
 15230  00291E  C076  F07A         	movff	___ftadd@f1+2,??___ftadd
 15231  002922  0100               	movlb	0	; () banked
 15232  002924  6B7B               	clrf	(??___ftadd+1)& (0+255),b
 15233  002926  6B7C               	clrf	(??___ftadd+2)& (0+255),b
 15234  002928  3575               	rlcf	(___ftadd@f1+1)& (0+255),w,b
 15235  00292A  377A               	rlcf	??___ftadd& (0+255),f,b
 15236  00292C  E301               	bnc	u6451
 15237  00292E  817B               	bsf	(??___ftadd+1)& (0+255),0,b
 15238  002930                     u6451:
 15239  002930  517A               	movf	??___ftadd& (0+255),w,b
 15240  002932  6F7F               	movwf	___ftadd@exp1& (0+255),b
 15241  002934  C079  F07A         	movff	___ftadd@f2+2,??___ftadd
 15242  002938  6B7B               	clrf	(??___ftadd+1)& (0+255),b
 15243  00293A  6B7C               	clrf	(??___ftadd+2)& (0+255),b
 15244  00293C  3578               	rlcf	(___ftadd@f2+1)& (0+255),w,b
 15245  00293E  377A               	rlcf	??___ftadd& (0+255),f,b
 15246  002940  E301               	bnc	u6461
 15247  002942  817B               	bsf	(??___ftadd+1)& (0+255),0,b
 15248  002944                     u6461:
 15249  002944  517A               	movf	??___ftadd& (0+255),w,b
 15250  002946  6F7E               	movwf	___ftadd@exp2& (0+255),b
 15251                           
 15252                           ; BSR set to: 0
 15253  002948  517F               	movf	___ftadd@exp1& (0+255),w,b
 15254  00294A  B4D8               	btfsc	status,2,c
 15255  00294C  D00B               	goto	u6490
 15256                           
 15257                           ; BSR set to: 0
 15258  00294E  517E               	movf	___ftadd@exp2& (0+255),w,b
 15259  002950  5D7F               	subwf	___ftadd@exp1& (0+255),w,b
 15260  002952  B0D8               	btfsc	status,0,c
 15261  002954  D00E               	goto	l2859
 15262                           
 15263                           ; BSR set to: 0
 15264  002956  517F               	movf	___ftadd@exp1& (0+255),w,b
 15265  002958  0800               	sublw	0
 15266  00295A  257E               	addwf	___ftadd@exp2& (0+255),w,b
 15267  00295C  6F7A               	movwf	??___ftadd& (0+255),b
 15268  00295E  0E18               	movlw	24
 15269  002960  657A               	cpfsgt	??___ftadd& (0+255),b
 15270  002962  D007               	goto	l2859
 15271  002964                     u6490:
 15272                           
 15273                           ; BSR set to: 0
 15274  002964  C077  F074         	movff	___ftadd@f2,?___ftadd
 15275  002968  C078  F075         	movff	___ftadd@f2+1,?___ftadd+1
 15276  00296C  C079  F076         	movff	___ftadd@f2+2,?___ftadd+2
 15277  002970  0012               	return	
 15278  002972                     l2859:
 15279                           
 15280                           ; BSR set to: 0
 15281                           
 15282                           ; BSR set to: 0
 15283  002972  517E               	movf	___ftadd@exp2& (0+255),w,b
 15284  002974  B4D8               	btfsc	status,2,c
 15285  002976  D00B               	goto	u6520
 15286                           
 15287                           ; BSR set to: 0
 15288  002978  517F               	movf	___ftadd@exp1& (0+255),w,b
 15289  00297A  5D7E               	subwf	___ftadd@exp2& (0+255),w,b
 15290  00297C  B0D8               	btfsc	status,0,c
 15291  00297E  D00E               	goto	l2863
 15292                           
 15293                           ; BSR set to: 0
 15294  002980  517E               	movf	___ftadd@exp2& (0+255),w,b
 15295  002982  0800               	sublw	0
 15296  002984  257F               	addwf	___ftadd@exp1& (0+255),w,b
 15297  002986  6F7A               	movwf	??___ftadd& (0+255),b
 15298  002988  0E18               	movlw	24
 15299  00298A  657A               	cpfsgt	??___ftadd& (0+255),b
 15300  00298C  D007               	goto	l2863
 15301  00298E                     u6520:
 15302                           
 15303                           ; BSR set to: 0
 15304  00298E  C074  F074         	movff	___ftadd@f1,?___ftadd
 15305  002992  C075  F075         	movff	___ftadd@f1+1,?___ftadd+1
 15306  002996  C076  F076         	movff	___ftadd@f1+2,?___ftadd+2
 15307  00299A  0012               	return	
 15308  00299C                     l2863:
 15309                           
 15310                           ; BSR set to: 0
 15311                           
 15312                           ; BSR set to: 0
 15313  00299C  0E06               	movlw	6
 15314  00299E  6F7D               	movwf	___ftadd@sign& (0+255),b
 15315                           
 15316                           ; BSR set to: 0
 15317  0029A0  BF76               	btfsc	(___ftadd@f1+2)& (0+255),7,b
 15318                           
 15319                           ; BSR set to: 0
 15320  0029A2  8F7D               	bsf	___ftadd@sign& (0+255),7,b
 15321                           
 15322                           ; BSR set to: 0
 15323                           
 15324                           ; BSR set to: 0
 15325  0029A4  BF79               	btfsc	(___ftadd@f2+2)& (0+255),7,b
 15326                           
 15327                           ; BSR set to: 0
 15328  0029A6  8D7D               	bsf	___ftadd@sign& (0+255),6,b
 15329                           
 15330                           ; BSR set to: 0
 15331  0029A8  8F75               	bsf	(___ftadd@f1+1)& (0+255),7,b
 15332                           
 15333                           ; BSR set to: 0
 15334  0029AA  0EFF               	movlw	255
 15335  0029AC  1774               	andwf	___ftadd@f1& (0+255),f,b
 15336  0029AE  0EFF               	movlw	255
 15337  0029B0  1775               	andwf	(___ftadd@f1+1)& (0+255),f,b
 15338  0029B2  0E00               	movlw	0
 15339  0029B4  1776               	andwf	(___ftadd@f1+2)& (0+255),f,b
 15340  0029B6  8F78               	bsf	(___ftadd@f2+1)& (0+255),7,b
 15341                           
 15342                           ; BSR set to: 0
 15343  0029B8  0EFF               	movlw	255
 15344  0029BA  1777               	andwf	___ftadd@f2& (0+255),f,b
 15345  0029BC  0EFF               	movlw	255
 15346  0029BE  1778               	andwf	(___ftadd@f2+1)& (0+255),f,b
 15347  0029C0  0E00               	movlw	0
 15348  0029C2  1779               	andwf	(___ftadd@f2+2)& (0+255),f,b
 15349                           
 15350                           ; BSR set to: 0
 15351  0029C4  517E               	movf	___ftadd@exp2& (0+255),w,b
 15352  0029C6  5D7F               	subwf	___ftadd@exp1& (0+255),w,b
 15353  0029C8  B0D8               	btfsc	status,0,c
 15354  0029CA  D01B               	goto	l2868
 15355  0029CC                     u6550:
 15356                           
 15357                           ; BSR set to: 0
 15358                           
 15359                           ; BSR set to: 0
 15360  0029CC  90D8               	bcf	status,0,c
 15361  0029CE  3777               	rlcf	___ftadd@f2& (0+255),f,b
 15362  0029D0  3778               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 15363  0029D2  3779               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 15364  0029D4  077E               	decf	___ftadd@exp2& (0+255),f,b
 15365                           
 15366                           ; BSR set to: 0
 15367  0029D6  517F               	movf	___ftadd@exp1& (0+255),w,b
 15368  0029D8  197E               	xorwf	___ftadd@exp2& (0+255),w,b
 15369  0029DA  B4D8               	btfsc	status,2,c
 15370  0029DC  D00D               	goto	l2873
 15371                           
 15372                           ; BSR set to: 0
 15373  0029DE  077D               	decf	___ftadd@sign& (0+255),f,b
 15374  0029E0  C07D  F07A         	movff	___ftadd@sign,??___ftadd
 15375  0029E4  0E07               	movlw	7
 15376  0029E6  177A               	andwf	??___ftadd& (0+255),f,b
 15377  0029E8  B4D8               	btfsc	status,2,c
 15378  0029EA  D006               	goto	l2873
 15379  0029EC  D7EF               	goto	u6550
 15380  0029EE                     
 15381                           ; BSR set to: 0
 15382                           
 15383                           ; BSR set to: 0
 15384  0029EE  90D8               	bcf	status,0,c
 15385  0029F0  3376               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 15386  0029F2  3375               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 15387  0029F4  3374               	rrcf	___ftadd@f1& (0+255),f,b
 15388  0029F6  2B7F               	incf	___ftadd@exp1& (0+255),f,b
 15389  0029F8                     l2873:
 15390                           
 15391                           ; BSR set to: 0
 15392                           
 15393                           ; BSR set to: 0
 15394  0029F8  517E               	movf	___ftadd@exp2& (0+255),w,b
 15395  0029FA  197F               	xorwf	___ftadd@exp1& (0+255),w,b
 15396  0029FC  B4D8               	btfsc	status,2,c
 15397  0029FE  D01F               	goto	u6620
 15398  002A00  D7F6               	goto	l2874
 15399  002A02                     l2868:
 15400                           
 15401                           ; BSR set to: 0
 15402                           
 15403                           ; BSR set to: 0
 15404  002A02  517F               	movf	___ftadd@exp1& (0+255),w,b
 15405  002A04  5D7E               	subwf	___ftadd@exp2& (0+255),w,b
 15406  002A06  B0D8               	btfsc	status,0,c
 15407  002A08  D01A               	goto	u6620
 15408  002A0A                     u6590:
 15409                           
 15410                           ; BSR set to: 0
 15411                           
 15412                           ; BSR set to: 0
 15413  002A0A  90D8               	bcf	status,0,c
 15414  002A0C  3774               	rlcf	___ftadd@f1& (0+255),f,b
 15415  002A0E  3775               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 15416  002A10  3776               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 15417  002A12  077F               	decf	___ftadd@exp1& (0+255),f,b
 15418                           
 15419                           ; BSR set to: 0
 15420  002A14  517F               	movf	___ftadd@exp1& (0+255),w,b
 15421  002A16  197E               	xorwf	___ftadd@exp2& (0+255),w,b
 15422  002A18  B4D8               	btfsc	status,2,c
 15423  002A1A  D00D               	goto	l2882
 15424                           
 15425                           ; BSR set to: 0
 15426  002A1C  077D               	decf	___ftadd@sign& (0+255),f,b
 15427  002A1E  C07D  F07A         	movff	___ftadd@sign,??___ftadd
 15428  002A22  0E07               	movlw	7
 15429  002A24  177A               	andwf	??___ftadd& (0+255),f,b
 15430  002A26  B4D8               	btfsc	status,2,c
 15431  002A28  D006               	goto	l2882
 15432  002A2A  D7EF               	goto	u6590
 15433  002A2C                     
 15434                           ; BSR set to: 0
 15435                           
 15436                           ; BSR set to: 0
 15437  002A2C  90D8               	bcf	status,0,c
 15438  002A2E  3379               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 15439  002A30  3378               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 15440  002A32  3377               	rrcf	___ftadd@f2& (0+255),f,b
 15441  002A34  2B7E               	incf	___ftadd@exp2& (0+255),f,b
 15442  002A36                     l2882:
 15443                           
 15444                           ; BSR set to: 0
 15445                           
 15446                           ; BSR set to: 0
 15447  002A36  517E               	movf	___ftadd@exp2& (0+255),w,b
 15448  002A38  197F               	xorwf	___ftadd@exp1& (0+255),w,b
 15449  002A3A  A4D8               	btfss	status,2,c
 15450  002A3C  D7F7               	goto	l2883
 15451  002A3E                     u6620:
 15452                           
 15453                           ; BSR set to: 0
 15454                           
 15455                           ; BSR set to: 0
 15456                           
 15457                           ; BSR set to: 0
 15458  002A3E  AF7D               	btfss	___ftadd@sign& (0+255),7,b
 15459  002A40  D00C               	goto	l2885
 15460                           
 15461                           ; BSR set to: 0
 15462  002A42  0EFF               	movlw	255
 15463  002A44  1B74               	xorwf	___ftadd@f1& (0+255),f,b
 15464  002A46  0EFF               	movlw	255
 15465  002A48  1B75               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 15466  002A4A  0EFF               	movlw	255
 15467  002A4C  1B76               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 15468  002A4E  0E01               	movlw	1
 15469  002A50  2774               	addwf	___ftadd@f1& (0+255),f,b
 15470  002A52  0E00               	movlw	0
 15471  002A54  2375               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 15472  002A56  0E00               	movlw	0
 15473  002A58  2376               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 15474  002A5A                     l2885:
 15475                           
 15476                           ; BSR set to: 0
 15477  002A5A  AD7D               	btfss	___ftadd@sign& (0+255),6,b
 15478  002A5C  D00C               	goto	l2886
 15479                           
 15480                           ; BSR set to: 0
 15481  002A5E  0EFF               	movlw	255
 15482  002A60  1B77               	xorwf	___ftadd@f2& (0+255),f,b
 15483  002A62  0EFF               	movlw	255
 15484  002A64  1B78               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 15485  002A66  0EFF               	movlw	255
 15486  002A68  1B79               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 15487  002A6A  0E01               	movlw	1
 15488  002A6C  2777               	addwf	___ftadd@f2& (0+255),f,b
 15489  002A6E  0E00               	movlw	0
 15490  002A70  2378               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 15491  002A72  0E00               	movlw	0
 15492  002A74  2379               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 15493  002A76                     l2886:
 15494                           
 15495                           ; BSR set to: 0
 15496                           
 15497                           ; BSR set to: 0
 15498  002A76  0E00               	movlw	0
 15499  002A78  6F7D               	movwf	___ftadd@sign& (0+255),b
 15500                           
 15501                           ; BSR set to: 0
 15502  002A7A  5174               	movf	___ftadd@f1& (0+255),w,b
 15503  002A7C  2777               	addwf	___ftadd@f2& (0+255),f,b
 15504  002A7E  5175               	movf	(___ftadd@f1+1)& (0+255),w,b
 15505  002A80  2378               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 15506  002A82  5176               	movf	(___ftadd@f1+2)& (0+255),w,b
 15507  002A84  2379               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 15508                           
 15509                           ; BSR set to: 0
 15510  002A86  AF79               	btfss	(___ftadd@f2+2)& (0+255),7,b
 15511  002A88  D00E               	goto	l2887
 15512                           
 15513                           ; BSR set to: 0
 15514  002A8A  0EFF               	movlw	255
 15515  002A8C  1B77               	xorwf	___ftadd@f2& (0+255),f,b
 15516  002A8E  0EFF               	movlw	255
 15517  002A90  1B78               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 15518  002A92  0EFF               	movlw	255
 15519  002A94  1B79               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 15520  002A96  0E01               	movlw	1
 15521  002A98  2777               	addwf	___ftadd@f2& (0+255),f,b
 15522  002A9A  0E00               	movlw	0
 15523  002A9C  2378               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 15524  002A9E  0E00               	movlw	0
 15525  002AA0  2379               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 15526                           
 15527                           ; BSR set to: 0
 15528  002AA2  0E01               	movlw	1
 15529  002AA4  6F7D               	movwf	___ftadd@sign& (0+255),b
 15530  002AA6                     l2887:
 15531                           
 15532                           ; BSR set to: 0
 15533                           
 15534                           ; BSR set to: 0
 15535  002AA6  C077  F060         	movff	___ftadd@f2,___ftpack@arg
 15536  002AAA  C078  F061         	movff	___ftadd@f2+1,___ftpack@arg+1
 15537  002AAE  C079  F062         	movff	___ftadd@f2+2,___ftpack@arg+2
 15538  002AB2  C07F  F063         	movff	___ftadd@exp1,___ftpack@exp
 15539  002AB6  C07D  F064         	movff	___ftadd@sign,___ftpack@sign
 15540  002ABA  ECFD  F020         	call	___ftpack	;wreg free
 15541  002ABE  C060  F074         	movff	?___ftpack,?___ftadd
 15542  002AC2  C061  F075         	movff	?___ftpack+1,?___ftadd+1
 15543  002AC6  C062  F076         	movff	?___ftpack+2,?___ftadd+2
 15544  002ACA  0012               	return	
 15545  002ACC                     __end_of___ftadd:
 15546                           	opt stack 0
 15547                           tblptru	equ	0xFF8
 15548                           tblptrh	equ	0xFF7
 15549                           tblptrl	equ	0xFF6
 15550                           tablat	equ	0xFF5
 15551                           prodh	equ	0xFF4
 15552                           prodl	equ	0xFF3
 15553                           intcon	equ	0xFF2
 15554                           postinc0	equ	0xFEE
 15555                           wreg	equ	0xFE8
 15556                           indf1	equ	0xFE7
 15557                           postdec1	equ	0xFE5
 15558                           fsr1h	equ	0xFE2
 15559                           fsr1l	equ	0xFE1
 15560                           indf2	equ	0xFDF
 15561                           postinc2	equ	0xFDE
 15562                           postdec2	equ	0xFDD
 15563                           plusw2	equ	0xFDB
 15564                           fsr2h	equ	0xFDA
 15565                           fsr2l	equ	0xFD9
 15566                           status	equ	0xFD8
 15567                           
 15568 ;; *************** function ___ftpack *****************
 15569 ;; Defined at:
 15570 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\float.c"
 15571 ;; Parameters:    Size  Location     Type
 15572 ;;  arg             3    0[BANK0 ] unsigned um
 15573 ;;  exp             1    3[BANK0 ] unsigned char 
 15574 ;;  sign            1    4[BANK0 ] unsigned char 
 15575 ;; Auto vars:     Size  Location     Type
 15576 ;;		None
 15577 ;; Return value:  Size  Location     Type
 15578 ;;                  3    0[BANK0 ] float 
 15579 ;; Registers used:
 15580 ;;		wreg, status,2, status,0
 15581 ;; Tracked objects:
 15582 ;;		On entry : 0/0
 15583 ;;		On exit  : 0/0
 15584 ;;		Unchanged: 0/0
 15585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15586 ;;      Params:         0       5       0       0       0       0       0       0       0
 15587 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15588 ;;      Temps:          0       3       0       0       0       0       0       0       0
 15589 ;;      Totals:         0       8       0       0       0       0       0       0       0
 15590 ;;Total ram usage:        8 bytes
 15591 ;; Hardware stack levels used:    1
 15592 ;; Hardware stack levels required when called:   10
 15593 ;; This function calls:
 15594 ;;		Nothing
 15595 ;; This function is called by:
 15596 ;;		___awtoft
 15597 ;;		___ftadd
 15598 ;;		___ftdiv
 15599 ;;		___ftmul
 15600 ;;		___lltoft
 15601 ;; This function uses a non-reentrant model
 15602 ;;
 15603                           
 15604                           	psect	text49
 15605  0041FA                     __ptext49:
 15606                           	opt stack 0
 15607  0041FA                     ___ftpack:
 15608                           	opt stack 17
 15609                           
 15610                           ;incstack = 0
 15611  0041FA  0100               	movlb	0	; () banked
 15612  0041FC  5163               	movf	___ftpack@exp& (0+255),w,b
 15613  0041FE  B4D8               	btfsc	status,2,c
 15614  004200  D005               	goto	u6150
 15615                           
 15616                           ; BSR set to: 0
 15617  004202  5160               	movf	___ftpack@arg& (0+255),w,b
 15618  004204  1161               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 15619  004206  1162               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 15620  004208  A4D8               	btfss	status,2,c
 15621  00420A  D00C               	goto	l2828
 15622  00420C                     u6150:
 15623                           
 15624                           ; BSR set to: 0
 15625                           
 15626                           ; BSR set to: 0
 15627  00420C  0E00               	movlw	0
 15628  00420E  6F60               	movwf	?___ftpack& (0+255),b
 15629  004210  0E00               	movlw	0
 15630  004212  6F61               	movwf	(?___ftpack+1)& (0+255),b
 15631  004214  0E00               	movlw	0
 15632  004216  6F62               	movwf	(?___ftpack+2)& (0+255),b
 15633                           
 15634                           ; BSR set to: 0
 15635  004218  0012               	return	
 15636  00421A                     
 15637                           ; BSR set to: 0
 15638                           
 15639                           ; BSR set to: 0
 15640  00421A  2B63               	incf	___ftpack@exp& (0+255),f,b
 15641  00421C  90D8               	bcf	status,0,c
 15642  00421E  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 15643  004220  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 15644  004222  3360               	rrcf	___ftpack@arg& (0+255),f,b
 15645  004224                     l2828:
 15646                           
 15647                           ; BSR set to: 0
 15648                           
 15649                           ; BSR set to: 0
 15650  004224  0E00               	movlw	0
 15651  004226  1560               	andwf	___ftpack@arg& (0+255),w,b
 15652  004228  6F65               	movwf	??___ftpack& (0+255),b
 15653  00422A  0E00               	movlw	0
 15654  00422C  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
 15655  00422E  6F66               	movwf	(??___ftpack+1)& (0+255),b
 15656  004230  0EFE               	movlw	254
 15657  004232  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
 15658  004234  6F67               	movwf	(??___ftpack+2)& (0+255),b
 15659  004236  5165               	movf	??___ftpack& (0+255),w,b
 15660  004238  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
 15661  00423A  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
 15662  00423C  B4D8               	btfsc	status,2,c
 15663  00423E  D00C               	goto	l2831
 15664  004240  D7EC               	goto	l2829
 15665  004242                     
 15666                           ; BSR set to: 0
 15667                           
 15668                           ; BSR set to: 0
 15669  004242  2B63               	incf	___ftpack@exp& (0+255),f,b
 15670                           
 15671                           ; BSR set to: 0
 15672  004244  0E01               	movlw	1
 15673  004246  2760               	addwf	___ftpack@arg& (0+255),f,b
 15674  004248  0E00               	movlw	0
 15675  00424A  2361               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 15676  00424C  0E00               	movlw	0
 15677  00424E  2362               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 15678  004250  90D8               	bcf	status,0,c
 15679  004252  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 15680  004254  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 15681  004256  3360               	rrcf	___ftpack@arg& (0+255),f,b
 15682  004258                     l2831:
 15683                           
 15684                           ; BSR set to: 0
 15685                           
 15686                           ; BSR set to: 0
 15687  004258  0E00               	movlw	0
 15688  00425A  1560               	andwf	___ftpack@arg& (0+255),w,b
 15689  00425C  6F65               	movwf	??___ftpack& (0+255),b
 15690  00425E  0E00               	movlw	0
 15691  004260  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
 15692  004262  6F66               	movwf	(??___ftpack+1)& (0+255),b
 15693  004264  0EFF               	movlw	255
 15694  004266  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
 15695  004268  6F67               	movwf	(??___ftpack+2)& (0+255),b
 15696  00426A  5165               	movf	??___ftpack& (0+255),w,b
 15697  00426C  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
 15698  00426E  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
 15699  004270  B4D8               	btfsc	status,2,c
 15700  004272  D006               	goto	l2834
 15701  004274  D7E6               	goto	l2832
 15702  004276                     
 15703                           ; BSR set to: 0
 15704                           
 15705                           ; BSR set to: 0
 15706  004276  0763               	decf	___ftpack@exp& (0+255),f,b
 15707  004278  90D8               	bcf	status,0,c
 15708  00427A  3760               	rlcf	___ftpack@arg& (0+255),f,b
 15709  00427C  3761               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 15710  00427E  3762               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 15711  004280                     l2834:
 15712                           
 15713                           ; BSR set to: 0
 15714                           
 15715                           ; BSR set to: 0
 15716  004280  BF61               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 15717  004282  D003               	goto	u6190
 15718                           
 15719                           ; BSR set to: 0
 15720  004284  0E02               	movlw	2
 15721  004286  6163               	cpfslt	___ftpack@exp& (0+255),b
 15722  004288  D7F6               	goto	l2835
 15723  00428A                     u6190:
 15724                           
 15725                           ; BSR set to: 0
 15726                           
 15727                           ; BSR set to: 0
 15728  00428A  A163               	btfss	___ftpack@exp& (0+255),0,b
 15729                           
 15730                           ; BSR set to: 0
 15731  00428C  9F61               	bcf	(___ftpack@arg+1)& (0+255),7,b
 15732                           
 15733                           ; BSR set to: 0
 15734                           
 15735                           ; BSR set to: 0
 15736  00428E  90D8               	bcf	status,0,c
 15737  004290  3363               	rrcf	___ftpack@exp& (0+255),f,b
 15738  004292  5163               	movf	___ftpack@exp& (0+255),w,b
 15739  004294  1362               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 15740                           
 15741                           ; BSR set to: 0
 15742  004296  5164               	movf	___ftpack@sign& (0+255),w,b
 15743  004298  A4D8               	btfss	status,2,c
 15744                           
 15745                           ; BSR set to: 0
 15746  00429A  8F62               	bsf	(___ftpack@arg+2)& (0+255),7,b
 15747                           
 15748                           ; BSR set to: 0
 15749                           
 15750                           ; BSR set to: 0
 15751  00429C  C060  F060         	movff	___ftpack@arg,?___ftpack
 15752  0042A0  C061  F061         	movff	___ftpack@arg+1,?___ftpack+1
 15753  0042A4  C062  F062         	movff	___ftpack@arg+2,?___ftpack+2
 15754  0042A8  0012               	return	
 15755  0042AA                     __end_of___ftpack:
 15756                           	opt stack 0
 15757                           tblptru	equ	0xFF8
 15758                           tblptrh	equ	0xFF7
 15759                           tblptrl	equ	0xFF6
 15760                           tablat	equ	0xFF5
 15761                           prodh	equ	0xFF4
 15762                           prodl	equ	0xFF3
 15763                           intcon	equ	0xFF2
 15764                           postinc0	equ	0xFEE
 15765                           wreg	equ	0xFE8
 15766                           indf1	equ	0xFE7
 15767                           postdec1	equ	0xFE5
 15768                           fsr1h	equ	0xFE2
 15769                           fsr1l	equ	0xFE1
 15770                           indf2	equ	0xFDF
 15771                           postinc2	equ	0xFDE
 15772                           postdec2	equ	0xFDD
 15773                           plusw2	equ	0xFDB
 15774                           fsr2h	equ	0xFDA
 15775                           fsr2l	equ	0xFD9
 15776                           status	equ	0xFD8
 15777                           
 15778 ;; *************** function ___ftneg *****************
 15779 ;; Defined at:
 15780 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftneg.c"
 15781 ;; Parameters:    Size  Location     Type
 15782 ;;  f1              3    0[BANK0 ] float 
 15783 ;; Auto vars:     Size  Location     Type
 15784 ;;		None
 15785 ;; Return value:  Size  Location     Type
 15786 ;;                  3    0[BANK0 ] float 
 15787 ;; Registers used:
 15788 ;;		wreg, status,2, status,0
 15789 ;; Tracked objects:
 15790 ;;		On entry : 0/0
 15791 ;;		On exit  : 0/0
 15792 ;;		Unchanged: 0/0
 15793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15794 ;;      Params:         0       3       0       0       0       0       0       0       0
 15795 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15796 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15797 ;;      Totals:         0       3       0       0       0       0       0       0       0
 15798 ;;Total ram usage:        3 bytes
 15799 ;; Hardware stack levels used:    1
 15800 ;; Hardware stack levels required when called:   10
 15801 ;; This function calls:
 15802 ;;		Nothing
 15803 ;; This function is called by:
 15804 ;;		_sprintf
 15805 ;; This function uses a non-reentrant model
 15806 ;;
 15807                           
 15808                           	psect	text50
 15809  00564A                     __ptext50:
 15810                           	opt stack 0
 15811  00564A                     ___ftneg:
 15812                           	opt stack 19
 15813                           
 15814                           ; BSR set to: 0
 15815                           ;incstack = 0
 15816  00564A  0100               	movlb	0	; () banked
 15817  00564C  5160               	movf	___ftneg@f1& (0+255),w,b
 15818  00564E  1161               	iorwf	(___ftneg@f1+1)& (0+255),w,b
 15819  005650  1162               	iorwf	(___ftneg@f1+2)& (0+255),w,b
 15820  005652  B4D8               	btfsc	status,2,c
 15821  005654  D006               	goto	l2935
 15822                           
 15823                           ; BSR set to: 0
 15824  005656  0E00               	movlw	0
 15825  005658  1B60               	xorwf	___ftneg@f1& (0+255),f,b
 15826  00565A  0E00               	movlw	0
 15827  00565C  1B61               	xorwf	(___ftneg@f1+1)& (0+255),f,b
 15828  00565E  0E80               	movlw	128
 15829  005660  1B62               	xorwf	(___ftneg@f1+2)& (0+255),f,b
 15830  005662                     l2935:
 15831                           
 15832                           ; BSR set to: 0
 15833  005662  C060  F060         	movff	___ftneg@f1,?___ftneg
 15834  005666  C061  F061         	movff	___ftneg@f1+1,?___ftneg+1
 15835  00566A  C062  F062         	movff	___ftneg@f1+2,?___ftneg+2
 15836                           
 15837                           ; BSR set to: 0
 15838  00566E  0012               	return		;funcret
 15839  005670                     __end_of___ftneg:
 15840                           	opt stack 0
 15841                           tblptru	equ	0xFF8
 15842                           tblptrh	equ	0xFF7
 15843                           tblptrl	equ	0xFF6
 15844                           tablat	equ	0xFF5
 15845                           prodh	equ	0xFF4
 15846                           prodl	equ	0xFF3
 15847                           intcon	equ	0xFF2
 15848                           postinc0	equ	0xFEE
 15849                           wreg	equ	0xFE8
 15850                           indf1	equ	0xFE7
 15851                           postdec1	equ	0xFE5
 15852                           fsr1h	equ	0xFE2
 15853                           fsr1l	equ	0xFE1
 15854                           indf2	equ	0xFDF
 15855                           postinc2	equ	0xFDE
 15856                           postdec2	equ	0xFDD
 15857                           plusw2	equ	0xFDB
 15858                           fsr2h	equ	0xFDA
 15859                           fsr2l	equ	0xFD9
 15860                           status	equ	0xFD8
 15861                           
 15862 ;; *************** function ___ftge *****************
 15863 ;; Defined at:
 15864 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftge.c"
 15865 ;; Parameters:    Size  Location     Type
 15866 ;;  ff1             3    0[BANK0 ] float 
 15867 ;;  ff2             3    3[BANK0 ] float 
 15868 ;; Auto vars:     Size  Location     Type
 15869 ;;		None
 15870 ;; Return value:  Size  Location     Type
 15871 ;;		None               void
 15872 ;; Registers used:
 15873 ;;		wreg, status,2, status,0
 15874 ;; Tracked objects:
 15875 ;;		On entry : 0/0
 15876 ;;		On exit  : 0/0
 15877 ;;		Unchanged: 0/0
 15878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15879 ;;      Params:         0       6       0       0       0       0       0       0       0
 15880 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15881 ;;      Temps:          0       3       0       0       0       0       0       0       0
 15882 ;;      Totals:         0       9       0       0       0       0       0       0       0
 15883 ;;Total ram usage:        9 bytes
 15884 ;; Hardware stack levels used:    1
 15885 ;; Hardware stack levels required when called:   10
 15886 ;; This function calls:
 15887 ;;		Nothing
 15888 ;; This function is called by:
 15889 ;;		_sprintf
 15890 ;; This function uses a non-reentrant model
 15891 ;;
 15892                           
 15893                           	psect	text51
 15894  004904                     __ptext51:
 15895                           	opt stack 0
 15896  004904                     ___ftge:
 15897                           	opt stack 19
 15898                           
 15899                           ; BSR set to: 0
 15900                           ;incstack = 0
 15901  004904  0100               	movlb	0	; () banked
 15902  004906  AF62               	btfss	(___ftge@ff1+2)& (0+255),7,b
 15903  004908  D016               	goto	l2917
 15904                           
 15905                           ; BSR set to: 0
 15906  00490A  C060  F066         	movff	___ftge@ff1,??___ftge
 15907  00490E  C061  F067         	movff	___ftge@ff1+1,??___ftge+1
 15908  004912  C062  F068         	movff	___ftge@ff1+2,??___ftge+2
 15909  004916  1F66               	comf	??___ftge& (0+255),f,b
 15910  004918  1F67               	comf	(??___ftge+1)& (0+255),f,b
 15911  00491A  1F68               	comf	(??___ftge+2)& (0+255),f,b
 15912  00491C  2B66               	incf	??___ftge& (0+255),f,b
 15913  00491E  0E00               	movlw	0
 15914  004920  2367               	addwfc	(??___ftge+1)& (0+255),f,b
 15915  004922  2368               	addwfc	(??___ftge+2)& (0+255),f,b
 15916  004924  0E00               	movlw	0
 15917  004926  2566               	addwf	??___ftge& (0+255),w,b
 15918  004928  6F60               	movwf	___ftge@ff1& (0+255),b
 15919  00492A  0E00               	movlw	0
 15920  00492C  2167               	addwfc	(??___ftge+1)& (0+255),w,b
 15921  00492E  6F61               	movwf	(___ftge@ff1+1)& (0+255),b
 15922  004930  0E80               	movlw	128
 15923  004932  2168               	addwfc	(??___ftge+2)& (0+255),w,b
 15924  004934  6F62               	movwf	(___ftge@ff1+2)& (0+255),b
 15925  004936                     l2917:
 15926                           
 15927                           ; BSR set to: 0
 15928                           
 15929                           ; BSR set to: 0
 15930  004936  AF65               	btfss	(___ftge@ff2+2)& (0+255),7,b
 15931  004938  D016               	goto	l2918
 15932                           
 15933                           ; BSR set to: 0
 15934  00493A  C063  F066         	movff	___ftge@ff2,??___ftge
 15935  00493E  C064  F067         	movff	___ftge@ff2+1,??___ftge+1
 15936  004942  C065  F068         	movff	___ftge@ff2+2,??___ftge+2
 15937  004946  1F66               	comf	??___ftge& (0+255),f,b
 15938  004948  1F67               	comf	(??___ftge+1)& (0+255),f,b
 15939  00494A  1F68               	comf	(??___ftge+2)& (0+255),f,b
 15940  00494C  2B66               	incf	??___ftge& (0+255),f,b
 15941  00494E  0E00               	movlw	0
 15942  004950  2367               	addwfc	(??___ftge+1)& (0+255),f,b
 15943  004952  2368               	addwfc	(??___ftge+2)& (0+255),f,b
 15944  004954  0E00               	movlw	0
 15945  004956  2566               	addwf	??___ftge& (0+255),w,b
 15946  004958  6F63               	movwf	___ftge@ff2& (0+255),b
 15947  00495A  0E00               	movlw	0
 15948  00495C  2167               	addwfc	(??___ftge+1)& (0+255),w,b
 15949  00495E  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
 15950  004960  0E80               	movlw	128
 15951  004962  2168               	addwfc	(??___ftge+2)& (0+255),w,b
 15952  004964  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
 15953  004966                     l2918:
 15954                           
 15955                           ; BSR set to: 0
 15956                           
 15957                           ; BSR set to: 0
 15958  004966  0E00               	movlw	0
 15959  004968  1B60               	xorwf	___ftge@ff1& (0+255),f,b
 15960  00496A  0E00               	movlw	0
 15961  00496C  1B61               	xorwf	(___ftge@ff1+1)& (0+255),f,b
 15962  00496E  0E80               	movlw	128
 15963  004970  1B62               	xorwf	(___ftge@ff1+2)& (0+255),f,b
 15964                           
 15965                           ; BSR set to: 0
 15966  004972  0E00               	movlw	0
 15967  004974  1B63               	xorwf	___ftge@ff2& (0+255),f,b
 15968  004976  0E00               	movlw	0
 15969  004978  1B64               	xorwf	(___ftge@ff2+1)& (0+255),f,b
 15970  00497A  0E80               	movlw	128
 15971  00497C  1B65               	xorwf	(___ftge@ff2+2)& (0+255),f,b
 15972  00497E  5163               	movf	___ftge@ff2& (0+255),w,b
 15973  004980  5D60               	subwf	___ftge@ff1& (0+255),w,b
 15974  004982  5164               	movf	(___ftge@ff2+1)& (0+255),w,b
 15975  004984  5961               	subwfb	(___ftge@ff1+1)& (0+255),w,b
 15976  004986  5165               	movf	(___ftge@ff2+2)& (0+255),w,b
 15977  004988  5962               	subwfb	(___ftge@ff1+2)& (0+255),w,b
 15978  00498A  B0D8               	btfsc	status,0,c
 15979  00498C  D002               	goto	l7185
 15980                           
 15981                           ; BSR set to: 0
 15982  00498E  90D8               	bcf	status,0,c
 15983  004990  0012               	return	
 15984  004992                     l7185:
 15985                           
 15986                           ; BSR set to: 0
 15987                           
 15988                           ; BSR set to: 0
 15989  004992  80D8               	bsf	status,0,c
 15990                           
 15991                           ; BSR set to: 0
 15992  004994  0012               	return	
 15993  004996                     __end_of___ftge:
 15994                           	opt stack 0
 15995                           tblptru	equ	0xFF8
 15996                           tblptrh	equ	0xFF7
 15997                           tblptrl	equ	0xFF6
 15998                           tablat	equ	0xFF5
 15999                           prodh	equ	0xFF4
 16000                           prodl	equ	0xFF3
 16001                           intcon	equ	0xFF2
 16002                           postinc0	equ	0xFEE
 16003                           wreg	equ	0xFE8
 16004                           indf1	equ	0xFE7
 16005                           postdec1	equ	0xFE5
 16006                           fsr1h	equ	0xFE2
 16007                           fsr1l	equ	0xFE1
 16008                           indf2	equ	0xFDF
 16009                           postinc2	equ	0xFDE
 16010                           postdec2	equ	0xFDD
 16011                           plusw2	equ	0xFDB
 16012                           fsr2h	equ	0xFDA
 16013                           fsr2l	equ	0xFD9
 16014                           status	equ	0xFD8
 16015                           
 16016 ;; *************** function _enviaComando *****************
 16017 ;; Defined at:
 16018 ;;		line 279 in file "LoRaWanCore.c"
 16019 ;; Parameters:    Size  Location     Type
 16020 ;;  cmd             2   28[BANK0 ] PTR const unsigned char 
 16021 ;;		 -> TxLoRaWan@comando(200), DataRate@comando(200), SetBandWidth@comando(200), SetSpreadingFactor@comando(200), 
 16022 ;;		 -> MacSave@comando(200), GetAdr@comando(200), SetAdr@comando(200), SetChannelLoRaWan@comando(200), 
 16023 ;;		 -> MAC_JOIN_OTAA(10), SYS_RESET(6), SetAppKey@comando(200), SetAppEUI@comando(200), 
 16024 ;;		 -> SetDevEUI@comando(200), GetDnctr@comando(200), 
 16025 ;;  tipoComando     1   30[BANK0 ] unsigned char 
 16026 ;; Auto vars:     Size  Location     Type
 16027 ;;  i               2   35[BANK0 ] unsigned int 
 16028 ;;  i               2   33[BANK0 ] unsigned int 
 16029 ;;  i               2   37[BANK0 ] unsigned int 
 16030 ;; Return value:  Size  Location     Type
 16031 ;;                  1    wreg      unsigned char 
 16032 ;; Registers used:
 16033 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16034 ;; Tracked objects:
 16035 ;;		On entry : 0/0
 16036 ;;		On exit  : 0/0
 16037 ;;		Unchanged: 0/0
 16038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16039 ;;      Params:         0       3       0       0       0       0       0       0       0
 16040 ;;      Locals:         0       6       0       0       0       0       0       0       0
 16041 ;;      Temps:          0       2       0       0       0       0       0       0       0
 16042 ;;      Totals:         0      11       0       0       0       0       0       0       0
 16043 ;;Total ram usage:       11 bytes
 16044 ;; Hardware stack levels used:    1
 16045 ;; Hardware stack levels required when called:   12
 16046 ;; This function calls:
 16047 ;;		_initRecebeDados
 16048 ;;		_parseLoRaWan
 16049 ;;		_putch
 16050 ;;		_strlen
 16051 ;; This function is called by:
 16052 ;;		_SetDevEUI
 16053 ;;		_SetAppEUI
 16054 ;;		_SetAppKey
 16055 ;;		_ResetModuloLoRaWan
 16056 ;;		_JoinLoRaWan
 16057 ;;		_SetChannelLoRaWan
 16058 ;;		_SetAdr
 16059 ;;		_MacSave
 16060 ;;		_SetSpreadingFactor
 16061 ;;		_SetBandWidth
 16062 ;;		_DataRate
 16063 ;;		_TxLoRaWan
 16064 ;;		_GetDnctr
 16065 ;;		_GetAdr
 16066 ;; This function uses a non-reentrant model
 16067 ;;
 16068                           
 16069                           	psect	text52
 16070  003676                     __ptext52:
 16071                           	opt stack 0
 16072  003676                     _enviaComando:
 16073                           	opt stack 17
 16074                           
 16075                           ;LoRaWanCore.c: 281: initRecebeDados();
 16076                           
 16077                           ; BSR set to: 0
 16078                           ;incstack = 0
 16079  003676  EC90  F02B         	call	_initRecebeDados	;wreg free
 16080                           
 16081                           ;LoRaWanCore.c: 283: switch (tipoComando)
 16082  00367A  D041               	goto	l2257
 16083  00367C                     
 16084                           ;LoRaWanCore.c: 286: {
 16085                           ;LoRaWanCore.c: 287: for (uint16_t i = 0; i < strlen(MAC); i++)
 16086  00367C  0E00               	movlw	0
 16087  00367E  0100               	movlb	0	; () banked
 16088  003680  6F82               	movwf	(enviaComando@i+1)& (0+255),b
 16089  003682  0E00               	movlw	0
 16090  003684  6F81               	movwf	enviaComando@i& (0+255),b
 16091  003686  D00D               	goto	l2259
 16092  003688                     
 16093                           ; BSR set to: 0
 16094                           ;LoRaWanCore.c: 288: {
 16095                           ;LoRaWanCore.c: 289: putch((char)MAC[i]);
 16096                           
 16097                           ; BSR set to: 0
 16098  003688  0EE1               	movlw	low _MAC
 16099  00368A  2581               	addwf	enviaComando@i& (0+255),w,b
 16100  00368C  6EF6               	movwf	tblptrl,c
 16101  00368E  0E7D               	movlw	high _MAC
 16102  003690  2182               	addwfc	(enviaComando@i+1)& (0+255),w,b
 16103  003692  6EF7               	movwf	tblptrh,c
 16104  003694                     	if	0	;There are less than 3 active tblptr bytes
 16105  003694                     	endif
 16106  003694  0008               	tblrd		*
 16107  003696  50F5               	movf	tablat,w,c
 16108  003698  ECB4  F02B         	call	_putch
 16109  00369C  0100               	movlb	0	; () banked
 16110  00369E  4B81               	infsnz	enviaComando@i& (0+255),f,b
 16111  0036A0  2B82               	incf	(enviaComando@i+1)& (0+255),f,b
 16112  0036A2                     l2259:
 16113                           
 16114                           ; BSR set to: 0
 16115                           
 16116                           ; BSR set to: 0
 16117  0036A2  0EE1               	movlw	low _MAC
 16118  0036A4  6F60               	movwf	strlen@s& (0+255),b
 16119  0036A6  0E7D               	movlw	high _MAC
 16120  0036A8  6F61               	movwf	(strlen@s+1)& (0+255),b
 16121  0036AA  EC14  F028         	call	_strlen	;wreg free
 16122  0036AE  0100               	movlb	0	; () banked
 16123  0036B0  5160               	movf	?_strlen& (0+255),w,b
 16124  0036B2  5D81               	subwf	enviaComando@i& (0+255),w,b
 16125  0036B4  5161               	movf	(?_strlen+1)& (0+255),w,b
 16126  0036B6  5982               	subwfb	(enviaComando@i+1)& (0+255),w,b
 16127  0036B8  B0D8               	btfsc	status,0,c
 16128  0036BA  D029               	goto	l2262
 16129  0036BC  D7E5               	goto	l2260
 16130  0036BE                     
 16131                           ; BSR set to: 0
 16132                           ;LoRaWanCore.c: 293: {
 16133                           ;LoRaWanCore.c: 294: for (uint16_t i = 0; i < strlen(SYS); i++)
 16134                           
 16135                           ; BSR set to: 0
 16136  0036BE  0E00               	movlw	0
 16137  0036C0  6F84               	movwf	(enviaComando@i_4788+1)& (0+255),b
 16138  0036C2  0E00               	movlw	0
 16139  0036C4  6F83               	movwf	enviaComando@i_4788& (0+255),b
 16140  0036C6  D00D               	goto	l2264
 16141  0036C8                     
 16142                           ; BSR set to: 0
 16143                           ;LoRaWanCore.c: 295: {
 16144                           ;LoRaWanCore.c: 296: putch((char)SYS[i]);
 16145                           
 16146                           ; BSR set to: 0
 16147  0036C8  0ED7               	movlw	low _SYS
 16148  0036CA  2583               	addwf	enviaComando@i_4788& (0+255),w,b
 16149  0036CC  6EF6               	movwf	tblptrl,c
 16150  0036CE  0E7D               	movlw	high _SYS
 16151  0036D0  2184               	addwfc	(enviaComando@i_4788+1)& (0+255),w,b
 16152  0036D2  6EF7               	movwf	tblptrh,c
 16153  0036D4                     	if	0	;There are less than 3 active tblptr bytes
 16154  0036D4                     	endif
 16155  0036D4  0008               	tblrd		*
 16156  0036D6  50F5               	movf	tablat,w,c
 16157  0036D8  ECB4  F02B         	call	_putch
 16158  0036DC  0100               	movlb	0	; () banked
 16159  0036DE  4B83               	infsnz	enviaComando@i_4788& (0+255),f,b
 16160  0036E0  2B84               	incf	(enviaComando@i_4788+1)& (0+255),f,b
 16161  0036E2                     l2264:
 16162                           
 16163                           ; BSR set to: 0
 16164                           
 16165                           ; BSR set to: 0
 16166  0036E2  0ED7               	movlw	low _SYS
 16167  0036E4  6F60               	movwf	strlen@s& (0+255),b
 16168  0036E6  0E7D               	movlw	high _SYS
 16169  0036E8  6F61               	movwf	(strlen@s+1)& (0+255),b
 16170  0036EA  EC14  F028         	call	_strlen	;wreg free
 16171  0036EE  0100               	movlb	0	; () banked
 16172  0036F0  5160               	movf	?_strlen& (0+255),w,b
 16173  0036F2  5D83               	subwf	enviaComando@i_4788& (0+255),w,b
 16174  0036F4  5161               	movf	(?_strlen+1)& (0+255),w,b
 16175  0036F6  5984               	subwfb	(enviaComando@i_4788+1)& (0+255),w,b
 16176  0036F8  B0D8               	btfsc	status,0,c
 16177  0036FA  D009               	goto	l2262
 16178  0036FC  D7E5               	goto	l2265
 16179  0036FE                     l2257:
 16180                           
 16181                           ; BSR set to: 0
 16182  0036FE  0100               	movlb	0	; () banked
 16183  003700  517E               	movf	enviaComando@tipoComando& (0+255),w,b
 16184                           
 16185                           ; Switch size 1, requested type "space"
 16186                           ; Number of cases is 2, Range of values is 0 to 1
 16187                           ; switch strategies available:
 16188                           ; Name         Instructions Cycles
 16189                           ; simple_byte            7     4 (average)
 16190                           ;	Chosen strategy is simple_byte
 16191  003702  0A00               	xorlw	0	; case 0
 16192  003704  B4D8               	btfsc	status,2,c
 16193  003706  D7BA               	goto	l2258
 16194  003708  0A01               	xorlw	1	; case 1
 16195  00370A  B4D8               	btfsc	status,2,c
 16196  00370C  D7D8               	goto	l2263
 16197  00370E                     l2262:
 16198                           
 16199                           ; BSR set to: 0
 16200                           ;LoRaWanCore.c: 302: for (uint16_t i = 0; i < strlen(cmd); i++)
 16201                           
 16202                           ; BSR set to: 0
 16203  00370E  0E00               	movlw	0
 16204  003710  6F86               	movwf	(enviaComando@i_4789+1)& (0+255),b
 16205  003712  0E00               	movlw	0
 16206  003714  6F85               	movwf	enviaComando@i_4789& (0+255),b
 16207  003716  D01B               	goto	l2267
 16208  003718                     
 16209                           ; BSR set to: 0
 16210                           ;LoRaWanCore.c: 303: {
 16211                           ;LoRaWanCore.c: 304: putch((char)cmd[i]);
 16212                           
 16213                           ; BSR set to: 0
 16214  003718  5185               	movf	enviaComando@i_4789& (0+255),w,b
 16215  00371A  257C               	addwf	enviaComando@cmd& (0+255),w,b
 16216  00371C  6F7F               	movwf	??_enviaComando& (0+255),b
 16217  00371E  5186               	movf	(enviaComando@i_4789+1)& (0+255),w,b
 16218  003720  217D               	addwfc	(enviaComando@cmd+1)& (0+255),w,b
 16219  003722  6F80               	movwf	(??_enviaComando+1)& (0+255),b
 16220  003724  C07F  FFF6         	movff	??_enviaComando,tblptrl
 16221  003728  C080  FFF7         	movff	??_enviaComando+1,tblptrh
 16222  00372C  6AF8               	clrf	tblptru,c
 16223  00372E  0E07               	movlw	(high __ramtop+-1)
 16224  003730  64F7               	cpfsgt	tblptrh,c
 16225  003732  D003               	bra	u7127
 16226  003734  0008               	tblrd		*
 16227  003736  50F5               	movf	tablat,w,c
 16228  003738  D005               	bra	u7120
 16229  00373A                     u7127:
 16230  00373A  CFF6 FFE9          	movff	tblptrl,fsr0l
 16231  00373E  CFF7 FFEA          	movff	tblptrh,fsr0h
 16232  003742  50EF               	movf	indf0,w,c
 16233  003744                     u7120:
 16234  003744  ECB4  F02B         	call	_putch
 16235  003748  0100               	movlb	0	; () banked
 16236  00374A  4B85               	infsnz	enviaComando@i_4789& (0+255),f,b
 16237  00374C  2B86               	incf	(enviaComando@i_4789+1)& (0+255),f,b
 16238  00374E                     l2267:
 16239                           
 16240                           ; BSR set to: 0
 16241                           
 16242                           ; BSR set to: 0
 16243  00374E  C07C  F060         	movff	enviaComando@cmd,strlen@s
 16244  003752  C07D  F061         	movff	enviaComando@cmd+1,strlen@s+1
 16245  003756  EC14  F028         	call	_strlen	;wreg free
 16246  00375A  0100               	movlb	0	; () banked
 16247  00375C  5160               	movf	?_strlen& (0+255),w,b
 16248  00375E  5D85               	subwf	enviaComando@i_4789& (0+255),w,b
 16249  003760  5161               	movf	(?_strlen+1)& (0+255),w,b
 16250  003762  5986               	subwfb	(enviaComando@i_4789+1)& (0+255),w,b
 16251  003764  A0D8               	btfss	status,0,c
 16252  003766  D7D8               	goto	l2268
 16253                           
 16254                           ; BSR set to: 0
 16255                           ;LoRaWanCore.c: 305: }
 16256                           ;LoRaWanCore.c: 307: putch(0x0D);
 16257                           
 16258                           ; BSR set to: 0
 16259  003768  0E0D               	movlw	13
 16260  00376A  ECB4  F02B         	call	_putch
 16261                           
 16262                           ;LoRaWanCore.c: 308: putch(0x0A);
 16263  00376E  0E0A               	movlw	10
 16264  003770  ECB4  F02B         	call	_putch
 16265                           
 16266                           ;LoRaWanCore.c: 310: return parseLoRaWan();
 16267  003774  EC59  F022         	call	_parseLoRaWan	;wreg free
 16268  003778  0012               	return	
 16269  00377A                     __end_of_enviaComando:
 16270                           	opt stack 0
 16271                           tblptru	equ	0xFF8
 16272                           tblptrh	equ	0xFF7
 16273                           tblptrl	equ	0xFF6
 16274                           tablat	equ	0xFF5
 16275                           prodh	equ	0xFF4
 16276                           prodl	equ	0xFF3
 16277                           intcon	equ	0xFF2
 16278                           indf0	equ	0xFEF
 16279                           postinc0	equ	0xFEE
 16280                           fsr0h	equ	0xFEA
 16281                           fsr0l	equ	0xFE9
 16282                           wreg	equ	0xFE8
 16283                           indf1	equ	0xFE7
 16284                           postdec1	equ	0xFE5
 16285                           fsr1h	equ	0xFE2
 16286                           fsr1l	equ	0xFE1
 16287                           indf2	equ	0xFDF
 16288                           postinc2	equ	0xFDE
 16289                           postdec2	equ	0xFDD
 16290                           plusw2	equ	0xFDB
 16291                           fsr2h	equ	0xFDA
 16292                           fsr2l	equ	0xFD9
 16293                           status	equ	0xFD8
 16294                           
 16295 ;; *************** function _strlen *****************
 16296 ;; Defined at:
 16297 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strlen.c"
 16298 ;; Parameters:    Size  Location     Type
 16299 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 16300 ;;		 -> recebeByteLoRaWan@frameData(100), SYS(5), MAC(5), TxLoRaWan@comando(200), 
 16301 ;;		 -> DataRate@comando(200), SetBandWidth@comando(200), SetSpreadingFactor@comando(200), MacSave@comando(200), 
 16302 ;;		 -> GetAdr@comando(200), SetAdr@comando(200), SetChannelLoRaWan@comando(200), MAC_JOIN_OTAA(10), 
 16303 ;;		 -> SYS_RESET(6), SetAppKey@comando(200), SetAppEUI@comando(200), SetDevEUI@comando(200), 
 16304 ;;		 -> GetDnctr@comando(200), STR_20(16), STR_19(7), STR_18(14), 
 16305 ;;		 -> STR_17(8), STR_16(8), STR_15(10), STR_14(17), 
 16306 ;;		 -> STR_13(11), STR_12(5), STR_11(32), STR_10(7), 
 16307 ;;		 -> STR_9(11), STR_8(11), STR_7(14), STR_6(3), 
 16308 ;; Auto vars:     Size  Location     Type
 16309 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
 16310 ;;		 -> recebeByteLoRaWan@frameData(100), SYS(5), MAC(5), TxLoRaWan@comando(200), 
 16311 ;;		 -> DataRate@comando(200), SetBandWidth@comando(200), SetSpreadingFactor@comando(200), MacSave@comando(200), 
 16312 ;;		 -> GetAdr@comando(200), SetAdr@comando(200), SetChannelLoRaWan@comando(200), MAC_JOIN_OTAA(10), 
 16313 ;;		 -> SYS_RESET(6), SetAppKey@comando(200), SetAppEUI@comando(200), SetDevEUI@comando(200), 
 16314 ;;		 -> GetDnctr@comando(200), STR_20(16), STR_19(7), STR_18(14), 
 16315 ;;		 -> STR_17(8), STR_16(8), STR_15(10), STR_14(17), 
 16316 ;;		 -> STR_13(11), STR_12(5), STR_11(32), STR_10(7), 
 16317 ;;		 -> STR_9(11), STR_8(11), STR_7(14), STR_6(3), 
 16318 ;; Return value:  Size  Location     Type
 16319 ;;                  2    0[BANK0 ] unsigned int 
 16320 ;; Registers used:
 16321 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 16322 ;; Tracked objects:
 16323 ;;		On entry : 0/0
 16324 ;;		On exit  : 0/0
 16325 ;;		Unchanged: 0/0
 16326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16327 ;;      Params:         0       2       0       0       0       0       0       0       0
 16328 ;;      Locals:         0       2       0       0       0       0       0       0       0
 16329 ;;      Temps:          0       2       0       0       0       0       0       0       0
 16330 ;;      Totals:         0       6       0       0       0       0       0       0       0
 16331 ;;Total ram usage:        6 bytes
 16332 ;; Hardware stack levels used:    1
 16333 ;; Hardware stack levels required when called:   10
 16334 ;; This function calls:
 16335 ;;		Nothing
 16336 ;; This function is called by:
 16337 ;;		_enviaComando
 16338 ;; This function uses a non-reentrant model
 16339 ;;
 16340                           
 16341                           	psect	text53
 16342  005028                     __ptext53:
 16343                           	opt stack 0
 16344  005028                     _strlen:
 16345                           	opt stack 18
 16346                           
 16347                           ;incstack = 0
 16348  005028  C060  F064         	movff	strlen@s,strlen@cp
 16349  00502C  C061  F065         	movff	strlen@s+1,strlen@cp+1
 16350  005030  D003               	goto	l3222
 16351  005032  0100               	movlb	0	; () banked
 16352  005034  4B64               	infsnz	strlen@cp& (0+255),f,b
 16353  005036  2B65               	incf	(strlen@cp+1)& (0+255),f,b
 16354  005038                     l3222:
 16355                           
 16356                           ; BSR set to: 0
 16357  005038  C064  FFF6         	movff	strlen@cp,tblptrl
 16358  00503C  C065  FFF7         	movff	strlen@cp+1,tblptrh
 16359  005040  6AF8               	clrf	tblptru,c
 16360  005042  0E07               	movlw	(high __ramtop+-1)
 16361  005044  64F7               	cpfsgt	tblptrh,c
 16362  005046  D003               	bra	u6437
 16363  005048  0008               	tblrd		*
 16364  00504A  50F5               	movf	tablat,w,c
 16365  00504C  D005               	bra	u6430
 16366  00504E                     u6437:
 16367  00504E  CFF6 FFE9          	movff	tblptrl,fsr0l
 16368  005052  CFF7 FFEA          	movff	tblptrh,fsr0h
 16369  005056  50EF               	movf	indf0,w,c
 16370  005058                     u6430:
 16371  005058  0900               	iorlw	0
 16372  00505A  A4D8               	btfss	status,2,c
 16373  00505C  D7EA               	goto	l3223
 16374  00505E  C060  F062         	movff	strlen@s,??_strlen
 16375  005062  C061  F063         	movff	strlen@s+1,??_strlen+1
 16376  005066  0100               	movlb	0	; () banked
 16377  005068  1F62               	comf	??_strlen& (0+255),f,b
 16378  00506A  1F63               	comf	(??_strlen+1)& (0+255),f,b
 16379  00506C  4B62               	infsnz	??_strlen& (0+255),f,b
 16380  00506E  2B63               	incf	(??_strlen+1)& (0+255),f,b
 16381  005070  5164               	movf	strlen@cp& (0+255),w,b
 16382  005072  2562               	addwf	??_strlen& (0+255),w,b
 16383  005074  6F60               	movwf	?_strlen& (0+255),b
 16384  005076  5165               	movf	(strlen@cp+1)& (0+255),w,b
 16385  005078  2163               	addwfc	(??_strlen+1)& (0+255),w,b
 16386  00507A  6F61               	movwf	(?_strlen+1)& (0+255),b
 16387  00507C  0012               	return	
 16388  00507E                     __end_of_strlen:
 16389                           	opt stack 0
 16390                           tblptru	equ	0xFF8
 16391                           tblptrh	equ	0xFF7
 16392                           tblptrl	equ	0xFF6
 16393                           tablat	equ	0xFF5
 16394                           prodh	equ	0xFF4
 16395                           prodl	equ	0xFF3
 16396                           intcon	equ	0xFF2
 16397                           indf0	equ	0xFEF
 16398                           postinc0	equ	0xFEE
 16399                           fsr0h	equ	0xFEA
 16400                           fsr0l	equ	0xFE9
 16401                           wreg	equ	0xFE8
 16402                           indf1	equ	0xFE7
 16403                           postdec1	equ	0xFE5
 16404                           fsr1h	equ	0xFE2
 16405                           fsr1l	equ	0xFE1
 16406                           indf2	equ	0xFDF
 16407                           postinc2	equ	0xFDE
 16408                           postdec2	equ	0xFDD
 16409                           plusw2	equ	0xFDB
 16410                           fsr2h	equ	0xFDA
 16411                           fsr2l	equ	0xFD9
 16412                           status	equ	0xFD8
 16413                           
 16414 ;; *************** function _putch *****************
 16415 ;; Defined at:
 16416 ;;		line 46 in file "uart/uart.c"
 16417 ;; Parameters:    Size  Location     Type
 16418 ;;  data            1    wreg     unsigned char 
 16419 ;; Auto vars:     Size  Location     Type
 16420 ;;  data            1    0[BANK0 ] unsigned char 
 16421 ;; Return value:  Size  Location     Type
 16422 ;;                  1    wreg      void 
 16423 ;; Registers used:
 16424 ;;		wreg
 16425 ;; Tracked objects:
 16426 ;;		On entry : 0/0
 16427 ;;		On exit  : 0/0
 16428 ;;		Unchanged: 0/0
 16429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16430 ;;      Params:         0       0       0       0       0       0       0       0       0
 16431 ;;      Locals:         0       1       0       0       0       0       0       0       0
 16432 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16433 ;;      Totals:         0       1       0       0       0       0       0       0       0
 16434 ;;Total ram usage:        1 bytes
 16435 ;; Hardware stack levels used:    1
 16436 ;; Hardware stack levels required when called:   10
 16437 ;; This function calls:
 16438 ;;		Nothing
 16439 ;; This function is called by:
 16440 ;;		_main
 16441 ;;		_enviaComando
 16442 ;;		_gen_send
 16443 ;;		_sendXBeePriv
 16444 ;; This function uses a non-reentrant model
 16445 ;;
 16446                           
 16447                           	psect	text54
 16448  005768                     __ptext54:
 16449                           	opt stack 0
 16450  005768                     _putch:
 16451                           	opt stack 20
 16452                           
 16453                           ; BSR set to: 0
 16454                           ;incstack = 0
 16455                           ;putch@data stored from wreg
 16456  005768  0100               	movlb	0	; () banked
 16457  00576A  6F60               	movwf	putch@data& (0+255),b
 16458  00576C                     
 16459                           ;uart.c: 48: while (!TXIF);
 16460  00576C  A89E               	btfss	3998,4,c	;volatile
 16461  00576E  D7FE               	goto	l7807
 16462                           
 16463                           ;uart.c: 49: TXREG=data;
 16464  005770  C060  FFAD         	movff	putch@data,4013	;volatile
 16465  005774  0012               	return		;funcret
 16466  005776                     __end_of_putch:
 16467                           	opt stack 0
 16468                           tblptru	equ	0xFF8
 16469                           tblptrh	equ	0xFF7
 16470                           tblptrl	equ	0xFF6
 16471                           tablat	equ	0xFF5
 16472                           prodh	equ	0xFF4
 16473                           prodl	equ	0xFF3
 16474                           intcon	equ	0xFF2
 16475                           indf0	equ	0xFEF
 16476                           postinc0	equ	0xFEE
 16477                           fsr0h	equ	0xFEA
 16478                           fsr0l	equ	0xFE9
 16479                           wreg	equ	0xFE8
 16480                           indf1	equ	0xFE7
 16481                           postdec1	equ	0xFE5
 16482                           fsr1h	equ	0xFE2
 16483                           fsr1l	equ	0xFE1
 16484                           indf2	equ	0xFDF
 16485                           postinc2	equ	0xFDE
 16486                           postdec2	equ	0xFDD
 16487                           plusw2	equ	0xFDB
 16488                           fsr2h	equ	0xFDA
 16489                           fsr2l	equ	0xFD9
 16490                           status	equ	0xFD8
 16491                           
 16492 ;; *************** function _parseLoRaWan *****************
 16493 ;; Defined at:
 16494 ;;		line 313 in file "LoRaWanCore.c"
 16495 ;; Parameters:    Size  Location     Type
 16496 ;;		None
 16497 ;; Auto vars:     Size  Location     Type
 16498 ;;  previous        4   20[BANK0 ] unsigned long 
 16499 ;;  intervalMAX     2   24[BANK0 ] unsigned int 
 16500 ;;  timeout         1   27[BANK0 ] unsigned char 
 16501 ;;  status          1   26[BANK0 ] unsigned char 
 16502 ;; Return value:  Size  Location     Type
 16503 ;;                  1    wreg      unsigned char 
 16504 ;; Registers used:
 16505 ;;		wreg, status,2, status,0, cstack
 16506 ;; Tracked objects:
 16507 ;;		On entry : 0/0
 16508 ;;		On exit  : 0/0
 16509 ;;		Unchanged: 0/0
 16510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16511 ;;      Params:         0       0       0       0       0       0       0       0       0
 16512 ;;      Locals:         0       8       0       0       0       0       0       0       0
 16513 ;;      Temps:          0      12       0       0       0       0       0       0       0
 16514 ;;      Totals:         0      20       0       0       0       0       0       0       0
 16515 ;;Total ram usage:       20 bytes
 16516 ;; Hardware stack levels used:    1
 16517 ;; Hardware stack levels required when called:   11
 16518 ;; This function calls:
 16519 ;;		_millis
 16520 ;; This function is called by:
 16521 ;;		_JoinLoRaWan
 16522 ;;		_TxLoRaWan
 16523 ;;		_enviaComando
 16524 ;; This function uses a non-reentrant model
 16525 ;;
 16526                           
 16527                           	psect	text55
 16528  0044B2                     __ptext55:
 16529                           	opt stack 0
 16530  0044B2                     _parseLoRaWan:
 16531                           	opt stack 18
 16532                           
 16533                           ;LoRaWanCore.c: 315: uint8_t status=0xFF;
 16534                           
 16535                           ;incstack = 0
 16536  0044B2  0100               	movlb	0	; () banked
 16537  0044B4  697A               	setf	parseLoRaWan@status& (0+255),b
 16538                           
 16539                           ; BSR set to: 0
 16540                           ;LoRaWanCore.c: 316: uint16_t intervalMAX=60000;
 16541  0044B6  0EEA               	movlw	234
 16542  0044B8  6F79               	movwf	(parseLoRaWan@intervalMAX+1)& (0+255),b
 16543  0044BA  0E60               	movlw	96
 16544  0044BC  6F78               	movwf	parseLoRaWan@intervalMAX& (0+255),b
 16545                           
 16546                           ;LoRaWanCore.c: 317: bool timeout=0;
 16547  0044BE  0E00               	movlw	0
 16548  0044C0  6F7B               	movwf	parseLoRaWan@timeout& (0+255),b
 16549                           
 16550                           ; BSR set to: 0
 16551                           ;LoRaWanCore.c: 318: uint32_t previous=millis();
 16552  0044C2  EC38  F02B         	call	_millis	;wreg free
 16553  0044C6  C060  F074         	movff	?_millis,parseLoRaWan@previous
 16554  0044CA  C061  F075         	movff	?_millis+1,parseLoRaWan@previous+1
 16555  0044CE  C062  F076         	movff	?_millis+2,parseLoRaWan@previous+2
 16556  0044D2  C063  F077         	movff	?_millis+3,parseLoRaWan@previous+3
 16557                           
 16558                           ;LoRaWanCore.c: 320: while ((!timeout) && (!novaMsgLoRaWan))
 16559  0044D6  D033               	goto	l2275
 16560  0044D8                     
 16561                           ;LoRaWanCore.c: 321: {
 16562                           ;LoRaWanCore.c: 322: if ((millis()-previous) > intervalMAX)
 16563  0044D8  C074  F068         	movff	parseLoRaWan@previous,??_parseLoRaWan
 16564  0044DC  C075  F069         	movff	parseLoRaWan@previous+1,??_parseLoRaWan+1
 16565  0044E0  C076  F06A         	movff	parseLoRaWan@previous+2,??_parseLoRaWan+2
 16566  0044E4  C077  F06B         	movff	parseLoRaWan@previous+3,??_parseLoRaWan+3
 16567  0044E8  0100               	movlb	0	; () banked
 16568  0044EA  1F68               	comf	??_parseLoRaWan& (0+255),f,b
 16569  0044EC  1F69               	comf	(??_parseLoRaWan+1)& (0+255),f,b
 16570  0044EE  1F6A               	comf	(??_parseLoRaWan+2)& (0+255),f,b
 16571  0044F0  1F6B               	comf	(??_parseLoRaWan+3)& (0+255),f,b
 16572  0044F2  2B68               	incf	??_parseLoRaWan& (0+255),f,b
 16573  0044F4  0E00               	movlw	0
 16574  0044F6  2369               	addwfc	(??_parseLoRaWan+1)& (0+255),f,b
 16575  0044F8  236A               	addwfc	(??_parseLoRaWan+2)& (0+255),f,b
 16576  0044FA  236B               	addwfc	(??_parseLoRaWan+3)& (0+255),f,b
 16577  0044FC  EC38  F02B         	call	_millis	;wreg free
 16578  004500  0100               	movlb	0	; () banked
 16579  004502  5168               	movf	??_parseLoRaWan& (0+255),w,b
 16580  004504  2560               	addwf	?_millis& (0+255),w,b
 16581  004506  6F6C               	movwf	(??_parseLoRaWan+4)& (0+255),b
 16582  004508  5169               	movf	(??_parseLoRaWan+1)& (0+255),w,b
 16583  00450A  2161               	addwfc	(?_millis+1)& (0+255),w,b
 16584  00450C  6F6D               	movwf	(??_parseLoRaWan+5)& (0+255),b
 16585  00450E  516A               	movf	(??_parseLoRaWan+2)& (0+255),w,b
 16586  004510  2162               	addwfc	(?_millis+2)& (0+255),w,b
 16587  004512  6F6E               	movwf	(??_parseLoRaWan+6)& (0+255),b
 16588  004514  516B               	movf	(??_parseLoRaWan+3)& (0+255),w,b
 16589  004516  2163               	addwfc	(?_millis+3)& (0+255),w,b
 16590  004518  6F6F               	movwf	(??_parseLoRaWan+7)& (0+255),b
 16591  00451A  5178               	movf	parseLoRaWan@intervalMAX& (0+255),w,b
 16592  00451C  6F70               	movwf	(??_parseLoRaWan+8)& (0+255),b
 16593  00451E  5179               	movf	(parseLoRaWan@intervalMAX+1)& (0+255),w,b
 16594  004520  6F71               	movwf	(??_parseLoRaWan+9)& (0+255),b
 16595  004522  6B72               	clrf	(??_parseLoRaWan+10)& (0+255),b
 16596  004524  6B73               	clrf	(??_parseLoRaWan+11)& (0+255),b
 16597  004526  516C               	movf	(??_parseLoRaWan+4)& (0+255),w,b
 16598  004528  5D70               	subwf	(??_parseLoRaWan+8)& (0+255),w,b
 16599  00452A  516D               	movf	(??_parseLoRaWan+5)& (0+255),w,b
 16600  00452C  5971               	subwfb	(??_parseLoRaWan+9)& (0+255),w,b
 16601  00452E  516E               	movf	(??_parseLoRaWan+6)& (0+255),w,b
 16602  004530  5972               	subwfb	(??_parseLoRaWan+10)& (0+255),w,b
 16603  004532  516F               	movf	(??_parseLoRaWan+7)& (0+255),w,b
 16604  004534  5973               	subwfb	(??_parseLoRaWan+11)& (0+255),w,b
 16605  004536  B0D8               	btfsc	status,0,c
 16606  004538  D002               	goto	l2275
 16607                           
 16608                           ; BSR set to: 0
 16609                           ;LoRaWanCore.c: 323: {
 16610                           ;LoRaWanCore.c: 324: timeout=1;
 16611  00453A  0E01               	movlw	1
 16612  00453C  6F7B               	movwf	parseLoRaWan@timeout& (0+255),b
 16613  00453E                     l2275:
 16614                           
 16615                           ; BSR set to: 0
 16616  00453E  0100               	movlb	0	; () banked
 16617  004540  517B               	movf	parseLoRaWan@timeout& (0+255),w,b
 16618  004542  A4D8               	btfss	status,2,c
 16619  004544  D003               	goto	u6410
 16620                           
 16621                           ; BSR set to: 0
 16622  004546  5059               	movf	_novaMsgLoRaWan,w,c	;volatile
 16623  004548  B4D8               	btfsc	status,2,c
 16624  00454A  D7C6               	goto	l2274
 16625  00454C                     u6410:
 16626                           
 16627                           ; BSR set to: 0
 16628                           ;LoRaWanCore.c: 325: }
 16629                           ;LoRaWanCore.c: 326: }
 16630                           ;LoRaWanCore.c: 328: if (novaMsgLoRaWan)
 16631                           
 16632                           ; BSR set to: 0
 16633                           
 16634                           ; BSR set to: 0
 16635  00454C  5059               	movf	_novaMsgLoRaWan,w,c	;volatile
 16636  00454E  B4D8               	btfsc	status,2,c
 16637  004550  D004               	goto	l2279
 16638                           
 16639                           ; BSR set to: 0
 16640                           ;LoRaWanCore.c: 329: {
 16641                           ;LoRaWanCore.c: 330: status=responseLoRaWan;
 16642  004552  C1FE  F07A         	movff	_responseLoRaWan,parseLoRaWan@status	;volatile
 16643                           
 16644                           ; BSR set to: 0
 16645                           ;LoRaWanCore.c: 331: novaMsgLoRaWan=0;
 16646  004556  0E00               	movlw	0
 16647  004558  6E59               	movwf	_novaMsgLoRaWan,c	;volatile
 16648  00455A                     l2279:
 16649                           
 16650                           ; BSR set to: 0
 16651                           ;LoRaWanCore.c: 332: }
 16652                           ;LoRaWanCore.c: 334: return status;
 16653  00455A  517A               	movf	parseLoRaWan@status& (0+255),w,b
 16654  00455C  0012               	return	
 16655  00455E                     __end_of_parseLoRaWan:
 16656                           	opt stack 0
 16657                           tblptru	equ	0xFF8
 16658                           tblptrh	equ	0xFF7
 16659                           tblptrl	equ	0xFF6
 16660                           tablat	equ	0xFF5
 16661                           prodh	equ	0xFF4
 16662                           prodl	equ	0xFF3
 16663                           intcon	equ	0xFF2
 16664                           indf0	equ	0xFEF
 16665                           postinc0	equ	0xFEE
 16666                           fsr0h	equ	0xFEA
 16667                           fsr0l	equ	0xFE9
 16668                           wreg	equ	0xFE8
 16669                           indf1	equ	0xFE7
 16670                           postdec1	equ	0xFE5
 16671                           fsr1h	equ	0xFE2
 16672                           fsr1l	equ	0xFE1
 16673                           indf2	equ	0xFDF
 16674                           postinc2	equ	0xFDE
 16675                           postdec2	equ	0xFDD
 16676                           plusw2	equ	0xFDB
 16677                           fsr2h	equ	0xFDA
 16678                           fsr2l	equ	0xFD9
 16679                           status	equ	0xFD8
 16680                           
 16681 ;; *************** function _millis *****************
 16682 ;; Defined at:
 16683 ;;		line 48 in file "Timer.c"
 16684 ;; Parameters:    Size  Location     Type
 16685 ;;		None
 16686 ;; Auto vars:     Size  Location     Type
 16687 ;;  m               4    4[BANK0 ] unsigned long 
 16688 ;; Return value:  Size  Location     Type
 16689 ;;                  4    0[BANK0 ] unsigned long 
 16690 ;; Registers used:
 16691 ;;		None
 16692 ;; Tracked objects:
 16693 ;;		On entry : 0/0
 16694 ;;		On exit  : 0/0
 16695 ;;		Unchanged: 0/0
 16696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16697 ;;      Params:         0       4       0       0       0       0       0       0       0
 16698 ;;      Locals:         0       4       0       0       0       0       0       0       0
 16699 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16700 ;;      Totals:         0       8       0       0       0       0       0       0       0
 16701 ;;Total ram usage:        8 bytes
 16702 ;; Hardware stack levels used:    1
 16703 ;; Hardware stack levels required when called:   10
 16704 ;; This function calls:
 16705 ;;		Nothing
 16706 ;; This function is called by:
 16707 ;;		_delay
 16708 ;;		_main
 16709 ;;		_parseLoRaWan
 16710 ;;		_parse_message
 16711 ;;		_txZBStatusResponse
 16712 ;; This function uses a non-reentrant model
 16713 ;;
 16714                           
 16715                           	psect	text56
 16716  005670                     __ptext56:
 16717                           	opt stack 0
 16718  005670                     _millis:
 16719                           	opt stack 20
 16720                           
 16721                           ;Timer.c: 50: CCP1IE=0;
 16722                           
 16723                           ; BSR set to: 0
 16724                           ;incstack = 0
 16725  005670  949D               	bcf	3997,2,c	;volatile
 16726                           
 16727                           ;Timer.c: 51: uint32_t m=ticks;
 16728  005672  C32A  F064         	movff	_ticks,millis@m	;volatile
 16729  005676  C32B  F065         	movff	_ticks+1,millis@m+1	;volatile
 16730  00567A  C32C  F066         	movff	_ticks+2,millis@m+2	;volatile
 16731  00567E  C32D  F067         	movff	_ticks+3,millis@m+3	;volatile
 16732                           
 16733                           ;Timer.c: 52: CCP1IE=1;
 16734  005682  849D               	bsf	3997,2,c	;volatile
 16735                           
 16736                           ;Timer.c: 54: return m;
 16737  005684  C064  F060         	movff	millis@m,?_millis
 16738  005688  C065  F061         	movff	millis@m+1,?_millis+1
 16739  00568C  C066  F062         	movff	millis@m+2,?_millis+2
 16740  005690  C067  F063         	movff	millis@m+3,?_millis+3
 16741  005694  0012               	return		;funcret
 16742  005696                     __end_of_millis:
 16743                           	opt stack 0
 16744                           tblptru	equ	0xFF8
 16745                           tblptrh	equ	0xFF7
 16746                           tblptrl	equ	0xFF6
 16747                           tablat	equ	0xFF5
 16748                           prodh	equ	0xFF4
 16749                           prodl	equ	0xFF3
 16750                           intcon	equ	0xFF2
 16751                           indf0	equ	0xFEF
 16752                           postinc0	equ	0xFEE
 16753                           fsr0h	equ	0xFEA
 16754                           fsr0l	equ	0xFE9
 16755                           wreg	equ	0xFE8
 16756                           indf1	equ	0xFE7
 16757                           postdec1	equ	0xFE5
 16758                           fsr1h	equ	0xFE2
 16759                           fsr1l	equ	0xFE1
 16760                           indf2	equ	0xFDF
 16761                           postinc2	equ	0xFDE
 16762                           postdec2	equ	0xFDD
 16763                           plusw2	equ	0xFDB
 16764                           fsr2h	equ	0xFDA
 16765                           fsr2l	equ	0xFD9
 16766                           status	equ	0xFD8
 16767                           
 16768 ;; *************** function _initRecebeDados *****************
 16769 ;; Defined at:
 16770 ;;		line 337 in file "LoRaWanCore.c"
 16771 ;; Parameters:    Size  Location     Type
 16772 ;;		None
 16773 ;; Auto vars:     Size  Location     Type
 16774 ;;		None
 16775 ;; Return value:  Size  Location     Type
 16776 ;;                  1    wreg      void 
 16777 ;; Registers used:
 16778 ;;		wreg, status,2
 16779 ;; Tracked objects:
 16780 ;;		On entry : 0/0
 16781 ;;		On exit  : 0/0
 16782 ;;		Unchanged: 0/0
 16783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16784 ;;      Params:         0       0       0       0       0       0       0       0       0
 16785 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16786 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16787 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16788 ;;Total ram usage:        0 bytes
 16789 ;; Hardware stack levels used:    1
 16790 ;; Hardware stack levels required when called:   10
 16791 ;; This function calls:
 16792 ;;		Nothing
 16793 ;; This function is called by:
 16794 ;;		_enviaComando
 16795 ;; This function uses a non-reentrant model
 16796 ;;
 16797                           
 16798                           	psect	text57
 16799  005720                     __ptext57:
 16800                           	opt stack 0
 16801  005720                     _initRecebeDados:
 16802                           	opt stack 18
 16803                           
 16804                           ;LoRaWanCore.c: 339: RCIE=0;
 16805                           
 16806                           ;incstack = 0
 16807  005720  9A9D               	bcf	3997,5,c	;volatile
 16808                           
 16809                           ;LoRaWanCore.c: 340: responseLoRaWan=0xFF;
 16810  005722  0101               	movlb	1	; () banked
 16811  005724  69FE               	setf	_responseLoRaWan& (0+255),b	;volatile
 16812                           
 16813                           ; BSR set to: 1
 16814                           ;LoRaWanCore.c: 341: tamFrame=0;
 16815  005726  0E00               	movlw	0
 16816  005728  6E5A               	movwf	_tamFrame,c	;volatile
 16817                           
 16818                           ;LoRaWanCore.c: 342: tamDadosRecebidos=0;
 16819  00572A  0E00               	movlw	0
 16820  00572C  6E5B               	movwf	_tamDadosRecebidos,c	;volatile
 16821                           
 16822                           ;LoRaWanCore.c: 343: novaMsgLoRaWan=0;
 16823  00572E  0E00               	movlw	0
 16824  005730  6E59               	movwf	_novaMsgLoRaWan,c	;volatile
 16825                           
 16826                           ; BSR set to: 1
 16827                           ;LoRaWanCore.c: 344: RCIE=1;
 16828  005732  8A9D               	bsf	3997,5,c	;volatile
 16829                           
 16830                           ; BSR set to: 1
 16831  005734  0012               	return		;funcret
 16832  005736                     __end_of_initRecebeDados:
 16833                           	opt stack 0
 16834                           tblptru	equ	0xFF8
 16835                           tblptrh	equ	0xFF7
 16836                           tblptrl	equ	0xFF6
 16837                           tablat	equ	0xFF5
 16838                           prodh	equ	0xFF4
 16839                           prodl	equ	0xFF3
 16840                           intcon	equ	0xFF2
 16841                           indf0	equ	0xFEF
 16842                           postinc0	equ	0xFEE
 16843                           fsr0h	equ	0xFEA
 16844                           fsr0l	equ	0xFE9
 16845                           wreg	equ	0xFE8
 16846                           indf1	equ	0xFE7
 16847                           postdec1	equ	0xFE5
 16848                           fsr1h	equ	0xFE2
 16849                           fsr1l	equ	0xFE1
 16850                           indf2	equ	0xFDF
 16851                           postinc2	equ	0xFDE
 16852                           postdec2	equ	0xFDD
 16853                           plusw2	equ	0xFDB
 16854                           fsr2h	equ	0xFDA
 16855                           fsr2l	equ	0xFD9
 16856                           status	equ	0xFD8
 16857                           
 16858 ;; *************** function _SYS_InterruptHigh *****************
 16859 ;; Defined at:
 16860 ;;		line 59 in file "usb/system.c"
 16861 ;; Parameters:    Size  Location     Type
 16862 ;;		None
 16863 ;; Auto vars:     Size  Location     Type
 16864 ;;  dig4            2   53[COMRAM] int 
 16865 ;;  dig3            2   51[COMRAM] int 
 16866 ;;  dig2            2   49[COMRAM] int 
 16867 ;;  dig1            2   47[COMRAM] int 
 16868 ;; Return value:  Size  Location     Type
 16869 ;;                  1    wreg      void 
 16870 ;; Registers used:
 16871 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16872 ;; Tracked objects:
 16873 ;;		On entry : 0/0
 16874 ;;		On exit  : 0/0
 16875 ;;		Unchanged: 0/0
 16876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16877 ;;      Params:         0       0       0       0       0       0       0       0       0
 16878 ;;      Locals:         8       0       0       0       0       0       0       0       0
 16879 ;;      Temps:         19       0       0       0       0       0       0       0       0
 16880 ;;      Totals:        27       0       0       0       0       0       0       0       0
 16881 ;;Total ram usage:       27 bytes
 16882 ;; Hardware stack levels used:    1
 16883 ;; Hardware stack levels required when called:    9
 16884 ;; This function calls:
 16885 ;;		_USBDeviceTasks
 16886 ;;		_getch
 16887 ;;		_recebeByteLoRaWan
 16888 ;; This function is called by:
 16889 ;;		Interrupt level 2
 16890 ;; This function uses a non-reentrant model
 16891 ;;
 16892                           
 16893                           	psect	intcode
 16894  000008                     __pintcode:
 16895                           	opt stack 0
 16896  000008                     _SYS_InterruptHigh:
 16897                           	opt stack 16
 16898                           
 16899                           ; BSR set to: 1
 16900                           ;incstack = 0
 16901  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 16902  00000A  EDAD  F013         	call	int_func,f	;refresh shadow registers
 16903                           tblptru	equ	0xFF8
 16904                           tblptrh	equ	0xFF7
 16905                           tblptrl	equ	0xFF6
 16906                           tablat	equ	0xFF5
 16907                           prodh	equ	0xFF4
 16908                           prodl	equ	0xFF3
 16909                           intcon	equ	0xFF2
 16910                           indf0	equ	0xFEF
 16911                           postinc0	equ	0xFEE
 16912                           fsr0h	equ	0xFEA
 16913                           fsr0l	equ	0xFE9
 16914                           wreg	equ	0xFE8
 16915                           indf1	equ	0xFE7
 16916                           postdec1	equ	0xFE5
 16917                           fsr1h	equ	0xFE2
 16918                           fsr1l	equ	0xFE1
 16919                           indf2	equ	0xFDF
 16920                           postinc2	equ	0xFDE
 16921                           postdec2	equ	0xFDD
 16922                           plusw2	equ	0xFDB
 16923                           fsr2h	equ	0xFDA
 16924                           fsr2l	equ	0xFD9
 16925                           status	equ	0xFD8
 16926                           
 16927                           	psect	intcode_body
 16928  00275A                     __pintcode_body:
 16929                           	opt stack 16
 16930  00275A                     int_func:
 16931                           	opt stack 16
 16932  00275A  0006               	pop		; remove dummy address from shadow register refresh
 16933  00275C  CFFA F01E          	movff	pclath,??_SYS_InterruptHigh+1
 16934  002760  CFFB F01F          	movff	pclatu,??_SYS_InterruptHigh+2
 16935  002764  CFE9 F020          	movff	fsr0l,??_SYS_InterruptHigh+3
 16936  002768  CFEA F021          	movff	fsr0h,??_SYS_InterruptHigh+4
 16937  00276C  CFE1 F022          	movff	fsr1l,??_SYS_InterruptHigh+5
 16938  002770  CFE2 F023          	movff	fsr1h,??_SYS_InterruptHigh+6
 16939  002774  CFD9 F024          	movff	fsr2l,??_SYS_InterruptHigh+7
 16940  002778  CFDA F025          	movff	fsr2h,??_SYS_InterruptHigh+8
 16941  00277C  CFF3 F026          	movff	prodl,??_SYS_InterruptHigh+9
 16942  002780  CFF4 F027          	movff	prodh,??_SYS_InterruptHigh+10
 16943  002784  CFF6 F028          	movff	tblptrl,??_SYS_InterruptHigh+11
 16944  002788  CFF7 F029          	movff	tblptrh,??_SYS_InterruptHigh+12
 16945  00278C  CFF8 F02A          	movff	tblptru,??_SYS_InterruptHigh+13
 16946  002790  CFF5 F02B          	movff	tablat,??_SYS_InterruptHigh+14
 16947  002794  C05F  F02C         	movff	btemp,??_SYS_InterruptHigh+15
 16948  002798  C060  F02D         	movff	btemp+1,??_SYS_InterruptHigh+16
 16949  00279C  C061  F02E         	movff	btemp+2,??_SYS_InterruptHigh+17
 16950  0027A0  C062  F02F         	movff	btemp+3,??_SYS_InterruptHigh+18
 16951                           
 16952                           ;system.c: 64: if (CCP1IF && CCP1IE)
 16953  0027A4  B49E               	btfsc	3998,2,c	;volatile
 16954  0027A6  A49D               	btfss	3997,2,c	;volatile
 16955  0027A8  D089               	goto	i2l107
 16956                           
 16957                           ;system.c: 65: {
 16958                           ;system.c: 66: CCP1IF=0;
 16959  0027AA  949E               	bcf	3998,2,c	;volatile
 16960                           
 16961                           ;system.c: 67: ticks++;
 16962  0027AC  0E01               	movlw	1
 16963  0027AE  0103               	movlb	3	; () banked
 16964  0027B0  272A               	addwf	_ticks& (0+255),f,b	;volatile
 16965  0027B2  0E00               	movlw	0
 16966  0027B4  232B               	addwfc	(_ticks+1)& (0+255),f,b	;volatile
 16967  0027B6  232C               	addwfc	(_ticks+2)& (0+255),f,b	;volatile
 16968  0027B8  232D               	addwfc	(_ticks+3)& (0+255),f,b	;volatile
 16969                           
 16970                           ; BSR set to: 3
 16971                           ;system.c: 69: int dig1=PORTDbits.RD0;
 16972  0027BA  A083               	btfss	3971,0,c	;volatile
 16973  0027BC  D003               	goto	i2u1019_40
 16974  0027BE  6A1D               	clrf	??_SYS_InterruptHigh& (0+255),c
 16975  0027C0  2A1D               	incf	??_SYS_InterruptHigh& (0+255),f,c
 16976  0027C2  D001               	goto	i2u1019_48
 16977  0027C4                     i2u1019_40:
 16978  0027C4  6A1D               	clrf	??_SYS_InterruptHigh& (0+255),c
 16979  0027C6                     i2u1019_48:
 16980  0027C6  501D               	movf	??_SYS_InterruptHigh,w,c
 16981  0027C8  6E30               	movwf	SYS_InterruptHigh@dig1,c
 16982  0027CA  6A31               	clrf	SYS_InterruptHigh@dig1+1,c
 16983                           
 16984                           ;system.c: 70: int dig2=PORTDbits.RD1;
 16985  0027CC  A283               	btfss	3971,1,c	;volatile
 16986  0027CE  D003               	goto	i2u1020_40
 16987  0027D0  6A1D               	clrf	??_SYS_InterruptHigh& (0+255),c
 16988  0027D2  2A1D               	incf	??_SYS_InterruptHigh& (0+255),f,c
 16989  0027D4  D001               	goto	i2u1020_48
 16990  0027D6                     i2u1020_40:
 16991  0027D6  6A1D               	clrf	??_SYS_InterruptHigh& (0+255),c
 16992  0027D8                     i2u1020_48:
 16993  0027D8  501D               	movf	??_SYS_InterruptHigh,w,c
 16994  0027DA  6E32               	movwf	SYS_InterruptHigh@dig2,c
 16995  0027DC  6A33               	clrf	SYS_InterruptHigh@dig2+1,c
 16996                           
 16997                           ;system.c: 71: int dig3=PORTDbits.RD2;
 16998  0027DE  A483               	btfss	3971,2,c	;volatile
 16999  0027E0  D003               	goto	i2u1021_40
 17000  0027E2  6A1D               	clrf	??_SYS_InterruptHigh& (0+255),c
 17001  0027E4  2A1D               	incf	??_SYS_InterruptHigh& (0+255),f,c
 17002  0027E6  D001               	goto	i2u1021_48
 17003  0027E8                     i2u1021_40:
 17004  0027E8  6A1D               	clrf	??_SYS_InterruptHigh& (0+255),c
 17005  0027EA                     i2u1021_48:
 17006  0027EA  501D               	movf	??_SYS_InterruptHigh,w,c
 17007  0027EC  6E34               	movwf	SYS_InterruptHigh@dig3,c
 17008  0027EE  6A35               	clrf	SYS_InterruptHigh@dig3+1,c
 17009                           
 17010                           ;system.c: 72: int dig4=PORTDbits.RD3;
 17011  0027F0  A683               	btfss	3971,3,c	;volatile
 17012  0027F2  D003               	goto	i2u1022_40
 17013  0027F4  6A1D               	clrf	??_SYS_InterruptHigh& (0+255),c
 17014  0027F6  2A1D               	incf	??_SYS_InterruptHigh& (0+255),f,c
 17015  0027F8  D001               	goto	i2u1022_48
 17016  0027FA                     i2u1022_40:
 17017  0027FA  6A1D               	clrf	??_SYS_InterruptHigh& (0+255),c
 17018  0027FC                     i2u1022_48:
 17019  0027FC  501D               	movf	??_SYS_InterruptHigh,w,c
 17020  0027FE  6E36               	movwf	SYS_InterruptHigh@dig4,c
 17021  002800  6A37               	clrf	SYS_InterruptHigh@dig4+1,c
 17022                           
 17023                           ;system.c: 74: if ((dig_1!=dig1) && (dig1==1))
 17024  002802  5030               	movf	SYS_InterruptHigh@dig1,w,c
 17025  002804  0102               	movlb	2	; () banked
 17026  002806  19E0               	xorwf	_dig_1& (0+255),w,b	;volatile
 17027  002808  E104               	bnz	i2u1023_40
 17028  00280A  5031               	movf	SYS_InterruptHigh@dig1+1,w,c
 17029  00280C  19E1               	xorwf	(_dig_1+1)& (0+255),w,b	;volatile
 17030  00280E  B4D8               	btfsc	status,2,c
 17031  002810  D00B               	goto	i2l108
 17032  002812                     i2u1023_40:
 17033                           
 17034                           ; BSR set to: 2
 17035  002812  0430               	decf	SYS_InterruptHigh@dig1,w,c
 17036  002814  1031               	iorwf	SYS_InterruptHigh@dig1+1,w,c
 17037  002816  A4D8               	btfss	status,2,c
 17038  002818  D007               	goto	i2l108
 17039                           
 17040                           ; BSR set to: 2
 17041                           ;system.c: 75: freqPulses1++;
 17042  00281A  0E01               	movlw	1
 17043  00281C  0103               	movlb	3	; () banked
 17044  00281E  273A               	addwf	_freqPulses1& (0+255),f,b	;volatile
 17045  002820  0E00               	movlw	0
 17046  002822  233B               	addwfc	(_freqPulses1+1)& (0+255),f,b	;volatile
 17047  002824  233C               	addwfc	(_freqPulses1+2)& (0+255),f,b	;volatile
 17048  002826  233D               	addwfc	(_freqPulses1+3)& (0+255),f,b	;volatile
 17049  002828                     i2l108:
 17050                           
 17051                           ;system.c: 76: dig_1=dig1;
 17052                           
 17053                           ; BSR set to: 3
 17054  002828  C030  F2E0         	movff	SYS_InterruptHigh@dig1,_dig_1	;volatile
 17055  00282C  C031  F2E1         	movff	SYS_InterruptHigh@dig1+1,_dig_1+1	;volatile
 17056                           
 17057                           ;system.c: 77: if ((dig_2!=dig2) && (dig2==1))
 17058  002830  5032               	movf	SYS_InterruptHigh@dig2,w,c
 17059  002832  0102               	movlb	2	; () banked
 17060  002834  19DE               	xorwf	_dig_2& (0+255),w,b	;volatile
 17061  002836  E104               	bnz	i2u1025_40
 17062  002838  5033               	movf	SYS_InterruptHigh@dig2+1,w,c
 17063  00283A  19DF               	xorwf	(_dig_2+1)& (0+255),w,b	;volatile
 17064  00283C  B4D8               	btfsc	status,2,c
 17065  00283E  D00B               	goto	i2l109
 17066  002840                     i2u1025_40:
 17067                           
 17068                           ; BSR set to: 2
 17069  002840  0432               	decf	SYS_InterruptHigh@dig2,w,c
 17070  002842  1033               	iorwf	SYS_InterruptHigh@dig2+1,w,c
 17071  002844  A4D8               	btfss	status,2,c
 17072  002846  D007               	goto	i2l109
 17073                           
 17074                           ; BSR set to: 2
 17075                           ;system.c: 78: freqPulses2++;
 17076  002848  0E01               	movlw	1
 17077  00284A  0103               	movlb	3	; () banked
 17078  00284C  2736               	addwf	_freqPulses2& (0+255),f,b	;volatile
 17079  00284E  0E00               	movlw	0
 17080  002850  2337               	addwfc	(_freqPulses2+1)& (0+255),f,b	;volatile
 17081  002852  2338               	addwfc	(_freqPulses2+2)& (0+255),f,b	;volatile
 17082  002854  2339               	addwfc	(_freqPulses2+3)& (0+255),f,b	;volatile
 17083  002856                     i2l109:
 17084                           
 17085                           ;system.c: 79: dig_2=dig2;
 17086                           
 17087                           ; BSR set to: 3
 17088  002856  C032  F2DE         	movff	SYS_InterruptHigh@dig2,_dig_2	;volatile
 17089  00285A  C033  F2DF         	movff	SYS_InterruptHigh@dig2+1,_dig_2+1	;volatile
 17090                           
 17091                           ;system.c: 80: if ((dig_3!=dig3) && (dig3==1))
 17092  00285E  5034               	movf	SYS_InterruptHigh@dig3,w,c
 17093  002860  0102               	movlb	2	; () banked
 17094  002862  19DC               	xorwf	_dig_3& (0+255),w,b	;volatile
 17095  002864  E104               	bnz	i2u1027_40
 17096  002866  5035               	movf	SYS_InterruptHigh@dig3+1,w,c
 17097  002868  19DD               	xorwf	(_dig_3+1)& (0+255),w,b	;volatile
 17098  00286A  B4D8               	btfsc	status,2,c
 17099  00286C  D00B               	goto	i2l110
 17100  00286E                     i2u1027_40:
 17101                           
 17102                           ; BSR set to: 2
 17103  00286E  0434               	decf	SYS_InterruptHigh@dig3,w,c
 17104  002870  1035               	iorwf	SYS_InterruptHigh@dig3+1,w,c
 17105  002872  A4D8               	btfss	status,2,c
 17106  002874  D007               	goto	i2l110
 17107                           
 17108                           ; BSR set to: 2
 17109                           ;system.c: 81: freqPulses3++;
 17110  002876  0E01               	movlw	1
 17111  002878  0103               	movlb	3	; () banked
 17112  00287A  2732               	addwf	_freqPulses3& (0+255),f,b	;volatile
 17113  00287C  0E00               	movlw	0
 17114  00287E  2333               	addwfc	(_freqPulses3+1)& (0+255),f,b	;volatile
 17115  002880  2334               	addwfc	(_freqPulses3+2)& (0+255),f,b	;volatile
 17116  002882  2335               	addwfc	(_freqPulses3+3)& (0+255),f,b	;volatile
 17117  002884                     i2l110:
 17118                           
 17119                           ;system.c: 82: dig_3=dig3;
 17120                           
 17121                           ; BSR set to: 3
 17122  002884  C034  F2DC         	movff	SYS_InterruptHigh@dig3,_dig_3	;volatile
 17123  002888  C035  F2DD         	movff	SYS_InterruptHigh@dig3+1,_dig_3+1	;volatile
 17124                           
 17125                           ;system.c: 83: if ((dig_4!=dig4) && (dig4==1))
 17126  00288C  5036               	movf	SYS_InterruptHigh@dig4,w,c
 17127  00288E  0102               	movlb	2	; () banked
 17128  002890  19DA               	xorwf	_dig_4& (0+255),w,b	;volatile
 17129  002892  E104               	bnz	i2u1029_40
 17130  002894  5037               	movf	SYS_InterruptHigh@dig4+1,w,c
 17131  002896  19DB               	xorwf	(_dig_4+1)& (0+255),w,b	;volatile
 17132  002898  B4D8               	btfsc	status,2,c
 17133  00289A  D00B               	goto	i2l111
 17134  00289C                     i2u1029_40:
 17135                           
 17136                           ; BSR set to: 2
 17137  00289C  0436               	decf	SYS_InterruptHigh@dig4,w,c
 17138  00289E  1037               	iorwf	SYS_InterruptHigh@dig4+1,w,c
 17139  0028A0  A4D8               	btfss	status,2,c
 17140  0028A2  D007               	goto	i2l111
 17141                           
 17142                           ; BSR set to: 2
 17143                           ;system.c: 84: freqPulses4++;
 17144  0028A4  0E01               	movlw	1
 17145  0028A6  0103               	movlb	3	; () banked
 17146  0028A8  272E               	addwf	_freqPulses4& (0+255),f,b	;volatile
 17147  0028AA  0E00               	movlw	0
 17148  0028AC  232F               	addwfc	(_freqPulses4+1)& (0+255),f,b	;volatile
 17149  0028AE  2330               	addwfc	(_freqPulses4+2)& (0+255),f,b	;volatile
 17150  0028B0  2331               	addwfc	(_freqPulses4+3)& (0+255),f,b	;volatile
 17151  0028B2                     i2l111:
 17152                           
 17153                           ;system.c: 85: dig_4=dig4;
 17154                           
 17155                           ; BSR set to: 3
 17156  0028B2  C036  F2DA         	movff	SYS_InterruptHigh@dig4,_dig_4	;volatile
 17157  0028B6  C037  F2DB         	movff	SYS_InterruptHigh@dig4+1,_dig_4+1	;volatile
 17158                           
 17159                           ;system.c: 86: }
 17160  0028BA  D00B               	goto	i2l115
 17161  0028BC                     i2l107:
 17162                           
 17163                           ;system.c: 87: else if (RCIE && RCIF)
 17164  0028BC  BA9D               	btfsc	3997,5,c	;volatile
 17165  0028BE  AA9E               	btfss	3998,5,c	;volatile
 17166  0028C0  D005               	goto	i2l113
 17167                           
 17168                           ;system.c: 88: {
 17169                           ;system.c: 90: recebeByteLoRaWan(getch());
 17170  0028C2  EC4B  F02B         	call	_getch	;wreg free
 17171  0028C6  ECDA  F00E         	call	_recebeByteLoRaWan
 17172                           
 17173                           ;system.c: 92: }
 17174  0028CA  D003               	goto	i2l115
 17175  0028CC                     i2l113:
 17176                           
 17177                           ;system.c: 93: else if (USBIE)
 17178  0028CC  BAA0               	btfsc	4000,5,c	;volatile
 17179                           
 17180                           ;system.c: 94: {
 17181                           ;system.c: 96: USBDeviceTasks();
 17182  0028CE  ECD9  F017         	call	_USBDeviceTasks	;wreg free
 17183  0028D2                     i2l115:
 17184  0028D2  C02F  F062         	movff	??_SYS_InterruptHigh+18,btemp+3
 17185  0028D6  C02E  F061         	movff	??_SYS_InterruptHigh+17,btemp+2
 17186  0028DA  C02D  F060         	movff	??_SYS_InterruptHigh+16,btemp+1
 17187  0028DE  C02C  F05F         	movff	??_SYS_InterruptHigh+15,btemp
 17188  0028E2  C02B  FFF5         	movff	??_SYS_InterruptHigh+14,tablat
 17189  0028E6  C02A  FFF8         	movff	??_SYS_InterruptHigh+13,tblptru
 17190  0028EA  C029  FFF7         	movff	??_SYS_InterruptHigh+12,tblptrh
 17191  0028EE  C028  FFF6         	movff	??_SYS_InterruptHigh+11,tblptrl
 17192  0028F2  C027  FFF4         	movff	??_SYS_InterruptHigh+10,prodh
 17193  0028F6  C026  FFF3         	movff	??_SYS_InterruptHigh+9,prodl
 17194  0028FA  C025  FFDA         	movff	??_SYS_InterruptHigh+8,fsr2h
 17195  0028FE  C024  FFD9         	movff	??_SYS_InterruptHigh+7,fsr2l
 17196  002902  C023  FFE2         	movff	??_SYS_InterruptHigh+6,fsr1h
 17197  002906  C022  FFE1         	movff	??_SYS_InterruptHigh+5,fsr1l
 17198  00290A  C021  FFEA         	movff	??_SYS_InterruptHigh+4,fsr0h
 17199  00290E  C020  FFE9         	movff	??_SYS_InterruptHigh+3,fsr0l
 17200  002912  C01F  FFFB         	movff	??_SYS_InterruptHigh+2,pclatu
 17201  002916  C01E  FFFA         	movff	??_SYS_InterruptHigh+1,pclath
 17202  00291A  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 17203  00291C  0011               	retfie		f
 17204  00291E                     __end_of_SYS_InterruptHigh:
 17205                           	opt stack 0
 17206                           pclatu	equ	0xFFB
 17207                           pclath	equ	0xFFA
 17208                           tblptru	equ	0xFF8
 17209                           tblptrh	equ	0xFF7
 17210                           tblptrl	equ	0xFF6
 17211                           tablat	equ	0xFF5
 17212                           prodh	equ	0xFF4
 17213                           prodl	equ	0xFF3
 17214                           intcon	equ	0xFF2
 17215                           indf0	equ	0xFEF
 17216                           postinc0	equ	0xFEE
 17217                           fsr0h	equ	0xFEA
 17218                           fsr0l	equ	0xFE9
 17219                           wreg	equ	0xFE8
 17220                           indf1	equ	0xFE7
 17221                           postdec1	equ	0xFE5
 17222                           fsr1h	equ	0xFE2
 17223                           fsr1l	equ	0xFE1
 17224                           indf2	equ	0xFDF
 17225                           postinc2	equ	0xFDE
 17226                           postdec2	equ	0xFDD
 17227                           plusw2	equ	0xFDB
 17228                           fsr2h	equ	0xFDA
 17229                           fsr2l	equ	0xFD9
 17230                           status	equ	0xFD8
 17231                           
 17232 ;; *************** function _recebeByteLoRaWan *****************
 17233 ;; Defined at:
 17234 ;;		line 347 in file "LoRaWanCore.c"
 17235 ;; Parameters:    Size  Location     Type
 17236 ;;  b               1    wreg     char 
 17237 ;; Auto vars:     Size  Location     Type
 17238 ;;  b               1   15[COMRAM] char 
 17239 ;;  i               1   18[COMRAM] unsigned char 
 17240 ;;  port            1   14[COMRAM] unsigned char 
 17241 ;;  i               1   17[COMRAM] unsigned char 
 17242 ;;  tamMsgRx        1   16[COMRAM] unsigned char 
 17243 ;;  len             1   13[COMRAM] unsigned char 
 17244 ;; Return value:  Size  Location     Type
 17245 ;;                  1    wreg      void 
 17246 ;; Registers used:
 17247 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17248 ;; Tracked objects:
 17249 ;;		On entry : 0/0
 17250 ;;		On exit  : 0/0
 17251 ;;		Unchanged: 0/0
 17252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17253 ;;      Params:         0       0       0       0       0       0       0       0       0
 17254 ;;      Locals:         6       0       0       0       0       0       0       0       0
 17255 ;;      Temps:          4       0       0       0       0       0       0       0       0
 17256 ;;      Totals:        10       0       0       0       0       0       0       0       0
 17257 ;;Total ram usage:       10 bytes
 17258 ;; Hardware stack levels used:    1
 17259 ;; Hardware stack levels required when called:    2
 17260 ;; This function calls:
 17261 ;;		_converter
 17262 ;;		_strcmp
 17263 ;;		_strcpy
 17264 ;;		_strncmp
 17265 ;;		i2_strlen
 17266 ;; This function is called by:
 17267 ;;		_SYS_InterruptHigh
 17268 ;; This function uses a non-reentrant model
 17269 ;;
 17270                           
 17271                           	psect	text59
 17272  001DB4                     __ptext59:
 17273                           	opt stack 0
 17274  001DB4                     _recebeByteLoRaWan:
 17275                           	opt stack 22
 17276                           
 17277                           ;incstack = 0
 17278                           ;recebeByteLoRaWan@b stored from wreg
 17279  001DB4  6E10               	movwf	recebeByteLoRaWan@b,c
 17280                           
 17281                           ;LoRaWanCore.c: 349: static uint8_t frameData[100];
 17282                           ;LoRaWanCore.c: 350: frameData[tamFrame++]=b;
 17283  001DB6  505A               	movf	_tamFrame,w,c	;volatile
 17284  001DB8  0D01               	mullw	1
 17285  001DBA  0E40               	movlw	low recebeByteLoRaWan@frameData
 17286  001DBC  24F3               	addwf	prodl,w,c
 17287  001DBE  6ED9               	movwf	fsr2l,c
 17288  001DC0  0E04               	movlw	high recebeByteLoRaWan@frameData
 17289  001DC2  20F4               	addwfc	prodh,w,c
 17290  001DC4  6EDA               	movwf	fsr2h,c
 17291  001DC6  C010  FFDF         	movff	recebeByteLoRaWan@b,indf2
 17292  001DCA  2A5A               	incf	_tamFrame,f,c	;volatile
 17293                           
 17294                           ;LoRaWanCore.c: 351: if ((b==0x0A) && (tamFrame>2))
 17295  001DCC  0E0A               	movlw	10
 17296  001DCE  1810               	xorwf	recebeByteLoRaWan@b,w,c
 17297  001DD0  A4D8               	btfss	status,2,c
 17298  001DD2  D136               	goto	i2u898_40
 17299  001DD4  0E02               	movlw	2
 17300  001DD6  645A               	cpfsgt	_tamFrame,c	;volatile
 17301  001DD8  D133               	goto	i2u898_40
 17302                           
 17303                           ;LoRaWanCore.c: 352: {
 17304                           ;LoRaWanCore.c: 353: frameData[tamFrame]=0x00;
 17305  001DDA  505A               	movf	_tamFrame,w,c	;volatile
 17306  001DDC  0D01               	mullw	1
 17307  001DDE  0E40               	movlw	low recebeByteLoRaWan@frameData
 17308  001DE0  24F3               	addwf	prodl,w,c
 17309  001DE2  6ED9               	movwf	fsr2l,c
 17310  001DE4  0E04               	movlw	high recebeByteLoRaWan@frameData
 17311  001DE6  20F4               	addwfc	prodh,w,c
 17312  001DE8  6EDA               	movwf	fsr2h,c
 17313  001DEA  0E00               	movlw	0
 17314  001DEC  6EDF               	movwf	indf2,c
 17315                           
 17316                           ;LoRaWanCore.c: 354: strcpy(frameBuffer,frameData);
 17317  001DEE  0E00               	movlw	low _frameBuffer
 17318  001DF0  6E01               	movwf	strcpy@to,c
 17319  001DF2  0E07               	movlw	high _frameBuffer
 17320  001DF4  6E02               	movwf	strcpy@to+1,c
 17321  001DF6  0E40               	movlw	low recebeByteLoRaWan@frameData
 17322  001DF8  6E03               	movwf	strcpy@from,c
 17323  001DFA  0E04               	movlw	high recebeByteLoRaWan@frameData
 17324  001DFC  6E04               	movwf	strcpy@from+1,c
 17325  001DFE  ECD1  F02A         	call	_strcpy	;wreg free
 17326                           
 17327                           ;LoRaWanCore.c: 356: frameData[tamFrame-2]=0x00;
 17328  001E02  0EFE               	movlw	254
 17329  001E04  6E0A               	movwf	??_recebeByteLoRaWan& (0+255),c
 17330  001E06  0EFF               	movlw	255
 17331  001E08  6E0B               	movwf	(??_recebeByteLoRaWan+1)& (0+255),c
 17332  001E0A  505A               	movf	_tamFrame,w,c	;volatile
 17333  001E0C  6E0C               	movwf	(??_recebeByteLoRaWan+2)& (0+255),c
 17334  001E0E  6A0D               	clrf	(??_recebeByteLoRaWan+3)& (0+255),c
 17335  001E10  500A               	movf	??_recebeByteLoRaWan,w,c
 17336  001E12  260C               	addwf	??_recebeByteLoRaWan+2,f,c
 17337  001E14  500B               	movf	??_recebeByteLoRaWan+1,w,c
 17338  001E16  220D               	addwfc	??_recebeByteLoRaWan+3,f,c
 17339  001E18  0E40               	movlw	low recebeByteLoRaWan@frameData
 17340  001E1A  240C               	addwf	??_recebeByteLoRaWan+2,w,c
 17341  001E1C  6ED9               	movwf	fsr2l,c
 17342  001E1E  0E04               	movlw	high recebeByteLoRaWan@frameData
 17343  001E20  200D               	addwfc	??_recebeByteLoRaWan+3,w,c
 17344  001E22  6EDA               	movwf	fsr2h,c
 17345  001E24  0E00               	movlw	0
 17346  001E26  6EDF               	movwf	indf2,c
 17347                           
 17348                           ;LoRaWanCore.c: 357: tamFrame=0;
 17349  001E28  0E00               	movlw	0
 17350  001E2A  6E5A               	movwf	_tamFrame,c	;volatile
 17351                           
 17352                           ;LoRaWanCore.c: 358: uint8_t len = (sizeof(MSG_LORAWAN) / sizeof((MSG_LORAWAN)[0]));
 17353  001E2C  0E0F               	movlw	15
 17354  001E2E  6E0E               	movwf	recebeByteLoRaWan@len,c
 17355                           
 17356                           ;LoRaWanCore.c: 359: responseLoRaWan=0xFF;
 17357  001E30  0101               	movlb	1	; () banked
 17358  001E32  69FE               	setf	_responseLoRaWan& (0+255),b	;volatile
 17359                           
 17360                           ; BSR set to: 1
 17361                           ;LoRaWanCore.c: 360: for (uint8_t i=0;i<len;i++)
 17362  001E34  0E00               	movlw	0
 17363  001E36  6E12               	movwf	recebeByteLoRaWan@i,c
 17364  001E38  D01E               	goto	i2l2289
 17365  001E3A                     
 17366                           ;LoRaWanCore.c: 361: {
 17367                           ;LoRaWanCore.c: 362: if (strcmp(frameData,MSG_LORAWAN[i])==0)
 17368                           
 17369                           ; BSR set to: 1
 17370  001E3A  0E40               	movlw	low recebeByteLoRaWan@frameData
 17371  001E3C  6E01               	movwf	strcmp@s1,c
 17372  001E3E  0E04               	movlw	high recebeByteLoRaWan@frameData
 17373  001E40  6E02               	movwf	strcmp@s1+1,c
 17374  001E42  5012               	movf	recebeByteLoRaWan@i,w,c
 17375  001E44  0D02               	mullw	2
 17376  001E46  0EC3               	movlw	low _MSG_LORAWAN
 17377  001E48  24F3               	addwf	prodl,w,c
 17378  001E4A  6ED9               	movwf	fsr2l,c
 17379  001E4C  0E03               	movlw	high _MSG_LORAWAN
 17380  001E4E  20F4               	addwfc	prodh,w,c
 17381  001E50  6EDA               	movwf	fsr2h,c
 17382  001E52  CFDE F003          	movff	postinc2,strcmp@s2
 17383  001E56  CFDD F004          	movff	postdec2,strcmp@s2+1
 17384  001E5A  EC90  F028         	call	_strcmp	;wreg free
 17385  001E5E  5001               	movf	?_strcmp,w,c
 17386  001E60  1002               	iorwf	?_strcmp+1,w,c
 17387  001E62  A4D8               	btfss	status,2,c
 17388  001E64  D007               	goto	i2l2291
 17389                           
 17390                           ;LoRaWanCore.c: 363: {
 17391                           ;LoRaWanCore.c: 364: responseLoRaWan=i;
 17392  001E66  C012  F1FE         	movff	recebeByteLoRaWan@i,_responseLoRaWan	;volatile
 17393                           
 17394                           ;LoRaWanCore.c: 365: teste0=i;
 17395  001E6A  C012  F2EE         	movff	recebeByteLoRaWan@i,_teste0
 17396                           
 17397                           ;LoRaWanCore.c: 366: novaMsgLoRaWan=1;
 17398  001E6E  0E01               	movlw	1
 17399  001E70  6E59               	movwf	_novaMsgLoRaWan,c	;volatile
 17400                           
 17401                           ;LoRaWanCore.c: 367: return;
 17402  001E72  0012               	return	
 17403  001E74                     i2l2291:
 17404  001E74  2A12               	incf	recebeByteLoRaWan@i,f,c
 17405  001E76                     i2l2289:
 17406  001E76  500E               	movf	recebeByteLoRaWan@len,w,c
 17407  001E78  5C12               	subwf	recebeByteLoRaWan@i,w,c
 17408  001E7A  A0D8               	btfss	status,0,c
 17409  001E7C  D7DE               	goto	i2l2290
 17410                           
 17411                           ;LoRaWanCore.c: 368: }
 17412                           ;LoRaWanCore.c: 369: }
 17413                           ;LoRaWanCore.c: 370: uint8_t tamMsgRx=strlen(MSG_LORAWAN[15]);
 17414  001E7E  C3E1  F001         	movff	_MSG_LORAWAN+30,i2strlen@s
 17415  001E82  C3E2  F002         	movff	_MSG_LORAWAN+31,i2strlen@s+1
 17416  001E86  EC3F  F028         	call	i2_strlen	;wreg free
 17417  001E8A  5001               	movf	?i2_strlen,w,c
 17418  001E8C  6E11               	movwf	recebeByteLoRaWan@tamMsgRx,c
 17419                           
 17420                           ;LoRaWanCore.c: 371: if (strncmp(frameData,MSG_LORAWAN[15],tamMsgRx)==0)
 17421  001E8E  0E40               	movlw	low recebeByteLoRaWan@frameData
 17422  001E90  6E01               	movwf	strncmp@s1,c
 17423  001E92  0E04               	movlw	high recebeByteLoRaWan@frameData
 17424  001E94  6E02               	movwf	strncmp@s1+1,c
 17425  001E96  C3E1  F003         	movff	_MSG_LORAWAN+30,strncmp@s2
 17426  001E9A  C3E2  F004         	movff	_MSG_LORAWAN+31,strncmp@s2+1
 17427  001E9E  C011  F005         	movff	recebeByteLoRaWan@tamMsgRx,strncmp@len
 17428  001EA2  6A06               	clrf	strncmp@len+1,c
 17429  001EA4  EC93  F025         	call	_strncmp	;wreg free
 17430  001EA8  5001               	movf	?_strncmp,w,c
 17431  001EAA  1002               	iorwf	?_strncmp+1,w,c
 17432  001EAC  A4D8               	btfss	status,2,c
 17433  001EAE  D009               	goto	i2l2294
 17434                           
 17435                           ;LoRaWanCore.c: 372: {
 17436                           ;LoRaWanCore.c: 373: responseLoRaWan=15;
 17437  001EB0  0E0F               	movlw	15
 17438  001EB2  0101               	movlb	1	; () banked
 17439  001EB4  6FFE               	movwf	_responseLoRaWan& (0+255),b	;volatile
 17440                           
 17441                           ;LoRaWanCore.c: 374: teste1=15;
 17442  001EB6  0E0F               	movlw	15
 17443  001EB8  0102               	movlb	2	; () banked
 17444  001EBA  6FED               	movwf	_teste1& (0+255),b
 17445                           
 17446                           ;LoRaWanCore.c: 375: novaMsgLoRaWan=1;
 17447  001EBC  0E01               	movlw	1
 17448  001EBE  6E59               	movwf	_novaMsgLoRaWan,c	;volatile
 17449                           
 17450                           ; BSR set to: 2
 17451                           ;LoRaWanCore.c: 376: return;
 17452  001EC0  0012               	return	
 17453  001EC2                     i2l2294:
 17454                           
 17455                           ;LoRaWanCore.c: 377: }
 17456                           ;LoRaWanCore.c: 380: tamMsgRx=strlen(MSG_LORAWAN[10]);
 17457                           
 17458                           ; BSR set to: 2
 17459  001EC2  C3D7  F001         	movff	_MSG_LORAWAN+20,i2strlen@s
 17460  001EC6  C3D8  F002         	movff	_MSG_LORAWAN+21,i2strlen@s+1
 17461  001ECA  EC3F  F028         	call	i2_strlen	;wreg free
 17462  001ECE  5001               	movf	?i2_strlen,w,c
 17463  001ED0  6E11               	movwf	recebeByteLoRaWan@tamMsgRx,c
 17464                           
 17465                           ;LoRaWanCore.c: 381: if (strncmp(frameData,MSG_LORAWAN[10],tamMsgRx)==0)
 17466  001ED2  0E40               	movlw	low recebeByteLoRaWan@frameData
 17467  001ED4  6E01               	movwf	strncmp@s1,c
 17468  001ED6  0E04               	movlw	high recebeByteLoRaWan@frameData
 17469  001ED8  6E02               	movwf	strncmp@s1+1,c
 17470  001EDA  C3D7  F003         	movff	_MSG_LORAWAN+20,strncmp@s2
 17471  001EDE  C3D8  F004         	movff	_MSG_LORAWAN+21,strncmp@s2+1
 17472  001EE2  C011  F005         	movff	recebeByteLoRaWan@tamMsgRx,strncmp@len
 17473  001EE6  6A06               	clrf	strncmp@len+1,c
 17474  001EE8  EC93  F025         	call	_strncmp	;wreg free
 17475  001EEC  5001               	movf	?_strncmp,w,c
 17476  001EEE  1002               	iorwf	?_strncmp+1,w,c
 17477  001EF0  A4D8               	btfss	status,2,c
 17478  001EF2  D0A6               	goto	i2u898_40
 17479                           
 17480                           ;LoRaWanCore.c: 382: {
 17481                           ;LoRaWanCore.c: 385: uint8_t i=tamMsgRx;
 17482  001EF4  C011  F013         	movff	recebeByteLoRaWan@tamMsgRx,recebeByteLoRaWan@i_4802
 17483                           
 17484                           ;LoRaWanCore.c: 386: uint8_t port=0;
 17485  001EF8  0E00               	movlw	0
 17486  001EFA  6E0F               	movwf	recebeByteLoRaWan@port,c
 17487                           
 17488                           ;LoRaWanCore.c: 388: for (;i<strlen(frameData);i++)
 17489  001EFC  D027               	goto	i2l2296
 17490  001EFE                     
 17491                           ;LoRaWanCore.c: 389: {
 17492                           ;LoRaWanCore.c: 390: if ((frameData[i]<'0') || (frameData[i]>'9'))
 17493  001EFE  5013               	movf	recebeByteLoRaWan@i_4802,w,c
 17494  001F00  0D01               	mullw	1
 17495  001F02  0E40               	movlw	low recebeByteLoRaWan@frameData
 17496  001F04  24F3               	addwf	prodl,w,c
 17497  001F06  6ED9               	movwf	fsr2l,c
 17498  001F08  0E04               	movlw	high recebeByteLoRaWan@frameData
 17499  001F0A  20F4               	addwfc	prodh,w,c
 17500  001F0C  6EDA               	movwf	fsr2h,c
 17501  001F0E  0E2F               	movlw	47
 17502  001F10  64DF               	cpfsgt	indf2,c
 17503  001F12  D02B               	goto	i2u894_40
 17504  001F14  5013               	movf	recebeByteLoRaWan@i_4802,w,c
 17505  001F16  0D01               	mullw	1
 17506  001F18  0E40               	movlw	low recebeByteLoRaWan@frameData
 17507  001F1A  24F3               	addwf	prodl,w,c
 17508  001F1C  6ED9               	movwf	fsr2l,c
 17509  001F1E  0E04               	movlw	high recebeByteLoRaWan@frameData
 17510  001F20  20F4               	addwfc	prodh,w,c
 17511  001F22  6EDA               	movwf	fsr2h,c
 17512  001F24  0E39               	movlw	57
 17513  001F26  64DF               	cpfsgt	indf2,c
 17514  001F28  D001               	goto	i2l2298
 17515  001F2A  D01F               	goto	i2u894_40
 17516  001F2C                     i2l2298:
 17517                           
 17518                           ;LoRaWanCore.c: 393: port*=10;
 17519  001F2C  0E0A               	movlw	10
 17520  001F2E  020F               	mulwf	recebeByteLoRaWan@port,c
 17521  001F30  50F3               	movf	prodl,w,c
 17522  001F32  6E0F               	movwf	recebeByteLoRaWan@port,c
 17523                           
 17524                           ;LoRaWanCore.c: 394: port+=frameData[i]-'0';
 17525  001F34  5013               	movf	recebeByteLoRaWan@i_4802,w,c
 17526  001F36  0D01               	mullw	1
 17527  001F38  0E40               	movlw	low recebeByteLoRaWan@frameData
 17528  001F3A  24F3               	addwf	prodl,w,c
 17529  001F3C  6ED9               	movwf	fsr2l,c
 17530  001F3E  0E04               	movlw	high recebeByteLoRaWan@frameData
 17531  001F40  20F4               	addwfc	prodh,w,c
 17532  001F42  6EDA               	movwf	fsr2h,c
 17533  001F44  50DF               	movf	indf2,w,c
 17534  001F46  0FD0               	addlw	208
 17535  001F48  260F               	addwf	recebeByteLoRaWan@port,f,c
 17536  001F4A  2A13               	incf	recebeByteLoRaWan@i_4802,f,c
 17537  001F4C                     i2l2296:
 17538  001F4C  0E40               	movlw	low recebeByteLoRaWan@frameData
 17539  001F4E  6E01               	movwf	i2strlen@s,c
 17540  001F50  0E04               	movlw	high recebeByteLoRaWan@frameData
 17541  001F52  6E02               	movwf	i2strlen@s+1,c
 17542  001F54  EC3F  F028         	call	i2_strlen	;wreg free
 17543  001F58  5013               	movf	recebeByteLoRaWan@i_4802,w,c
 17544  001F5A  6E0A               	movwf	??_recebeByteLoRaWan& (0+255),c
 17545  001F5C  6A0B               	clrf	(??_recebeByteLoRaWan+1)& (0+255),c
 17546  001F5E  5001               	movf	?i2_strlen,w,c
 17547  001F60  5C0A               	subwf	??_recebeByteLoRaWan,w,c
 17548  001F62  5002               	movf	?i2_strlen+1,w,c
 17549  001F64  580B               	subwfb	??_recebeByteLoRaWan+1,w,c
 17550  001F66  A0D8               	btfss	status,0,c
 17551  001F68  D7CA               	goto	i2l2297
 17552  001F6A                     i2u894_40:
 17553                           
 17554                           ;LoRaWanCore.c: 395: }
 17555                           ;LoRaWanCore.c: 396: i++;
 17556  001F6A  2A13               	incf	recebeByteLoRaWan@i_4802,f,c
 17557                           
 17558                           ;LoRaWanCore.c: 398: for (;i<strlen(frameData);i+=2)
 17559  001F6C  D038               	goto	i2l2302
 17560  001F6E                     
 17561                           ;LoRaWanCore.c: 399: {
 17562                           ;LoRaWanCore.c: 400: dadosRecebidos[tamDadosRecebidos].port=port;
 17563  001F6E  505B               	movf	_tamDadosRecebidos,w,c	;volatile
 17564  001F70  0D02               	mullw	2
 17565  001F72  0E00               	movlw	low _dadosRecebidos
 17566  001F74  24F3               	addwf	prodl,w,c
 17567  001F76  6ED9               	movwf	fsr2l,c
 17568  001F78  0E03               	movlw	high _dadosRecebidos
 17569  001F7A  20F4               	addwfc	prodh,w,c
 17570  001F7C  6EDA               	movwf	fsr2h,c
 17571  001F7E  C00F  FFDF         	movff	recebeByteLoRaWan@port,indf2
 17572                           
 17573                           ;LoRaWanCore.c: 401: dadosRecebidos[tamDadosRecebidos++].data=converter(frameData[i],fra
      +                          meData[i+1]);
 17574  001F82  505B               	movf	_tamDadosRecebidos,w,c	;volatile
 17575  001F84  0D02               	mullw	2
 17576  001F86  0E01               	movlw	1
 17577  001F88  26F3               	addwf	prodl,f,c
 17578  001F8A  0E00               	movlw	0
 17579  001F8C  22F4               	addwfc	prodh,f,c
 17580  001F8E  0E00               	movlw	low _dadosRecebidos
 17581  001F90  24F3               	addwf	prodl,w,c
 17582  001F92  6ED9               	movwf	fsr2l,c
 17583  001F94  0E03               	movlw	high _dadosRecebidos
 17584  001F96  20F4               	addwfc	prodh,w,c
 17585  001F98  6EDA               	movwf	fsr2h,c
 17586  001F9A  5013               	movf	recebeByteLoRaWan@i_4802,w,c
 17587  001F9C  6E0A               	movwf	??_recebeByteLoRaWan& (0+255),c
 17588  001F9E  6A0B               	clrf	(??_recebeByteLoRaWan+1)& (0+255),c
 17589  001FA0  0E01               	movlw	1
 17590  001FA2  260A               	addwf	??_recebeByteLoRaWan,f,c
 17591  001FA4  0E00               	movlw	0
 17592  001FA6  220B               	addwfc	??_recebeByteLoRaWan+1,f,c
 17593  001FA8  0E40               	movlw	low recebeByteLoRaWan@frameData
 17594  001FAA  240A               	addwf	??_recebeByteLoRaWan,w,c
 17595  001FAC  6EE1               	movwf	fsr1l,c
 17596  001FAE  0E04               	movlw	high recebeByteLoRaWan@frameData
 17597  001FB0  200B               	addwfc	??_recebeByteLoRaWan+1,w,c
 17598  001FB2  6EE2               	movwf	fsr1h,c
 17599  001FB4  50E7               	movf	indf1,w,c
 17600  001FB6  6E02               	movwf	converter@conv2,c
 17601  001FB8  5013               	movf	recebeByteLoRaWan@i_4802,w,c
 17602  001FBA  0D01               	mullw	1
 17603  001FBC  0E40               	movlw	low recebeByteLoRaWan@frameData
 17604  001FBE  24F3               	addwf	prodl,w,c
 17605  001FC0  6EE1               	movwf	fsr1l,c
 17606  001FC2  0E04               	movlw	high recebeByteLoRaWan@frameData
 17607  001FC4  20F4               	addwfc	prodh,w,c
 17608  001FC6  6EE2               	movwf	fsr1h,c
 17609  001FC8  50E7               	movf	indf1,w,c
 17610  001FCA  EC0E  F025         	call	_converter
 17611  001FCE  6EDF               	movwf	indf2,c
 17612  001FD0  2A5B               	incf	_tamDadosRecebidos,f,c	;volatile
 17613                           
 17614                           ;LoRaWanCore.c: 402: if (tamDadosRecebidos>=10)
 17615  001FD2  0E09               	movlw	9
 17616  001FD4  645B               	cpfsgt	_tamDadosRecebidos,c	;volatile
 17617  001FD6  D001               	goto	i2l2304
 17618  001FD8  0012               	return	
 17619  001FDA                     i2l2304:
 17620  001FDA  0E02               	movlw	2
 17621  001FDC  2613               	addwf	recebeByteLoRaWan@i_4802,f,c
 17622  001FDE                     i2l2302:
 17623  001FDE  0E40               	movlw	low recebeByteLoRaWan@frameData
 17624  001FE0  6E01               	movwf	i2strlen@s,c
 17625  001FE2  0E04               	movlw	high recebeByteLoRaWan@frameData
 17626  001FE4  6E02               	movwf	i2strlen@s+1,c
 17627  001FE6  EC3F  F028         	call	i2_strlen	;wreg free
 17628  001FEA  5013               	movf	recebeByteLoRaWan@i_4802,w,c
 17629  001FEC  6E0A               	movwf	??_recebeByteLoRaWan& (0+255),c
 17630  001FEE  6A0B               	clrf	(??_recebeByteLoRaWan+1)& (0+255),c
 17631  001FF0  5001               	movf	?i2_strlen,w,c
 17632  001FF2  5C0A               	subwf	??_recebeByteLoRaWan,w,c
 17633  001FF4  5002               	movf	?i2_strlen+1,w,c
 17634  001FF6  580B               	subwfb	??_recebeByteLoRaWan+1,w,c
 17635  001FF8  A0D8               	btfss	status,0,c
 17636  001FFA  D7B9               	goto	i2l2303
 17637                           
 17638                           ;LoRaWanCore.c: 404: }
 17639                           ;LoRaWanCore.c: 406: if (i>=strlen(frameData)){
 17640  001FFC  0E40               	movlw	low recebeByteLoRaWan@frameData
 17641  001FFE  6E01               	movwf	i2strlen@s,c
 17642  002000  0E04               	movlw	high recebeByteLoRaWan@frameData
 17643  002002  6E02               	movwf	i2strlen@s+1,c
 17644  002004  EC3F  F028         	call	i2_strlen	;wreg free
 17645  002008  5013               	movf	recebeByteLoRaWan@i_4802,w,c
 17646  00200A  6E0A               	movwf	??_recebeByteLoRaWan& (0+255),c
 17647  00200C  6A0B               	clrf	(??_recebeByteLoRaWan+1)& (0+255),c
 17648  00200E  5001               	movf	?i2_strlen,w,c
 17649  002010  5C0A               	subwf	??_recebeByteLoRaWan,w,c
 17650  002012  5002               	movf	?i2_strlen+1,w,c
 17651  002014  580B               	subwfb	??_recebeByteLoRaWan+1,w,c
 17652  002016  B0D8               	btfsc	status,0,c
 17653  002018  D010               	goto	i2l2307
 17654  00201A  D012               	goto	i2u898_40
 17655  00201C                     
 17656                           ;LoRaWanCore.c: 408: dadosRecebidos[tamDadosRecebidos].data = 0;
 17657  00201C  505B               	movf	_tamDadosRecebidos,w,c	;volatile
 17658  00201E  0D02               	mullw	2
 17659  002020  0E01               	movlw	1
 17660  002022  26F3               	addwf	prodl,f,c
 17661  002024  0E00               	movlw	0
 17662  002026  22F4               	addwfc	prodh,f,c
 17663  002028  0E00               	movlw	low _dadosRecebidos
 17664  00202A  24F3               	addwf	prodl,w,c
 17665  00202C  6ED9               	movwf	fsr2l,c
 17666  00202E  0E03               	movlw	high _dadosRecebidos
 17667  002030  20F4               	addwfc	prodh,w,c
 17668  002032  6EDA               	movwf	fsr2h,c
 17669  002034  0E00               	movlw	0
 17670  002036  6EDF               	movwf	indf2,c
 17671  002038  2A5B               	incf	_tamDadosRecebidos,f,c	;volatile
 17672  00203A                     i2l2307:
 17673  00203A  0E0A               	movlw	10
 17674  00203C  645B               	cpfsgt	_tamDadosRecebidos,c	;volatile
 17675  00203E  D7EE               	goto	i2l2308
 17676  002040                     i2u898_40:
 17677                           
 17678                           ;LoRaWanCore.c: 409: }
 17679                           ;LoRaWanCore.c: 410: }
 17680                           ;LoRaWanCore.c: 412: }
 17681                           ;LoRaWanCore.c: 413: }
 17682                           ;LoRaWanCore.c: 414: if ((tamFrame>=100) || (b==0x0A))
 17683  002040  0E64               	movlw	100
 17684  002042  605A               	cpfslt	_tamFrame,c	;volatile
 17685  002044  D004               	goto	i2u900_40
 17686  002046  0E0A               	movlw	10
 17687  002048  1810               	xorwf	recebeByteLoRaWan@b,w,c
 17688  00204A  A4D8               	btfss	status,2,c
 17689  00204C  0012               	return	
 17690  00204E                     i2u900_40:
 17691                           
 17692                           ;LoRaWanCore.c: 415: {
 17693                           ;LoRaWanCore.c: 416: tamFrame=0;
 17694  00204E  0E00               	movlw	0
 17695  002050  6E5A               	movwf	_tamFrame,c	;volatile
 17696  002052  0012               	return	
 17697  002054                     __end_of_recebeByteLoRaWan:
 17698                           	opt stack 0
 17699                           pclatu	equ	0xFFB
 17700                           pclath	equ	0xFFA
 17701                           tblptru	equ	0xFF8
 17702                           tblptrh	equ	0xFF7
 17703                           tblptrl	equ	0xFF6
 17704                           tablat	equ	0xFF5
 17705                           prodh	equ	0xFF4
 17706                           prodl	equ	0xFF3
 17707                           intcon	equ	0xFF2
 17708                           indf0	equ	0xFEF
 17709                           postinc0	equ	0xFEE
 17710                           fsr0h	equ	0xFEA
 17711                           fsr0l	equ	0xFE9
 17712                           wreg	equ	0xFE8
 17713                           indf1	equ	0xFE7
 17714                           postdec1	equ	0xFE5
 17715                           fsr1h	equ	0xFE2
 17716                           fsr1l	equ	0xFE1
 17717                           indf2	equ	0xFDF
 17718                           postinc2	equ	0xFDE
 17719                           postdec2	equ	0xFDD
 17720                           plusw2	equ	0xFDB
 17721                           fsr2h	equ	0xFDA
 17722                           fsr2l	equ	0xFD9
 17723                           status	equ	0xFD8
 17724                           
 17725 ;; *************** function i2_strlen *****************
 17726 ;; Defined at:
 17727 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strlen.c"
 17728 ;; Parameters:    Size  Location     Type
 17729 ;;  s               2    0[COMRAM] PTR const unsigned char 
 17730 ;;		 -> recebeByteLoRaWan@frameData(100), SYS(5), MAC(5), TxLoRaWan@comando(200), 
 17731 ;;		 -> DataRate@comando(200), SetBandWidth@comando(200), SetSpreadingFactor@comando(200), MacSave@comando(200), 
 17732 ;;		 -> GetAdr@comando(200), SetAdr@comando(200), SetChannelLoRaWan@comando(200), MAC_JOIN_OTAA(10), 
 17733 ;;		 -> SYS_RESET(6), SetAppKey@comando(200), SetAppEUI@comando(200), SetDevEUI@comando(200), 
 17734 ;;		 -> GetDnctr@comando(200), STR_20(16), STR_19(7), STR_18(14), 
 17735 ;;		 -> STR_17(8), STR_16(8), STR_15(10), STR_14(17), 
 17736 ;;		 -> STR_13(11), STR_12(5), STR_11(32), STR_10(7), 
 17737 ;;		 -> STR_9(11), STR_8(11), STR_7(14), STR_6(3), 
 17738 ;; Auto vars:     Size  Location     Type
 17739 ;;  strlen          2    4[COMRAM] PTR const unsigned char 
 17740 ;;		 -> recebeByteLoRaWan@frameData(100), SYS(5), MAC(5), TxLoRaWan@comando(200), 
 17741 ;;		 -> DataRate@comando(200), SetBandWidth@comando(200), SetSpreadingFactor@comando(200), MacSave@comando(200), 
 17742 ;;		 -> GetAdr@comando(200), SetAdr@comando(200), SetChannelLoRaWan@comando(200), MAC_JOIN_OTAA(10), 
 17743 ;;		 -> SYS_RESET(6), SetAppKey@comando(200), SetAppEUI@comando(200), SetDevEUI@comando(200), 
 17744 ;;		 -> GetDnctr@comando(200), STR_20(16), STR_19(7), STR_18(14), 
 17745 ;;		 -> STR_17(8), STR_16(8), STR_15(10), STR_14(17), 
 17746 ;;		 -> STR_13(11), STR_12(5), STR_11(32), STR_10(7), 
 17747 ;;		 -> STR_9(11), STR_8(11), STR_7(14), STR_6(3), 
 17748 ;; Return value:  Size  Location     Type
 17749 ;;                  2    0[COMRAM] unsigned int 
 17750 ;; Registers used:
 17751 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 17752 ;; Tracked objects:
 17753 ;;		On entry : 0/0
 17754 ;;		On exit  : 0/0
 17755 ;;		Unchanged: 0/0
 17756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17757 ;;      Params:         2       0       0       0       0       0       0       0       0
 17758 ;;      Locals:         2       0       0       0       0       0       0       0       0
 17759 ;;      Temps:          2       0       0       0       0       0       0       0       0
 17760 ;;      Totals:         6       0       0       0       0       0       0       0       0
 17761 ;;Total ram usage:        6 bytes
 17762 ;; Hardware stack levels used:    1
 17763 ;; This function calls:
 17764 ;;		Nothing
 17765 ;; This function is called by:
 17766 ;;		_recebeByteLoRaWan
 17767 ;; This function uses a non-reentrant model
 17768 ;;
 17769                           
 17770                           	psect	text60
 17771  00507E                     __ptext60:
 17772                           	opt stack 0
 17773  00507E                     i2_strlen:
 17774                           	opt stack 23
 17775                           
 17776                           ;incstack = 0
 17777  00507E  C001  F005         	movff	i2strlen@s,i2strlen@cp
 17778  005082  C002  F006         	movff	i2strlen@s+1,i2strlen@cp+1
 17779  005086  D002               	goto	i2l3222
 17780  005088  4A05               	infsnz	i2strlen@cp,f,c
 17781  00508A  2A06               	incf	i2strlen@cp+1,f,c
 17782  00508C                     i2l3222:
 17783  00508C  C005  FFF6         	movff	i2strlen@cp,tblptrl
 17784  005090  C006  FFF7         	movff	i2strlen@cp+1,tblptrh
 17785  005094  6AF8               	clrf	tblptru,c
 17786  005096  0E07               	movlw	(high __ramtop+-1)
 17787  005098  64F7               	cpfsgt	tblptrh,c
 17788  00509A  D003               	bra	i2u882_47
 17789  00509C  0008               	tblrd		*
 17790  00509E  50F5               	movf	tablat,w,c
 17791  0050A0  D005               	bra	i2u882_40
 17792  0050A2                     i2u882_47:
 17793  0050A2  CFF6 FFE9          	movff	tblptrl,fsr0l
 17794  0050A6  CFF7 FFEA          	movff	tblptrh,fsr0h
 17795  0050AA  50EF               	movf	indf0,w,c
 17796  0050AC                     i2u882_40:
 17797  0050AC  0900               	iorlw	0
 17798  0050AE  A4D8               	btfss	status,2,c
 17799  0050B0  D7EB               	goto	i2l3223
 17800  0050B2  C001  F003         	movff	i2strlen@s,??i2_strlen
 17801  0050B6  C002  F004         	movff	i2strlen@s+1,??i2_strlen+1
 17802  0050BA  1E03               	comf	??i2_strlen,f,c
 17803  0050BC  1E04               	comf	??i2_strlen+1,f,c
 17804  0050BE  4A03               	infsnz	??i2_strlen,f,c
 17805  0050C0  2A04               	incf	??i2_strlen+1,f,c
 17806  0050C2  5005               	movf	i2strlen@cp,w,c
 17807  0050C4  2403               	addwf	??i2_strlen,w,c
 17808  0050C6  6E01               	movwf	?i2_strlen,c
 17809  0050C8  5006               	movf	i2strlen@cp+1,w,c
 17810  0050CA  2004               	addwfc	??i2_strlen+1,w,c
 17811  0050CC  6E02               	movwf	?i2_strlen+1,c
 17812  0050CE  0012               	return	
 17813  0050D0                     __end_ofi2_strlen:
 17814                           	opt stack 0
 17815                           pclatu	equ	0xFFB
 17816                           pclath	equ	0xFFA
 17817                           tblptru	equ	0xFF8
 17818                           tblptrh	equ	0xFF7
 17819                           tblptrl	equ	0xFF6
 17820                           tablat	equ	0xFF5
 17821                           prodh	equ	0xFF4
 17822                           prodl	equ	0xFF3
 17823                           intcon	equ	0xFF2
 17824                           indf0	equ	0xFEF
 17825                           postinc0	equ	0xFEE
 17826                           fsr0h	equ	0xFEA
 17827                           fsr0l	equ	0xFE9
 17828                           wreg	equ	0xFE8
 17829                           indf1	equ	0xFE7
 17830                           postdec1	equ	0xFE5
 17831                           fsr1h	equ	0xFE2
 17832                           fsr1l	equ	0xFE1
 17833                           indf2	equ	0xFDF
 17834                           postinc2	equ	0xFDE
 17835                           postdec2	equ	0xFDD
 17836                           plusw2	equ	0xFDB
 17837                           fsr2h	equ	0xFDA
 17838                           fsr2l	equ	0xFD9
 17839                           status	equ	0xFD8
 17840                           
 17841 ;; *************** function _strncmp *****************
 17842 ;; Defined at:
 17843 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strncmp.c"
 17844 ;; Parameters:    Size  Location     Type
 17845 ;;  s1              2    0[COMRAM] PTR const unsigned char 
 17846 ;;		 -> recebeByteLoRaWan@frameData(100), 
 17847 ;;  s2              2    2[COMRAM] PTR const unsigned char 
 17848 ;;		 -> STR_20(16), STR_19(7), STR_18(14), STR_17(8), 
 17849 ;;		 -> STR_16(8), STR_15(10), STR_14(17), STR_13(11), 
 17850 ;;		 -> STR_12(5), STR_11(32), STR_10(7), STR_9(11), 
 17851 ;;		 -> STR_8(11), STR_7(14), STR_6(3), 
 17852 ;;  len             2    4[COMRAM] unsigned int 
 17853 ;; Auto vars:     Size  Location     Type
 17854 ;;		None
 17855 ;; Return value:  Size  Location     Type
 17856 ;;                  2    0[COMRAM] int 
 17857 ;; Registers used:
 17858 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17859 ;; Tracked objects:
 17860 ;;		On entry : 0/0
 17861 ;;		On exit  : 0/0
 17862 ;;		Unchanged: 0/0
 17863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17864 ;;      Params:         6       0       0       0       0       0       0       0       0
 17865 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17866 ;;      Temps:          3       0       0       0       0       0       0       0       0
 17867 ;;      Totals:         9       0       0       0       0       0       0       0       0
 17868 ;;Total ram usage:        9 bytes
 17869 ;; Hardware stack levels used:    1
 17870 ;; This function calls:
 17871 ;;		Nothing
 17872 ;; This function is called by:
 17873 ;;		_recebeByteLoRaWan
 17874 ;; This function uses a non-reentrant model
 17875 ;;
 17876                           
 17877                           	psect	text61
 17878  004B26                     __ptext61:
 17879                           	opt stack 0
 17880  004B26                     _strncmp:
 17881                           	opt stack 23
 17882                           
 17883                           ;incstack = 0
 17884  004B26  D033               	goto	i2l3228
 17885  004B28                     i2l9237:
 17886  004B28  C001  FFD9         	movff	strncmp@s1,fsr2l
 17887  004B2C  C002  FFDA         	movff	strncmp@s1+1,fsr2h
 17888  004B30  50DF               	movf	indf2,w,c
 17889  004B32  B4D8               	btfsc	status,2,c
 17890  004B34  D00F               	goto	i2u869_40
 17891  004B36  C001  FFD9         	movff	strncmp@s1,fsr2l
 17892  004B3A  C002  FFDA         	movff	strncmp@s1+1,fsr2h
 17893  004B3E  50DF               	movf	indf2,w,c
 17894  004B40  6E07               	movwf	??_strncmp& (0+255),c
 17895  004B42  C003  FFF6         	movff	strncmp@s2,tblptrl
 17896  004B46  C004  FFF7         	movff	strncmp@s2+1,tblptrh
 17897  004B4A                     	if	0	;tblptru may be non-zero
 17898  004B4A                     	endif
 17899  004B4A                     	if	0	;tblptru may be non-zero
 17900  004B4A                     	endif
 17901  004B4A  0008               	tblrd		*
 17902  004B4C  50F5               	movf	tablat,w,c
 17903  004B4E  1807               	xorwf	??_strncmp,w,c
 17904  004B50  B4D8               	btfsc	status,2,c
 17905  004B52  D019               	goto	i2l3230
 17906  004B54                     i2u869_40:
 17907  004B54  C003  FFF6         	movff	strncmp@s2,tblptrl
 17908  004B58  C004  FFF7         	movff	strncmp@s2+1,tblptrh
 17909  004B5C                     	if	0	;tblptru may be non-zero
 17910  004B5C                     	endif
 17911  004B5C                     	if	0	;tblptru may be non-zero
 17912  004B5C                     	endif
 17913  004B5C  0008               	tblrd		*
 17914  004B5E  50F5               	movf	tablat,w,c
 17915  004B60  6E07               	movwf	??_strncmp& (0+255),c
 17916  004B62  6A08               	clrf	(??_strncmp+1)& (0+255),c
 17917  004B64  1E07               	comf	??_strncmp,f,c
 17918  004B66  1E08               	comf	??_strncmp+1,f,c
 17919  004B68  4A07               	infsnz	??_strncmp,f,c
 17920  004B6A  2A08               	incf	??_strncmp+1,f,c
 17921  004B6C  C001  FFD9         	movff	strncmp@s1,fsr2l
 17922  004B70  C002  FFDA         	movff	strncmp@s1+1,fsr2h
 17923  004B74  50DF               	movf	indf2,w,c
 17924  004B76  6E09               	movwf	(??_strncmp+2)& (0+255),c
 17925  004B78  5009               	movf	??_strncmp+2,w,c
 17926  004B7A  2407               	addwf	??_strncmp,w,c
 17927  004B7C  6E01               	movwf	?_strncmp,c
 17928  004B7E  0E00               	movlw	0
 17929  004B80  2008               	addwfc	??_strncmp+1,w,c
 17930  004B82  6E02               	movwf	?_strncmp+1,c
 17931  004B84  0012               	return	
 17932  004B86                     i2l3230:
 17933  004B86  4A01               	infsnz	strncmp@s1,f,c
 17934  004B88  2A02               	incf	strncmp@s1+1,f,c
 17935  004B8A  4A03               	infsnz	strncmp@s2,f,c
 17936  004B8C  2A04               	incf	strncmp@s2+1,f,c
 17937  004B8E                     i2l3228:
 17938  004B8E  0605               	decf	strncmp@len,f,c
 17939  004B90  A0D8               	btfss	status,0,c
 17940  004B92  0606               	decf	strncmp@len+1,f,c
 17941  004B94  2805               	incf	strncmp@len,w,c
 17942  004B96  E1C8               	bnz	i2l9237
 17943  004B98  2806               	incf	strncmp@len+1,w,c
 17944  004B9A  A4D8               	btfss	status,2,c
 17945  004B9C  D7C5               	goto	i2l3229
 17946  004B9E  0E00               	movlw	0
 17947  004BA0  6E02               	movwf	?_strncmp+1,c
 17948  004BA2  0E00               	movlw	0
 17949  004BA4  6E01               	movwf	?_strncmp,c
 17950  004BA6  0012               	return	
 17951  004BA8                     __end_of_strncmp:
 17952                           	opt stack 0
 17953                           pclatu	equ	0xFFB
 17954                           pclath	equ	0xFFA
 17955                           tblptru	equ	0xFF8
 17956                           tblptrh	equ	0xFF7
 17957                           tblptrl	equ	0xFF6
 17958                           tablat	equ	0xFF5
 17959                           prodh	equ	0xFF4
 17960                           prodl	equ	0xFF3
 17961                           intcon	equ	0xFF2
 17962                           indf0	equ	0xFEF
 17963                           postinc0	equ	0xFEE
 17964                           fsr0h	equ	0xFEA
 17965                           fsr0l	equ	0xFE9
 17966                           wreg	equ	0xFE8
 17967                           indf1	equ	0xFE7
 17968                           postdec1	equ	0xFE5
 17969                           fsr1h	equ	0xFE2
 17970                           fsr1l	equ	0xFE1
 17971                           indf2	equ	0xFDF
 17972                           postinc2	equ	0xFDE
 17973                           postdec2	equ	0xFDD
 17974                           plusw2	equ	0xFDB
 17975                           fsr2h	equ	0xFDA
 17976                           fsr2l	equ	0xFD9
 17977                           status	equ	0xFD8
 17978                           
 17979 ;; *************** function _strcpy *****************
 17980 ;; Defined at:
 17981 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strcpy.c"
 17982 ;; Parameters:    Size  Location     Type
 17983 ;;  to              2    0[COMRAM] PTR unsigned char 
 17984 ;;		 -> frameBuffer(200), 
 17985 ;;  from            2    2[COMRAM] PTR const unsigned char 
 17986 ;;		 -> recebeByteLoRaWan@frameData(100), 
 17987 ;; Auto vars:     Size  Location     Type
 17988 ;;  cp              2    4[COMRAM] PTR unsigned char 
 17989 ;;		 -> frameBuffer(200), 
 17990 ;; Return value:  Size  Location     Type
 17991 ;;                  2    0[COMRAM] PTR unsigned char 
 17992 ;; Registers used:
 17993 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 17994 ;; Tracked objects:
 17995 ;;		On entry : 0/0
 17996 ;;		On exit  : 0/0
 17997 ;;		Unchanged: 0/0
 17998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17999 ;;      Params:         4       0       0       0       0       0       0       0       0
 18000 ;;      Locals:         2       0       0       0       0       0       0       0       0
 18001 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18002 ;;      Totals:         6       0       0       0       0       0       0       0       0
 18003 ;;Total ram usage:        6 bytes
 18004 ;; Hardware stack levels used:    1
 18005 ;; This function calls:
 18006 ;;		Nothing
 18007 ;; This function is called by:
 18008 ;;		_recebeByteLoRaWan
 18009 ;; This function uses a non-reentrant model
 18010 ;;
 18011                           
 18012                           	psect	text62
 18013  0055A2                     __ptext62:
 18014                           	opt stack 0
 18015  0055A2                     _strcpy:
 18016                           	opt stack 23
 18017                           
 18018                           ;incstack = 0
 18019  0055A2  C001  F005         	movff	strcpy@to,strcpy@cp
 18020  0055A6  C002  F006         	movff	strcpy@to+1,strcpy@cp+1
 18021  0055AA  D004               	goto	i2l3216
 18022  0055AC  4A05               	infsnz	strcpy@cp,f,c
 18023  0055AE  2A06               	incf	strcpy@cp+1,f,c
 18024  0055B0  4A03               	infsnz	strcpy@from,f,c
 18025  0055B2  2A04               	incf	strcpy@from+1,f,c
 18026  0055B4                     i2l3216:
 18027  0055B4  C003  FFD9         	movff	strcpy@from,fsr2l
 18028  0055B8  C004  FFDA         	movff	strcpy@from+1,fsr2h
 18029  0055BC  C005  FFE1         	movff	strcpy@cp,fsr1l
 18030  0055C0  C006  FFE2         	movff	strcpy@cp+1,fsr1h
 18031  0055C4  CFDF FFE7          	movff	indf2,indf1
 18032  0055C8  50E7               	movf	indf1,w,c
 18033  0055CA  B4D8               	btfsc	status,2,c
 18034  0055CC  0012               	return	
 18035  0055CE  D7EE               	goto	i2l3217
 18036  0055D0                     __end_of_strcpy:
 18037                           	opt stack 0
 18038                           pclatu	equ	0xFFB
 18039                           pclath	equ	0xFFA
 18040                           tblptru	equ	0xFF8
 18041                           tblptrh	equ	0xFF7
 18042                           tblptrl	equ	0xFF6
 18043                           tablat	equ	0xFF5
 18044                           prodh	equ	0xFF4
 18045                           prodl	equ	0xFF3
 18046                           intcon	equ	0xFF2
 18047                           indf0	equ	0xFEF
 18048                           postinc0	equ	0xFEE
 18049                           fsr0h	equ	0xFEA
 18050                           fsr0l	equ	0xFE9
 18051                           wreg	equ	0xFE8
 18052                           indf1	equ	0xFE7
 18053                           postdec1	equ	0xFE5
 18054                           fsr1h	equ	0xFE2
 18055                           fsr1l	equ	0xFE1
 18056                           indf2	equ	0xFDF
 18057                           postinc2	equ	0xFDE
 18058                           postdec2	equ	0xFDD
 18059                           plusw2	equ	0xFDB
 18060                           fsr2h	equ	0xFDA
 18061                           fsr2l	equ	0xFD9
 18062                           status	equ	0xFD8
 18063                           
 18064 ;; *************** function _strcmp *****************
 18065 ;; Defined at:
 18066 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strcmp.c"
 18067 ;; Parameters:    Size  Location     Type
 18068 ;;  s1              2    0[COMRAM] PTR const unsigned char 
 18069 ;;		 -> recebeByteLoRaWan@frameData(100), 
 18070 ;;  s2              2    2[COMRAM] PTR const unsigned char 
 18071 ;;		 -> STR_20(16), STR_19(7), STR_18(14), STR_17(8), 
 18072 ;;		 -> STR_16(8), STR_15(10), STR_14(17), STR_13(11), 
 18073 ;;		 -> STR_12(5), STR_11(32), STR_10(7), STR_9(11), 
 18074 ;;		 -> STR_8(11), STR_7(14), STR_6(3), 
 18075 ;; Auto vars:     Size  Location     Type
 18076 ;;  r               1    5[COMRAM] char 
 18077 ;; Return value:  Size  Location     Type
 18078 ;;                  2    0[COMRAM] int 
 18079 ;; Registers used:
 18080 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 18081 ;; Tracked objects:
 18082 ;;		On entry : 0/0
 18083 ;;		On exit  : 0/0
 18084 ;;		Unchanged: 0/0
 18085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18086 ;;      Params:         4       0       0       0       0       0       0       0       0
 18087 ;;      Locals:         1       0       0       0       0       0       0       0       0
 18088 ;;      Temps:          1       0       0       0       0       0       0       0       0
 18089 ;;      Totals:         6       0       0       0       0       0       0       0       0
 18090 ;;Total ram usage:        6 bytes
 18091 ;; Hardware stack levels used:    1
 18092 ;; This function calls:
 18093 ;;		Nothing
 18094 ;; This function is called by:
 18095 ;;		_recebeByteLoRaWan
 18096 ;; This function uses a non-reentrant model
 18097 ;;
 18098                           
 18099                           	psect	text63
 18100  005120                     __ptext63:
 18101                           	opt stack 0
 18102  005120                     _strcmp:
 18103                           	opt stack 23
 18104                           
 18105                           ;incstack = 0
 18106  005120  D004               	goto	i2l3208
 18107  005122  4A01               	infsnz	strcmp@s1,f,c
 18108  005124  2A02               	incf	strcmp@s1+1,f,c
 18109  005126  4A03               	infsnz	strcmp@s2,f,c
 18110  005128  2A04               	incf	strcmp@s2+1,f,c
 18111  00512A                     i2l3208:
 18112  00512A  C001  FFD9         	movff	strcmp@s1,fsr2l
 18113  00512E  C002  FFDA         	movff	strcmp@s1+1,fsr2h
 18114  005132  50DF               	movf	indf2,w,c
 18115  005134  6E05               	movwf	??_strcmp& (0+255),c
 18116  005136  C003  FFF6         	movff	strcmp@s2,tblptrl
 18117  00513A  C004  FFF7         	movff	strcmp@s2+1,tblptrh
 18118  00513E                     	if	0	;tblptru may be non-zero
 18119  00513E                     	endif
 18120  00513E                     	if	0	;tblptru may be non-zero
 18121  00513E                     	endif
 18122  00513E  0008               	tblrd		*
 18123  005140  50F5               	movf	tablat,w,c
 18124  005142  0800               	sublw	0
 18125  005144  2405               	addwf	??_strcmp,w,c
 18126  005146  6E06               	movwf	strcmp@r,c
 18127  005148  5006               	movf	strcmp@r,w,c
 18128  00514A  A4D8               	btfss	status,2,c
 18129  00514C  D007               	goto	i2u867_40
 18130  00514E  C001  FFD9         	movff	strcmp@s1,fsr2l
 18131  005152  C002  FFDA         	movff	strcmp@s1+1,fsr2h
 18132  005156  50DF               	movf	indf2,w,c
 18133  005158  A4D8               	btfss	status,2,c
 18134  00515A  D7E3               	goto	i2l3209
 18135  00515C                     i2u867_40:
 18136  00515C  5006               	movf	strcmp@r,w,c
 18137  00515E  6E01               	movwf	?_strcmp,c
 18138  005160  6A02               	clrf	?_strcmp+1,c
 18139  005162  BE01               	btfsc	?_strcmp,7,c
 18140  005164  0602               	decf	?_strcmp+1,f,c
 18141  005166  0012               	return	
 18142  005168                     __end_of_strcmp:
 18143                           	opt stack 0
 18144                           pclatu	equ	0xFFB
 18145                           pclath	equ	0xFFA
 18146                           tblptru	equ	0xFF8
 18147                           tblptrh	equ	0xFF7
 18148                           tblptrl	equ	0xFF6
 18149                           tablat	equ	0xFF5
 18150                           prodh	equ	0xFF4
 18151                           prodl	equ	0xFF3
 18152                           intcon	equ	0xFF2
 18153                           indf0	equ	0xFEF
 18154                           postinc0	equ	0xFEE
 18155                           fsr0h	equ	0xFEA
 18156                           fsr0l	equ	0xFE9
 18157                           wreg	equ	0xFE8
 18158                           indf1	equ	0xFE7
 18159                           postdec1	equ	0xFE5
 18160                           fsr1h	equ	0xFE2
 18161                           fsr1l	equ	0xFE1
 18162                           indf2	equ	0xFDF
 18163                           postinc2	equ	0xFDE
 18164                           postdec2	equ	0xFDD
 18165                           plusw2	equ	0xFDB
 18166                           fsr2h	equ	0xFDA
 18167                           fsr2l	equ	0xFD9
 18168                           status	equ	0xFD8
 18169                           
 18170 ;; *************** function _converter *****************
 18171 ;; Defined at:
 18172 ;;		line 360 in file "XBeeCore.c"
 18173 ;; Parameters:    Size  Location     Type
 18174 ;;  conv1           1    wreg     unsigned char 
 18175 ;;  conv2           1    1[COMRAM] unsigned char 
 18176 ;; Auto vars:     Size  Location     Type
 18177 ;;  conv1           1    5[COMRAM] unsigned char 
 18178 ;;  aux2            1    4[COMRAM] unsigned char 
 18179 ;;  aux             1    3[COMRAM] unsigned char 
 18180 ;;  resul           1    2[COMRAM] unsigned char 
 18181 ;; Return value:  Size  Location     Type
 18182 ;;                  1    wreg      unsigned char 
 18183 ;; Registers used:
 18184 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 18185 ;; Tracked objects:
 18186 ;;		On entry : 0/0
 18187 ;;		On exit  : 0/0
 18188 ;;		Unchanged: 0/0
 18189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18190 ;;      Params:         1       0       0       0       0       0       0       0       0
 18191 ;;      Locals:         4       0       0       0       0       0       0       0       0
 18192 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18193 ;;      Totals:         5       0       0       0       0       0       0       0       0
 18194 ;;Total ram usage:        5 bytes
 18195 ;; Hardware stack levels used:    1
 18196 ;; Hardware stack levels required when called:    1
 18197 ;; This function calls:
 18198 ;;		_toupper
 18199 ;; This function is called by:
 18200 ;;		_recebeByteLoRaWan
 18201 ;;		_send
 18202 ;; This function uses a non-reentrant model
 18203 ;;
 18204                           
 18205                           	psect	text64
 18206  004A1C                     __ptext64:
 18207                           	opt stack 0
 18208  004A1C                     _converter:
 18209                           	opt stack 22
 18210                           
 18211                           ;incstack = 0
 18212                           ;converter@conv1 stored from wreg
 18213  004A1C  6E06               	movwf	converter@conv1,c
 18214                           
 18215                           ;XBeeCore.c: 362: uint8_t aux=0;
 18216  004A1E  0E00               	movlw	0
 18217  004A20  6E04               	movwf	converter@aux,c
 18218                           
 18219                           ;XBeeCore.c: 363: uint8_t aux2=0;
 18220  004A22  0E00               	movlw	0
 18221  004A24  6E05               	movwf	converter@aux2,c
 18222                           
 18223                           ;XBeeCore.c: 364: uint8_t resul=0;
 18224  004A26  0E00               	movlw	0
 18225  004A28  6E03               	movwf	converter@resul,c
 18226                           
 18227                           ;XBeeCore.c: 367: conv1=toupper(conv1);
 18228  004A2A  5006               	movf	converter@conv1,w,c
 18229  004A2C  EC9B  F02B         	call	_toupper
 18230  004A30  6E06               	movwf	converter@conv1,c
 18231                           
 18232                           ;XBeeCore.c: 368: conv2=toupper(conv2);
 18233  004A32  5002               	movf	converter@conv2,w,c
 18234  004A34  EC9B  F02B         	call	_toupper
 18235  004A38  6E02               	movwf	converter@conv2,c
 18236                           
 18237                           ;XBeeCore.c: 370: if ((conv1>='0') && (conv1<='9'))
 18238  004A3A  0E2F               	movlw	47
 18239  004A3C  6406               	cpfsgt	converter@conv1,c
 18240  004A3E  D006               	goto	i2l1399
 18241  004A40  0E3A               	movlw	58
 18242  004A42  6006               	cpfslt	converter@conv1,c
 18243  004A44  D003               	goto	i2l1399
 18244                           
 18245                           ;XBeeCore.c: 371: {
 18246                           ;XBeeCore.c: 372: aux=conv1-'0';
 18247  004A46  5006               	movf	converter@conv1,w,c
 18248  004A48  0FD0               	addlw	208
 18249  004A4A  D008               	goto	L13
 18250  004A4C                     i2l1399:
 18251                           
 18252                           ;XBeeCore.c: 374: else if ((conv1>='A') && (conv1<='F'))
 18253  004A4C  0E40               	movlw	64
 18254  004A4E  6406               	cpfsgt	converter@conv1,c
 18255  004A50  D006               	goto	i2l1401
 18256  004A52  0E47               	movlw	71
 18257  004A54  6006               	cpfslt	converter@conv1,c
 18258  004A56  D003               	goto	i2l1401
 18259                           
 18260                           ;XBeeCore.c: 375: {
 18261                           ;XBeeCore.c: 376: aux=conv1-'A'+10;
 18262  004A58  5006               	movf	converter@conv1,w,c
 18263  004A5A  0FC9               	addlw	201
 18264  004A5C                     L13:
 18265  004A5C  6E04               	movwf	converter@aux,c
 18266  004A5E                     i2l1401:
 18267                           
 18268                           ;XBeeCore.c: 377: }
 18269                           ;XBeeCore.c: 379: if ((conv2>='0') && (conv2<='9'))
 18270  004A5E  0E2F               	movlw	47
 18271  004A60  6402               	cpfsgt	converter@conv2,c
 18272  004A62  D006               	goto	i2l1402
 18273  004A64  0E3A               	movlw	58
 18274  004A66  6002               	cpfslt	converter@conv2,c
 18275  004A68  D003               	goto	i2l1402
 18276                           
 18277                           ;XBeeCore.c: 380: {
 18278                           ;XBeeCore.c: 381: aux2=conv2-'0';
 18279  004A6A  5002               	movf	converter@conv2,w,c
 18280  004A6C  0FD0               	addlw	208
 18281  004A6E  D00A               	goto	L15
 18282  004A70                     i2l1402:
 18283                           
 18284                           ;XBeeCore.c: 383: else if ((conv2>='A') && (conv2<='F'))
 18285  004A70  0E40               	movlw	64
 18286  004A72  6402               	cpfsgt	converter@conv2,c
 18287  004A74  D006               	goto	i2l1404
 18288  004A76  0E47               	movlw	71
 18289  004A78  6002               	cpfslt	converter@conv2,c
 18290  004A7A  D003               	goto	i2l1404
 18291                           
 18292                           ;XBeeCore.c: 384: {
 18293                           ;XBeeCore.c: 385: aux2=conv2-'A'+10;
 18294  004A7C  5002               	movf	converter@conv2,w,c
 18295  004A7E  0FC9               	addlw	201
 18296  004A80  D001               	goto	L15
 18297  004A82                     i2l1404:
 18298                           
 18299                           ;XBeeCore.c: 387: else
 18300                           ;XBeeCore.c: 388: {
 18301                           ;XBeeCore.c: 389: aux2=100;
 18302  004A82  0E64               	movlw	100
 18303  004A84                     L15:
 18304  004A84  6E05               	movwf	converter@aux2,c
 18305                           
 18306                           ;XBeeCore.c: 390: }
 18307                           ;XBeeCore.c: 392: if(aux2==100)
 18308  004A86  0E64               	movlw	100
 18309  004A88  1805               	xorwf	converter@aux2,w,c
 18310  004A8A  A4D8               	btfss	status,2,c
 18311  004A8C  D003               	goto	i2l1406
 18312                           
 18313                           ;XBeeCore.c: 393: {
 18314                           ;XBeeCore.c: 394: resul=aux;
 18315  004A8E  C004  F003         	movff	converter@aux,converter@resul
 18316                           
 18317                           ;XBeeCore.c: 395: }
 18318  004A92  D005               	goto	i2l1407
 18319  004A94                     i2l1406:
 18320                           
 18321                           ;XBeeCore.c: 396: else
 18322                           ;XBeeCore.c: 397: {
 18323                           ;XBeeCore.c: 398: resul=(uint8_t)((aux*16)+aux2);
 18324  004A94  5004               	movf	converter@aux,w,c
 18325  004A96  0D10               	mullw	16
 18326  004A98  50F3               	movf	prodl,w,c
 18327  004A9A  2405               	addwf	converter@aux2,w,c
 18328  004A9C  6E03               	movwf	converter@resul,c
 18329  004A9E                     i2l1407:
 18330                           
 18331                           ;XBeeCore.c: 399: }
 18332                           ;XBeeCore.c: 400: return resul;
 18333  004A9E  5003               	movf	converter@resul,w,c
 18334  004AA0  0012               	return	
 18335  004AA2                     __end_of_converter:
 18336                           	opt stack 0
 18337                           pclatu	equ	0xFFB
 18338                           pclath	equ	0xFFA
 18339                           tblptru	equ	0xFF8
 18340                           tblptrh	equ	0xFF7
 18341                           tblptrl	equ	0xFF6
 18342                           tablat	equ	0xFF5
 18343                           prodh	equ	0xFF4
 18344                           prodl	equ	0xFF3
 18345                           intcon	equ	0xFF2
 18346                           indf0	equ	0xFEF
 18347                           postinc0	equ	0xFEE
 18348                           fsr0h	equ	0xFEA
 18349                           fsr0l	equ	0xFE9
 18350                           wreg	equ	0xFE8
 18351                           indf1	equ	0xFE7
 18352                           postdec1	equ	0xFE5
 18353                           fsr1h	equ	0xFE2
 18354                           fsr1l	equ	0xFE1
 18355                           indf2	equ	0xFDF
 18356                           postinc2	equ	0xFDE
 18357                           postdec2	equ	0xFDD
 18358                           plusw2	equ	0xFDB
 18359                           fsr2h	equ	0xFDA
 18360                           fsr2l	equ	0xFD9
 18361                           status	equ	0xFD8
 18362                           
 18363 ;; *************** function _toupper *****************
 18364 ;; Defined at:
 18365 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\toupper.c"
 18366 ;; Parameters:    Size  Location     Type
 18367 ;;  c               1    wreg     unsigned char 
 18368 ;; Auto vars:     Size  Location     Type
 18369 ;;  c               1    0[COMRAM] unsigned char 
 18370 ;; Return value:  Size  Location     Type
 18371 ;;                  1    wreg      unsigned char 
 18372 ;; Registers used:
 18373 ;;		wreg, status,2, status,0
 18374 ;; Tracked objects:
 18375 ;;		On entry : 0/0
 18376 ;;		On exit  : 0/0
 18377 ;;		Unchanged: 0/0
 18378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18379 ;;      Params:         0       0       0       0       0       0       0       0       0
 18380 ;;      Locals:         1       0       0       0       0       0       0       0       0
 18381 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18382 ;;      Totals:         1       0       0       0       0       0       0       0       0
 18383 ;;Total ram usage:        1 bytes
 18384 ;; Hardware stack levels used:    1
 18385 ;; This function calls:
 18386 ;;		Nothing
 18387 ;; This function is called by:
 18388 ;;		_converter
 18389 ;; This function uses a non-reentrant model
 18390 ;;
 18391                           
 18392                           	psect	text65
 18393  005736                     __ptext65:
 18394                           	opt stack 0
 18395  005736                     _toupper:
 18396                           	opt stack 22
 18397                           
 18398                           ;incstack = 0
 18399                           ;toupper@c stored from wreg
 18400  005736  6E01               	movwf	toupper@c,c
 18401  005738  0E7B               	movlw	123
 18402  00573A  6001               	cpfslt	toupper@c,c
 18403  00573C  D004               	goto	i2l3237
 18404  00573E  0E60               	movlw	96
 18405  005740  6401               	cpfsgt	toupper@c,c
 18406  005742  D001               	goto	i2l3237
 18407  005744  9A01               	bcf	toupper@c,5,c
 18408  005746                     i2l3237:
 18409  005746  5001               	movf	toupper@c,w,c
 18410  005748  0012               	return	
 18411  00574A                     __end_of_toupper:
 18412                           	opt stack 0
 18413                           pclatu	equ	0xFFB
 18414                           pclath	equ	0xFFA
 18415                           tblptru	equ	0xFF8
 18416                           tblptrh	equ	0xFF7
 18417                           tblptrl	equ	0xFF6
 18418                           tablat	equ	0xFF5
 18419                           prodh	equ	0xFF4
 18420                           prodl	equ	0xFF3
 18421                           intcon	equ	0xFF2
 18422                           indf0	equ	0xFEF
 18423                           postinc0	equ	0xFEE
 18424                           fsr0h	equ	0xFEA
 18425                           fsr0l	equ	0xFE9
 18426                           wreg	equ	0xFE8
 18427                           indf1	equ	0xFE7
 18428                           postdec1	equ	0xFE5
 18429                           fsr1h	equ	0xFE2
 18430                           fsr1l	equ	0xFE1
 18431                           indf2	equ	0xFDF
 18432                           postinc2	equ	0xFDE
 18433                           postdec2	equ	0xFDD
 18434                           plusw2	equ	0xFDB
 18435                           fsr2h	equ	0xFDA
 18436                           fsr2l	equ	0xFD9
 18437                           status	equ	0xFD8
 18438                           
 18439 ;; *************** function _getch *****************
 18440 ;; Defined at:
 18441 ;;		line 52 in file "uart/uart.c"
 18442 ;; Parameters:    Size  Location     Type
 18443 ;;		None
 18444 ;; Auto vars:     Size  Location     Type
 18445 ;;  data            1    2[COMRAM] unsigned char 
 18446 ;;  RC              1    1[COMRAM] unsigned char 
 18447 ;; Return value:  Size  Location     Type
 18448 ;;                  1    wreg      unsigned char 
 18449 ;; Registers used:
 18450 ;;		wreg, status,2, status,0
 18451 ;; Tracked objects:
 18452 ;;		On entry : 0/0
 18453 ;;		On exit  : 0/0
 18454 ;;		Unchanged: 0/0
 18455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18456 ;;      Params:         0       0       0       0       0       0       0       0       0
 18457 ;;      Locals:         2       0       0       0       0       0       0       0       0
 18458 ;;      Temps:          1       0       0       0       0       0       0       0       0
 18459 ;;      Totals:         3       0       0       0       0       0       0       0       0
 18460 ;;Total ram usage:        3 bytes
 18461 ;; Hardware stack levels used:    1
 18462 ;; This function calls:
 18463 ;;		Nothing
 18464 ;; This function is called by:
 18465 ;;		_SYS_InterruptHigh
 18466 ;;		_flush
 18467 ;; This function uses a non-reentrant model
 18468 ;;
 18469                           
 18470                           	psect	text66
 18471  005696                     __ptext66:
 18472                           	opt stack 0
 18473  005696                     _getch:
 18474                           	opt stack 24
 18475                           
 18476                           ;uart.c: 54: uint8_t RC;
 18477                           ;uart.c: 55: char data;
 18478                           ;uart.c: 57: if (!RCIF)
 18479                           
 18480                           ;incstack = 0
 18481  005696  BA9E               	btfsc	3998,5,c	;volatile
 18482  005698  D002               	goto	i2l1162
 18483                           
 18484                           ;uart.c: 58: return 0;
 18485  00569A  0E00               	movlw	0
 18486  00569C  0012               	return	
 18487  00569E                     i2l1162:
 18488                           
 18489                           ;uart.c: 60: RC=RCSTA;
 18490  00569E  CFAB F002          	movff	4011,getch@RC	;volatile
 18491                           
 18492                           ;uart.c: 61: data=RCREG;
 18493  0056A2  CFAE F003          	movff	4014,getch@data	;volatile
 18494                           
 18495                           ;uart.c: 64: if ((RC & 0x06)!=0)
 18496  0056A6  C002  F001         	movff	getch@RC,??_getch
 18497  0056AA  0E06               	movlw	6
 18498  0056AC  1601               	andwf	??_getch,f,c
 18499  0056AE  B4D8               	btfsc	status,2,c
 18500  0056B0  D003               	goto	i2l1164
 18501                           
 18502                           ;uart.c: 65: {
 18503                           ;uart.c: 66: RCSTAbits.CREN=0;
 18504  0056B2  98AB               	bcf	4011,4,c	;volatile
 18505                           
 18506                           ;uart.c: 67: __nop();
 18507  0056B4  F000               	nop	
 18508                           
 18509                           ;uart.c: 68: RCSTAbits.CREN=1;
 18510  0056B6  88AB               	bsf	4011,4,c	;volatile
 18511  0056B8                     i2l1164:
 18512                           
 18513                           ;uart.c: 69: }
 18514                           ;uart.c: 71: return data;
 18515  0056B8  5003               	movf	getch@data,w,c
 18516  0056BA  0012               	return	
 18517  0056BC                     __end_of_getch:
 18518                           	opt stack 0
 18519                           pclatu	equ	0xFFB
 18520                           pclath	equ	0xFFA
 18521                           tblptru	equ	0xFF8
 18522                           tblptrh	equ	0xFF7
 18523                           tblptrl	equ	0xFF6
 18524                           tablat	equ	0xFF5
 18525                           prodh	equ	0xFF4
 18526                           prodl	equ	0xFF3
 18527                           intcon	equ	0xFF2
 18528                           indf0	equ	0xFEF
 18529                           postinc0	equ	0xFEE
 18530                           fsr0h	equ	0xFEA
 18531                           fsr0l	equ	0xFE9
 18532                           wreg	equ	0xFE8
 18533                           indf1	equ	0xFE7
 18534                           postdec1	equ	0xFE5
 18535                           fsr1h	equ	0xFE2
 18536                           fsr1l	equ	0xFE1
 18537                           indf2	equ	0xFDF
 18538                           postinc2	equ	0xFDE
 18539                           postdec2	equ	0xFDD
 18540                           plusw2	equ	0xFDB
 18541                           fsr2h	equ	0xFDA
 18542                           fsr2l	equ	0xFD9
 18543                           status	equ	0xFD8
 18544                           
 18545 ;; *************** function _USBDeviceTasks *****************
 18546 ;; Defined at:
 18547 ;;		line 477 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 18548 ;; Parameters:    Size  Location     Type
 18549 ;;		None
 18550 ;; Auto vars:     Size  Location     Type
 18551 ;;  i               1   27[COMRAM] unsigned char 
 18552 ;; Return value:  Size  Location     Type
 18553 ;;                  1    wreg      void 
 18554 ;; Registers used:
 18555 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18556 ;; Tracked objects:
 18557 ;;		On entry : 0/0
 18558 ;;		On exit  : 0/0
 18559 ;;		Unchanged: 0/0
 18560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18561 ;;      Params:         0       0       0       0       0       0       0       0       0
 18562 ;;      Locals:         1       0       0       0       0       0       0       0       0
 18563 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18564 ;;      Totals:         1       0       0       0       0       0       0       0       0
 18565 ;;Total ram usage:        1 bytes
 18566 ;; Hardware stack levels used:    1
 18567 ;; Hardware stack levels required when called:    8
 18568 ;; This function calls:
 18569 ;;		_USBCtrlEPAllowStatusStage
 18570 ;;		_USBCtrlEPService
 18571 ;;		_USBIncrement1msInternalTimers
 18572 ;;		_USBStallHandler
 18573 ;;		_USBSuspend
 18574 ;;		_USBWakeFromSuspend
 18575 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 18576 ;;		i2_USBDeviceInit
 18577 ;; This function is called by:
 18578 ;;		_SYS_InterruptHigh
 18579 ;; This function uses a non-reentrant model
 18580 ;;
 18581                           
 18582                           	psect	text67
 18583  002FB2                     __ptext67:
 18584                           	opt stack 0
 18585  002FB2                     _USBDeviceTasks:
 18586                           	opt stack 16
 18587                           
 18588                           ;usb_device.c: 479: uint8_t i;
 18589                           ;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
 18590                           
 18591                           ;incstack = 0
 18592  002FB2  0458               	decf	_USBDeviceState,w,c	;volatile
 18593  002FB4  B4D8               	btfsc	status,2,c
 18594                           
 18595                           ;usb_device.c: 591: {
 18596                           ;usb_device.c: 601: if(!UCONbits.SE0)
 18597  002FB6  BA6D               	btfsc	3949,5,c	;volatile
 18598  002FB8  D006               	goto	i2l384
 18599                           
 18600                           ;usb_device.c: 602: {
 18601                           ;usb_device.c: 608: {UIR = 0;};
 18602  002FBA  0E00               	movlw	0
 18603  002FBC  6E68               	movwf	3944,c	;volatile
 18604                           
 18605                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
 18606  002FBE  8069               	bsf	3945,0,c	;volatile
 18607                           
 18608                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
 18609  002FC0  8869               	bsf	3945,4,c	;volatile
 18610                           
 18611                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
 18612  002FC2  0E02               	movlw	2
 18613  002FC4  6E58               	movwf	_USBDeviceState,c	;volatile
 18614  002FC6                     i2l384:
 18615                           
 18616                           ;usb_device.c: 617: }
 18617                           ;usb_device.c: 618: }
 18618                           ;usb_device.c: 634: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 18619  002FC6  B468               	btfsc	3944,2,c	;volatile
 18620  002FC8  A469               	btfss	3945,2,c	;volatile
 18621  002FCA  D003               	goto	i2l385
 18622                           
 18623                           ;usb_device.c: 635: {
 18624                           ;usb_device.c: 636: (UIR &= 0xFB);
 18625  002FCC  9468               	bcf	3944,2,c	;volatile
 18626                           
 18627                           ;usb_device.c: 640: USBWakeFromSuspend();
 18628  002FCE  EC54  F02A         	call	_USBWakeFromSuspend	;wreg free
 18629  002FD2                     i2l385:
 18630                           
 18631                           ;usb_device.c: 642: }
 18632                           ;usb_device.c: 647: if(UCONbits.SUSPND==1)
 18633  002FD2  A26D               	btfss	3949,1,c	;volatile
 18634  002FD4  D002               	goto	i2l386
 18635                           
 18636                           ;usb_device.c: 648: {
 18637                           ;usb_device.c: 649: {PIR2bits.USBIF = 0;};
 18638  002FD6  9AA1               	bcf	4001,5,c	;volatile
 18639                           
 18640                           ;usb_device.c: 650: return;
 18641  002FD8  0012               	return	
 18642  002FDA                     i2l386:
 18643                           
 18644                           ;usb_device.c: 651: }
 18645                           ;usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
 18646  002FDA  B068               	btfsc	3944,0,c	;volatile
 18647  002FDC  A069               	btfss	3945,0,c	;volatile
 18648  002FDE  D006               	goto	i2l388
 18649                           
 18650                           ;usb_device.c: 664: {
 18651                           ;usb_device.c: 665: USBDeviceInit();
 18652  002FE0  EC08  F016         	call	i2_USBDeviceInit	;wreg free
 18653                           
 18654                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
 18655  002FE4  8AA0               	bsf	4000,5,c	;volatile
 18656                           
 18657                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
 18658  002FE6  0E04               	movlw	4
 18659  002FE8  6E58               	movwf	_USBDeviceState,c	;volatile
 18660                           
 18661                           ;usb_device.c: 681: (UIR &= 0xFE);
 18662  002FEA  9068               	bcf	3944,0,c	;volatile
 18663  002FEC                     i2l388:
 18664                           
 18665                           ;usb_device.c: 682: }
 18666                           ;usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 18667  002FEC  B868               	btfsc	3944,4,c	;volatile
 18668  002FEE  A869               	btfss	3945,4,c	;volatile
 18669  002FF0  D002               	goto	i2l389
 18670                           
 18671                           ;usb_device.c: 688: {
 18672                           ;usb_device.c: 694: USBSuspend();
 18673  002FF2  ECB9  F02A         	call	_USBSuspend	;wreg free
 18674  002FF6                     i2l389:
 18675                           
 18676                           ;usb_device.c: 696: }
 18677                           ;usb_device.c: 708: if(UIRbits.SOFIF)
 18678  002FF6  AC68               	btfss	3944,6,c	;volatile
 18679  002FF8  D01A               	goto	i2l393
 18680                           
 18681                           ;usb_device.c: 709: {
 18682                           ;usb_device.c: 711: if(UIEbits.SOFIE)
 18683  002FFA  AC69               	btfss	3945,6,c	;volatile
 18684  002FFC  D00E               	goto	i2l391
 18685                           
 18686                           ;usb_device.c: 712: {
 18687                           ;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 18688  002FFE  0E00               	movlw	0
 18689  003000  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 18690  003002  0E73               	movlw	115
 18691  003004  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 18692  003006  0E00               	movlw	0
 18693  003008  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 18694  00300A  0E00               	movlw	0
 18695  00300C  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 18696  00300E  0E00               	movlw	0
 18697  003010  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 18698  003012  0E01               	movlw	1
 18699  003014  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 18700  003016  ECE6  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 18701  00301A                     i2l391:
 18702                           
 18703                           ;usb_device.c: 714: }
 18704                           ;usb_device.c: 715: (UIR &= 0xBF);
 18705  00301A  9C68               	bcf	3944,6,c	;volatile
 18706                           
 18707                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
 18708  00301C  EC5E  F02B         	call	_USBIncrement1msInternalTimers	;wreg free
 18709                           
 18710                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 18711  003020  5054               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 18712  003022  A4D8               	btfss	status,2,c
 18713                           
 18714                           ;usb_device.c: 736: {
 18715                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 18716  003024  0654               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 18717                           
 18718                           ;usb_device.c: 738: }
 18719                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 18720  003026  5054               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 18721  003028  B4D8               	btfsc	status,2,c
 18722                           
 18723                           ;usb_device.c: 745: {
 18724                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 18725  00302A  ECE1  F01F         	call	_USBCtrlEPAllowStatusStage	;wreg free
 18726  00302E                     i2l393:
 18727                           
 18728                           ;usb_device.c: 747: }
 18729                           ;usb_device.c: 749: }
 18730                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
 18731  00302E  BA68               	btfsc	3944,5,c	;volatile
 18732  003030  AA69               	btfss	3945,5,c	;volatile
 18733  003032  D002               	goto	i2l394
 18734                           
 18735                           ;usb_device.c: 752: {
 18736                           ;usb_device.c: 753: USBStallHandler();
 18737  003034  EC81  F029         	call	_USBStallHandler	;wreg free
 18738  003038                     i2l394:
 18739                           
 18740                           ;usb_device.c: 754: }
 18741                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 18742  003038  B268               	btfsc	3944,1,c	;volatile
 18743  00303A  A269               	btfss	3945,1,c	;volatile
 18744  00303C  D00F               	goto	i2l395
 18745                           
 18746                           ;usb_device.c: 757: {
 18747                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 18748  00303E  0E7F               	movlw	127
 18749  003040  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 18750  003042  680D               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 18751  003044  0E00               	movlw	0
 18752  003046  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 18753  003048  0E00               	movlw	0
 18754  00304A  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 18755  00304C  0E00               	movlw	0
 18756  00304E  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 18757  003050  0E01               	movlw	1
 18758  003052  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 18759  003054  ECE6  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 18760                           
 18761                           ;usb_device.c: 759: {UEIR = 0;};
 18762  003058  0E00               	movlw	0
 18763  00305A  6E6A               	movwf	3946,c	;volatile
 18764  00305C                     i2l395:
 18765                           
 18766                           ;usb_device.c: 767: }
 18767                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 18768  00305C  0E04               	movlw	4
 18769  00305E  6058               	cpfslt	_USBDeviceState,c	;volatile
 18770  003060  D002               	goto	i2l396
 18771                           
 18772                           ;usb_device.c: 775: {
 18773                           ;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 18774  003062  9AA1               	bcf	4001,5,c	;volatile
 18775                           
 18776                           ;usb_device.c: 777: return;
 18777  003064  0012               	return	
 18778  003066                     i2l396:
 18779                           
 18780                           ;usb_device.c: 778: }
 18781                           ;usb_device.c: 783: if(UIEbits.TRNIE)
 18782  003066  A669               	btfss	3945,3,c	;volatile
 18783  003068  D039               	goto	i2u924_40
 18784                           
 18785                           ;usb_device.c: 784: {
 18786                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
 18787  00306A  0E00               	movlw	0
 18788  00306C  6E1C               	movwf	USBDeviceTasks@i,c
 18789  00306E                     i2l9577:
 18790  00306E  0E03               	movlw	3
 18791  003070  641C               	cpfsgt	USBDeviceTasks@i,c
 18792  003072  D001               	goto	i2l398
 18793  003074  D033               	goto	i2u924_40
 18794  003076                     i2l398:
 18795                           
 18796                           ;usb_device.c: 786: {
 18797                           ;usb_device.c: 787: if(UIRbits.TRNIF)
 18798  003076  A668               	btfss	3944,3,c	;volatile
 18799  003078  D031               	goto	i2u924_40
 18800                           
 18801                           ;usb_device.c: 788: {
 18802                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
 18803  00307A  CF6C F05D          	movff	3948,_USTATcopy	;volatile
 18804                           
 18805                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 18806  00307E  305D               	rrcf	_USTATcopy,w,c	;volatile
 18807  003080  32E8               	rrcf	wreg,f,c
 18808  003082  32E8               	rrcf	wreg,f,c
 18809  003084  0B0F               	andlw	15
 18810  003086  6E55               	movwf	_endpoint_number,c	;volatile
 18811                           
 18812                           ;usb_device.c: 793: (UIR &= 0xF7);
 18813  003088  9668               	bcf	3944,3,c	;volatile
 18814                           
 18815                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 18816  00308A  B45D               	btfsc	_USTATcopy,2,c	;volatile
 18817  00308C  D007               	goto	i2l401
 18818                           
 18819                           ;usb_device.c: 799: {
 18820                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 18821  00308E  5055               	movf	_endpoint_number,w,c	;volatile
 18822  003090  0D01               	mullw	1
 18823  003092  0ED2               	movlw	low _ep_data_out
 18824  003094  24F3               	addwf	prodl,w,c
 18825  003096  6ED9               	movwf	fsr2l,c
 18826  003098  0E02               	movlw	high _ep_data_out
 18827  00309A  D006               	goto	L16
 18828  00309C                     i2l401:
 18829                           
 18830                           ;usb_device.c: 802: else
 18831                           ;usb_device.c: 803: {
 18832                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 18833                           
 18834                           ; BSR set to: 2
 18835  00309C  5055               	movf	_endpoint_number,w,c	;volatile
 18836  00309E  0D01               	mullw	1
 18837  0030A0  0ED5               	movlw	low _ep_data_in
 18838  0030A2  24F3               	addwf	prodl,w,c
 18839  0030A4  6ED9               	movwf	fsr2l,c
 18840  0030A6  0E02               	movlw	high _ep_data_in
 18841  0030A8                     L16:
 18842  0030A8  20F4               	addwfc	prodh,w,c
 18843  0030AA  6EDA               	movwf	fsr2h,c
 18844  0030AC  0102               	movlb	2	; () banked
 18845  0030AE  70DF               	btg	indf2,0,c
 18846                           
 18847                           ; BSR set to: 2
 18848                           ;usb_device.c: 805: }
 18849                           ;usb_device.c: 810: if(endpoint_number == 0)
 18850                           
 18851                           ; BSR set to: 2
 18852  0030B0  5055               	movf	_endpoint_number,w,c	;volatile
 18853  0030B2  A4D8               	btfss	status,2,c
 18854  0030B4  D003               	goto	i2l403
 18855                           
 18856                           ; BSR set to: 2
 18857                           ;usb_device.c: 811: {
 18858                           ;usb_device.c: 812: USBCtrlEPService();
 18859  0030B6  ECA3  F023         	call	_USBCtrlEPService	;wreg free
 18860                           
 18861                           ;usb_device.c: 813: }
 18862  0030BA  D00E               	goto	i2l405
 18863  0030BC                     i2l403:
 18864                           
 18865                           ;usb_device.c: 814: else
 18866                           ;usb_device.c: 815: {
 18867                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 18868  0030BC  0E00               	movlw	0
 18869  0030BE  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 18870  0030C0  0E72               	movlw	114
 18871  0030C2  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 18872  0030C4  0E5D               	movlw	low _USTATcopy
 18873  0030C6  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 18874  0030C8  0E00               	movlw	high _USTATcopy
 18875  0030CA  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 18876  0030CC  0E00               	movlw	0
 18877  0030CE  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 18878  0030D0  0E00               	movlw	0
 18879  0030D2  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 18880  0030D4  ECE6  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 18881  0030D8                     i2l405:
 18882  0030D8  2A1C               	incf	USBDeviceTasks@i,f,c
 18883  0030DA  D7C9               	goto	i2l9577
 18884  0030DC                     i2u924_40:
 18885                           
 18886                           ;usb_device.c: 822: }
 18887                           ;usb_device.c: 823: }
 18888                           ;usb_device.c: 824: }
 18889                           ;usb_device.c: 826: {PIR2bits.USBIF = 0;};
 18890  0030DC  9AA1               	bcf	4001,5,c	;volatile
 18891  0030DE  0012               	return		;funcret
 18892  0030E0                     __end_of_USBDeviceTasks:
 18893                           	opt stack 0
 18894                           pclatu	equ	0xFFB
 18895                           pclath	equ	0xFFA
 18896                           tblptru	equ	0xFF8
 18897                           tblptrh	equ	0xFF7
 18898                           tblptrl	equ	0xFF6
 18899                           tablat	equ	0xFF5
 18900                           prodh	equ	0xFF4
 18901                           prodl	equ	0xFF3
 18902                           intcon	equ	0xFF2
 18903                           indf0	equ	0xFEF
 18904                           postinc0	equ	0xFEE
 18905                           fsr0h	equ	0xFEA
 18906                           fsr0l	equ	0xFE9
 18907                           wreg	equ	0xFE8
 18908                           indf1	equ	0xFE7
 18909                           postdec1	equ	0xFE5
 18910                           fsr1h	equ	0xFE2
 18911                           fsr1l	equ	0xFE1
 18912                           indf2	equ	0xFDF
 18913                           postinc2	equ	0xFDE
 18914                           postdec2	equ	0xFDD
 18915                           plusw2	equ	0xFDB
 18916                           fsr2h	equ	0xFDA
 18917                           fsr2l	equ	0xFD9
 18918                           status	equ	0xFD8
 18919                           
 18920 ;; *************** function i2_USBDeviceInit *****************
 18921 ;; Defined at:
 18922 ;;		line 277 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 18923 ;; Parameters:    Size  Location     Type
 18924 ;;		None
 18925 ;; Auto vars:     Size  Location     Type
 18926 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 18927 ;; Return value:  Size  Location     Type
 18928 ;;                  1    wreg      void 
 18929 ;; Registers used:
 18930 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18931 ;; Tracked objects:
 18932 ;;		On entry : 0/0
 18933 ;;		On exit  : 0/0
 18934 ;;		Unchanged: 0/0
 18935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18936 ;;      Params:         0       0       0       0       0       0       0       0       0
 18937 ;;      Locals:         1       0       0       0       0       0       0       0       0
 18938 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18939 ;;      Totals:         1       0       0       0       0       0       0       0       0
 18940 ;;Total ram usage:        1 bytes
 18941 ;; Hardware stack levels used:    1
 18942 ;; Hardware stack levels required when called:    1
 18943 ;; This function calls:
 18944 ;;		i2_memset
 18945 ;; This function is called by:
 18946 ;;		_USBDeviceTasks
 18947 ;; This function uses a non-reentrant model
 18948 ;;
 18949                           
 18950                           	psect	text68
 18951  002C10                     __ptext68:
 18952                           	opt stack 0
 18953  002C10                     i2_USBDeviceInit:
 18954                           	opt stack 22
 18955                           
 18956                           ;usb_device.c: 279: uint8_t i;
 18957                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 18958                           
 18959                           ;incstack = 0
 18960  002C10  9AA0               	bcf	4000,5,c	;volatile
 18961                           
 18962                           ;usb_device.c: 285: ;
 18963                           ;usb_device.c: 288: {UEIR = 0;};
 18964  002C12  0E00               	movlw	0
 18965  002C14  6E6A               	movwf	3946,c	;volatile
 18966                           
 18967                           ;usb_device.c: 291: {UIR = 0;};
 18968  002C16  0E00               	movlw	0
 18969  002C18  6E68               	movwf	3944,c	;volatile
 18970                           
 18971                           ;usb_device.c: 294: UEP0 = 0;
 18972  002C1A  0E00               	movlw	0
 18973  002C1C  6E70               	movwf	3952,c	;volatile
 18974                           
 18975                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 18976  002C1E  0E71               	movlw	113
 18977  002C20  6E01               	movwf	i2memset@p1,c
 18978  002C22  0E0F               	movlw	15
 18979  002C24  6E02               	movwf	i2memset@p1+1,c
 18980  002C26  0E00               	movlw	0
 18981  002C28  6E04               	movwf	i2memset@c+1,c
 18982  002C2A  0E00               	movlw	0
 18983  002C2C  6E03               	movwf	i2memset@c,c
 18984  002C2E  0E00               	movlw	0
 18985  002C30  6E06               	movwf	i2memset@n+1,c
 18986  002C32  0E02               	movlw	2
 18987  002C34  6E05               	movwf	i2memset@n,c
 18988  002C36  ECE8  F02A         	call	i2_memset	;wreg free
 18989                           
 18990                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 18991  002C3A  0E16               	movlw	22
 18992  002C3C  6E6F               	movwf	3951,c	;volatile
 18993  002C3E  0E9F               	movlw	159
 18994  002C40  6E6B               	movwf	3947,c	;volatile
 18995  002C42  0E7B               	movlw	123
 18996  002C44  6E69               	movwf	3945,c	;volatile
 18997                           
 18998                           ;usb_device.c: 301: ;
 18999                           ;usb_device.c: 304: ;
 19000                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
 19001  002C46  0E00               	movlw	0
 19002  002C48  6E09               	movwf	i2USBDeviceInit@i,c
 19003  002C4A                     i2l9325:
 19004  002C4A  0E0B               	movlw	11
 19005  002C4C  6409               	cpfsgt	i2USBDeviceInit@i,c
 19006  002C4E  D001               	goto	i2l374
 19007  002C50  D00E               	goto	i2u878_40
 19008  002C52                     i2l374:
 19009                           
 19010                           ;usb_device.c: 308: {
 19011                           ;usb_device.c: 309: BDT[i].Val = 0x00;
 19012  002C52  5009               	movf	i2USBDeviceInit@i,w,c
 19013  002C54  0D04               	mullw	4
 19014  002C56  0E00               	movlw	0
 19015  002C58  24F3               	addwf	prodl,w,c
 19016  002C5A  6ED9               	movwf	fsr2l,c
 19017  002C5C  0E04               	movlw	4
 19018  002C5E  20F4               	addwfc	prodh,w,c
 19019  002C60  6EDA               	movwf	fsr2h,c
 19020  002C62  6ADE               	clrf	postinc2,c
 19021  002C64  6ADE               	clrf	postinc2,c
 19022  002C66  6ADE               	clrf	postinc2,c
 19023  002C68  6ADD               	clrf	postdec2,c
 19024  002C6A  2A09               	incf	i2USBDeviceInit@i,f,c
 19025  002C6C  D7EE               	goto	i2l9325
 19026  002C6E                     i2u878_40:
 19027                           
 19028                           ;usb_device.c: 310: }
 19029                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
 19030  002C6E  8C6D               	bsf	3949,6,c	;volatile
 19031                           
 19032                           ;usb_device.c: 316: UADDR = 0x00;
 19033  002C70  0E00               	movlw	0
 19034  002C72  6E6E               	movwf	3950,c	;volatile
 19035                           
 19036                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 19037  002C74  986D               	bcf	3949,4,c	;volatile
 19038                           
 19039                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 19040  002C76  9C6D               	bcf	3949,6,c	;volatile
 19041  002C78                     
 19042                           ;usb_device.c: 326: {
 19043                           ;usb_device.c: 327: (UIR &= 0xF7);
 19044  002C78  9668               	bcf	3944,3,c	;volatile
 19045                           
 19046                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 19047  002C7A  0E00               	movlw	0
 19048  002C7C  0100               	movlb	0	; () banked
 19049  002C7E  6FFD               	movwf	(_inPipes+3)& (0+255),b	;volatile
 19050                           
 19051                           ; BSR set to: 0
 19052                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 19053  002C80  0E00               	movlw	0
 19054  002C82  6E3B               	movwf	_outPipes+3,c	;volatile
 19055                           
 19056                           ; BSR set to: 0
 19057                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 19058  002C84  0E00               	movlw	0
 19059  002C86  6E3D               	movwf	_outPipes+5,c	;volatile
 19060  002C88  0E00               	movlw	0
 19061  002C8A  6E3C               	movwf	_outPipes+4,c	;volatile
 19062                           
 19063                           ; BSR set to: 0
 19064                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 19065  002C8C  B668               	btfsc	3944,3,c	;volatile
 19066  002C8E  D7F4               	goto	i2l376
 19067                           
 19068                           ; BSR set to: 0
 19069                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 19070                           
 19071                           ; BSR set to: 0
 19072  002C90  0E01               	movlw	1
 19073  002C92  0102               	movlb	2	; () banked
 19074  002C94  6FEC               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 19075                           
 19076                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 19077  002C96  0E01               	movlw	1
 19078  002C98  6FEB               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 19079                           
 19080                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 19081  002C9A  0E00               	movlw	0
 19082  002C9C  6FEA               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 19083                           
 19084                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 19085  002C9E  0E00               	movlw	0
 19086  002CA0  6FE9               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 19087                           
 19088                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 19089  002CA2  0E00               	movlw	0
 19090  002CA4  0101               	movlb	1	; () banked
 19091  002CA6  6FFC               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 19092                           
 19093                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 19094  002CA8  0E00               	movlw	0
 19095  002CAA  6E09               	movwf	i2USBDeviceInit@i,c
 19096  002CAC                     i2l9353:
 19097                           
 19098                           ; BSR set to: 1
 19099  002CAC  0E02               	movlw	2
 19100  002CAE  6409               	cpfsgt	i2USBDeviceInit@i,c
 19101  002CB0  D001               	goto	i2l378
 19102  002CB2  D02E               	goto	i2u881_40
 19103  002CB4                     i2l378:
 19104                           
 19105                           ;usb_device.c: 346: {
 19106                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 19107                           
 19108                           ; BSR set to: 1
 19109  002CB4  5009               	movf	i2USBDeviceInit@i,w,c
 19110  002CB6  0D02               	mullw	2
 19111  002CB8  0E40               	movlw	low _pBDTEntryIn
 19112  002CBA  24F3               	addwf	prodl,w,c
 19113  002CBC  6ED9               	movwf	fsr2l,c
 19114  002CBE  0E00               	movlw	high _pBDTEntryIn
 19115  002CC0  20F4               	addwfc	prodh,w,c
 19116  002CC2  6EDA               	movwf	fsr2h,c
 19117  002CC4  0E00               	movlw	0
 19118  002CC6  6EDE               	movwf	postinc2,c
 19119  002CC8  0E00               	movlw	0
 19120  002CCA  6EDD               	movwf	postdec2,c
 19121                           
 19122                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 19123  002CCC  5009               	movf	i2USBDeviceInit@i,w,c
 19124  002CCE  0D02               	mullw	2
 19125  002CD0  0EC8               	movlw	low _pBDTEntryOut
 19126  002CD2  24F3               	addwf	prodl,w,c
 19127  002CD4  6ED9               	movwf	fsr2l,c
 19128  002CD6  0E02               	movlw	high _pBDTEntryOut
 19129  002CD8  20F4               	addwfc	prodh,w,c
 19130  002CDA  6EDA               	movwf	fsr2h,c
 19131  002CDC  0E00               	movlw	0
 19132  002CDE  6EDE               	movwf	postinc2,c
 19133  002CE0  0E00               	movlw	0
 19134  002CE2  6EDD               	movwf	postdec2,c
 19135                           
 19136                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 19137  002CE4  5009               	movf	i2USBDeviceInit@i,w,c
 19138  002CE6  0D01               	mullw	1
 19139  002CE8  0ED5               	movlw	low _ep_data_in
 19140  002CEA  24F3               	addwf	prodl,w,c
 19141  002CEC  6ED9               	movwf	fsr2l,c
 19142  002CEE  0E02               	movlw	high _ep_data_in
 19143  002CF0  20F4               	addwfc	prodh,w,c
 19144  002CF2  6EDA               	movwf	fsr2h,c
 19145  002CF4  0E00               	movlw	0
 19146  002CF6  6EDF               	movwf	indf2,c
 19147                           
 19148                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 19149  002CF8  5009               	movf	i2USBDeviceInit@i,w,c
 19150  002CFA  0D01               	mullw	1
 19151  002CFC  0ED2               	movlw	low _ep_data_out
 19152  002CFE  24F3               	addwf	prodl,w,c
 19153  002D00  6ED9               	movwf	fsr2l,c
 19154  002D02  0E02               	movlw	high _ep_data_out
 19155  002D04  20F4               	addwfc	prodh,w,c
 19156  002D06  6EDA               	movwf	fsr2h,c
 19157  002D08  0E00               	movlw	0
 19158  002D0A  6EDF               	movwf	indf2,c
 19159  002D0C  2A09               	incf	i2USBDeviceInit@i,f,c
 19160  002D0E  D7CE               	goto	i2l9353
 19161  002D10                     i2u881_40:
 19162                           
 19163                           ;usb_device.c: 351: }
 19164                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 19165  002D10  0E08               	movlw	8
 19166  002D12  6E40               	movwf	_pBDTEntryIn,c
 19167  002D14  0E04               	movlw	4
 19168  002D16  6E41               	movwf	_pBDTEntryIn+1,c
 19169                           
 19170                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 19171  002D18  0E16               	movlw	22
 19172  002D1A  6E70               	movwf	3952,c	;volatile
 19173                           
 19174                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 19175  002D1C  0E04               	movlw	4
 19176  002D1E  0104               	movlb	4	; () banked
 19177  002D20  6F03               	movwf	3,b	;volatile
 19178  002D22  0E30               	movlw	48
 19179  002D24  6F02               	movwf	2,b	;volatile
 19180                           
 19181                           ; BSR set to: 4
 19182                           ;usb_device.c: 359: BDT[0].CNT = 8;
 19183  002D26  0E08               	movlw	8
 19184  002D28  6F01               	movwf	1,b	;volatile
 19185                           
 19186                           ; BSR set to: 4
 19187                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 19188  002D2A  0E04               	movlw	4
 19189  002D2C  6F00               	movwf	0,b	;volatile
 19190                           
 19191                           ; BSR set to: 4
 19192                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 19193  002D2E  8F00               	bsf	0,7,b	;volatile
 19194                           
 19195                           ; BSR set to: 4
 19196                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 19197  002D30  0E00               	movlw	0
 19198  002D32  6E5E               	movwf	_USBActiveConfiguration,c	;volatile
 19199                           
 19200                           ; BSR set to: 4
 19201                           ;usb_device.c: 366: USB1msTickCount = 0;
 19202  002D34  0E00               	movlw	0
 19203  002D36  0102               	movlb	2	; () banked
 19204  002D38  6FCE               	movwf	_USB1msTickCount& (0+255),b	;volatile
 19205  002D3A  0E00               	movlw	0
 19206  002D3C  6FCF               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
 19207  002D3E  0E00               	movlw	0
 19208  002D40  6FD0               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
 19209  002D42  0E00               	movlw	0
 19210  002D44  6FD1               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
 19211                           
 19212                           ; BSR set to: 2
 19213                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 19214  002D46  0E00               	movlw	0
 19215  002D48  6FE8               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 19216                           
 19217                           ; BSR set to: 2
 19218                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 19219  002D4A  0E00               	movlw	0
 19220  002D4C  6E58               	movwf	_USBDeviceState,c	;volatile
 19221                           
 19222                           ; BSR set to: 2
 19223  002D4E  0012               	return		;funcret
 19224  002D50                     __end_ofi2_USBDeviceInit:
 19225                           	opt stack 0
 19226                           pclatu	equ	0xFFB
 19227                           pclath	equ	0xFFA
 19228                           tblptru	equ	0xFF8
 19229                           tblptrh	equ	0xFF7
 19230                           tblptrl	equ	0xFF6
 19231                           tablat	equ	0xFF5
 19232                           prodh	equ	0xFF4
 19233                           prodl	equ	0xFF3
 19234                           intcon	equ	0xFF2
 19235                           indf0	equ	0xFEF
 19236                           postinc0	equ	0xFEE
 19237                           fsr0h	equ	0xFEA
 19238                           fsr0l	equ	0xFE9
 19239                           wreg	equ	0xFE8
 19240                           indf1	equ	0xFE7
 19241                           postdec1	equ	0xFE5
 19242                           fsr1h	equ	0xFE2
 19243                           fsr1l	equ	0xFE1
 19244                           indf2	equ	0xFDF
 19245                           postinc2	equ	0xFDE
 19246                           postdec2	equ	0xFDD
 19247                           plusw2	equ	0xFDB
 19248                           fsr2h	equ	0xFDA
 19249                           fsr2l	equ	0xFD9
 19250                           status	equ	0xFD8
 19251                           
 19252 ;; *************** function _USBWakeFromSuspend *****************
 19253 ;; Defined at:
 19254 ;;		line 2303 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 19255 ;; Parameters:    Size  Location     Type
 19256 ;;		None
 19257 ;; Auto vars:     Size  Location     Type
 19258 ;;		None
 19259 ;; Return value:  Size  Location     Type
 19260 ;;                  1    wreg      void 
 19261 ;; Registers used:
 19262 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19263 ;; Tracked objects:
 19264 ;;		On entry : 0/0
 19265 ;;		On exit  : 0/0
 19266 ;;		Unchanged: 0/0
 19267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19268 ;;      Params:         0       0       0       0       0       0       0       0       0
 19269 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19270 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19271 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19272 ;;Total ram usage:        0 bytes
 19273 ;; Hardware stack levels used:    1
 19274 ;; Hardware stack levels required when called:    4
 19275 ;; This function calls:
 19276 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 19277 ;; This function is called by:
 19278 ;;		_USBDeviceTasks
 19279 ;; This function uses a non-reentrant model
 19280 ;;
 19281                           
 19282                           	psect	text69
 19283  0054A8                     __ptext69:
 19284                           	opt stack 0
 19285  0054A8                     _USBWakeFromSuspend:
 19286                           	opt stack 19
 19287                           
 19288                           ;usb_device.c: 2305: USBBusIsSuspended = 0;
 19289                           
 19290                           ; BSR set to: 2
 19291                           ;incstack = 0
 19292  0054A8  0E00               	movlw	0
 19293  0054AA  0101               	movlb	1	; () banked
 19294  0054AC  6FFC               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 19295                           
 19296                           ; BSR set to: 1
 19297                           ;usb_device.c: 2311: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 19298  0054AE  0E00               	movlw	0
 19299  0054B0  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 19300  0054B2  0E74               	movlw	116
 19301  0054B4  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 19302  0054B6  0E00               	movlw	0
 19303  0054B8  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 19304  0054BA  0E00               	movlw	0
 19305  0054BC  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 19306  0054BE  0E00               	movlw	0
 19307  0054C0  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 19308  0054C2  0E00               	movlw	0
 19309  0054C4  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 19310  0054C6  ECE6  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 19311                           
 19312                           ;usb_device.c: 2318: UCONbits.SUSPND = 0;
 19313  0054CA  926D               	bcf	3949,1,c	;volatile
 19314                           
 19315                           ;usb_device.c: 2323: UIEbits.ACTVIE = 0;
 19316  0054CC  9469               	bcf	3945,2,c	;volatile
 19317                           
 19318                           ;usb_device.c: 2341: while(UIRbits.ACTVIF)
 19319  0054CE  D001               	goto	i2l544
 19320  0054D0                     
 19321                           ;usb_device.c: 2343: {
 19322                           ;usb_device.c: 2344: (UIR &= 0xFB);
 19323  0054D0  9468               	bcf	3944,2,c	;volatile
 19324  0054D2                     i2l544:
 19325  0054D2  B468               	btfsc	3944,2,c	;volatile
 19326  0054D4  D7FD               	goto	i2l545
 19327                           
 19328                           ;usb_device.c: 2345: }
 19329                           ;usb_device.c: 2347: USBTicksSinceSuspendEnd = 0;
 19330  0054D6  0E00               	movlw	0
 19331  0054D8  0102               	movlb	2	; () banked
 19332  0054DA  6FE8               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 19333                           
 19334                           ; BSR set to: 2
 19335  0054DC  0012               	return		;funcret
 19336  0054DE                     __end_of_USBWakeFromSuspend:
 19337                           	opt stack 0
 19338                           pclatu	equ	0xFFB
 19339                           pclath	equ	0xFFA
 19340                           tblptru	equ	0xFF8
 19341                           tblptrh	equ	0xFF7
 19342                           tblptrl	equ	0xFF6
 19343                           tablat	equ	0xFF5
 19344                           prodh	equ	0xFF4
 19345                           prodl	equ	0xFF3
 19346                           intcon	equ	0xFF2
 19347                           indf0	equ	0xFEF
 19348                           postinc0	equ	0xFEE
 19349                           fsr0h	equ	0xFEA
 19350                           fsr0l	equ	0xFE9
 19351                           wreg	equ	0xFE8
 19352                           indf1	equ	0xFE7
 19353                           postdec1	equ	0xFE5
 19354                           fsr1h	equ	0xFE2
 19355                           fsr1l	equ	0xFE1
 19356                           indf2	equ	0xFDF
 19357                           postinc2	equ	0xFDE
 19358                           postdec2	equ	0xFDD
 19359                           plusw2	equ	0xFDB
 19360                           fsr2h	equ	0xFDA
 19361                           fsr2l	equ	0xFD9
 19362                           status	equ	0xFD8
 19363                           
 19364 ;; *************** function _USBSuspend *****************
 19365 ;; Defined at:
 19366 ;;		line 2245 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 19367 ;; Parameters:    Size  Location     Type
 19368 ;;		None
 19369 ;; Auto vars:     Size  Location     Type
 19370 ;;		None
 19371 ;; Return value:  Size  Location     Type
 19372 ;;                  1    wreg      void 
 19373 ;; Registers used:
 19374 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19375 ;; Tracked objects:
 19376 ;;		On entry : 0/0
 19377 ;;		On exit  : 0/0
 19378 ;;		Unchanged: 0/0
 19379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19380 ;;      Params:         0       0       0       0       0       0       0       0       0
 19381 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19382 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19383 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19384 ;;Total ram usage:        0 bytes
 19385 ;; Hardware stack levels used:    1
 19386 ;; Hardware stack levels required when called:    4
 19387 ;; This function calls:
 19388 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 19389 ;; This function is called by:
 19390 ;;		_USBDeviceTasks
 19391 ;; This function uses a non-reentrant model
 19392 ;;
 19393                           
 19394                           	psect	text70
 19395  005572                     __ptext70:
 19396                           	opt stack 0
 19397  005572                     _USBSuspend:
 19398                           	opt stack 19
 19399                           
 19400                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
 19401                           
 19402                           ; BSR set to: 2
 19403                           ;incstack = 0
 19404  005572  8469               	bsf	3945,2,c	;volatile
 19405                           
 19406                           ;usb_device.c: 2271: (UIR &= 0xEF);
 19407  005574  9868               	bcf	3944,4,c	;volatile
 19408                           
 19409                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
 19410  005576  826D               	bsf	3949,1,c	;volatile
 19411                           
 19412                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
 19413  005578  0E01               	movlw	1
 19414  00557A  0101               	movlb	1	; () banked
 19415  00557C  6FFC               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 19416                           
 19417                           ; BSR set to: 1
 19418                           ;usb_device.c: 2278: USBTicksSinceSuspendEnd = 0;
 19419  00557E  0E00               	movlw	0
 19420  005580  0102               	movlb	2	; () banked
 19421  005582  6FE8               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 19422                           
 19423                           ; BSR set to: 2
 19424                           ;usb_device.c: 2285: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 19425  005584  0E00               	movlw	0
 19426  005586  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 19427  005588  0E75               	movlw	117
 19428  00558A  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 19429  00558C  0E00               	movlw	0
 19430  00558E  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 19431  005590  0E00               	movlw	0
 19432  005592  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 19433  005594  0E00               	movlw	0
 19434  005596  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 19435  005598  0E00               	movlw	0
 19436  00559A  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 19437  00559C  ECE6  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 19438  0055A0  0012               	return		;funcret
 19439  0055A2                     __end_of_USBSuspend:
 19440                           	opt stack 0
 19441                           pclatu	equ	0xFFB
 19442                           pclath	equ	0xFFA
 19443                           tblptru	equ	0xFF8
 19444                           tblptrh	equ	0xFF7
 19445                           tblptrl	equ	0xFF6
 19446                           tablat	equ	0xFF5
 19447                           prodh	equ	0xFF4
 19448                           prodl	equ	0xFF3
 19449                           intcon	equ	0xFF2
 19450                           indf0	equ	0xFEF
 19451                           postinc0	equ	0xFEE
 19452                           fsr0h	equ	0xFEA
 19453                           fsr0l	equ	0xFE9
 19454                           wreg	equ	0xFE8
 19455                           indf1	equ	0xFE7
 19456                           postdec1	equ	0xFE5
 19457                           fsr1h	equ	0xFE2
 19458                           fsr1l	equ	0xFE1
 19459                           indf2	equ	0xFDF
 19460                           postinc2	equ	0xFDE
 19461                           postdec2	equ	0xFDD
 19462                           plusw2	equ	0xFDB
 19463                           fsr2h	equ	0xFDA
 19464                           fsr2l	equ	0xFD9
 19465                           status	equ	0xFD8
 19466                           
 19467 ;; *************** function _USBStallHandler *****************
 19468 ;; Defined at:
 19469 ;;		line 2202 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 19470 ;; Parameters:    Size  Location     Type
 19471 ;;		None
 19472 ;; Auto vars:     Size  Location     Type
 19473 ;;		None
 19474 ;; Return value:  Size  Location     Type
 19475 ;;                  1    wreg      void 
 19476 ;; Registers used:
 19477 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19478 ;; Tracked objects:
 19479 ;;		On entry : 0/0
 19480 ;;		On exit  : 0/0
 19481 ;;		Unchanged: 0/0
 19482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19483 ;;      Params:         0       0       0       0       0       0       0       0       0
 19484 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19485 ;;      Temps:          1       0       0       0       0       0       0       0       0
 19486 ;;      Totals:         1       0       0       0       0       0       0       0       0
 19487 ;;Total ram usage:        1 bytes
 19488 ;; Hardware stack levels used:    1
 19489 ;; This function calls:
 19490 ;;		Nothing
 19491 ;; This function is called by:
 19492 ;;		_USBDeviceTasks
 19493 ;; This function uses a non-reentrant model
 19494 ;;
 19495                           
 19496                           	psect	text71
 19497  005302                     __ptext71:
 19498                           	opt stack 0
 19499  005302                     _USBStallHandler:
 19500                           	opt stack 23
 19501                           
 19502                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
 19503                           
 19504                           ;incstack = 0
 19505  005302  A070               	btfss	3952,0,c	;volatile
 19506  005304  D01D               	goto	i2l536
 19507                           
 19508                           ;usb_device.c: 2215: {
 19509                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 19510  005306  C04E  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19511  00530A  C04F  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19512  00530E  0E80               	movlw	128
 19513  005310  18DE               	xorwf	postinc2,w,c
 19514  005312  A4D8               	btfss	status,2,c
 19515  005314  D014               	goto	i2l537
 19516  005316  C040  FFD9         	movff	_pBDTEntryIn,fsr2l
 19517  00531A  C041  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19518  00531E  0E84               	movlw	132
 19519  005320  18DE               	xorwf	postinc2,w,c
 19520  005322  A4D8               	btfss	status,2,c
 19521  005324  D00C               	goto	i2l537
 19522                           
 19523                           ;usb_device.c: 2218: {
 19524                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 19525  005326  C04E  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19526  00532A  C04F  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19527  00532E  0E0C               	movlw	12
 19528  005330  6EDF               	movwf	indf2,c
 19529                           
 19530                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 19531  005332  C04E  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19532  005336  C04F  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19533  00533A  0E00               	movlw	0
 19534  00533C  8EDB               	bsf	plusw2,7,c
 19535  00533E                     i2l537:
 19536                           
 19537                           ;usb_device.c: 2222: }
 19538                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
 19539  00533E  9070               	bcf	3952,0,c	;volatile
 19540  005340                     i2l536:
 19541                           
 19542                           ;usb_device.c: 2224: }
 19543                           ;usb_device.c: 2226: (UIR &= 0xDF);
 19544  005340  9A68               	bcf	3944,5,c	;volatile
 19545  005342  0012               	return		;funcret
 19546  005344                     __end_of_USBStallHandler:
 19547                           	opt stack 0
 19548                           pclatu	equ	0xFFB
 19549                           pclath	equ	0xFFA
 19550                           tblptru	equ	0xFF8
 19551                           tblptrh	equ	0xFF7
 19552                           tblptrl	equ	0xFF6
 19553                           tablat	equ	0xFF5
 19554                           prodh	equ	0xFF4
 19555                           prodl	equ	0xFF3
 19556                           intcon	equ	0xFF2
 19557                           indf0	equ	0xFEF
 19558                           postinc0	equ	0xFEE
 19559                           fsr0h	equ	0xFEA
 19560                           fsr0l	equ	0xFE9
 19561                           wreg	equ	0xFE8
 19562                           indf1	equ	0xFE7
 19563                           postdec1	equ	0xFE5
 19564                           fsr1h	equ	0xFE2
 19565                           fsr1l	equ	0xFE1
 19566                           indf2	equ	0xFDF
 19567                           postinc2	equ	0xFDE
 19568                           postdec2	equ	0xFDD
 19569                           plusw2	equ	0xFDB
 19570                           fsr2h	equ	0xFDA
 19571                           fsr2l	equ	0xFD9
 19572                           status	equ	0xFD8
 19573                           
 19574 ;; *************** function _USBIncrement1msInternalTimers *****************
 19575 ;; Defined at:
 19576 ;;		line 3025 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 19577 ;; Parameters:    Size  Location     Type
 19578 ;;		None
 19579 ;; Auto vars:     Size  Location     Type
 19580 ;;		None
 19581 ;; Return value:  Size  Location     Type
 19582 ;;                  1    wreg      void 
 19583 ;; Registers used:
 19584 ;;		wreg, status,2, status,0
 19585 ;; Tracked objects:
 19586 ;;		On entry : 0/0
 19587 ;;		On exit  : 0/0
 19588 ;;		Unchanged: 0/0
 19589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19590 ;;      Params:         0       0       0       0       0       0       0       0       0
 19591 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19592 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19593 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19594 ;;Total ram usage:        0 bytes
 19595 ;; Hardware stack levels used:    1
 19596 ;; This function calls:
 19597 ;;		Nothing
 19598 ;; This function is called by:
 19599 ;;		_USBDeviceTasks
 19600 ;; This function uses a non-reentrant model
 19601 ;;
 19602                           
 19603                           	psect	text72
 19604  0056BC                     __ptext72:
 19605                           	opt stack 0
 19606  0056BC                     _USBIncrement1msInternalTimers:
 19607                           	opt stack 23
 19608                           
 19609                           ;usb_device.c: 3033: USB1msTickCount++;
 19610                           
 19611                           ;incstack = 0
 19612  0056BC  0E01               	movlw	1
 19613  0056BE  0102               	movlb	2	; () banked
 19614  0056C0  27CE               	addwf	_USB1msTickCount& (0+255),f,b	;volatile
 19615  0056C2  0E00               	movlw	0
 19616  0056C4  23CF               	addwfc	(_USB1msTickCount+1)& (0+255),f,b	;volatile
 19617  0056C6  23D0               	addwfc	(_USB1msTickCount+2)& (0+255),f,b	;volatile
 19618  0056C8  23D1               	addwfc	(_USB1msTickCount+3)& (0+255),f,b	;volatile
 19619                           
 19620                           ; BSR set to: 2
 19621                           ;usb_device.c: 3034: if(USBBusIsSuspended == 0)
 19622  0056CA  0101               	movlb	1	; () banked
 19623  0056CC  51FC               	movf	_USBBusIsSuspended& (0+255),w,b	;volatile
 19624  0056CE  A4D8               	btfss	status,2,c
 19625  0056D0  0012               	return	
 19626                           
 19627                           ; BSR set to: 1
 19628                           ;usb_device.c: 3035: {
 19629                           ;usb_device.c: 3036: USBTicksSinceSuspendEnd++;
 19630  0056D2  0102               	movlb	2	; () banked
 19631  0056D4  2BE8               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b	;volatile
 19632                           
 19633                           ; BSR set to: 2
 19634                           ;usb_device.c: 3038: if(USBTicksSinceSuspendEnd == 0)
 19635  0056D6  51E8               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b	;volatile
 19636  0056D8  A4D8               	btfss	status,2,c
 19637  0056DA  0012               	return	
 19638                           
 19639                           ; BSR set to: 2
 19640                           ;usb_device.c: 3039: {
 19641                           ;usb_device.c: 3040: USBTicksSinceSuspendEnd = 255;
 19642  0056DC  69E8               	setf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 19643                           
 19644                           ; BSR set to: 2
 19645  0056DE  0012               	return	
 19646  0056E0                     __end_of_USBIncrement1msInternalTimers:
 19647                           	opt stack 0
 19648                           pclatu	equ	0xFFB
 19649                           pclath	equ	0xFFA
 19650                           tblptru	equ	0xFF8
 19651                           tblptrh	equ	0xFF7
 19652                           tblptrl	equ	0xFF6
 19653                           tablat	equ	0xFF5
 19654                           prodh	equ	0xFF4
 19655                           prodl	equ	0xFF3
 19656                           intcon	equ	0xFF2
 19657                           indf0	equ	0xFEF
 19658                           postinc0	equ	0xFEE
 19659                           fsr0h	equ	0xFEA
 19660                           fsr0l	equ	0xFE9
 19661                           wreg	equ	0xFE8
 19662                           indf1	equ	0xFE7
 19663                           postdec1	equ	0xFE5
 19664                           fsr1h	equ	0xFE2
 19665                           fsr1l	equ	0xFE1
 19666                           indf2	equ	0xFDF
 19667                           postinc2	equ	0xFDE
 19668                           postdec2	equ	0xFDD
 19669                           plusw2	equ	0xFDB
 19670                           fsr2h	equ	0xFDA
 19671                           fsr2l	equ	0xFD9
 19672                           status	equ	0xFD8
 19673                           
 19674 ;; *************** function _USBCtrlEPService *****************
 19675 ;; Defined at:
 19676 ;;		line 2372 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 19677 ;; Parameters:    Size  Location     Type
 19678 ;;		None
 19679 ;; Auto vars:     Size  Location     Type
 19680 ;;		None
 19681 ;; Return value:  Size  Location     Type
 19682 ;;                  1    wreg      void 
 19683 ;; Registers used:
 19684 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19685 ;; Tracked objects:
 19686 ;;		On entry : 0/0
 19687 ;;		On exit  : 0/0
 19688 ;;		Unchanged: 0/0
 19689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19690 ;;      Params:         0       0       0       0       0       0       0       0       0
 19691 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19692 ;;      Temps:          1       0       0       0       0       0       0       0       0
 19693 ;;      Totals:         1       0       0       0       0       0       0       0       0
 19694 ;;Total ram usage:        1 bytes
 19695 ;; Hardware stack levels used:    1
 19696 ;; Hardware stack levels required when called:    7
 19697 ;; This function calls:
 19698 ;;		_USBCtrlTrfInHandler
 19699 ;;		_USBCtrlTrfOutHandler
 19700 ;;		_USBCtrlTrfSetupHandler
 19701 ;;		_memcpy
 19702 ;; This function is called by:
 19703 ;;		_USBDeviceTasks
 19704 ;; This function uses a non-reentrant model
 19705 ;;
 19706                           
 19707                           	psect	text73
 19708  004746                     __ptext73:
 19709                           	opt stack 0
 19710  004746                     _USBCtrlEPService:
 19711                           	opt stack 16
 19712                           
 19713                           ;usb_device.c: 2378: USBStatusStageTimeoutCounter = (uint8_t)45;
 19714                           
 19715                           ;incstack = 0
 19716  004746  0E2D               	movlw	45
 19717  004748  6E54               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 19718                           
 19719                           ;usb_device.c: 2382: if((USTATcopy.Val & ~0x02) == 0x00)
 19720  00474A  C05D  F01B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 19721  00474E  0EFD               	movlw	253
 19722  004750  161B               	andwf	??_USBCtrlEPService,f,c
 19723  004752  A4D8               	btfss	status,2,c
 19724  004754  D03B               	goto	i2l550
 19725                           
 19726                           ;usb_device.c: 2383: {
 19727                           ;usb_device.c: 2386: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 19728  004756  C05D  F01B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 19729  00475A  90D8               	bcf	status,0,c
 19730  00475C  321B               	rrcf	??_USBCtrlEPService,f,c
 19731  00475E  0E3F               	movlw	63
 19732  004760  161B               	andwf	??_USBCtrlEPService,f,c
 19733  004762  501B               	movf	??_USBCtrlEPService,w,c
 19734  004764  0D04               	mullw	4
 19735  004766  0E00               	movlw	0
 19736  004768  24F3               	addwf	prodl,w,c
 19737  00476A  6E4E               	movwf	_pBDTEntryEP0OutCurrent,c
 19738  00476C  0E04               	movlw	4
 19739  00476E  20F4               	addwfc	prodh,w,c
 19740  004770  6E4F               	movwf	_pBDTEntryEP0OutCurrent+1,c
 19741                           
 19742                           ;usb_device.c: 2394: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 19743  004772  C04E  F04C         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 19744  004776  C04F  F04D         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 19745                           
 19746                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 19747  00477A  0E04               	movlw	4
 19748  00477C  184C               	xorwf	_pBDTEntryEP0OutNext,w,c
 19749  00477E  6E4C               	movwf	_pBDTEntryEP0OutNext,c
 19750  004780  504D               	movf	_pBDTEntryEP0OutNext+1,w,c
 19751  004782  6E4D               	movwf	_pBDTEntryEP0OutNext+1,c
 19752                           
 19753                           ;usb_device.c: 2399: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 19754  004784  C04E  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19755  004788  C04F  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19756  00478C  30DF               	rrcf	indf2,w,c
 19757  00478E  32E8               	rrcf	wreg,f,c
 19758  004790  0B0F               	andlw	15
 19759  004792  0A0D               	xorlw	13
 19760  004794  A4D8               	btfss	status,2,c
 19761  004796  D017               	goto	i2l551
 19762                           
 19763                           ;usb_device.c: 2400: {
 19764                           ;usb_device.c: 2405: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void *)(pBDTEntryEP0OutCurr
      +                          ent->ADR)), 8);
 19765  004798  0E30               	movlw	48
 19766  00479A  6E01               	movwf	memcpy@d1,c
 19767  00479C  0E04               	movlw	4
 19768  00479E  6E02               	movwf	memcpy@d1+1,c
 19769  0047A0  EE20 F002          	lfsr	2,2
 19770  0047A4  504E               	movf	_pBDTEntryEP0OutCurrent,w,c
 19771  0047A6  26D9               	addwf	fsr2l,f,c
 19772  0047A8  504F               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 19773  0047AA  22DA               	addwfc	fsr2h,f,c
 19774  0047AC  CFDE F003          	movff	postinc2,memcpy@s1
 19775  0047B0  CFDD F004          	movff	postdec2,memcpy@s1+1
 19776  0047B4  0E00               	movlw	0
 19777  0047B6  6E06               	movwf	memcpy@n+1,c
 19778  0047B8  0E08               	movlw	8
 19779  0047BA  6E05               	movwf	memcpy@n,c
 19780  0047BC  EC1D  F029         	call	_memcpy	;wreg free
 19781                           
 19782                           ;usb_device.c: 2408: USBCtrlTrfSetupHandler();
 19783  0047C0  ECEE  F023         	call	_USBCtrlTrfSetupHandler	;wreg free
 19784                           
 19785                           ;usb_device.c: 2409: }
 19786  0047C4  0012               	return	
 19787  0047C6                     i2l551:
 19788                           
 19789                           ;usb_device.c: 2410: else
 19790                           ;usb_device.c: 2411: {
 19791                           ;usb_device.c: 2413: USBCtrlTrfOutHandler();
 19792  0047C6  ECB7  F027         	call	_USBCtrlTrfOutHandler	;wreg free
 19793                           
 19794                           ;usb_device.c: 2414: }
 19795                           ;usb_device.c: 2415: }
 19796  0047CA  0012               	return	
 19797  0047CC                     i2l550:
 19798                           
 19799                           ;usb_device.c: 2416: else if((USTATcopy.Val & ~0x02) == 0x04)
 19800  0047CC  505D               	movf	_USTATcopy,w,c	;volatile
 19801  0047CE  0BFD               	andlw	253
 19802  0047D0  0A04               	xorlw	4
 19803  0047D2  A4D8               	btfss	status,2,c
 19804  0047D4  0012               	return	
 19805                           
 19806                           ;usb_device.c: 2417: {
 19807                           ;usb_device.c: 2420: USBCtrlTrfInHandler();
 19808  0047D6  EC44  F020         	call	_USBCtrlTrfInHandler	;wreg free
 19809  0047DA  0012               	return	
 19810  0047DC                     __end_of_USBCtrlEPService:
 19811                           	opt stack 0
 19812                           pclatu	equ	0xFFB
 19813                           pclath	equ	0xFFA
 19814                           tblptru	equ	0xFF8
 19815                           tblptrh	equ	0xFF7
 19816                           tblptrl	equ	0xFF6
 19817                           tablat	equ	0xFF5
 19818                           prodh	equ	0xFF4
 19819                           prodl	equ	0xFF3
 19820                           intcon	equ	0xFF2
 19821                           indf0	equ	0xFEF
 19822                           postinc0	equ	0xFEE
 19823                           fsr0h	equ	0xFEA
 19824                           fsr0l	equ	0xFE9
 19825                           wreg	equ	0xFE8
 19826                           indf1	equ	0xFE7
 19827                           postdec1	equ	0xFE5
 19828                           fsr1h	equ	0xFE2
 19829                           fsr1l	equ	0xFE1
 19830                           indf2	equ	0xFDF
 19831                           postinc2	equ	0xFDE
 19832                           postdec2	equ	0xFDD
 19833                           plusw2	equ	0xFDB
 19834                           fsr2h	equ	0xFDA
 19835                           fsr2l	equ	0xFD9
 19836                           status	equ	0xFD8
 19837                           
 19838 ;; *************** function _memcpy *****************
 19839 ;; Defined at:
 19840 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\memcpy.c"
 19841 ;; Parameters:    Size  Location     Type
 19842 ;;  d1              2    0[COMRAM] PTR void 
 19843 ;;		 -> receivePacket(100), response(100), SetupPkt(8), 
 19844 ;;  s1              2    2[COMRAM] PTR const void 
 19845 ;;		 -> recebeByte@frameData(100), CtrlTrfData(8), RAM(2047), SetupPkt(8), 
 19846 ;;  n               2    4[COMRAM] unsigned int 
 19847 ;; Auto vars:     Size  Location     Type
 19848 ;;  s               2    8[COMRAM] PTR const unsigned char 
 19849 ;;		 -> recebeByte@frameData(100), CtrlTrfData(8), RAM(2047), SetupPkt(8), 
 19850 ;;  d               2    6[COMRAM] PTR unsigned char 
 19851 ;;		 -> receivePacket(100), response(100), SetupPkt(8), 
 19852 ;;  tmp             1   10[COMRAM] unsigned char 
 19853 ;; Return value:  Size  Location     Type
 19854 ;;                  2    0[COMRAM] PTR void 
 19855 ;; Registers used:
 19856 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19857 ;; Tracked objects:
 19858 ;;		On entry : 0/0
 19859 ;;		On exit  : 0/0
 19860 ;;		Unchanged: 0/0
 19861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19862 ;;      Params:         6       0       0       0       0       0       0       0       0
 19863 ;;      Locals:         5       0       0       0       0       0       0       0       0
 19864 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19865 ;;      Totals:        11       0       0       0       0       0       0       0       0
 19866 ;;Total ram usage:       11 bytes
 19867 ;; Hardware stack levels used:    1
 19868 ;; This function calls:
 19869 ;;		Nothing
 19870 ;; This function is called by:
 19871 ;;		_USBCtrlEPService
 19872 ;;		_recebeByte
 19873 ;; This function uses a non-reentrant model
 19874 ;;
 19875                           
 19876                           	psect	text74
 19877  00523A                     __ptext74:
 19878                           	opt stack 0
 19879  00523A                     _memcpy:
 19880                           	opt stack 22
 19881                           
 19882                           ;incstack = 0
 19883  00523A  C003  F009         	movff	memcpy@s1,memcpy@s
 19884  00523E  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
 19885  005242  C001  F007         	movff	memcpy@d1,memcpy@d
 19886  005246  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
 19887  00524A  D010               	goto	i2l3063
 19888  00524C                     i2l8073:
 19889  00524C  C009  FFD9         	movff	memcpy@s,fsr2l
 19890  005250  C00A  FFDA         	movff	memcpy@s+1,fsr2h
 19891  005254  50DF               	movf	indf2,w,c
 19892  005256  6E0B               	movwf	memcpy@tmp,c
 19893  005258  4A09               	infsnz	memcpy@s,f,c
 19894  00525A  2A0A               	incf	memcpy@s+1,f,c
 19895  00525C  C007  FFD9         	movff	memcpy@d,fsr2l
 19896  005260  C008  FFDA         	movff	memcpy@d+1,fsr2h
 19897  005264  C00B  FFDF         	movff	memcpy@tmp,indf2
 19898  005268  4A07               	infsnz	memcpy@d,f,c
 19899  00526A  2A08               	incf	memcpy@d+1,f,c
 19900  00526C                     i2l3063:
 19901  00526C  0605               	decf	memcpy@n,f,c
 19902  00526E  A0D8               	btfss	status,0,c
 19903  005270  0606               	decf	memcpy@n+1,f,c
 19904  005272  2805               	incf	memcpy@n,w,c
 19905  005274  E1EB               	bnz	i2l8073
 19906  005276  2806               	incf	memcpy@n+1,w,c
 19907  005278  B4D8               	btfsc	status,2,c
 19908  00527A  0012               	return	
 19909  00527C  D7E7               	goto	i2l3064
 19910  00527E                     __end_of_memcpy:
 19911                           	opt stack 0
 19912                           pclatu	equ	0xFFB
 19913                           pclath	equ	0xFFA
 19914                           tblptru	equ	0xFF8
 19915                           tblptrh	equ	0xFF7
 19916                           tblptrl	equ	0xFF6
 19917                           tablat	equ	0xFF5
 19918                           prodh	equ	0xFF4
 19919                           prodl	equ	0xFF3
 19920                           intcon	equ	0xFF2
 19921                           indf0	equ	0xFEF
 19922                           postinc0	equ	0xFEE
 19923                           fsr0h	equ	0xFEA
 19924                           fsr0l	equ	0xFE9
 19925                           wreg	equ	0xFE8
 19926                           indf1	equ	0xFE7
 19927                           postdec1	equ	0xFE5
 19928                           fsr1h	equ	0xFE2
 19929                           fsr1l	equ	0xFE1
 19930                           indf2	equ	0xFDF
 19931                           postinc2	equ	0xFDE
 19932                           postdec2	equ	0xFDD
 19933                           plusw2	equ	0xFDB
 19934                           fsr2h	equ	0xFDA
 19935                           fsr2l	equ	0xFD9
 19936                           status	equ	0xFD8
 19937                           
 19938 ;; *************** function _USBCtrlTrfSetupHandler *****************
 19939 ;; Defined at:
 19940 ;;		line 2465 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 19941 ;; Parameters:    Size  Location     Type
 19942 ;;		None
 19943 ;; Auto vars:     Size  Location     Type
 19944 ;;		None
 19945 ;; Return value:  Size  Location     Type
 19946 ;;                  1    wreg      void 
 19947 ;; Registers used:
 19948 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19949 ;; Tracked objects:
 19950 ;;		On entry : 0/0
 19951 ;;		On exit  : 0/0
 19952 ;;		Unchanged: 0/0
 19953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19954 ;;      Params:         0       0       0       0       0       0       0       0       0
 19955 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19956 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19957 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19958 ;;Total ram usage:        0 bytes
 19959 ;; Hardware stack levels used:    1
 19960 ;; Hardware stack levels required when called:    6
 19961 ;; This function calls:
 19962 ;;		_USBCheckStdRequest
 19963 ;;		_USBCtrlEPServiceComplete
 19964 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 19965 ;; This function is called by:
 19966 ;;		_USBCtrlEPService
 19967 ;; This function uses a non-reentrant model
 19968 ;;
 19969                           
 19970                           	psect	text75
 19971  0047DC                     __ptext75:
 19972                           	opt stack 0
 19973  0047DC                     _USBCtrlTrfSetupHandler:
 19974                           	opt stack 16
 19975                           
 19976                           ;usb_device.c: 2470: shortPacketStatus = 0;
 19977                           
 19978                           ;incstack = 0
 19979  0047DC  0E00               	movlw	0
 19980  0047DE  6E57               	movwf	_shortPacketStatus,c	;volatile
 19981                           
 19982                           ;usb_device.c: 2471: USBDeferStatusStagePacket = 0;
 19983  0047E0  0E00               	movlw	0
 19984  0047E2  6E53               	movwf	_USBDeferStatusStagePacket,c	;volatile
 19985                           
 19986                           ;usb_device.c: 2472: USBDeferINDataStagePackets = 0;
 19987  0047E4  0E00               	movlw	0
 19988  0047E6  0102               	movlb	2	; () banked
 19989  0047E8  6FEA               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 19990                           
 19991                           ;usb_device.c: 2473: USBDeferOUTDataStagePackets = 0;
 19992  0047EA  0E00               	movlw	0
 19993  0047EC  6FE9               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 19994                           
 19995                           ;usb_device.c: 2474: BothEP0OutUOWNsSet = 0;
 19996  0047EE  0E00               	movlw	0
 19997  0047F0  0101               	movlb	1	; () banked
 19998  0047F2  6FFB               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 19999                           
 20000                           ;usb_device.c: 2475: controlTransferState = 0;
 20001  0047F4  0E00               	movlw	0
 20002  0047F6  6E56               	movwf	_controlTransferState,c	;volatile
 20003                           
 20004                           ; BSR set to: 1
 20005                           ;usb_device.c: 2484: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 20006  0047F8  C040  FFD9         	movff	_pBDTEntryIn,fsr2l
 20007  0047FC  C041  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20008  004800  0E7F               	movlw	127
 20009  004802  16DF               	andwf	indf2,f,c
 20010                           
 20011                           ; BSR set to: 1
 20012                           ;usb_device.c: 2486: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 20013  004804  0E04               	movlw	4
 20014  004806  1840               	xorwf	_pBDTEntryIn,w,c
 20015  004808  6E40               	movwf	_pBDTEntryIn,c
 20016  00480A  5041               	movf	_pBDTEntryIn+1,w,c
 20017  00480C  6E41               	movwf	_pBDTEntryIn+1,c
 20018                           
 20019                           ; BSR set to: 1
 20020                           ;usb_device.c: 2487: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 20021  00480E  C040  FFD9         	movff	_pBDTEntryIn,fsr2l
 20022  004812  C041  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20023  004816  0E7F               	movlw	127
 20024  004818  16DF               	andwf	indf2,f,c
 20025                           
 20026                           ; BSR set to: 1
 20027                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 20028  00481A  0E04               	movlw	4
 20029  00481C  1840               	xorwf	_pBDTEntryIn,w,c
 20030  00481E  6E40               	movwf	_pBDTEntryIn,c
 20031  004820  5041               	movf	_pBDTEntryIn+1,w,c
 20032  004822  6E41               	movwf	_pBDTEntryIn+1,c
 20033                           
 20034                           ; BSR set to: 1
 20035                           ;usb_device.c: 2489: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 20036  004824  C04C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20037  004828  C04D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20038  00482C  0E7F               	movlw	127
 20039  00482E  16DF               	andwf	indf2,f,c
 20040                           
 20041                           ; BSR set to: 1
 20042                           ;usb_device.c: 2491: inPipes[0].info.Val = 0;
 20043  004830  0E00               	movlw	0
 20044  004832  0100               	movlb	0	; () banked
 20045  004834  6FFD               	movwf	(_inPipes+3)& (0+255),b	;volatile
 20046                           
 20047                           ; BSR set to: 0
 20048                           ;usb_device.c: 2492: inPipes[0].wCount.Val = 0;
 20049  004836  0E00               	movlw	0
 20050  004838  6FFF               	movwf	(_inPipes+5)& (0+255),b	;volatile
 20051  00483A  0E00               	movlw	0
 20052  00483C  6FFE               	movwf	(_inPipes+4)& (0+255),b	;volatile
 20053                           
 20054                           ; BSR set to: 0
 20055                           ;usb_device.c: 2493: outPipes[0].info.Val = 0;
 20056  00483E  0E00               	movlw	0
 20057  004840  6E3B               	movwf	_outPipes+3,c	;volatile
 20058                           
 20059                           ; BSR set to: 0
 20060                           ;usb_device.c: 2494: outPipes[0].wCount.Val = 0;
 20061  004842  0E00               	movlw	0
 20062  004844  6E3D               	movwf	_outPipes+5,c	;volatile
 20063  004846  0E00               	movlw	0
 20064  004848  6E3C               	movwf	_outPipes+4,c	;volatile
 20065                           
 20066                           ; BSR set to: 0
 20067                           ;usb_device.c: 2500: USBCheckStdRequest();
 20068  00484A  EC27  F01E         	call	_USBCheckStdRequest	;wreg free
 20069                           
 20070                           ;usb_device.c: 2501: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 20071  00484E  0E00               	movlw	0
 20072  004850  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 20073  004852  0E03               	movlw	3
 20074  004854  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 20075  004856  0E00               	movlw	0
 20076  004858  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 20077  00485A  0E00               	movlw	0
 20078  00485C  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 20079  00485E  0E00               	movlw	0
 20080  004860  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 20081  004862  0E00               	movlw	0
 20082  004864  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 20083  004866  ECE6  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 20084                           
 20085                           ;usb_device.c: 2514: USBCtrlEPServiceComplete();
 20086  00486A  EC3E  F01C         	call	_USBCtrlEPServiceComplete	;wreg free
 20087  00486E  0012               	return		;funcret
 20088  004870                     __end_of_USBCtrlTrfSetupHandler:
 20089                           	opt stack 0
 20090                           pclatu	equ	0xFFB
 20091                           pclath	equ	0xFFA
 20092                           tblptru	equ	0xFF8
 20093                           tblptrh	equ	0xFF7
 20094                           tblptrl	equ	0xFF6
 20095                           tablat	equ	0xFF5
 20096                           prodh	equ	0xFF4
 20097                           prodl	equ	0xFF3
 20098                           intcon	equ	0xFF2
 20099                           indf0	equ	0xFEF
 20100                           postinc0	equ	0xFEE
 20101                           fsr0h	equ	0xFEA
 20102                           fsr0l	equ	0xFE9
 20103                           wreg	equ	0xFE8
 20104                           indf1	equ	0xFE7
 20105                           postdec1	equ	0xFE5
 20106                           fsr1h	equ	0xFE2
 20107                           fsr1l	equ	0xFE1
 20108                           indf2	equ	0xFDF
 20109                           postinc2	equ	0xFDE
 20110                           postdec2	equ	0xFDD
 20111                           plusw2	equ	0xFDB
 20112                           fsr2h	equ	0xFDA
 20113                           fsr2l	equ	0xFD9
 20114                           status	equ	0xFD8
 20115                           
 20116 ;; *************** function _USBCtrlEPServiceComplete *****************
 20117 ;; Defined at:
 20118 ;;		line 1616 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 20119 ;; Parameters:    Size  Location     Type
 20120 ;;		None
 20121 ;; Auto vars:     Size  Location     Type
 20122 ;;		None
 20123 ;; Return value:  Size  Location     Type
 20124 ;;                  1    wreg      void 
 20125 ;; Registers used:
 20126 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20127 ;; Tracked objects:
 20128 ;;		On entry : 0/0
 20129 ;;		On exit  : 0/0
 20130 ;;		Unchanged: 0/0
 20131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20132 ;;      Params:         0       0       0       0       0       0       0       0       0
 20133 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20134 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20135 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20136 ;;Total ram usage:        0 bytes
 20137 ;; Hardware stack levels used:    1
 20138 ;; Hardware stack levels required when called:    2
 20139 ;; This function calls:
 20140 ;;		_USBCtrlEPAllowDataStage
 20141 ;;		_USBCtrlEPAllowStatusStage
 20142 ;; This function is called by:
 20143 ;;		_USBCtrlTrfSetupHandler
 20144 ;; This function uses a non-reentrant model
 20145 ;;
 20146                           
 20147                           	psect	text76
 20148  00387C                     __ptext76:
 20149                           	opt stack 0
 20150  00387C                     _USBCtrlEPServiceComplete:
 20151                           	opt stack 19
 20152                           
 20153                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
 20154                           
 20155                           ;incstack = 0
 20156  00387C  986D               	bcf	3949,4,c	;volatile
 20157                           
 20158                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
 20159  00387E  0100               	movlb	0	; () banked
 20160  003880  BFFD               	btfsc	(_inPipes+3)& (0+255),7,b	;volatile
 20161  003882  D03A               	goto	i2l460
 20162                           
 20163                           ; BSR set to: 0
 20164                           ;usb_device.c: 1629: {
 20165                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
 20166  003884  AE3B               	btfss	_outPipes+3,7,c	;volatile
 20167  003886  D00D               	goto	i2l461
 20168                           
 20169                           ; BSR set to: 0
 20170                           ;usb_device.c: 1631: {
 20171                           ;usb_device.c: 1632: controlTransferState = 2;
 20172  003888  0E02               	movlw	2
 20173  00388A  6E56               	movwf	_controlTransferState,c	;volatile
 20174                           
 20175                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
 20176  00388C  0102               	movlb	2	; () banked
 20177  00388E  51E9               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 20178  003890  B4D8               	btfsc	status,2,c
 20179                           
 20180                           ; BSR set to: 2
 20181                           ;usb_device.c: 1644: {
 20182                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
 20183  003892  EC54  F023         	call	_USBCtrlEPAllowDataStage	;wreg free
 20184                           
 20185                           ;usb_device.c: 1646: }
 20186                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
 20187  003896  0E00               	movlw	0
 20188  003898  0102               	movlb	2	; () banked
 20189  00389A  6FEB               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 20190                           
 20191                           ; BSR set to: 2
 20192                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
 20193  00389C  0E00               	movlw	0
 20194  00389E  6FEC               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 20195                           
 20196                           ;usb_device.c: 1652: }
 20197  0038A0  0012               	return	
 20198  0038A2                     i2l461:
 20199                           
 20200                           ;usb_device.c: 1653: else
 20201                           ;usb_device.c: 1654: {
 20202                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
 20203                           
 20204                           ; BSR set to: 2
 20205  0038A2  EE20 F001          	lfsr	2,1
 20206  0038A6  504C               	movf	_pBDTEntryEP0OutNext,w,c
 20207  0038A8  26D9               	addwf	fsr2l,f,c
 20208  0038AA  504D               	movf	_pBDTEntryEP0OutNext+1,w,c
 20209  0038AC  22DA               	addwfc	fsr2h,f,c
 20210  0038AE  0E08               	movlw	8
 20211  0038B0  6EDF               	movwf	indf2,c
 20212                           
 20213                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 20214  0038B2  EE20 F002          	lfsr	2,2
 20215  0038B6  504C               	movf	_pBDTEntryEP0OutNext,w,c
 20216  0038B8  26D9               	addwf	fsr2l,f,c
 20217  0038BA  504D               	movf	_pBDTEntryEP0OutNext+1,w,c
 20218  0038BC  22DA               	addwfc	fsr2h,f,c
 20219  0038BE  0E30               	movlw	48
 20220  0038C0  6EDE               	movwf	postinc2,c
 20221  0038C2  0E04               	movlw	4
 20222  0038C4  6EDD               	movwf	postdec2,c
 20223                           
 20224                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 20225  0038C6  C04C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20226  0038CA  C04D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20227  0038CE  0E0C               	movlw	12
 20228  0038D0  6EDF               	movwf	indf2,c
 20229                           
 20230                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 20231  0038D2  C04C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20232  0038D6  C04D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20233  0038DA  0E00               	movlw	0
 20234  0038DC  8EDB               	bsf	plusw2,7,c
 20235                           
 20236                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
 20237  0038DE  C040  FFD9         	movff	_pBDTEntryIn,fsr2l
 20238  0038E2  C041  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20239  0038E6  0E04               	movlw	4
 20240  0038E8  6EDF               	movwf	indf2,c
 20241                           
 20242                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
 20243  0038EA  C040  FFD9         	movff	_pBDTEntryIn,fsr2l
 20244  0038EE  C041  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20245  0038F2  0E00               	movlw	0
 20246  0038F4  8EDB               	bsf	plusw2,7,c
 20247                           
 20248                           ;usb_device.c: 1665: }
 20249                           ;usb_device.c: 1666: }
 20250  0038F6  0012               	return	
 20251  0038F8                     i2l460:
 20252                           
 20253                           ; BSR set to: 0
 20254                           ;usb_device.c: 1667: else
 20255                           ;usb_device.c: 1668: {
 20256                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
 20257  0038F8  0104               	movlb	4	; () banked
 20258  0038FA  AF30               	btfss	48,7,b	;volatile
 20259  0038FC  D012               	goto	i2l465
 20260                           
 20261                           ; BSR set to: 4
 20262                           ;usb_device.c: 1670: {
 20263                           ;usb_device.c: 1671: controlTransferState = 1;
 20264  0038FE  0E01               	movlw	1
 20265  003900  6E56               	movwf	_controlTransferState,c	;volatile
 20266                           
 20267                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
 20268  003902  0102               	movlb	2	; () banked
 20269  003904  51EA               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 20270  003906  B4D8               	btfsc	status,2,c
 20271                           
 20272                           ; BSR set to: 2
 20273                           ;usb_device.c: 1686: {
 20274                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
 20275  003908  EC54  F023         	call	_USBCtrlEPAllowDataStage	;wreg free
 20276                           
 20277                           ;usb_device.c: 1688: }
 20278                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
 20279  00390C  0E00               	movlw	0
 20280  00390E  0102               	movlb	2	; () banked
 20281  003910  6FEB               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 20282                           
 20283                           ; BSR set to: 2
 20284                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
 20285  003912  0E00               	movlw	0
 20286  003914  6FEC               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 20287                           
 20288                           ; BSR set to: 2
 20289                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
 20290  003916  5053               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 20291  003918  A4D8               	btfss	status,2,c
 20292  00391A  0012               	return	
 20293                           
 20294                           ; BSR set to: 2
 20295                           ;usb_device.c: 1713: {
 20296                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
 20297  00391C  ECE1  F01F         	call	_USBCtrlEPAllowStatusStage	;wreg free
 20298                           
 20299                           ;usb_device.c: 1715: }
 20300                           ;usb_device.c: 1716: }
 20301  003920  0012               	return	
 20302  003922                     i2l465:
 20303                           
 20304                           ;usb_device.c: 1717: else
 20305                           ;usb_device.c: 1718: {
 20306                           ;usb_device.c: 1729: controlTransferState = 2;
 20307  003922  0E02               	movlw	2
 20308  003924  6E56               	movwf	_controlTransferState,c	;volatile
 20309                           
 20310                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
 20311  003926  EE20 F001          	lfsr	2,1
 20312  00392A  504C               	movf	_pBDTEntryEP0OutNext,w,c
 20313  00392C  26D9               	addwf	fsr2l,f,c
 20314  00392E  504D               	movf	_pBDTEntryEP0OutNext+1,w,c
 20315  003930  22DA               	addwfc	fsr2h,f,c
 20316  003932  0E08               	movlw	8
 20317  003934  6EDF               	movwf	indf2,c
 20318                           
 20319                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 20320  003936  EE20 F002          	lfsr	2,2
 20321  00393A  504C               	movf	_pBDTEntryEP0OutNext,w,c
 20322  00393C  26D9               	addwf	fsr2l,f,c
 20323  00393E  504D               	movf	_pBDTEntryEP0OutNext+1,w,c
 20324  003940  22DA               	addwfc	fsr2h,f,c
 20325  003942  0E30               	movlw	48
 20326  003944  6EDE               	movwf	postinc2,c
 20327  003946  0E04               	movlw	4
 20328  003948  6EDD               	movwf	postdec2,c
 20329                           
 20330                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 20331  00394A  C04C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20332  00394E  C04D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20333  003952  0E04               	movlw	4
 20334  003954  6EDF               	movwf	indf2,c
 20335                           
 20336                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 20337  003956  C04C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20338  00395A  C04D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20339  00395E  0E00               	movlw	0
 20340  003960  8EDB               	bsf	plusw2,7,c
 20341                           
 20342                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
 20343  003962  0E00               	movlw	0
 20344  003964  0102               	movlb	2	; () banked
 20345  003966  6FEB               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 20346                           
 20347                           ; BSR set to: 2
 20348                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
 20349  003968  0E00               	movlw	0
 20350  00396A  6FEC               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 20351                           
 20352                           ; BSR set to: 2
 20353                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
 20354  00396C  5053               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 20355  00396E  A4D8               	btfss	status,2,c
 20356  003970  0012               	return	
 20357                           
 20358                           ; BSR set to: 2
 20359                           ;usb_device.c: 1741: {
 20360                           ;usb_device.c: 1742: USBCtrlEPAllowStatusStage();
 20361  003972  ECE1  F01F         	call	_USBCtrlEPAllowStatusStage	;wreg free
 20362  003976  0012               	return	
 20363  003978                     __end_of_USBCtrlEPServiceComplete:
 20364                           	opt stack 0
 20365                           pclatu	equ	0xFFB
 20366                           pclath	equ	0xFFA
 20367                           tblptru	equ	0xFF8
 20368                           tblptrh	equ	0xFF7
 20369                           tblptrl	equ	0xFF6
 20370                           tablat	equ	0xFF5
 20371                           prodh	equ	0xFF4
 20372                           prodl	equ	0xFF3
 20373                           intcon	equ	0xFF2
 20374                           indf0	equ	0xFEF
 20375                           postinc0	equ	0xFEE
 20376                           fsr0h	equ	0xFEA
 20377                           fsr0l	equ	0xFE9
 20378                           wreg	equ	0xFE8
 20379                           indf1	equ	0xFE7
 20380                           postdec1	equ	0xFE5
 20381                           fsr1h	equ	0xFE2
 20382                           fsr1l	equ	0xFE1
 20383                           indf2	equ	0xFDF
 20384                           postinc2	equ	0xFDE
 20385                           postdec2	equ	0xFDD
 20386                           plusw2	equ	0xFDB
 20387                           fsr2h	equ	0xFDA
 20388                           fsr2l	equ	0xFD9
 20389                           status	equ	0xFD8
 20390                           
 20391 ;; *************** function _USBCtrlEPAllowDataStage *****************
 20392 ;; Defined at:
 20393 ;;		line 1488 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 20394 ;; Parameters:    Size  Location     Type
 20395 ;;		None
 20396 ;; Auto vars:     Size  Location     Type
 20397 ;;		None
 20398 ;; Return value:  Size  Location     Type
 20399 ;;                  1    wreg      void 
 20400 ;; Registers used:
 20401 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20402 ;; Tracked objects:
 20403 ;;		On entry : 0/0
 20404 ;;		On exit  : 0/0
 20405 ;;		Unchanged: 0/0
 20406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20407 ;;      Params:         0       0       0       0       0       0       0       0       0
 20408 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20409 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20410 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20411 ;;Total ram usage:        0 bytes
 20412 ;; Hardware stack levels used:    1
 20413 ;; Hardware stack levels required when called:    1
 20414 ;; This function calls:
 20415 ;;		_USBCtrlTrfTxService
 20416 ;; This function is called by:
 20417 ;;		_USBCtrlEPServiceComplete
 20418 ;; This function uses a non-reentrant model
 20419 ;;
 20420                           
 20421                           	psect	text77
 20422  0046A8                     __ptext77:
 20423                           	opt stack 0
 20424  0046A8                     _USBCtrlEPAllowDataStage:
 20425                           	opt stack 19
 20426                           
 20427                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
 20428                           
 20429                           ;incstack = 0
 20430  0046A8  0E00               	movlw	0
 20431  0046AA  0102               	movlb	2	; () banked
 20432  0046AC  6FEA               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 20433                           
 20434                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
 20435  0046AE  0E00               	movlw	0
 20436  0046B0  6FE9               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 20437                           
 20438                           ; BSR set to: 2
 20439                           ;usb_device.c: 1493: if(controlTransferState == 2)
 20440  0046B2  0E02               	movlw	2
 20441  0046B4  1856               	xorwf	_controlTransferState,w,c	;volatile
 20442  0046B6  A4D8               	btfss	status,2,c
 20443  0046B8  D01F               	goto	i2l449
 20444                           
 20445                           ; BSR set to: 2
 20446                           ;usb_device.c: 1494: {
 20447                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
 20448  0046BA  EE20 F001          	lfsr	2,1
 20449  0046BE  504C               	movf	_pBDTEntryEP0OutNext,w,c
 20450  0046C0  26D9               	addwf	fsr2l,f,c
 20451  0046C2  504D               	movf	_pBDTEntryEP0OutNext+1,w,c
 20452  0046C4  22DA               	addwfc	fsr2h,f,c
 20453  0046C6  0E08               	movlw	8
 20454  0046C8  6EDF               	movwf	indf2,c
 20455                           
 20456                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 20457  0046CA  EE20 F002          	lfsr	2,2
 20458  0046CE  504C               	movf	_pBDTEntryEP0OutNext,w,c
 20459  0046D0  26D9               	addwf	fsr2l,f,c
 20460  0046D2  504D               	movf	_pBDTEntryEP0OutNext+1,w,c
 20461  0046D4  22DA               	addwfc	fsr2h,f,c
 20462  0046D6  0E38               	movlw	56
 20463  0046D8  6EDE               	movwf	postinc2,c
 20464  0046DA  0E04               	movlw	4
 20465  0046DC  6EDD               	movwf	postdec2,c
 20466                           
 20467                           ; BSR set to: 2
 20468                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 20469  0046DE  C04C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20470  0046E2  C04D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20471  0046E6  0E48               	movlw	72
 20472  0046E8  6EDF               	movwf	indf2,c
 20473                           
 20474                           ; BSR set to: 2
 20475                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 20476  0046EA  C04C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20477  0046EE  C04D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20478  0046F2  0E00               	movlw	0
 20479  0046F4  8EDB               	bsf	plusw2,7,c
 20480                           
 20481                           ;usb_device.c: 1500: }
 20482  0046F6  0012               	return	
 20483  0046F8                     i2l449:
 20484                           
 20485                           ; BSR set to: 2
 20486                           ;usb_device.c: 1501: else
 20487                           ;usb_device.c: 1502: {
 20488                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 20489                           
 20490                           ; BSR set to: 2
 20491  0046F8  0100               	movlb	0	; () banked
 20492  0046FA  51FE               	movf	(_inPipes+4)& (0+255),w,b	;volatile
 20493  0046FC  0104               	movlb	4	; () banked
 20494  0046FE  5D36               	subwf	54,w,b	;volatile
 20495  004700  0100               	movlb	0	; () banked
 20496  004702  51FF               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 20497  004704  0104               	movlb	4	; () banked
 20498  004706  5937               	subwfb	55,w,b	;volatile
 20499  004708  B0D8               	btfsc	status,0,c
 20500  00470A  D004               	goto	i2l451
 20501                           
 20502                           ; BSR set to: 4
 20503                           ;usb_device.c: 1506: {
 20504                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
 20505  00470C  C436 F0FE          	movff	1078,_inPipes+4	;volatile
 20506  004710  C437 F0FF          	movff	1079,_inPipes+5	;volatile
 20507  004714                     i2l451:
 20508                           
 20509                           ; BSR set to: 4
 20510                           ;usb_device.c: 1508: }
 20511                           ;usb_device.c: 1509: USBCtrlTrfTxService();
 20512                           
 20513                           ; BSR set to: 4
 20514  004714  EC77  F01F         	call	_USBCtrlTrfTxService	;wreg free
 20515                           
 20516                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 20517  004718  EE20 F002          	lfsr	2,2
 20518  00471C  5040               	movf	_pBDTEntryIn,w,c
 20519  00471E  26D9               	addwf	fsr2l,f,c
 20520  004720  5041               	movf	_pBDTEntryIn+1,w,c
 20521  004722  22DA               	addwfc	fsr2h,f,c
 20522  004724  0E38               	movlw	56
 20523  004726  6EDE               	movwf	postinc2,c
 20524  004728  0E04               	movlw	4
 20525  00472A  6EDD               	movwf	postdec2,c
 20526                           
 20527                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 20528  00472C  C040  FFD9         	movff	_pBDTEntryIn,fsr2l
 20529  004730  C041  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20530  004734  0E48               	movlw	72
 20531  004736  6EDF               	movwf	indf2,c
 20532                           
 20533                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
 20534  004738  C040  FFD9         	movff	_pBDTEntryIn,fsr2l
 20535  00473C  C041  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20536  004740  0E00               	movlw	0
 20537  004742  8EDB               	bsf	plusw2,7,c
 20538  004744  0012               	return	
 20539  004746                     __end_of_USBCtrlEPAllowDataStage:
 20540                           	opt stack 0
 20541                           pclatu	equ	0xFFB
 20542                           pclath	equ	0xFFA
 20543                           tblptru	equ	0xFF8
 20544                           tblptrh	equ	0xFF7
 20545                           tblptrl	equ	0xFF6
 20546                           tablat	equ	0xFF5
 20547                           prodh	equ	0xFF4
 20548                           prodl	equ	0xFF3
 20549                           intcon	equ	0xFF2
 20550                           indf0	equ	0xFEF
 20551                           postinc0	equ	0xFEE
 20552                           fsr0h	equ	0xFEA
 20553                           fsr0l	equ	0xFE9
 20554                           wreg	equ	0xFE8
 20555                           indf1	equ	0xFE7
 20556                           postdec1	equ	0xFE5
 20557                           fsr1h	equ	0xFE2
 20558                           fsr1l	equ	0xFE1
 20559                           indf2	equ	0xFDF
 20560                           postinc2	equ	0xFDE
 20561                           postdec2	equ	0xFDD
 20562                           plusw2	equ	0xFDB
 20563                           fsr2h	equ	0xFDA
 20564                           fsr2l	equ	0xFD9
 20565                           status	equ	0xFD8
 20566                           
 20567 ;; *************** function _USBCheckStdRequest *****************
 20568 ;; Defined at:
 20569 ;;		line 2686 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 20570 ;; Parameters:    Size  Location     Type
 20571 ;;		None
 20572 ;; Auto vars:     Size  Location     Type
 20573 ;;		None
 20574 ;; Return value:  Size  Location     Type
 20575 ;;                  1    wreg      void 
 20576 ;; Registers used:
 20577 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20578 ;; Tracked objects:
 20579 ;;		On entry : 0/0
 20580 ;;		On exit  : 0/0
 20581 ;;		Unchanged: 0/0
 20582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20583 ;;      Params:         0       0       0       0       0       0       0       0       0
 20584 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20585 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20586 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20587 ;;Total ram usage:        0 bytes
 20588 ;; Hardware stack levels used:    1
 20589 ;; Hardware stack levels required when called:    5
 20590 ;; This function calls:
 20591 ;;		_USBStdFeatureReqHandler
 20592 ;;		_USBStdGetDscHandler
 20593 ;;		_USBStdGetStatusHandler
 20594 ;;		_USBStdSetCfgHandler
 20595 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 20596 ;; This function is called by:
 20597 ;;		_USBCtrlTrfSetupHandler
 20598 ;; This function uses a non-reentrant model
 20599 ;;
 20600                           
 20601                           	psect	text78
 20602  003C4E                     __ptext78:
 20603                           	opt stack 0
 20604  003C4E                     _USBCheckStdRequest:
 20605                           	opt stack 16
 20606                           
 20607                           ;usb_device.c: 2688: if(SetupPkt.RequestType != (0x00>>5)) return;
 20608                           
 20609                           ;incstack = 0
 20610  003C4E  0104               	movlb	4	; () banked
 20611  003C50  3930               	swapf	48,w,b	;volatile
 20612  003C52  32E8               	rrcf	wreg,f,c
 20613  003C54  0B03               	andlw	3
 20614  003C56  0900               	iorlw	0
 20615  003C58  A4D8               	btfss	status,2,c
 20616  003C5A  0012               	return	
 20617  003C5C  D047               	goto	i2l584
 20618  003C5E                     i2l585:
 20619                           
 20620                           ; BSR set to: 4
 20621                           ;usb_device.c: 2693: inPipes[0].info.bits.busy = 1;
 20622  003C5E  0100               	movlb	0	; () banked
 20623  003C60  8FFD               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 20624                           
 20625                           ; BSR set to: 0
 20626                           ;usb_device.c: 2694: USBDeviceState = ADR_PENDING_STATE;
 20627  003C62  0E08               	movlw	8
 20628  003C64  6E58               	movwf	_USBDeviceState,c	;volatile
 20629                           
 20630                           ;usb_device.c: 2696: break;
 20631  003C66  0012               	return	
 20632  003C68                     
 20633                           ;usb_device.c: 2698: USBStdGetDscHandler();
 20634                           
 20635                           ; BSR set to: 0
 20636  003C68  EC70  F018         	call	_USBStdGetDscHandler	;wreg free
 20637                           
 20638                           ;usb_device.c: 2699: break;
 20639  003C6C  0012               	return	
 20640  003C6E                     
 20641                           ;usb_device.c: 2701: USBStdSetCfgHandler();
 20642  003C6E  EC08  F01F         	call	_USBStdSetCfgHandler	;wreg free
 20643                           
 20644                           ;usb_device.c: 2702: break;
 20645  003C72  0012               	return	
 20646  003C74                     
 20647                           ;usb_device.c: 2704: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 20648  003C74  0E5E               	movlw	low _USBActiveConfiguration
 20649  003C76  0100               	movlb	0	; () banked
 20650  003C78  6FFA               	movwf	_inPipes& (0+255),b	;volatile
 20651  003C7A  0E00               	movlw	high _USBActiveConfiguration
 20652  003C7C  6FFB               	movwf	(_inPipes+1)& (0+255),b	;volatile
 20653                           
 20654                           ; BSR set to: 0
 20655                           ;usb_device.c: 2705: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 20656  003C7E  81FD               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 20657                           
 20658                           ; BSR set to: 0
 20659                           ;usb_device.c: 2706: inPipes[0].wCount.v[0] = 1;
 20660  003C80  0E01               	movlw	1
 20661  003C82  6FFE               	movwf	(_inPipes+4)& (0+255),b	;volatile
 20662                           
 20663                           ; BSR set to: 0
 20664                           ;usb_device.c: 2707: inPipes[0].info.bits.busy = 1;
 20665  003C84  8FFD               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 20666                           
 20667                           ;usb_device.c: 2708: break;
 20668  003C86  0012               	return	
 20669  003C88                     
 20670                           ;usb_device.c: 2710: USBStdGetStatusHandler();
 20671                           
 20672                           ; BSR set to: 0
 20673  003C88  ECAF  F022         	call	_USBStdGetStatusHandler	;wreg free
 20674                           
 20675                           ;usb_device.c: 2711: break;
 20676  003C8C  0012               	return	
 20677  003C8E                     
 20678                           ;usb_device.c: 2713: case 3:
 20679                           ;usb_device.c: 2714: USBStdFeatureReqHandler();
 20680  003C8E  EC2A  F010         	call	_USBStdFeatureReqHandler	;wreg free
 20681                           
 20682                           ;usb_device.c: 2715: break;
 20683  003C92  0012               	return	
 20684  003C94                     
 20685                           ;usb_device.c: 2717: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 20686  003C94  0104               	movlb	4	; () banked
 20687  003C96  5134               	movf	52,w,b	;volatile
 20688  003C98  0D01               	mullw	1
 20689  003C9A  0EFC               	movlw	low _USBAlternateInterface
 20690  003C9C  24F3               	addwf	prodl,w,c
 20691  003C9E  0100               	movlb	0	; () banked
 20692  003CA0  6FFA               	movwf	_inPipes& (0+255),b	;volatile
 20693  003CA2  0E02               	movlw	high _USBAlternateInterface
 20694  003CA4  20F4               	addwfc	prodh,w,c
 20695  003CA6  6FFB               	movwf	(_inPipes+1)& (0+255),b	;volatile
 20696                           
 20697                           ; BSR set to: 0
 20698                           ;usb_device.c: 2718: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 20699  003CA8  81FD               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 20700                           
 20701                           ; BSR set to: 0
 20702                           ;usb_device.c: 2719: inPipes[0].wCount.v[0] = 1;
 20703  003CAA  0E01               	movlw	1
 20704  003CAC  6FFE               	movwf	(_inPipes+4)& (0+255),b	;volatile
 20705                           
 20706                           ; BSR set to: 0
 20707                           ;usb_device.c: 2720: inPipes[0].info.bits.busy = 1;
 20708  003CAE  8FFD               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 20709                           
 20710                           ;usb_device.c: 2721: break;
 20711  003CB0  0012               	return	
 20712  003CB2                     i2l594:
 20713                           
 20714                           ; BSR set to: 4
 20715                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
 20716  003CB2  0100               	movlb	0	; () banked
 20717  003CB4  8FFD               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 20718                           
 20719                           ; BSR set to: 0
 20720                           ;usb_device.c: 2724: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 20721  003CB6  0104               	movlb	4	; () banked
 20722  003CB8  5134               	movf	52,w,b	;volatile
 20723  003CBA  0D01               	mullw	1
 20724  003CBC  0EFC               	movlw	low _USBAlternateInterface
 20725  003CBE  24F3               	addwf	prodl,w,c
 20726  003CC0  6ED9               	movwf	fsr2l,c
 20727  003CC2  0E02               	movlw	high _USBAlternateInterface
 20728  003CC4  20F4               	addwfc	prodh,w,c
 20729  003CC6  6EDA               	movwf	fsr2h,c
 20730  003CC8  C432 FFDF          	movff	1074,indf2	;volatile
 20731                           
 20732                           ;usb_device.c: 2725: break;
 20733  003CCC  0012               	return	
 20734  003CCE                     
 20735                           ; BSR set to: 4
 20736                           ;usb_device.c: 2727: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 20737                           
 20738                           ; BSR set to: 4
 20739  003CCE  0E00               	movlw	0
 20740  003CD0  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 20741  003CD2  0E02               	movlw	2
 20742  003CD4  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 20743  003CD6  0E00               	movlw	0
 20744  003CD8  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 20745  003CDA  0E00               	movlw	0
 20746  003CDC  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 20747  003CDE  0E00               	movlw	0
 20748  003CE0  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 20749  003CE2  0E00               	movlw	0
 20750  003CE4  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 20751  003CE6  ECE6  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 20752                           
 20753                           ;usb_device.c: 2732: }
 20754                           
 20755                           ;usb_device.c: 2731: break;
 20756                           
 20757                           ;usb_device.c: 2730: default:
 20758                           
 20759                           ;usb_device.c: 2729: case 12:
 20760                           
 20761                           ;usb_device.c: 2728: break;
 20762  003CEA  0012               	return	
 20763  003CEC                     i2l584:
 20764  003CEC  0104               	movlb	4	; () banked
 20765  003CEE  5131               	movf	49,w,b	;volatile
 20766                           
 20767                           ; Switch size 1, requested type "space"
 20768                           ; Number of cases is 11, Range of values is 0 to 12
 20769                           ; switch strategies available:
 20770                           ; Name         Instructions Cycles
 20771                           ; simple_byte           34    18 (average)
 20772                           ;	Chosen strategy is simple_byte
 20773  003CF0  0A00               	xorlw	0	; case 0
 20774  003CF2  B4D8               	btfsc	status,2,c
 20775  003CF4  D7C9               	goto	i2l590
 20776  003CF6  0A01               	xorlw	1	; case 1
 20777  003CF8  B4D8               	btfsc	status,2,c
 20778  003CFA  D7C9               	goto	i2l591
 20779  003CFC  0A02               	xorlw	2	; case 3
 20780  003CFE  B4D8               	btfsc	status,2,c
 20781  003D00  D7C6               	goto	i2l591
 20782  003D02  0A06               	xorlw	6	; case 5
 20783  003D04  B4D8               	btfsc	status,2,c
 20784  003D06  D7AB               	goto	i2l585
 20785  003D08  0A03               	xorlw	3	; case 6
 20786  003D0A  B4D8               	btfsc	status,2,c
 20787  003D0C  D7AD               	goto	i2l587
 20788  003D0E  0A01               	xorlw	1	; case 7
 20789  003D10  B4D8               	btfsc	status,2,c
 20790  003D12  D7DD               	goto	i2l595
 20791  003D14  0A0F               	xorlw	15	; case 8
 20792  003D16  B4D8               	btfsc	status,2,c
 20793  003D18  D7AD               	goto	i2l589
 20794  003D1A  0A01               	xorlw	1	; case 9
 20795  003D1C  B4D8               	btfsc	status,2,c
 20796  003D1E  D7A7               	goto	i2l588
 20797  003D20  0A03               	xorlw	3	; case 10
 20798  003D22  B4D8               	btfsc	status,2,c
 20799  003D24  D7B7               	goto	i2l593
 20800  003D26  0A01               	xorlw	1	; case 11
 20801  003D28  B4D8               	btfsc	status,2,c
 20802  003D2A  D7C3               	goto	i2l594
 20803  003D2C  0A07               	xorlw	7	; case 12
 20804  003D2E  0012               	return	
 20805  003D30                     __end_of_USBCheckStdRequest:
 20806                           	opt stack 0
 20807                           pclatu	equ	0xFFB
 20808                           pclath	equ	0xFFA
 20809                           tblptru	equ	0xFF8
 20810                           tblptrh	equ	0xFF7
 20811                           tblptrl	equ	0xFF6
 20812                           tablat	equ	0xFF5
 20813                           prodh	equ	0xFF4
 20814                           prodl	equ	0xFF3
 20815                           intcon	equ	0xFF2
 20816                           indf0	equ	0xFEF
 20817                           postinc0	equ	0xFEE
 20818                           fsr0h	equ	0xFEA
 20819                           fsr0l	equ	0xFE9
 20820                           wreg	equ	0xFE8
 20821                           indf1	equ	0xFE7
 20822                           postdec1	equ	0xFE5
 20823                           fsr1h	equ	0xFE2
 20824                           fsr1l	equ	0xFE1
 20825                           indf2	equ	0xFDF
 20826                           postinc2	equ	0xFDE
 20827                           postdec2	equ	0xFDD
 20828                           plusw2	equ	0xFDB
 20829                           fsr2h	equ	0xFDA
 20830                           fsr2l	equ	0xFD9
 20831                           status	equ	0xFD8
 20832                           
 20833 ;; *************** function _USBStdSetCfgHandler *****************
 20834 ;; Defined at:
 20835 ;;		line 1968 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 20836 ;; Parameters:    Size  Location     Type
 20837 ;;		None
 20838 ;; Auto vars:     Size  Location     Type
 20839 ;;  i               1   20[COMRAM] unsigned char 
 20840 ;; Return value:  Size  Location     Type
 20841 ;;                  1    wreg      void 
 20842 ;; Registers used:
 20843 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20844 ;; Tracked objects:
 20845 ;;		On entry : 0/0
 20846 ;;		On exit  : 0/0
 20847 ;;		Unchanged: 0/0
 20848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20849 ;;      Params:         0       0       0       0       0       0       0       0       0
 20850 ;;      Locals:         1       0       0       0       0       0       0       0       0
 20851 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20852 ;;      Totals:         1       0       0       0       0       0       0       0       0
 20853 ;;Total ram usage:        1 bytes
 20854 ;; Hardware stack levels used:    1
 20855 ;; Hardware stack levels required when called:    4
 20856 ;; This function calls:
 20857 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 20858 ;;		i2_memset
 20859 ;; This function is called by:
 20860 ;;		_USBCheckStdRequest
 20861 ;; This function uses a non-reentrant model
 20862 ;;
 20863                           
 20864                           	psect	text79
 20865  003E10                     __ptext79:
 20866                           	opt stack 0
 20867  003E10                     _USBStdSetCfgHandler:
 20868                           	opt stack 16
 20869                           
 20870                           ;usb_device.c: 1970: uint8_t i;
 20871                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
 20872                           
 20873                           ;incstack = 0
 20874  003E10  0100               	movlb	0	; () banked
 20875  003E12  8FFD               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 20876                           
 20877                           ; BSR set to: 0
 20878                           ;usb_device.c: 1976: memset((void*)&UEP1,0x00,(2));;
 20879  003E14  0E71               	movlw	113
 20880  003E16  6E01               	movwf	i2memset@p1,c
 20881  003E18  0E0F               	movlw	15
 20882  003E1A  6E02               	movwf	i2memset@p1+1,c
 20883  003E1C  0E00               	movlw	0
 20884  003E1E  6E04               	movwf	i2memset@c+1,c
 20885  003E20  0E00               	movlw	0
 20886  003E22  6E03               	movwf	i2memset@c,c
 20887  003E24  0E00               	movlw	0
 20888  003E26  6E06               	movwf	i2memset@n+1,c
 20889  003E28  0E02               	movlw	2
 20890  003E2A  6E05               	movwf	i2memset@n,c
 20891  003E2C  ECE8  F02A         	call	i2_memset	;wreg free
 20892                           
 20893                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 20894  003E30  0E00               	movlw	0
 20895  003E32  6E01               	movwf	i2memset@p1,c
 20896  003E34  0E04               	movlw	4
 20897  003E36  6E02               	movwf	i2memset@p1+1,c
 20898  003E38  0E00               	movlw	0
 20899  003E3A  6E04               	movwf	i2memset@c+1,c
 20900  003E3C  0E00               	movlw	0
 20901  003E3E  6E03               	movwf	i2memset@c,c
 20902  003E40  0E00               	movlw	0
 20903  003E42  6E06               	movwf	i2memset@n+1,c
 20904  003E44  0E30               	movlw	48
 20905  003E46  6E05               	movwf	i2memset@n,c
 20906  003E48  ECE8  F02A         	call	i2_memset	;wreg free
 20907                           
 20908                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
 20909  003E4C  8C6D               	bsf	3949,6,c	;volatile
 20910                           
 20911                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
 20912  003E4E  0E00               	movlw	0
 20913  003E50  6E15               	movwf	USBStdSetCfgHandler@i,c
 20914  003E52                     i2l7433:
 20915  003E52  0E02               	movlw	2
 20916  003E54  6415               	cpfsgt	USBStdSetCfgHandler@i,c
 20917  003E56  D001               	goto	i2l501
 20918  003E58  D016               	goto	i2u583_40
 20919  003E5A                     i2l501:
 20920                           
 20921                           ;usb_device.c: 1988: {
 20922                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
 20923  003E5A  5015               	movf	USBStdSetCfgHandler@i,w,c
 20924  003E5C  0D01               	mullw	1
 20925  003E5E  0ED5               	movlw	low _ep_data_in
 20926  003E60  24F3               	addwf	prodl,w,c
 20927  003E62  6ED9               	movwf	fsr2l,c
 20928  003E64  0E02               	movlw	high _ep_data_in
 20929  003E66  20F4               	addwfc	prodh,w,c
 20930  003E68  6EDA               	movwf	fsr2h,c
 20931  003E6A  0E00               	movlw	0
 20932  003E6C  6EDF               	movwf	indf2,c
 20933                           
 20934                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
 20935  003E6E  5015               	movf	USBStdSetCfgHandler@i,w,c
 20936  003E70  0D01               	mullw	1
 20937  003E72  0ED2               	movlw	low _ep_data_out
 20938  003E74  24F3               	addwf	prodl,w,c
 20939  003E76  6ED9               	movwf	fsr2l,c
 20940  003E78  0E02               	movlw	high _ep_data_out
 20941  003E7A  20F4               	addwfc	prodh,w,c
 20942  003E7C  6EDA               	movwf	fsr2h,c
 20943  003E7E  0E00               	movlw	0
 20944  003E80  6EDF               	movwf	indf2,c
 20945  003E82  2A15               	incf	USBStdSetCfgHandler@i,f,c
 20946  003E84  D7E6               	goto	i2l7433
 20947  003E86                     i2u583_40:
 20948                           
 20949                           ;usb_device.c: 1991: }
 20950                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
 20951  003E86  0EFC               	movlw	low _USBAlternateInterface
 20952  003E88  6E01               	movwf	i2memset@p1,c
 20953  003E8A  0E02               	movlw	high _USBAlternateInterface
 20954  003E8C  6E02               	movwf	i2memset@p1+1,c
 20955  003E8E  0E00               	movlw	0
 20956  003E90  6E04               	movwf	i2memset@c+1,c
 20957  003E92  0E00               	movlw	0
 20958  003E94  6E03               	movwf	i2memset@c,c
 20959  003E96  0E00               	movlw	0
 20960  003E98  6E06               	movwf	i2memset@n+1,c
 20961  003E9A  0E02               	movlw	2
 20962  003E9C  6E05               	movwf	i2memset@n,c
 20963  003E9E  ECE8  F02A         	call	i2_memset	;wreg free
 20964                           
 20965                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
 20966  003EA2  9C6D               	bcf	3949,6,c	;volatile
 20967                           
 20968                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 20969  003EA4  0E08               	movlw	8
 20970  003EA6  6E40               	movwf	_pBDTEntryIn,c
 20971  003EA8  0E04               	movlw	4
 20972  003EAA  6E41               	movwf	_pBDTEntryIn+1,c
 20973                           
 20974                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 20975  003EAC  0E00               	movlw	0
 20976  003EAE  6E4E               	movwf	_pBDTEntryEP0OutCurrent,c
 20977  003EB0  0E04               	movlw	4
 20978  003EB2  6E4F               	movwf	_pBDTEntryEP0OutCurrent+1,c
 20979                           
 20980                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 20981  003EB4  C04E  F04C         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 20982  003EB8  C04F  F04D         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 20983                           
 20984                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 20985  003EBC  C432 F05E          	movff	1074,_USBActiveConfiguration	;volatile
 20986                           
 20987                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
 20988  003EC0  505E               	movf	_USBActiveConfiguration,w,c	;volatile
 20989  003EC2  A4D8               	btfss	status,2,c
 20990  003EC4  D003               	goto	i2l503
 20991                           
 20992                           ;usb_device.c: 2010: {
 20993                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
 20994  003EC6  0E10               	movlw	16
 20995  003EC8  6E58               	movwf	_USBDeviceState,c	;volatile
 20996                           
 20997                           ;usb_device.c: 2013: }
 20998  003ECA  0012               	return	
 20999  003ECC                     i2l503:
 21000                           
 21001                           ;usb_device.c: 2014: else
 21002                           ;usb_device.c: 2015: {
 21003                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 21004  003ECC  0E00               	movlw	0
 21005  003ECE  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 21006  003ED0  0E01               	movlw	1
 21007  003ED2  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 21008  003ED4  0E5E               	movlw	low _USBActiveConfiguration
 21009  003ED6  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 21010  003ED8  0E00               	movlw	high _USBActiveConfiguration
 21011  003EDA  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 21012  003EDC  0E00               	movlw	0
 21013  003EDE  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 21014  003EE0  0E01               	movlw	1
 21015  003EE2  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 21016  003EE4  ECE6  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 21017                           
 21018                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
 21019  003EE8  0E20               	movlw	32
 21020  003EEA  6E58               	movwf	_USBDeviceState,c	;volatile
 21021  003EEC  0012               	return	
 21022  003EEE                     __end_of_USBStdSetCfgHandler:
 21023                           	opt stack 0
 21024                           pclatu	equ	0xFFB
 21025                           pclath	equ	0xFFA
 21026                           tblptru	equ	0xFF8
 21027                           tblptrh	equ	0xFF7
 21028                           tblptrl	equ	0xFF6
 21029                           tablat	equ	0xFF5
 21030                           prodh	equ	0xFF4
 21031                           prodl	equ	0xFF3
 21032                           intcon	equ	0xFF2
 21033                           indf0	equ	0xFEF
 21034                           postinc0	equ	0xFEE
 21035                           fsr0h	equ	0xFEA
 21036                           fsr0l	equ	0xFE9
 21037                           wreg	equ	0xFE8
 21038                           indf1	equ	0xFE7
 21039                           postdec1	equ	0xFE5
 21040                           fsr1h	equ	0xFE2
 21041                           fsr1l	equ	0xFE1
 21042                           indf2	equ	0xFDF
 21043                           postinc2	equ	0xFDE
 21044                           postdec2	equ	0xFDD
 21045                           plusw2	equ	0xFDB
 21046                           fsr2h	equ	0xFDA
 21047                           fsr2l	equ	0xFD9
 21048                           status	equ	0xFD8
 21049                           
 21050 ;; *************** function i2_memset *****************
 21051 ;; Defined at:
 21052 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\memset.c"
 21053 ;; Parameters:    Size  Location     Type
 21054 ;;  p1              2    0[COMRAM] PTR void 
 21055 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 21056 ;;  c               2    2[COMRAM] int 
 21057 ;;  n               2    4[COMRAM] unsigned int 
 21058 ;; Auto vars:     Size  Location     Type
 21059 ;;  memset          2    6[COMRAM] PTR unsigned char 
 21060 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 21061 ;; Return value:  Size  Location     Type
 21062 ;;                  2    0[COMRAM] PTR void 
 21063 ;; Registers used:
 21064 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21065 ;; Tracked objects:
 21066 ;;		On entry : 0/0
 21067 ;;		On exit  : 0/0
 21068 ;;		Unchanged: 0/0
 21069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21070 ;;      Params:         6       0       0       0       0       0       0       0       0
 21071 ;;      Locals:         2       0       0       0       0       0       0       0       0
 21072 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21073 ;;      Totals:         8       0       0       0       0       0       0       0       0
 21074 ;;Total ram usage:        8 bytes
 21075 ;; Hardware stack levels used:    1
 21076 ;; This function calls:
 21077 ;;		Nothing
 21078 ;; This function is called by:
 21079 ;;		_USBStdSetCfgHandler
 21080 ;;		i2_USBDeviceInit
 21081 ;; This function uses a non-reentrant model
 21082 ;;
 21083                           
 21084                           	psect	text80
 21085  0055D0                     __ptext80:
 21086                           	opt stack 0
 21087  0055D0                     i2_memset:
 21088                           	opt stack 22
 21089                           
 21090                           ;incstack = 0
 21091  0055D0  C001  F007         	movff	i2memset@p1,i2memset@p
 21092  0055D4  C002  F008         	movff	i2memset@p1+1,i2memset@p+1
 21093  0055D8  D008               	goto	i2l3069
 21094  0055DA                     i2l7363:
 21095  0055DA  C007  FFD9         	movff	i2memset@p,fsr2l
 21096  0055DE  C008  FFDA         	movff	i2memset@p+1,fsr2h
 21097  0055E2  C003  FFDF         	movff	i2memset@c,indf2
 21098  0055E6  4A07               	infsnz	i2memset@p,f,c
 21099  0055E8  2A08               	incf	i2memset@p+1,f,c
 21100  0055EA                     i2l3069:
 21101  0055EA  0605               	decf	i2memset@n,f,c
 21102  0055EC  A0D8               	btfss	status,0,c
 21103  0055EE  0606               	decf	i2memset@n+1,f,c
 21104  0055F0  2805               	incf	i2memset@n,w,c
 21105  0055F2  E1F3               	bnz	i2l7363
 21106  0055F4  2806               	incf	i2memset@n+1,w,c
 21107  0055F6  B4D8               	btfsc	status,2,c
 21108  0055F8  0012               	return	
 21109  0055FA  D7EF               	goto	i2l3070
 21110  0055FC                     __end_ofi2_memset:
 21111                           	opt stack 0
 21112                           pclatu	equ	0xFFB
 21113                           pclath	equ	0xFFA
 21114                           tblptru	equ	0xFF8
 21115                           tblptrh	equ	0xFF7
 21116                           tblptrl	equ	0xFF6
 21117                           tablat	equ	0xFF5
 21118                           prodh	equ	0xFF4
 21119                           prodl	equ	0xFF3
 21120                           intcon	equ	0xFF2
 21121                           indf0	equ	0xFEF
 21122                           postinc0	equ	0xFEE
 21123                           fsr0h	equ	0xFEA
 21124                           fsr0l	equ	0xFE9
 21125                           wreg	equ	0xFE8
 21126                           indf1	equ	0xFE7
 21127                           postdec1	equ	0xFE5
 21128                           fsr1h	equ	0xFE2
 21129                           fsr1l	equ	0xFE1
 21130                           indf2	equ	0xFDF
 21131                           postinc2	equ	0xFDE
 21132                           postdec2	equ	0xFDD
 21133                           plusw2	equ	0xFDB
 21134                           fsr2h	equ	0xFDA
 21135                           fsr2l	equ	0xFD9
 21136                           status	equ	0xFD8
 21137                           
 21138 ;; *************** function _USBStdGetStatusHandler *****************
 21139 ;; Defined at:
 21140 ;;		line 2129 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 21141 ;; Parameters:    Size  Location     Type
 21142 ;;		None
 21143 ;; Auto vars:     Size  Location     Type
 21144 ;;  p               2    1[COMRAM] PTR struct __BDT
 21145 ;;		 -> RAM(2047), NULL(0), BDT(48), 
 21146 ;; Return value:  Size  Location     Type
 21147 ;;                  1    wreg      void 
 21148 ;; Registers used:
 21149 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21150 ;; Tracked objects:
 21151 ;;		On entry : 0/0
 21152 ;;		On exit  : 0/0
 21153 ;;		Unchanged: 0/0
 21154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21155 ;;      Params:         0       0       0       0       0       0       0       0       0
 21156 ;;      Locals:         2       0       0       0       0       0       0       0       0
 21157 ;;      Temps:          1       0       0       0       0       0       0       0       0
 21158 ;;      Totals:         3       0       0       0       0       0       0       0       0
 21159 ;;Total ram usage:        3 bytes
 21160 ;; Hardware stack levels used:    1
 21161 ;; This function calls:
 21162 ;;		Nothing
 21163 ;; This function is called by:
 21164 ;;		_USBCheckStdRequest
 21165 ;; This function uses a non-reentrant model
 21166 ;;
 21167                           
 21168                           	psect	text81
 21169  00455E                     __ptext81:
 21170                           	opt stack 0
 21171  00455E                     _USBStdGetStatusHandler:
 21172                           	opt stack 20
 21173                           
 21174                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
 21175                           
 21176                           ;incstack = 0
 21177  00455E  0E00               	movlw	0
 21178  004560  0104               	movlb	4	; () banked
 21179  004562  6F38               	movwf	56,b	;volatile
 21180                           
 21181                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
 21182  004564  0E00               	movlw	0
 21183  004566  6F39               	movwf	57,b	;volatile
 21184                           
 21185                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
 21186  004568  D039               	goto	i2l522
 21187  00456A                     i2l523:
 21188                           
 21189                           ; BSR set to: 4
 21190                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
 21191  00456A  0100               	movlb	0	; () banked
 21192  00456C  8FFD               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 21193                           
 21194                           ;usb_device.c: 2145: }
 21195                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
 21196                           
 21197                           ; BSR set to: 4
 21198                           
 21199                           ; BSR set to: 0
 21200                           ;usb_device.c: 2143: {
 21201                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
 21202                           
 21203                           ;usb_device.c: 2142: if(0 == 1)
 21204  00456E  0101               	movlb	1	; () banked
 21205  004570  05FD               	decf	_RemoteWakeup& (0+255),w,b	;volatile
 21206  004572  A4D8               	btfss	status,2,c
 21207  004574  D03E               	goto	i2l526
 21208                           
 21209                           ; BSR set to: 1
 21210                           ;usb_device.c: 2148: {
 21211                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
 21212  004576  0104               	movlb	4	; () banked
 21213  004578  8338               	bsf	56,1,b	;volatile
 21214                           
 21215                           ; BSR set to: 4
 21216                           ;usb_device.c: 2150: }
 21217                           ;usb_device.c: 2151: break;
 21218  00457A  D03B               	goto	i2l526
 21219  00457C                     i2l527:
 21220                           
 21221                           ; BSR set to: 4
 21222                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
 21223  00457C  0100               	movlb	0	; () banked
 21224  00457E  8FFD               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 21225                           
 21226                           ;usb_device.c: 2154: break;
 21227  004580  D038               	goto	i2l526
 21228  004582                     i2l528:
 21229                           
 21230                           ; BSR set to: 4
 21231                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
 21232  004582  0100               	movlb	0	; () banked
 21233  004584  8FFD               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 21234                           
 21235                           ;usb_device.c: 2160: {
 21236                           ;usb_device.c: 2161: BDT_ENTRY *p;
 21237                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
 21238  004586  0104               	movlb	4	; () banked
 21239  004588  BF34               	btfsc	52,7,b	;volatile
 21240  00458A  D00A               	goto	i2l529
 21241                           
 21242                           ; BSR set to: 4
 21243                           ;usb_device.c: 2164: {
 21244                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 21245  00458C  5134               	movf	52,w,b	;volatile
 21246  00458E  0B0F               	andlw	15
 21247  004590  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 21248  004592  5001               	movf	??_USBStdGetStatusHandler,w,c
 21249  004594  0D02               	mullw	2
 21250  004596  0EC8               	movlw	low _pBDTEntryOut
 21251  004598  24F3               	addwf	prodl,w,c
 21252  00459A  6ED9               	movwf	fsr2l,c
 21253  00459C  0E02               	movlw	high _pBDTEntryOut
 21254  00459E  D009               	goto	L17
 21255  0045A0                     i2l529:
 21256                           
 21257                           ; BSR set to: 4
 21258                           ;usb_device.c: 2167: else
 21259                           ;usb_device.c: 2168: {
 21260                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 21261                           
 21262                           ; BSR set to: 4
 21263  0045A0  5134               	movf	52,w,b	;volatile
 21264  0045A2  0B0F               	andlw	15
 21265  0045A4  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 21266  0045A6  5001               	movf	??_USBStdGetStatusHandler,w,c
 21267  0045A8  0D02               	mullw	2
 21268  0045AA  0E40               	movlw	low _pBDTEntryIn
 21269  0045AC  24F3               	addwf	prodl,w,c
 21270  0045AE  6ED9               	movwf	fsr2l,c
 21271  0045B0  0E00               	movlw	high _pBDTEntryIn
 21272  0045B2                     L17:
 21273  0045B2  20F4               	addwfc	prodh,w,c
 21274  0045B4  6EDA               	movwf	fsr2h,c
 21275  0045B6  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 21276  0045BA  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 21277                           
 21278                           ; BSR set to: 4
 21279                           ;usb_device.c: 2170: }
 21280                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 21281                           
 21282                           ; BSR set to: 4
 21283  0045BE  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 21284  0045C2  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 21285  0045C6  AEDF               	btfss	indf2,7,c
 21286  0045C8  D014               	goto	i2l526
 21287                           
 21288                           ; BSR set to: 4
 21289  0045CA  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 21290  0045CE  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 21291  0045D2  A4DF               	btfss	indf2,2,c
 21292  0045D4  D00E               	goto	i2l526
 21293                           
 21294                           ; BSR set to: 4
 21295                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
 21296  0045D6  0E01               	movlw	1
 21297  0045D8  6F38               	movwf	56,b	;volatile
 21298                           
 21299                           ; BSR set to: 4
 21300                           ;usb_device.c: 2175: }
 21301                           ;usb_device.c: 2176: }
 21302                           
 21303                           ; BSR set to: 4
 21304                           ;usb_device.c: 2174: break;
 21305  0045DA  D00B               	goto	i2l526
 21306  0045DC                     i2l522:
 21307                           
 21308                           ; BSR set to: 4
 21309                           
 21310                           ; BSR set to: 4
 21311  0045DC  5130               	movf	48,w,b	;volatile
 21312  0045DE  0B1F               	andlw	31
 21313                           
 21314                           ; Switch size 1, requested type "space"
 21315                           ; Number of cases is 3, Range of values is 0 to 2
 21316                           ; switch strategies available:
 21317                           ; Name         Instructions Cycles
 21318                           ; simple_byte           10     6 (average)
 21319                           ;	Chosen strategy is simple_byte
 21320  0045E0  0A00               	xorlw	0	; case 0
 21321  0045E2  B4D8               	btfsc	status,2,c
 21322  0045E4  D7C2               	goto	i2l523
 21323  0045E6  0A01               	xorlw	1	; case 1
 21324  0045E8  B4D8               	btfsc	status,2,c
 21325  0045EA  D7C8               	goto	i2l527
 21326  0045EC  0A03               	xorlw	3	; case 2
 21327  0045EE  B4D8               	btfsc	status,2,c
 21328  0045F0  D7C8               	goto	i2l528
 21329  0045F2                     i2l526:
 21330                           
 21331                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
 21332  0045F2  0100               	movlb	0	; () banked
 21333  0045F4  AFFD               	btfss	(_inPipes+3)& (0+255),7,b	;volatile
 21334  0045F6  0012               	return	
 21335                           
 21336                           ; BSR set to: 0
 21337                           ;usb_device.c: 2179: {
 21338                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 21339  0045F8  0E38               	movlw	56
 21340  0045FA  6FFA               	movwf	_inPipes& (0+255),b	;volatile
 21341  0045FC  0E04               	movlw	4
 21342  0045FE  6FFB               	movwf	(_inPipes+1)& (0+255),b	;volatile
 21343                           
 21344                           ; BSR set to: 0
 21345                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 21346  004600  81FD               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 21347                           
 21348                           ; BSR set to: 0
 21349                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
 21350  004602  0E02               	movlw	2
 21351  004604  6FFE               	movwf	(_inPipes+4)& (0+255),b	;volatile
 21352  004606  0012               	return	
 21353  004608                     __end_of_USBStdGetStatusHandler:
 21354                           	opt stack 0
 21355                           pclatu	equ	0xFFB
 21356                           pclath	equ	0xFFA
 21357                           tblptru	equ	0xFF8
 21358                           tblptrh	equ	0xFF7
 21359                           tblptrl	equ	0xFF6
 21360                           tablat	equ	0xFF5
 21361                           prodh	equ	0xFF4
 21362                           prodl	equ	0xFF3
 21363                           intcon	equ	0xFF2
 21364                           indf0	equ	0xFEF
 21365                           postinc0	equ	0xFEE
 21366                           fsr0h	equ	0xFEA
 21367                           fsr0l	equ	0xFE9
 21368                           wreg	equ	0xFE8
 21369                           indf1	equ	0xFE7
 21370                           postdec1	equ	0xFE5
 21371                           fsr1h	equ	0xFE2
 21372                           fsr1l	equ	0xFE1
 21373                           indf2	equ	0xFDF
 21374                           postinc2	equ	0xFDE
 21375                           postdec2	equ	0xFDD
 21376                           plusw2	equ	0xFDB
 21377                           fsr2h	equ	0xFDA
 21378                           fsr2l	equ	0xFD9
 21379                           status	equ	0xFD8
 21380                           
 21381 ;; *************** function _USBStdGetDscHandler *****************
 21382 ;; Defined at:
 21383 ;;		line 2043 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 21384 ;; Parameters:    Size  Location     Type
 21385 ;;		None
 21386 ;; Auto vars:     Size  Location     Type
 21387 ;;		None
 21388 ;; Return value:  Size  Location     Type
 21389 ;;                  1    wreg      void 
 21390 ;; Registers used:
 21391 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 21392 ;; Tracked objects:
 21393 ;;		On entry : 0/0
 21394 ;;		On exit  : 0/0
 21395 ;;		Unchanged: 0/0
 21396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21397 ;;      Params:         0       0       0       0       0       0       0       0       0
 21398 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21399 ;;      Temps:          2       0       0       0       0       0       0       0       0
 21400 ;;      Totals:         2       0       0       0       0       0       0       0       0
 21401 ;;Total ram usage:        2 bytes
 21402 ;; Hardware stack levels used:    1
 21403 ;; This function calls:
 21404 ;;		Nothing
 21405 ;; This function is called by:
 21406 ;;		_USBCheckStdRequest
 21407 ;; This function uses a non-reentrant model
 21408 ;;
 21409                           
 21410                           	psect	text82
 21411  0030E0                     __ptext82:
 21412                           	opt stack 0
 21413  0030E0                     _USBStdGetDscHandler:
 21414                           	opt stack 20
 21415                           
 21416                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
 21417                           
 21418                           ; BSR set to: 0
 21419                           ;incstack = 0
 21420  0030E0  0E80               	movlw	128
 21421  0030E2  0104               	movlb	4	; () banked
 21422  0030E4  1930               	xorwf	48,w,b	;volatile
 21423  0030E6  A4D8               	btfss	status,2,c
 21424  0030E8  0012               	return	
 21425                           
 21426                           ; BSR set to: 4
 21427                           ;usb_device.c: 2046: {
 21428                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 21429  0030EA  0EC0               	movlw	192
 21430  0030EC  0100               	movlb	0	; () banked
 21431  0030EE  6FFD               	movwf	(_inPipes+3)& (0+255),b	;volatile
 21432                           
 21433                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
 21434  0030F0  D082               	goto	i2l509
 21435  0030F2                     
 21436                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 21437                           
 21438                           ; BSR set to: 0
 21439  0030F2  0E38               	movlw	low _device_dsc
 21440  0030F4  0100               	movlb	0	; () banked
 21441  0030F6  6FFA               	movwf	_inPipes& (0+255),b	;volatile
 21442  0030F8  0E7D               	movlw	high _device_dsc
 21443  0030FA  6FFB               	movwf	(_inPipes+1)& (0+255),b	;volatile
 21444                           
 21445                           ; BSR set to: 0
 21446                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
 21447  0030FC  0E00               	movlw	0
 21448  0030FE  6FFF               	movwf	(_inPipes+5)& (0+255),b	;volatile
 21449  003100  0E12               	movlw	18
 21450  003102  6FFE               	movwf	(_inPipes+4)& (0+255),b	;volatile
 21451                           
 21452                           ;usb_device.c: 2058: break;
 21453  003104  0012               	return	
 21454  003106                     
 21455                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
 21456                           
 21457                           ; BSR set to: 0
 21458  003106  0104               	movlb	4	; () banked
 21459  003108  5132               	movf	50,w,b	;volatile
 21460  00310A  A4D8               	btfss	status,2,c
 21461  00310C  D040               	goto	i2l513
 21462                           
 21463                           ; BSR set to: 4
 21464                           ;usb_device.c: 2064: {
 21465                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 21466  00310E  5132               	movf	50,w,b	;volatile
 21467  003110  0D02               	mullw	2
 21468  003112  0E8B               	movlw	low _USB_CD_Ptr
 21469  003114  24F3               	addwf	prodl,w,c
 21470  003116  6EF6               	movwf	tblptrl,c
 21471  003118  0E7C               	movlw	high _USB_CD_Ptr
 21472  00311A  20F4               	addwfc	prodh,w,c
 21473  00311C  6EF7               	movwf	tblptrh,c
 21474  00311E                     	if	0	;There are less than 3 active tblptr bytes
 21475  00311E                     	endif
 21476  00311E  0009               	tblrd		*+
 21477  003120  CFF5 F0FA          	movff	tablat,_inPipes	;volatile
 21478  003124  000A               	tblrd		*-
 21479  003126  CFF5 F0FB          	movff	tablat,_inPipes+1	;volatile
 21480                           
 21481                           ; BSR set to: 4
 21482                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 21483  00312A  0E02               	movlw	2
 21484  00312C  0100               	movlb	0	; () banked
 21485  00312E  25FA               	addwf	_inPipes& (0+255),w,b	;volatile
 21486  003130  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 21487  003132  0E00               	movlw	0
 21488  003134  21FB               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 21489  003136  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 21490  003138  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 21491  00313C  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 21492  003140  6AF8               	clrf	tblptru,c
 21493  003142  0E07               	movlw	(high __ramtop+-1)
 21494  003144  64F7               	cpfsgt	tblptrh,c
 21495  003146  D003               	bra	i2u587_47
 21496  003148  0008               	tblrd		*
 21497  00314A  50F5               	movf	tablat,w,c
 21498  00314C  D005               	bra	i2u587_40
 21499  00314E                     i2u587_47:
 21500  00314E  CFF6 FFE9          	movff	tblptrl,fsr0l
 21501  003152  CFF7 FFEA          	movff	tblptrh,fsr0h
 21502  003156  50EF               	movf	indf0,w,c
 21503  003158                     i2u587_40:
 21504  003158  0100               	movlb	0	; () banked
 21505  00315A  6FFE               	movwf	(_inPipes+4)& (0+255),b	;volatile
 21506                           
 21507                           ; BSR set to: 0
 21508                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 21509  00315C  0E03               	movlw	3
 21510  00315E  25FA               	addwf	_inPipes& (0+255),w,b	;volatile
 21511  003160  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 21512  003162  0E00               	movlw	0
 21513  003164  21FB               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 21514  003166  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 21515  003168  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 21516  00316C  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 21517  003170  6AF8               	clrf	tblptru,c
 21518  003172  0E07               	movlw	(high __ramtop+-1)
 21519  003174  64F7               	cpfsgt	tblptrh,c
 21520  003176  D003               	bra	i2u588_47
 21521  003178  0008               	tblrd		*
 21522  00317A  50F5               	movf	tablat,w,c
 21523  00317C  D005               	bra	i2u588_40
 21524  00317E                     i2u588_47:
 21525  00317E  CFF6 FFE9          	movff	tblptrl,fsr0l
 21526  003182  CFF7 FFEA          	movff	tblptrh,fsr0h
 21527  003186  50EF               	movf	indf0,w,c
 21528  003188                     i2u588_40:
 21529  003188  0100               	movlb	0	; () banked
 21530  00318A  6FFF               	movwf	(_inPipes+5)& (0+255),b	;volatile
 21531                           
 21532                           ;usb_device.c: 2076: }
 21533  00318C  0012               	return	
 21534  00318E                     i2l513:
 21535                           
 21536                           ;usb_device.c: 2077: else
 21537                           ;usb_device.c: 2078: {
 21538                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
 21539                           
 21540                           ; BSR set to: 0
 21541  00318E  0E00               	movlw	0
 21542  003190  0100               	movlb	0	; () banked
 21543  003192  6FFD               	movwf	(_inPipes+3)& (0+255),b	;volatile
 21544                           
 21545                           ; BSR set to: 0
 21546                           ;usb_device.c: 2080: }
 21547                           ;usb_device.c: 2081: break;
 21548  003194  0012               	return	
 21549  003196                     
 21550                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
 21551                           
 21552                           ; BSR set to: 0
 21553  003196  0E03               	movlw	3
 21554  003198  0104               	movlb	4	; () banked
 21555  00319A  6132               	cpfslt	50,b	;volatile
 21556  00319C  D024               	goto	i2l516
 21557                           
 21558                           ; BSR set to: 4
 21559                           ;usb_device.c: 2087: {
 21560                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 21561  00319E  5132               	movf	50,w,b	;volatile
 21562  0031A0  0D02               	mullw	2
 21563  0031A2  0E85               	movlw	low _USB_SD_Ptr
 21564  0031A4  24F3               	addwf	prodl,w,c
 21565  0031A6  6EF6               	movwf	tblptrl,c
 21566  0031A8  0E7C               	movlw	high _USB_SD_Ptr
 21567  0031AA  20F4               	addwfc	prodh,w,c
 21568  0031AC  6EF7               	movwf	tblptrh,c
 21569  0031AE                     	if	0	;There are less than 3 active tblptr bytes
 21570  0031AE                     	endif
 21571  0031AE  0009               	tblrd		*+
 21572  0031B0  CFF5 F0FA          	movff	tablat,_inPipes	;volatile
 21573  0031B4  000A               	tblrd		*-
 21574  0031B6  CFF5 F0FB          	movff	tablat,_inPipes+1	;volatile
 21575                           
 21576                           ; BSR set to: 4
 21577                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 21578  0031BA  C0FA  FFF6         	movff	_inPipes,tblptrl	;volatile
 21579  0031BE  C0FB  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 21580  0031C2  6AF8               	clrf	tblptru,c
 21581  0031C4  0E07               	movlw	(high __ramtop+-1)
 21582  0031C6  64F7               	cpfsgt	tblptrh,c
 21583  0031C8  D003               	bra	i2u590_47
 21584  0031CA  0008               	tblrd		*
 21585  0031CC  50F5               	movf	tablat,w,c
 21586  0031CE  D005               	bra	i2u590_40
 21587  0031D0                     i2u590_47:
 21588  0031D0  CFF6 FFE9          	movff	tblptrl,fsr0l
 21589  0031D4  CFF7 FFEA          	movff	tblptrh,fsr0h
 21590  0031D8  50EF               	movf	indf0,w,c
 21591  0031DA                     i2u590_40:
 21592  0031DA  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 21593  0031DC  5001               	movf	??_USBStdGetDscHandler,w,c
 21594  0031DE  0100               	movlb	0	; () banked
 21595  0031E0  6FFE               	movwf	(_inPipes+4)& (0+255),b	;volatile
 21596  0031E2  6BFF               	clrf	(_inPipes+5)& (0+255),b	;volatile
 21597                           
 21598                           ;usb_device.c: 2092: }
 21599  0031E4  0012               	return	
 21600  0031E6                     i2l516:
 21601                           
 21602                           ;usb_device.c: 2102: else
 21603                           ;usb_device.c: 2103: {
 21604                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
 21605                           
 21606                           ; BSR set to: 0
 21607  0031E6  0E00               	movlw	0
 21608  0031E8  0100               	movlb	0	; () banked
 21609  0031EA  6FFD               	movwf	(_inPipes+3)& (0+255),b	;volatile
 21610                           
 21611                           ; BSR set to: 0
 21612                           ;usb_device.c: 2105: }
 21613                           ;usb_device.c: 2106: break;
 21614  0031EC  0012               	return	
 21615  0031EE                     
 21616                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
 21617                           
 21618                           ; BSR set to: 0
 21619  0031EE  0E00               	movlw	0
 21620  0031F0  0100               	movlb	0	; () banked
 21621  0031F2  6FFD               	movwf	(_inPipes+3)& (0+255),b	;volatile
 21622                           
 21623                           ; BSR set to: 0
 21624                           ;usb_device.c: 2110: }
 21625                           
 21626                           ;usb_device.c: 2109: break;
 21627  0031F4  0012               	return	
 21628  0031F6                     i2l509:
 21629                           
 21630                           ; BSR set to: 0
 21631                           
 21632                           ; BSR set to: 0
 21633  0031F6  0104               	movlb	4	; () banked
 21634  0031F8  5133               	movf	51,w,b	;volatile
 21635                           
 21636                           ; Switch size 1, requested type "space"
 21637                           ; Number of cases is 3, Range of values is 1 to 3
 21638                           ; switch strategies available:
 21639                           ; Name         Instructions Cycles
 21640                           ; simple_byte           10     6 (average)
 21641                           ;	Chosen strategy is simple_byte
 21642  0031FA  0A01               	xorlw	1	; case 1
 21643  0031FC  B4D8               	btfsc	status,2,c
 21644  0031FE  D779               	goto	i2l510
 21645  003200  0A03               	xorlw	3	; case 2
 21646  003202  B4D8               	btfsc	status,2,c
 21647  003204  D780               	goto	i2l512
 21648  003206  0A01               	xorlw	1	; case 3
 21649  003208  B4D8               	btfsc	status,2,c
 21650  00320A  D7C5               	goto	i2l515
 21651  00320C  D7F0               	goto	i2l518
 21652  00320E                     __end_of_USBStdGetDscHandler:
 21653                           	opt stack 0
 21654                           pclatu	equ	0xFFB
 21655                           pclath	equ	0xFFA
 21656                           tblptru	equ	0xFF8
 21657                           tblptrh	equ	0xFF7
 21658                           tblptrl	equ	0xFF6
 21659                           tablat	equ	0xFF5
 21660                           prodh	equ	0xFF4
 21661                           prodl	equ	0xFF3
 21662                           intcon	equ	0xFF2
 21663                           indf0	equ	0xFEF
 21664                           postinc0	equ	0xFEE
 21665                           fsr0h	equ	0xFEA
 21666                           fsr0l	equ	0xFE9
 21667                           wreg	equ	0xFE8
 21668                           indf1	equ	0xFE7
 21669                           postdec1	equ	0xFE5
 21670                           fsr1h	equ	0xFE2
 21671                           fsr1l	equ	0xFE1
 21672                           indf2	equ	0xFDF
 21673                           postinc2	equ	0xFDE
 21674                           postdec2	equ	0xFDD
 21675                           plusw2	equ	0xFDB
 21676                           fsr2h	equ	0xFDA
 21677                           fsr2l	equ	0xFD9
 21678                           status	equ	0xFD8
 21679                           
 21680 ;; *************** function _USBStdFeatureReqHandler *****************
 21681 ;; Defined at:
 21682 ;;		line 2754 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 21683 ;; Parameters:    Size  Location     Type
 21684 ;;		None
 21685 ;; Auto vars:     Size  Location     Type
 21686 ;;  p               2   24[COMRAM] PTR struct __BDT
 21687 ;;		 -> RAM(2047), NULL(0), BDT(48), 
 21688 ;;  pUEP            2   21[COMRAM] PTR unsigned char 
 21689 ;;		 -> UEP0(1), 
 21690 ;;  current_ep_d    1   23[COMRAM] struct .
 21691 ;; Return value:  Size  Location     Type
 21692 ;;                  1    wreg      void 
 21693 ;; Registers used:
 21694 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21695 ;; Tracked objects:
 21696 ;;		On entry : 0/0
 21697 ;;		On exit  : 0/0
 21698 ;;		Unchanged: 0/0
 21699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21700 ;;      Params:         0       0       0       0       0       0       0       0       0
 21701 ;;      Locals:         5       0       0       0       0       0       0       0       0
 21702 ;;      Temps:          1       0       0       0       0       0       0       0       0
 21703 ;;      Totals:         6       0       0       0       0       0       0       0       0
 21704 ;;Total ram usage:        6 bytes
 21705 ;; Hardware stack levels used:    1
 21706 ;; Hardware stack levels required when called:    4
 21707 ;; This function calls:
 21708 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 21709 ;; This function is called by:
 21710 ;;		_USBCheckStdRequest
 21711 ;; This function uses a non-reentrant model
 21712 ;;
 21713                           
 21714                           	psect	text83
 21715  002054                     __ptext83:
 21716                           	opt stack 0
 21717  002054                     _USBStdFeatureReqHandler:
 21718                           	opt stack 16
 21719                           
 21720                           ;usb_device.c: 2756: BDT_ENTRY *p;
 21721                           ;usb_device.c: 2757: EP_STATUS current_ep_data;
 21722                           ;usb_device.c: 2761: unsigned char* pUEP;
 21723                           ;usb_device.c: 2799: if((SetupPkt.bFeature == 1)&&
 21724                           ;usb_device.c: 2800: (SetupPkt.Recipient == (0x00)))
 21725                           
 21726                           ;incstack = 0
 21727  002054  0104               	movlb	4	; () banked
 21728  002056  0532               	decf	50,w,b	;volatile
 21729  002058  A4D8               	btfss	status,2,c
 21730  00205A  D011               	goto	i2l602
 21731                           
 21732                           ; BSR set to: 4
 21733  00205C  5130               	movf	48,w,b	;volatile
 21734  00205E  0B1F               	andlw	31
 21735  002060  0900               	iorlw	0
 21736  002062  A4D8               	btfss	status,2,c
 21737  002064  D00C               	goto	i2l602
 21738                           
 21739                           ; BSR set to: 4
 21740                           ;usb_device.c: 2801: {
 21741                           ;usb_device.c: 2802: inPipes[0].info.bits.busy = 1;
 21742  002066  0100               	movlb	0	; () banked
 21743  002068  8FFD               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 21744                           
 21745                           ; BSR set to: 0
 21746                           ;usb_device.c: 2803: if(SetupPkt.bRequest == 3)
 21747  00206A  0E03               	movlw	3
 21748  00206C  0104               	movlb	4	; () banked
 21749  00206E  1931               	xorwf	49,w,b	;volatile
 21750  002070  A4D8               	btfss	status,2,c
 21751  002072  D002               	goto	i2l601
 21752                           
 21753                           ; BSR set to: 4
 21754                           ;usb_device.c: 2804: RemoteWakeup = 1;
 21755  002074  0E01               	movlw	1
 21756  002076  D001               	goto	L18
 21757  002078                     i2l601:
 21758                           
 21759                           ;usb_device.c: 2805: else
 21760                           ;usb_device.c: 2806: RemoteWakeup = 0;
 21761                           
 21762                           ; BSR set to: 1
 21763  002078  0E00               	movlw	0
 21764  00207A                     L18:
 21765  00207A  0101               	movlb	1	; () banked
 21766  00207C  6FFD               	movwf	_RemoteWakeup& (0+255),b	;volatile
 21767  00207E                     i2l602:
 21768                           
 21769                           ;usb_device.c: 2807: }
 21770                           ;usb_device.c: 2810: if((SetupPkt.bFeature == 0)&&
 21771                           ;usb_device.c: 2811: (SetupPkt.Recipient == (0x02))&&
 21772                           ;usb_device.c: 2812: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 21773                           ;usb_device.c: 2813: (USBDeviceState == CONFIGURED_STATE))
 21774                           
 21775                           ; BSR set to: 1
 21776  00207E  0104               	movlb	4	; () banked
 21777  002080  5132               	movf	50,w,b	;volatile
 21778  002082  A4D8               	btfss	status,2,c
 21779  002084  0012               	return	
 21780                           
 21781                           ; BSR set to: 4
 21782  002086  5130               	movf	48,w,b	;volatile
 21783  002088  0B1F               	andlw	31
 21784  00208A  0A02               	xorlw	2
 21785  00208C  A4D8               	btfss	status,2,c
 21786  00208E  0012               	return	
 21787                           
 21788                           ; BSR set to: 4
 21789  002090  5134               	movf	52,w,b	;volatile
 21790  002092  0B0F               	andlw	15
 21791  002094  0900               	iorlw	0
 21792  002096  B4D8               	btfsc	status,2,c
 21793  002098  0012               	return	
 21794                           
 21795                           ; BSR set to: 4
 21796  00209A  5134               	movf	52,w,b	;volatile
 21797  00209C  0B0F               	andlw	15
 21798  00209E  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21799  0020A0  0E03               	movlw	3
 21800  0020A2  6015               	cpfslt	??_USBStdFeatureReqHandler,c
 21801  0020A4  0012               	return	
 21802                           
 21803                           ; BSR set to: 4
 21804  0020A6  0E20               	movlw	32
 21805  0020A8  1858               	xorwf	_USBDeviceState,w,c	;volatile
 21806  0020AA  A4D8               	btfss	status,2,c
 21807  0020AC  0012               	return	
 21808                           
 21809                           ; BSR set to: 4
 21810                           ;usb_device.c: 2814: {
 21811                           ;usb_device.c: 2817: inPipes[0].info.bits.busy = 1;
 21812  0020AE  0100               	movlb	0	; () banked
 21813  0020B0  8FFD               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 21814                           
 21815                           ;usb_device.c: 2820: if(SetupPkt.EPDir == 0)
 21816  0020B2  0104               	movlb	4	; () banked
 21817  0020B4  BF34               	btfsc	52,7,b	;volatile
 21818  0020B6  D019               	goto	i2l604
 21819                           
 21820                           ; BSR set to: 4
 21821                           ;usb_device.c: 2821: {
 21822                           ;usb_device.c: 2822: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 21823  0020B8  5134               	movf	52,w,b	;volatile
 21824  0020BA  0B0F               	andlw	15
 21825  0020BC  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21826  0020BE  5015               	movf	??_USBStdFeatureReqHandler,w,c
 21827  0020C0  0D02               	mullw	2
 21828  0020C2  0EC8               	movlw	low _pBDTEntryOut
 21829  0020C4  24F3               	addwf	prodl,w,c
 21830  0020C6  6ED9               	movwf	fsr2l,c
 21831  0020C8  0E02               	movlw	high _pBDTEntryOut
 21832  0020CA  20F4               	addwfc	prodh,w,c
 21833  0020CC  6EDA               	movwf	fsr2h,c
 21834  0020CE  CFDE F019          	movff	postinc2,USBStdFeatureReqHandler@p
 21835  0020D2  CFDD F01A          	movff	postdec2,USBStdFeatureReqHandler@p+1
 21836                           
 21837                           ;usb_device.c: 2823: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 21838  0020D6  5134               	movf	52,w,b	;volatile
 21839  0020D8  0B0F               	andlw	15
 21840  0020DA  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21841  0020DC  5015               	movf	??_USBStdFeatureReqHandler,w,c
 21842  0020DE  0D01               	mullw	1
 21843  0020E0  0ED2               	movlw	low _ep_data_out
 21844  0020E2  24F3               	addwf	prodl,w,c
 21845  0020E4  6ED9               	movwf	fsr2l,c
 21846  0020E6  0E02               	movlw	high _ep_data_out
 21847  0020E8  D018               	goto	L19
 21848  0020EA                     i2l604:
 21849                           
 21850                           ; BSR set to: 4
 21851                           ;usb_device.c: 2825: else
 21852                           ;usb_device.c: 2826: {
 21853                           ;usb_device.c: 2827: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 21854                           
 21855                           ; BSR set to: 4
 21856  0020EA  5134               	movf	52,w,b	;volatile
 21857  0020EC  0B0F               	andlw	15
 21858  0020EE  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21859  0020F0  5015               	movf	??_USBStdFeatureReqHandler,w,c
 21860  0020F2  0D02               	mullw	2
 21861  0020F4  0E40               	movlw	low _pBDTEntryIn
 21862  0020F6  24F3               	addwf	prodl,w,c
 21863  0020F8  6ED9               	movwf	fsr2l,c
 21864  0020FA  0E00               	movlw	high _pBDTEntryIn
 21865  0020FC  20F4               	addwfc	prodh,w,c
 21866  0020FE  6EDA               	movwf	fsr2h,c
 21867  002100  CFDE F019          	movff	postinc2,USBStdFeatureReqHandler@p
 21868  002104  CFDD F01A          	movff	postdec2,USBStdFeatureReqHandler@p+1
 21869                           
 21870                           ;usb_device.c: 2828: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 21871  002108  5134               	movf	52,w,b	;volatile
 21872  00210A  0B0F               	andlw	15
 21873  00210C  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21874  00210E  5015               	movf	??_USBStdFeatureReqHandler,w,c
 21875  002110  0D01               	mullw	1
 21876  002112  0ED5               	movlw	low _ep_data_in
 21877  002114  24F3               	addwf	prodl,w,c
 21878  002116  6ED9               	movwf	fsr2l,c
 21879  002118  0E02               	movlw	high _ep_data_in
 21880  00211A                     L19:
 21881  00211A  20F4               	addwfc	prodh,w,c
 21882  00211C  6EDA               	movwf	fsr2h,c
 21883  00211E  50DF               	movf	indf2,w,c
 21884  002120  6E18               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 21885                           
 21886                           ; BSR set to: 4
 21887                           ;usb_device.c: 2829: }
 21888                           ;usb_device.c: 2835: if(current_ep_data.bits.ping_pong_state == 0)
 21889                           
 21890                           ; BSR set to: 4
 21891  002122  B018               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 21892  002124  D006               	goto	i2l606
 21893                           
 21894                           ; BSR set to: 4
 21895                           ;usb_device.c: 2836: {
 21896                           ;usb_device.c: 2837: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 21897  002126  0EFB               	movlw	251
 21898  002128  1419               	andwf	USBStdFeatureReqHandler@p,w,c
 21899  00212A  6E19               	movwf	USBStdFeatureReqHandler@p,c
 21900  00212C  0EFF               	movlw	255
 21901  00212E  141A               	andwf	USBStdFeatureReqHandler@p+1,w,c
 21902  002130  D004               	goto	L20
 21903  002132                     i2l606:
 21904                           
 21905                           ; BSR set to: 4
 21906                           ;usb_device.c: 2839: else
 21907                           ;usb_device.c: 2840: {
 21908                           ;usb_device.c: 2841: p = (BDT_ENTRY*)(((uintptr_t)p) | 0x0004);
 21909                           
 21910                           ; BSR set to: 4
 21911  002132  0E04               	movlw	4
 21912  002134  1019               	iorwf	USBStdFeatureReqHandler@p,w,c
 21913  002136  6E19               	movwf	USBStdFeatureReqHandler@p,c
 21914  002138  501A               	movf	USBStdFeatureReqHandler@p+1,w,c
 21915  00213A                     L20:
 21916  00213A  6E1A               	movwf	USBStdFeatureReqHandler@p+1,c
 21917                           
 21918                           ; BSR set to: 4
 21919                           ;usb_device.c: 2842: }
 21920                           ;usb_device.c: 2847: if(SetupPkt.EPDir == 0)
 21921                           
 21922                           ; BSR set to: 4
 21923  00213C  BF34               	btfsc	52,7,b	;volatile
 21924  00213E  D00A               	goto	i2l608
 21925                           
 21926                           ; BSR set to: 4
 21927                           ;usb_device.c: 2848: {
 21928                           ;usb_device.c: 2849: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 21929  002140  5134               	movf	52,w,b	;volatile
 21930  002142  0B0F               	andlw	15
 21931  002144  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21932  002146  5015               	movf	??_USBStdFeatureReqHandler,w,c
 21933  002148  0D02               	mullw	2
 21934  00214A  0EC8               	movlw	low _pBDTEntryOut
 21935  00214C  24F3               	addwf	prodl,w,c
 21936  00214E  6ED9               	movwf	fsr2l,c
 21937  002150  0E02               	movlw	high _pBDTEntryOut
 21938  002152  D009               	goto	L21
 21939  002154                     i2l608:
 21940                           
 21941                           ; BSR set to: 4
 21942                           ;usb_device.c: 2851: else
 21943                           ;usb_device.c: 2852: {
 21944                           ;usb_device.c: 2853: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 21945                           
 21946                           ; BSR set to: 4
 21947  002154  5134               	movf	52,w,b	;volatile
 21948  002156  0B0F               	andlw	15
 21949  002158  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21950  00215A  5015               	movf	??_USBStdFeatureReqHandler,w,c
 21951  00215C  0D02               	mullw	2
 21952  00215E  0E40               	movlw	low _pBDTEntryIn
 21953  002160  24F3               	addwf	prodl,w,c
 21954  002162  6ED9               	movwf	fsr2l,c
 21955  002164  0E00               	movlw	high _pBDTEntryIn
 21956  002166                     L21:
 21957  002166  20F4               	addwfc	prodh,w,c
 21958  002168  6EDA               	movwf	fsr2h,c
 21959  00216A  C019  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 21960  00216E  C01A  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 21961                           
 21962                           ; BSR set to: 4
 21963                           ;usb_device.c: 2854: }
 21964                           ;usb_device.c: 2857: if(SetupPkt.bRequest == 3)
 21965                           
 21966                           ; BSR set to: 4
 21967  002172  0E03               	movlw	3
 21968  002174  1931               	xorwf	49,w,b	;volatile
 21969  002176  A4D8               	btfss	status,2,c
 21970  002178  D02D               	goto	i2l610
 21971                           
 21972                           ; BSR set to: 4
 21973                           ;usb_device.c: 2858: {
 21974                           ;usb_device.c: 2859: if(p->STAT.UOWN == 1)
 21975  00217A  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 21976  00217E  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 21977  002182  AEDF               	btfss	indf2,7,c
 21978  002184  D01A               	goto	i2l613
 21979                           
 21980                           ; BSR set to: 4
 21981                           ;usb_device.c: 2860: {
 21982                           ;usb_device.c: 2863: if(SetupPkt.EPDir == 0)
 21983  002186  BF34               	btfsc	52,7,b	;volatile
 21984  002188  D00A               	goto	i2l612
 21985                           
 21986                           ; BSR set to: 4
 21987                           ;usb_device.c: 2864: {
 21988                           ;usb_device.c: 2865: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 21989  00218A  5134               	movf	52,w,b	;volatile
 21990  00218C  0B0F               	andlw	15
 21991  00218E  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21992  002190  5015               	movf	??_USBStdFeatureReqHandler,w,c
 21993  002192  0D01               	mullw	1
 21994  002194  0ED2               	movlw	low _ep_data_out
 21995  002196  24F3               	addwf	prodl,w,c
 21996  002198  6ED9               	movwf	fsr2l,c
 21997  00219A  0E02               	movlw	high _ep_data_out
 21998  00219C  D00A               	goto	L22
 21999  00219E                     i2l612:
 22000                           
 22001                           ;usb_device.c: 2867: else
 22002                           ;usb_device.c: 2868: {
 22003                           ;usb_device.c: 2869: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 22004                           
 22005                           ; BSR set to: 2
 22006  00219E  0104               	movlb	4	; () banked
 22007  0021A0  5134               	movf	52,w,b	;volatile
 22008  0021A2  0B0F               	andlw	15
 22009  0021A4  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 22010  0021A6  5015               	movf	??_USBStdFeatureReqHandler,w,c
 22011  0021A8  0D01               	mullw	1
 22012  0021AA  0ED5               	movlw	low _ep_data_in
 22013  0021AC  24F3               	addwf	prodl,w,c
 22014  0021AE  6ED9               	movwf	fsr2l,c
 22015  0021B0  0E02               	movlw	high _ep_data_in
 22016  0021B2                     L22:
 22017  0021B2  20F4               	addwfc	prodh,w,c
 22018  0021B4  6EDA               	movwf	fsr2h,c
 22019  0021B6  0102               	movlb	2	; () banked
 22020  0021B8  82DF               	bsf	indf2,1,c
 22021  0021BA                     i2l613:
 22022                           
 22023                           ;usb_device.c: 2870: }
 22024                           ;usb_device.c: 2871: }
 22025                           ;usb_device.c: 2874: p->STAT.Val |= 0x04;
 22026                           
 22027                           ; BSR set to: 2
 22028                           
 22029                           ; BSR set to: 2
 22030  0021BA  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 22031  0021BE  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 22032  0021C2  0E00               	movlw	0
 22033  0021C4  84DB               	bsf	plusw2,2,c
 22034                           
 22035                           ;usb_device.c: 2875: p->STAT.Val |= 0x80;
 22036  0021C6  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 22037  0021CA  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 22038  0021CE  0E00               	movlw	0
 22039  0021D0  8EDB               	bsf	plusw2,7,c
 22040                           
 22041                           ;usb_device.c: 2876: }
 22042  0021D2  0012               	return	
 22043  0021D4                     i2l610:
 22044                           
 22045                           ;usb_device.c: 2877: else
 22046                           ;usb_device.c: 2878: {
 22047                           ;usb_device.c: 2882: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 22048  0021D4  0E04               	movlw	4
 22049  0021D6  1819               	xorwf	USBStdFeatureReqHandler@p,w,c
 22050  0021D8  6E19               	movwf	USBStdFeatureReqHandler@p,c
 22051  0021DA  501A               	movf	USBStdFeatureReqHandler@p+1,w,c
 22052  0021DC  6E1A               	movwf	USBStdFeatureReqHandler@p+1,c
 22053                           
 22054                           ;usb_device.c: 2884: if(p->STAT.UOWN == 1)
 22055  0021DE  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 22056  0021E2  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 22057  0021E6  AEDF               	btfss	indf2,7,c
 22058  0021E8  D01B               	goto	i2l615
 22059                           
 22060                           ;usb_device.c: 2885: {
 22061                           ;usb_device.c: 2888: p->STAT.Val &= (~0x80);
 22062  0021EA  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 22063  0021EE  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 22064  0021F2  0E7F               	movlw	127
 22065  0021F4  16DF               	andwf	indf2,f,c
 22066                           
 22067                           ;usb_device.c: 2889: p->STAT.Val |= 0x40;
 22068  0021F6  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 22069  0021FA  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 22070  0021FE  0E00               	movlw	0
 22071  002200  8CDB               	bsf	plusw2,6,c
 22072                           
 22073                           ;usb_device.c: 2890: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 22074  002202  0E00               	movlw	0
 22075  002204  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 22076  002206  0E05               	movlw	5
 22077  002208  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 22078  00220A  C019  F00F         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 22079  00220E  C01A  F010         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 22080  002212  0E00               	movlw	0
 22081  002214  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 22082  002216  0E02               	movlw	2
 22083  002218  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 22084  00221A  ECE6  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 22085                           
 22086                           ;usb_device.c: 2891: }
 22087  00221E  D006               	goto	i2l616
 22088  002220                     i2l615:
 22089                           
 22090                           ;usb_device.c: 2892: else
 22091                           ;usb_device.c: 2893: {
 22092                           ;usb_device.c: 2895: p->STAT.Val |= 0x40;
 22093  002220  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 22094  002224  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 22095  002228  0E00               	movlw	0
 22096  00222A  8CDB               	bsf	plusw2,6,c
 22097  00222C                     i2l616:
 22098                           
 22099                           ;usb_device.c: 2896: }
 22100                           ;usb_device.c: 2900: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 22101  00222C  0E04               	movlw	4
 22102  00222E  1819               	xorwf	USBStdFeatureReqHandler@p,w,c
 22103  002230  6E19               	movwf	USBStdFeatureReqHandler@p,c
 22104  002232  501A               	movf	USBStdFeatureReqHandler@p+1,w,c
 22105  002234  6E1A               	movwf	USBStdFeatureReqHandler@p+1,c
 22106                           
 22107                           ;usb_device.c: 2906: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 22108  002236  B218               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 22109  002238  D006               	goto	i2u612_40
 22110  00223A  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 22111  00223E  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 22112  002242  AEDF               	btfss	indf2,7,c
 22113  002244  D030               	goto	i2l617
 22114  002246                     i2u612_40:
 22115                           
 22116                           ;usb_device.c: 2907: {
 22117                           ;usb_device.c: 2908: if(SetupPkt.EPDir == 0)
 22118  002246  0104               	movlb	4	; () banked
 22119  002248  BF34               	btfsc	52,7,b	;volatile
 22120  00224A  D00A               	goto	i2l620
 22121                           
 22122                           ; BSR set to: 4
 22123                           ;usb_device.c: 2909: {
 22124                           ;usb_device.c: 2910: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 22125  00224C  5134               	movf	52,w,b	;volatile
 22126  00224E  0B0F               	andlw	15
 22127  002250  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 22128  002252  5015               	movf	??_USBStdFeatureReqHandler,w,c
 22129  002254  0D01               	mullw	1
 22130  002256  0ED2               	movlw	low _ep_data_out
 22131  002258  24F3               	addwf	prodl,w,c
 22132  00225A  6ED9               	movwf	fsr2l,c
 22133  00225C  0E02               	movlw	high _ep_data_out
 22134  00225E  D00A               	goto	L23
 22135  002260                     i2l620:
 22136                           
 22137                           ;usb_device.c: 2912: else
 22138                           ;usb_device.c: 2913: {
 22139                           ;usb_device.c: 2914: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 22140                           
 22141                           ; BSR set to: 2
 22142  002260  0104               	movlb	4	; () banked
 22143  002262  5134               	movf	52,w,b	;volatile
 22144  002264  0B0F               	andlw	15
 22145  002266  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 22146  002268  5015               	movf	??_USBStdFeatureReqHandler,w,c
 22147  00226A  0D01               	mullw	1
 22148  00226C  0ED5               	movlw	low _ep_data_in
 22149  00226E  24F3               	addwf	prodl,w,c
 22150  002270  6ED9               	movwf	fsr2l,c
 22151  002272  0E02               	movlw	high _ep_data_in
 22152  002274                     L23:
 22153  002274  20F4               	addwfc	prodh,w,c
 22154  002276  6EDA               	movwf	fsr2h,c
 22155  002278  0102               	movlb	2	; () banked
 22156  00227A  92DF               	bcf	indf2,1,c
 22157                           
 22158                           ; BSR set to: 2
 22159                           ;usb_device.c: 2915: }
 22160                           ;usb_device.c: 2917: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 22161                           
 22162                           ; BSR set to: 2
 22163  00227C  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 22164  002280  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 22165  002284  0E3B               	movlw	59
 22166  002286  16DF               	andwf	indf2,f,c
 22167                           
 22168                           ; BSR set to: 2
 22169                           ;usb_device.c: 2920: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 22170  002288  0E00               	movlw	0
 22171  00228A  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 22172  00228C  0E05               	movlw	5
 22173  00228E  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 22174  002290  C019  F00F         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 22175  002294  C01A  F010         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 22176  002298  0E00               	movlw	0
 22177  00229A  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 22178  00229C  0E02               	movlw	2
 22179  00229E  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 22180  0022A0  ECE6  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 22181                           
 22182                           ;usb_device.c: 2921: }
 22183  0022A4  D006               	goto	i2l622
 22184  0022A6                     i2l617:
 22185                           
 22186                           ;usb_device.c: 2922: else
 22187                           ;usb_device.c: 2923: {
 22188                           ;usb_device.c: 2925: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 22189  0022A6  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 22190  0022AA  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 22191  0022AE  0E3B               	movlw	59
 22192  0022B0  16DF               	andwf	indf2,f,c
 22193  0022B2                     i2l622:
 22194                           
 22195                           ;usb_device.c: 2926: }
 22196                           ;usb_device.c: 2973: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 22197  0022B2  0104               	movlb	4	; () banked
 22198  0022B4  5134               	movf	52,w,b	;volatile
 22199  0022B6  0B0F               	andlw	15
 22200  0022B8  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 22201  0022BA  5015               	movf	??_USBStdFeatureReqHandler,w,c
 22202  0022BC  0D01               	mullw	1
 22203  0022BE  0E70               	movlw	112
 22204  0022C0  24F3               	addwf	prodl,w,c
 22205  0022C2  6E16               	movwf	USBStdFeatureReqHandler@pUEP,c
 22206  0022C4  0E0F               	movlw	15
 22207  0022C6  20F4               	addwfc	prodh,w,c
 22208  0022C8  6E17               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 22209                           
 22210                           ; BSR set to: 4
 22211                           ;usb_device.c: 2977: *pUEP &= ~0x0001;
 22212  0022CA  C016  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 22213  0022CE  C017  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 22214  0022D2  0EFE               	movlw	254
 22215  0022D4  16DF               	andwf	indf2,f,c
 22216                           
 22217                           ; BSR set to: 4
 22218  0022D6  0012               	return	
 22219  0022D8                     __end_of_USBStdFeatureReqHandler:
 22220                           	opt stack 0
 22221                           pclatu	equ	0xFFB
 22222                           pclath	equ	0xFFA
 22223                           tblptru	equ	0xFF8
 22224                           tblptrh	equ	0xFF7
 22225                           tblptrl	equ	0xFF6
 22226                           tablat	equ	0xFF5
 22227                           prodh	equ	0xFF4
 22228                           prodl	equ	0xFF3
 22229                           intcon	equ	0xFF2
 22230                           indf0	equ	0xFEF
 22231                           postinc0	equ	0xFEE
 22232                           fsr0h	equ	0xFEA
 22233                           fsr0l	equ	0xFE9
 22234                           wreg	equ	0xFE8
 22235                           indf1	equ	0xFE7
 22236                           postdec1	equ	0xFE5
 22237                           fsr1h	equ	0xFE2
 22238                           fsr1l	equ	0xFE1
 22239                           indf2	equ	0xFDF
 22240                           postinc2	equ	0xFDE
 22241                           postdec2	equ	0xFDD
 22242                           plusw2	equ	0xFDB
 22243                           fsr2h	equ	0xFDA
 22244                           fsr2l	equ	0xFD9
 22245                           status	equ	0xFD8
 22246                           
 22247 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 22248 ;; Defined at:
 22249 ;;		line 29 in file "usb/usb_events.c"
 22250 ;; Parameters:    Size  Location     Type
 22251 ;;  event           2   12[COMRAM] enum E4179
 22252 ;;  pdata           2   14[COMRAM] PTR void 
 22253 ;;		 -> RAM(2047), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 22254 ;;		 -> BDT(48), 
 22255 ;;  size            2   16[COMRAM] unsigned int 
 22256 ;; Auto vars:     Size  Location     Type
 22257 ;;		None
 22258 ;; Return value:  Size  Location     Type
 22259 ;;                  1    wreg      unsigned char 
 22260 ;; Registers used:
 22261 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22262 ;; Tracked objects:
 22263 ;;		On entry : 0/0
 22264 ;;		On exit  : 0/0
 22265 ;;		Unchanged: 0/0
 22266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22267 ;;      Params:         6       0       0       0       0       0       0       0       0
 22268 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22269 ;;      Temps:          2       0       0       0       0       0       0       0       0
 22270 ;;      Totals:         8       0       0       0       0       0       0       0       0
 22271 ;;Total ram usage:        8 bytes
 22272 ;; Hardware stack levels used:    1
 22273 ;; Hardware stack levels required when called:    3
 22274 ;; This function calls:
 22275 ;;		_CDCInitEP
 22276 ;;		_USBCheckCDCRequest
 22277 ;; This function is called by:
 22278 ;;		_USBDeviceTasks
 22279 ;;		_USBStdSetCfgHandler
 22280 ;;		_USBSuspend
 22281 ;;		_USBWakeFromSuspend
 22282 ;;		_USBCtrlTrfSetupHandler
 22283 ;;		_USBCheckStdRequest
 22284 ;;		_USBStdFeatureReqHandler
 22285 ;; This function uses a non-reentrant model
 22286 ;;
 22287                           
 22288                           	psect	text84
 22289  004FCC                     __ptext84:
 22290                           	opt stack 0
 22291  004FCC                     _USER_USB_CALLBACK_EVENT_HANDLER:
 22292                           	opt stack 20
 22293                           
 22294                           ;usb_events.c: 31: switch( (int) event )
 22295                           
 22296                           ;incstack = 0
 22297  004FCC  D006               	goto	i2l221
 22298  004FCE                     
 22299                           ;usb_events.c: 56: CDCInitEP();
 22300  004FCE  EC26  F027         	call	_CDCInitEP	;wreg free
 22301                           
 22302                           ;usb_events.c: 60: break;
 22303                           
 22304                           ;usb_events.c: 59: case EVENT_SET_DESCRIPTOR:
 22305                           
 22306                           ;usb_events.c: 57: break;
 22307  004FD2  0012               	return	
 22308  004FD4                     
 22309                           ;usb_events.c: 65: USBCheckCDCRequest();
 22310  004FD4  ECAC  F021         	call	_USBCheckCDCRequest	;wreg free
 22311                           
 22312                           ;usb_events.c: 76: }
 22313                           
 22314                           ;usb_events.c: 75: break;
 22315                           
 22316                           ;usb_events.c: 74: default:
 22317                           
 22318                           ;usb_events.c: 72: break;
 22319                           
 22320                           ;usb_events.c: 71: case EVENT_TRANSFER_TERMINATED:
 22321                           
 22322                           ;usb_events.c: 69: break;
 22323                           
 22324                           ;usb_events.c: 68: case EVENT_BUS_ERROR:
 22325                           
 22326                           ;usb_events.c: 66: break;
 22327  004FD8  0012               	return	
 22328  004FDA                     i2l221:
 22329  004FDA  C00D  F013         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 22330  004FDE  C00E  F014         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 22331                           
 22332                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 22333                           ; Switch size 1, requested type "space"
 22334                           ; Number of cases is 2, Range of values is 0 to 127
 22335                           ; switch strategies available:
 22336                           ; Name         Instructions Cycles
 22337                           ; simple_byte            7     4 (average)
 22338                           ;	Chosen strategy is simple_byte
 22339  004FE2  5014               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 22340  004FE4  0A00               	xorlw	0	; case 0
 22341  004FE6  B4D8               	btfsc	status,2,c
 22342  004FE8  D004               	goto	i2l10935
 22343  004FEA  0A7F               	xorlw	127	; case 127
 22344  004FEC  A4D8               	btfss	status,2,c
 22345  004FEE  0012               	return	
 22346  004FF0  D018               	goto	i2l10937
 22347  004FF2                     i2l10935:
 22348                           
 22349                           ; Switch size 1, requested type "space"
 22350                           ; Number of cases is 8, Range of values is 1 to 117
 22351                           ; switch strategies available:
 22352                           ; Name         Instructions Cycles
 22353                           ; simple_byte           25    13 (average)
 22354                           ;	Chosen strategy is simple_byte
 22355  004FF2  5013               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 22356  004FF4  0A01               	xorlw	1	; case 1
 22357  004FF6  B4D8               	btfsc	status,2,c
 22358  004FF8  D7EA               	goto	i2l227
 22359  004FFA  0A03               	xorlw	3	; case 2
 22360  004FFC  B4D8               	btfsc	status,2,c
 22361  004FFE  0012               	return	
 22362  005000  0A01               	xorlw	1	; case 3
 22363  005002  B4D8               	btfsc	status,2,c
 22364  005004  D7E7               	goto	i2l229
 22365  005006  0A06               	xorlw	6	; case 5
 22366  005008  B4D8               	btfsc	status,2,c
 22367  00500A  0012               	return	
 22368  00500C  0A77               	xorlw	119	; case 114
 22369  00500E  B4D8               	btfsc	status,2,c
 22370  005010  0012               	return	
 22371  005012  0A01               	xorlw	1	; case 115
 22372  005014  B4D8               	btfsc	status,2,c
 22373  005016  0012               	return	
 22374  005018  0A07               	xorlw	7	; case 116
 22375  00501A  B4D8               	btfsc	status,2,c
 22376  00501C  0012               	return	
 22377  00501E  0A01               	xorlw	1	; case 117
 22378  005020  0012               	return	
 22379  005022                     i2l10937:
 22380                           
 22381                           ; Switch size 1, requested type "space"
 22382                           ; Number of cases is 1, Range of values is 255 to 255
 22383                           ; switch strategies available:
 22384                           ; Name         Instructions Cycles
 22385                           ; simple_byte            4     3 (average)
 22386                           ;	Chosen strategy is simple_byte
 22387  005022  5013               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 22388  005024  0AFF               	xorlw	255	; case 255
 22389  005026  0012               	return	
 22390  005028                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 22391                           	opt stack 0
 22392                           pclatu	equ	0xFFB
 22393                           pclath	equ	0xFFA
 22394                           tblptru	equ	0xFF8
 22395                           tblptrh	equ	0xFF7
 22396                           tblptrl	equ	0xFF6
 22397                           tablat	equ	0xFF5
 22398                           prodh	equ	0xFF4
 22399                           prodl	equ	0xFF3
 22400                           intcon	equ	0xFF2
 22401                           indf0	equ	0xFEF
 22402                           postinc0	equ	0xFEE
 22403                           fsr0h	equ	0xFEA
 22404                           fsr0l	equ	0xFE9
 22405                           wreg	equ	0xFE8
 22406                           indf1	equ	0xFE7
 22407                           postdec1	equ	0xFE5
 22408                           fsr1h	equ	0xFE2
 22409                           fsr1l	equ	0xFE1
 22410                           indf2	equ	0xFDF
 22411                           postinc2	equ	0xFDE
 22412                           postdec2	equ	0xFDD
 22413                           plusw2	equ	0xFDB
 22414                           fsr2h	equ	0xFDA
 22415                           fsr2l	equ	0xFD9
 22416                           status	equ	0xFD8
 22417                           
 22418 ;; *************** function _USBCheckCDCRequest *****************
 22419 ;; Defined at:
 22420 ;;		line 147 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device_cdc.c"
 22421 ;; Parameters:    Size  Location     Type
 22422 ;;		None
 22423 ;; Auto vars:     Size  Location     Type
 22424 ;;		None
 22425 ;; Return value:  Size  Location     Type
 22426 ;;                  1    wreg      void 
 22427 ;; Registers used:
 22428 ;;		wreg, status,2, status,0
 22429 ;; Tracked objects:
 22430 ;;		On entry : 0/0
 22431 ;;		On exit  : 0/0
 22432 ;;		Unchanged: 0/0
 22433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22434 ;;      Params:         0       0       0       0       0       0       0       0       0
 22435 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22436 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22437 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22438 ;;Total ram usage:        0 bytes
 22439 ;; Hardware stack levels used:    1
 22440 ;; This function calls:
 22441 ;;		Nothing
 22442 ;; This function is called by:
 22443 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 22444 ;; This function uses a non-reentrant model
 22445 ;;
 22446                           
 22447                           	psect	text85
 22448  004358                     __ptext85:
 22449                           	opt stack 0
 22450  004358                     _USBCheckCDCRequest:
 22451                           	opt stack 22
 22452                           
 22453                           ;usb_device_cdc.c: 152: if(SetupPkt.Recipient != (0x01)) return;
 22454                           
 22455                           ;incstack = 0
 22456  004358  0104               	movlb	4	; () banked
 22457  00435A  5130               	movf	48,w,b	;volatile
 22458  00435C  0B1F               	andlw	31
 22459  00435E  06E8               	decf	wreg,f,c
 22460  004360  A4D8               	btfss	status,2,c
 22461  004362  0012               	return	
 22462                           
 22463                           ; BSR set to: 4
 22464                           ;usb_device_cdc.c: 157: if(SetupPkt.RequestType != (0x20>>5)) return;
 22465                           
 22466                           ; BSR set to: 4
 22467                           
 22468                           ; BSR set to: 4
 22469  004364  3930               	swapf	48,w,b	;volatile
 22470  004366  32E8               	rrcf	wreg,f,c
 22471  004368  0B03               	andlw	3
 22472  00436A  06E8               	decf	wreg,f,c
 22473  00436C  A4D8               	btfss	status,2,c
 22474  00436E  0012               	return	
 22475                           
 22476                           ; BSR set to: 4
 22477                           ;usb_device_cdc.c: 163: if((SetupPkt.bIntfID != 0x0)&&
 22478                           ;usb_device_cdc.c: 164: (SetupPkt.bIntfID != 0x01)) return;
 22479                           
 22480                           ; BSR set to: 4
 22481                           
 22482                           ; BSR set to: 4
 22483  004370  5134               	movf	52,w,b	;volatile
 22484  004372  B4D8               	btfsc	status,2,c
 22485  004374  D036               	goto	i2l766
 22486                           
 22487                           ; BSR set to: 4
 22488  004376  0534               	decf	52,w,b	;volatile
 22489  004378  A4D8               	btfss	status,2,c
 22490  00437A  0012               	return	
 22491  00437C  D032               	goto	i2l766
 22492  00437E                     
 22493                           ; BSR set to: 4
 22494                           ;usb_device_cdc.c: 171: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 22495                           
 22496                           ; BSR set to: 4
 22497  00437E  0EB4               	movlw	low _dummy_encapsulated_cmd_response
 22498  004380  0100               	movlb	0	; () banked
 22499  004382  6FFA               	movwf	_inPipes& (0+255),b	;volatile
 22500  004384  0E03               	movlw	high _dummy_encapsulated_cmd_response
 22501  004386  6FFB               	movwf	(_inPipes+1)& (0+255),b	;volatile
 22502                           
 22503                           ; BSR set to: 0
 22504                           ;usb_device_cdc.c: 172: inPipes[0].wCount.Val = 0x08;
 22505  004388  0E00               	movlw	0
 22506  00438A  6FFF               	movwf	(_inPipes+5)& (0+255),b	;volatile
 22507  00438C  0E08               	movlw	8
 22508  00438E  6FFE               	movwf	(_inPipes+4)& (0+255),b	;volatile
 22509                           
 22510                           ; BSR set to: 0
 22511                           ;usb_device_cdc.c: 173: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 22512  004390  81FD               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 22513                           
 22514                           ; BSR set to: 0
 22515                           ;usb_device_cdc.c: 174: inPipes[0].info.bits.busy = 1;
 22516  004392  8FFD               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 22517                           
 22518                           ;usb_device_cdc.c: 175: break;
 22519  004394  0012               	return	
 22520  004396                     
 22521                           ;usb_device_cdc.c: 178: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 22522                           
 22523                           ; BSR set to: 0
 22524  004396  0EB4               	movlw	low _dummy_encapsulated_cmd_response
 22525  004398  0100               	movlb	0	; () banked
 22526  00439A  6FFA               	movwf	_inPipes& (0+255),b	;volatile
 22527  00439C  0E03               	movlw	high _dummy_encapsulated_cmd_response
 22528  00439E  6FFB               	movwf	(_inPipes+1)& (0+255),b	;volatile
 22529                           
 22530                           ; BSR set to: 0
 22531                           ;usb_device_cdc.c: 179: inPipes[0].info.bits.busy = 1;
 22532  0043A0  8FFD               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 22533                           
 22534                           ;usb_device_cdc.c: 180: break;
 22535  0043A2  0012               	return	
 22536  0043A4                     i2l770:
 22537                           
 22538                           ; BSR set to: 4
 22539                           ;usb_device_cdc.c: 185: outPipes[0].wCount.Val = SetupPkt.wLength;
 22540  0043A4  C436 F03C          	movff	1078,_outPipes+4	;volatile
 22541  0043A8  C437 F03D          	movff	1079,_outPipes+5	;volatile
 22542                           
 22543                           ; BSR set to: 4
 22544                           ;usb_device_cdc.c: 186: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 22545  0043AC  0EBC               	movlw	low _line_coding
 22546  0043AE  6E38               	movwf	_outPipes,c	;volatile
 22547  0043B0  0E03               	movlw	high _line_coding
 22548  0043B2  6E39               	movwf	_outPipes+1,c	;volatile
 22549                           
 22550                           ;usb_device_cdc.c: 187: outPipes[0].pFunc = (0);
 22551  0043B4  0E00               	movlw	0
 22552  0043B6  6E3E               	movwf	_outPipes+6,c	;volatile
 22553  0043B8  0E00               	movlw	0
 22554  0043BA  6E3F               	movwf	_outPipes+7,c	;volatile
 22555                           
 22556                           ; BSR set to: 4
 22557                           ;usb_device_cdc.c: 188: outPipes[0].info.bits.busy = 1;
 22558  0043BC  8E3B               	bsf	_outPipes+3,7,c	;volatile
 22559                           
 22560                           ;usb_device_cdc.c: 189: break;
 22561  0043BE  0012               	return	
 22562  0043C0                     
 22563                           ; BSR set to: 4
 22564                           ;usb_device_cdc.c: 192: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 22565                           
 22566                           ; BSR set to: 4
 22567  0043C0  0EBC               	movlw	low _line_coding
 22568  0043C2  0100               	movlb	0	; () banked
 22569  0043C4  6FFA               	movwf	_inPipes& (0+255),b	;volatile
 22570  0043C6  0E03               	movlw	high _line_coding
 22571  0043C8  6FFB               	movwf	(_inPipes+1)& (0+255),b	;volatile
 22572                           
 22573                           ; BSR set to: 0
 22574  0043CA  0E00               	movlw	0
 22575  0043CC  6FFF               	movwf	(_inPipes+5)& (0+255),b	;volatile
 22576  0043CE  0E07               	movlw	7
 22577  0043D0  6FFE               	movwf	(_inPipes+4)& (0+255),b	;volatile
 22578                           
 22579                           ; BSR set to: 0
 22580  0043D2  0EC1               	movlw	193
 22581  0043D4  6FFD               	movwf	(_inPipes+3)& (0+255),b	;volatile
 22582                           
 22583                           ;usb_device_cdc.c: 196: break;
 22584  0043D6  0012               	return	
 22585  0043D8                     i2l772:
 22586                           
 22587                           ; BSR set to: 4
 22588                           ;usb_device_cdc.c: 199: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 22589  0043D8  C432 F2E5          	movff	1074,_control_signal_bitmap	;volatile
 22590                           
 22591                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
 22592  0043DC  0100               	movlb	0	; () banked
 22593  0043DE  8FFD               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 22594                           
 22595                           ; BSR set to: 0
 22596                           ;usb_device_cdc.c: 258: }
 22597                           
 22598                           ; BSR set to: 0
 22599                           ;usb_device_cdc.c: 257: break;
 22600                           
 22601                           ;usb_device_cdc.c: 256: default:
 22602                           
 22603                           ;usb_device_cdc.c: 232: break;
 22604  0043E0  0012               	return	
 22605  0043E2                     i2l766:
 22606                           
 22607                           ; BSR set to: 0
 22608  0043E2  0104               	movlb	4	; () banked
 22609  0043E4  5131               	movf	49,w,b	;volatile
 22610                           
 22611                           ; Switch size 1, requested type "space"
 22612                           ; Number of cases is 5, Range of values is 0 to 34
 22613                           ; switch strategies available:
 22614                           ; Name         Instructions Cycles
 22615                           ; simple_byte           16     9 (average)
 22616                           ;	Chosen strategy is simple_byte
 22617  0043E6  0A00               	xorlw	0	; case 0
 22618  0043E8  B4D8               	btfsc	status,2,c
 22619  0043EA  D7C9               	goto	i2l767
 22620  0043EC  0A01               	xorlw	1	; case 1
 22621  0043EE  B4D8               	btfsc	status,2,c
 22622  0043F0  D7D2               	goto	i2l769
 22623  0043F2  0A21               	xorlw	33	; case 32
 22624  0043F4  B4D8               	btfsc	status,2,c
 22625  0043F6  D7D6               	goto	i2l770
 22626  0043F8  0A01               	xorlw	1	; case 33
 22627  0043FA  B4D8               	btfsc	status,2,c
 22628  0043FC  D7E1               	goto	i2l771
 22629  0043FE  0A03               	xorlw	3	; case 34
 22630  004400  A4D8               	btfss	status,2,c
 22631  004402  0012               	return	
 22632  004404  D7E9               	goto	i2l772
 22633  004406                     __end_of_USBCheckCDCRequest:
 22634                           	opt stack 0
 22635                           pclatu	equ	0xFFB
 22636                           pclath	equ	0xFFA
 22637                           tblptru	equ	0xFF8
 22638                           tblptrh	equ	0xFF7
 22639                           tblptrl	equ	0xFF6
 22640                           tablat	equ	0xFF5
 22641                           prodh	equ	0xFF4
 22642                           prodl	equ	0xFF3
 22643                           intcon	equ	0xFF2
 22644                           indf0	equ	0xFEF
 22645                           postinc0	equ	0xFEE
 22646                           fsr0h	equ	0xFEA
 22647                           fsr0l	equ	0xFE9
 22648                           wreg	equ	0xFE8
 22649                           indf1	equ	0xFE7
 22650                           postdec1	equ	0xFE5
 22651                           fsr1h	equ	0xFE2
 22652                           fsr1l	equ	0xFE1
 22653                           indf2	equ	0xFDF
 22654                           postinc2	equ	0xFDE
 22655                           postdec2	equ	0xFDD
 22656                           plusw2	equ	0xFDB
 22657                           fsr2h	equ	0xFDA
 22658                           fsr2l	equ	0xFD9
 22659                           status	equ	0xFD8
 22660                           
 22661 ;; *************** function _CDCInitEP *****************
 22662 ;; Defined at:
 22663 ;;		line 294 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device_cdc.c"
 22664 ;; Parameters:    Size  Location     Type
 22665 ;;		None
 22666 ;; Auto vars:     Size  Location     Type
 22667 ;;		None
 22668 ;; Return value:  Size  Location     Type
 22669 ;;                  1    wreg      void 
 22670 ;; Registers used:
 22671 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22672 ;; Tracked objects:
 22673 ;;		On entry : 0/0
 22674 ;;		On exit  : 0/0
 22675 ;;		Unchanged: 0/0
 22676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22677 ;;      Params:         0       0       0       0       0       0       0       0       0
 22678 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22679 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22680 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22681 ;;Total ram usage:        0 bytes
 22682 ;; Hardware stack levels used:    1
 22683 ;; Hardware stack levels required when called:    2
 22684 ;; This function calls:
 22685 ;;		_USBEnableEndpoint
 22686 ;;		i2_USBTransferOnePacket
 22687 ;; This function is called by:
 22688 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 22689 ;; This function uses a non-reentrant model
 22690 ;;
 22691                           
 22692                           	psect	text86
 22693  004E4C                     __ptext86:
 22694                           	opt stack 0
 22695  004E4C                     _CDCInitEP:
 22696                           	opt stack 20
 22697                           
 22698                           ;usb_device_cdc.c: 297: line_coding.dwDTERate = 19200;
 22699                           
 22700                           ;incstack = 0
 22701  004E4C  0E00               	movlw	0
 22702  004E4E  0103               	movlb	3	; () banked
 22703  004E50  6FBC               	movwf	_line_coding& (0+255),b
 22704  004E52  0E4B               	movlw	75
 22705  004E54  6FBD               	movwf	(_line_coding+1)& (0+255),b
 22706  004E56  0E00               	movlw	0
 22707  004E58  6FBE               	movwf	(_line_coding+2)& (0+255),b
 22708  004E5A  0E00               	movlw	0
 22709  004E5C  6FBF               	movwf	(_line_coding+3)& (0+255),b
 22710                           
 22711                           ;usb_device_cdc.c: 298: line_coding.bCharFormat = 0x00;
 22712  004E5E  0E00               	movlw	0
 22713  004E60  6FC0               	movwf	(_line_coding+4)& (0+255),b
 22714                           
 22715                           ;usb_device_cdc.c: 299: line_coding.bParityType = 0x00;
 22716  004E62  0E00               	movlw	0
 22717  004E64  6FC1               	movwf	(_line_coding+5)& (0+255),b
 22718                           
 22719                           ;usb_device_cdc.c: 300: line_coding.bDataBits = 0x08;
 22720  004E66  0E08               	movlw	8
 22721  004E68  6FC2               	movwf	(_line_coding+6)& (0+255),b
 22722                           
 22723                           ;usb_device_cdc.c: 302: cdc_rx_len = 0;
 22724  004E6A  0E00               	movlw	0
 22725  004E6C  6E52               	movwf	_cdc_rx_len,c
 22726                           
 22727                           ; BSR set to: 3
 22728                           ;usb_device_cdc.c: 315: USBEnableEndpoint(1,0x02|0x10|0x08);
 22729  004E6E  0E1A               	movlw	26
 22730  004E70  6E09               	movwf	USBEnableEndpoint@options,c
 22731  004E72  0E01               	movlw	1
 22732  004E74  ECE1  F029         	call	_USBEnableEndpoint
 22733                           
 22734                           ;usb_device_cdc.c: 316: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 22735  004E78  0E1E               	movlw	30
 22736  004E7A  6E09               	movwf	USBEnableEndpoint@options,c
 22737  004E7C  0E02               	movlw	2
 22738  004E7E  ECE1  F029         	call	_USBEnableEndpoint
 22739                           
 22740                           ;usb_device_cdc.c: 318: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 22741  004E82  0E00               	movlw	0
 22742  004E84  6E01               	movwf	i2USBTransferOnePacket@dir,c
 22743  004E86  0E40               	movlw	64
 22744  004E88  6E02               	movwf	i2USBTransferOnePacket@data,c
 22745  004E8A  0E05               	movlw	5
 22746  004E8C  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 22747  004E8E  0E40               	movlw	64
 22748  004E90  6E04               	movwf	i2USBTransferOnePacket@len,c
 22749  004E92  0E02               	movlw	2
 22750  004E94  ECBD  F01B         	call	i2_USBTransferOnePacket
 22751  004E98  C001  F04A         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 22752  004E9C  C002  F04B         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 22753                           
 22754                           ;usb_device_cdc.c: 319: CDCDataInHandle = (0);
 22755  004EA0  0E00               	movlw	0
 22756  004EA2  0102               	movlb	2	; () banked
 22757  004EA4  6FD8               	movwf	_CDCDataInHandle& (0+255),b
 22758  004EA6  0E00               	movlw	0
 22759  004EA8  6FD9               	movwf	(_CDCDataInHandle+1)& (0+255),b
 22760                           
 22761                           ; BSR set to: 2
 22762                           ;usb_device_cdc.c: 346: cdc_trf_state = 0;
 22763  004EAA  0E00               	movlw	0
 22764  004EAC  6FE7               	movwf	_cdc_trf_state& (0+255),b
 22765                           
 22766                           ; BSR set to: 2
 22767  004EAE  0012               	return		;funcret
 22768  004EB0                     __end_of_CDCInitEP:
 22769                           	opt stack 0
 22770                           pclatu	equ	0xFFB
 22771                           pclath	equ	0xFFA
 22772                           tblptru	equ	0xFF8
 22773                           tblptrh	equ	0xFF7
 22774                           tblptrl	equ	0xFF6
 22775                           tablat	equ	0xFF5
 22776                           prodh	equ	0xFF4
 22777                           prodl	equ	0xFF3
 22778                           intcon	equ	0xFF2
 22779                           indf0	equ	0xFEF
 22780                           postinc0	equ	0xFEE
 22781                           fsr0h	equ	0xFEA
 22782                           fsr0l	equ	0xFE9
 22783                           wreg	equ	0xFE8
 22784                           indf1	equ	0xFE7
 22785                           postdec1	equ	0xFE5
 22786                           fsr1h	equ	0xFE2
 22787                           fsr1l	equ	0xFE1
 22788                           indf2	equ	0xFDF
 22789                           postinc2	equ	0xFDE
 22790                           postdec2	equ	0xFDD
 22791                           plusw2	equ	0xFDB
 22792                           fsr2h	equ	0xFDA
 22793                           fsr2l	equ	0xFD9
 22794                           status	equ	0xFD8
 22795                           
 22796 ;; *************** function i2_USBTransferOnePacket *****************
 22797 ;; Defined at:
 22798 ;;		line 995 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 22799 ;; Parameters:    Size  Location     Type
 22800 ;;  ep              1    wreg     unsigned char 
 22801 ;;  dir             1    0[COMRAM] unsigned char 
 22802 ;;  data            2    1[COMRAM] PTR unsigned char 
 22803 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 22804 ;;  len             1    3[COMRAM] unsigned char 
 22805 ;; Auto vars:     Size  Location     Type
 22806 ;;  ep              1    8[COMRAM] unsigned char 
 22807 ;;  USBTransferO    2    9[COMRAM] PTR volatile struct __BD
 22808 ;;		 -> RAM(2047), NULL(0), BDT(48), 
 22809 ;; Return value:  Size  Location     Type
 22810 ;;                  2    0[COMRAM] PTR void 
 22811 ;; Registers used:
 22812 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22813 ;; Tracked objects:
 22814 ;;		On entry : 0/0
 22815 ;;		On exit  : 0/0
 22816 ;;		Unchanged: 0/0
 22817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22818 ;;      Params:         4       0       0       0       0       0       0       0       0
 22819 ;;      Locals:         3       0       0       0       0       0       0       0       0
 22820 ;;      Temps:          4       0       0       0       0       0       0       0       0
 22821 ;;      Totals:        11       0       0       0       0       0       0       0       0
 22822 ;;Total ram usage:       11 bytes
 22823 ;; Hardware stack levels used:    1
 22824 ;; This function calls:
 22825 ;;		Nothing
 22826 ;; This function is called by:
 22827 ;;		_CDCInitEP
 22828 ;; This function uses a non-reentrant model
 22829 ;;
 22830                           
 22831                           	psect	text87
 22832  00377A                     __ptext87:
 22833                           	opt stack 0
 22834  00377A                     i2_USBTransferOnePacket:
 22835                           	opt stack 21
 22836                           
 22837                           ; BSR set to: 2
 22838                           ;incstack = 0
 22839                           ;i2USBTransferOnePacket@ep stored from wreg
 22840  00377A  6E09               	movwf	i2USBTransferOnePacket@ep,c
 22841                           
 22842                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 22843                           ;usb_device.c: 1000: if(dir != 0)
 22844  00377C  5001               	movf	i2USBTransferOnePacket@dir,w,c
 22845  00377E  B4D8               	btfsc	status,2,c
 22846  003780  D007               	goto	i2l413
 22847                           
 22848                           ;usb_device.c: 1001: {
 22849                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 22850  003782  5009               	movf	i2USBTransferOnePacket@ep,w,c
 22851  003784  0D02               	mullw	2
 22852  003786  0E40               	movlw	low _pBDTEntryIn
 22853  003788  24F3               	addwf	prodl,w,c
 22854  00378A  6ED9               	movwf	fsr2l,c
 22855  00378C  0E00               	movlw	high _pBDTEntryIn
 22856  00378E  D006               	goto	L24
 22857  003790                     i2l413:
 22858                           
 22859                           ;usb_device.c: 1005: else
 22860                           ;usb_device.c: 1006: {
 22861                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 22862  003790  5009               	movf	i2USBTransferOnePacket@ep,w,c
 22863  003792  0D02               	mullw	2
 22864  003794  0EC8               	movlw	low _pBDTEntryOut
 22865  003796  24F3               	addwf	prodl,w,c
 22866  003798  6ED9               	movwf	fsr2l,c
 22867  00379A  0E02               	movlw	high _pBDTEntryOut
 22868  00379C                     L24:
 22869  00379C  20F4               	addwfc	prodh,w,c
 22870  00379E  6EDA               	movwf	fsr2h,c
 22871  0037A0  CFDE F00A          	movff	postinc2,i2USBTransferOnePacket@handle
 22872  0037A4  CFDD F00B          	movff	postdec2,i2USBTransferOnePacket@handle+1
 22873                           
 22874                           ;usb_device.c: 1009: }
 22875                           ;usb_device.c: 1013: if(handle == 0)
 22876  0037A8  500A               	movf	i2USBTransferOnePacket@handle,w,c
 22877  0037AA  100B               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 22878  0037AC  A4D8               	btfss	status,2,c
 22879  0037AE  D005               	goto	i2l415
 22880                           
 22881                           ;usb_device.c: 1014: {
 22882                           ;usb_device.c: 1015: return 0;
 22883  0037B0  0E00               	movlw	0
 22884  0037B2  6E01               	movwf	?i2_USBTransferOnePacket,c
 22885  0037B4  0E00               	movlw	0
 22886  0037B6  6E02               	movwf	?i2_USBTransferOnePacket+1,c
 22887  0037B8  0012               	return	
 22888  0037BA                     i2l415:
 22889                           
 22890                           ;usb_device.c: 1016: }
 22891                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 22892  0037BA  EE20 F002          	lfsr	2,2
 22893  0037BE  500A               	movf	i2USBTransferOnePacket@handle,w,c
 22894  0037C0  26D9               	addwf	fsr2l,f,c
 22895  0037C2  500B               	movf	i2USBTransferOnePacket@handle+1,w,c
 22896  0037C4  22DA               	addwfc	fsr2h,f,c
 22897  0037C6  C002  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 22898  0037CA  C003  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 22899                           
 22900                           ;usb_device.c: 1030: handle->CNT = len;
 22901  0037CE  EE20 F001          	lfsr	2,1
 22902  0037D2  500A               	movf	i2USBTransferOnePacket@handle,w,c
 22903  0037D4  26D9               	addwf	fsr2l,f,c
 22904  0037D6  500B               	movf	i2USBTransferOnePacket@handle+1,w,c
 22905  0037D8  22DA               	addwfc	fsr2h,f,c
 22906  0037DA  C004  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 22907                           
 22908                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 22909  0037DE  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 22910  0037E2  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 22911  0037E6  0E40               	movlw	64
 22912  0037E8  16DF               	andwf	indf2,f,c
 22913                           
 22914                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 22915  0037EA  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 22916  0037EE  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 22917  0037F2  0E00               	movlw	0
 22918  0037F4  86DB               	bsf	plusw2,3,c
 22919                           
 22920                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 22921  0037F6  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 22922  0037FA  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 22923  0037FE  0E00               	movlw	0
 22924  003800  8EDB               	bsf	plusw2,7,c
 22925                           
 22926                           ;usb_device.c: 1036: if(dir != 0)
 22927  003802  5001               	movf	i2USBTransferOnePacket@dir,w,c
 22928  003804  B4D8               	btfsc	status,2,c
 22929  003806  D018               	goto	i2l417
 22930                           
 22931                           ;usb_device.c: 1037: {
 22932                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
 22933  003808  5009               	movf	i2USBTransferOnePacket@ep,w,c
 22934  00380A  0D02               	mullw	2
 22935  00380C  0E40               	movlw	low _pBDTEntryIn
 22936  00380E  24F3               	addwf	prodl,w,c
 22937  003810  6ED9               	movwf	fsr2l,c
 22938  003812  0E00               	movlw	high _pBDTEntryIn
 22939  003814  20F4               	addwfc	prodh,w,c
 22940  003816  6EDA               	movwf	fsr2h,c
 22941  003818  CFDE F005          	movff	postinc2,??i2_USBTransferOnePacket
 22942  00381C  CFDD F006          	movff	postdec2,??i2_USBTransferOnePacket+1
 22943  003820  0E04               	movlw	4
 22944  003822  1805               	xorwf	??i2_USBTransferOnePacket,w,c
 22945  003824  6E07               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 22946  003826  5006               	movf	??i2_USBTransferOnePacket+1,w,c
 22947  003828  6E08               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 22948  00382A  5009               	movf	i2USBTransferOnePacket@ep,w,c
 22949  00382C  0D02               	mullw	2
 22950  00382E  0E40               	movlw	low _pBDTEntryIn
 22951  003830  24F3               	addwf	prodl,w,c
 22952  003832  6ED9               	movwf	fsr2l,c
 22953  003834  0E00               	movlw	high _pBDTEntryIn
 22954  003836  D017               	goto	L25
 22955  003838                     i2l417:
 22956                           
 22957                           ;usb_device.c: 1041: else
 22958                           ;usb_device.c: 1042: {
 22959                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
 22960  003838  5009               	movf	i2USBTransferOnePacket@ep,w,c
 22961  00383A  0D02               	mullw	2
 22962  00383C  0EC8               	movlw	low _pBDTEntryOut
 22963  00383E  24F3               	addwf	prodl,w,c
 22964  003840  6ED9               	movwf	fsr2l,c
 22965  003842  0E02               	movlw	high _pBDTEntryOut
 22966  003844  20F4               	addwfc	prodh,w,c
 22967  003846  6EDA               	movwf	fsr2h,c
 22968  003848  CFDE F005          	movff	postinc2,??i2_USBTransferOnePacket
 22969  00384C  CFDD F006          	movff	postdec2,??i2_USBTransferOnePacket+1
 22970  003850  0E04               	movlw	4
 22971  003852  1805               	xorwf	??i2_USBTransferOnePacket,w,c
 22972  003854  6E07               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 22973  003856  5006               	movf	??i2_USBTransferOnePacket+1,w,c
 22974  003858  6E08               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 22975  00385A  5009               	movf	i2USBTransferOnePacket@ep,w,c
 22976  00385C  0D02               	mullw	2
 22977  00385E  0EC8               	movlw	low _pBDTEntryOut
 22978  003860  24F3               	addwf	prodl,w,c
 22979  003862  6ED9               	movwf	fsr2l,c
 22980  003864  0E02               	movlw	high _pBDTEntryOut
 22981  003866                     L25:
 22982  003866  20F4               	addwfc	prodh,w,c
 22983  003868  6EDA               	movwf	fsr2h,c
 22984  00386A  C007  FFDE         	movff	??i2_USBTransferOnePacket+2,postinc2
 22985  00386E  C008  FFDD         	movff	??i2_USBTransferOnePacket+3,postdec2
 22986                           
 22987                           ;usb_device.c: 1045: }
 22988                           ;usb_device.c: 1046: return (void*)handle;
 22989  003872  C00A  F001         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 22990  003876  C00B  F002         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 22991  00387A  0012               	return	
 22992  00387C                     __end_ofi2_USBTransferOnePacket:
 22993                           	opt stack 0
 22994                           pclatu	equ	0xFFB
 22995                           pclath	equ	0xFFA
 22996                           tblptru	equ	0xFF8
 22997                           tblptrh	equ	0xFF7
 22998                           tblptrl	equ	0xFF6
 22999                           tablat	equ	0xFF5
 23000                           prodh	equ	0xFF4
 23001                           prodl	equ	0xFF3
 23002                           intcon	equ	0xFF2
 23003                           indf0	equ	0xFEF
 23004                           postinc0	equ	0xFEE
 23005                           fsr0h	equ	0xFEA
 23006                           fsr0l	equ	0xFE9
 23007                           wreg	equ	0xFE8
 23008                           indf1	equ	0xFE7
 23009                           postdec1	equ	0xFE5
 23010                           fsr1h	equ	0xFE2
 23011                           fsr1l	equ	0xFE1
 23012                           indf2	equ	0xFDF
 23013                           postinc2	equ	0xFDE
 23014                           postdec2	equ	0xFDD
 23015                           plusw2	equ	0xFDB
 23016                           fsr2h	equ	0xFDA
 23017                           fsr2l	equ	0xFD9
 23018                           status	equ	0xFD8
 23019                           
 23020 ;; *************** function _USBEnableEndpoint *****************
 23021 ;; Defined at:
 23022 ;;		line 878 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 23023 ;; Parameters:    Size  Location     Type
 23024 ;;  ep              1    wreg     unsigned char 
 23025 ;;  options         1    8[COMRAM] unsigned char 
 23026 ;; Auto vars:     Size  Location     Type
 23027 ;;  ep              1   11[COMRAM] unsigned char 
 23028 ;;  p               2    9[COMRAM] PTR unsigned char 
 23029 ;;		 -> UEP0(1), 
 23030 ;; Return value:  Size  Location     Type
 23031 ;;                  1    wreg      void 
 23032 ;; Registers used:
 23033 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23034 ;; Tracked objects:
 23035 ;;		On entry : 0/0
 23036 ;;		On exit  : 0/0
 23037 ;;		Unchanged: 0/0
 23038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23039 ;;      Params:         1       0       0       0       0       0       0       0       0
 23040 ;;      Locals:         3       0       0       0       0       0       0       0       0
 23041 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23042 ;;      Totals:         4       0       0       0       0       0       0       0       0
 23043 ;;Total ram usage:        4 bytes
 23044 ;; Hardware stack levels used:    1
 23045 ;; Hardware stack levels required when called:    1
 23046 ;; This function calls:
 23047 ;;		_USBConfigureEndpoint
 23048 ;; This function is called by:
 23049 ;;		_CDCInitEP
 23050 ;; This function uses a non-reentrant model
 23051 ;;
 23052                           
 23053                           	psect	text88
 23054  0053C2                     __ptext88:
 23055                           	opt stack 0
 23056  0053C2                     _USBEnableEndpoint:
 23057                           	opt stack 20
 23058                           
 23059                           ;incstack = 0
 23060                           ;USBEnableEndpoint@ep stored from wreg
 23061  0053C2  6E0C               	movwf	USBEnableEndpoint@ep,c
 23062                           
 23063                           ;usb_device.c: 880: unsigned char* p;
 23064                           ;usb_device.c: 884: if(options & 0x04)
 23065  0053C4  A409               	btfss	USBEnableEndpoint@options,2,c
 23066  0053C6  D005               	goto	i2l408
 23067                           
 23068                           ;usb_device.c: 885: {
 23069                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 23070  0053C8  0E00               	movlw	0
 23071  0053CA  6E01               	movwf	USBConfigureEndpoint@direction,c
 23072  0053CC  500C               	movf	USBEnableEndpoint@ep,w,c
 23073  0053CE  EC38  F024         	call	_USBConfigureEndpoint
 23074  0053D2                     i2l408:
 23075                           
 23076                           ;usb_device.c: 887: }
 23077                           ;usb_device.c: 888: if(options & 0x02)
 23078  0053D2  A209               	btfss	USBEnableEndpoint@options,1,c
 23079  0053D4  D005               	goto	i2l409
 23080                           
 23081                           ;usb_device.c: 889: {
 23082                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 23083  0053D6  0E01               	movlw	1
 23084  0053D8  6E01               	movwf	USBConfigureEndpoint@direction,c
 23085  0053DA  500C               	movf	USBEnableEndpoint@ep,w,c
 23086  0053DC  EC38  F024         	call	_USBConfigureEndpoint
 23087  0053E0                     i2l409:
 23088                           
 23089                           ;usb_device.c: 891: }
 23090                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 23091  0053E0  500C               	movf	USBEnableEndpoint@ep,w,c
 23092  0053E2  0D01               	mullw	1
 23093  0053E4  0E70               	movlw	112
 23094  0053E6  24F3               	addwf	prodl,w,c
 23095  0053E8  6E0A               	movwf	USBEnableEndpoint@p,c
 23096  0053EA  0E0F               	movlw	15
 23097  0053EC  20F4               	addwfc	prodh,w,c
 23098  0053EE  6E0B               	movwf	USBEnableEndpoint@p+1,c
 23099                           
 23100                           ;usb_device.c: 901: *p = options;
 23101  0053F0  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 23102  0053F4  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 23103  0053F8  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 23104  0053FC  0012               	return		;funcret
 23105  0053FE                     __end_of_USBEnableEndpoint:
 23106                           	opt stack 0
 23107                           pclatu	equ	0xFFB
 23108                           pclath	equ	0xFFA
 23109                           tblptru	equ	0xFF8
 23110                           tblptrh	equ	0xFF7
 23111                           tblptrl	equ	0xFF6
 23112                           tablat	equ	0xFF5
 23113                           prodh	equ	0xFF4
 23114                           prodl	equ	0xFF3
 23115                           intcon	equ	0xFF2
 23116                           indf0	equ	0xFEF
 23117                           postinc0	equ	0xFEE
 23118                           fsr0h	equ	0xFEA
 23119                           fsr0l	equ	0xFE9
 23120                           wreg	equ	0xFE8
 23121                           indf1	equ	0xFE7
 23122                           postdec1	equ	0xFE5
 23123                           fsr1h	equ	0xFE2
 23124                           fsr1l	equ	0xFE1
 23125                           indf2	equ	0xFDF
 23126                           postinc2	equ	0xFDE
 23127                           postdec2	equ	0xFDD
 23128                           plusw2	equ	0xFDB
 23129                           fsr2h	equ	0xFDA
 23130                           fsr2l	equ	0xFD9
 23131                           status	equ	0xFD8
 23132                           
 23133 ;; *************** function _USBConfigureEndpoint *****************
 23134 ;; Defined at:
 23135 ;;		line 1543 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 23136 ;; Parameters:    Size  Location     Type
 23137 ;;  EPNum           1    wreg     unsigned char 
 23138 ;;  direction       1    0[COMRAM] unsigned char 
 23139 ;; Auto vars:     Size  Location     Type
 23140 ;;  EPNum           1    5[COMRAM] unsigned char 
 23141 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 23142 ;;		 -> BDT(48), 
 23143 ;; Return value:  Size  Location     Type
 23144 ;;                  1    wreg      void 
 23145 ;; Registers used:
 23146 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 23147 ;; Tracked objects:
 23148 ;;		On entry : 0/0
 23149 ;;		On exit  : 0/0
 23150 ;;		Unchanged: 0/0
 23151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23152 ;;      Params:         1       0       0       0       0       0       0       0       0
 23153 ;;      Locals:         3       0       0       0       0       0       0       0       0
 23154 ;;      Temps:          4       0       0       0       0       0       0       0       0
 23155 ;;      Totals:         8       0       0       0       0       0       0       0       0
 23156 ;;Total ram usage:        8 bytes
 23157 ;; Hardware stack levels used:    1
 23158 ;; This function calls:
 23159 ;;		Nothing
 23160 ;; This function is called by:
 23161 ;;		_USBEnableEndpoint
 23162 ;; This function uses a non-reentrant model
 23163 ;;
 23164                           
 23165                           	psect	text89
 23166  004870                     __ptext89:
 23167                           	opt stack 0
 23168  004870                     _USBConfigureEndpoint:
 23169                           	opt stack 20
 23170                           
 23171                           ;incstack = 0
 23172                           ;USBConfigureEndpoint@EPNum stored from wreg
 23173  004870  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 23174                           
 23175                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
 23176                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
 23177  004872  0E00               	movlw	0
 23178  004874  6E07               	movwf	USBConfigureEndpoint@handle,c
 23179  004876  0E04               	movlw	4
 23180  004878  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 23181                           
 23182                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
 23183  00487A  5001               	movf	USBConfigureEndpoint@direction,w,c
 23184  00487C  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 23185  00487E  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 23186  004880  90D8               	bcf	status,0,c
 23187  004882  3602               	rlcf	??_USBConfigureEndpoint,f,c
 23188  004884  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 23189  004886  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 23190  004888  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 23191  00488A  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 23192  00488C  90D8               	bcf	status,0,c
 23193  00488E  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 23194  004890  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 23195  004892  90D8               	bcf	status,0,c
 23196  004894  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 23197  004896  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 23198  004898  5002               	movf	??_USBConfigureEndpoint,w,c
 23199  00489A  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 23200  00489C  5003               	movf	??_USBConfigureEndpoint+1,w,c
 23201  00489E  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 23202  0048A0  90D8               	bcf	status,0,c
 23203  0048A2  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 23204  0048A4  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 23205  0048A6  90D8               	bcf	status,0,c
 23206  0048A8  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 23207  0048AA  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 23208  0048AC  5004               	movf	??_USBConfigureEndpoint+2,w,c
 23209  0048AE  2607               	addwf	USBConfigureEndpoint@handle,f,c
 23210  0048B0  5005               	movf	??_USBConfigureEndpoint+3,w,c
 23211  0048B2  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 23212                           
 23213                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
 23214  0048B4  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 23215  0048B8  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 23216  0048BC  9EDF               	bcf	indf2,7,c
 23217                           
 23218                           ;usb_device.c: 1557: if(direction == 0)
 23219  0048BE  5001               	movf	USBConfigureEndpoint@direction,w,c
 23220  0048C0  A4D8               	btfss	status,2,c
 23221  0048C2  D007               	goto	i2l455
 23222                           
 23223                           ;usb_device.c: 1558: {
 23224                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
 23225  0048C4  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 23226  0048C6  0D02               	mullw	2
 23227  0048C8  0EC8               	movlw	low _pBDTEntryOut
 23228  0048CA  24F3               	addwf	prodl,w,c
 23229  0048CC  6ED9               	movwf	fsr2l,c
 23230  0048CE  0E02               	movlw	high _pBDTEntryOut
 23231  0048D0  D006               	goto	L26
 23232  0048D2                     i2l455:
 23233                           
 23234                           ;usb_device.c: 1561: else
 23235                           ;usb_device.c: 1562: {
 23236                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
 23237  0048D2  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 23238  0048D4  0D02               	mullw	2
 23239  0048D6  0E40               	movlw	low _pBDTEntryIn
 23240  0048D8  24F3               	addwf	prodl,w,c
 23241  0048DA  6ED9               	movwf	fsr2l,c
 23242  0048DC  0E00               	movlw	high _pBDTEntryIn
 23243  0048DE                     L26:
 23244  0048DE  20F4               	addwfc	prodh,w,c
 23245  0048E0  6EDA               	movwf	fsr2h,c
 23246  0048E2  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 23247  0048E6  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 23248                           
 23249                           ;usb_device.c: 1564: }
 23250                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
 23251  0048EA  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 23252  0048EE  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 23253  0048F2  9CDF               	bcf	indf2,6,c
 23254                           
 23255                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
 23256  0048F4  EE20 F004          	lfsr	2,4
 23257  0048F8  5007               	movf	USBConfigureEndpoint@handle,w,c
 23258  0048FA  26D9               	addwf	fsr2l,f,c
 23259  0048FC  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 23260  0048FE  22DA               	addwfc	fsr2h,f,c
 23261  004900  8CDF               	bsf	indf2,6,c
 23262  004902  0012               	return		;funcret
 23263  004904                     __end_of_USBConfigureEndpoint:
 23264                           	opt stack 0
 23265                           pclatu	equ	0xFFB
 23266                           pclath	equ	0xFFA
 23267                           tblptru	equ	0xFF8
 23268                           tblptrh	equ	0xFF7
 23269                           tblptrl	equ	0xFF6
 23270                           tablat	equ	0xFF5
 23271                           prodh	equ	0xFF4
 23272                           prodl	equ	0xFF3
 23273                           intcon	equ	0xFF2
 23274                           indf0	equ	0xFEF
 23275                           postinc0	equ	0xFEE
 23276                           fsr0h	equ	0xFEA
 23277                           fsr0l	equ	0xFE9
 23278                           wreg	equ	0xFE8
 23279                           indf1	equ	0xFE7
 23280                           postdec1	equ	0xFE5
 23281                           fsr1h	equ	0xFE2
 23282                           fsr1l	equ	0xFE1
 23283                           indf2	equ	0xFDF
 23284                           postinc2	equ	0xFDE
 23285                           postdec2	equ	0xFDD
 23286                           plusw2	equ	0xFDB
 23287                           fsr2h	equ	0xFDA
 23288                           fsr2l	equ	0xFD9
 23289                           status	equ	0xFD8
 23290                           
 23291 ;; *************** function _USBCtrlTrfOutHandler *****************
 23292 ;; Defined at:
 23293 ;;		line 2538 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 23294 ;; Parameters:    Size  Location     Type
 23295 ;;		None
 23296 ;; Auto vars:     Size  Location     Type
 23297 ;;		None
 23298 ;; Return value:  Size  Location     Type
 23299 ;;                  1    wreg      void 
 23300 ;; Registers used:
 23301 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23302 ;; Tracked objects:
 23303 ;;		On entry : 0/0
 23304 ;;		On exit  : 0/0
 23305 ;;		Unchanged: 0/0
 23306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23307 ;;      Params:         0       0       0       0       0       0       0       0       0
 23308 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23309 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23310 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23311 ;;Total ram usage:        0 bytes
 23312 ;; Hardware stack levels used:    1
 23313 ;; Hardware stack levels required when called:    2
 23314 ;; This function calls:
 23315 ;;		_USBCtrlTrfRxService
 23316 ;; This function is called by:
 23317 ;;		_USBCtrlEPService
 23318 ;; This function uses a non-reentrant model
 23319 ;;
 23320                           
 23321                           	psect	text90
 23322  004F6E                     __ptext90:
 23323                           	opt stack 0
 23324  004F6E                     _USBCtrlTrfOutHandler:
 23325                           	opt stack 20
 23326                           
 23327                           ;usb_device.c: 2540: if(controlTransferState == 2)
 23328                           
 23329                           ;incstack = 0
 23330  004F6E  0E02               	movlw	2
 23331  004F70  1856               	xorwf	_controlTransferState,w,c	;volatile
 23332  004F72  A4D8               	btfss	status,2,c
 23333  004F74  D003               	goto	i2l561
 23334                           
 23335                           ;usb_device.c: 2541: {
 23336                           ;usb_device.c: 2542: USBCtrlTrfRxService();
 23337  004F76  EC32  F01A         	call	_USBCtrlTrfRxService	;wreg free
 23338                           
 23339                           ;usb_device.c: 2543: }
 23340  004F7A  0012               	return	
 23341  004F7C                     i2l561:
 23342                           
 23343                           ;usb_device.c: 2544: else
 23344                           ;usb_device.c: 2545: {
 23345                           ;usb_device.c: 2548: controlTransferState = 0;
 23346  004F7C  0E00               	movlw	0
 23347  004F7E  6E56               	movwf	_controlTransferState,c	;volatile
 23348                           
 23349                           ;usb_device.c: 2555: if(BothEP0OutUOWNsSet == 0)
 23350  004F80  0101               	movlb	1	; () banked
 23351  004F82  51FB               	movf	_BothEP0OutUOWNsSet& (0+255),w,b	;volatile
 23352  004F84  A4D8               	btfss	status,2,c
 23353  004F86  D01F               	goto	i2l563
 23354                           
 23355                           ; BSR set to: 1
 23356                           ;usb_device.c: 2556: {
 23357                           ;usb_device.c: 2557: pBDTEntryEP0OutNext->CNT = 8;
 23358  004F88  EE20 F001          	lfsr	2,1
 23359  004F8C  504C               	movf	_pBDTEntryEP0OutNext,w,c
 23360  004F8E  26D9               	addwf	fsr2l,f,c
 23361  004F90  504D               	movf	_pBDTEntryEP0OutNext+1,w,c
 23362  004F92  22DA               	addwfc	fsr2h,f,c
 23363  004F94  0E08               	movlw	8
 23364  004F96  6EDF               	movwf	indf2,c
 23365                           
 23366                           ;usb_device.c: 2558: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 23367  004F98  EE20 F002          	lfsr	2,2
 23368  004F9C  504C               	movf	_pBDTEntryEP0OutNext,w,c
 23369  004F9E  26D9               	addwf	fsr2l,f,c
 23370  004FA0  504D               	movf	_pBDTEntryEP0OutNext+1,w,c
 23371  004FA2  22DA               	addwfc	fsr2h,f,c
 23372  004FA4  0E30               	movlw	48
 23373  004FA6  6EDE               	movwf	postinc2,c
 23374  004FA8  0E04               	movlw	4
 23375  004FAA  6EDD               	movwf	postdec2,c
 23376                           
 23377                           ; BSR set to: 1
 23378                           ;usb_device.c: 2559: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 23379  004FAC  C04C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23380  004FB0  C04D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23381  004FB4  0E0C               	movlw	12
 23382  004FB6  6EDF               	movwf	indf2,c
 23383                           
 23384                           ; BSR set to: 1
 23385                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 23386  004FB8  C04C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23387  004FBC  C04D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23388  004FC0  0E00               	movlw	0
 23389  004FC2  8EDB               	bsf	plusw2,7,c
 23390                           
 23391                           ;usb_device.c: 2561: }
 23392  004FC4  0012               	return	
 23393  004FC6                     i2l563:
 23394                           
 23395                           ; BSR set to: 1
 23396                           ;usb_device.c: 2562: else
 23397                           ;usb_device.c: 2563: {
 23398                           ;usb_device.c: 2564: BothEP0OutUOWNsSet = 0;
 23399                           
 23400                           ; BSR set to: 1
 23401  004FC6  0E00               	movlw	0
 23402  004FC8  6FFB               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 23403                           
 23404                           ; BSR set to: 1
 23405  004FCA  0012               	return	
 23406  004FCC                     __end_of_USBCtrlTrfOutHandler:
 23407                           	opt stack 0
 23408                           pclatu	equ	0xFFB
 23409                           pclath	equ	0xFFA
 23410                           tblptru	equ	0xFF8
 23411                           tblptrh	equ	0xFF7
 23412                           tblptrl	equ	0xFF6
 23413                           tablat	equ	0xFF5
 23414                           prodh	equ	0xFF4
 23415                           prodl	equ	0xFF3
 23416                           intcon	equ	0xFF2
 23417                           indf0	equ	0xFEF
 23418                           postinc0	equ	0xFEE
 23419                           fsr0h	equ	0xFEA
 23420                           fsr0l	equ	0xFE9
 23421                           wreg	equ	0xFE8
 23422                           indf1	equ	0xFE7
 23423                           postdec1	equ	0xFE5
 23424                           fsr1h	equ	0xFE2
 23425                           fsr1l	equ	0xFE1
 23426                           indf2	equ	0xFDF
 23427                           postinc2	equ	0xFDE
 23428                           postdec2	equ	0xFDD
 23429                           plusw2	equ	0xFDB
 23430                           fsr2h	equ	0xFDA
 23431                           fsr2l	equ	0xFD9
 23432                           status	equ	0xFD8
 23433                           
 23434 ;; *************** function _USBCtrlTrfRxService *****************
 23435 ;; Defined at:
 23436 ;;		line 1852 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 23437 ;; Parameters:    Size  Location     Type
 23438 ;;		None
 23439 ;; Auto vars:     Size  Location     Type
 23440 ;;  byteToRead      1    1[COMRAM] unsigned char 
 23441 ;;  i               1    0[COMRAM] unsigned char 
 23442 ;; Return value:  Size  Location     Type
 23443 ;;                  1    wreg      void 
 23444 ;; Registers used:
 23445 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23446 ;; Tracked objects:
 23447 ;;		On entry : 0/0
 23448 ;;		On exit  : 0/0
 23449 ;;		Unchanged: 0/0
 23450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23451 ;;      Params:         0       0       0       0       0       0       0       0       0
 23452 ;;      Locals:         2       0       0       0       0       0       0       0       0
 23453 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23454 ;;      Totals:         2       0       0       0       0       0       0       0       0
 23455 ;;Total ram usage:        2 bytes
 23456 ;; Hardware stack levels used:    1
 23457 ;; Hardware stack levels required when called:    1
 23458 ;; This function calls:
 23459 ;;		_USBCtrlEPAllowStatusStage
 23460 ;; This function is called by:
 23461 ;;		_USBCtrlTrfOutHandler
 23462 ;; This function uses a non-reentrant model
 23463 ;;
 23464                           
 23465                           	psect	text91
 23466  003464                     __ptext91:
 23467                           	opt stack 0
 23468  003464                     _USBCtrlTrfRxService:
 23469                           	opt stack 20
 23470                           
 23471                           ;usb_device.c: 1854: uint8_t byteToRead;
 23472                           ;usb_device.c: 1855: uint8_t i;
 23473                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 23474                           
 23475                           ;incstack = 0
 23476  003464  EE20 F001          	lfsr	2,1
 23477  003468  504E               	movf	_pBDTEntryEP0OutCurrent,w,c
 23478  00346A  26D9               	addwf	fsr2l,f,c
 23479  00346C  504F               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 23480  00346E  22DA               	addwfc	fsr2h,f,c
 23481  003470  50DF               	movf	indf2,w,c
 23482  003472  6E02               	movwf	USBCtrlTrfRxService@byteToRead,c
 23483                           
 23484                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
 23485  003474  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 23486  003476  5C3C               	subwf	_outPipes+4,w,c	;volatile
 23487  003478  0E00               	movlw	0
 23488  00347A  583D               	subwfb	_outPipes+5,w,c	;volatile
 23489  00347C  A0D8               	btfss	status,0,c
 23490                           
 23491                           ;usb_device.c: 1866: {
 23492                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
 23493  00347E  C03C  F002         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 23494                           
 23495                           ;usb_device.c: 1868: }
 23496                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
 23497  003482  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 23498  003484  5E3C               	subwf	_outPipes+4,f,c	;volatile
 23499  003486  0E00               	movlw	0
 23500  003488  5A3D               	subwfb	_outPipes+5,f,c	;volatile
 23501                           
 23502                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
 23503  00348A  0E00               	movlw	0
 23504  00348C  6E01               	movwf	USBCtrlTrfRxService@i,c
 23505  00348E  D011               	goto	i2l489
 23506  003490                     
 23507                           ;usb_device.c: 1875: {
 23508                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 23509  003490  5001               	movf	USBCtrlTrfRxService@i,w,c
 23510  003492  0D01               	mullw	1
 23511  003494  0E38               	movlw	56
 23512  003496  24F3               	addwf	prodl,w,c
 23513  003498  6ED9               	movwf	fsr2l,c
 23514  00349A  0E04               	movlw	4
 23515  00349C  20F4               	addwfc	prodh,w,c
 23516  00349E  6EDA               	movwf	fsr2h,c
 23517  0034A0  C038  FFE1         	movff	_outPipes,fsr1l	;volatile
 23518  0034A4  C039  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 23519  0034A8  CFDF FFE7          	movff	indf2,indf1
 23520  0034AC  4A38               	infsnz	_outPipes,f,c	;volatile
 23521  0034AE  2A39               	incf	_outPipes+1,f,c	;volatile
 23522  0034B0  2A01               	incf	USBCtrlTrfRxService@i,f,c
 23523  0034B2                     i2l489:
 23524  0034B2  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 23525  0034B4  5C01               	subwf	USBCtrlTrfRxService@i,w,c
 23526  0034B6  A0D8               	btfss	status,0,c
 23527  0034B8  D7EB               	goto	i2l490
 23528                           
 23529                           ;usb_device.c: 1877: }
 23530                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
 23531  0034BA  503C               	movf	_outPipes+4,w,c	;volatile
 23532  0034BC  103D               	iorwf	_outPipes+5,w,c	;volatile
 23533  0034BE  B4D8               	btfsc	status,2,c
 23534  0034C0  D032               	goto	i2l492
 23535                           
 23536                           ;usb_device.c: 1882: {
 23537                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
 23538  0034C2  EE20 F001          	lfsr	2,1
 23539  0034C6  504C               	movf	_pBDTEntryEP0OutNext,w,c
 23540  0034C8  26D9               	addwf	fsr2l,f,c
 23541  0034CA  504D               	movf	_pBDTEntryEP0OutNext+1,w,c
 23542  0034CC  22DA               	addwfc	fsr2h,f,c
 23543  0034CE  0E08               	movlw	8
 23544  0034D0  6EDF               	movwf	indf2,c
 23545                           
 23546                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 23547  0034D2  EE20 F002          	lfsr	2,2
 23548  0034D6  504C               	movf	_pBDTEntryEP0OutNext,w,c
 23549  0034D8  26D9               	addwf	fsr2l,f,c
 23550  0034DA  504D               	movf	_pBDTEntryEP0OutNext+1,w,c
 23551  0034DC  22DA               	addwfc	fsr2h,f,c
 23552  0034DE  0E38               	movlw	56
 23553  0034E0  6EDE               	movwf	postinc2,c
 23554  0034E2  0E04               	movlw	4
 23555  0034E4  6EDD               	movwf	postdec2,c
 23556                           
 23557                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 23558  0034E6  C04E  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 23559  0034EA  C04F  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 23560  0034EE  BCDF               	btfsc	indf2,6,c
 23561  0034F0  D00D               	goto	i2l493
 23562                           
 23563                           ;usb_device.c: 1886: {
 23564                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 23565  0034F2  C04C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23566  0034F6  C04D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23567  0034FA  0E48               	movlw	72
 23568  0034FC  6EDF               	movwf	indf2,c
 23569                           
 23570                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 23571  0034FE  C04C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23572  003502  C04D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23573  003506  0E00               	movlw	0
 23574  003508  8EDB               	bsf	plusw2,7,c
 23575                           
 23576                           ;usb_device.c: 1889: }
 23577  00350A  0012               	return	
 23578  00350C                     i2l493:
 23579                           
 23580                           ;usb_device.c: 1890: else
 23581                           ;usb_device.c: 1891: {
 23582                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 23583  00350C  C04C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23584  003510  C04D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23585  003514  0E08               	movlw	8
 23586  003516  6EDF               	movwf	indf2,c
 23587                           
 23588                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 23589  003518  C04C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23590  00351C  C04D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23591  003520  0E00               	movlw	0
 23592  003522  8EDB               	bsf	plusw2,7,c
 23593                           
 23594                           ;usb_device.c: 1894: }
 23595                           ;usb_device.c: 1895: }
 23596  003524  0012               	return	
 23597  003526                     i2l492:
 23598                           
 23599                           ;usb_device.c: 1896: else
 23600                           ;usb_device.c: 1897: {
 23601                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 23602  003526  EE20 F001          	lfsr	2,1
 23603  00352A  504C               	movf	_pBDTEntryEP0OutNext,w,c
 23604  00352C  26D9               	addwf	fsr2l,f,c
 23605  00352E  504D               	movf	_pBDTEntryEP0OutNext+1,w,c
 23606  003530  22DA               	addwfc	fsr2h,f,c
 23607  003532  0E08               	movlw	8
 23608  003534  6EDF               	movwf	indf2,c
 23609                           
 23610                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 23611  003536  EE20 F002          	lfsr	2,2
 23612  00353A  504C               	movf	_pBDTEntryEP0OutNext,w,c
 23613  00353C  26D9               	addwf	fsr2l,f,c
 23614  00353E  504D               	movf	_pBDTEntryEP0OutNext+1,w,c
 23615  003540  22DA               	addwfc	fsr2h,f,c
 23616  003542  0E30               	movlw	48
 23617  003544  6EDE               	movwf	postinc2,c
 23618  003546  0E04               	movlw	4
 23619  003548  6EDD               	movwf	postdec2,c
 23620                           
 23621                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 23622  00354A  C04C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23623  00354E  C04D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23624  003552  0E04               	movlw	4
 23625  003554  6EDF               	movwf	indf2,c
 23626                           
 23627                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 23628  003556  C04C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23629  00355A  C04D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23630  00355E  0E00               	movlw	0
 23631  003560  8EDB               	bsf	plusw2,7,c
 23632                           
 23633                           ;usb_device.c: 1926: }
 23634                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
 23635                           
 23636                           ;usb_device.c: 1915: {
 23637                           ;usb_device.c: 1921: outPipes[0].pFunc();
 23638  003562  9E3B               	bcf	_outPipes+3,7,c	;volatile
 23639                           
 23640                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
 23641  003564  5053               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 23642  003566  A4D8               	btfss	status,2,c
 23643  003568  0012               	return	
 23644                           
 23645                           ;usb_device.c: 1942: {
 23646                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
 23647  00356A  ECE1  F01F         	call	_USBCtrlEPAllowStatusStage	;wreg free
 23648  00356E  0012               	return	
 23649  003570                     __end_of_USBCtrlTrfRxService:
 23650                           	opt stack 0
 23651                           pclatu	equ	0xFFB
 23652                           pclath	equ	0xFFA
 23653                           tblptru	equ	0xFF8
 23654                           tblptrh	equ	0xFF7
 23655                           tblptrl	equ	0xFF6
 23656                           tablat	equ	0xFF5
 23657                           prodh	equ	0xFF4
 23658                           prodl	equ	0xFF3
 23659                           intcon	equ	0xFF2
 23660                           indf0	equ	0xFEF
 23661                           postinc0	equ	0xFEE
 23662                           fsr0h	equ	0xFEA
 23663                           fsr0l	equ	0xFE9
 23664                           wreg	equ	0xFE8
 23665                           indf1	equ	0xFE7
 23666                           postdec1	equ	0xFE5
 23667                           fsr1h	equ	0xFE2
 23668                           fsr1l	equ	0xFE1
 23669                           indf2	equ	0xFDF
 23670                           postinc2	equ	0xFDE
 23671                           postdec2	equ	0xFDD
 23672                           plusw2	equ	0xFDB
 23673                           fsr2h	equ	0xFDA
 23674                           fsr2l	equ	0xFD9
 23675                           status	equ	0xFD8
 23676                           
 23677 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 23678 ;; Defined at:
 23679 ;;		line 1416 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 23680 ;; Parameters:    Size  Location     Type
 23681 ;;		None
 23682 ;; Auto vars:     Size  Location     Type
 23683 ;;		None
 23684 ;; Return value:  Size  Location     Type
 23685 ;;                  1    wreg      void 
 23686 ;; Registers used:
 23687 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23688 ;; Tracked objects:
 23689 ;;		On entry : 0/0
 23690 ;;		On exit  : 0/0
 23691 ;;		Unchanged: 0/0
 23692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23693 ;;      Params:         0       0       0       0       0       0       0       0       0
 23694 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23695 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23696 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23697 ;;Total ram usage:        0 bytes
 23698 ;; Hardware stack levels used:    1
 23699 ;; This function calls:
 23700 ;;		Nothing
 23701 ;; This function is called by:
 23702 ;;		_USBDeviceTasks
 23703 ;;		_USBCtrlEPServiceComplete
 23704 ;;		_USBCtrlTrfRxService
 23705 ;; This function uses a non-reentrant model
 23706 ;;
 23707                           
 23708                           	psect	text92
 23709  003FC2                     __ptext92:
 23710                           	opt stack 0
 23711  003FC2                     _USBCtrlEPAllowStatusStage:
 23712                           	opt stack 20
 23713                           
 23714                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
 23715                           
 23716                           ;incstack = 0
 23717  003FC2  0102               	movlb	2	; () banked
 23718  003FC4  51EC               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 23719  003FC6  A4D8               	btfss	status,2,c
 23720  003FC8  0012               	return	
 23721                           
 23722                           ; BSR set to: 2
 23723                           ;usb_device.c: 1424: {
 23724                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
 23725  003FCA  0E01               	movlw	1
 23726  003FCC  6FEC               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 23727                           
 23728                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
 23729  003FCE  51EB               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 23730  003FD0  A4D8               	btfss	status,2,c
 23731  003FD2  0012               	return	
 23732                           
 23733                           ; BSR set to: 2
 23734                           ;usb_device.c: 1427: {
 23735                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
 23736  003FD4  0E01               	movlw	1
 23737  003FD6  6FEB               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 23738                           
 23739                           ; BSR set to: 2
 23740                           ;usb_device.c: 1432: if(controlTransferState == 2)
 23741  003FD8  0E02               	movlw	2
 23742  003FDA  1856               	xorwf	_controlTransferState,w,c	;volatile
 23743  003FDC  A4D8               	btfss	status,2,c
 23744  003FDE  D015               	goto	i2l443
 23745                           
 23746                           ; BSR set to: 2
 23747                           ;usb_device.c: 1433: {
 23748                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
 23749  003FE0  EE20 F001          	lfsr	2,1
 23750  003FE4  5040               	movf	_pBDTEntryIn,w,c
 23751  003FE6  26D9               	addwf	fsr2l,f,c
 23752  003FE8  5041               	movf	_pBDTEntryIn+1,w,c
 23753  003FEA  22DA               	addwfc	fsr2h,f,c
 23754  003FEC  0E00               	movlw	0
 23755  003FEE  6EDF               	movwf	indf2,c
 23756                           
 23757                           ; BSR set to: 2
 23758                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 23759  003FF0  C040  FFD9         	movff	_pBDTEntryIn,fsr2l
 23760  003FF4  C041  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23761  003FF8  0E48               	movlw	72
 23762  003FFA  6EDF               	movwf	indf2,c
 23763                           
 23764                           ; BSR set to: 2
 23765                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
 23766  003FFC  C040  FFD9         	movff	_pBDTEntryIn,fsr2l
 23767  004000  C041  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23768  004004  0E00               	movlw	0
 23769  004006  8EDB               	bsf	plusw2,7,c
 23770                           
 23771                           ;usb_device.c: 1437: }
 23772  004008  0012               	return	
 23773  00400A                     i2l443:
 23774                           
 23775                           ; BSR set to: 2
 23776                           ;usb_device.c: 1438: else if(controlTransferState == 1)
 23777                           
 23778                           ; BSR set to: 2
 23779  00400A  0456               	decf	_controlTransferState,w,c	;volatile
 23780  00400C  A4D8               	btfss	status,2,c
 23781  00400E  0012               	return	
 23782                           
 23783                           ; BSR set to: 2
 23784                           ;usb_device.c: 1439: {
 23785                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
 23786  004010  0E00               	movlw	0
 23787  004012  0101               	movlb	1	; () banked
 23788  004014  6FFB               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 23789                           
 23790                           ; BSR set to: 1
 23791                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
 23792  004016  EE20 F001          	lfsr	2,1
 23793  00401A  504E               	movf	_pBDTEntryEP0OutCurrent,w,c
 23794  00401C  26D9               	addwf	fsr2l,f,c
 23795  00401E  504F               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 23796  004020  22DA               	addwfc	fsr2h,f,c
 23797  004022  0E08               	movlw	8
 23798  004024  6EDF               	movwf	indf2,c
 23799                           
 23800                           ; BSR set to: 1
 23801                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 23802  004026  EE20 F002          	lfsr	2,2
 23803  00402A  504E               	movf	_pBDTEntryEP0OutCurrent,w,c
 23804  00402C  26D9               	addwf	fsr2l,f,c
 23805  00402E  504F               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 23806  004030  22DA               	addwfc	fsr2h,f,c
 23807  004032  0E30               	movlw	48
 23808  004034  6EDE               	movwf	postinc2,c
 23809  004036  0E04               	movlw	4
 23810  004038  6EDD               	movwf	postdec2,c
 23811                           
 23812                           ; BSR set to: 1
 23813                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 23814  00403A  C04E  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 23815  00403E  C04F  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 23816  004042  0E04               	movlw	4
 23817  004044  6EDF               	movwf	indf2,c
 23818                           
 23819                           ; BSR set to: 1
 23820                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 23821  004046  C04E  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 23822  00404A  C04F  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 23823  00404E  0E00               	movlw	0
 23824  004050  8EDB               	bsf	plusw2,7,c
 23825                           
 23826                           ; BSR set to: 1
 23827                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
 23828  004052  0E01               	movlw	1
 23829  004054  6FFB               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 23830                           
 23831                           ; BSR set to: 1
 23832                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
 23833  004056  EE20 F001          	lfsr	2,1
 23834  00405A  504C               	movf	_pBDTEntryEP0OutNext,w,c
 23835  00405C  26D9               	addwf	fsr2l,f,c
 23836  00405E  504D               	movf	_pBDTEntryEP0OutNext+1,w,c
 23837  004060  22DA               	addwfc	fsr2h,f,c
 23838  004062  0E08               	movlw	8
 23839  004064  6EDF               	movwf	indf2,c
 23840                           
 23841                           ; BSR set to: 1
 23842                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 23843  004066  EE20 F002          	lfsr	2,2
 23844  00406A  504C               	movf	_pBDTEntryEP0OutNext,w,c
 23845  00406C  26D9               	addwf	fsr2l,f,c
 23846  00406E  504D               	movf	_pBDTEntryEP0OutNext+1,w,c
 23847  004070  22DA               	addwfc	fsr2h,f,c
 23848  004072  0E30               	movlw	48
 23849  004074  6EDE               	movwf	postinc2,c
 23850  004076  0E04               	movlw	4
 23851  004078  6EDD               	movwf	postdec2,c
 23852                           
 23853                           ; BSR set to: 1
 23854                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 23855  00407A  C04C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23856  00407E  C04D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23857  004082  0E80               	movlw	128
 23858  004084  6EDF               	movwf	indf2,c
 23859                           
 23860                           ; BSR set to: 1
 23861                           
 23862                           ; BSR set to: 1
 23863                           
 23864                           ; BSR set to: 1
 23865  004086  0012               	return	
 23866  004088                     __end_of_USBCtrlEPAllowStatusStage:
 23867                           	opt stack 0
 23868                           pclatu	equ	0xFFB
 23869                           pclath	equ	0xFFA
 23870                           tblptru	equ	0xFF8
 23871                           tblptrh	equ	0xFF7
 23872                           tblptrl	equ	0xFF6
 23873                           tablat	equ	0xFF5
 23874                           prodh	equ	0xFF4
 23875                           prodl	equ	0xFF3
 23876                           intcon	equ	0xFF2
 23877                           indf0	equ	0xFEF
 23878                           postinc0	equ	0xFEE
 23879                           fsr0h	equ	0xFEA
 23880                           fsr0l	equ	0xFE9
 23881                           wreg	equ	0xFE8
 23882                           indf1	equ	0xFE7
 23883                           postdec1	equ	0xFE5
 23884                           fsr1h	equ	0xFE2
 23885                           fsr1l	equ	0xFE1
 23886                           indf2	equ	0xFDF
 23887                           postinc2	equ	0xFDE
 23888                           postdec2	equ	0xFDD
 23889                           plusw2	equ	0xFDB
 23890                           fsr2h	equ	0xFDA
 23891                           fsr2l	equ	0xFD9
 23892                           status	equ	0xFD8
 23893                           
 23894 ;; *************** function _USBCtrlTrfInHandler *****************
 23895 ;; Defined at:
 23896 ;;		line 2592 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 23897 ;; Parameters:    Size  Location     Type
 23898 ;;		None
 23899 ;; Auto vars:     Size  Location     Type
 23900 ;;  lastDTS         1    1[COMRAM] unsigned char 
 23901 ;; Return value:  Size  Location     Type
 23902 ;;                  1    wreg      void 
 23903 ;; Registers used:
 23904 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23905 ;; Tracked objects:
 23906 ;;		On entry : 0/0
 23907 ;;		On exit  : 0/0
 23908 ;;		Unchanged: 0/0
 23909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23910 ;;      Params:         0       0       0       0       0       0       0       0       0
 23911 ;;      Locals:         1       0       0       0       0       0       0       0       0
 23912 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23913 ;;      Totals:         1       0       0       0       0       0       0       0       0
 23914 ;;Total ram usage:        1 bytes
 23915 ;; Hardware stack levels used:    1
 23916 ;; Hardware stack levels required when called:    1
 23917 ;; This function calls:
 23918 ;;		_USBCtrlTrfTxService
 23919 ;; This function is called by:
 23920 ;;		_USBCtrlEPService
 23921 ;; This function uses a non-reentrant model
 23922 ;;
 23923                           
 23924                           	psect	text93
 23925  004088                     __ptext93:
 23926                           	opt stack 0
 23927  004088                     _USBCtrlTrfInHandler:
 23928                           	opt stack 21
 23929                           
 23930                           ;usb_device.c: 2594: uint8_t lastDTS;
 23931                           ;usb_device.c: 2596: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 23932                           
 23933                           ;incstack = 0
 23934  004088  C040  FFD9         	movff	_pBDTEntryIn,fsr2l
 23935  00408C  C041  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23936  004090  0E00               	movlw	0
 23937  004092  BCDF               	btfsc	indf2,6,c
 23938  004094  0E01               	movlw	1
 23939  004096  6E02               	movwf	USBCtrlTrfInHandler@lastDTS,c
 23940                           
 23941                           ;usb_device.c: 2599: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 23942  004098  0E04               	movlw	4
 23943  00409A  1840               	xorwf	_pBDTEntryIn,w,c
 23944  00409C  6E40               	movwf	_pBDTEntryIn,c
 23945  00409E  5041               	movf	_pBDTEntryIn+1,w,c
 23946  0040A0  6E41               	movwf	_pBDTEntryIn+1,c
 23947                           
 23948                           ;usb_device.c: 2604: if(USBDeviceState == ADR_PENDING_STATE)
 23949  0040A2  0E08               	movlw	8
 23950  0040A4  1858               	xorwf	_USBDeviceState,w,c	;volatile
 23951  0040A6  A4D8               	btfss	status,2,c
 23952  0040A8  D00B               	goto	i2l570
 23953                           
 23954                           ;usb_device.c: 2605: {
 23955                           ;usb_device.c: 2606: UADDR = (SetupPkt.bDevADR & 0x7F);
 23956  0040AA  0104               	movlb	4	; () banked
 23957  0040AC  5132               	movf	50,w,b	;volatile
 23958  0040AE  0B7F               	andlw	127
 23959  0040B0  6E6E               	movwf	3950,c	;volatile
 23960                           
 23961                           ; BSR set to: 4
 23962                           ;usb_device.c: 2607: if(UADDR != 0u)
 23963  0040B2  506E               	movf	3950,w,c	;volatile
 23964  0040B4  B4D8               	btfsc	status,2,c
 23965  0040B6  D002               	goto	i2l569
 23966                           
 23967                           ; BSR set to: 4
 23968                           ;usb_device.c: 2608: {
 23969                           ;usb_device.c: 2609: USBDeviceState=ADDRESS_STATE;
 23970  0040B8  0E10               	movlw	16
 23971  0040BA  D001               	goto	L27
 23972  0040BC                     i2l569:
 23973                           
 23974                           ; BSR set to: 4
 23975                           ;usb_device.c: 2611: else
 23976                           ;usb_device.c: 2612: {
 23977                           ;usb_device.c: 2613: USBDeviceState=DEFAULT_STATE;
 23978                           
 23979                           ; BSR set to: 4
 23980  0040BC  0E04               	movlw	4
 23981  0040BE                     L27:
 23982  0040BE  6E58               	movwf	_USBDeviceState,c	;volatile
 23983  0040C0                     i2l570:
 23984                           
 23985                           ;usb_device.c: 2614: }
 23986                           ;usb_device.c: 2615: }
 23987                           ;usb_device.c: 2618: if(controlTransferState == 1)
 23988                           
 23989                           ; BSR set to: 4
 23990                           
 23991                           ; BSR set to: 4
 23992  0040C0  0456               	decf	_controlTransferState,w,c	;volatile
 23993  0040C2  A4D8               	btfss	status,2,c
 23994  0040C4  D03A               	goto	i2l571
 23995                           
 23996                           ;usb_device.c: 2619: {
 23997                           ;usb_device.c: 2620: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 23998  0040C6  EE20 F002          	lfsr	2,2
 23999  0040CA  5040               	movf	_pBDTEntryIn,w,c
 24000  0040CC  26D9               	addwf	fsr2l,f,c
 24001  0040CE  5041               	movf	_pBDTEntryIn+1,w,c
 24002  0040D0  22DA               	addwfc	fsr2h,f,c
 24003  0040D2  0E38               	movlw	56
 24004  0040D4  6EDE               	movwf	postinc2,c
 24005  0040D6  0E04               	movlw	4
 24006  0040D8  6EDD               	movwf	postdec2,c
 24007                           
 24008                           ;usb_device.c: 2621: USBCtrlTrfTxService();
 24009  0040DA  EC77  F01F         	call	_USBCtrlTrfTxService	;wreg free
 24010                           
 24011                           ;usb_device.c: 2627: if(shortPacketStatus == 2)
 24012  0040DE  0E02               	movlw	2
 24013  0040E0  1857               	xorwf	_shortPacketStatus,w,c	;volatile
 24014  0040E2  A4D8               	btfss	status,2,c
 24015  0040E4  D00D               	goto	i2l572
 24016                           
 24017                           ;usb_device.c: 2628: {
 24018                           ;usb_device.c: 2631: pBDTEntryIn[0]->STAT.Val = 0x04;
 24019  0040E6  C040  FFD9         	movff	_pBDTEntryIn,fsr2l
 24020  0040EA  C041  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 24021  0040EE  0E04               	movlw	4
 24022  0040F0  6EDF               	movwf	indf2,c
 24023                           
 24024                           ;usb_device.c: 2632: pBDTEntryIn[0]->STAT.Val |= 0x80;
 24025  0040F2  C040  FFD9         	movff	_pBDTEntryIn,fsr2l
 24026  0040F6  C041  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 24027  0040FA  0E00               	movlw	0
 24028  0040FC  8EDB               	bsf	plusw2,7,c
 24029                           
 24030                           ;usb_device.c: 2633: }
 24031  0040FE  0012               	return	
 24032  004100                     i2l572:
 24033                           
 24034                           ;usb_device.c: 2634: else
 24035                           ;usb_device.c: 2635: {
 24036                           ;usb_device.c: 2636: if(lastDTS == 0)
 24037  004100  5002               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 24038  004102  A4D8               	btfss	status,2,c
 24039  004104  D00D               	goto	i2l574
 24040                           
 24041                           ;usb_device.c: 2637: {
 24042                           ;usb_device.c: 2638: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 24043  004106  C040  FFD9         	movff	_pBDTEntryIn,fsr2l
 24044  00410A  C041  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 24045  00410E  0E48               	movlw	72
 24046  004110  6EDF               	movwf	indf2,c
 24047                           
 24048                           ;usb_device.c: 2639: pBDTEntryIn[0]->STAT.Val |= 0x80;
 24049  004112  C040  FFD9         	movff	_pBDTEntryIn,fsr2l
 24050  004116  C041  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 24051  00411A  0E00               	movlw	0
 24052  00411C  8EDB               	bsf	plusw2,7,c
 24053                           
 24054                           ;usb_device.c: 2640: }
 24055  00411E  0012               	return	
 24056  004120                     i2l574:
 24057                           
 24058                           ;usb_device.c: 2641: else
 24059                           ;usb_device.c: 2642: {
 24060                           ;usb_device.c: 2643: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 24061  004120  C040  FFD9         	movff	_pBDTEntryIn,fsr2l
 24062  004124  C041  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 24063  004128  0E08               	movlw	8
 24064  00412A  6EDF               	movwf	indf2,c
 24065                           
 24066                           ;usb_device.c: 2644: pBDTEntryIn[0]->STAT.Val |= 0x80;
 24067  00412C  C040  FFD9         	movff	_pBDTEntryIn,fsr2l
 24068  004130  C041  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 24069  004134  0E00               	movlw	0
 24070  004136  8EDB               	bsf	plusw2,7,c
 24071                           
 24072                           ;usb_device.c: 2645: }
 24073                           ;usb_device.c: 2646: }
 24074                           ;usb_device.c: 2647: }
 24075  004138  0012               	return	
 24076  00413A                     i2l571:
 24077                           
 24078                           ;usb_device.c: 2648: else
 24079                           ;usb_device.c: 2649: {
 24080                           ;usb_device.c: 2653: if(outPipes[0].info.bits.busy == 1)
 24081  00413A  BE3B               	btfsc	_outPipes+3,7,c	;volatile
 24082                           
 24083                           ;usb_device.c: 2658: }
 24084                           ;usb_device.c: 2659: outPipes[0].info.bits.busy = 0;
 24085                           
 24086                           ;usb_device.c: 2656: {
 24087                           ;usb_device.c: 2657: outPipes[0].pFunc();
 24088  00413C  9E3B               	bcf	_outPipes+3,7,c	;volatile
 24089                           
 24090                           ;usb_device.c: 2660: }
 24091                           ;usb_device.c: 2662: controlTransferState = 0;
 24092  00413E  0E00               	movlw	0
 24093  004140  6E56               	movwf	_controlTransferState,c	;volatile
 24094  004142  0012               	return	
 24095  004144                     __end_of_USBCtrlTrfInHandler:
 24096                           	opt stack 0
 24097                           pclatu	equ	0xFFB
 24098                           pclath	equ	0xFFA
 24099                           tblptru	equ	0xFF8
 24100                           tblptrh	equ	0xFF7
 24101                           tblptrl	equ	0xFF6
 24102                           tablat	equ	0xFF5
 24103                           prodh	equ	0xFF4
 24104                           prodl	equ	0xFF3
 24105                           intcon	equ	0xFF2
 24106                           indf0	equ	0xFEF
 24107                           postinc0	equ	0xFEE
 24108                           fsr0h	equ	0xFEA
 24109                           fsr0l	equ	0xFE9
 24110                           wreg	equ	0xFE8
 24111                           indf1	equ	0xFE7
 24112                           postdec1	equ	0xFE5
 24113                           fsr1h	equ	0xFE2
 24114                           fsr1l	equ	0xFE1
 24115                           indf2	equ	0xFDF
 24116                           postinc2	equ	0xFDE
 24117                           postdec2	equ	0xFDD
 24118                           plusw2	equ	0xFDB
 24119                           fsr2h	equ	0xFDA
 24120                           fsr2l	equ	0xFD9
 24121                           status	equ	0xFD8
 24122                           
 24123 ;; *************** function _USBCtrlTrfTxService *****************
 24124 ;; Defined at:
 24125 ;;		line 1771 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 24126 ;; Parameters:    Size  Location     Type
 24127 ;;		None
 24128 ;; Auto vars:     Size  Location     Type
 24129 ;;  byteToSend      1    0[COMRAM] unsigned char 
 24130 ;; Return value:  Size  Location     Type
 24131 ;;                  1    wreg      void 
 24132 ;; Registers used:
 24133 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 24134 ;; Tracked objects:
 24135 ;;		On entry : 0/0
 24136 ;;		On exit  : 0/0
 24137 ;;		Unchanged: 0/0
 24138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24139 ;;      Params:         0       0       0       0       0       0       0       0       0
 24140 ;;      Locals:         1       0       0       0       0       0       0       0       0
 24141 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24142 ;;      Totals:         1       0       0       0       0       0       0       0       0
 24143 ;;Total ram usage:        1 bytes
 24144 ;; Hardware stack levels used:    1
 24145 ;; This function calls:
 24146 ;;		Nothing
 24147 ;; This function is called by:
 24148 ;;		_USBCtrlEPAllowDataStage
 24149 ;;		_USBCtrlTrfInHandler
 24150 ;; This function uses a non-reentrant model
 24151 ;;
 24152                           
 24153                           	psect	text94
 24154  003EEE                     __ptext94:
 24155                           	opt stack 0
 24156  003EEE                     _USBCtrlTrfTxService:
 24157                           	opt stack 19
 24158                           
 24159                           ;usb_device.c: 1773: uint8_t byteToSend;
 24160                           ;usb_device.c: 1777: byteToSend = 8;
 24161                           
 24162                           ;incstack = 0
 24163  003EEE  0E08               	movlw	8
 24164  003EF0  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 24165                           
 24166                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
 24167  003EF2  0100               	movlb	0	; () banked
 24168  003EF4  51FF               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 24169  003EF6  E110               	bnz	i2l7331
 24170  003EF8  0E08               	movlw	8
 24171  003EFA  5DFE               	subwf	(_inPipes+4)& (0+255),w,b	;volatile
 24172  003EFC  B0D8               	btfsc	status,0,c
 24173  003EFE  D00C               	goto	i2l476
 24174                           
 24175                           ; BSR set to: 0
 24176                           ;usb_device.c: 1779: {
 24177                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
 24178  003F00  C0FE  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 24179                           
 24180                           ; BSR set to: 0
 24181                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
 24182  003F04  5057               	movf	_shortPacketStatus,w,c	;volatile
 24183  003F06  A4D8               	btfss	status,2,c
 24184  003F08  D002               	goto	i2l474
 24185                           
 24186                           ; BSR set to: 0
 24187                           ;usb_device.c: 1788: {
 24188                           ;usb_device.c: 1789: shortPacketStatus = 1;
 24189  003F0A  0E01               	movlw	1
 24190  003F0C  D004               	goto	L28
 24191  003F0E                     i2l474:
 24192                           
 24193                           ; BSR set to: 0
 24194                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
 24195                           
 24196                           ; BSR set to: 0
 24197  003F0E  0457               	decf	_shortPacketStatus,w,c	;volatile
 24198  003F10  A4D8               	btfss	status,2,c
 24199  003F12  D002               	goto	i2l476
 24200                           
 24201                           ; BSR set to: 0
 24202                           ;usb_device.c: 1792: {
 24203                           ;usb_device.c: 1793: shortPacketStatus = 2;
 24204  003F14  0E02               	movlw	2
 24205  003F16                     L28:
 24206  003F16  6E57               	movwf	_shortPacketStatus,c	;volatile
 24207  003F18                     i2l476:
 24208  003F18                     i2l7331:
 24209                           
 24210                           ; BSR set to: 0
 24211                           ;usb_device.c: 1794: }
 24212                           ;usb_device.c: 1795: }
 24213                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
 24214  003F18  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 24215  003F1A  5FFE               	subwf	(_inPipes+4)& (0+255),f,b	;volatile
 24216  003F1C  0E00               	movlw	0
 24217  003F1E  5BFF               	subwfb	(_inPipes+5)& (0+255),f,b	;volatile
 24218                           
 24219                           ; BSR set to: 0
 24220                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
 24221  003F20  EE20 F001          	lfsr	2,1
 24222  003F24  5040               	movf	_pBDTEntryIn,w,c
 24223  003F26  26D9               	addwf	fsr2l,f,c
 24224  003F28  5041               	movf	_pBDTEntryIn+1,w,c
 24225  003F2A  22DA               	addwfc	fsr2h,f,c
 24226  003F2C  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 24227                           
 24228                           ; BSR set to: 0
 24229                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
 24230  003F30  0E38               	movlw	56
 24231  003F32  0103               	movlb	3	; () banked
 24232  003F34  6F4C               	movwf	_pDst& (0+255),b
 24233  003F36  0E04               	movlw	4
 24234  003F38  6F4D               	movwf	(_pDst+1)& (0+255),b
 24235                           
 24236                           ; BSR set to: 3
 24237                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 24238  003F3A  0100               	movlb	0	; () banked
 24239  003F3C  A1FD               	btfss	(_inPipes+3)& (0+255),0,b	;volatile
 24240  003F3E  D01D               	goto	i2l478
 24241  003F40  D03C               	goto	i2l482
 24242  003F42                     
 24243                           ;usb_device.c: 1812: {
 24244                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
 24245                           
 24246                           ; BSR set to: 0
 24247  003F42  C0FA  FFF6         	movff	_inPipes,tblptrl	;volatile
 24248  003F46  C0FB  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 24249  003F4A  6AF8               	clrf	tblptru,c
 24250  003F4C  C34C  FFD9         	movff	_pDst,fsr2l
 24251  003F50  C34D  FFDA         	movff	_pDst+1,fsr2h
 24252  003F54  0E07               	movlw	(high __ramtop+-1)
 24253  003F56  64F7               	cpfsgt	tblptrh,c
 24254  003F58  D003               	bra	i2u571_47
 24255  003F5A  0008               	tblrd		*
 24256  003F5C  50F5               	movf	tablat,w,c
 24257  003F5E  D005               	bra	i2u571_40
 24258  003F60                     i2u571_47:
 24259  003F60  CFF6 FFE9          	movff	tblptrl,fsr0l
 24260  003F64  CFF7 FFEA          	movff	tblptrh,fsr0h
 24261  003F68  50EF               	movf	indf0,w,c
 24262  003F6A                     i2u571_40:
 24263  003F6A  6EDF               	movwf	indf2,c
 24264  003F6C  0100               	movlb	0	; () banked
 24265  003F6E  4BFA               	infsnz	_inPipes& (0+255),f,b	;volatile
 24266  003F70  2BFB               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 24267                           
 24268                           ; BSR set to: 0
 24269  003F72  0103               	movlb	3	; () banked
 24270  003F74  4B4C               	infsnz	_pDst& (0+255),f,b
 24271  003F76  2B4D               	incf	(_pDst+1)& (0+255),f,b
 24272                           
 24273                           ; BSR set to: 3
 24274                           ;usb_device.c: 1814: byteToSend--;
 24275  003F78  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 24276  003F7A                     i2l478:
 24277                           
 24278                           ; BSR set to: 3
 24279  003F7A  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 24280  003F7C  B4D8               	btfsc	status,2,c
 24281  003F7E  0012               	return	
 24282  003F80  D7E0               	goto	i2l479
 24283  003F82                     
 24284                           ;usb_device.c: 1820: {
 24285                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
 24286  003F82  C0FA  FFF6         	movff	_inPipes,tblptrl	;volatile
 24287  003F86  C0FB  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 24288  003F8A  6AF8               	clrf	tblptru,c
 24289  003F8C  C34C  FFD9         	movff	_pDst,fsr2l
 24290  003F90  C34D  FFDA         	movff	_pDst+1,fsr2h
 24291  003F94  0E07               	movlw	(high __ramtop+-1)
 24292  003F96  64F7               	cpfsgt	tblptrh,c
 24293  003F98  D003               	bra	i2u573_47
 24294  003F9A  0008               	tblrd		*
 24295  003F9C  50F5               	movf	tablat,w,c
 24296  003F9E  D005               	bra	i2u573_40
 24297  003FA0                     i2u573_47:
 24298  003FA0  CFF6 FFE9          	movff	tblptrl,fsr0l
 24299  003FA4  CFF7 FFEA          	movff	tblptrh,fsr0h
 24300  003FA8  50EF               	movf	indf0,w,c
 24301  003FAA                     i2u573_40:
 24302  003FAA  6EDF               	movwf	indf2,c
 24303  003FAC  0100               	movlb	0	; () banked
 24304  003FAE  4BFA               	infsnz	_inPipes& (0+255),f,b	;volatile
 24305  003FB0  2BFB               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 24306                           
 24307                           ; BSR set to: 0
 24308  003FB2  0103               	movlb	3	; () banked
 24309  003FB4  4B4C               	infsnz	_pDst& (0+255),f,b
 24310  003FB6  2B4D               	incf	(_pDst+1)& (0+255),f,b
 24311                           
 24312                           ; BSR set to: 3
 24313                           ;usb_device.c: 1822: byteToSend--;
 24314  003FB8  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 24315  003FBA                     i2l482:
 24316                           
 24317                           ; BSR set to: 3
 24318  003FBA  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 24319  003FBC  B4D8               	btfsc	status,2,c
 24320  003FBE  0012               	return	
 24321  003FC0  D7E0               	goto	i2l483
 24322  003FC2                     __end_of_USBCtrlTrfTxService:
 24323                           	opt stack 0
 24324                           pclatu	equ	0xFFB
 24325                           pclath	equ	0xFFA
 24326                           tblptru	equ	0xFF8
 24327                           tblptrh	equ	0xFF7
 24328                           tblptrl	equ	0xFF6
 24329                           tablat	equ	0xFF5
 24330                           prodh	equ	0xFF4
 24331                           prodl	equ	0xFF3
 24332                           intcon	equ	0xFF2
 24333                           indf0	equ	0xFEF
 24334                           postinc0	equ	0xFEE
 24335                           fsr0h	equ	0xFEA
 24336                           fsr0l	equ	0xFE9
 24337                           wreg	equ	0xFE8
 24338                           indf1	equ	0xFE7
 24339                           postdec1	equ	0xFE5
 24340                           fsr1h	equ	0xFE2
 24341                           fsr1l	equ	0xFE1
 24342                           indf2	equ	0xFDF
 24343                           postinc2	equ	0xFDE
 24344                           postdec2	equ	0xFDD
 24345                           plusw2	equ	0xFDB
 24346                           fsr2h	equ	0xFDA
 24347                           fsr2l	equ	0xFD9
 24348                           status	equ	0xFD8
 24349                           pclatu	equ	0xFFB
 24350                           pclath	equ	0xFFA
 24351                           tblptru	equ	0xFF8
 24352                           tblptrh	equ	0xFF7
 24353                           tblptrl	equ	0xFF6
 24354                           tablat	equ	0xFF5
 24355                           prodh	equ	0xFF4
 24356                           prodl	equ	0xFF3
 24357                           intcon	equ	0xFF2
 24358                           indf0	equ	0xFEF
 24359                           postinc0	equ	0xFEE
 24360                           fsr0h	equ	0xFEA
 24361                           fsr0l	equ	0xFE9
 24362                           wreg	equ	0xFE8
 24363                           indf1	equ	0xFE7
 24364                           postdec1	equ	0xFE5
 24365                           fsr1h	equ	0xFE2
 24366                           fsr1l	equ	0xFE1
 24367                           indf2	equ	0xFDF
 24368                           postinc2	equ	0xFDE
 24369                           postdec2	equ	0xFDD
 24370                           plusw2	equ	0xFDB
 24371                           fsr2h	equ	0xFDA
 24372                           fsr2l	equ	0xFD9
 24373                           status	equ	0xFD8
 24374                           
 24375                           	psect	rparam
 24376  0000                     pclatu	equ	0xFFB
 24377                           pclath	equ	0xFFA
 24378                           tblptru	equ	0xFF8
 24379                           tblptrh	equ	0xFF7
 24380                           tblptrl	equ	0xFF6
 24381                           tablat	equ	0xFF5
 24382                           prodh	equ	0xFF4
 24383                           prodl	equ	0xFF3
 24384                           intcon	equ	0xFF2
 24385                           indf0	equ	0xFEF
 24386                           postinc0	equ	0xFEE
 24387                           fsr0h	equ	0xFEA
 24388                           fsr0l	equ	0xFE9
 24389                           wreg	equ	0xFE8
 24390                           indf1	equ	0xFE7
 24391                           postdec1	equ	0xFE5
 24392                           fsr1h	equ	0xFE2
 24393                           fsr1l	equ	0xFE1
 24394                           indf2	equ	0xFDF
 24395                           postinc2	equ	0xFDE
 24396                           postdec2	equ	0xFDD
 24397                           plusw2	equ	0xFDB
 24398                           fsr2h	equ	0xFDA
 24399                           fsr2l	equ	0xFD9
 24400                           status	equ	0xFD8
 24401                           
 24402                           	psect	temp
 24403  00005F                     btemp:
 24404                           	opt stack 0
 24405  00005F                     	ds	1
 24406  0000                     int$flags	set	btemp
 24407  0000                     wtemp6	set	btemp+1
 24408                           pclatu	equ	0xFFB
 24409                           pclath	equ	0xFFA
 24410                           tblptru	equ	0xFF8
 24411                           tblptrh	equ	0xFF7
 24412                           tblptrl	equ	0xFF6
 24413                           tablat	equ	0xFF5
 24414                           prodh	equ	0xFF4
 24415                           prodl	equ	0xFF3
 24416                           intcon	equ	0xFF2
 24417                           indf0	equ	0xFEF
 24418                           postinc0	equ	0xFEE
 24419                           fsr0h	equ	0xFEA
 24420                           fsr0l	equ	0xFE9
 24421                           wreg	equ	0xFE8
 24422                           indf1	equ	0xFE7
 24423                           postdec1	equ	0xFE5
 24424                           fsr1h	equ	0xFE2
 24425                           fsr1l	equ	0xFE1
 24426                           indf2	equ	0xFDF
 24427                           postinc2	equ	0xFDE
 24428                           postdec2	equ	0xFDD
 24429                           plusw2	equ	0xFDB
 24430                           fsr2h	equ	0xFDA
 24431                           fsr2l	equ	0xFD9
 24432                           status	equ	0xFD8


Data Sizes:
    Strings     504
    Constant    536
    Data        31
    BSS         901
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     55      94
    BANK0           160    154     160
    BANK1           256    249     256
    BANK2           256    200     255
    BANK3           256      0     225
    BANK4           192      0     100
    BANK5           128      0     100
    BANK6           256      0     200
    BANK7           256      0     200

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMl[48]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_20(CODE[16]), STR_19(CODE[7]), STR_18(CODE[14]), STR_17(CODE[8]), 
		 -> STR_16(CODE[8]), STR_15(CODE[10]), STR_14(CODE[17]), STR_13(CODE[11]), 
		 -> STR_12(CODE[5]), STR_11(CODE[32]), STR_10(CODE[7]), STR_9(CODE[11]), 
		 -> STR_8(CODE[11]), STR_7(CODE[14]), STR_6(CODE[3]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 100
		 -> recebeByteLoRaWan@frameData(BANK4[100]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 200
		 -> recebeByteLoRaWan@frameData(BANK4[100]), SYS(CODE[5]), MAC(CODE[5]), TxLoRaWan@comando(BANK1[200]), 
		 -> DataRate@comando(BANK1[200]), SetBandWidth@comando(BANK1[200]), SetSpreadingFactor@comando(BANK1[200]), MacSave@comando(BANK1[200]), 
		 -> GetAdr@comando(BANK1[200]), SetAdr@comando(BANK1[200]), SetChannelLoRaWan@comando(BANK1[200]), MAC_JOIN_OTAA(CODE[10]), 
		 -> SYS_RESET(CODE[6]), SetAppKey@comando(BANK1[200]), SetAppEUI@comando(BANK1[200]), SetDevEUI@comando(BANK1[200]), 
		 -> GetDnctr@comando(BANK1[200]), STR_20(CODE[16]), STR_19(CODE[7]), STR_18(CODE[14]), 
		 -> STR_17(CODE[8]), STR_16(CODE[8]), STR_15(CODE[10]), STR_14(CODE[17]), 
		 -> STR_13(CODE[11]), STR_12(CODE[5]), STR_11(CODE[32]), STR_10(CODE[7]), 
		 -> STR_9(CODE[11]), STR_8(CODE[11]), STR_7(CODE[14]), STR_6(CODE[3]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 200
		 -> recebeByteLoRaWan@frameData(BANK4[100]), SYS(CODE[5]), MAC(CODE[5]), TxLoRaWan@comando(BANK1[200]), 
		 -> DataRate@comando(BANK1[200]), SetBandWidth@comando(BANK1[200]), SetSpreadingFactor@comando(BANK1[200]), MacSave@comando(BANK1[200]), 
		 -> GetAdr@comando(BANK1[200]), SetAdr@comando(BANK1[200]), SetChannelLoRaWan@comando(BANK1[200]), MAC_JOIN_OTAA(CODE[10]), 
		 -> SYS_RESET(CODE[6]), SetAppKey@comando(BANK1[200]), SetAppEUI@comando(BANK1[200]), SetDevEUI@comando(BANK1[200]), 
		 -> GetDnctr@comando(BANK1[200]), STR_20(CODE[16]), STR_19(CODE[7]), STR_18(CODE[14]), 
		 -> STR_17(CODE[8]), STR_16(CODE[8]), STR_15(CODE[10]), STR_14(CODE[17]), 
		 -> STR_13(CODE[11]), STR_12(CODE[5]), STR_11(CODE[32]), STR_10(CODE[7]), 
		 -> STR_9(CODE[11]), STR_8(CODE[11]), STR_7(CODE[14]), STR_6(CODE[3]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 100
		 -> recebeByteLoRaWan@frameData(BANK4[100]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 200
		 -> frameBuffer(BANK7[200]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 200
		 -> frameBuffer(BANK7[200]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_20(CODE[16]), STR_19(CODE[7]), STR_18(CODE[14]), STR_17(CODE[8]), 
		 -> STR_16(CODE[8]), STR_15(CODE[10]), STR_14(CODE[17]), STR_13(CODE[11]), 
		 -> STR_12(CODE[5]), STR_11(CODE[32]), STR_10(CODE[7]), STR_9(CODE[11]), 
		 -> STR_8(CODE[11]), STR_7(CODE[14]), STR_6(CODE[3]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 100
		 -> recebeByteLoRaWan@frameData(BANK4[100]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 30
		 -> TxLoRaWan@hex(BANK1[4]), addSensorFloat@f(COMRAM[30]), addSensorInt@f(COMRAM[30]), addSensorStr@f(COMRAM[30]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 200
		 -> TxLoRaWan@comando(BANK1[200]), frameBuffer(BANK7[200]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 200
		 -> TxLoRaWan@comando(BANK1[200]), frameBuffer(BANK7[200]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 100
		 -> receivePacket(BANK5[100]), response(BANK3[100]), SetupPkt(BIGRAMhl[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 100
		 -> receivePacket(BANK5[100]), response(BANK3[100]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 2047
		 -> recebeByte@frameData(BANK6[100]), CtrlTrfData(BIGRAMhl[8]), RAM(DATA[2047]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 2047
		 -> recebeByte@frameData(BANK6[100]), CtrlTrfData(BIGRAMhl[8]), RAM(DATA[2047]), SetupPkt(BIGRAMhl[8]), 

    sprintf$5031	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_38(CODE[17]), STR_37(CODE[17]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_36(CODE[7]), MAC_TX_UNCNF(CODE[9]), MAC_TX_CNF(CODE[7]), MAC_SET_DR(CODE[7]), 
		 -> MAC_SET_BW(CODE[13]), MAC_SET_SF(CODE[16]), MAC_SAVE(CODE[5]), MAC_GET_ADR(CODE[8]), 
		 -> MAC_SET_ADR(CODE[8]), MAC_SET_CH_STATUS(CODE[14]), MAC_SET_APPKEY(CODE[11]), MAC_SET_APPEUI(CODE[11]), 
		 -> MAC_SET_DEVEUI(CODE[11]), MAC_GET_DNCTR(CODE[10]), STATE_ON(CODE[3]), STATE_OFF(CODE[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 101
		 -> STR_35(CODE[5]), STR_34(CODE[7]), STR_33(CODE[7]), STR_32(CODE[6]), 
		 -> STR_31(CODE[6]), STR_30(CODE[5]), STR_29(CODE[3]), STR_28(CODE[3]), 
		 -> STR_27(CODE[6]), STR_26(CODE[10]), STR_25(CODE[9]), STR_24(CODE[68]), 
		 -> STR_23(CODE[36]), STR_22(CODE[36]), STR_21(CODE[3]), STR_5(CODE[7]), 
		 -> STR_4(CODE[8]), STR_3(CODE[7]), STR_2(CODE[17]), STR_1(CODE[101]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 200
		 -> TxLoRaWan@hex(BANK1[4]), TxLoRaWan@comando(BANK1[200]), DataRate@comando(BANK1[200]), SetBandWidth@comando(BANK1[200]), 
		 -> SetSpreadingFactor@comando(BANK1[200]), MacSave@comando(BANK1[200]), GetAdr@comando(BANK1[200]), SetAdr@comando(BANK1[200]), 
		 -> SetChannelLoRaWan@comando(BANK1[200]), SetAppKey@comando(BANK1[200]), SetAppEUI@comando(BANK1[200]), SetDevEUI@comando(BANK1[200]), 
		 -> GetDnctr@comando(BANK1[200]), addSensorFloat@f(COMRAM[30]), addSensorInt@f(COMRAM[30]), addSensorStr@f(COMRAM[30]), 
		 -> frameBuffer(BANK7[200]), main@data(BANK2[150]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 200
		 -> frameBuffer(BANK7[200]), 

    enviaComando@cmd	PTR const unsigned char  size(2) Largest target is 200
		 -> TxLoRaWan@comando(BANK1[200]), DataRate@comando(BANK1[200]), SetBandWidth@comando(BANK1[200]), SetSpreadingFactor@comando(BANK1[200]), 
		 -> MacSave@comando(BANK1[200]), GetAdr@comando(BANK1[200]), SetAdr@comando(BANK1[200]), SetChannelLoRaWan@comando(BANK1[200]), 
		 -> MAC_JOIN_OTAA(CODE[10]), SYS_RESET(CODE[6]), SetAppKey@comando(BANK1[200]), SetAppEUI@comando(BANK1[200]), 
		 -> SetDevEUI@comando(BANK1[200]), GetDnctr@comando(BANK1[200]), 

    TxLoRaWan@data	PTR const unsigned char  size(2) Largest target is 22
		 -> main@dadoPoco(BANK2[22]), 

    SetAdr@state	PTR const unsigned char  size(2) Largest target is 4
		 -> STATE_ON(CODE[3]), STATE_OFF(CODE[4]), 

    MSG_LORAWAN	PTR const unsigned char [15] size(2) Largest target is 32
		 -> STR_20(CODE[16]), STR_19(CODE[7]), STR_18(CODE[14]), STR_17(CODE[8]), 
		 -> STR_16(CODE[8]), STR_15(CODE[10]), STR_14(CODE[17]), STR_13(CODE[11]), 
		 -> STR_12(CODE[5]), STR_11(CODE[32]), STR_10(CODE[7]), STR_9(CODE[11]), 
		 -> STR_8(CODE[11]), STR_7(CODE[14]), STR_6(CODE[3]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 200
		 -> TxLoRaWan@comando(BANK1[200]), frameBuffer(BANK7[200]), 

    putsUSBUSART@data	PTR unsigned char  size(2) Largest target is 150
		 -> main@data(BANK2[150]), 

    putsUSBUSART@pData	PTR unsigned char  size(2) Largest target is 150
		 -> main@data(BANK2[150]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S2350_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S2350_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S2350_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S2350_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 100
		 -> receivePacket(BANK5[100]), response(BANK3[100]), SetupPkt(BIGRAMhl[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BIGRAMhl[64]), cdc_data_rx(BIGRAMhh[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S529$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S519$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S519$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S495$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S495$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S495$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S495$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _SYS_InterruptHigh in COMRAM

    _SYS_InterruptHigh->_USBDeviceTasks
    _recebeByteLoRaWan->_strncmp
    _converter->_toupper
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    _main->_TxLoRaWan
    _setup_uart->___lldiv
    _le_pulsos->_retornaDado
    _le_AD->___ftdiv
    ___ftdiv->___ftmul
    ___awtoft->___ftpack
    _verificaUSB->_CDCTxService
    _CDCTxService->_USBTransferOnePacket
    _USBDeviceInit->_memset
    _TxLoRaWan->_sprintf
    _ResetModuloLoRaWan->_enviaComando
    _JoinLoRaWan->_enviaComando
    _SetSpreadingFactor->_sprintf
    _SetDevEUI->_sprintf
    _SetChannelLoRaWan->_sprintf
    _SetBandWidth->_sprintf
    _SetAppKey->_sprintf
    _SetAppEUI->_sprintf
    _SetAdr->_sprintf
    _MacSave->_sprintf
    _FeedBack->_retornaDado
    _DataRate->_sprintf
    _sprintf->___fttol
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___ftadd
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->_le_AD
    ___ftsub->___ftadd
    ___ftadd->___wmul
    _enviaComando->_parseLoRaWan
    _parseLoRaWan->_millis

Critical Paths under _SYS_InterruptHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_TxLoRaWan
    _TxLoRaWan->_sprintf
    _SetSpreadingFactor->_sprintf
    _SetDevEUI->_sprintf
    _SetChannelLoRaWan->_sprintf
    _SetBandWidth->_sprintf
    _SetAppKey->_sprintf
    _SetAppEUI->_sprintf
    _SetAdr->_sprintf
    _MacSave->_sprintf
    _DataRate->_sprintf

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _SYS_InterruptHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _SYS_InterruptHigh in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               210   210      0 1064323
                                            239 BANK1     10    10      0
                                              0 BANK2    200   200      0
                           _DataRate
                           _FeedBack
                            _MacSave
                             _SetAdr
                          _SetAppEUI
                          _SetAppKey
                       _SetBandWidth
                  _SetChannelLoRaWan
                          _SetDevEUI
                 _SetSpreadingFactor
                          _TxLoRaWan
                      _USBDeviceInit
                            ___ftmul
                            ___fttol
                              _delay
                              _le_AD
                          _le_pulsos
                             _millis
                              _putch
                       _putsUSBUSART
                        _retornaDado
                           _setup_AD
                         _setup_ccp1
                       _setup_pulsos
                         _setup_uart
                            _sprintf
                        _verificaUSB
 ---------------------------------------------------------------------------------
 (1) _setup_uart                                           8     4      4    1409
                                             13 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (1) _setup_pulsos                                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup_ccp1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup_AD                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _putsUSBUSART                                         5     3      2     202
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _le_pulsos                                            9     5      4     492
                                              5 BANK0      9     5      4
                        _retornaDado (ARG)
 ---------------------------------------------------------------------------------
 (1) _le_AD                                               18    15      3   17964
                                             62 BANK0     18    15      3
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    3544
                                             47 BANK0     15     9      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             4     1      3    3114
                                              8 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _delay                                               16    12      4    1927
                                             13 BANK0     16    12      4
                             _millis
                        _verificaUSB
 ---------------------------------------------------------------------------------
 (1) _verificaUSB                                          0     0      0    1770
                       _CDCTxService
                    _USBDeviceAttach
                    _USBDeviceDetach
 ---------------------------------------------------------------------------------
 (2) _USBDeviceDetach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CDCTxService                                         2     2      0    1770
                                             11 BANK0      2     2      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBTransferOnePacket                                11     7      4    1633
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1132
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     930
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _TxLoRaWan                                          212   208      4  107376
                                            149 BANK0      5     1      4
                                             32 BANK1    207   207      0
                        _JoinLoRaWan
                 _ResetModuloLoRaWan
                       _enviaComando
                       _parseLoRaWan
                        _retornaDado
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (2) _strcat                                               6     2      4     810
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _ResetModuloLoRaWan                                   1     1      0    3530
                                             39 BANK0      1     1      0
                       _enviaComando
 ---------------------------------------------------------------------------------
 (2) _JoinLoRaWan                                          1     1      0    3647
                                             39 BANK0      1     1      0
                       _enviaComando
                       _parseLoRaWan
 ---------------------------------------------------------------------------------
 (1) _SetSpreadingFactor                                 202   202      0   91233
                                             32 BANK1    202   202      0
                       _enviaComando
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _SetDevEUI                                          201   201      0   91211
                                             32 BANK1    201   201      0
                       _enviaComando
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _SetChannelLoRaWan                                  203   202      1   91655
                                            149 BANK0      1     0      1
                                             32 BANK1    202   202      0
                       _enviaComando
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _SetBandWidth                                       205   203      2   91411
                                            149 BANK0      3     1      2
                                             32 BANK1    202   202      0
                       _enviaComando
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _SetAppKey                                          201   201      0   91211
                                             32 BANK1    201   201      0
                       _enviaComando
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _SetAppEUI                                          201   201      0   91211
                                             32 BANK1    201   201      0
                       _enviaComando
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _SetAdr                                             203   201      2   91589
                                            149 BANK0      2     0      2
                                             32 BANK1    201   201      0
                       _enviaComando
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _MacSave                                            201   201      0   91211
                                             32 BANK1    201   201      0
                       _enviaComando
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _FeedBack                                             2     2      0    7054
                                              5 BANK0      2     2      0
                        _retornaDado
 ---------------------------------------------------------------------------------
 (1) _retornaDado                                          5     4      1    7054
                                              0 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (1) _DataRate                                           205   203      2   91500
                                            149 BANK0      3     1      2
                                             32 BANK1    202   202      0
                       _enviaComando
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             87    39     48   87614
                                             95 BANK0     54     6     48
                                              0 BANK1     32    32      0
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                                7     4      3   21782
                                             47 BANK0      7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              10     7      3   21584
                                             47 BANK0     10     7      3
                            ___awdiv
                            ___awmod
                            ___ftadd (ARG)
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4   10923
                                             14 BANK0      6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    6438
                                             32 BANK0     15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1898
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    2080
                                              6 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         15     9      6     481
                                              0 BANK0     15     9      6
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          12     6      6     624
                                              0 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             9     5      4    3092
                                              8 BANK0      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     871
                                             13 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8    1230
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     697
                                             80 BANK0     15    11      4
                            ___ftmul (ARG)
                              _le_AD (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    5035
                                             32 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    4638
                                             20 BANK0     12     6      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2934
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     134
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     670
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (2) _enviaComando                                        11     8      3    3507
                                             28 BANK0     11     8      3
                    _initRecebeDados
                       _parseLoRaWan
                              _putch
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               6     4      2     672
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _putch                                                1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _parseLoRaWan                                        20    20      0     117
                                              8 BANK0     20    20      0
                             _millis
 ---------------------------------------------------------------------------------
 (1) _millis                                               8     4      4      23
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _initRecebeDados                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _SYS_InterruptHigh                                   27    27      0   33474
                                             28 COMRAM    27    27      0
                     _USBDeviceTasks
                              _getch
                  _recebeByteLoRaWan
 ---------------------------------------------------------------------------------
 (7) _recebeByteLoRaWan                                   10    10      0    2537
                                              9 COMRAM    10    10      0
                          _converter
                             _strcmp
                             _strcpy
                            _strncmp
                           i2_strlen
 ---------------------------------------------------------------------------------
 (8) i2_strlen                                             6     4      2     220
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) _strncmp                                              9     3      6     668
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (8) _strcpy                                               6     2      4     253
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) _strcmp                                               6     2      4     269
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) _converter                                            5     4      1     675
                                              1 COMRAM     5     4      1
                            _toupper
 ---------------------------------------------------------------------------------
 (9) _toupper                                              1     1      0      67
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _getch                                                3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (7) _USBDeviceTasks                                       1     1      0   30623
                                             27 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (8) i2_USBDeviceInit                                      1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (8) _USBWakeFromSuspend                                   0     0      0    3879
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBSuspend                                           0     0      0    3879
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBStallHandler                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPService                                     1     1      0   18330
                                             26 COMRAM     1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (9) _memcpy                                              11     5      6    1478
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfSetupHandler                               0     0      0   16623
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (10) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (11) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (10) _USBCheckStdRequest                                  0     0      0   12652
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (11) _USBStdSetCfgHandler                                 1     1      0    4377
                                             20 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (9) i2_memset                                             8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (11) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (11) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (11) _USBStdFeatureReqHandler                             6     6      0    4350
                                             20 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6    3879
                                             12 COMRAM     8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (9) _USBCheckCDCRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _CDCInitEP                                            0     0      0    1187
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (10) i2_USBTransferOnePacket                             11     7      4     454
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (10) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (11) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfOutHandler                                 0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (10) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (11) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfInHandler                                  1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (12) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DataRate
     _enviaComando
       _initRecebeDados
       _parseLoRaWan
         _millis
       _putch
       _strlen
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _le_AD (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _FeedBack
     _retornaDado
   _MacSave
     _enviaComando
       _initRecebeDados
       _parseLoRaWan
         _millis
       _putch
       _strlen
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _le_AD (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _SetAdr
     _enviaComando
       _initRecebeDados
       _parseLoRaWan
         _millis
       _putch
       _strlen
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _le_AD (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _SetAppEUI
     _enviaComando
       _initRecebeDados
       _parseLoRaWan
         _millis
       _putch
       _strlen
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _le_AD (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _SetAppKey
     _enviaComando
       _initRecebeDados
       _parseLoRaWan
         _millis
       _putch
       _strlen
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _le_AD (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _SetBandWidth
     _enviaComando
       _initRecebeDados
       _parseLoRaWan
         _millis
       _putch
       _strlen
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _le_AD (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _SetChannelLoRaWan
     _enviaComando
       _initRecebeDados
       _parseLoRaWan
         _millis
       _putch
       _strlen
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _le_AD (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _SetDevEUI
     _enviaComando
       _initRecebeDados
       _parseLoRaWan
         _millis
       _putch
       _strlen
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _le_AD (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _SetSpreadingFactor
     _enviaComando
       _initRecebeDados
       _parseLoRaWan
         _millis
       _putch
       _strlen
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _le_AD (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _TxLoRaWan
     _JoinLoRaWan
       _enviaComando
         _initRecebeDados
         _parseLoRaWan
           _millis
         _putch
         _strlen
       _parseLoRaWan
         _millis
     _ResetModuloLoRaWan
       _enviaComando
         _initRecebeDados
         _parseLoRaWan
           _millis
         _putch
         _strlen
     _enviaComando
       _initRecebeDados
       _parseLoRaWan
         _millis
       _putch
       _strlen
     _parseLoRaWan
       _millis
     _retornaDado
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _le_AD (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     _strcat
   _USBDeviceInit
     _memset
   ___ftmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftpack (ARG)
     ___wmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
   ___fttol
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _le_AD (ARG)
       ___awtoft
         ___ftpack
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   _delay
     _millis
     _verificaUSB
       _CDCTxService
         _USBTransferOnePacket
       _USBDeviceAttach
       _USBDeviceDetach
   _le_AD
     ___awtoft
       ___ftpack
     ___ftadd
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   _le_pulsos
     _retornaDado (ARG)
   _millis
   _putch
   _putsUSBUSART
   _retornaDado
   _setup_AD
   _setup_ccp1
   _setup_pulsos
   _setup_uart
     ___lldiv
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftneg
     ___ftsub
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _le_AD (ARG)
         ___awtoft
           ___ftpack
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___lltoft
       ___ftpack
     ___wmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftadd (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   _verificaUSB
     _CDCTxService
       _USBTransferOnePacket
     _USBDeviceAttach
     _USBDeviceDetach

 _SYS_InterruptHigh (ROOT)
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _USBCheckCDCRequest
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _USBCheckCDCRequest
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _USBCheckCDCRequest
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _memcpy
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _USBCheckCDCRequest
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _USBCheckCDCRequest
     _USER_USB_CALLBACK_EVENT_HANDLER
       _CDCInitEP
         _USBEnableEndpoint
           _USBConfigureEndpoint
         i2_USBTransferOnePacket
       _USBCheckCDCRequest
     i2_USBDeviceInit
       i2_memset
   _getch
   _recebeByteLoRaWan
     _converter
       _toupper
     _strcmp
     _strcpy
     _strncmp
     i2_strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            3FF      0       0      23        0.0%
BIGRAMhh           280      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0      C8      20       78.1%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0      C8      18       78.1%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      E1      11       87.9%
BITBANK2           100      0       0       8        0.0%
BANK2              100     C8      FF       9       99.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100     F9     100       7      100.0%
BIGRAMhl            C0      0       0      22        0.0%
BITBANK4            C0      0       0      12        0.0%
BANK4               C0      0      64      13       52.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9A      A0       5      100.0%
BITBANK5            80      0       0      14        0.0%
BANK5               80      0      64      15       78.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     37      5E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     636      16        0.0%
DATA                 0      0     636       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Wed Feb 27 09:48:42 2019

                              _USB_SD_Ptr 7C85                              ___awdiv@sign 006B  
                             __CFG_BOR$ON 000000                                        _cs 02E2  
                recebeByte@estadoRecepcao 02E4                             _USBDeviceInit 2ACC  
                     ___wmul@multiplicand 0070                               __CFG_BORV$0 000000  
                      __size_of_CDCInitEP 0064                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                              _putsUSBUSART 50D0  
                            ___ftadd@exp1 007F                              ___ftadd@exp2 007E  
    USER_USB_CALLBACK_EVENT_HANDLER@event 000D      USER_USB_CALLBACK_EVENT_HANDLER@pdata 000F  
                            ___ftadd@sign 007D                                       l413 358A  
             __end_of_USBStdGetDscHandler 320E                                       l415 35B4  
                                     l417 3632                                       l435 5508  
                                     l436 5506                                       l374 2B12  
                                     l376 2B38                                       l378 2B74  
                                     l802 50DE                                       l820 2EE6  
                                     l804 50EC                                       l822 2FAE  
                                     l830 2F6E                                       l831 2F4C  
                                     l823 2EFA                                       l824 2EFE  
                                     l816 2EA0                                       l834 2F88  
                                     l826 2F42                                       l818 2EAC  
                                     l835 2F8E                                       l827 2F20  
                                     l819 2EB6                                       _BDT 000400  
                                     l992 5520                                       l994 552C  
                                     l995 553A                                       _MAC 7DE1  
                            __CFG_CPB$OFF 000000                              __CFG_CPD$OFF 000000  
                                     _UIE 000F69                                       _UIR 000F68  
                                     _SYS 7DD7                                       _aaa 02F2  
                 __end_of_initRecebeDados 5736                                _USBSuspend 5572  
                            ___awmod@sign 0065                      USBStdSetCfgHandler@i 0015  
                                     prod 000FF3                                       wreg 000FE8  
                          _USBDeviceTasks 2FB2                            _USBDeviceState 0058  
                   ??_USBCtrlTrfRxService 0001                  __size_ofi2_USBDeviceInit 0140  
                USBEnableEndpoint@options 0009                              __CFG_LVP$OFF 000000  
                            ___ftdiv@cntr 0098                              ___ftdiv@sign 009D  
                            __CFG_WDT$OFF 000000                                      l1001 4CAE  
                                    l1002 4CAA                                      l1020 1274  
                                    l1012 0E40                                      l1021 1262  
                                    l1014 0EA8                                      l1031 13E8  
                                    l1023 1294                                      l1024 1282  
                                    l1016 0EC8                                      l1033 1444  
                                    l1034 14FE                                      l1026 13DA  
                                    l1018 0F0E                                      l1019 13EC  
                                    l1029 13CA                                      l3000 4E2C  
                                    l3001 4E3A                                      l2113 4EEE  
                                    l2210 1BF8                                      l2140 4DA8  
                                    l2220 1C3A                                      l2204 1BA4  
                                    l2141 4DCC                                      l2133 5466  
                                    l2134 5450                                      l3007 4F24  
                                    l2231 1CB8                                      l2223 1C64  
                                    l2215 1C22                                      l2207 1BCE  
                                    l3008 4F18                                      l2136 5462  
                                    l3200 5172                                      l2240 1CFA  
                                    l3202 5192                                      l2250 1D84  
                                    l2226 1C8E                                      l3203 5188  
                                    l2243 1D96                                      l2171 1D44  
                                    l2163 1A32                                      l2260 3688  
                                    l2500 03D4                                      l2252 1D92  
                                    l2244 1D6C                                      l2236 1CD0  
                                    l2164 1A56                                      l2501 043E  
                                    l2165 1D48                                      l2173 1AA2  
                                    l3222 5038                                      l2262 370E  
                                    l2246 1D7E                                      l2166 1A5E  
                                    l3070 554C                                      l3223 5032  
                                    l2263 36BE                                      l2503 0468  
                                    l2191 1B38                                      l2183 1AF6  
                                    l2167 1A82                                      l2264 36E2  
                                    l2504 04A8                                      l2257 36FE  
                                    l2265 36C8                                      l2505 0576  
                                    l2274 44D8                                      l2258 367C  
                                    l2442 17EA                                      l2530 07CA  
                                    l2522 06CE                                      l2514 05DC  
                                    l2194 1B62                                      l2178 1ACC  
                                    l2275 453E                                      l2267 374E  
                                    l2259 36A2                                      l2443 170C  
                                    l2531 0730                                      l2523 06B4  
                                    l2268 3718                                      l2436 2430  
                                    l2540 088E                                      l2508 051E  
                                    l2188 1B0E                USBConfigureEndpoint@handle 0007  
                                    l2533 07F0                                      l2453 0020  
                                    l3069 555E                                      l2446 17C4  
                                    l2550 0A40                                      l2542 099C  
                                    l2534 07D6                                      l2526 06FA  
                                    l2518 0660                                      l2470 028C  
                                    l2462 008C                                      l2454 003E  
                                    l2279 455A                                      l2439 2506  
                                    l2447 1922                                      l2551 0A64  
                                    l2543 0982                                      l2527 06E0  
                                    l2519 0682                                      l2199 1B8C  
                                    l2800 33EA                                      l2560 0ABA  
                                    l2536 0814                                      l2480 0190  
                                    l2464 0174                                      l2456 005C  
                                    l2449 19DA                                      l2553 0AF6  
                                    l2545 0A1E                                      l2537 0818  
                                    l2481 01B8                                      l2473 0182  
                                    l2465 015E                                      l2457 0052  
                                    l2802 3428                                      l2570 0BBA  
                                    l2554 0A7E                                      l2546 09E2  
                                    l2538 083C                                      l2482 01C8  
                                    l2474 0186                                      l2466 011C  
                                    l1850 3228                                      l2803 3418  
                                    l2571 0BE6                                      l2539 0976  
                                    l2475 02E0                                      l2491 0270  
                                    l2483 01C2                                      l1851 3248  
                                    l2900 2D7E                                      l2572 0BF0  
                                    l2564 0B2E                                      l2492 0250  
                                    l2573 0C44                                      l2485 020A  
                                    l2902 2DAA                                      l2574 0C1E  
                                    l2566 0B58                                      l2486 0220  
                                    l2478 018A                                      l1854 324C  
                                    l2831 4258                                      l2903 2DE4  
                                    l2583 0DD2                                      l2591 0D7A  
                                    l2567 0B84                                      l2559 0B0C  
                                    l2495 0286                                      l2479 018C  
                                    l3199 5178                                      l2832 4242  
                                    l2808 344C                                      l2912 2E6C  
                                    l2904 2E0C                                      l2496 09A6  
                                    l2488 023C                                      l1856 3296  
                                    l1960 3D8C                                      l2809 3440  
                                    l2913 2E60                                      l2585 0DA8  
                                    l2569 0BB0                                      l2497 02F4  
                                    l2489 022A                                      l1857 332C  
                                    l1849 321E                                      l2834 4280  
                                    l2906 2E48                                      l2930 3B1C  
                                    l2586 0C96                                      l2498 0336  
                                    l1954 3DE0                                      l1962 3DB6  
                                    l2835 4276                                      l2907 2E38  
                                    l2771 49FA                                      l2931 3B2C  
                                    l1955 3D38                                      l2828 4224  
                                    l2772 4A04                                      l2764 49AC  
                                    l2780 4D3E                                      l2924 3A9A  
                                    l2588 0DC0                                      l2917 4936  
                                    l2829 421A                                      l2941 52D8  
                                    l2773 4A12                                      l2765 49BC  
                                    l2781 4D36                                      l2589 0D16  
                                    l1957 3DFC                                      l2918 4966  
                                    l2926 3AC2                                      l1958 3D62  
                                    l2935 5662                                      l2863 299C  
                                    l2767 49DA                                      l2927 3AF4  
                                    l2768 49D2                                      l2784 4D56  
                                    l2928 3B04                                      l2960 56FA  
                                    l2792 5414                                      l2873 29F8  
                                    l2953 3A42                                      l2945 39A6  
                                    l2785 4D60                                      l2777 4D1C  
                                    l2882 2A36                                      l2874 29EE  
                                    l2954 3A36                                      l2786 4D6E  
                                    l2778 4D28                                      l2883 2A2C  
                                    l2859 2972                                      l2947 3A1E  
                                    l2868 2A02                                      l2956 3A5E  
                                    l2948 3A0E                                      l2796 335A  
                                    l2892 3B90                                      l2885 2A5A  
                                    l2886 2A76                                      l2990 4B06  
                                    l2798 3378                                      l2894 3BB8  
                                    l2887 2AA6                                      l2991 4B14  
                                    l2799 33BA                                      l2895 3BF6  
                                    l2896 3C1C                                      l2986 4AD2  
                                    l2987 4AC6                                      l9011 0A82  
                                    l2996 4E04                                      l2997 4DF8  
                                    _ADIE 007CEE                                      _ADIF 007CF6  
                                    l7185 4992                                      l9113 0DA8  
                                    l9025 0ABE               __size_of_ResetModuloLoRaWan 0026  
                                    l7807 576C                                      _ADON 007E10  
                                    l8901 06B4                                      l9617 2B0A  
                                    l8933 07D6                                      l8909 06E0  
                                    l8853 04F4                                      l8845 04A8  
                                    l8589 554C                                      l9645 2B6C  
                                    l8783 0250                                      l8873 05E0  
                                    l8777 022A                                      l9827 3238  
                                    l9839 3272                                      STR_1 7E07  
                                    STR_2 7F27                                      STR_3 7FDD  
                                    STR_4 7FB2                                      STR_5 7FD6  
                                    STR_6 7F96                                      STR_7 7F48  
                                    STR_8 7F64                                      STR_9 7F7A  
                                    _GIEH 007F97                                      u6150 420C  
                                    u7120 3744                                      u6410 454C  
                                    u8010 04F4                                      u7050 2F76  
                                    _RCIE 007CED                                      _RCIF 007CF5  
                                    u6430 5058                                      u6190 428A  
                                    u7310 2E72                                      u8110 0708  
                                    u7127 373A                                      u7231 2D62  
                                    u6520 298E                                      u8050 0618  
                                    u6451 2930                                      u7251 2D8E  
                                    u6620 2A3E                                      u7500 3A48  
                                    u8140 07FE                                      u6437 504E  
                                    u6461 2944                                      u6550 29CC  
                                    u8150 080E                     ??_USBCtrlTrfTxService 0001  
                                    u7441 398A                                      u6490 2964  
                                    u7530 4AD6                                      u6810 4D42  
                                    u7460 39C4                                      u7380 3452  
                                    u8420 0C4C                                      u6661 3A82  
                                    u6590 2A0A                                      u6750 49DE  
                                    u8430 0C6E                                      _UCFG 000F6F  
                                    u7560 4E08                                      u9320 5106  
                                    u9400 4462                                      u7465 39BC  
                                    u6681 3AAA                                      u8610 5646  
                                    u8460 0DE4                                      u9260 2B2E  
                                    u7740 5536                                      _UEP0 000F70  
                                    _UEP1 000F71                                      u8470 0E02  
                                    u8630 545E                                      u8711 3B78  
                                    u9408 4466                                      u9345 2612  
                                    u7930 0370                                      u9290 2BD0  
                                    u9370 4414                                      u9355 26F2  
                                    u8731 3BA0                                      _UEIE 000F6B  
                                    u7764 4EE4                                      u9460 3272  
                                    u9380 442E                                      u7765 4EE0  
                                    u9365 271C                                      u7790 00F4  
                                    u9550 1A6E                                      u9390 4448  
                                    u7935 0366                                      u7970 047A  
                                    u9378 4418                                      u9475 3276  
                                    u7980 04BA                                      u9580 1A94  
                                    u9388 4432                                      u9398 444C  
                                    _UEIR 000F6A                                      _UCON 000F6D  
                                    _TXIF 007CF4                              __CFG_PWRT$ON 000000  
                         _CDCDataInHandle 02D8    USBStdFeatureReqHandler@current_ep_data 0018  
                                    _pDst 034C                                      _data 0600  
                         _USBDeviceDetach 575A                                      _main 0E10  
                            ___ftpack@arg 0060                         JoinLoRaWan@status 0087  
                ??i2_USBTransferOnePacket 0005                              ___ftpack@exp 0063  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    indf0 000FEF                                      fsr2h 000FDA  
                                    fsr0l 000FE9                                      indf1 000FE7  
                             _BaudRateGen 0326                                      indf2 000FDF  
                                    fsr1l 000FE1                                      fsr2l 000FD9  
                         _USBDeviceAttach 54DE                                      btemp 005F  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 000E                             __CFG_IESO$OFF 000000  
                            _sprintf$5031 0103                __end_of_USBCheckStdRequest 3D30  
                         __end_of_MacSave 54A8                              _sprintf$5825 0100  
                            main@dadoPoco 02B2                    ??_USBCtrlTrfOutHandler 0003  
                           __CFG_MCLRE$ON 000000                              ___ftmul@cntr 008D  
                            ___param_bank 000000                              ___ftmul@sign 008E  
               ??_USBStdFeatureReqHandler 0015                             ??_JoinLoRaWan 0087  
                            __channelMask 031E                             le_AD@corrente 00A6  
                ??_USBStdGetStatusHandler 0001                              ___fttol@exp1 00BE  
                        __end_of_MAC_SAVE 7DE1                              ___fttol@lval 00BA  
                          ?_USBDeviceInit 0001                             ?_enviaComando 007C  
                           __CFG_PLLDIV$5 000000                                     l10303 0E70  
                                   l10317 0EA0                                     l10329 0EC0  
                                   l10291 0E30                              _sourceMacLow 0342  
                            main@contador 02A1                                     ?_main 0001  
                         __end_of___awdiv 4A1C                                     _EEADR 000FA9  
                         __end_of___ftadd 2ACC                                     STR_10 7FCF  
                                   STR_11 7ED4                                     STR_20 7F38  
                                   STR_12 7FFA                                     STR_13 7F6F  
                                   STR_30 7FF5                                     STR_22 7EB0  
                                   STR_14 7F16                                     STR_23 7EB0  
                                   STR_31 7FE4                                     STR_15 7F8F  
                                   STR_32 7FE4                                     STR_24 7E6C  
                                   STR_16 7FA2                                     STR_33 7FC1  
                                   STR_25 7F99                                     STR_17 7FAA  
                                   STR_34 7FC1                                     STR_26 7F85  
                                   STR_18 7F56                                     STR_35 7FF0  
                                   STR_27 7FEA                                     STR_19 7FC8  
                                   STR_36 7FBA                           __end_of___awmod 4D78  
                                   STR_29 7FED                                     STR_37 7EF4  
                                   STR_38 7F05         __size_of_USBCtrlEPServiceComplete 00FC  
                         __end_of___ftdiv 3C4E                           __end_of___ftneg 5670  
                         __end_of___lldiv 4B26                                     u10040 1D54  
                                   u10050 1D7A                           __end_of___ftmul 3B66  
                                   u10510 0EDC                                     _T0CON 000FD5  
                         ___awdiv@divisor 0068                                     u10525 0F30  
                                   u10526 0F32                                     u10470 0E70  
                                   _T1CON 000FCD                           __end_of___llmod 4E4C  
                                   u10545 116C                                     u11097 0E5A  
                                   u10465 0E4C                    __end_of_USBDeviceTasks 30E0  
                                   u10490 0EBC                                     u10466 0E4E  
                         __end_of___ftsub 5302                                     u10555 1188  
                         __end_of___fttol 3A70                                     u10565 1226  
                                   u10575 1242                                     u10681 1566  
                                   _T3CON 000FB1                 ?_USBCtrlEPServiceComplete 0001  
                          __CFG_DEBUG$OFF 000000                                     i2l110 2884  
                                   i2l111 28B2                                     i2l113 28CC  
                                   i2l115 28D2                                     i2l107 28BC  
                                   i2l108 2828                                     i2l221 4FDA  
                                   i2l109 2856                                     i2l401 309C  
                                   i2l227 4FCE                                     i2l403 30BC  
                                   i2l413 3790                                     i2l229 4FD4  
                                   i2l501 3E5A                                     i2l405 30D8  
                                   i2l510 30F2                                     i2l415 37BA  
                                   i2l503 3ECC                                     i2l408 53D2  
                                   i2l512 3106                                     i2l409 53E0  
                                   i2l417 3838                                     i2l601 2078  
                                   i2l513 318E                                     i2l610 21D4  
                                   i2l602 207E                                     i2l522 45DC  
                                   i2l443 400A                                     i2l515 3196  
                                   i2l523 456A                                     i2l451 4714  
                                   i2l620 2260                                     i2l612 219E  
                                   i2l604 20EA                                     i2l516 31E6  
                                   i2l460 38F8                                     i2l613 21BA  
                                   i2l509 31F6                                     i2l461 38A2  
                                   i2l622 22B2                                     i2l606 2132  
                                   i2l518 31EE                                     i2l526 45F2  
                                   i2l550 47CC                                     i2l374 2C52  
                                   i2l455 48D2                                     i2l615 2220  
                                   i2l527 457C                                     i2l551 47C6  
                                   i2l391 301A                                     i2l616 222C  
                                   i2l608 2154                                     i2l528 4582  
                                   i2l536 5340                                     i2l544 54D2  
                                   i2l376 2C78                                     i2l384 2FC6  
                                   i2l561 4F7C                                     i2l617 22A6  
                                   i2l529 45A0                                     i2l449 46F8  
                                   i2l465 3922                                     i2l537 533E  
                                   i2l545 54D0                                     i2l393 302E  
                                   i2l385 2FD2                                     i2l482 3FBA  
                                   i2l474 3F0E                                     i2l570 40C0  
                                   i2l490 3490                                     i2l378 2CB4  
                                   i2l394 3038                                     i2l386 2FDA  
                                   i2l483 3F82                                     i2l571 413A  
                                   i2l563 4FC6                                     i2l395 305C  
                                   i2l476 3F18                                     i2l572 4100  
                                   i2l492 3526                                     i2l396 3066  
                                   i2l388 2FEC                                     i2l493 350C  
                                   i2l389 2FF6                                     i2l478 3F7A  
                                   i2l574 4120                                     i2l590 3C88  
                                   i2l398 3076                                     i2l479 3F42  
                                   i2l591 3C8E                                     i2l584 3CEC  
                                   i2l569 40BC                                     i2l489 34B2  
                                   i2l593 3C94                                     i2l585 3C5E  
                                   i2l770 43A4                                     i2l594 3CB2  
                                   i2l771 43C0                                     i2l595 3CCE  
                                   i2l587 3C68                                     i2l772 43D8  
                                   i2l588 3C6E                                     i2l589 3C74  
                                   i2l766 43E2                                     i2l767 437E  
                                   i2l769 4396                                     _UADDR 000F6E  
                         ___awdiv@counter 006A                                     _RCREG 000FAE  
                                   _RCSTA 000FAB                                     _TMR1H 000FCF  
                                   _TMR1L 000FCE                                     _SPBRG 000FAF  
                           __CFG_USBDIV$2 000000                                     _USBIE 007D05  
                                   _USTAT 000F6C                                     _TXREG 000FAD  
      __size_of_USBCtrlEPAllowStatusStage 00C6                              ___lltoft@exp 0070  
                          __CFG_FCMEN$OFF 000000           __end_of_USBCtrlEPAllowDataStage 4746  
                                   _sd000 7DE6                                     _sd001 7D04  
                                   _sd002 7CD0            ?_USBIncrement1msInternalTimers 0001  
                                   _dig_1 02E0                                     _dig_2 02DE  
                                   _dig_3 02DC                                     _dig_4 02DA  
                                   _le_AD 320E                             ___awtoft@sign 006B  
                                   _delay 4C94                                i2memset@p1 0001  
                        __end_of_STATE_ON 7DF1                                     _getch 5696  
                         __end_of_dpowers 7C17                                     _scale 15C8  
                         __end_of_isdigit 5702                                     _ticks 032A  
                           ___ftpack@sign 0064                                     _putch 5768  
                                   main@i 02A9                __size_of_SetChannelLoRaWan 006C  
                                   pclath 000FFA                                     tablat 000FF5  
                           _gs_encryption 7DF9                                     plusw2 000FDB  
                       __end_of_CDCInitEP 4EB0                          __end_of_FeedBack 275A  
                                   status 000FD8                          __end_of_DataRate 523A  
                                   wtemp6 0060                           __end_of_sprintf 0E10  
                         __end_of_strncmp 4BA8                           __end_of_toupper 574A  
                        __end_ofi2_memset 55FC                            _tamanhoCommand 01F9  
            __size_of_USBStdSetCfgHandler 00DE                          __end_ofi2_strlen 50D0  
                           setup_uart@brg 0071                           __initialization 42AA  
                            __end_of_main 15C8                     _control_signal_bitmap 02E5  
                          ??_enviaComando 007F                 __size_of_USBCtrlEPService 0096  
                                  ??_main 01EF                             ___fttol@sign1 00B9  
                     __end_of_JoinLoRaWan 5472                             __activetblptr 000002  
                         ?_USBDeviceTasks 0001                    SetChannelLoRaWan@canal 01E9  
                             ?_USBSuspend 0001                        recebeByte@sizeData 0046  
                    __size_of__tdiv_to_l_ 0134                          ?_initRecebeDados 0001  
                              i2strlen@cp 0005                        recebeByteLoRaWan@b 0010  
                      recebeByteLoRaWan@i 0012                              _cdc_mem_type 02E6  
                 __end_of_USBDeviceDetach 5768                             _sourceMacHigh 033E  
                           ?_SetBandWidth 00F5                                    ?_le_AD 009E  
                                  ?_delay 006D                                    ?_getch 0001  
                 __end_of_USBDeviceAttach 5512                                    _ADCON0 000FC2  
                                  _ADCON1 000FC1                                    _ADCON2 000FC0  
                        _CDCDataOutHandle 004A                                    _CCP1IE 007CEA  
                                  _CCP1IF 007CF2                          ___llmod@dividend 006D  
                                  ?_scale 008F                                    _ADRESH 000FC4  
                                  _ADRESL 000FC3                                    _EEDATA 000FA8  
                                  _CCPR1H 000FBF                                    _CCPR1L 000FBE  
                                  _EECON2 000FA7                          ___awdiv@dividend 0066  
                        __end_of___awtoft 5438                                    ?_putch 0001  
                        __end_of___ftpack 42AA                          __end_of___lltoft 4F6E  
                   __size_of_CDCTxService 012E                                    i2l1401 4A5E  
                                  i2l1162 569E                                    i2l1402 4A70  
                                  i2l1164 56B8                                    i2l1404 4A82  
                                  i2l1406 4A94                                    i2l2302 1FDE  
                                  i2l1407 4A9E                                    i2l2303 1F6E  
                                  i2l2304 1FDA                                    i2l2307 203A  
                                  i2l2308 201C                                    i2l3070 55DA  
                                  i2l3230 4B86                                    i2l3222 508C  
                                  i2l3063 526C                                    i2l3223 5088  
                                  i2l3064 524C                                    i2l3208 512A  
                                  i2l3216 55B4                                    i2l3209 5122  
                                  i2l3217 55AC                                    i2l2290 1E3A  
                                  i2l2291 1E74                                    i2l3228 4B8E  
                                  i2l3069 55EA                                    i2l3237 5746  
                                  i2l3229 4B28                                    i2l2294 1EC2  
                                  i2l1399 4A4C                                    i2l2296 1F4C  
                                  i2l2297 1EFE                                    i2l2289 1E76  
                                  i2l2298 1F2C                                TxLoRaWan@i 01EE  
                                  i2l7331 3F18                                    i2l7433 3E52  
                                  i2l8073 524C                                    i2l7363 55DA  
                                  i2l9325 2C4A                                    i2l9237 4B28  
                                  i2l9353 2CAC                                    i2l9577 306E  
                                  _PAN_ID 034E                             CDCTxService@i 006B  
                               ??_MacSave 00F5                                    _TMR0IE 007F95  
                                  _TMR1IE 007CE8                                    _SPBRGH 000FB0  
                i2USBTransferOnePacket@ep 0009                         ??i2_USBDeviceInit 0009  
         __size_ofi2_USBTransferOnePacket 0102                            __CFG_VREGEN$ON 000000  
                     retornaDado@dadoByte 0064                         _shortPacketStatus 0057  
                                  _SetAdr 5384                            __CFG_XINST$OFF 000000  
                      __size_of_SetDevEUI 0076                        __size_of_SetAppEUI 0076  
                        __end_of__powers_ 7C3E                           USBDeviceTasks@i 001C  
                      __size_of_SetAppKey 00B6                              _write_values 7DFD  
                             SetAdr@state 00F5               USBStdFeatureReqHandler@pUEP 0016  
                USBTransferOnePacket@data 0061                USBCtrlTrfInHandler@lastDTS 0002  
                         ??_USBDeviceInit 0068                                    ___ftge 4904  
                                  ___wmul 55FC                                 ??___awdiv 006A  
                SetSpreadingFactor@status 01E8                                 ??___ftadd 007A  
                          __CFG_STVREN$ON 000000                                 ??___awmod 0064  
                               ??___ftdiv 0095                                 ??___ftneg 0063  
                       __end_of_STATE_OFF 7DEE                                 ??___lldiv 0068  
                               ??___ftmul 0086                                 ??___llmod 0075  
                               ??___ftsub 0086                                 ??___fttol 00B4  
                       _USBEnableEndpoint 53C2           __size_of_USBStdGetStatusHandler 00AA  
                                  le_AD@i 00AC                                    _gs_pan 7E01  
                                  _memcpy 523A                                    _memset 5542  
                                  _fround 22D8                                    _millis 5670  
                                  clear_0 42E2                                    clear_1 42EE  
                                  clear_2 42FA                                    clear_3 4306  
                                  clear_4 4312                                    clear_5 431E  
                                  clear_6 4338                                    clear_7 4344  
                        ___awdiv@quotient 006C                          SetAppKey@comando 0120  
                         ___awmod@divisor 0062                                    _teste0 02EE  
                                  _teste1 02ED                           ___awmod@counter 0064  
                      __size_of_TxLoRaWan 03B4                        ?_USBEnableEndpoint 0009  
                            ?_retornaDado 0060                              converter@aux 0004  
                                  main@dr 02AE                                    main@sf 029F  
                                  _strcat 5168                                    _strcmp 5120  
                                  _strcpy 55A2                                    _strlen 5028  
                   ___ftmul@f3_as_product 008A             __size_of_USBTransferOnePacket 0106  
                               ??_isdigit 0060                              _CDCTxService 2E84  
                        __end_of_setup_AD 575A                              __mediumconst 7BEE  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                            ??_SetBandWidth 00F7  
                     ??_USBEnableEndpoint 000A                      __end_of_MAC_TX_UNCNF 7DB3  
                 recebeByteLoRaWan@i_4802 0013                                 ??_sprintf 00EF  
                             _CtrlTrfData 000438                                 ??_strncmp 0007  
                               ??_toupper 0001                         __end_of_SYS_RESET 7DD7  
                      setup_uart@baudRate 006D                      _controlTransferState 0056  
                           ?_parseLoRaWan 0001                                __accesstop 0060  
                 __end_of__initialization 434A                              ?_verificaUSB 0001  
                         __CFG_PBADEN$OFF 000000                                ___ftadd@f1 0074  
                              ___ftadd@f2 0077                                ___ftge@ff1 0060  
                              ___ftge@ff2 0063                             ___rparam_used 000001  
                              ___ftdiv@f1 008F                                ___ftdiv@f2 0092  
                              ___ftdiv@f3 0099                  __size_of_USBStallHandler 0042  
                              ___ftneg@f1 0060                                ___awtoft@c 0068  
                     __size_of_USBSuspend 0030                                ___ftmul@f1 0080  
                              ___ftmul@f2 0083                       recebeByte@frameData 0664  
              __end_of_get_preambleid_900 7DF3                __end_of_set_preambleid_900 7DF5  
                              ___ftsub@f1 0080                                ___ftsub@f2 0083  
                              ___fttol@f1 00B0                            __pcstackCOMRAM 0001  
               __end_of_USBEnableEndpoint 53FE                             __end_of_sd000 7DEA  
                           __end_of_sd001 7D38                             __end_of_sd002 7D04  
                             _JoinLoRaWan 5438                              __pidataBANK2 5776  
                            __pidataBANK3 5702                             __end_of_le_AD 333A  
                           __end_of_delay 4D06                                ___lltoft@c 0068  
        __size_of_USBCtrlEPAllowDataStage 009E                             __end_of_getch 56BC  
                           __end_of_scale 1A00             __size_of_USBConfigureEndpoint 0094  
                         _retries_sending 02F4                             __end_of_putch 5776  
                              _le_AD$5821 00A3               __end_of_USBCtrlTrfInHandler 4144  
                       _MAC_SET_CH_STATUS 7D5A                    i2_USBTransferOnePacket 377A  
                         _responseLoRaWan 01FE                                __div_to_l_ 333A  
                               ?_FeedBack 0001                                 ?_DataRate 00F5  
                              _cdc_notice 0314                                 ?i2_memset 0001  
                              _cdc_rx_len 0052                                _cdc_tx_len 0051  
                       __end_of_SetDevEUI 4C1E                            main@deltaTempo 02A2  
                       __end_of_SetAppEUI 4C94                         __end_of_SetAppKey 41FA  
                      __end_of_MAC_SET_DR 7DCA                        __end_of_MAC_SET_BW 7D75  
                                 ??_le_AD 00A1                        __end_of_MAC_SET_SF 7D5A  
                                 ??_delay 0071                                 ?i2_strlen 0001  
                ??_USBCtrlTrfSetupHandler 001B                          ?_USBDeviceDetach 0001  
                 _USBTicksSinceSuspendEnd 02E8                                   ??_getch 0001  
                         __div_to_l_@exp1 006B               __size_of_SetSpreadingFactor 0040  
                         __div_to_l_@cntr 006A                          ?_USBDeviceAttach 0001  
                                 ??_scale 0092                           __div_to_l_@quot 0066  
                      __end_of_MAC_TX_CNF 7DD1                    _USBStdGetStatusHandler 455E  
                            sprintf@width 0119                                   ??_putch 0060  
                         le_AD@leituraAux 00AA                        __size_of_converter 0086  
                          ??_parseLoRaWan 0068                                __pbssBANK0 00FA  
                    __end_of_enviaComando 377A                                __pbssBANK1 01F9  
                              __pbssBANK2 02C8                                __pbssBANK3 0300  
                              __pbssBANK4 0440                                __pbssBANK5 0580  
                              __pbssBANK6 0600                                __pbssBANK7 0700  
                      __size_of_le_pulsos 00E0                     recebeByteLoRaWan@port 000F  
                       __end_of_TxLoRaWan 1DB4                   SetChannelLoRaWan@ligado 00F5  
                          _novaMsgLoRaWan 0059                             __div_to_l_@f1 0060  
                           __div_to_l_@f2 0063               __size_of_USBWakeFromSuspend 0036  
                             _pBDTEntryIn 0040                   SetChannelLoRaWan@status 01E8  
        __end_of_USBCtrlEPServiceComplete 3978                           SetDevEUI@status 01E8  
                                 ?_SetAdr 00F5               __size_of_USBCheckCDCRequest 00AE  
                    USBCtrlTrfRxService@i 0001                                   ?___ftge 0060  
                                 ?___wmul 006E                 __end_of_MAC_SET_CH_STATUS 7D68  
                      SetBandWidth@status 01E8                                   _CCP1CON 000FBD  
                                 ?_memcpy 0001                                   ?_memset 0060  
                                 ?_fround 008F                                   ?_millis 0060  
                              _device_dsc 7D38                                 ?___awtoft 0068  
                               ?___ftpack 0060                          _USBCtrlEPService 4746  
                              _ep_data_in 02D5                                 ?___lltoft 0068  
                                 ?_strcat 0060                                   ?_strcmp 0001  
                                 ?_strcpy 0001                                   ?_strlen 0060  
             __end_of_USBCtrlTrfRxService 3570                        _USBCheckStdRequest 3C4E  
                     le_pulsos@freqPulses 0069                         _configDescriptor1 7C8D  
                              ??_FeedBack 0065                                   i2l10935 4FF2  
                                 i2l10937 5022                                ??_DataRate 00F7  
                       _tamDadosRecebidos 005B                                   _GO_DONE 007E11  
                              ??i2_memset 0007               __end_of_USBCtrlTrfTxService 3FC2  
                     _USBStdSetCfgHandler 3E10                __end_of_ResetModuloLoRaWan 564A  
                   __end_of_MAC_GET_DNCTR 7DA0                                ??i2_strlen 0003  
                        _discovery_status 02F5                       ?_USBCheckStdRequest 0001  
            __size_of_USBStdGetDscHandler 012E                                   _UIEbits 000F69  
                                 _UIRbits 000F68                                _gs_channel 7DFF  
                           _cdc_trf_state 02E7                                   _MacSave 5472  
                         putsUSBUSART@len 0064                     __end_of_MAC_JOIN_OTAA 7DAA  
                                 _pCDCDst 0346                                   _pCDCSrc 0349  
                       __end_of__npowers_ 7C65                                   __Hparam 0000  
         ??_USBIncrement1msInternalTimers 0001                      ?_USBStdSetCfgHandler 0001  
                               _CDCInitEP 4E4C                           SetAppEUI@status 01E8  
                              _scale$5824 0092                                   __Lparam 0000  
                         __size_of_SetAdr 003E                __size_of_USBEnableEndpoint 003C  
                    __end_of_SetBandWidth 51F4                                 ?_setup_AD 0001  
                            SetAdr@status 01E8                      ??_USBCheckStdRequest 001B  
                 enviaComando@tipoComando 007E                           __size_of___ftge 0092  
           __size_of_USBCtrlTrfOutHandler 005E                                   ___awdiv 4996  
                                 ___ftadd 291E                                   ___awmod 4D06  
                                 ___ftdiv 3B66                                   ___ftneg 564A  
                                 ___lldiv 4AA2                          ??_USBDeviceTasks 001C  
                         __size_of___wmul 0028                                   ___ftmul 3A70  
                                 ___llmod 4DE4                                   ___ftsub 52C0  
                                 ___fttol 3978                         ??_USBStallHandler 0001  
                       __end_of_converter 4AA2                                   _channel 02F7  
                                 __pcinit 42AA                         __end_of_le_pulsos 3E10  
                         __size_of_memcpy 0044                                ??___awtoft 006B  
                              ??___ftpack 0065                           __size_of_memset 0030  
                         __size_of_fround 0270                 __end_of_configDescriptor1 7CD0  
                         __size_of_millis 0026                                   __ramtop 0800  
                              ??___lltoft 006C                                   __ptext0 0E10  
                                 __ptext1 4608                                   __ptext2 4406  
                                 __ptext3 527E                                   __ptext4 574A  
                                 __ptext5 50D0                                   __ptext6 3D30  
                                 __ptext7 320E                                   __ptext8 3B66  
                                 __ptext9 53FE                                   _inPipes 00FA  
                                 _command 005C               _USBDeferOUTDataStagePackets 02E9  
                         __size_of_strcat 0046                           __size_of_strcmp 0048  
                         __size_of_strcpy 002E                           __size_of_strlen 0056  
                   SYS_InterruptHigh@dig1 0030                     SYS_InterruptHigh@dig2 0032  
                   SYS_InterruptHigh@dig3 0034                     SYS_InterruptHigh@dig4 0036  
                       __end_of_hexpowers 7C85                               ?__div_to_l_ 0060  
                                 _dpowers 7BEF                              ??_USBSuspend 0015  
                                 _isdigit 56E0                      __size_of_retornaDado 0060  
                                 delay@to 0079                          ___awmod@dividend 0060  
                           _receivePacket 0580                           i2_USBDeviceInit 2C10  
                        i2USBDeviceInit@i 0009                                   getch@RC 0002  
                           converter@aux2 0005                        __end_of_USB_CD_Ptr 7C8D  
                                 _sprintf 0012           __size_of_USBCtrlTrfSetupHandler 0094  
                                 _strncmp 4B26                            __pintcode_body 275A  
                                 _toupper 5736                      end_of_initialization 434A  
                           TxLoRaWan@data 00F6                             TxLoRaWan@conf 01E8  
                      __end_of_USB_SD_Ptr 7C8B                                   memcpy@d 0007  
                                 memcpy@n 0005                                   memcpy@s 0009  
                     _pBDTEntryEP0OutNext 004C                                   memset@c 0062  
                                 memset@n 0064                                   memset@p 0066  
                           __Lmediumconst 7BEE                                   int_func 275A  
                         _USB1msTickCount 02CE           _dummy_encapsulated_cmd_response 03B4  
                                 millis@m 0064                                 i2u1020_40 27D6  
                               i2u1021_40 27E8                                 i2u1020_48 27D8  
                               i2u1022_40 27FA                                 i2u1021_48 27EA  
                               i2u1023_40 2812                                 i2u1022_48 27FC  
                               i2u1025_40 2840                                 i2u1027_40 286E  
                               i2u1019_40 27C4                                 i2u1019_48 27C6  
                               i2u1029_40 289C                  ?_USBStdFeatureReqHandler 0001  
                           enviaComando@i 0081                     ??_USBStdSetCfgHandler 0015  
                         ___lldiv@divisor 0064                      __size_of_verificaUSB 0030  
                              ?_CDCInitEP 0001                           ___lldiv@counter 006C  
                      parseLoRaWan@status 007A                  recebeByte@escapeCaracter 0050  
                      __end_of_USBSuspend 55A2                   _USBCtrlEPAllowDataStage 46A8  
                               _RCSTAbits 000FAB                                ??_setup_AD 0060  
                                 postdec1 000FE5                                   postdec2 000FDD  
                            _MAC_TX_UNCNF 7DAA                                   postinc0 000FEE  
                                 postinc2 000FDE                             MacSave@status 01E8  
                _USBCtrlEPServiceComplete 387C                            __tdiv_to_l_@f1 0060  
                          __tdiv_to_l_@f2 0063                       _get_channelmask_900 7DF5  
                                 strcmp@r 0006                       _set_channelmask_900 7DF7  
                                 strlen@s 0060                      __end_of_parseLoRaWan 455E  
                           ??__tdiv_to_l_ 0066                _USBStatusStageEnabledFlag1 02EC  
              _USBStatusStageEnabledFlag2 02EB                        USBEnableEndpoint@p 000A  
                               _PORTCbits 000F82                                 _PORTDbits 000F83  
                               _PORTEbits 000F84                                 _STATE_OFF 7DEA  
                              _setup_ccp1 527E                             le_pulsos@freq 006A  
                           le_pulsos@modo 0065                                _setup_uart 4608  
                   __size_of_enviaComando 0104                                 _TRISCbits 000F94  
                               _TRISDbits 000F95                                 _TRISEbits 000F96  
                           ?_setup_pulsos 0001                                main@Fcanal 02AB  
                      _BothEP0OutUOWNsSet 01FB                                main@Icanal 029E  
                              main@i_3303 02AC                                main@i_3304 02AD  
                              main@i_3271 02B0                                main@i_3272 02B1  
               USBConfigureEndpoint@EPNum 0006                ?_USBCtrlEPAllowStatusStage 0001  
     USER_USB_CALLBACK_EVENT_HANDLER@size 0011                                 _USTATcopy 005D  
                __size_of_initRecebeDados 0016              __end_of_USBTransferOnePacket 3676  
                             ___ftdiv@exp 009C                                 _TXSTAbits 000FAC  
                               _SYS_RESET 7DD1                       __size_of__div_to_l_ 012A  
                             ___ftmul@exp 0089                              ?_JoinLoRaWan 0001  
                          __end_of_SetAdr 53C2                    _USBCtrlTrfSetupHandler 47DC  
                            le_AD@leitura 00AE                         putsUSBUSART@pData 0062  
                 ?i2_USBTransferOnePacket 0001                     __end_of_USBDeviceInit 2C10  
                          __end_of___ftge 4996     __end_of_USBIncrement1msInternalTimers 56E0  
  __size_of_USBIncrement1msInternalTimers 0024             _USBIncrement1msInternalTimers 56BC  
                          __end_of___wmul 5624                              _enviaComando 3676  
                             _BAUDCONbits 000FB8                   __end_ofi2_USBDeviceInit 2D50  
                           ?_putsUSBUSART 0060                            __end_of_gs_pan 7E03  
                               i2memset@c 0003                                 i2memset@n 0005  
                               i2memset@p 0007                            __end_of_memcpy 527E  
                          __end_of_memset 5572                            __end_of_fround 2548  
                          __end_of_millis 5696                         _USBBusIsSuspended 01FC  
                      _get_preambleid_900 7DF1                        _set_preambleid_900 7DF3  
                          __end_of_strcat 51AE                            __end_of_strcmp 5168  
                          __end_of_strcpy 55D0                            __end_of_strlen 507E  
                     start_initialization 42AA                            ??_setup_pulsos 0060  
                 ?_USBStdGetStatusHandler 0001                           DataRate@comando 0120  
                             __end_of_MAC 7DE6             USBCtrlTrfRxService@byteToRead 0002  
                             __end_of_SYS 7DDC                       __end_of__tdiv_to_l_ 2E84  
                       __size_of_FeedBack 0212                         __size_of_DataRate 0046  
                        TxLoRaWan@comando 0120                               _cdc_data_rx 000540  
                             _cdc_data_tx 000500                         __size_ofi2_memset 002C  
            __end_of_USBConfigureEndpoint 4904                          TxLoRaWan@tamData 00F8  
         __end_of_USBStdFeatureReqHandler 22D8                                 _SetDevEUI 4BA8  
       __end_of_USBCtrlEPAllowStatusStage 4088                         __size_ofi2_strlen 0052  
                               _SetAppEUI 4C1E                                 i2strlen@s 0001  
                               _SetAppKey 4144                  __end_of_USBCtrlEPService 47DC  
                         ___llmod@divisor 0071                     __size_of_SetBandWidth 0046  
                         ___llmod@counter 0075                 ??_USBCtrlEPAllowDataStage 0002  
                     __end_of_MAC_GET_ADR 7DBB                               ??_CDCInitEP 000D  
                          USBDeviceInit@i 0068                        retornaDado@dadoBit 0060  
                                ??_SetAdr 00F7                                 _TxLoRaWan 1A00  
                  _pBDTEntryEP0OutCurrent 004E                   USBTransferOnePacket@dir 0060  
                 USBTransferOnePacket@len 0063            __end_ofi2_USBTransferOnePacket 387C  
                                ??___ftge 0066                       __end_of_MAC_SET_ADR 7DC3  
                                ??___wmul 0072                       _USBStdGetDscHandler 30E0  
                             __pdataBANK2 02FE                               __pdataBANK3 03C3  
                        __CFG_LPT1OSC$OFF 000000                                  ??_memcpy 0007  
                                ??_memset 0066                            ??_putsUSBUSART 0062  
                                ??_fround 0092                                  ??_millis 0064  
                         SetAppKey@status 01E8                             sprintf@tmpval 010C  
                                ??_strcat 0064                  ResetModuloLoRaWan@status 0087  
                                ??_strcmp 0005                                  ??_strcpy 0005  
                                ??_strlen 0062                               ?_setup_ccp1 0001  
               recebeByteLoRaWan@tamMsgRx 0011                    _USBActiveConfiguration 005E  
                              fround@prec 0098            __end_of_USBStdGetStatusHandler 4608  
                             ?_setup_uart 006D                         __size_of___awtoft 003A  
                       __size_of___ftpack 00B0                         __size_of___lltoft 005E  
                             __pbssCOMRAM 0038                __end_of_SetSpreadingFactor 5384  
                       _recebeByteLoRaWan 1DB4                             __pcstackBANK0 0060  
                           __pcstackBANK1 0100                             __pcstackBANK2 0200  
            __size_of_USBCtrlTrfInHandler 00BC                      __end_of_set_link_key 7DFD  
                SetChannelLoRaWan@comando 0120                              _SetBandWidth 51AE  
                      ?_recebeByteLoRaWan 0001                              _isdigit$5257 0061  
                    ?_USBStdGetDscHandler 0001                          SetDevEUI@comando 0120  
                   __end_of_gs_encryption 7DFB                            SetBandWidth@bw 00F5  
                              ?_SetDevEUI 0001                                ?_SetAppEUI 0001  
                              ?_SetAppKey 0001                __end_of_USBWakeFromSuspend 54DE  
                                ?_MacSave 0001                               sprintf@flag 011B  
                             sprintf@fval 0116                               sprintf@prec 011D  
                         _USBStallHandler 5302                       ??_recebeByteLoRaWan 000A  
                            _pBDTEntryOut 02C8                __end_of_USBCheckCDCRequest 4406  
                    recebeByteLoRaWan@len 000E                  __size_of_USBDeviceDetach 000E  
                __size_of_USBDeviceAttach 0034                        _ResetModuloLoRaWan 5624  
                               _feedback1 02F0                                 _feedback2 02EF  
                               _main$5820 02A6                         ??_initRecebeDados 0060  
                              ?_TxLoRaWan 00F5                     __size_of_parseLoRaWan 00AC  
                     SetBandWidth@comando 0120                                 __pintcode 0008  
                           __pmediumconst 7BEE                                  ?___awdiv 0066  
                                ?___ftadd 0074                                  ?___awmod 0060  
                                ?___ftdiv 008F                                  ?___ftneg 0060  
                                ?___lldiv 0060                                  ?___ftmul 0080  
                                ?___llmod 006D                                  ?___ftsub 0080  
                               __npowers_ 7C3E                                  ?___fttol 00B0  
                     ?_ResetModuloLoRaWan 0001                        enviaComando@i_4788 0083  
                      enviaComando@i_4789 0085                         __size_of_setup_AD 0010  
                             __preambleID 02FB                          ?i2_USBDeviceInit 0001  
                             __tdiv_to_l_ 2D50                 __end_of_recebeByteLoRaWan 2054  
                           __send_retries 02FE                              ??__div_to_l_ 0066  
                    _USBTransferOnePacket 3570                                 _converter 4A1C  
                                ?_isdigit 0001                                 _le_pulsos 3D30  
            __end_of_USBCtrlTrfOutHandler 4FCC                                 _hexpowers 7C65  
                   ??_USBStdGetDscHandler 0001                               _ep_data_out 02D2  
                          __size_of_le_AD 012C                            __size_of_delay 0072  
                          __size_of_getch 0026                   parseLoRaWan@intervalMAX 0078  
                                ?_sprintf 00BF              __size_of_USBCtrlTrfRxService 010C  
                    ??_ResetModuloLoRaWan 0087                            __size_of_scale 0438  
           USBConfigureEndpoint@direction 0001                                  ?_strncmp 0001  
                                ?_toupper 0001                               _MAC_GET_ADR 7DB3  
                          __size_of_putch 000E                                 delay@time 006D  
                                _MAC_SAVE 7DDC              __size_of_USBCtrlTrfTxService 00D4  
                            _parseLoRaWan 44B2                            ___wmul@product 0072  
                                _LATDbits 000F8C                               _MAC_SET_ADR 7DBB  
                            TxLoRaWan@hex 01EA                ??_USBCtrlEPServiceComplete 0002  
                                _IPR1bits 000F9F                                  _IPR2bits 000FA2  
                                _PIE2bits 000FA0                       __size_of_setup_ccp1 0042  
                               _numPacote 02F1                       __size_of_setup_uart 00A0  
                      __end_of__div_to_l_ 3464                                  _PIR2bits 000FA1  
                                i2u612_40 2246                                  i2u571_40 3F6A  
                                i2u571_47 3F60                                  i2u900_40 204E  
                                i2u573_40 3FAA                                  i2u573_47 3FA0  
                                i2u590_40 31DA                      __end_of_setup_pulsos 44B2  
                                i2u590_47 31D0                                  i2u583_40 3E86  
                                i2u587_40 3158                                  i2u587_47 314E  
                                i2u588_40 3188                                  i2u924_40 30DC  
                                i2u588_47 317E                                  i2u881_40 2D10  
                                i2u882_40 50AC                                  i2u882_47 50A2  
                                i2u867_40 515C                                  i2u869_40 4B54  
                                i2u878_40 2C6E                                  i2u894_40 1F6A  
                                _RCONbits 000FD0                                  i2u898_40 2040  
                        __CFG_WDTPS$32768 000000                                  _UEP0bits 000F70  
              _USBDeferINDataStagePackets 02EA               __size_of_USBCheckStdRequest 00E2  
                                _UCONbits 000F6D                                  _STATE_ON 7DEE  
                    _USBConfigureEndpoint 4870                      __size_of_JoinLoRaWan 003A  
                               getch@data 0003                               _frameBuffer 0700  
                           ??_retornaDado 0061          __size_of_USBStdFeatureReqHandler 0284  
                        _get_own_mac_high 7E03                         ___wmul@multiplier 006E  
                   ?_USBTransferOnePacket 0060                                  _FeedBack 2548  
                       _SYS_InterruptHigh 0008                               _encryptMode 02F3  
                              ?_converter 0002                                  _DataRate 51F4  
                           ?_CDCTxService 0001                                ?_le_pulsos 0065  
                            _RemoteWakeup 01FD                                 main@pisca 02AF  
                               main@tempo 0296                                  i2_memset 55D0  
                        main@tempoTimeOut 029A                        ?_SYS_InterruptHigh 0001  
                        putsUSBUSART@data 0060                   __end_of_USBStallHandler 5344  
                                i2_strlen 507E                          SetAppEUI@comando 0120  
                               copy_data0 42BE                               _freqPulses1 033A  
                             _freqPulses2 0336                               _freqPulses3 0332  
                             _freqPulses4 032E               ??_USBCtrlEPAllowStatusStage 0001  
             __end_of_USBStdSetCfgHandler 3EEE                               ??_SetDevEUI 00F5  
                             ??_SetAppEUI 00F5                               ??_SetAppKey 00F5  
                     ??_SYS_InterruptHigh 001D                            _MAC_SET_DEVEUI 7D8B  
                    __end_of_putsUSBUSART 5120                             ??_verificaUSB 006D  
                          _MAC_SET_APPEUI 7D80                            _MAC_SET_APPKEY 7D75  
                      __end_of_device_dsc 7D4A                          __size_of_MacSave 0036  
                           SetAdr@comando 0120                                _EECON1bits 000FA6  
                          DataRate@status 01E8                   ?_USBCtrlTrfSetupHandler 0001  
                         TxLoRaWan@status 01E9                   USBStdGetStatusHandler@p 0002  
                                __Hrparam 0000                               ??_TxLoRaWan 00F9  
                               memcpy@tmp 000B                                  __Lrparam 0000  
                  USBTransferOnePacket@ep 0068                                  _SetupPkt 000430  
              recebeByteLoRaWan@frameData 0440                         ??_USBDeviceDetach 0060  
                   ?_USBConfigureEndpoint 0001                         ??_USBDeviceAttach 0060  
                        __size_of___awdiv 0086                          __size_of___ftadd 01AE  
                        __size_of___awmod 0072                          __size_of___ftdiv 00E8  
                        __size_of___ftneg 0026                          __size_of___lldiv 0084  
                        __size_of___ftmul 00F6                          __size_of___llmod 0068  
                        __size_of___ftsub 0042                          __size_of___fttol 00F8  
                                ___awtoft 53FE                                  ___ftpack 41FA  
               __end_of_SYS_InterruptHigh 291E                               _fround$5822 0095  
                             _fround$5823 0092                                  ___lltoft 4F10  
                             _line_coding 03BC                __size_of_recebeByteLoRaWan 02A0  
                      __end_of_gs_channel 7E01                            ??_CDCTxService 006B  
                              sprintf@idx 0105                                sprintf@len 0108  
                              sprintf@exp 0110                                sprintf@val 0112  
                              strcat@from 0062                          __size_of_isdigit 0022  
                 __size_of_USBDeviceTasks 012E                       __end_of_retornaDado 4F10  
                         enviaComando@cmd 007C                                  __ptext10 4C94  
                                __ptext11 5512                                  __ptext20 5624  
                                __ptext12 575A                                  __ptext21 5438  
                                __ptext13 54DE                                  __ptext30 2548  
                                __ptext22 5344                                  __ptext14 2E84  
                                __ptext31 4EB0                                  __ptext23 4BA8  
                                __ptext15 3570                                  __ptext40 4996  
                                __ptext32 51F4                                  __ptext24 4D78  
                                __ptext16 2ACC                                  __ptext41 2D50  
                                __ptext33 0012                                  __ptext25 51AE  
                                __ptext17 5542                                  __ptext50 564A  
                                __ptext42 333A                                  __ptext34 15C8  
                                __ptext26 4144                                  __ptext18 1A00  
                                __ptext51 4904                                  __ptext43 4F10  
                                __ptext35 56E0                                  __ptext27 4C1E  
                                __ptext19 5168                                  __ptext60 507E  
                                __ptext52 3676                                  __ptext44 4DE4  
                                __ptext36 22D8                                  __ptext28 5384  
                                __ptext61 4B26                                  __ptext53 5028  
                                __ptext45 4AA2                                  __ptext37 55FC  
                                __ptext29 5472                                  __ptext70 5572  
                                __ptext62 55A2                                  __ptext54 5768  
                                __ptext46 3978                                  __ptext38 3A70  
                                __ptext71 5302                                  __ptext63 5120  
                                __ptext55 44B2                                  __ptext47 52C0  
                                __ptext39 4D06                                  __ptext80 55D0  
                                __ptext72 56BC                                  __ptext64 4A1C  
                                __ptext56 5670                                  __ptext48 291E  
                                __ptext81 455E                                  __ptext73 4746  
                                __ptext65 5736                                  __ptext57 5720  
                                __ptext49 41FA                                  __ptext90 4F6E  
                                __ptext82 30E0                                  __ptext74 523A  
                                __ptext66 5696                                  __ptext91 3464  
                                __ptext83 2054                                  __ptext75 47DC  
                                __ptext67 2FB2                                  __ptext59 1DB4  
                                __ptext92 3FC2                                  __ptext84 4FCC  
                                __ptext76 387C                                  __ptext68 2C10  
                                __ptext93 4088                                  __ptext85 4358  
                                __ptext77 46A8                                  __ptext69 54A8  
                                __ptext94 3EEE                                  __ptext86 4E4C  
                                __ptext78 3C4E                                  __ptext87 377A  
                                __ptext79 3E10                                  __ptext88 53C2  
                                __ptext89 4870                                  __powers_ 7C17  
           recebeByte@checksumRecebimento 02E3                             _MAC_GET_DNCTR 7D96  
                  __end_of_MAC_SET_DEVEUI 7D96                    __end_of_MAC_SET_APPEUI 7D8B  
                  __end_of_MAC_SET_APPKEY 7D80                          __size_of_sprintf 0DFE  
                        __size_of_strncmp 0082                          __size_of_toupper 0014  
                              strcpy@from 0003                            _dadosRecebidos 0300  
                                _error_AT 02FA                                  _error_RX 02F8  
                                _error_TX 01FF                      parseLoRaWan@previous 0074  
          __end_of_USBCtrlTrfSetupHandler 4870                             __size_of_main 07B8  
                       ?_USBCtrlEPService 0001                                  _tamFrame 005A  
                              strncmp@len 0005                                DataRate@dr 00F5  
                      ??_USBCtrlEPService 001B                                _MAC_SET_DR 7DC3  
                              _MAC_SET_BW 7D68                             _MAC_JOIN_OTAA 7DA0  
                              _MAC_SET_SF 7D4A                       _USBCtrlTrfInHandler 4088  
                              _MAC_TX_CNF 7DCA                       __end_of_verificaUSB 5542  
                                _response 0350                                  _setup_AD 574A  
                                _outPipes 0038                              _set_link_key 7DFB  
                    _USBCtrlTrfOutHandler 4F6E                                  int$flags 005F  
               _USBCtrlEPAllowStatusStage 3FC2                            converter@conv1 0006  
                          converter@conv2 0002                           _get_own_mac_low 7E05  
                                _protocol 02F9                                  main@data 0200  
                          converter@resul 0003                                  main@resp 02A0  
                  ??_USBTransferOnePacket 0064                              ??_setup_ccp1 0060  
                             _MSG_LORAWAN 03C3                     __CFG_CPUDIV$OSC1_PLL2 000000  
                            ??_setup_uart 0071                 _USBDeferStatusStagePacket 0053  
                CDCTxService@byte_to_send 006C                                 putch@data 0060  
                             ??_converter 0003               __end_of_get_channelmask_900 7DF7  
                             ??_le_pulsos 0069                                _INTCONbits 000FF2  
             __end_of_set_channelmask_900 7DF9                            TxLoRaWan@porta 00F5  
                    ?_USBCtrlTrfInHandler 0001                                  memcpy@d1 0001  
                                memcpy@s1 0003                           _delivery_status 02F6  
           USBCtrlTrfTxService@byteToSend 0001                                  isdigit@c 0062  
                                memset@p1 0060                                  scale@scl 0095  
                        ?_USBStallHandler 0001                  USBStdFeatureReqHandler@p 0019  
                         _initRecebeDados 5720                                  intlevel2 0000  
                               sprintf@ap 010A                                 sprintf@cp 0106  
                        __tdiv_to_l_@exp1 006E                                 sprintf@sp 00BF  
                        __tdiv_to_l_@cntr 006D                    __size_of_USBDeviceInit 0144  
                        __tdiv_to_l_@quot 0069   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 5028  
__size_of_USER_USB_CALLBACK_EVENT_HANDLER 005C         ??_USER_USB_CALLBACK_EVENT_HANDLER 0013  
        ?_USER_USB_CALLBACK_EVENT_HANDLER 000D           _USER_USB_CALLBACK_EVENT_HANDLER 4FCC  
            i2USBTransferOnePacket@handle 000A                          ___lldiv@dividend 0060  
                   __size_of_setup_pulsos 00AC                         _SetChannelLoRaWan 4D78  
                      _SetSpreadingFactor 5344                       parseLoRaWan@timeout 007B  
                          MacSave@comando 0120                        ?_SetChannelLoRaWan 00F5  
                               strncmp@s1 0001                                 strncmp@s2 0003  
                      __end_of_setup_ccp1 52C0                        __end_of_setup_uart 46A8  
              i2USBTransferOnePacket@data 0002                    ??_USBConfigureEndpoint 0002  
                   ?_USBCtrlTrfOutHandler 0001                     retornaDado@selectDado 0063  
                     ?_SetSpreadingFactor 0001                       _USBCtrlTrfRxService 3464  
                      _USBWakeFromSuspend 54A8                       ??_SetChannelLoRaWan 00F6  
                 _USBStdFeatureReqHandler 2054                        _USBCheckCDCRequest 4358  
                     _USBCtrlTrfTxService 3EEE                      SetSpreadingFactor@sf 01E9  
              __size_of_SYS_InterruptHigh 2916                              ?__tdiv_to_l_ 0060  
                             _retornaDado 4EB0                           le_AD@AnalogPort 00A9  
                                sprintf@c 011F                                  sprintf@f 00C1  
                                strcat@cp 0064                 recebeByte@tamanhoMensagem 0048  
                                strcat@to 0060                       ?_USBWakeFromSuspend 0001  
                                strcmp@s1 0001                                  strcmp@s2 0003  
                        ___lldiv@quotient 0068                     ??_USBCtrlTrfInHandler 0002  
                                strcpy@cp 0005                                  strlen@cp 0064  
                                strcpy@to 0001                     _USBAlternateInterface 02FC  
                                toupper@c 0001                       ?_USBCheckCDCRequest 0001  
                    __end_of_write_values 7DFF                 i2USBTransferOnePacket@dir 0001  
               i2USBTransferOnePacket@len 0004                              _setup_pulsos 4406  
                     USBEnableEndpoint@ep 000C                           _endpoint_number 0055  
                   __size_of_putsUSBUSART 0050                      ??_SetSpreadingFactor 00F5  
                    ?_USBCtrlTrfRxService 0001                 __end_of_SetChannelLoRaWan 4DE4  
                      __CFG_FOSC$HSPLL_HS 000000                  ?_USBCtrlEPAllowDataStage 0001  
                    ?_USBCtrlTrfTxService 0001                 SetSpreadingFactor@comando 0120  
                             _verificaUSB 5512                  __end_of_get_own_mac_high 7E05  
            _USBStatusStageTimeoutCounter 0054                      ??_USBWakeFromSuspend 0015  
              USBTransferOnePacket@handle 0069                      __end_of_CDCTxService 2FB2  
                 __end_of_get_own_mac_low 7E07                      ??_USBCheckCDCRequest 0001  
                              _USB_CD_Ptr 7C8B  
