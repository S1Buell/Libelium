

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Wed Jun 06 13:52:07 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    75                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1
    78                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text61,global,reloc=2,class=CODE,delta=1
    82                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    83                           	psect	text63,global,reloc=2,class=CODE,delta=1
    84                           	psect	text64,global,reloc=2,class=CODE,delta=1
    85                           	psect	text65,global,reloc=2,class=CODE,delta=1
    86                           	psect	text66,global,reloc=2,class=CODE,delta=1
    87                           	psect	text67,global,reloc=2,class=CODE,delta=1
    88                           	psect	text68,global,reloc=2,class=CODE,delta=1
    89                           	psect	text69,global,reloc=2,class=CODE,delta=1
    90                           	psect	text70,global,reloc=2,class=CODE,delta=1
    91                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
    92                           	psect	text72,global,reloc=2,class=CODE,delta=1
    93                           	psect	text73,global,reloc=2,class=CODE,delta=1
    94                           	psect	text74,global,reloc=2,class=CODE,delta=1
    95                           	psect	text75,global,reloc=2,class=CODE,delta=1
    96                           	psect	text76,global,reloc=2,class=CODE,delta=1
    97                           	psect	text77,global,reloc=2,class=CODE,delta=1
    98                           	psect	text78,global,reloc=2,class=CODE,delta=1
    99                           	psect	text79,global,reloc=2,class=CODE,delta=1
   100                           	psect	text80,global,reloc=2,class=CODE,delta=1
   101                           	psect	text81,global,reloc=2,class=CODE,delta=1
   102                           	psect	text82,global,reloc=2,class=CODE,delta=1
   103                           	psect	text83,global,reloc=2,class=CODE,delta=1
   104                           	psect	text84,global,reloc=2,class=CODE,delta=1
   105                           	psect	text85,global,reloc=2,class=CODE,delta=1
   106                           	psect	text86,global,reloc=2,class=CODE,delta=1
   107                           	psect	text87,global,reloc=2,class=CODE,delta=1
   108                           	psect	text88,global,reloc=2,class=CODE,delta=1
   109                           	psect	text89,global,reloc=2,class=CODE,delta=1
   110                           	psect	text90,global,reloc=2,class=CODE,delta=1
   111                           	psect	text91,global,reloc=2,class=CODE,delta=1
   112                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   113                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   114                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   115                           	dabs	1,0x400,48,_BDT
   116                           	dabs	1,0x500,64,_cdc_data_tx
   117                           	dabs	1,0x438,8,_CtrlTrfData
   118                           	dabs	1,0x430,8,_SetupPkt
   119                           	dabs	1,0x540,64,_cdc_data_rx
   120  0000                     
   121                           ; Version 1.44
   122                           ; Generated 14/09/2017 GMT
   123                           ; 
   124                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   125                           ; All rights reserved.
   126                           ; 
   127                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   128                           ; 
   129                           ; Redistribution and use in source and binary forms, with or without modification, are
   130                           ; permitted provided that the following conditions are met:
   131                           ; 
   132                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   133                           ;        conditions and the following disclaimer.
   134                           ; 
   135                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   136                           ;        of conditions and the following disclaimer in the documentation and/or other
   137                           ;        materials provided with the distribution.
   138                           ; 
   139                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   140                           ;        software without specific prior written permission.
   141                           ; 
   142                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   143                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   144                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   145                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   146                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   147                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   148                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   149                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   150                           ; 
   151                           ; 
   152                           ; Code-generator required, PIC18F4550 Definitions
   153                           ; 
   154                           ; SFR Addresses
   155  0000                     
   156                           	psect	idataBANK2
   157  004942                     __pidataBANK2:
   158                           	opt stack 0
   159                           
   160                           ;initializer for _MSG_LORAWAN
   161  004942  A7                 	db	low (STR_14+7)
   162  004943  7F                 	db	high (STR_14+7)
   163  004944  59                 	db	low STR_6
   164  004945  7F                 	db	high STR_6
   165  004946  75                 	db	low STR_7
   166  004947  7F                 	db	high STR_7
   167  004948  8B                 	db	low STR_8
   168  004949  7F                 	db	high STR_8
   169  00494A  E0                 	db	low STR_9
   170  00494B  7F                 	db	high STR_9
   171  00494C  F6                 	db	low STR_10
   172  00494D  7E                 	db	high STR_10
   173  00494E  FA                 	db	low STR_11
   174  00494F  7F                 	db	high STR_11
   175  004950  80                 	db	low STR_12
   176  004951  7F                 	db	high STR_12
   177  004952  27                 	db	low STR_13
   178  004953  7F                 	db	high STR_13
   179  004954  A0                 	db	low STR_14
   180  004955  7F                 	db	high STR_14
   181  004956  B3                 	db	low STR_15
   182  004957  7F                 	db	high STR_15
   183  004958  BB                 	db	low STR_16
   184  004959  7F                 	db	high STR_16
   185  00495A  67                 	db	low STR_17
   186  00495B  7F                 	db	high STR_17
   187  00495C  D9                 	db	low STR_18
   188  00495D  7F                 	db	high STR_18
   189  00495E  49                 	db	low STR_19
   190  00495F  7F                 	db	high STR_19
   191                           
   192                           ;initializer for _randx
   193  004960  0001               	dw	1
   194  004962  0000               	dw	0
   195                           
   196                           ;initializer for __send_retries
   197  004964  03                 	db	3
   198                           
   199                           	psect	mediumconst
   200  007C50                     __pmediumconst:
   201                           	opt stack 0
   202  007C50  00                 	db	0
   203  007C51                     _CRC8Table:
   204                           	opt stack 0
   205  007C51  00                 	db	0
   206  007C52  31                 	db	49
   207  007C53  62                 	db	98
   208  007C54  53                 	db	83
   209  007C55  C4                 	db	196
   210  007C56  F5                 	db	245
   211  007C57  A6                 	db	166
   212  007C58  97                 	db	151
   213  007C59  B9                 	db	185
   214  007C5A  88                 	db	136
   215  007C5B  DB                 	db	219
   216  007C5C  EA                 	db	234
   217  007C5D  7D                 	db	125
   218  007C5E  4C                 	db	76
   219  007C5F  1F                 	db	31
   220  007C60  2E                 	db	46
   221  007C61  43                 	db	67
   222  007C62  72                 	db	114
   223  007C63  21                 	db	33
   224  007C64  10                 	db	16
   225  007C65  87                 	db	135
   226  007C66  B6                 	db	182
   227  007C67  E5                 	db	229
   228  007C68  D4                 	db	212
   229  007C69  FA                 	db	250
   230  007C6A  CB                 	db	203
   231  007C6B  98                 	db	152
   232  007C6C  A9                 	db	169
   233  007C6D  3E                 	db	62
   234  007C6E  0F                 	db	15
   235  007C6F  5C                 	db	92
   236  007C70  6D                 	db	109
   237  007C71  86                 	db	134
   238  007C72  B7                 	db	183
   239  007C73  E4                 	db	228
   240  007C74  D5                 	db	213
   241  007C75  42                 	db	66
   242  007C76  73                 	db	115
   243  007C77  20                 	db	32
   244  007C78  11                 	db	17
   245  007C79  3F                 	db	63
   246  007C7A  0E                 	db	14
   247  007C7B  5D                 	db	93
   248  007C7C  6C                 	db	108
   249  007C7D  FB                 	db	251
   250  007C7E  CA                 	db	202
   251  007C7F  99                 	db	153
   252  007C80  A8                 	db	168
   253  007C81  C5                 	db	197
   254  007C82  F4                 	db	244
   255  007C83  A7                 	db	167
   256  007C84  96                 	db	150
   257  007C85  01                 	db	1
   258  007C86  30                 	db	48
   259  007C87  63                 	db	99
   260  007C88  52                 	db	82
   261  007C89  7C                 	db	124
   262  007C8A  4D                 	db	77
   263  007C8B  1E                 	db	30
   264  007C8C  2F                 	db	47
   265  007C8D  B8                 	db	184
   266  007C8E  89                 	db	137
   267  007C8F  DA                 	db	218
   268  007C90  EB                 	db	235
   269  007C91  3D                 	db	61
   270  007C92  0C                 	db	12
   271  007C93  5F                 	db	95
   272  007C94  6E                 	db	110
   273  007C95  F9                 	db	249
   274  007C96  C8                 	db	200
   275  007C97  9B                 	db	155
   276  007C98  AA                 	db	170
   277  007C99  84                 	db	132
   278  007C9A  B5                 	db	181
   279  007C9B  E6                 	db	230
   280  007C9C  D7                 	db	215
   281  007C9D  40                 	db	64
   282  007C9E  71                 	db	113
   283  007C9F  22                 	db	34
   284  007CA0  13                 	db	19
   285  007CA1  7E                 	db	126
   286  007CA2  4F                 	db	79
   287  007CA3  1C                 	db	28
   288  007CA4  2D                 	db	45
   289  007CA5  BA                 	db	186
   290  007CA6  8B                 	db	139
   291  007CA7  D8                 	db	216
   292  007CA8  E9                 	db	233
   293  007CA9  C7                 	db	199
   294  007CAA  F6                 	db	246
   295  007CAB  A5                 	db	165
   296  007CAC  94                 	db	148
   297  007CAD  03                 	db	3
   298  007CAE  32                 	db	50
   299  007CAF  61                 	db	97
   300  007CB0  50                 	db	80
   301  007CB1  BB                 	db	187
   302  007CB2  8A                 	db	138
   303  007CB3  D9                 	db	217
   304  007CB4  E8                 	db	232
   305  007CB5  7F                 	db	127
   306  007CB6  4E                 	db	78
   307  007CB7  1D                 	db	29
   308  007CB8  2C                 	db	44
   309  007CB9  02                 	db	2
   310  007CBA  33                 	db	51
   311  007CBB  60                 	db	96
   312  007CBC  51                 	db	81
   313  007CBD  C6                 	db	198
   314  007CBE  F7                 	db	247
   315  007CBF  A4                 	db	164
   316  007CC0  95                 	db	149
   317  007CC1  F8                 	db	248
   318  007CC2  C9                 	db	201
   319  007CC3  9A                 	db	154
   320  007CC4  AB                 	db	171
   321  007CC5  3C                 	db	60
   322  007CC6  0D                 	db	13
   323  007CC7  5E                 	db	94
   324  007CC8  6F                 	db	111
   325  007CC9  41                 	db	65
   326  007CCA  70                 	db	112
   327  007CCB  23                 	db	35
   328  007CCC  12                 	db	18
   329  007CCD  85                 	db	133
   330  007CCE  B4                 	db	180
   331  007CCF  E7                 	db	231
   332  007CD0  D6                 	db	214
   333  007CD1  7A                 	db	122
   334  007CD2  4B                 	db	75
   335  007CD3  18                 	db	24
   336  007CD4  29                 	db	41
   337  007CD5  BE                 	db	190
   338  007CD6  8F                 	db	143
   339  007CD7  DC                 	db	220
   340  007CD8  ED                 	db	237
   341  007CD9  C3                 	db	195
   342  007CDA  F2                 	db	242
   343  007CDB  A1                 	db	161
   344  007CDC  90                 	db	144
   345  007CDD  07                 	db	7
   346  007CDE  36                 	db	54
   347  007CDF  65                 	db	101
   348  007CE0  54                 	db	84
   349  007CE1  39                 	db	57
   350  007CE2  08                 	db	8
   351  007CE3  5B                 	db	91
   352  007CE4  6A                 	db	106
   353  007CE5  FD                 	db	253
   354  007CE6  CC                 	db	204
   355  007CE7  9F                 	db	159
   356  007CE8  AE                 	db	174
   357  007CE9  80                 	db	128
   358  007CEA  B1                 	db	177
   359  007CEB  E2                 	db	226
   360  007CEC  D3                 	db	211
   361  007CED  44                 	db	68
   362  007CEE  75                 	db	117
   363  007CEF  26                 	db	38
   364  007CF0  17                 	db	23
   365  007CF1  FC                 	db	252
   366  007CF2  CD                 	db	205
   367  007CF3  9E                 	db	158
   368  007CF4  AF                 	db	175
   369  007CF5  38                 	db	56
   370  007CF6  09                 	db	9
   371  007CF7  5A                 	db	90
   372  007CF8  6B                 	db	107
   373  007CF9  45                 	db	69
   374  007CFA  74                 	db	116
   375  007CFB  27                 	db	39
   376  007CFC  16                 	db	22
   377  007CFD  81                 	db	129
   378  007CFE  B0                 	db	176
   379  007CFF  E3                 	db	227
   380  007D00  D2                 	db	210
   381  007D01  BF                 	db	191
   382  007D02  8E                 	db	142
   383  007D03  DD                 	db	221
   384  007D04  EC                 	db	236
   385  007D05  7B                 	db	123
   386  007D06  4A                 	db	74
   387  007D07  19                 	db	25
   388  007D08  28                 	db	40
   389  007D09  06                 	db	6
   390  007D0A  37                 	db	55
   391  007D0B  64                 	db	100
   392  007D0C  55                 	db	85
   393  007D0D  C2                 	db	194
   394  007D0E  F3                 	db	243
   395  007D0F  A0                 	db	160
   396  007D10  91                 	db	145
   397  007D11  47                 	db	71
   398  007D12  76                 	db	118
   399  007D13  25                 	db	37
   400  007D14  14                 	db	20
   401  007D15  83                 	db	131
   402  007D16  B2                 	db	178
   403  007D17  E1                 	db	225
   404  007D18  D0                 	db	208
   405  007D19  FE                 	db	254
   406  007D1A  CF                 	db	207
   407  007D1B  9C                 	db	156
   408  007D1C  AD                 	db	173
   409  007D1D  3A                 	db	58
   410  007D1E  0B                 	db	11
   411  007D1F  58                 	db	88
   412  007D20  69                 	db	105
   413  007D21  04                 	db	4
   414  007D22  35                 	db	53
   415  007D23  66                 	db	102
   416  007D24  57                 	db	87
   417  007D25  C0                 	db	192
   418  007D26  F1                 	db	241
   419  007D27  A2                 	db	162
   420  007D28  93                 	db	147
   421  007D29  BD                 	db	189
   422  007D2A  8C                 	db	140
   423  007D2B  DF                 	db	223
   424  007D2C  EE                 	db	238
   425  007D2D  79                 	db	121
   426  007D2E  48                 	db	72
   427  007D2F  1B                 	db	27
   428  007D30  2A                 	db	42
   429  007D31  C1                 	db	193
   430  007D32  F0                 	db	240
   431  007D33  A3                 	db	163
   432  007D34  92                 	db	146
   433  007D35  05                 	db	5
   434  007D36  34                 	db	52
   435  007D37  67                 	db	103
   436  007D38  56                 	db	86
   437  007D39  78                 	db	120
   438  007D3A  49                 	db	73
   439  007D3B  1A                 	db	26
   440  007D3C  2B                 	db	43
   441  007D3D  BC                 	db	188
   442  007D3E  8D                 	db	141
   443  007D3F  DE                 	db	222
   444  007D40  EF                 	db	239
   445  007D41  82                 	db	130
   446  007D42  B3                 	db	179
   447  007D43  E0                 	db	224
   448  007D44  D1                 	db	209
   449  007D45  46                 	db	70
   450  007D46  77                 	db	119
   451  007D47  24                 	db	36
   452  007D48  15                 	db	21
   453  007D49  3B                 	db	59
   454  007D4A  0A                 	db	10
   455  007D4B  59                 	db	89
   456  007D4C  68                 	db	104
   457  007D4D  FF                 	db	255
   458  007D4E  CE                 	db	206
   459  007D4F  9D                 	db	157
   460  007D50  AC                 	db	172
   461  007D51                     __end_of_CRC8Table:
   462                           	opt stack 0
   463  007D51                     _dpowers:
   464                           	opt stack 0
   465  007D51  0001               	dw	1
   466  007D53  0000               	dw	0
   467  007D55  000A               	dw	10
   468  007D57  0000               	dw	0
   469  007D59  0064               	dw	100
   470  007D5B  0000               	dw	0
   471  007D5D  03E8               	dw	1000
   472  007D5F  0000               	dw	0
   473  007D61  2710               	dw	10000
   474  007D63  0000               	dw	0
   475  007D65  86A0               	dw	34464
   476  007D67  0001               	dw	1
   477  007D69  4240               	dw	16960
   478  007D6B  000F               	dw	15
   479  007D6D  9680               	dw	38528
   480  007D6F  0098               	dw	152
   481  007D71  E100               	dw	57600
   482  007D73  05F5               	dw	1525
   483  007D75  CA00               	dw	51712
   484  007D77  3B9A               	dw	15258
   485  007D79                     __end_of_dpowers:
   486                           	opt stack 0
   487  007D79                     __powers_:
   488                           	opt stack 0
   489  007D79  00                 	db	0
   490  007D7A  80                 	db	128
   491  007D7B  3F                 	db	63
   492  007D7C  00                 	db	0
   493  007D7D  20                 	db	32
   494  007D7E  41                 	db	65
   495  007D7F  00                 	db	0
   496  007D80  C8                 	db	200
   497  007D81  42                 	db	66
   498  007D82  00                 	db	0
   499  007D83  7A                 	db	122
   500  007D84  44                 	db	68
   501  007D85  40                 	db	64
   502  007D86  1C                 	db	28
   503  007D87  46                 	db	70
   504  007D88  50                 	db	80
   505  007D89  C3                 	db	195
   506  007D8A  47                 	db	71
   507  007D8B  24                 	db	36
   508  007D8C  74                 	db	116
   509  007D8D  49                 	db	73
   510  007D8E  97                 	db	151
   511  007D8F  18                 	db	24
   512  007D90  4B                 	db	75
   513  007D91  BC                 	db	188
   514  007D92  BE                 	db	190
   515  007D93  4C                 	db	76
   516  007D94  6B                 	db	107
   517  007D95  6E                 	db	110
   518  007D96  4E                 	db	78
   519  007D97  03                 	db	3
   520  007D98  15                 	db	21
   521  007D99  50                 	db	80
   522  007D9A  79                 	db	121
   523  007D9B  AD                 	db	173
   524  007D9C  60                 	db	96
   525  007D9D  F3                 	db	243
   526  007D9E  49                 	db	73
   527  007D9F  71                 	db	113
   528  007DA0                     __end_of__powers_:
   529                           	opt stack 0
   530  007DA0                     __npowers_:
   531                           	opt stack 0
   532  007DA0  00                 	db	0
   533  007DA1  80                 	db	128
   534  007DA2  3F                 	db	63
   535  007DA3  CD                 	db	205
   536  007DA4  CC                 	db	204
   537  007DA5  3D                 	db	61
   538  007DA6  D7                 	db	215
   539  007DA7  23                 	db	35
   540  007DA8  3C                 	db	60
   541  007DA9  12                 	db	18
   542  007DAA  83                 	db	131
   543  007DAB  3A                 	db	58
   544  007DAC  B7                 	db	183
   545  007DAD  D1                 	db	209
   546  007DAE  38                 	db	56
   547  007DAF  C6                 	db	198
   548  007DB0  27                 	db	39
   549  007DB1  37                 	db	55
   550  007DB2  38                 	db	56
   551  007DB3  86                 	db	134
   552  007DB4  35                 	db	53
   553  007DB5  C0                 	db	192
   554  007DB6  D6                 	db	214
   555  007DB7  33                 	db	51
   556  007DB8  CC                 	db	204
   557  007DB9  2B                 	db	43
   558  007DBA  32                 	db	50
   559  007DBB  70                 	db	112
   560  007DBC  89                 	db	137
   561  007DBD  30                 	db	48
   562  007DBE  E7                 	db	231
   563  007DBF  DB                 	db	219
   564  007DC0  2E                 	db	46
   565  007DC1  E5                 	db	229
   566  007DC2  3C                 	db	60
   567  007DC3  1E                 	db	30
   568  007DC4  42                 	db	66
   569  007DC5  A2                 	db	162
   570  007DC6  0D                 	db	13
   571  007DC7                     __end_of__npowers_:
   572                           	opt stack 0
   573  007DC7                     _hexpowers:
   574                           	opt stack 0
   575  007DC7  0001               	dw	1
   576  007DC9  0000               	dw	0
   577  007DCB  0010               	dw	16
   578  007DCD  0000               	dw	0
   579  007DCF  0100               	dw	256
   580  007DD1  0000               	dw	0
   581  007DD3  1000               	dw	4096
   582  007DD5  0000               	dw	0
   583  007DD7  0000               	dw	0
   584  007DD9  0001               	dw	1
   585  007DDB  0000               	dw	0
   586  007DDD  0010               	dw	16
   587  007DDF  0000               	dw	0
   588  007DE1  0100               	dw	256
   589  007DE3  0000               	dw	0
   590  007DE5  1000               	dw	4096
   591  007DE7                     __end_of_hexpowers:
   592                           	opt stack 0
   593  007DE7                     _USB_SD_Ptr:
   594                           	opt stack 0
   595  007DE7  E4                 	db	low _sd000
   596  007DE8  7E                 	db	high _sd000
   597  007DE9  66                 	db	low _sd001
   598  007DEA  7E                 	db	high _sd001
   599  007DEB  32                 	db	low _sd002
   600  007DEC  7E                 	db	high _sd002
   601  007DED                     __end_of_USB_SD_Ptr:
   602                           	opt stack 0
   603  007DED                     _USB_CD_Ptr:
   604                           	opt stack 0
   605  007DED  EF                 	db	low _configDescriptor1
   606  007DEE  7D                 	db	high _configDescriptor1
   607  007DEF                     __end_of_USB_CD_Ptr:
   608                           	opt stack 0
   609  007DEF                     _configDescriptor1:
   610                           	opt stack 0
   611  007DEF  09                 	db	9
   612  007DF0  02                 	db	2
   613  007DF1  43                 	db	67
   614  007DF2  00                 	db	0
   615  007DF3  02                 	db	2
   616  007DF4  01                 	db	1
   617  007DF5  00                 	db	0
   618  007DF6  C0                 	db	192
   619  007DF7  32                 	db	50
   620  007DF8  09                 	db	9
   621  007DF9  04                 	db	4
   622  007DFA  00                 	db	0
   623  007DFB  00                 	db	0
   624  007DFC  01                 	db	1
   625  007DFD  02                 	db	2
   626  007DFE  02                 	db	2
   627  007DFF  01                 	db	1
   628  007E00  00                 	db	0
   629  007E01  05                 	db	5
   630  007E02  24                 	db	36
   631  007E03  00                 	db	0
   632  007E04  10                 	db	16
   633  007E05  01                 	db	1
   634  007E06  04                 	db	4
   635  007E07  24                 	db	36
   636  007E08  02                 	db	2
   637  007E09  02                 	db	2
   638  007E0A  05                 	db	5
   639  007E0B  24                 	db	36
   640  007E0C  06                 	db	6
   641  007E0D  00                 	db	0
   642  007E0E  01                 	db	1
   643  007E0F  05                 	db	5
   644  007E10  24                 	db	36
   645  007E11  01                 	db	1
   646  007E12  00                 	db	0
   647  007E13  01                 	db	1
   648  007E14  07                 	db	7
   649  007E15  05                 	db	5
   650  007E16  81                 	db	129
   651  007E17  03                 	db	3
   652  007E18  08                 	db	8
   653  007E19  00                 	db	0
   654  007E1A  02                 	db	2
   655  007E1B  09                 	db	9
   656  007E1C  04                 	db	4
   657  007E1D  01                 	db	1
   658  007E1E  00                 	db	0
   659  007E1F  02                 	db	2
   660  007E20  0A                 	db	10
   661  007E21  00                 	db	0
   662  007E22  00                 	db	0
   663  007E23  00                 	db	0
   664  007E24  07                 	db	7
   665  007E25  05                 	db	5
   666  007E26  02                 	db	2
   667  007E27  02                 	db	2
   668  007E28  40                 	db	64
   669  007E29  00                 	db	0
   670  007E2A  00                 	db	0
   671  007E2B  07                 	db	7
   672  007E2C  05                 	db	5
   673  007E2D  82                 	db	130
   674  007E2E  02                 	db	2
   675  007E2F  40                 	db	64
   676  007E30  00                 	db	0
   677  007E31  00                 	db	0
   678  007E32                     __end_of_configDescriptor1:
   679                           	opt stack 0
   680  007E32                     _sd002:
   681                           	opt stack 0
   682  007E32  34                 	db	52
   683  007E33  03                 	db	3
   684  007E34  0043               	dw	67
   685  007E36  0044               	dw	68
   686  007E38  0043               	dw	67
   687  007E3A  0020               	dw	32
   688  007E3C  0052               	dw	82
   689  007E3E  0053               	dw	83
   690  007E40  002D               	dw	45
   691  007E42  0032               	dw	50
   692  007E44  0033               	dw	51
   693  007E46  0032               	dw	50
   694  007E48  0020               	dw	32
   695  007E4A  0045               	dw	69
   696  007E4C  006D               	dw	109
   697  007E4E  0075               	dw	117
   698  007E50  006C               	dw	108
   699  007E52  0061               	dw	97
   700  007E54  0074               	dw	116
   701  007E56  0069               	dw	105
   702  007E58  006F               	dw	111
   703  007E5A  006E               	dw	110
   704  007E5C  0020               	dw	32
   705  007E5E  0044               	dw	68
   706  007E60  0065               	dw	101
   707  007E62  006D               	dw	109
   708  007E64  006F               	dw	111
   709  007E66                     __end_of_sd002:
   710                           	opt stack 0
   711  007E66                     _sd001:
   712                           	opt stack 0
   713  007E66  34                 	db	52
   714  007E67  03                 	db	3
   715  007E68  004D               	dw	77
   716  007E6A  0069               	dw	105
   717  007E6C  0063               	dw	99
   718  007E6E  0072               	dw	114
   719  007E70  006F               	dw	111
   720  007E72  0063               	dw	99
   721  007E74  0068               	dw	104
   722  007E76  0069               	dw	105
   723  007E78  0070               	dw	112
   724  007E7A  0020               	dw	32
   725  007E7C  0054               	dw	84
   726  007E7E  0065               	dw	101
   727  007E80  0063               	dw	99
   728  007E82  0068               	dw	104
   729  007E84  006E               	dw	110
   730  007E86  006F               	dw	111
   731  007E88  006C               	dw	108
   732  007E8A  006F               	dw	111
   733  007E8C  0067               	dw	103
   734  007E8E  0079               	dw	121
   735  007E90  0020               	dw	32
   736  007E92  0049               	dw	73
   737  007E94  006E               	dw	110
   738  007E96  0063               	dw	99
   739  007E98  002E               	dw	46
   740  007E9A                     __end_of_sd001:
   741                           	opt stack 0
   742  007E9A                     _device_dsc:
   743                           	opt stack 0
   744  007E9A  12                 	db	18
   745  007E9B  01                 	db	1
   746  007E9C  0200               	dw	512
   747  007E9E  02                 	db	2
   748  007E9F  00                 	db	0
   749  007EA0  00                 	db	0
   750  007EA1  08                 	db	8
   751  007EA2  04D8               	dw	1240
   752  007EA4  000A               	dw	10
   753  007EA6  0100               	dw	256
   754  007EA8  01                 	db	1
   755  007EA9  02                 	db	2
   756  007EAA  00                 	db	0
   757  007EAB  01                 	db	1
   758  007EAC                     __end_of_device_dsc:
   759                           	opt stack 0
   760  007EAC                     _MAC_SET_CH_STATUS:
   761                           	opt stack 0
   762  007EAC  73                 	db	115
   763  007EAD  65                 	db	101
   764  007EAE  74                 	db	116
   765  007EAF  20                 	db	32
   766  007EB0  63                 	db	99
   767  007EB1  68                 	db	104
   768  007EB2  20                 	db	32
   769  007EB3  73                 	db	115
   770  007EB4  74                 	db	116
   771  007EB5  61                 	db	97
   772  007EB6  74                 	db	116
   773  007EB7  75                 	db	117
   774  007EB8  73                 	db	115
   775  007EB9  00                 	db	0
   776  007EBA                     __end_of_MAC_SET_CH_STATUS:
   777                           	opt stack 0
   778  007EBA                     _MAC_JOIN_OTAA:
   779                           	opt stack 0
   780  007EBA  6A                 	db	106
   781  007EBB  6F                 	db	111
   782  007EBC  69                 	db	105
   783  007EBD  6E                 	db	110
   784  007EBE  20                 	db	32
   785  007EBF  6F                 	db	111
   786  007EC0  74                 	db	116
   787  007EC1  61                 	db	97
   788  007EC2  61                 	db	97
   789  007EC3  00                 	db	0
   790  007EC4                     __end_of_MAC_JOIN_OTAA:
   791                           	opt stack 0
   792  007EC4                     _MAC_TX_UNCNF:
   793                           	opt stack 0
   794  007EC4  74                 	db	116
   795  007EC5  78                 	db	120
   796  007EC6  20                 	db	32
   797  007EC7  75                 	db	117
   798  007EC8  6E                 	db	110
   799  007EC9  63                 	db	99
   800  007ECA  6E                 	db	110
   801  007ECB  66                 	db	102
   802  007ECC  00                 	db	0
   803  007ECD                     __end_of_MAC_TX_UNCNF:
   804                           	opt stack 0
   805  007ECD                     _MAC_TX_CNF:
   806                           	opt stack 0
   807  007ECD  74                 	db	116
   808  007ECE  78                 	db	120
   809  007ECF  20                 	db	32
   810  007ED0  63                 	db	99
   811  007ED1  6E                 	db	110
   812  007ED2  66                 	db	102
   813  007ED3  00                 	db	0
   814  007ED4                     __end_of_MAC_TX_CNF:
   815                           	opt stack 0
   816  007ED4                     _SYS_RESET:
   817                           	opt stack 0
   818  007ED4  72                 	db	114
   819  007ED5  65                 	db	101
   820  007ED6  73                 	db	115
   821  007ED7  65                 	db	101
   822  007ED8  74                 	db	116
   823  007ED9  00                 	db	0
   824  007EDA                     __end_of_SYS_RESET:
   825                           	opt stack 0
   826  007EDA                     _SYS:
   827                           	opt stack 0
   828  007EDA  73                 	db	115
   829  007EDB  79                 	db	121
   830  007EDC  73                 	db	115
   831  007EDD  20                 	db	32
   832  007EDE  00                 	db	0
   833  007EDF                     __end_of_SYS:
   834                           	opt stack 0
   835  007EDF                     _MAC:
   836                           	opt stack 0
   837  007EDF  6D                 	db	109
   838  007EE0  61                 	db	97
   839  007EE1  63                 	db	99
   840  007EE2  20                 	db	32
   841  007EE3  00                 	db	0
   842  007EE4                     __end_of_MAC:
   843                           	opt stack 0
   844  007EE4                     _sd000:
   845                           	opt stack 0
   846  007EE4  04                 	db	4
   847  007EE5  03                 	db	3
   848  007EE6  0409               	dw	1033
   849  007EE8                     __end_of_sd000:
   850                           	opt stack 0
   851  007EE8                     _gs_encryption:
   852                           	opt stack 0
   853  007EE8  45                 	db	69
   854  007EE9  45                 	db	69
   855  007EEA                     __end_of_gs_encryption:
   856                           	opt stack 0
   857  007EEA                     _set_link_key:
   858                           	opt stack 0
   859  007EEA  4B                 	db	75
   860  007EEB  59                 	db	89
   861  007EEC                     __end_of_set_link_key:
   862                           	opt stack 0
   863  007EEC                     _write_values:
   864                           	opt stack 0
   865  007EEC  57                 	db	87
   866  007EED  52                 	db	82
   867  007EEE                     __end_of_write_values:
   868                           	opt stack 0
   869  007EEE                     _gs_channel:
   870                           	opt stack 0
   871  007EEE  43                 	db	67
   872  007EEF  48                 	db	72
   873  007EF0                     __end_of_gs_channel:
   874                           	opt stack 0
   875  007EF0                     _gs_pan:
   876                           	opt stack 0
   877  007EF0  49                 	db	73
   878  007EF1  44                 	db	68
   879  007EF2                     __end_of_gs_pan:
   880                           	opt stack 0
   881  007EF2                     _get_own_mac_high:
   882                           	opt stack 0
   883  007EF2  53                 	db	83
   884  007EF3  48                 	db	72
   885  007EF4                     __end_of_get_own_mac_high:
   886                           	opt stack 0
   887  007EF4                     _get_own_mac_low:
   888                           	opt stack 0
   889  007EF4  53                 	db	83
   890  007EF5  4C                 	db	76
   891  007EF6                     __end_of_get_own_mac_low:
   892                           	opt stack 0
   893  0000                     _EECON2	set	4007
   894  0000                     _EECON1bits	set	4006
   895  0000                     _EEDATA	set	4008
   896  0000                     _EEADR	set	4009
   897  0000                     _ADRESL	set	4035
   898  0000                     _ADRESH	set	4036
   899  0000                     _ADCON2	set	4032
   900  0000                     _ADCON0	set	4034
   901  0000                     _ADCON1	set	4033
   902  0000                     _IPR1bits	set	3999
   903  0000                     _CCP1CON	set	4029
   904  0000                     _CCPR1L	set	4030
   905  0000                     _CCPR1H	set	4031
   906  0000                     _TMR1L	set	4046
   907  0000                     _TMR1H	set	4047
   908  0000                     _T3CON	set	4017
   909  0000                     _T0CON	set	4053
   910  0000                     _T1CON	set	4045
   911  0000                     _RCREG	set	4014
   912  0000                     _RCSTA	set	4011
   913  0000                     _TXREG	set	4013
   914  0000                     _RCSTAbits	set	4011
   915  0000                     _SPBRGH	set	4016
   916  0000                     _SPBRG	set	4015
   917  0000                     _BAUDCONbits	set	4024
   918  0000                     _TXSTAbits	set	4012
   919  0000                     _TRISCbits	set	3988
   920  0000                     _PORTEbits	set	3972
   921  0000                     _TRISAbits	set	3986
   922  0000                     _TRISDbits	set	3989
   923  0000                     _TRISEbits	set	3990
   924  0000                     _UEP0bits	set	3952
   925  0000                     _INTCONbits	set	4082
   926  0000                     _IPR2bits	set	4002
   927  0000                     _RCONbits	set	4048
   928  0000                     _PORTCbits	set	3970
   929  0000                     _UCON	set	3949
   930  0000                     _USTAT	set	3948
   931  0000                     _PIR2bits	set	4001
   932  0000                     _UIEbits	set	3945
   933  0000                     _UIRbits	set	3944
   934  0000                     _UADDR	set	3950
   935  0000                     _UCONbits	set	3949
   936  0000                     _UIE	set	3945
   937  0000                     _UEIE	set	3947
   938  0000                     _UCFG	set	3951
   939  0000                     _UIR	set	3944
   940  0000                     _UEIR	set	3946
   941  0000                     _PIE2bits	set	4000
   942  0000                     _PORTDbits	set	3971
   943  0000                     _UEP1	set	3953
   944  0000                     _UEP0	set	3952
   945  0000                     _GO_DONE	set	32273
   946  0000                     _ADIE	set	31982
   947  0000                     _ADIF	set	31990
   948  0000                     _ADON	set	32272
   949  0000                     _TMR0IE	set	32661
   950  0000                     _GIEH	set	32663
   951  0000                     _TMR1IE	set	31976
   952  0000                     _TXIF	set	31988
   953  0000                     _USBIE	set	32005
   954  0000                     _RCIF	set	31989
   955  0000                     _RCIE	set	31981
   956  0000                     _CCP1IE	set	31978
   957  0000                     _CCP1IF	set	31986
   958  007EF6                     STR_10:
   959                           
   960                           ; BSR set to: 2
   961  007EF6  66                 	db	102	;'f'
   962  007EF7  72                 	db	114	;'r'
   963  007EF8  61                 	db	97	;'a'
   964  007EF9  6D                 	db	109	;'m'
   965  007EFA  65                 	db	101	;'e'
   966  007EFB  5F                 	db	95	;'_'
   967  007EFC  63                 	db	99	;'c'
   968  007EFD  6F                 	db	111	;'o'
   969  007EFE  75                 	db	117	;'u'
   970  007EFF  6E                 	db	110	;'n'
   971  007F00  74                 	db	116	;'t'
   972  007F01  65                 	db	101	;'e'
   973  007F02  72                 	db	114	;'r'
   974  007F03  5F                 	db	95	;'_'
   975  007F04  65                 	db	101	;'e'
   976  007F05  72                 	db	114	;'r'
   977  007F06  72                 	db	114	;'r'
   978  007F07  5F                 	db	95	;'_'
   979  007F08  72                 	db	114	;'r'
   980  007F09  65                 	db	101	;'e'
   981  007F0A  6A                 	db	106	;'j'
   982  007F0B  6F                 	db	111	;'o'
   983  007F0C  69                 	db	105	;'i'
   984  007F0D  6E                 	db	110	;'n'
   985  007F0E  5F                 	db	95	;'_'
   986  007F0F  6E                 	db	110	;'n'
   987  007F10  65                 	db	101	;'e'
   988  007F11  65                 	db	101	;'e'
   989  007F12  64                 	db	100	;'d'
   990  007F13  65                 	db	101	;'e'
   991  007F14  64                 	db	100	;'d'
   992  007F15  00                 	db	0
   993  007F16                     STR_26:
   994                           
   995                           ; BSR set to: 2
   996  007F16  30                 	db	48	;'0'
   997  007F17  31                 	db	49	;'1'
   998  007F18  32                 	db	50	;'2'
   999  007F19  33                 	db	51	;'3'
  1000  007F1A  34                 	db	52	;'4'
  1001  007F1B  35                 	db	53	;'5'
  1002  007F1C  36                 	db	54	;'6'
  1003  007F1D  37                 	db	55	;'7'
  1004  007F1E  38                 	db	56	;'8'
  1005  007F1F  39                 	db	57	;'9'
  1006  007F20  41                 	db	65	;'A'
  1007  007F21  42                 	db	66	;'B'
  1008  007F22  43                 	db	67	;'C'
  1009  007F23  44                 	db	68	;'D'
  1010  007F24  45                 	db	69	;'E'
  1011  007F25  46                 	db	70	;'F'
  1012  007F26  00                 	db	0
  1013  007F27                     STR_13:
  1014                           
  1015                           ; BSR set to: 2
  1016  007F27  69                 	db	105	;'i'
  1017  007F28  6E                 	db	110	;'n'
  1018  007F29  76                 	db	118	;'v'
  1019  007F2A  61                 	db	97	;'a'
  1020  007F2B  6C                 	db	108	;'l'
  1021  007F2C  69                 	db	105	;'i'
  1022  007F2D  64                 	db	100	;'d'
  1023  007F2E  5F                 	db	95	;'_'
  1024  007F2F  64                 	db	100	;'d'
  1025  007F30  61                 	db	97	;'a'
  1026  007F31  74                 	db	116	;'t'
  1027  007F32  61                 	db	97	;'a'
  1028  007F33  5F                 	db	95	;'_'
  1029  007F34  6C                 	db	108	;'l'
  1030  007F35  65                 	db	101	;'e'
  1031  007F36  6E                 	db	110	;'n'
  1032  007F37  00                 	db	0
  1033  007F38                     
  1034                           ; BSR set to: 2
  1035  007F38  3C                 	db	60	;'<'
  1036  007F39  3D                 	db	61	;'='
  1037  007F3A  3E                 	db	62	;'>'
  1038  007F3B  80                 	db	-128
  1039  007F3C  4E                 	db	78	;'N'
  1040  007F3D  23                 	db	35
  1041  007F3E  25                 	db	37
  1042  007F3F  6C                 	db	108	;'l'
  1043  007F40  64                 	db	100	;'d'
  1044  007F41  23                 	db	35
  1045  007F42  25                 	db	37
  1046  007F43  73                 	db	115	;'s'
  1047  007F44  23                 	db	35
  1048  007F45  25                 	db	37
  1049  007F46  64                 	db	100	;'d'
  1050  007F47  23                 	db	35
  1051  007F48  00                 	db	0
  1052  007F49                     STR_19:
  1053                           
  1054                           ; BSR set to: 2
  1055  007F49  61                 	db	97	;'a'
  1056  007F4A  63                 	db	99	;'c'
  1057  007F4B  63                 	db	99	;'c'
  1058  007F4C  65                 	db	101	;'e'
  1059  007F4D  70                 	db	112	;'p'
  1060  007F4E  74                 	db	116	;'t'
  1061  007F4F  65                 	db	101	;'e'
  1062  007F50  64                 	db	100	;'d'
  1063  007F51  52                 	db	82	;'R'
  1064  007F52  4E                 	db	78	;'N'
  1065  007F53  32                 	db	50	;'2'
  1066  007F54  39                 	db	57	;'9'
  1067  007F55  30                 	db	48	;'0'
  1068  007F56  33                 	db	51	;'3'
  1069  007F57  20                 	db	32
  1070  007F58  00                 	db	0
  1071  007F59                     STR_6:
  1072                           
  1073                           ; BSR set to: 2
  1074  007F59  69                 	db	105	;'i'
  1075  007F5A  6E                 	db	110	;'n'
  1076  007F5B  76                 	db	118	;'v'
  1077  007F5C  61                 	db	97	;'a'
  1078  007F5D  6C                 	db	108	;'l'
  1079  007F5E  69                 	db	105	;'i'
  1080  007F5F  64                 	db	100	;'d'
  1081  007F60  5F                 	db	95	;'_'
  1082  007F61  70                 	db	112	;'p'
  1083  007F62  61                 	db	97	;'a'
  1084  007F63  72                 	db	114	;'r'
  1085  007F64  61                 	db	97	;'a'
  1086  007F65  6D                 	db	109	;'m'
  1087  007F66  00                 	db	0
  1088  007F67                     STR_17:
  1089                           
  1090                           ; BSR set to: 2
  1091  007F67  6B                 	db	107	;'k'
  1092  007F68  65                 	db	101	;'e'
  1093  007F69  79                 	db	121	;'y'
  1094  007F6A  73                 	db	115	;'s'
  1095  007F6B  5F                 	db	95	;'_'
  1096  007F6C  6E                 	db	110	;'n'
  1097  007F6D  6F                 	db	111	;'o'
  1098  007F6E  74                 	db	116	;'t'
  1099  007F6F  5F                 	db	95	;'_'
  1100  007F70  69                 	db	105	;'i'
  1101  007F71  6E                 	db	110	;'n'
  1102  007F72  69                 	db	105	;'i'
  1103  007F73  74                 	db	116	;'t'
  1104  007F74  00                 	db	0
  1105  007F75                     STR_7:
  1106                           
  1107                           ; BSR set to: 2
  1108  007F75  6E                 	db	110	;'n'
  1109  007F76  6F                 	db	111	;'o'
  1110  007F77  74                 	db	116	;'t'
  1111  007F78  5F                 	db	95	;'_'
  1112  007F79  6A                 	db	106	;'j'
  1113  007F7A  6F                 	db	111	;'o'
  1114  007F7B  69                 	db	105	;'i'
  1115  007F7C  6E                 	db	110	;'n'
  1116  007F7D  65                 	db	101	;'e'
  1117  007F7E  64                 	db	100	;'d'
  1118  007F7F  00                 	db	0
  1119  007F80                     STR_12:
  1120                           
  1121                           ; BSR set to: 2
  1122  007F80  6D                 	db	109	;'m'
  1123  007F81  61                 	db	97	;'a'
  1124  007F82  63                 	db	99	;'c'
  1125  007F83  5F                 	db	95	;'_'
  1126  007F84  70                 	db	112	;'p'
  1127  007F85  61                 	db	97	;'a'
  1128  007F86  75                 	db	117	;'u'
  1129  007F87  73                 	db	115	;'s'
  1130  007F88  65                 	db	101	;'e'
  1131  007F89  64                 	db	100	;'d'
  1132  007F8A  00                 	db	0
  1133  007F8B                     STR_8:
  1134                           
  1135                           ; BSR set to: 2
  1136  007F8B  6E                 	db	110	;'n'
  1137  007F8C  6F                 	db	111	;'o'
  1138  007F8D  5F                 	db	95	;'_'
  1139  007F8E  66                 	db	102	;'f'
  1140  007F8F  72                 	db	114	;'r'
  1141  007F90  65                 	db	101	;'e'
  1142  007F91  65                 	db	101	;'e'
  1143  007F92  5F                 	db	95	;'_'
  1144  007F93  63                 	db	99	;'c'
  1145  007F94  68                 	db	104	;'h'
  1146  007F95  00                 	db	0
  1147  007F96                     
  1148                           ; BSR set to: 2
  1149  007F96  25                 	db	37
  1150  007F97  73                 	db	115	;'s'
  1151  007F98  20                 	db	32
  1152  007F99  25                 	db	37
  1153  007F9A  64                 	db	100	;'d'
  1154  007F9B  20                 	db	32
  1155  007F9C  6F                 	db	111	;'o'
  1156  007F9D  66                 	db	102	;'f'
  1157  007F9E  66                 	db	102	;'f'
  1158  007F9F  00                 	db	0
  1159  007FA0                     STR_14:
  1160                           
  1161                           ; BSR set to: 2
  1162  007FA0  6D                 	db	109	;'m'
  1163  007FA1  61                 	db	97	;'a'
  1164  007FA2  63                 	db	99	;'c'
  1165  007FA3  5F                 	db	95	;'_'
  1166  007FA4  74                 	db	116	;'t'
  1167  007FA5  78                 	db	120	;'x'
  1168  007FA6  5F                 	db	95	;'_'
  1169  007FA7  6F                 	db	111	;'o'
  1170  007FA8  6B                 	db	107	;'k'
  1171  007FA9  00                 	db	0
  1172  007FAA                     
  1173                           ; BSR set to: 2
  1174  007FAA  25                 	db	37
  1175  007FAB  73                 	db	115	;'s'
  1176  007FAC  20                 	db	32
  1177  007FAD  25                 	db	37
  1178  007FAE  64                 	db	100	;'d'
  1179  007FAF  20                 	db	32
  1180  007FB0  6F                 	db	111	;'o'
  1181  007FB1  6E                 	db	110	;'n'
  1182  007FB2  00                 	db	0
  1183  007FB3                     STR_15:
  1184                           
  1185                           ; BSR set to: 2
  1186  007FB3  6D                 	db	109	;'m'
  1187  007FB4  61                 	db	97	;'a'
  1188  007FB5  63                 	db	99	;'c'
  1189  007FB6  5F                 	db	95	;'_'
  1190  007FB7  72                 	db	114	;'r'
  1191  007FB8  78                 	db	120	;'x'
  1192  007FB9  20                 	db	32
  1193  007FBA  00                 	db	0
  1194  007FBB                     STR_16:
  1195                           
  1196                           ; BSR set to: 2
  1197  007FBB  6D                 	db	109	;'m'
  1198  007FBC  61                 	db	97	;'a'
  1199  007FBD  63                 	db	99	;'c'
  1200  007FBE  5F                 	db	95	;'_'
  1201  007FBF  65                 	db	101	;'e'
  1202  007FC0  72                 	db	114	;'r'
  1203  007FC1  72                 	db	114	;'r'
  1204  007FC2  00                 	db	0
  1205  007FC3                     
  1206                           ; BSR set to: 2
  1207  007FC3  25                 	db	37
  1208  007FC4  73                 	db	115	;'s'
  1209  007FC5  3A                 	db	58	;':'
  1210  007FC6  25                 	db	37
  1211  007FC7  6C                 	db	108	;'l'
  1212  007FC8  75                 	db	117	;'u'
  1213  007FC9  23                 	db	35
  1214  007FCA  00                 	db	0
  1215  007FCB                     STR_25:
  1216                           
  1217                           ; BSR set to: 2
  1218  007FCB  28                 	db	40
  1219  007FCC  6E                 	db	110	;'n'
  1220  007FCD  75                 	db	117	;'u'
  1221  007FCE  6C                 	db	108	;'l'
  1222  007FCF  6C                 	db	108	;'l'
  1223  007FD0  29                 	db	41
  1224  007FD1  00                 	db	0
  1225  007FD2                     STR_22:
  1226                           
  1227                           ; BSR set to: 2
  1228  007FD2  25                 	db	37
  1229  007FD3  73                 	db	115	;'s'
  1230  007FD4  20                 	db	32
  1231  007FD5  25                 	db	37
  1232  007FD6  64                 	db	100	;'d'
  1233  007FD7  20                 	db	32
  1234  007FD8  00                 	db	0
  1235  007FD9                     STR_18:
  1236                           
  1237                           ; BSR set to: 2
  1238  007FD9  64                 	db	100	;'d'
  1239  007FDA  65                 	db	101	;'e'
  1240  007FDB  6E                 	db	110	;'n'
  1241  007FDC  69                 	db	105	;'i'
  1242  007FDD  65                 	db	101	;'e'
  1243  007FDE  64                 	db	100	;'d'
  1244  007FDF  00                 	db	0
  1245  007FE0                     STR_9:
  1246                           
  1247                           ; BSR set to: 2
  1248  007FE0  73                 	db	115	;'s'
  1249  007FE1  69                 	db	105	;'i'
  1250  007FE2  6C                 	db	108	;'l'
  1251  007FE3  65                 	db	101	;'e'
  1252  007FE4  6E                 	db	110	;'n'
  1253  007FE5  74                 	db	116	;'t'
  1254  007FE6  00                 	db	0
  1255  007FE7                     
  1256                           ; BSR set to: 2
  1257  007FE7  25                 	db	37
  1258  007FE8  73                 	db	115	;'s'
  1259  007FE9  3A                 	db	58	;':'
  1260  007FEA  25                 	db	37
  1261  007FEB  66                 	db	102	;'f'
  1262  007FEC  23                 	db	35
  1263  007FED  00                 	db	0
  1264  007FEE                     
  1265                           ; BSR set to: 2
  1266  007FEE  25                 	db	37
  1267  007FEF  73                 	db	115	;'s'
  1268  007FF0  3A                 	db	58	;':'
  1269  007FF1  25                 	db	37
  1270  007FF2  73                 	db	115	;'s'
  1271  007FF3  23                 	db	35
  1272  007FF4  00                 	db	0
  1273  007FF5                     STR_24:
  1274                           
  1275                           ; BSR set to: 2
  1276  007FF5  25                 	db	37
  1277  007FF6  30                 	db	48	;'0'
  1278  007FF7  32                 	db	50	;'2'
  1279  007FF8  58                 	db	88	;'X'
  1280  007FF9  00                 	db	0
  1281  007FFA                     STR_11:
  1282                           
  1283                           ; BSR set to: 2
  1284  007FFA  62                 	db	98	;'b'
  1285  007FFB  75                 	db	117	;'u'
  1286  007FFC  73                 	db	115	;'s'
  1287  007FFD  79                 	db	121	;'y'
  1288  007FFE  00                 	db	0
  1289  0000                     
  1290                           ; #config settings
  1291  007FFF  00                 	db	0	; dummy byte at the end
  1292  0000                     
  1293                           	psect	cinit
  1294  003E8A                     __pcinit:
  1295                           	opt stack 0
  1296  003E8A                     start_initialization:
  1297                           	opt stack 0
  1298  003E8A                     __initialization:
  1299                           	opt stack 0
  1300                           
  1301                           ; Initialize objects allocated to BANK2 (35 bytes)
  1302                           ; load TBLPTR registers with __pidataBANK2
  1303  003E8A  0E42               	movlw	low __pidataBANK2
  1304  003E8C  6EF6               	movwf	tblptrl,c
  1305  003E8E  0E49               	movlw	high __pidataBANK2
  1306  003E90  6EF7               	movwf	tblptrh,c
  1307  003E92  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1308  003E94  6EF8               	movwf	tblptru,c
  1309  003E96  EE02  F0DB         	lfsr	0,__pdataBANK2
  1310  003E9A  EE10 F023          	lfsr	1,35
  1311  003E9E                     copy_data0:
  1312  003E9E  0009               	tblrd		*+
  1313  003EA0  CFF5 FFEE          	movff	tablat,postinc0
  1314  003EA4  50E5               	movf	postdec1,w,c
  1315  003EA6  50E1               	movf	fsr1l,w,c
  1316  003EA8  E1FA               	bnz	copy_data0
  1317                           
  1318                           ; Clear objects allocated to BANK7 (150 bytes)
  1319  003EAA  EE07  F000         	lfsr	0,__pbssBANK7
  1320  003EAE  0E96               	movlw	150
  1321  003EB0                     clear_0:
  1322  003EB0  6AEE               	clrf	postinc0,c
  1323  003EB2  06E8               	decf	wreg,f,c
  1324  003EB4  E1FD               	bnz	clear_0
  1325                           
  1326                           ; Clear objects allocated to BANK6 (200 bytes)
  1327  003EB6  EE06  F000         	lfsr	0,__pbssBANK6
  1328  003EBA  0EC8               	movlw	200
  1329  003EBC                     clear_1:
  1330  003EBC  6AEE               	clrf	postinc0,c
  1331  003EBE  06E8               	decf	wreg,f,c
  1332  003EC0  E1FD               	bnz	clear_1
  1333                           
  1334                           ; Clear objects allocated to BANK3 (220 bytes)
  1335  003EC2  EE03  F000         	lfsr	0,__pbssBANK3
  1336  003EC6  0EDC               	movlw	220
  1337  003EC8                     clear_2:
  1338  003EC8  6AEE               	clrf	postinc0,c
  1339  003ECA  06E8               	decf	wreg,f,c
  1340  003ECC  E1FD               	bnz	clear_2
  1341                           
  1342                           ; Clear objects allocated to BANK2 (219 bytes)
  1343  003ECE  EE02  F000         	lfsr	0,__pbssBANK2
  1344  003ED2  0EDB               	movlw	219
  1345  003ED4                     clear_3:
  1346  003ED4  6AEE               	clrf	postinc0,c
  1347  003ED6  06E8               	decf	wreg,f,c
  1348  003ED8  E1FD               	bnz	clear_3
  1349                           
  1350                           ; Clear objects allocated to BANK1 (18 bytes)
  1351  003EDA  EE01  F0EE         	lfsr	0,__pbssBANK1
  1352  003EDE  0E12               	movlw	18
  1353  003EE0                     clear_4:
  1354  003EE0  6AEE               	clrf	postinc0,c
  1355  003EE2  06E8               	decf	wreg,f,c
  1356  003EE4  E1FD               	bnz	clear_4
  1357                           
  1358                           ; Clear objects allocated to BANK4 (100 bytes)
  1359  003EE6  EE04  F040         	lfsr	0,__pbssBANK4
  1360  003EEA  0E64               	movlw	100
  1361  003EEC                     clear_5:
  1362  003EEC  6AEE               	clrf	postinc0,c
  1363  003EEE  06E8               	decf	wreg,f,c
  1364  003EF0  E1FD               	bnz	clear_5
  1365                           
  1366                           ; Clear objects allocated to COMRAM (44 bytes)
  1367  003EF2  EE00  F033         	lfsr	0,__pbssCOMRAM
  1368  003EF6  0E2C               	movlw	44
  1369  003EF8                     clear_6:
  1370  003EF8  6AEE               	clrf	postinc0,c
  1371  003EFA  06E8               	decf	wreg,f,c
  1372  003EFC  E1FD               	bnz	clear_6
  1373  003EFE                     end_of_initialization:
  1374                           	opt stack 0
  1375  003EFE                     __end_of__initialization:
  1376                           	opt stack 0
  1377  003EFE  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1378  003F00  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1379  003F02  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1380  003F04  6EF8               	movwf	tblptru,c
  1381  003F06  0100               	movlb	0
  1382  003F08  EFAC  F00B         	goto	_main	;jump to C main() function
  1383                           tblptru	equ	0xFF8
  1384                           tblptrh	equ	0xFF7
  1385                           tblptrl	equ	0xFF6
  1386                           tablat	equ	0xFF5
  1387                           postinc0	equ	0xFEE
  1388                           wreg	equ	0xFE8
  1389                           postdec1	equ	0xFE5
  1390                           fsr1l	equ	0xFE1
  1391                           
  1392                           	psect	bssCOMRAM
  1393  000033                     __pbssCOMRAM:
  1394                           	opt stack 0
  1395  000033                     _outPipes:
  1396                           	opt stack 0
  1397  000033                     	ds	8
  1398  00003B                     _inPipes:
  1399                           	opt stack 0
  1400  00003B                     	ds	6
  1401  000041                     _pBDTEntryIn:
  1402                           	opt stack 0
  1403  000041                     	ds	6
  1404  000047                     _freqPulses:
  1405                           	opt stack 0
  1406  000047                     	ds	4
  1407  00004B                     recebeByte@sizeData:
  1408                           	opt stack 0
  1409  00004B                     	ds	2
  1410  00004D                     _pBDTEntryEP0OutNext:
  1411                           	opt stack 0
  1412  00004D                     	ds	2
  1413  00004F                     _pBDTEntryEP0OutCurrent:
  1414                           	opt stack 0
  1415  00004F                     	ds	2
  1416  000051                     _cdc_tx_len:
  1417                           	opt stack 0
  1418  000051                     	ds	1
  1419  000052                     _cdc_rx_len:
  1420                           	opt stack 0
  1421  000052                     	ds	1
  1422  000053                     _USBDeferStatusStagePacket:
  1423                           	opt stack 0
  1424  000053                     	ds	1
  1425  000054                     _USBStatusStageTimeoutCounter:
  1426                           	opt stack 0
  1427  000054                     	ds	1
  1428  000055                     _endpoint_number:
  1429                           	opt stack 0
  1430  000055                     	ds	1
  1431  000056                     _controlTransferState:
  1432                           	opt stack 0
  1433  000056                     	ds	1
  1434  000057                     _shortPacketStatus:
  1435                           	opt stack 0
  1436  000057                     	ds	1
  1437  000058                     _USBDeviceState:
  1438                           	opt stack 0
  1439  000058                     	ds	1
  1440  000059                     _horimetroLigado:
  1441                           	opt stack 0
  1442  000059                     	ds	1
  1443  00005A                     _novaMsgLoRaWan:
  1444                           	opt stack 0
  1445  00005A                     	ds	1
  1446  00005B                     _tamFrame:
  1447                           	opt stack 0
  1448  00005B                     	ds	1
  1449  00005C                     _tamDadosRecebidos:
  1450                           	opt stack 0
  1451  00005C                     	ds	1
  1452  00005D                     _USTATcopy:
  1453                           	opt stack 0
  1454  00005D                     	ds	1
  1455  00005E                     _USBActiveConfiguration:
  1456                           	opt stack 0
  1457  00005E                     	ds	1
  1458                           tblptru	equ	0xFF8
  1459                           tblptrh	equ	0xFF7
  1460                           tblptrl	equ	0xFF6
  1461                           tablat	equ	0xFF5
  1462                           postinc0	equ	0xFEE
  1463                           wreg	equ	0xFE8
  1464                           postdec1	equ	0xFE5
  1465                           fsr1l	equ	0xFE1
  1466                           
  1467                           	psect	bssBANK1
  1468  0001EE                     __pbssBANK1:
  1469                           	opt stack 0
  1470  0001EE                     _tamanhoCommand:
  1471                           	opt stack 0
  1472  0001EE                     	ds	2
  1473  0001F0                     recebeByte@tamanhoMensagem:
  1474                           	opt stack 0
  1475  0001F0                     	ds	2
  1476  0001F2                     _CDCDataOutHandle:
  1477                           	opt stack 0
  1478  0001F2                     	ds	2
  1479  0001F4                     recebeByte@escapeCaracter:
  1480                           	opt stack 0
  1481  0001F4                     	ds	1
  1482  0001F5                     _cdc_trf_state:
  1483                           	opt stack 0
  1484  0001F5                     	ds	1
  1485  0001F6                     _USBTicksSinceSuspendEnd:
  1486                           	opt stack 0
  1487  0001F6                     	ds	1
  1488  0001F7                     _USBDeferOUTDataStagePackets:
  1489                           	opt stack 0
  1490  0001F7                     	ds	1
  1491  0001F8                     _USBDeferINDataStagePackets:
  1492                           	opt stack 0
  1493  0001F8                     	ds	1
  1494  0001F9                     _USBStatusStageEnabledFlag2:
  1495                           	opt stack 0
  1496  0001F9                     	ds	1
  1497  0001FA                     _USBStatusStageEnabledFlag1:
  1498                           	opt stack 0
  1499  0001FA                     	ds	1
  1500  0001FB                     _BothEP0OutUOWNsSet:
  1501                           	opt stack 0
  1502  0001FB                     	ds	1
  1503  0001FC                     _USBBusIsSuspended:
  1504                           	opt stack 0
  1505  0001FC                     	ds	1
  1506  0001FD                     _RemoteWakeup:
  1507                           	opt stack 0
  1508  0001FD                     	ds	1
  1509  0001FE                     _responseLoRaWan:
  1510                           	opt stack 0
  1511  0001FE                     	ds	1
  1512  0001FF                     _error_TX:
  1513                           	opt stack 0
  1514  0001FF                     	ds	1
  1515                           tblptru	equ	0xFF8
  1516                           tblptrh	equ	0xFF7
  1517                           tblptrl	equ	0xFF6
  1518                           tablat	equ	0xFF5
  1519                           postinc0	equ	0xFEE
  1520                           wreg	equ	0xFE8
  1521                           postdec1	equ	0xFE5
  1522                           fsr1l	equ	0xFE1
  1523                           
  1524                           	psect	bssBANK2
  1525  000200                     __pbssBANK2:
  1526                           	opt stack 0
  1527  000200                     _cdc_notice:
  1528                           	opt stack 0
  1529  000200                     	ds	10
  1530  00020A                     _pBDTEntryOut:
  1531                           	opt stack 0
  1532  00020A                     	ds	6
  1533  000210                     gravaDadosEeprom@horimetroAnterior:
  1534                           	opt stack 0
  1535  000210                     	ds	4
  1536  000214                     _BaudRateGen:
  1537                           	opt stack 0
  1538  000214                     	ds	4
  1539  000218                     _USB1msTickCount:
  1540                           	opt stack 0
  1541  000218                     	ds	4
  1542  00021C                     _freqPulsesAnterior:
  1543                           	opt stack 0
  1544  00021C                     	ds	4
  1545  000220                     _tempoHorimetro:
  1546                           	opt stack 0
  1547  000220                     	ds	4
  1548  000224                     _ticks:
  1549                           	opt stack 0
  1550  000224                     	ds	4
  1551  000228                     _horimetroMedido:
  1552                           	opt stack 0
  1553  000228                     	ds	4
  1554  00022C                     _vazaoAcumuladaMedido:
  1555                           	opt stack 0
  1556  00022C                     	ds	4
  1557  000230                     _sourceMacHigh:
  1558                           	opt stack 0
  1559  000230                     	ds	4
  1560  000234                     _sourceMacLow:
  1561                           	opt stack 0
  1562  000234                     	ds	4
  1563  000238                     _pCDCDst:
  1564                           	opt stack 0
  1565  000238                     	ds	3
  1566  00023B                     _pCDCSrc:
  1567                           	opt stack 0
  1568  00023B                     	ds	3
  1569  00023E                     _ep_data_out:
  1570                           	opt stack 0
  1571  00023E                     	ds	3
  1572  000241                     _ep_data_in:
  1573                           	opt stack 0
  1574  000241                     	ds	3
  1575  000244                     _CDCDataInHandle:
  1576                           	opt stack 0
  1577  000244                     	ds	2
  1578  000246                     _pDst:
  1579                           	opt stack 0
  1580  000246                     	ds	2
  1581  000248                     _vazaoInstantanea:
  1582                           	opt stack 0
  1583  000248                     	ds	2
  1584  00024A                     _tempoVazaoInstantanea:
  1585                           	opt stack 0
  1586  00024A                     	ds	2
  1587  00024C                     _tempoRegistroHorimetro:
  1588                           	opt stack 0
  1589  00024C                     	ds	2
  1590  00024E                     _tempoSemVazao:
  1591                           	opt stack 0
  1592  00024E                     	ds	2
  1593  000250                     _vazaoInstantaneaMedido:
  1594                           	opt stack 0
  1595  000250                     	ds	2
  1596  000252                     _dig_1:
  1597                           	opt stack 0
  1598  000252                     	ds	2
  1599  000254                     _PAN_ID:
  1600                           	opt stack 0
  1601  000254                     	ds	2
  1602  000256                     gravaDadosEeprom@bombaLigadaAnterior:
  1603                           	opt stack 0
  1604  000256                     	ds	1
  1605  000257                     _cs:
  1606                           	opt stack 0
  1607  000257                     	ds	1
  1608  000258                     recebeByte@checksumRecebimento:
  1609                           	opt stack 0
  1610  000258                     	ds	1
  1611  000259                     recebeByte@estadoRecepcao:
  1612                           	opt stack 0
  1613  000259                     	ds	1
  1614  00025A                     _control_signal_bitmap:
  1615                           	opt stack 0
  1616  00025A                     	ds	1
  1617  00025B                     _cdc_mem_type:
  1618                           	opt stack 0
  1619  00025B                     	ds	1
  1620  00025C                     _horimetroLigadoMedido:
  1621                           	opt stack 0
  1622  00025C                     	ds	1
  1623  00025D                     _numPacote:
  1624                           	opt stack 0
  1625  00025D                     	ds	1
  1626  00025E                     _encryptMode:
  1627                           	opt stack 0
  1628  00025E                     	ds	1
  1629  00025F                     _retries_sending:
  1630                           	opt stack 0
  1631  00025F                     	ds	1
  1632  000260                     _discovery_status:
  1633                           	opt stack 0
  1634  000260                     	ds	1
  1635  000261                     _delivery_status:
  1636                           	opt stack 0
  1637  000261                     	ds	1
  1638  000262                     _channel:
  1639                           	opt stack 0
  1640  000262                     	ds	1
  1641  000263                     _error_RX:
  1642                           	opt stack 0
  1643  000263                     	ds	1
  1644  000264                     _protocol:
  1645                           	opt stack 0
  1646  000264                     	ds	1
  1647  000265                     _error_AT:
  1648                           	opt stack 0
  1649  000265                     	ds	1
  1650  000266                     _response:
  1651                           	opt stack 0
  1652  000266                     	ds	100
  1653  0002CA                     _dummy_encapsulated_cmd_response:
  1654                           	opt stack 0
  1655  0002CA                     	ds	8
  1656  0002D2                     _line_coding:
  1657                           	opt stack 0
  1658  0002D2                     	ds	7
  1659  0002D9                     _USBAlternateInterface:
  1660                           	opt stack 0
  1661  0002D9                     	ds	2
  1662                           tblptru	equ	0xFF8
  1663                           tblptrh	equ	0xFF7
  1664                           tblptrl	equ	0xFF6
  1665                           tablat	equ	0xFF5
  1666                           postinc0	equ	0xFEE
  1667                           wreg	equ	0xFE8
  1668                           postdec1	equ	0xFE5
  1669                           fsr1l	equ	0xFE1
  1670                           
  1671                           	psect	dataBANK2
  1672  0002DB                     __pdataBANK2:
  1673                           	opt stack 0
  1674  0002DB                     _MSG_LORAWAN:
  1675                           	opt stack 0
  1676  0002DB                     	ds	30
  1677  0002F9                     _randx:
  1678                           	opt stack 0
  1679  0002F9                     	ds	4
  1680  0002FD                     __send_retries:
  1681                           	opt stack 0
  1682  0002FD                     	ds	1
  1683                           tblptru	equ	0xFF8
  1684                           tblptrh	equ	0xFF7
  1685                           tblptrl	equ	0xFF6
  1686                           tablat	equ	0xFF5
  1687                           postinc0	equ	0xFEE
  1688                           wreg	equ	0xFE8
  1689                           postdec1	equ	0xFE5
  1690                           fsr1l	equ	0xFE1
  1691                           
  1692                           	psect	bssBANK3
  1693  000300                     __pbssBANK3:
  1694                           	opt stack 0
  1695  000300                     _dadosRecebidos:
  1696                           	opt stack 0
  1697  000300                     	ds	20
  1698  000314                     recebeByteLoRaWan@frameData:
  1699                           	opt stack 0
  1700  000314                     	ds	100
  1701  000378                     _receivePacket:
  1702                           	opt stack 0
  1703  000378                     	ds	100
  1704                           tblptru	equ	0xFF8
  1705                           tblptrh	equ	0xFF7
  1706                           tblptrl	equ	0xFF6
  1707                           tablat	equ	0xFF5
  1708                           postinc0	equ	0xFEE
  1709                           wreg	equ	0xFE8
  1710                           postdec1	equ	0xFE5
  1711                           fsr1l	equ	0xFE1
  1712                           
  1713                           	psect	bssBANK4
  1714  000440                     __pbssBANK4:
  1715                           	opt stack 0
  1716  000440                     recebeByte@frameData:
  1717                           	opt stack 0
  1718  000440                     	ds	100
  1719                           tblptru	equ	0xFF8
  1720                           tblptrh	equ	0xFF7
  1721                           tblptrl	equ	0xFF6
  1722                           tablat	equ	0xFF5
  1723                           postinc0	equ	0xFEE
  1724                           wreg	equ	0xFE8
  1725                           postdec1	equ	0xFE5
  1726                           fsr1l	equ	0xFE1
  1727                           
  1728                           	psect	bssBANK6
  1729  000600                     __pbssBANK6:
  1730                           	opt stack 0
  1731  000600                     _frameBuffer:
  1732                           	opt stack 0
  1733  000600                     	ds	200
  1734                           tblptru	equ	0xFF8
  1735                           tblptrh	equ	0xFF7
  1736                           tblptrl	equ	0xFF6
  1737                           tablat	equ	0xFF5
  1738                           postinc0	equ	0xFEE
  1739                           wreg	equ	0xFE8
  1740                           postdec1	equ	0xFE5
  1741                           fsr1l	equ	0xFE1
  1742                           
  1743                           	psect	bssBANK7
  1744  000700                     __pbssBANK7:
  1745                           	opt stack 0
  1746  000700                     _command:
  1747                           	opt stack 0
  1748  000700                     	ds	150
  1749                           tblptru	equ	0xFF8
  1750                           tblptrh	equ	0xFF7
  1751                           tblptrl	equ	0xFF6
  1752                           tablat	equ	0xFF5
  1753                           postinc0	equ	0xFEE
  1754                           wreg	equ	0xFE8
  1755                           postdec1	equ	0xFE5
  1756                           fsr1l	equ	0xFE1
  1757                           
  1758                           	psect	cstackBANK1
  1759  000100                     __pcstackBANK1:
  1760                           	opt stack 0
  1761  000100                     TxLoRaWan@comando:
  1762                           	opt stack 0
  1763                           
  1764                           ; 200 bytes @ 0x0
  1765  000100                     	ds	200
  1766  0001C8                     TxLoRaWan@conf:
  1767                           	opt stack 0
  1768                           
  1769                           ; 1 bytes @ 0xC8
  1770  0001C8                     	ds	1
  1771  0001C9                     TxLoRaWan@status:
  1772                           	opt stack 0
  1773                           
  1774                           ; 1 bytes @ 0xC9
  1775  0001C9                     	ds	1
  1776  0001CA                     TxLoRaWan@hex:
  1777                           	opt stack 0
  1778                           
  1779                           ; 4 bytes @ 0xCA
  1780  0001CA                     	ds	4
  1781  0001CE                     TxLoRaWan@i:
  1782                           	opt stack 0
  1783                           
  1784                           ; 1 bytes @ 0xCE
  1785  0001CE                     	ds	1
  1786  0001CF                     main@statusLoRaWan:
  1787                           	opt stack 0
  1788                           
  1789                           ; 1 bytes @ 0xCF
  1790  0001CF                     	ds	1
  1791  0001D0                     main@resp:
  1792                           	opt stack 0
  1793                           
  1794                           ; 1 bytes @ 0xD0
  1795  0001D0                     	ds	1
  1796  0001D1                     main@tempo:
  1797                           	opt stack 0
  1798                           
  1799                           ; 4 bytes @ 0xD1
  1800  0001D1                     	ds	4
  1801  0001D5                     _main$5648:
  1802                           	opt stack 0
  1803                           
  1804                           ; 3 bytes @ 0xD5
  1805  0001D5                     	ds	3
  1806  0001D8                     main@tempoTimeOut:
  1807                           	opt stack 0
  1808                           
  1809                           ; 4 bytes @ 0xD8
  1810  0001D8                     	ds	4
  1811  0001DC                     main@deltaTempo:
  1812                           	opt stack 0
  1813                           
  1814                           ; 4 bytes @ 0xDC
  1815  0001DC                     	ds	4
  1816  0001E0                     main@nivelPoco:
  1817                           	opt stack 0
  1818                           
  1819                           ; 2 bytes @ 0xE0
  1820  0001E0                     	ds	2
  1821  0001E2                     main@i:
  1822                           	opt stack 0
  1823                           
  1824                           ; 2 bytes @ 0xE2
  1825  0001E2                     	ds	2
  1826  0001E4                     main@pisca:
  1827                           	opt stack 0
  1828                           
  1829                           ; 1 bytes @ 0xE4
  1830  0001E4                     	ds	1
  1831  0001E5                     main@dadoPoco:
  1832                           	opt stack 0
  1833                           
  1834                           ; 9 bytes @ 0xE5
  1835  0001E5                     	ds	9
  1836                           tblptru	equ	0xFF8
  1837                           tblptrh	equ	0xFF7
  1838                           tblptrl	equ	0xFF6
  1839                           tablat	equ	0xFF5
  1840                           postinc0	equ	0xFEE
  1841                           wreg	equ	0xFE8
  1842                           postdec1	equ	0xFE5
  1843                           fsr1l	equ	0xFE1
  1844                           
  1845                           	psect	cstackBANK0
  1846  000060                     __pcstackBANK0:
  1847                           	opt stack 0
  1848  000060                     ??_isdigit:
  1849  000060                     ?_USBTransferOnePacket:
  1850                           	opt stack 0
  1851  000060                     ?_strlen:
  1852                           	opt stack 0
  1853  000060                     ?_leAD:
  1854                           	opt stack 0
  1855  000060                     ?___awmod:
  1856                           	opt stack 0
  1857  000060                     ?___ftpack:
  1858                           	opt stack 0
  1859  000060                     ?___ftneg:
  1860                           	opt stack 0
  1861  000060                     ?_millis:
  1862                           	opt stack 0
  1863  000060                     ?__tdiv_to_l_:
  1864                           	opt stack 0
  1865  000060                     ?__div_to_l_:
  1866                           	opt stack 0
  1867  000060                     ?_le_pulsos:
  1868                           	opt stack 0
  1869  000060                     ?_leHorimetro:
  1870                           	opt stack 0
  1871  000060                     ?___lldiv:
  1872                           	opt stack 0
  1873  000060                     USBTransferOnePacket@dir:
  1874                           	opt stack 0
  1875  000060                     putch@data:
  1876                           	opt stack 0
  1877  000060                     leBombaLigada@bombaLigada:
  1878                           	opt stack 0
  1879  000060                     crc8@crc:
  1880                           	opt stack 0
  1881  000060                     readEeprom@end:
  1882                           	opt stack 0
  1883  000060                     ___awmod@dividend:
  1884                           	opt stack 0
  1885  000060                     memset@p1:
  1886                           	opt stack 0
  1887  000060                     strcat@to:
  1888                           	opt stack 0
  1889  000060                     strlen@s:
  1890                           	opt stack 0
  1891  000060                     __div_to_l_@f1:
  1892                           	opt stack 0
  1893  000060                     ___ftpack@arg:
  1894                           	opt stack 0
  1895  000060                     __tdiv_to_l_@f1:
  1896                           	opt stack 0
  1897  000060                     ___ftge@ff1:
  1898                           	opt stack 0
  1899  000060                     ___ftneg@f1:
  1900                           	opt stack 0
  1901  000060                     ___lldiv@dividend:
  1902                           	opt stack 0
  1903                           
  1904                           ; 4 bytes @ 0x0
  1905  000060                     	ds	1
  1906  000061                     ??_crc8:
  1907  000061                     writeEeprom@b:
  1908                           	opt stack 0
  1909  000061                     _isdigit$5090:
  1910                           	opt stack 0
  1911  000061                     USBTransferOnePacket@data:
  1912                           	opt stack 0
  1913                           
  1914                           ; 2 bytes @ 0x1
  1915  000061                     	ds	1
  1916  000062                     ??_strlen:
  1917  000062                     ??_leAD:
  1918  000062                     writeEeprom@intEnable:
  1919                           	opt stack 0
  1920  000062                     isdigit@c:
  1921                           	opt stack 0
  1922  000062                     ___awmod@divisor:
  1923                           	opt stack 0
  1924  000062                     memset@c:
  1925                           	opt stack 0
  1926  000062                     strcat@from:
  1927                           	opt stack 0
  1928                           
  1929                           ; 2 bytes @ 0x2
  1930  000062                     	ds	1
  1931  000063                     USBTransferOnePacket@len:
  1932                           	opt stack 0
  1933  000063                     crc8@dado:
  1934                           	opt stack 0
  1935  000063                     writeEeprom@end:
  1936                           	opt stack 0
  1937  000063                     ___ftpack@exp:
  1938                           	opt stack 0
  1939  000063                     __div_to_l_@f2:
  1940                           	opt stack 0
  1941  000063                     __tdiv_to_l_@f2:
  1942                           	opt stack 0
  1943  000063                     ___ftge@ff2:
  1944                           	opt stack 0
  1945                           
  1946                           ; 3 bytes @ 0x3
  1947  000063                     	ds	1
  1948  000064                     ??_USBTransferOnePacket:
  1949  000064                     ??_retornaDadosEeprom:
  1950  000064                     ___awmod@counter:
  1951                           	opt stack 0
  1952  000064                     ___ftpack@sign:
  1953                           	opt stack 0
  1954  000064                     memset@n:
  1955                           	opt stack 0
  1956  000064                     strcat@cp:
  1957                           	opt stack 0
  1958  000064                     strlen@cp:
  1959                           	opt stack 0
  1960  000064                     millis@m:
  1961                           	opt stack 0
  1962  000064                     leAD@leitura:
  1963                           	opt stack 0
  1964  000064                     le_pulsos@freq:
  1965                           	opt stack 0
  1966  000064                     leHorimetro@horimetro:
  1967                           	opt stack 0
  1968  000064                     ___lldiv@divisor:
  1969                           	opt stack 0
  1970                           
  1971                           ; 4 bytes @ 0x4
  1972  000064                     	ds	1
  1973  000065                     ??___ftpack:
  1974  000065                     ___awmod@sign:
  1975                           	opt stack 0
  1976  000065                     retornaDadosEeprom@vazaoAcumuladaAtual:
  1977                           	opt stack 0
  1978                           
  1979                           ; 4 bytes @ 0x5
  1980  000065                     	ds	1
  1981  000066                     ??__tdiv_to_l_:
  1982  000066                     ??___ftge:
  1983  000066                     ?___awdiv:
  1984                           	opt stack 0
  1985  000066                     ___awdiv@dividend:
  1986                           	opt stack 0
  1987  000066                     memset@p:
  1988                           	opt stack 0
  1989  000066                     __div_to_l_@quot:
  1990                           	opt stack 0
  1991                           
  1992                           ; 4 bytes @ 0x6
  1993  000066                     	ds	2
  1994  000068                     ??_parseLoRaWan:
  1995  000068                     ?___lbtoft:
  1996                           	opt stack 0
  1997  000068                     ?___lltoft:
  1998                           	opt stack 0
  1999  000068                     USBDeviceInit@i:
  2000                           	opt stack 0
  2001  000068                     USBTransferOnePacket@ep:
  2002                           	opt stack 0
  2003  000068                     leAD@leituraAux:
  2004                           	opt stack 0
  2005  000068                     ___awdiv@divisor:
  2006                           	opt stack 0
  2007  000068                     ___lldiv@quotient:
  2008                           	opt stack 0
  2009  000068                     ___lltoft@c:
  2010                           	opt stack 0
  2011                           
  2012                           ; 4 bytes @ 0x8
  2013  000068                     	ds	1
  2014  000069                     retornaDadosEeprom@crcGravado:
  2015                           	opt stack 0
  2016  000069                     USBTransferOnePacket@handle:
  2017                           	opt stack 0
  2018  000069                     __tdiv_to_l_@quot:
  2019                           	opt stack 0
  2020                           
  2021                           ; 4 bytes @ 0x9
  2022  000069                     	ds	1
  2023  00006A                     retornaDadosEeprom@intEnable:
  2024                           	opt stack 0
  2025  00006A                     ___awdiv@counter:
  2026                           	opt stack 0
  2027  00006A                     __div_to_l_@cntr:
  2028                           	opt stack 0
  2029  00006A                     leAD@i:
  2030                           	opt stack 0
  2031                           
  2032                           ; 2 bytes @ 0xA
  2033  00006A                     	ds	1
  2034  00006B                     CDCTxService@i:
  2035                           	opt stack 0
  2036  00006B                     ___awdiv@sign:
  2037                           	opt stack 0
  2038  00006B                     __div_to_l_@exp1:
  2039                           	opt stack 0
  2040  00006B                     ___lbtoft@c:
  2041                           	opt stack 0
  2042  00006B                     retornaDadosEeprom@vazao:
  2043                           	opt stack 0
  2044                           
  2045                           ; 4 bytes @ 0xB
  2046  00006B                     	ds	1
  2047  00006C                     ??___lltoft:
  2048  00006C                     CDCTxService@byte_to_send:
  2049                           	opt stack 0
  2050  00006C                     ___lldiv@counter:
  2051                           	opt stack 0
  2052  00006C                     ___awdiv@quotient:
  2053                           	opt stack 0
  2054                           
  2055                           ; 2 bytes @ 0xC
  2056  00006C                     	ds	1
  2057  00006D                     ?___llmod:
  2058                           	opt stack 0
  2059  00006D                     __tdiv_to_l_@cntr:
  2060                           	opt stack 0
  2061  00006D                     setup_uart@baudRate:
  2062                           	opt stack 0
  2063  00006D                     ___llmod@dividend:
  2064                           	opt stack 0
  2065                           
  2066                           ; 4 bytes @ 0xD
  2067  00006D                     	ds	1
  2068  00006E                     ?___wmul:
  2069                           	opt stack 0
  2070  00006E                     __tdiv_to_l_@exp1:
  2071                           	opt stack 0
  2072  00006E                     ___wmul@multiplier:
  2073                           	opt stack 0
  2074                           
  2075                           ; 2 bytes @ 0xE
  2076  00006E                     	ds	1
  2077  00006F                     retornaDadosEeprom@horimetroAtual:
  2078                           	opt stack 0
  2079                           
  2080                           ; 4 bytes @ 0xF
  2081  00006F                     	ds	1
  2082  000070                     ___lltoft@exp:
  2083                           	opt stack 0
  2084  000070                     ___wmul@multiplicand:
  2085                           	opt stack 0
  2086                           
  2087                           ; 2 bytes @ 0x10
  2088  000070                     	ds	1
  2089  000071                     setup_uart@brg:
  2090                           	opt stack 0
  2091  000071                     ___llmod@divisor:
  2092                           	opt stack 0
  2093                           
  2094                           ; 4 bytes @ 0x11
  2095  000071                     	ds	1
  2096  000072                     ___wmul@product:
  2097                           	opt stack 0
  2098                           
  2099                           ; 2 bytes @ 0x12
  2100  000072                     	ds	1
  2101  000073                     retornaDadosEeprom@dado:
  2102                           	opt stack 0
  2103                           
  2104                           ; 4 bytes @ 0x13
  2105  000073                     	ds	1
  2106  000074                     ?___ftadd:
  2107                           	opt stack 0
  2108  000074                     ___ftadd@f1:
  2109                           	opt stack 0
  2110  000074                     parseLoRaWan@previous:
  2111                           	opt stack 0
  2112                           
  2113                           ; 4 bytes @ 0x14
  2114  000074                     	ds	1
  2115  000075                     ___llmod@counter:
  2116                           	opt stack 0
  2117                           
  2118                           ; 1 bytes @ 0x15
  2119  000075                     	ds	1
  2120  000076                     gravaDadosEeprom@pulsos:
  2121                           	opt stack 0
  2122                           
  2123                           ; 4 bytes @ 0x16
  2124  000076                     	ds	1
  2125  000077                     ___ftadd@f2:
  2126                           	opt stack 0
  2127  000077                     retornaDadosEeprom@dado_4802:
  2128                           	opt stack 0
  2129                           
  2130                           ; 4 bytes @ 0x17
  2131  000077                     	ds	1
  2132  000078                     parseLoRaWan@intervalMAX:
  2133                           	opt stack 0
  2134                           
  2135                           ; 2 bytes @ 0x18
  2136  000078                     	ds	2
  2137  00007A                     ??___ftadd:
  2138  00007A                     parseLoRaWan@status:
  2139                           	opt stack 0
  2140  00007A                     gravaDadosEeprom@bombaDesligou:
  2141                           	opt stack 0
  2142                           
  2143                           ; 1 bytes @ 0x1A
  2144  00007A                     	ds	1
  2145  00007B                     parseLoRaWan@timeout:
  2146                           	opt stack 0
  2147  00007B                     _gravaDadosEeprom$4779:
  2148                           	opt stack 0
  2149  00007B                     retornaDadosEeprom@horimetro:
  2150                           	opt stack 0
  2151                           
  2152                           ; 4 bytes @ 0x1B
  2153  00007B                     	ds	1
  2154  00007C                     gravaDadosEeprom@dado:
  2155                           	opt stack 0
  2156  00007C                     enviaComando@cmd:
  2157                           	opt stack 0
  2158                           
  2159                           ; 2 bytes @ 0x1C
  2160  00007C                     	ds	1
  2161  00007D                     gravaDadosEeprom@dado_4791:
  2162                           	opt stack 0
  2163  00007D                     ___ftadd@sign:
  2164                           	opt stack 0
  2165                           
  2166                           ; 1 bytes @ 0x1D
  2167  00007D                     	ds	1
  2168  00007E                     enviaComando@tipoComando:
  2169                           	opt stack 0
  2170  00007E                     gravaDadosEeprom@i:
  2171                           	opt stack 0
  2172  00007E                     ___ftadd@exp2:
  2173                           	opt stack 0
  2174                           
  2175                           ; 1 bytes @ 0x1E
  2176  00007E                     	ds	1
  2177  00007F                     ??_enviaComando:
  2178  00007F                     gravaDadosEeprom@i_4790:
  2179                           	opt stack 0
  2180  00007F                     retornaDadosEeprom@j:
  2181                           	opt stack 0
  2182  00007F                     ___ftadd@exp1:
  2183                           	opt stack 0
  2184                           
  2185                           ; 1 bytes @ 0x1F
  2186  00007F                     	ds	1
  2187  000080                     ?___ftmul:
  2188                           	opt stack 0
  2189  000080                     ?___ftsub:
  2190                           	opt stack 0
  2191  000080                     gravaDadosEeprom@bombaLigada:
  2192                           	opt stack 0
  2193  000080                     retornaDadosEeprom@j_4801:
  2194                           	opt stack 0
  2195  000080                     ___ftmul@f1:
  2196                           	opt stack 0
  2197  000080                     ___ftsub@f1:
  2198                           	opt stack 0
  2199                           
  2200                           ; 3 bytes @ 0x20
  2201  000080                     	ds	1
  2202  000081                     gravaDadosEeprom@indice:
  2203                           	opt stack 0
  2204  000081                     retornaDadosEeprom@crc:
  2205                           	opt stack 0
  2206  000081                     enviaComando@i:
  2207                           	opt stack 0
  2208                           
  2209                           ; 2 bytes @ 0x21
  2210  000081                     	ds	1
  2211  000082                     gravaDadosEeprom@crc:
  2212                           	opt stack 0
  2213  000082                     retornaDadosEeprom@i:
  2214                           	opt stack 0
  2215                           
  2216                           ; 2 bytes @ 0x22
  2217  000082                     	ds	1
  2218  000083                     enviaComando@i_4617:
  2219                           	opt stack 0
  2220  000083                     ___ftmul@f2:
  2221                           	opt stack 0
  2222  000083                     ___ftsub@f2:
  2223                           	opt stack 0
  2224  000083                     gravaDadosEeprom@horimetro:
  2225                           	opt stack 0
  2226                           
  2227                           ; 4 bytes @ 0x23
  2228  000083                     	ds	1
  2229  000084                     ??_inicializaVariaveis:
  2230                           
  2231                           ; 1 bytes @ 0x24
  2232  000084                     	ds	1
  2233  000085                     enviaComando@i_4618:
  2234                           	opt stack 0
  2235                           
  2236                           ; 2 bytes @ 0x25
  2237  000085                     	ds	1
  2238  000086                     ??___ftmul:
  2239  000086                     
  2240                           ; 1 bytes @ 0x26
  2241  000086                     	ds	1
  2242  000087                     ResetModuloLoRaWan@status:
  2243                           	opt stack 0
  2244  000087                     JoinLoRaWan@status:
  2245                           	opt stack 0
  2246  000087                     delay@time:
  2247                           	opt stack 0
  2248                           
  2249                           ; 4 bytes @ 0x27
  2250  000087                     	ds	2
  2251  000089                     ___ftmul@exp:
  2252                           	opt stack 0
  2253                           
  2254                           ; 1 bytes @ 0x29
  2255  000089                     	ds	1
  2256  00008A                     ___ftmul@f3_as_product:
  2257                           	opt stack 0
  2258                           
  2259                           ; 3 bytes @ 0x2A
  2260  00008A                     	ds	1
  2261  00008B                     ??_delay:
  2262                           
  2263                           ; 1 bytes @ 0x2B
  2264  00008B                     	ds	2
  2265  00008D                     ___ftmul@cntr:
  2266                           	opt stack 0
  2267                           
  2268                           ; 1 bytes @ 0x2D
  2269  00008D                     	ds	1
  2270  00008E                     ___ftmul@sign:
  2271                           	opt stack 0
  2272                           
  2273                           ; 1 bytes @ 0x2E
  2274  00008E                     	ds	1
  2275  00008F                     ?___ftdiv:
  2276                           	opt stack 0
  2277  00008F                     ?_fround:
  2278                           	opt stack 0
  2279  00008F                     ?_scale:
  2280                           	opt stack 0
  2281  00008F                     ___ftdiv@f1:
  2282                           	opt stack 0
  2283                           
  2284                           ; 3 bytes @ 0x2F
  2285  00008F                     	ds	3
  2286  000092                     ___ftdiv@f2:
  2287                           	opt stack 0
  2288  000092                     _fround$5651:
  2289                           	opt stack 0
  2290  000092                     _scale$5652:
  2291                           	opt stack 0
  2292                           
  2293                           ; 3 bytes @ 0x32
  2294  000092                     	ds	1
  2295  000093                     delay@to:
  2296                           	opt stack 0
  2297                           
  2298                           ; 4 bytes @ 0x33
  2299  000093                     	ds	2
  2300  000095                     ??___ftdiv:
  2301  000095                     scale@scl:
  2302                           	opt stack 0
  2303  000095                     _fround$5650:
  2304                           	opt stack 0
  2305                           
  2306                           ; 3 bytes @ 0x35
  2307  000095                     	ds	3
  2308  000098                     fround@prec:
  2309                           	opt stack 0
  2310  000098                     ___ftdiv@cntr:
  2311                           	opt stack 0
  2312                           
  2313                           ; 1 bytes @ 0x38
  2314  000098                     	ds	1
  2315  000099                     ___ftdiv@f3:
  2316                           	opt stack 0
  2317                           
  2318                           ; 3 bytes @ 0x39
  2319  000099                     	ds	3
  2320  00009C                     ___ftdiv@exp:
  2321                           	opt stack 0
  2322                           
  2323                           ; 1 bytes @ 0x3C
  2324  00009C                     	ds	1
  2325  00009D                     ___ftdiv@sign:
  2326                           	opt stack 0
  2327                           
  2328                           ; 1 bytes @ 0x3D
  2329  00009D                     	ds	1
  2330  00009E                     ?_le4a20:
  2331                           	opt stack 0
  2332                           
  2333                           ; 3 bytes @ 0x3E
  2334  00009E                     	ds	3
  2335  0000A1                     ??_le4a20:
  2336                           
  2337                           ; 1 bytes @ 0x41
  2338  0000A1                     	ds	8
  2339  0000A9                     le4a20@to:
  2340                           	opt stack 0
  2341                           
  2342                           ; 4 bytes @ 0x49
  2343  0000A9                     	ds	4
  2344  0000AD                     _le4a20$5649:
  2345                           	opt stack 0
  2346                           
  2347                           ; 3 bytes @ 0x4D
  2348  0000AD                     	ds	3
  2349  0000B0                     le4a20@cnt:
  2350                           	opt stack 0
  2351                           
  2352                           ; 1 bytes @ 0x50
  2353  0000B0                     	ds	1
  2354  0000B1                     le4a20@ad:
  2355                           	opt stack 0
  2356                           
  2357                           ; 4 bytes @ 0x51
  2358  0000B1                     	ds	4
  2359  0000B5                     le4a20@corrente:
  2360                           	opt stack 0
  2361                           
  2362                           ; 3 bytes @ 0x55
  2363  0000B5                     	ds	3
  2364  0000B8                     ?___fttol:
  2365                           	opt stack 0
  2366  0000B8                     ___fttol@f1:
  2367                           	opt stack 0
  2368                           
  2369                           ; 3 bytes @ 0x58
  2370  0000B8                     	ds	4
  2371  0000BC                     ??___fttol:
  2372                           
  2373                           ; 1 bytes @ 0x5C
  2374  0000BC                     	ds	5
  2375  0000C1                     ___fttol@sign1:
  2376                           	opt stack 0
  2377                           
  2378                           ; 1 bytes @ 0x61
  2379  0000C1                     	ds	1
  2380  0000C2                     ___fttol@lval:
  2381                           	opt stack 0
  2382                           
  2383                           ; 4 bytes @ 0x62
  2384  0000C2                     	ds	4
  2385  0000C6                     ___fttol@exp1:
  2386                           	opt stack 0
  2387                           
  2388                           ; 1 bytes @ 0x66
  2389  0000C6                     	ds	1
  2390  0000C7                     ?_sprintf:
  2391                           	opt stack 0
  2392  0000C7                     sprintf@sp:
  2393                           	opt stack 0
  2394                           
  2395                           ; 2 bytes @ 0x67
  2396  0000C7                     	ds	2
  2397  0000C9                     sprintf@f:
  2398                           	opt stack 0
  2399                           
  2400                           ; 2 bytes @ 0x69
  2401  0000C9                     	ds	10
  2402  0000D3                     ??_sprintf:
  2403                           
  2404                           ; 1 bytes @ 0x73
  2405  0000D3                     	ds	6
  2406  0000D9                     _sprintf$5653:
  2407                           	opt stack 0
  2408                           
  2409                           ; 3 bytes @ 0x79
  2410  0000D9                     	ds	3
  2411  0000DC                     sprintf@idx:
  2412                           	opt stack 0
  2413                           
  2414                           ; 1 bytes @ 0x7C
  2415  0000DC                     	ds	1
  2416  0000DD                     sprintf@cp:
  2417                           	opt stack 0
  2418                           
  2419                           ; 2 bytes @ 0x7D
  2420  0000DD                     	ds	2
  2421  0000DF                     sprintf@len:
  2422                           	opt stack 0
  2423                           
  2424                           ; 2 bytes @ 0x7F
  2425  0000DF                     	ds	2
  2426  0000E1                     sprintf@ap:
  2427                           	opt stack 0
  2428                           
  2429                           ; 2 bytes @ 0x81
  2430  0000E1                     	ds	2
  2431  0000E3                     sprintf@prec:
  2432                           	opt stack 0
  2433                           
  2434                           ; 2 bytes @ 0x83
  2435  0000E3                     	ds	2
  2436  0000E5                     sprintf@tmpval:
  2437                           	opt stack 0
  2438                           
  2439                           ; 4 bytes @ 0x85
  2440  0000E5                     	ds	4
  2441  0000E9                     sprintf@exp:
  2442                           	opt stack 0
  2443                           
  2444                           ; 2 bytes @ 0x89
  2445  0000E9                     	ds	2
  2446  0000EB                     sprintf@val:
  2447                           	opt stack 0
  2448                           
  2449                           ; 4 bytes @ 0x8B
  2450  0000EB                     	ds	4
  2451  0000EF                     sprintf@fval:
  2452                           	opt stack 0
  2453                           
  2454                           ; 3 bytes @ 0x8F
  2455  0000EF                     	ds	3
  2456  0000F2                     sprintf@width:
  2457                           	opt stack 0
  2458                           
  2459                           ; 2 bytes @ 0x92
  2460  0000F2                     	ds	2
  2461  0000F4                     sprintf@flag:
  2462                           	opt stack 0
  2463                           
  2464                           ; 2 bytes @ 0x94
  2465  0000F4                     	ds	2
  2466  0000F6                     sprintf@c:
  2467                           	opt stack 0
  2468                           
  2469                           ; 1 bytes @ 0x96
  2470  0000F6                     	ds	1
  2471  0000F7                     TxLoRaWan@porta:
  2472                           	opt stack 0
  2473                           
  2474                           ; 1 bytes @ 0x97
  2475  0000F7                     	ds	1
  2476  0000F8                     TxLoRaWan@data:
  2477                           	opt stack 0
  2478                           
  2479                           ; 2 bytes @ 0x98
  2480  0000F8                     	ds	2
  2481  0000FA                     TxLoRaWan@tamData:
  2482                           	opt stack 0
  2483                           
  2484                           ; 1 bytes @ 0x9A
  2485  0000FA                     	ds	1
  2486  0000FB                     ??_TxLoRaWan:
  2487                           
  2488                           ; 1 bytes @ 0x9B
  2489  0000FB                     	ds	1
  2490  0000FC                     ??_main:
  2491                           
  2492                           ; 1 bytes @ 0x9C
  2493  0000FC                     	ds	4
  2494                           tblptru	equ	0xFF8
  2495                           tblptrh	equ	0xFF7
  2496                           tblptrl	equ	0xFF6
  2497                           tablat	equ	0xFF5
  2498                           postinc0	equ	0xFEE
  2499                           wreg	equ	0xFE8
  2500                           postdec1	equ	0xFE5
  2501                           fsr1l	equ	0xFE1
  2502                           
  2503                           	psect	cstackCOMRAM
  2504  000001                     __pcstackCOMRAM:
  2505                           	opt stack 0
  2506  000001                     ??_getch:
  2507  000001                     ??_USBStdGetDscHandler:
  2508  000001                     ??_USBStdGetStatusHandler:
  2509  000001                     ?_strcmp:
  2510                           	opt stack 0
  2511  000001                     ?_strncmp:
  2512                           	opt stack 0
  2513  000001                     ?i2_USBTransferOnePacket:
  2514                           	opt stack 0
  2515  000001                     ?i2_strlen:
  2516                           	opt stack 0
  2517  000001                     USBConfigureEndpoint@direction:
  2518                           	opt stack 0
  2519  000001                     USBCtrlTrfTxService@byteToSend:
  2520                           	opt stack 0
  2521  000001                     USBCtrlTrfRxService@i:
  2522                           	opt stack 0
  2523  000001                     toupper@c:
  2524                           	opt stack 0
  2525  000001                     i2USBTransferOnePacket@dir:
  2526                           	opt stack 0
  2527  000001                     memcpy@d1:
  2528                           	opt stack 0
  2529  000001                     strcmp@s1:
  2530                           	opt stack 0
  2531  000001                     strcpy@to:
  2532                           	opt stack 0
  2533  000001                     strncmp@s1:
  2534                           	opt stack 0
  2535  000001                     i2memset@p1:
  2536                           	opt stack 0
  2537  000001                     i2strlen@s:
  2538                           	opt stack 0
  2539                           
  2540                           ; 2 bytes @ 0x0
  2541  000001                     	ds	1
  2542  000002                     ??_USBConfigureEndpoint:
  2543  000002                     USBCtrlTrfRxService@byteToRead:
  2544                           	opt stack 0
  2545  000002                     USBCtrlTrfInHandler@lastDTS:
  2546                           	opt stack 0
  2547  000002                     getch@RC:
  2548                           	opt stack 0
  2549  000002                     converter@conv2:
  2550                           	opt stack 0
  2551  000002                     USBStdGetStatusHandler@p:
  2552                           	opt stack 0
  2553  000002                     i2USBTransferOnePacket@data:
  2554                           	opt stack 0
  2555                           
  2556                           ; 2 bytes @ 0x1
  2557  000002                     	ds	1
  2558  000003                     ??i2_strlen:
  2559  000003                     getch@data:
  2560                           	opt stack 0
  2561  000003                     converter@resul:
  2562                           	opt stack 0
  2563  000003                     memcpy@s1:
  2564                           	opt stack 0
  2565  000003                     strcmp@s2:
  2566                           	opt stack 0
  2567  000003                     strcpy@from:
  2568                           	opt stack 0
  2569  000003                     strncmp@s2:
  2570                           	opt stack 0
  2571  000003                     i2memset@c:
  2572                           	opt stack 0
  2573                           
  2574                           ; 2 bytes @ 0x2
  2575  000003                     	ds	1
  2576  000004                     converter@aux:
  2577                           	opt stack 0
  2578  000004                     i2USBTransferOnePacket@len:
  2579                           	opt stack 0
  2580                           
  2581                           ; 1 bytes @ 0x3
  2582  000004                     	ds	1
  2583  000005                     ??_strcmp:
  2584  000005                     ??i2_USBTransferOnePacket:
  2585  000005                     converter@aux2:
  2586                           	opt stack 0
  2587  000005                     memcpy@n:
  2588                           	opt stack 0
  2589  000005                     strcpy@cp:
  2590                           	opt stack 0
  2591  000005                     strncmp@len:
  2592                           	opt stack 0
  2593  000005                     i2memset@n:
  2594                           	opt stack 0
  2595  000005                     i2strlen@cp:
  2596                           	opt stack 0
  2597                           
  2598                           ; 2 bytes @ 0x4
  2599  000005                     	ds	1
  2600  000006                     USBConfigureEndpoint@EPNum:
  2601                           	opt stack 0
  2602  000006                     converter@conv1:
  2603                           	opt stack 0
  2604  000006                     strcmp@r:
  2605                           	opt stack 0
  2606                           
  2607                           ; 1 bytes @ 0x5
  2608  000006                     	ds	1
  2609  000007                     ??_strncmp:
  2610  000007                     USBConfigureEndpoint@handle:
  2611                           	opt stack 0
  2612  000007                     memcpy@d:
  2613                           	opt stack 0
  2614  000007                     i2memset@p:
  2615                           	opt stack 0
  2616                           
  2617                           ; 2 bytes @ 0x6
  2618  000007                     	ds	2
  2619  000009                     USBEnableEndpoint@options:
  2620                           	opt stack 0
  2621  000009                     i2USBDeviceInit@i:
  2622                           	opt stack 0
  2623  000009                     i2USBTransferOnePacket@ep:
  2624                           	opt stack 0
  2625  000009                     memcpy@s:
  2626                           	opt stack 0
  2627                           
  2628                           ; 2 bytes @ 0x8
  2629  000009                     	ds	1
  2630  00000A                     ??_recebeByteLoRaWan:
  2631  00000A                     USBEnableEndpoint@p:
  2632                           	opt stack 0
  2633  00000A                     i2USBTransferOnePacket@handle:
  2634                           	opt stack 0
  2635                           
  2636                           ; 2 bytes @ 0x9
  2637  00000A                     	ds	1
  2638  00000B                     memcpy@tmp:
  2639                           	opt stack 0
  2640                           
  2641                           ; 1 bytes @ 0xA
  2642  00000B                     	ds	1
  2643  00000C                     USBEnableEndpoint@ep:
  2644                           	opt stack 0
  2645                           
  2646                           ; 1 bytes @ 0xB
  2647  00000C                     	ds	1
  2648  00000D                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  2649                           	opt stack 0
  2650                           
  2651                           ; 2 bytes @ 0xC
  2652  00000D                     	ds	1
  2653  00000E                     recebeByteLoRaWan@len:
  2654                           	opt stack 0
  2655                           
  2656                           ; 1 bytes @ 0xD
  2657  00000E                     	ds	1
  2658  00000F                     recebeByteLoRaWan@port:
  2659                           	opt stack 0
  2660  00000F                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  2661                           	opt stack 0
  2662                           
  2663                           ; 2 bytes @ 0xE
  2664  00000F                     	ds	1
  2665  000010                     recebeByteLoRaWan@b:
  2666                           	opt stack 0
  2667                           
  2668                           ; 1 bytes @ 0xF
  2669  000010                     	ds	1
  2670  000011                     recebeByteLoRaWan@i:
  2671                           	opt stack 0
  2672  000011                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  2673                           	opt stack 0
  2674                           
  2675                           ; 2 bytes @ 0x10
  2676  000011                     	ds	1
  2677  000012                     recebeByteLoRaWan@tamMsgRx:
  2678                           	opt stack 0
  2679                           
  2680                           ; 1 bytes @ 0x11
  2681  000012                     	ds	1
  2682  000013                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  2683  000013                     recebeByteLoRaWan@i_4631:
  2684                           	opt stack 0
  2685                           
  2686                           ; 1 bytes @ 0x12
  2687  000013                     	ds	2
  2688  000015                     ??_USBStdFeatureReqHandler:
  2689  000015                     USBStdSetCfgHandler@i:
  2690                           	opt stack 0
  2691                           
  2692                           ; 1 bytes @ 0x14
  2693  000015                     	ds	1
  2694  000016                     USBStdFeatureReqHandler@pUEP:
  2695                           	opt stack 0
  2696                           
  2697                           ; 2 bytes @ 0x15
  2698  000016                     	ds	2
  2699  000018                     USBStdFeatureReqHandler@current_ep_data:
  2700                           	opt stack 0
  2701                           
  2702                           ; 1 bytes @ 0x17
  2703  000018                     	ds	1
  2704  000019                     USBStdFeatureReqHandler@p:
  2705                           	opt stack 0
  2706                           
  2707                           ; 2 bytes @ 0x18
  2708  000019                     	ds	2
  2709  00001B                     ??_USBCtrlEPService:
  2710  00001B                     
  2711                           ; 1 bytes @ 0x1A
  2712  00001B                     	ds	1
  2713  00001C                     USBDeviceTasks@i:
  2714                           	opt stack 0
  2715                           
  2716                           ; 1 bytes @ 0x1B
  2717  00001C                     	ds	1
  2718  00001D                     ??_SYS_InterruptHigh:
  2719                           
  2720                           ; 1 bytes @ 0x1C
  2721  00001D                     	ds	20
  2722  000031                     SYS_InterruptHigh@dig:
  2723                           	opt stack 0
  2724                           
  2725                           ; 2 bytes @ 0x30
  2726  000031                     	ds	2
  2727                           tblptru	equ	0xFF8
  2728                           tblptrh	equ	0xFF7
  2729                           tblptrl	equ	0xFF6
  2730                           tablat	equ	0xFF5
  2731                           postinc0	equ	0xFEE
  2732                           wreg	equ	0xFE8
  2733                           postdec1	equ	0xFE5
  2734                           fsr1l	equ	0xFE1
  2735                           
  2736 ;;
  2737 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  2738 ;;
  2739 ;; *************** function _main *****************
  2740 ;; Defined at:
  2741 ;;		line 51 in file "UT.c"
  2742 ;; Parameters:    Size  Location     Type
  2743 ;;		None
  2744 ;; Auto vars:     Size  Location     Type
  2745 ;;  deltaTempo      4  220[BANK1 ] unsigned long 
  2746 ;;  tempoTimeOut    4  216[BANK1 ] unsigned long 
  2747 ;;  tempo           4  209[BANK1 ] unsigned long 
  2748 ;;  nivelPoco       2  224[BANK1 ] unsigned int 
  2749 ;;  resp            1  208[BANK1 ] unsigned char 
  2750 ;;  i               2  226[BANK1 ] int 
  2751 ;;  dadoPoco        9  229[BANK1 ] struct .
  2752 ;;  pisca           1  228[BANK1 ] unsigned char 
  2753 ;;  statusLoRaWa    1  207[BANK1 ] unsigned char 
  2754 ;; Return value:  Size  Location     Type
  2755 ;;                  1    wreg      void 
  2756 ;; Registers used:
  2757 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2758 ;; Tracked objects:
  2759 ;;		On entry : 0/0
  2760 ;;		On exit  : 0/0
  2761 ;;		Unchanged: 0/0
  2762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2763 ;;      Params:         0       0       0       0       0       0       0       0       0
  2764 ;;      Locals:         0       0      31       0       0       0       0       0       0
  2765 ;;      Temps:          0       4       0       0       0       0       0       0       0
  2766 ;;      Totals:         0       4      31       0       0       0       0       0       0
  2767 ;;Total ram usage:       35 bytes
  2768 ;; Hardware stack levels required when called:   15
  2769 ;; This function calls:
  2770 ;;		_JoinLoRaWan
  2771 ;;		_TxLoRaWan
  2772 ;;		_USBDeviceInit
  2773 ;;		___ftmul
  2774 ;;		___fttol
  2775 ;;		_delay
  2776 ;;		_inicializaVariaveis
  2777 ;;		_le4a20
  2778 ;;		_leMedidas
  2779 ;;		_millis
  2780 ;;		_putch
  2781 ;;		_setup_AD
  2782 ;;		_setup_ccp1
  2783 ;;		_setup_uart
  2784 ;;		_verificaUSB
  2785 ;; This function is called by:
  2786 ;;		Startup code after reset
  2787 ;; This function uses a non-reentrant model
  2788 ;;
  2789                           
  2790                           	psect	text0
  2791  001758                     __ptext0:
  2792                           	opt stack 0
  2793  001758                     _main:
  2794                           	opt stack 16
  2795                           
  2796                           ;UT.c: 52: uint8_t pisca=0;
  2797                           
  2798                           ;incstack = 0
  2799  001758  0E00               	movlw	0
  2800  00175A  0101               	movlb	1	; () banked
  2801  00175C  6FE4               	movwf	main@pisca& (0+255),b
  2802                           
  2803                           ; BSR set to: 1
  2804                           ;UT.c: 54: TRISEbits.RE2=0;
  2805  00175E  9496               	bcf	3990,2,c	;volatile
  2806                           
  2807                           ; BSR set to: 1
  2808                           ;UT.c: 55: PORTDbits.RD4=0;
  2809  001760  9883               	bcf	3971,4,c	;volatile
  2810                           
  2811                           ; BSR set to: 1
  2812                           ;UT.c: 56: TRISDbits.RD4=0;
  2813  001762  9895               	bcf	3989,4,c	;volatile
  2814                           
  2815                           ; BSR set to: 1
  2816                           ;UT.c: 57: TRISAbits.RA0=1;
  2817  001764  8092               	bsf	3986,0,c	;volatile
  2818                           
  2819                           ; BSR set to: 1
  2820                           ;UT.c: 58: TRISAbits.RA1=1;
  2821  001766  8292               	bsf	3986,1,c	;volatile
  2822                           
  2823                           ;UT.c: 61: for (int i=0;i<25;i++)
  2824  001768  0E00               	movlw	0
  2825  00176A  6FE3               	movwf	(main@i+1)& (0+255),b
  2826  00176C  0E00               	movlw	0
  2827  00176E  6FE2               	movwf	main@i& (0+255),b
  2828  001770                     l9729:
  2829                           
  2830                           ; BSR set to: 1
  2831  001770  BFE3               	btfsc	(main@i+1)& (0+255),7,b
  2832  001772  D006               	goto	l952
  2833  001774  51E3               	movf	(main@i+1)& (0+255),w,b
  2834  001776  E11C               	bnz	l9741
  2835  001778  0E19               	movlw	25
  2836  00177A  5DE2               	subwf	main@i& (0+255),w,b
  2837  00177C  B0D8               	btfsc	status,0,c
  2838  00177E  D018               	goto	u9130
  2839  001780                     l952:
  2840                           
  2841                           ; BSR set to: 1
  2842                           ;UT.c: 62: {
  2843                           ;UT.c: 63: pisca ^= 1;
  2844                           
  2845                           ; BSR set to: 1
  2846  001780  0E01               	movlw	1
  2847  001782  1BE4               	xorwf	main@pisca& (0+255),f,b
  2848                           
  2849                           ; BSR set to: 1
  2850                           ;UT.c: 64: PORTEbits.RE2 = pisca;
  2851  001784  B1E4               	btfsc	main@pisca& (0+255),0,b
  2852  001786  D002               	bra	u9125
  2853  001788  9484               	bcf	3972,2,c	;volatile
  2854  00178A  D001               	bra	u9126
  2855  00178C                     u9125:
  2856  00178C  8484               	bsf	3972,2,c	;volatile
  2857  00178E                     u9126:
  2858                           
  2859                           ;UT.c: 65: _delay((unsigned long)((200)*(48000000/4000.0)));
  2860  00178E  0E0D               	movlw	13
  2861  001790  0100               	movlb	0	; () banked
  2862  001792  6FFD               	movwf	(??_main+1)& (0+255),b
  2863  001794  0E2D               	movlw	45
  2864  001796  6FFC               	movwf	??_main& (0+255),b
  2865  001798  0ED7               	movlw	215
  2866  00179A                     u9507:
  2867  00179A  2EE8               	decfsz	wreg,f,c
  2868  00179C  D7FE               	bra	u9507
  2869  00179E  2FFC               	decfsz	??_main& (0+255),f,b
  2870  0017A0  D7FC               	bra	u9507
  2871  0017A2  2FFD               	decfsz	(??_main+1)& (0+255),f,b
  2872  0017A4  D7FA               	bra	u9507
  2873  0017A6  D000               	nop2	
  2874  0017A8  0101               	movlb	1	; () banked
  2875  0017AA  4BE2               	infsnz	main@i& (0+255),f,b
  2876  0017AC  2BE3               	incf	(main@i+1)& (0+255),f,b
  2877  0017AE  D7E0               	goto	l9729
  2878  0017B0                     u9130:
  2879  0017B0                     l9741:
  2880                           
  2881                           ; BSR set to: 1
  2882                           ;UT.c: 66: }
  2883                           ;UT.c: 75: setup_uart(57600);
  2884  0017B0  0E00               	movlw	0
  2885  0017B2  0100               	movlb	0	; () banked
  2886  0017B4  6F6D               	movwf	setup_uart@baudRate& (0+255),b
  2887  0017B6  0EE1               	movlw	225
  2888  0017B8  6F6E               	movwf	(setup_uart@baudRate+1)& (0+255),b
  2889  0017BA  0E00               	movlw	0
  2890  0017BC  6F6F               	movwf	(setup_uart@baudRate+2)& (0+255),b
  2891  0017BE  0E00               	movlw	0
  2892  0017C0  6F70               	movwf	(setup_uart@baudRate+3)& (0+255),b
  2893  0017C2  EC6B  F01C         	call	_setup_uart	;wreg free
  2894                           
  2895                           ;UT.c: 78: USBDeviceInit();
  2896  0017C6  ECC0  F010         	call	_USBDeviceInit	;wreg free
  2897                           
  2898                           ;UT.c: 79: setup_AD();
  2899  0017CA  ECD5  F024         	call	_setup_AD	;wreg free
  2900                           
  2901                           ;UT.c: 80: inicializaVariaveis();
  2902  0017CE  EC12  F021         	call	_inicializaVariaveis	;wreg free
  2903                           
  2904                           ;UT.c: 81: setup_ccp1();
  2905  0017D2  ECF3  F022         	call	_setup_ccp1	;wreg free
  2906                           
  2907                           ;UT.c: 83: verificaUSB();
  2908  0017D6  EC81  F023         	call	_verificaUSB	;wreg free
  2909                           
  2910                           ;UT.c: 95: struct
  2911                           ;UT.c: 96: {
  2912                           ;UT.c: 97: uint8_t nivelL :8;
  2913                           ;UT.c: 98: uint8_t nivelH :7;
  2914                           ;UT.c: 99: uint8_t horimetroLigado :1;
  2915                           ;UT.c: 100: uint8_t vazaoAcumuladaB0;
  2916                           ;UT.c: 101: uint8_t vazaoAcumuladaB1;
  2917                           ;UT.c: 102: uint8_t vazaoAcumuladaB2;
  2918                           ;UT.c: 103: uint8_t horimetroB0;
  2919                           ;UT.c: 104: uint8_t horimetroB1;
  2920                           ;UT.c: 105: uint8_t horimetroB2;
  2921                           ;UT.c: 106: uint8_t vazaoInstantanea;
  2922                           ;UT.c: 107: } dadoPoco;
  2923                           ;UT.c: 109: putch(0x55);
  2924  0017DA  0E55               	movlw	85
  2925  0017DC  EC0C  F025         	call	_putch
  2926                           
  2927                           ;UT.c: 148: uint8_t statusLoRaWan=JoinLoRaWan();
  2928  0017E0  EC2F  F023         	call	_JoinLoRaWan	;wreg free
  2929  0017E4  0101               	movlb	1	; () banked
  2930  0017E6  6FCF               	movwf	main@statusLoRaWan& (0+255),b
  2931  0017E8                     
  2932                           ;UT.c: 154: {
  2933                           ;UT.c: 155: uint32_t tempo=millis();
  2934                           
  2935                           ; BSR set to: 1
  2936  0017E8  EC69  F024         	call	_millis	;wreg free
  2937  0017EC  C060  F1D1         	movff	?_millis,main@tempo
  2938  0017F0  C061  F1D2         	movff	?_millis+1,main@tempo+1
  2939  0017F4  C062  F1D3         	movff	?_millis+2,main@tempo+2
  2940  0017F8  C063  F1D4         	movff	?_millis+3,main@tempo+3
  2941                           
  2942                           ;UT.c: 156: pisca ^= 1;
  2943  0017FC  0E01               	movlw	1
  2944  0017FE  0101               	movlb	1	; () banked
  2945  001800  1BE4               	xorwf	main@pisca& (0+255),f,b
  2946                           
  2947                           ; BSR set to: 1
  2948                           ;UT.c: 157: PORTEbits.RE2 = pisca;
  2949  001802  B1E4               	btfsc	main@pisca& (0+255),0,b
  2950  001804  D002               	bra	u9145
  2951  001806  9484               	bcf	3972,2,c	;volatile
  2952  001808  D001               	bra	u9146
  2953  00180A                     u9145:
  2954  00180A  8484               	bsf	3972,2,c	;volatile
  2955  00180C                     u9146:
  2956                           
  2957                           ;UT.c: 158: uint16_t nivelPoco=(uint16_t)(le4a20()*1000.0);
  2958  00180C  EC7C  F00E         	call	_le4a20	;wreg free
  2959  001810  C09E  F1D5         	movff	?_le4a20,_main$5648
  2960  001814  C09F  F1D6         	movff	?_le4a20+1,_main$5648+1
  2961  001818  C0A0  F1D7         	movff	?_le4a20+2,_main$5648+2
  2962                           
  2963                           ;UT.c: 158: uint16_t nivelPoco=(uint16_t)(le4a20()*1000.0);
  2964  00181C  0E00               	movlw	0
  2965  00181E  0100               	movlb	0	; () banked
  2966  001820  6F83               	movwf	___ftmul@f2& (0+255),b
  2967  001822  0E7A               	movlw	122
  2968  001824  6F84               	movwf	(___ftmul@f2+1)& (0+255),b
  2969  001826  0E44               	movlw	68
  2970  001828  6F85               	movwf	(___ftmul@f2+2)& (0+255),b
  2971  00182A  C1D5  F080         	movff	_main$5648,___ftmul@f1
  2972  00182E  C1D6  F081         	movff	_main$5648+1,___ftmul@f1+1
  2973  001832  C1D7  F082         	movff	_main$5648+2,___ftmul@f1+2
  2974  001836  EC7C  F018         	call	___ftmul	;wreg free
  2975  00183A  C080  F0B8         	movff	?___ftmul,___fttol@f1
  2976  00183E  C081  F0B9         	movff	?___ftmul+1,___fttol@f1+1
  2977  001842  C082  F0BA         	movff	?___ftmul+2,___fttol@f1+2
  2978  001846  EC00  F018         	call	___fttol	;wreg free
  2979  00184A  C0B8  F1E0         	movff	?___fttol,main@nivelPoco
  2980  00184E  C0B9  F1E1         	movff	?___fttol+1,main@nivelPoco+1
  2981                           
  2982                           ;UT.c: 159: leMedidas();
  2983  001852  EC77  F020         	call	_leMedidas	;wreg free
  2984                           
  2985                           ;UT.c: 169: dadoPoco.nivelL=nivelPoco;
  2986  001856  C1E0  F1E5         	movff	main@nivelPoco,main@dadoPoco
  2987                           
  2988                           ;UT.c: 170: dadoPoco.nivelH=nivelPoco>>8;
  2989  00185A  C1E0  F0FC         	movff	main@nivelPoco,??_main
  2990  00185E  C1E1  F0FD         	movff	main@nivelPoco+1,??_main+1
  2991  001862  C0FD  F0FC         	movff	??_main+1,??_main
  2992  001866  0100               	movlb	0	; () banked
  2993  001868  6BFD               	clrf	(??_main+1)& (0+255),b
  2994  00186A  0101               	movlb	1	; () banked
  2995  00186C  51E6               	movf	(main@dadoPoco+1)& (0+255),w,b
  2996  00186E  0100               	movlb	0	; () banked
  2997  001870  19FC               	xorwf	??_main& (0+255),w,b
  2998  001872  0B80               	andlw	-128
  2999  001874  19FC               	xorwf	??_main& (0+255),w,b
  3000  001876  0101               	movlb	1	; () banked
  3001  001878  6FE6               	movwf	(main@dadoPoco+1)& (0+255),b
  3002                           
  3003                           ; BSR set to: 1
  3004                           ;UT.c: 171: dadoPoco.horimetroLigado=horimetroLigadoMedido;
  3005  00187A  0102               	movlb	2	; () banked
  3006  00187C  B15C               	btfsc	_horimetroLigadoMedido& (0+255),0,b
  3007  00187E  D003               	bra	u9155
  3008  001880  0101               	movlb	1	; () banked
  3009  001882  9FE6               	bcf	(main@dadoPoco+1)& (0+255),7,b
  3010  001884  D002               	bra	u9156
  3011  001886                     u9155:
  3012  001886  0101               	movlb	1	; () banked
  3013  001888  8FE6               	bsf	(main@dadoPoco+1)& (0+255),7,b
  3014  00188A                     u9156:
  3015                           
  3016                           ; BSR set to: 1
  3017                           ;UT.c: 172: dadoPoco.vazaoAcumuladaB0=vazaoAcumuladaMedido;
  3018  00188A  C22C  F1E7         	movff	_vazaoAcumuladaMedido,main@dadoPoco+2
  3019                           
  3020                           ; BSR set to: 1
  3021                           ;UT.c: 173: dadoPoco.vazaoAcumuladaB1=vazaoAcumuladaMedido >> 8;
  3022  00188E  C22D  F1E8         	movff	_vazaoAcumuladaMedido+1,main@dadoPoco+3
  3023                           
  3024                           ; BSR set to: 1
  3025                           ;UT.c: 174: dadoPoco.vazaoAcumuladaB2=vazaoAcumuladaMedido >> 16;
  3026  001892  C22E  F1E9         	movff	_vazaoAcumuladaMedido+2,main@dadoPoco+4
  3027                           
  3028                           ; BSR set to: 1
  3029                           ;UT.c: 175: dadoPoco.horimetroB0=horimetroMedido;
  3030  001896  C228  F1EA         	movff	_horimetroMedido,main@dadoPoco+5
  3031                           
  3032                           ; BSR set to: 1
  3033                           ;UT.c: 176: dadoPoco.horimetroB1=horimetroMedido >> 8;
  3034  00189A  C229  F1EB         	movff	_horimetroMedido+1,main@dadoPoco+6
  3035                           
  3036                           ; BSR set to: 1
  3037                           ;UT.c: 177: dadoPoco.horimetroB2=horimetroMedido >> 16;
  3038  00189E  C22A  F1EC         	movff	_horimetroMedido+2,main@dadoPoco+7
  3039                           
  3040                           ; BSR set to: 1
  3041                           ;UT.c: 178: dadoPoco.vazaoInstantanea=vazaoInstantaneaMedido;
  3042  0018A2  C250  F1ED         	movff	_vazaoInstantaneaMedido,main@dadoPoco+8
  3043                           
  3044                           ; BSR set to: 1
  3045                           ;UT.c: 193: uint8_t resp=TxLoRaWan(0, 1, (const uint8_t*)&dadoPoco, sizeof(dadoPoco));
  3046  0018A6  0E01               	movlw	1
  3047  0018A8  0100               	movlb	0	; () banked
  3048  0018AA  6FF7               	movwf	TxLoRaWan@porta& (0+255),b
  3049  0018AC  0EE5               	movlw	low main@dadoPoco
  3050  0018AE  6FF8               	movwf	TxLoRaWan@data& (0+255),b
  3051  0018B0  0E01               	movlw	high main@dadoPoco
  3052  0018B2  6FF9               	movwf	(TxLoRaWan@data+1)& (0+255),b
  3053  0018B4  0E09               	movlw	9
  3054  0018B6  6FFA               	movwf	TxLoRaWan@tamData& (0+255),b
  3055  0018B8  0E00               	movlw	0
  3056  0018BA  ECEB  F014         	call	_TxLoRaWan
  3057  0018BE  0101               	movlb	1	; () banked
  3058  0018C0  6FD0               	movwf	main@resp& (0+255),b
  3059                           
  3060                           ; BSR set to: 1
  3061                           ;UT.c: 197: if (verificaUSB() && (cdc_trf_state == 0))
  3062  0018C2  EC81  F023         	call	_verificaUSB	;wreg free
  3063                           
  3064                           ;UT.c: 228: }
  3065                           ;UT.c: 231: uint32_t deltaTempo=(millis()-tempo);
  3066                           
  3067                           ;UT.c: 198: {
  3068  0018C6  C1D1  F0FC         	movff	main@tempo,??_main
  3069  0018CA  C1D2  F0FD         	movff	main@tempo+1,??_main+1
  3070  0018CE  C1D3  F0FE         	movff	main@tempo+2,??_main+2
  3071  0018D2  C1D4  F0FF         	movff	main@tempo+3,??_main+3
  3072  0018D6  0100               	movlb	0	; () banked
  3073  0018D8  1FFC               	comf	??_main& (0+255),f,b
  3074  0018DA  1FFD               	comf	(??_main+1)& (0+255),f,b
  3075  0018DC  1FFE               	comf	(??_main+2)& (0+255),f,b
  3076  0018DE  1FFF               	comf	(??_main+3)& (0+255),f,b
  3077  0018E0  2BFC               	incf	??_main& (0+255),f,b
  3078  0018E2  0E00               	movlw	0
  3079  0018E4  23FD               	addwfc	(??_main+1)& (0+255),f,b
  3080  0018E6  23FE               	addwfc	(??_main+2)& (0+255),f,b
  3081  0018E8  23FF               	addwfc	(??_main+3)& (0+255),f,b
  3082  0018EA  EC69  F024         	call	_millis	;wreg free
  3083  0018EE  0100               	movlb	0	; () banked
  3084  0018F0  51FC               	movf	??_main& (0+255),w,b
  3085  0018F2  2560               	addwf	?_millis& (0+255),w,b
  3086  0018F4  0101               	movlb	1	; () banked
  3087  0018F6  6FDC               	movwf	main@deltaTempo& (0+255),b
  3088  0018F8  0100               	movlb	0	; () banked
  3089  0018FA  51FD               	movf	(??_main+1)& (0+255),w,b
  3090  0018FC  2161               	addwfc	(?_millis+1)& (0+255),w,b
  3091  0018FE  0101               	movlb	1	; () banked
  3092  001900  6FDD               	movwf	(main@deltaTempo+1)& (0+255),b
  3093  001902  0100               	movlb	0	; () banked
  3094  001904  51FE               	movf	(??_main+2)& (0+255),w,b
  3095  001906  2162               	addwfc	(?_millis+2)& (0+255),w,b
  3096  001908  0101               	movlb	1	; () banked
  3097  00190A  6FDE               	movwf	(main@deltaTempo+2)& (0+255),b
  3098  00190C  0100               	movlb	0	; () banked
  3099  00190E  51FF               	movf	(??_main+3)& (0+255),w,b
  3100  001910  2163               	addwfc	(?_millis+3)& (0+255),w,b
  3101  001912  0101               	movlb	1	; () banked
  3102  001914  6FDF               	movwf	(main@deltaTempo+3)& (0+255),b
  3103                           
  3104                           ; BSR set to: 1
  3105                           ;UT.c: 232: uint32_t tempoTimeOut=30000-deltaTempo;
  3106  001916  C1DC  F0FC         	movff	main@deltaTempo,??_main
  3107  00191A  C1DD  F0FD         	movff	main@deltaTempo+1,??_main+1
  3108  00191E  C1DE  F0FE         	movff	main@deltaTempo+2,??_main+2
  3109  001922  C1DF  F0FF         	movff	main@deltaTempo+3,??_main+3
  3110  001926  0100               	movlb	0	; () banked
  3111  001928  1FFC               	comf	??_main& (0+255),f,b
  3112  00192A  1FFD               	comf	(??_main+1)& (0+255),f,b
  3113  00192C  1FFE               	comf	(??_main+2)& (0+255),f,b
  3114  00192E  1FFF               	comf	(??_main+3)& (0+255),f,b
  3115  001930  2BFC               	incf	??_main& (0+255),f,b
  3116  001932  0E00               	movlw	0
  3117  001934  23FD               	addwfc	(??_main+1)& (0+255),f,b
  3118  001936  23FE               	addwfc	(??_main+2)& (0+255),f,b
  3119  001938  23FF               	addwfc	(??_main+3)& (0+255),f,b
  3120  00193A  0E30               	movlw	48
  3121  00193C  25FC               	addwf	??_main& (0+255),w,b
  3122  00193E  0101               	movlb	1	; () banked
  3123  001940  6FD8               	movwf	main@tempoTimeOut& (0+255),b
  3124  001942  0E75               	movlw	117
  3125  001944  0100               	movlb	0	; () banked
  3126  001946  21FD               	addwfc	(??_main+1)& (0+255),w,b
  3127  001948  0101               	movlb	1	; () banked
  3128  00194A  6FD9               	movwf	(main@tempoTimeOut+1)& (0+255),b
  3129  00194C  0E00               	movlw	0
  3130  00194E  0100               	movlb	0	; () banked
  3131  001950  21FE               	addwfc	(??_main+2)& (0+255),w,b
  3132  001952  0101               	movlb	1	; () banked
  3133  001954  6FDA               	movwf	(main@tempoTimeOut+2)& (0+255),b
  3134  001956  0E00               	movlw	0
  3135  001958  0100               	movlb	0	; () banked
  3136  00195A  21FF               	addwfc	(??_main+3)& (0+255),w,b
  3137  00195C  0101               	movlb	1	; () banked
  3138  00195E  6FDB               	movwf	(main@tempoTimeOut+3)& (0+255),b
  3139                           
  3140                           ; BSR set to: 1
  3141                           ;UT.c: 233: if (deltaTempo>30000)
  3142  001960  51DF               	movf	(main@deltaTempo+3)& (0+255),w,b
  3143  001962  11DE               	iorwf	(main@deltaTempo+2)& (0+255),w,b
  3144  001964  E106               	bnz	u9160
  3145  001966  0E31               	movlw	49
  3146  001968  5DDC               	subwf	main@deltaTempo& (0+255),w,b
  3147  00196A  0E75               	movlw	117
  3148  00196C  59DD               	subwfb	(main@deltaTempo+1)& (0+255),w,b
  3149  00196E  A0D8               	btfss	status,0,c
  3150  001970  D008               	goto	l956
  3151  001972                     u9160:
  3152                           
  3153                           ; BSR set to: 1
  3154                           ;UT.c: 234: {
  3155                           ;UT.c: 235: tempoTimeOut=0;
  3156  001972  0E00               	movlw	0
  3157  001974  6FD8               	movwf	main@tempoTimeOut& (0+255),b
  3158  001976  0E00               	movlw	0
  3159  001978  6FD9               	movwf	(main@tempoTimeOut+1)& (0+255),b
  3160  00197A  0E00               	movlw	0
  3161  00197C  6FDA               	movwf	(main@tempoTimeOut+2)& (0+255),b
  3162  00197E  0E00               	movlw	0
  3163  001980  6FDB               	movwf	(main@tempoTimeOut+3)& (0+255),b
  3164  001982                     l956:
  3165                           
  3166                           ; BSR set to: 1
  3167                           ;UT.c: 236: }
  3168                           ;UT.c: 238: delay(tempoTimeOut);
  3169                           
  3170                           ; BSR set to: 1
  3171  001982  C1D8  F087         	movff	main@tempoTimeOut,delay@time
  3172  001986  C1D9  F088         	movff	main@tempoTimeOut+1,delay@time+1
  3173  00198A  C1DA  F089         	movff	main@tempoTimeOut+2,delay@time+2
  3174  00198E  C1DB  F08A         	movff	main@tempoTimeOut+3,delay@time+3
  3175  001992  ECC7  F01F         	call	_delay	;wreg free
  3176  001996  D728               	goto	l954
  3177  001998                     __end_of_main:
  3178                           	opt stack 0
  3179                           tblptru	equ	0xFF8
  3180                           tblptrh	equ	0xFF7
  3181                           tblptrl	equ	0xFF6
  3182                           tablat	equ	0xFF5
  3183                           postinc0	equ	0xFEE
  3184                           wreg	equ	0xFE8
  3185                           postdec1	equ	0xFE5
  3186                           fsr1l	equ	0xFE1
  3187                           status	equ	0xFD8
  3188                           
  3189 ;; *************** function _setup_uart *****************
  3190 ;; Defined at:
  3191 ;;		line 13 in file "uart/uart.c"
  3192 ;; Parameters:    Size  Location     Type
  3193 ;;  baudRate        4   13[BANK0 ] unsigned long 
  3194 ;; Auto vars:     Size  Location     Type
  3195 ;;  brg             4   17[BANK0 ] unsigned long 
  3196 ;; Return value:  Size  Location     Type
  3197 ;;                  1    wreg      void 
  3198 ;; Registers used:
  3199 ;;		wreg, status,2, status,0, cstack
  3200 ;; Tracked objects:
  3201 ;;		On entry : 0/0
  3202 ;;		On exit  : 0/0
  3203 ;;		Unchanged: 0/0
  3204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3205 ;;      Params:         0       4       0       0       0       0       0       0       0
  3206 ;;      Locals:         0       4       0       0       0       0       0       0       0
  3207 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3208 ;;      Totals:         0       8       0       0       0       0       0       0       0
  3209 ;;Total ram usage:        8 bytes
  3210 ;; Hardware stack levels used:    1
  3211 ;; Hardware stack levels required when called:   11
  3212 ;; This function calls:
  3213 ;;		___lldiv
  3214 ;; This function is called by:
  3215 ;;		_main
  3216 ;; This function uses a non-reentrant model
  3217 ;;
  3218                           
  3219                           	psect	text1
  3220  0038D6                     __ptext1:
  3221                           	opt stack 0
  3222  0038D6                     _setup_uart:
  3223                           	opt stack 19
  3224                           
  3225                           ;uart.c: 15: uint32_t brg;
  3226                           ;uart.c: 17: PORTCbits.RC6=1;
  3227                           
  3228                           ;incstack = 0
  3229  0038D6  8C82               	bsf	3970,6,c	;volatile
  3230                           
  3231                           ;uart.c: 18: TRISCbits.RC6=0;
  3232  0038D8  9C94               	bcf	3988,6,c	;volatile
  3233                           
  3234                           ;uart.c: 20: PORTCbits.RC7=1;
  3235  0038DA  8E82               	bsf	3970,7,c	;volatile
  3236                           
  3237                           ;uart.c: 21: TRISCbits.RC7=1;
  3238  0038DC  8E94               	bsf	3988,7,c	;volatile
  3239                           
  3240                           ;uart.c: 23: TXSTAbits.BRGH=1;
  3241  0038DE  84AC               	bsf	4012,2,c	;volatile
  3242                           
  3243                           ;uart.c: 24: BAUDCONbits.BRG16=1;
  3244  0038E0  86B8               	bsf	4024,3,c	;volatile
  3245                           
  3246                           ;uart.c: 25: brg = ((48000000*10/4)/(baudRate)-5);
  3247  0038E2  0E00               	movlw	0
  3248  0038E4  0100               	movlb	0	; () banked
  3249  0038E6  6F60               	movwf	___lldiv@dividend& (0+255),b
  3250  0038E8  0E0E               	movlw	14
  3251  0038EA  6F61               	movwf	(___lldiv@dividend+1)& (0+255),b
  3252  0038EC  0E27               	movlw	39
  3253  0038EE  6F62               	movwf	(___lldiv@dividend+2)& (0+255),b
  3254  0038F0  0E07               	movlw	7
  3255  0038F2  6F63               	movwf	(___lldiv@dividend+3)& (0+255),b
  3256  0038F4  C06D  F064         	movff	setup_uart@baudRate,___lldiv@divisor
  3257  0038F8  C06E  F065         	movff	setup_uart@baudRate+1,___lldiv@divisor+1
  3258  0038FC  C06F  F066         	movff	setup_uart@baudRate+2,___lldiv@divisor+2
  3259  003900  C070  F067         	movff	setup_uart@baudRate+3,___lldiv@divisor+3
  3260  003904  EC03  F01F         	call	___lldiv	;wreg free
  3261  003908  0EFB               	movlw	251
  3262  00390A  0100               	movlb	0	; () banked
  3263  00390C  2560               	addwf	?___lldiv& (0+255),w,b
  3264  00390E  6F71               	movwf	setup_uart@brg& (0+255),b
  3265  003910  0EFF               	movlw	255
  3266  003912  2161               	addwfc	(?___lldiv+1)& (0+255),w,b
  3267  003914  6F72               	movwf	(setup_uart@brg+1)& (0+255),b
  3268  003916  0EFF               	movlw	255
  3269  003918  2162               	addwfc	(?___lldiv+2)& (0+255),w,b
  3270  00391A  6F73               	movwf	(setup_uart@brg+2)& (0+255),b
  3271  00391C  0EFF               	movlw	255
  3272  00391E  2163               	addwfc	(?___lldiv+3)& (0+255),w,b
  3273  003920  6F74               	movwf	(setup_uart@brg+3)& (0+255),b
  3274                           
  3275                           ;uart.c: 26: brg /= 10;
  3276  003922  C071  F060         	movff	setup_uart@brg,___lldiv@dividend
  3277  003926  C072  F061         	movff	setup_uart@brg+1,___lldiv@dividend+1
  3278  00392A  C073  F062         	movff	setup_uart@brg+2,___lldiv@dividend+2
  3279  00392E  C074  F063         	movff	setup_uart@brg+3,___lldiv@dividend+3
  3280  003932  0E0A               	movlw	10
  3281  003934  6F64               	movwf	___lldiv@divisor& (0+255),b
  3282  003936  0E00               	movlw	0
  3283  003938  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  3284  00393A  0E00               	movlw	0
  3285  00393C  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  3286  00393E  0E00               	movlw	0
  3287  003940  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  3288  003942  EC03  F01F         	call	___lldiv	;wreg free
  3289  003946  C060  F071         	movff	?___lldiv,setup_uart@brg
  3290  00394A  C061  F072         	movff	?___lldiv+1,setup_uart@brg+1
  3291  00394E  C062  F073         	movff	?___lldiv+2,setup_uart@brg+2
  3292  003952  C063  F074         	movff	?___lldiv+3,setup_uart@brg+3
  3293                           
  3294                           ;uart.c: 27: SPBRG=(uint8_t)brg;
  3295  003956  C071  FFAF         	movff	setup_uart@brg,4015	;volatile
  3296                           
  3297                           ;uart.c: 28: SPBRGH=(uint8_t)(brg >> 8);
  3298  00395A  C072  FFB0         	movff	setup_uart@brg+1,4016	;volatile
  3299                           
  3300                           ;uart.c: 30: TXSTAbits.SYNC=0;
  3301  00395E  98AC               	bcf	4012,4,c	;volatile
  3302                           
  3303                           ;uart.c: 31: TXSTAbits.SENDB=0;
  3304  003960  96AC               	bcf	4012,3,c	;volatile
  3305                           
  3306                           ;uart.c: 32: RCSTAbits.SPEN=1;
  3307  003962  8EAB               	bsf	4011,7,c	;volatile
  3308                           
  3309                           ;uart.c: 34: BAUDCONbits.TXCKP=0;
  3310  003964  98B8               	bcf	4024,4,c	;volatile
  3311                           
  3312                           ;uart.c: 35: BAUDCONbits.RXDTP=0;
  3313  003966  9AB8               	bcf	4024,5,c	;volatile
  3314                           
  3315                           ;uart.c: 36: BAUDCONbits.ABDEN=0;
  3316  003968  90B8               	bcf	4024,0,c	;volatile
  3317                           
  3318                           ;uart.c: 37: TXSTAbits.TX9=0;
  3319  00396A  9CAC               	bcf	4012,6,c	;volatile
  3320                           
  3321                           ;uart.c: 38: RCSTAbits.RX9=0;
  3322  00396C  9CAB               	bcf	4011,6,c	;volatile
  3323                           
  3324                           ;uart.c: 40: RCSTAbits.CREN=1;
  3325  00396E  88AB               	bsf	4011,4,c	;volatile
  3326                           
  3327                           ;uart.c: 41: TXSTAbits.TXEN=1;
  3328  003970  8AAC               	bsf	4012,5,c	;volatile
  3329                           
  3330                           ;uart.c: 43: RCIE=1;
  3331  003972  8A9D               	bsf	3997,5,c	;volatile
  3332  003974  0012               	return		;funcret
  3333  003976                     __end_of_setup_uart:
  3334                           	opt stack 0
  3335                           tblptru	equ	0xFF8
  3336                           tblptrh	equ	0xFF7
  3337                           tblptrl	equ	0xFF6
  3338                           tablat	equ	0xFF5
  3339                           postinc0	equ	0xFEE
  3340                           wreg	equ	0xFE8
  3341                           postdec1	equ	0xFE5
  3342                           fsr1l	equ	0xFE1
  3343                           status	equ	0xFD8
  3344                           
  3345 ;; *************** function _setup_ccp1 *****************
  3346 ;; Defined at:
  3347 ;;		line 27 in file "Timer.c"
  3348 ;; Parameters:    Size  Location     Type
  3349 ;;		None
  3350 ;; Auto vars:     Size  Location     Type
  3351 ;;		None
  3352 ;; Return value:  Size  Location     Type
  3353 ;;                  1    wreg      void 
  3354 ;; Registers used:
  3355 ;;		wreg, status,2
  3356 ;; Tracked objects:
  3357 ;;		On entry : 0/0
  3358 ;;		On exit  : 0/0
  3359 ;;		Unchanged: 0/0
  3360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3361 ;;      Params:         0       0       0       0       0       0       0       0       0
  3362 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3363 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3364 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3365 ;;Total ram usage:        0 bytes
  3366 ;; Hardware stack levels used:    1
  3367 ;; Hardware stack levels required when called:   10
  3368 ;; This function calls:
  3369 ;;		Nothing
  3370 ;; This function is called by:
  3371 ;;		_main
  3372 ;; This function uses a non-reentrant model
  3373 ;;
  3374                           
  3375                           	psect	text2
  3376  0045E6                     __ptext2:
  3377                           	opt stack 0
  3378  0045E6                     _setup_ccp1:
  3379                           	opt stack 20
  3380                           
  3381                           ;Timer.c: 29: GIEH = 0;
  3382                           
  3383                           ;incstack = 0
  3384  0045E6  9EF2               	bcf	intcon,7,c	;volatile
  3385                           
  3386                           ;Timer.c: 30: T3CON=0b10111000;
  3387  0045E8  0EB8               	movlw	184
  3388  0045EA  6EB1               	movwf	4017,c	;volatile
  3389                           
  3390                           ;Timer.c: 31: TMR1H=0x00;
  3391  0045EC  0E00               	movlw	0
  3392  0045EE  6ECF               	movwf	4047,c	;volatile
  3393                           
  3394                           ;Timer.c: 32: TMR1L=0x00;
  3395  0045F0  0E00               	movlw	0
  3396  0045F2  6ECE               	movwf	4046,c	;volatile
  3397                           
  3398                           ;Timer.c: 33: CCPR1H=0x05;
  3399  0045F4  0E05               	movlw	5
  3400  0045F6  6EBF               	movwf	4031,c	;volatile
  3401                           
  3402                           ;Timer.c: 34: CCPR1L=0xDC;
  3403  0045F8  0EDC               	movlw	220
  3404  0045FA  6EBE               	movwf	4030,c	;volatile
  3405                           
  3406                           ;Timer.c: 35: ticks=0;
  3407  0045FC  0E00               	movlw	0
  3408  0045FE  0102               	movlb	2	; () banked
  3409  004600  6F24               	movwf	_ticks& (0+255),b	;volatile
  3410  004602  0E00               	movlw	0
  3411  004604  6F25               	movwf	(_ticks+1)& (0+255),b	;volatile
  3412  004606  0E00               	movlw	0
  3413  004608  6F26               	movwf	(_ticks+2)& (0+255),b	;volatile
  3414  00460A  0E00               	movlw	0
  3415  00460C  6F27               	movwf	(_ticks+3)& (0+255),b	;volatile
  3416                           
  3417                           ; BSR set to: 2
  3418                           ;Timer.c: 37: CCP1IF=0;
  3419  00460E  949E               	bcf	3998,2,c	;volatile
  3420                           
  3421                           ;Timer.c: 38: T1CON=0b11110001;
  3422  004610  0EF1               	movlw	241
  3423  004612  6ECD               	movwf	4045,c	;volatile
  3424                           
  3425                           ;Timer.c: 39: CCP1CON = 0b00001011;
  3426  004614  0E0B               	movlw	11
  3427  004616  6EBD               	movwf	4029,c	;volatile
  3428                           
  3429                           ; BSR set to: 2
  3430                           ;Timer.c: 40: CCP1IE=1;
  3431  004618  849D               	bsf	3997,2,c	;volatile
  3432                           
  3433                           ; BSR set to: 2
  3434                           ;Timer.c: 41: IPR1bits.CCP1IP=1;
  3435  00461A  849F               	bsf	3999,2,c	;volatile
  3436                           
  3437                           ; BSR set to: 2
  3438                           ;Timer.c: 42: RCONbits.IPEN = 1;
  3439  00461C  8ED0               	bsf	4048,7,c	;volatile
  3440                           
  3441                           ; BSR set to: 2
  3442                           ;Timer.c: 43: GIEH = 1;
  3443  00461E  8EF2               	bsf	intcon,7,c	;volatile
  3444                           
  3445                           ; BSR set to: 2
  3446  004620  0012               	return		;funcret
  3447  004622                     __end_of_setup_ccp1:
  3448                           	opt stack 0
  3449                           tblptru	equ	0xFF8
  3450                           tblptrh	equ	0xFF7
  3451                           tblptrl	equ	0xFF6
  3452                           tablat	equ	0xFF5
  3453                           intcon	equ	0xFF2
  3454                           postinc0	equ	0xFEE
  3455                           wreg	equ	0xFE8
  3456                           postdec1	equ	0xFE5
  3457                           fsr1l	equ	0xFE1
  3458                           status	equ	0xFD8
  3459                           
  3460 ;; *************** function _setup_AD *****************
  3461 ;; Defined at:
  3462 ;;		line 10 in file "AD.c"
  3463 ;; Parameters:    Size  Location     Type
  3464 ;;		None
  3465 ;; Auto vars:     Size  Location     Type
  3466 ;;		None
  3467 ;; Return value:  Size  Location     Type
  3468 ;;                  1    wreg      void 
  3469 ;; Registers used:
  3470 ;;		wreg, status,2
  3471 ;; Tracked objects:
  3472 ;;		On entry : 0/0
  3473 ;;		On exit  : 0/0
  3474 ;;		Unchanged: 0/0
  3475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3476 ;;      Params:         0       0       0       0       0       0       0       0       0
  3477 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3478 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3479 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3480 ;;Total ram usage:        0 bytes
  3481 ;; Hardware stack levels used:    1
  3482 ;; Hardware stack levels required when called:   10
  3483 ;; This function calls:
  3484 ;;		Nothing
  3485 ;; This function is called by:
  3486 ;;		_main
  3487 ;; This function uses a non-reentrant model
  3488 ;;
  3489                           
  3490                           	psect	text3
  3491  0049AA                     __ptext3:
  3492                           	opt stack 0
  3493  0049AA                     _setup_AD:
  3494                           	opt stack 20
  3495                           
  3496                           ;AD.c: 12: ADON=0;
  3497                           
  3498                           ; BSR set to: 2
  3499                           ;incstack = 0
  3500  0049AA  90C2               	bcf	4034,0,c	;volatile
  3501                           
  3502                           ;AD.c: 13: ADCON1=0b00001110;
  3503  0049AC  0E0E               	movlw	14
  3504  0049AE  6EC1               	movwf	4033,c	;volatile
  3505                           
  3506                           ;AD.c: 14: ADCON0=0b00000000;
  3507  0049B0  0E00               	movlw	0
  3508  0049B2  6EC2               	movwf	4034,c	;volatile
  3509                           
  3510                           ;AD.c: 15: ADCON2=0b10111110;
  3511  0049B4  0EBE               	movlw	190
  3512  0049B6  6EC0               	movwf	4032,c	;volatile
  3513                           
  3514                           ;AD.c: 16: ADON=1;
  3515  0049B8  80C2               	bsf	4034,0,c	;volatile
  3516                           
  3517                           ;AD.c: 17: ADIF=0;
  3518  0049BA  9C9E               	bcf	3998,6,c	;volatile
  3519                           
  3520                           ;AD.c: 18: ADIE=0;
  3521  0049BC  9C9D               	bcf	3997,6,c	;volatile
  3522  0049BE  0012               	return		;funcret
  3523  0049C0                     __end_of_setup_AD:
  3524                           	opt stack 0
  3525                           tblptru	equ	0xFF8
  3526                           tblptrh	equ	0xFF7
  3527                           tblptrl	equ	0xFF6
  3528                           tablat	equ	0xFF5
  3529                           intcon	equ	0xFF2
  3530                           postinc0	equ	0xFEE
  3531                           wreg	equ	0xFE8
  3532                           postdec1	equ	0xFE5
  3533                           fsr1l	equ	0xFE1
  3534                           status	equ	0xFD8
  3535                           
  3536 ;; *************** function _leMedidas *****************
  3537 ;; Defined at:
  3538 ;;		line 10 in file "Pulses.c"
  3539 ;; Parameters:    Size  Location     Type
  3540 ;;		None
  3541 ;; Auto vars:     Size  Location     Type
  3542 ;;		None
  3543 ;; Return value:  Size  Location     Type
  3544 ;;                  1    wreg      void 
  3545 ;; Registers used:
  3546 ;;		wreg, status,2, status,0, cstack
  3547 ;; Tracked objects:
  3548 ;;		On entry : 0/0
  3549 ;;		On exit  : 0/0
  3550 ;;		Unchanged: 0/0
  3551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3552 ;;      Params:         0       0       0       0       0       0       0       0       0
  3553 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3554 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3555 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3556 ;;Total ram usage:        0 bytes
  3557 ;; Hardware stack levels used:    1
  3558 ;; Hardware stack levels required when called:   11
  3559 ;; This function calls:
  3560 ;;		___lldiv
  3561 ;; This function is called by:
  3562 ;;		_main
  3563 ;; This function uses a non-reentrant model
  3564 ;;
  3565                           
  3566                           	psect	text4
  3567  0040EE                     __ptext4:
  3568                           	opt stack 0
  3569  0040EE                     _leMedidas:
  3570                           	opt stack 19
  3571                           
  3572                           ;Pulses.c: 12: CCP1IE=0;
  3573                           
  3574                           ;incstack = 0
  3575  0040EE  949D               	bcf	3997,2,c	;volatile
  3576                           
  3577                           ;Pulses.c: 13: vazaoAcumuladaMedido=freqPulses;
  3578  0040F0  C047  F22C         	movff	_freqPulses,_vazaoAcumuladaMedido	;volatile
  3579  0040F4  C048  F22D         	movff	_freqPulses+1,_vazaoAcumuladaMedido+1	;volatile
  3580  0040F8  C049  F22E         	movff	_freqPulses+2,_vazaoAcumuladaMedido+2	;volatile
  3581  0040FC  C04A  F22F         	movff	_freqPulses+3,_vazaoAcumuladaMedido+3	;volatile
  3582                           
  3583                           ;Pulses.c: 14: horimetroMedido=tempoHorimetro;
  3584  004100  C220  F228         	movff	_tempoHorimetro,_horimetroMedido	;volatile
  3585  004104  C221  F229         	movff	_tempoHorimetro+1,_horimetroMedido+1	;volatile
  3586  004108  C222  F22A         	movff	_tempoHorimetro+2,_horimetroMedido+2	;volatile
  3587  00410C  C223  F22B         	movff	_tempoHorimetro+3,_horimetroMedido+3	;volatile
  3588                           
  3589                           ;Pulses.c: 15: horimetroLigadoMedido=horimetroLigado;
  3590  004110  C059  F25C         	movff	_horimetroLigado,_horimetroLigadoMedido	;volatile
  3591                           
  3592                           ;Pulses.c: 16: vazaoInstantaneaMedido=vazaoInstantanea;
  3593  004114  C248  F250         	movff	_vazaoInstantanea,_vazaoInstantaneaMedido	;volatile
  3594  004118  C249  F251         	movff	_vazaoInstantanea+1,_vazaoInstantaneaMedido+1	;volatile
  3595                           
  3596                           ;Pulses.c: 17: CCP1IE=1;
  3597  00411C  849D               	bsf	3997,2,c	;volatile
  3598                           
  3599                           ;Pulses.c: 19: vazaoAcumuladaMedido=vazaoAcumuladaMedido / 100;
  3600  00411E  C22C  F060         	movff	_vazaoAcumuladaMedido,___lldiv@dividend
  3601  004122  C22D  F061         	movff	_vazaoAcumuladaMedido+1,___lldiv@dividend+1
  3602  004126  C22E  F062         	movff	_vazaoAcumuladaMedido+2,___lldiv@dividend+2
  3603  00412A  C22F  F063         	movff	_vazaoAcumuladaMedido+3,___lldiv@dividend+3
  3604  00412E  0E64               	movlw	100
  3605  004130  0100               	movlb	0	; () banked
  3606  004132  6F64               	movwf	___lldiv@divisor& (0+255),b
  3607  004134  0E00               	movlw	0
  3608  004136  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  3609  004138  0E00               	movlw	0
  3610  00413A  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  3611  00413C  0E00               	movlw	0
  3612  00413E  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  3613  004140  EC03  F01F         	call	___lldiv	;wreg free
  3614  004144  C060  F22C         	movff	?___lldiv,_vazaoAcumuladaMedido
  3615  004148  C061  F22D         	movff	?___lldiv+1,_vazaoAcumuladaMedido+1
  3616  00414C  C062  F22E         	movff	?___lldiv+2,_vazaoAcumuladaMedido+2
  3617  004150  C063  F22F         	movff	?___lldiv+3,_vazaoAcumuladaMedido+3
  3618  004154  0012               	return		;funcret
  3619  004156                     __end_of_leMedidas:
  3620                           	opt stack 0
  3621                           tblptru	equ	0xFF8
  3622                           tblptrh	equ	0xFF7
  3623                           tblptrl	equ	0xFF6
  3624                           tablat	equ	0xFF5
  3625                           intcon	equ	0xFF2
  3626                           postinc0	equ	0xFEE
  3627                           wreg	equ	0xFE8
  3628                           postdec1	equ	0xFE5
  3629                           fsr1l	equ	0xFE1
  3630                           status	equ	0xFD8
  3631                           
  3632 ;; *************** function _le4a20 *****************
  3633 ;; Defined at:
  3634 ;;		line 89 in file "AD.c"
  3635 ;; Parameters:    Size  Location     Type
  3636 ;;		None
  3637 ;; Auto vars:     Size  Location     Type
  3638 ;;  ad              4   81[BANK0 ] unsigned long 
  3639 ;;  to              4   73[BANK0 ] unsigned long 
  3640 ;;  corrente        3   85[BANK0 ] float 
  3641 ;;  cnt             1   80[BANK0 ] unsigned char 
  3642 ;; Return value:  Size  Location     Type
  3643 ;;                  3   62[BANK0 ] float 
  3644 ;; Registers used:
  3645 ;;		wreg, status,2, status,0, cstack
  3646 ;; Tracked objects:
  3647 ;;		On entry : 0/0
  3648 ;;		On exit  : 0/0
  3649 ;;		Unchanged: 0/0
  3650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3651 ;;      Params:         0       3       0       0       0       0       0       0       0
  3652 ;;      Locals:         0      15       0       0       0       0       0       0       0
  3653 ;;      Temps:          0       8       0       0       0       0       0       0       0
  3654 ;;      Totals:         0      26       0       0       0       0       0       0       0
  3655 ;;Total ram usage:       26 bytes
  3656 ;; Hardware stack levels used:    1
  3657 ;; Hardware stack levels required when called:   12
  3658 ;; This function calls:
  3659 ;;		___ftadd
  3660 ;;		___ftdiv
  3661 ;;		___ftmul
  3662 ;;		___lbtoft
  3663 ;;		___lltoft
  3664 ;;		_leAD
  3665 ;;		_millis
  3666 ;; This function is called by:
  3667 ;;		_main
  3668 ;; This function uses a non-reentrant model
  3669 ;;
  3670                           
  3671                           	psect	text5
  3672  001CF8                     __ptext5:
  3673                           	opt stack 0
  3674  001CF8                     _le4a20:
  3675                           	opt stack 18
  3676                           
  3677                           ;AD.c: 91: float corrente;
  3678                           ;AD.c: 92: uint32_t to=millis();
  3679                           
  3680                           ;incstack = 0
  3681  001CF8  EC69  F024         	call	_millis	;wreg free
  3682  001CFC  C060  F0A9         	movff	?_millis,le4a20@to
  3683  001D00  C061  F0AA         	movff	?_millis+1,le4a20@to+1
  3684  001D04  C062  F0AB         	movff	?_millis+2,le4a20@to+2
  3685  001D08  C063  F0AC         	movff	?_millis+3,le4a20@to+3
  3686                           
  3687                           ;AD.c: 93: uint32_t ad = 0;
  3688  001D0C  0E00               	movlw	0
  3689  001D0E  0100               	movlb	0	; () banked
  3690  001D10  6FB1               	movwf	le4a20@ad& (0+255),b
  3691  001D12  0E00               	movlw	0
  3692  001D14  6FB2               	movwf	(le4a20@ad+1)& (0+255),b
  3693  001D16  0E00               	movlw	0
  3694  001D18  6FB3               	movwf	(le4a20@ad+2)& (0+255),b
  3695  001D1A  0E00               	movlw	0
  3696  001D1C  6FB4               	movwf	(le4a20@ad+3)& (0+255),b
  3697                           
  3698                           ; BSR set to: 0
  3699                           ;AD.c: 94: uint8_t cnt = 0;
  3700  001D1E  0E00               	movlw	0
  3701  001D20  6FB0               	movwf	le4a20@cnt& (0+255),b
  3702                           
  3703                           ;AD.c: 96: while ((millis()-to)<1000)
  3704  001D22  D014               	goto	l1711
  3705  001D24                     
  3706                           ; BSR set to: 0
  3707                           ;AD.c: 97: {
  3708                           ;AD.c: 98: ad += leAD();
  3709                           
  3710                           ; BSR set to: 0
  3711  001D24  EC3F  F020         	call	_leAD	;wreg free
  3712  001D28  0100               	movlb	0	; () banked
  3713  001D2A  5160               	movf	?_leAD& (0+255),w,b
  3714  001D2C  27B1               	addwf	le4a20@ad& (0+255),f,b
  3715  001D2E  5161               	movf	(?_leAD+1)& (0+255),w,b
  3716  001D30  23B2               	addwfc	(le4a20@ad+1)& (0+255),f,b
  3717  001D32  0E00               	movlw	0
  3718  001D34  23B3               	addwfc	(le4a20@ad+2)& (0+255),f,b
  3719  001D36  0E00               	movlw	0
  3720  001D38  23B4               	addwfc	(le4a20@ad+3)& (0+255),f,b
  3721                           
  3722                           ; BSR set to: 0
  3723                           ;AD.c: 99: cnt++;
  3724  001D3A  2BB0               	incf	le4a20@cnt& (0+255),f,b
  3725                           
  3726                           ; BSR set to: 0
  3727                           ;AD.c: 101: _delay((unsigned long)((10)*(48000000/4000.0)));
  3728  001D3C  0E9C               	movlw	156
  3729  001D3E  0100               	movlb	0	; () banked
  3730  001D40  6FA1               	movwf	??_le4a20& (0+255),b
  3731  001D42  0ED7               	movlw	215
  3732  001D44                     u9517:
  3733  001D44  2EE8               	decfsz	wreg,f,c
  3734  001D46  D7FE               	bra	u9517
  3735  001D48  2FA1               	decfsz	??_le4a20& (0+255),f,b
  3736  001D4A  D7FC               	bra	u9517
  3737  001D4C                     l1711:
  3738  001D4C  C0A9  F0A1         	movff	le4a20@to,??_le4a20
  3739  001D50  C0AA  F0A2         	movff	le4a20@to+1,??_le4a20+1
  3740  001D54  C0AB  F0A3         	movff	le4a20@to+2,??_le4a20+2
  3741  001D58  C0AC  F0A4         	movff	le4a20@to+3,??_le4a20+3
  3742  001D5C  0100               	movlb	0	; () banked
  3743  001D5E  1FA1               	comf	??_le4a20& (0+255),f,b
  3744  001D60  1FA2               	comf	(??_le4a20+1)& (0+255),f,b
  3745  001D62  1FA3               	comf	(??_le4a20+2)& (0+255),f,b
  3746  001D64  1FA4               	comf	(??_le4a20+3)& (0+255),f,b
  3747  001D66  2BA1               	incf	??_le4a20& (0+255),f,b
  3748  001D68  0E00               	movlw	0
  3749  001D6A  23A2               	addwfc	(??_le4a20+1)& (0+255),f,b
  3750  001D6C  23A3               	addwfc	(??_le4a20+2)& (0+255),f,b
  3751  001D6E  23A4               	addwfc	(??_le4a20+3)& (0+255),f,b
  3752  001D70  EC69  F024         	call	_millis	;wreg free
  3753  001D74  0100               	movlb	0	; () banked
  3754  001D76  51A1               	movf	??_le4a20& (0+255),w,b
  3755  001D78  2560               	addwf	?_millis& (0+255),w,b
  3756  001D7A  6FA5               	movwf	(??_le4a20+4)& (0+255),b
  3757  001D7C  51A2               	movf	(??_le4a20+1)& (0+255),w,b
  3758  001D7E  2161               	addwfc	(?_millis+1)& (0+255),w,b
  3759  001D80  6FA6               	movwf	(??_le4a20+5)& (0+255),b
  3760  001D82  51A3               	movf	(??_le4a20+2)& (0+255),w,b
  3761  001D84  2162               	addwfc	(?_millis+2)& (0+255),w,b
  3762  001D86  6FA7               	movwf	(??_le4a20+6)& (0+255),b
  3763  001D88  51A4               	movf	(??_le4a20+3)& (0+255),w,b
  3764  001D8A  2163               	addwfc	(?_millis+3)& (0+255),w,b
  3765  001D8C  6FA8               	movwf	(??_le4a20+7)& (0+255),b
  3766  001D8E  51A8               	movf	(??_le4a20+7)& (0+255),w,b
  3767  001D90  11A7               	iorwf	(??_le4a20+6)& (0+255),w,b
  3768  001D92  E106               	bnz	l9385
  3769  001D94  0EE8               	movlw	232
  3770  001D96  5DA5               	subwf	(??_le4a20+4)& (0+255),w,b
  3771  001D98  0E03               	movlw	3
  3772  001D9A  59A6               	subwfb	(??_le4a20+5)& (0+255),w,b
  3773  001D9C  A0D8               	btfss	status,0,c
  3774  001D9E  D7C2               	goto	l1712
  3775  001DA0                     l9385:
  3776                           
  3777                           ; BSR set to: 0
  3778                           ;AD.c: 102: }
  3779                           ;AD.c: 103: if (ad==0)
  3780  001DA0  51B1               	movf	le4a20@ad& (0+255),w,b
  3781  001DA2  11B2               	iorwf	(le4a20@ad+1)& (0+255),w,b
  3782  001DA4  11B3               	iorwf	(le4a20@ad+2)& (0+255),w,b
  3783  001DA6  11B4               	iorwf	(le4a20@ad+3)& (0+255),w,b
  3784  001DA8  A4D8               	btfss	status,2,c
  3785  001DAA  D007               	goto	l1714
  3786                           
  3787                           ; BSR set to: 0
  3788                           ;AD.c: 104: return 0.00;
  3789  001DAC  0E00               	movlw	0
  3790  001DAE  6F9E               	movwf	?_le4a20& (0+255),b
  3791  001DB0  0E00               	movlw	0
  3792  001DB2  6F9F               	movwf	(?_le4a20+1)& (0+255),b
  3793  001DB4  0E00               	movlw	0
  3794  001DB6  6FA0               	movwf	(?_le4a20+2)& (0+255),b
  3795                           
  3796                           ; BSR set to: 0
  3797  001DB8  0012               	return	
  3798  001DBA                     l1714:
  3799                           
  3800                           ; BSR set to: 0
  3801                           ;AD.c: 106: corrente = ad / (float)cnt;
  3802                           
  3803                           ; BSR set to: 0
  3804  001DBA  C0B1  F068         	movff	le4a20@ad,___lltoft@c
  3805  001DBE  C0B2  F069         	movff	le4a20@ad+1,___lltoft@c+1
  3806  001DC2  C0B3  F06A         	movff	le4a20@ad+2,___lltoft@c+2
  3807  001DC6  C0B4  F06B         	movff	le4a20@ad+3,___lltoft@c+3
  3808  001DCA  EC44  F021         	call	___lltoft	;wreg free
  3809  001DCE  C068  F08F         	movff	?___lltoft,___ftdiv@f1
  3810  001DD2  C069  F090         	movff	?___lltoft+1,___ftdiv@f1+1
  3811  001DD6  C06A  F091         	movff	?___lltoft+2,___ftdiv@f1+2
  3812  001DDA  0100               	movlb	0	; () banked
  3813  001DDC  51B0               	movf	le4a20@cnt& (0+255),w,b
  3814  001DDE  ECF5  F023         	call	___lbtoft
  3815  001DE2  C068  F092         	movff	?___lbtoft,___ftdiv@f2
  3816  001DE6  C069  F093         	movff	?___lbtoft+1,___ftdiv@f2+1
  3817  001DEA  C06A  F094         	movff	?___lbtoft+2,___ftdiv@f2+2
  3818  001DEE  ECF7  F018         	call	___ftdiv	;wreg free
  3819  001DF2  C08F  F0B5         	movff	?___ftdiv,le4a20@corrente
  3820  001DF6  C090  F0B6         	movff	?___ftdiv+1,le4a20@corrente+1
  3821  001DFA  C091  F0B7         	movff	?___ftdiv+2,le4a20@corrente+2
  3822                           
  3823                           ;AD.c: 107: corrente=(corrente-195.0)*16.0/784.0+4.0;
  3824  001DFE  0E00               	movlw	0
  3825  001E00  0100               	movlb	0	; () banked
  3826  001E02  6F92               	movwf	___ftdiv@f2& (0+255),b
  3827  001E04  0E44               	movlw	68
  3828  001E06  6F93               	movwf	(___ftdiv@f2+1)& (0+255),b
  3829  001E08  0E44               	movlw	68
  3830  001E0A  6F94               	movwf	(___ftdiv@f2+2)& (0+255),b
  3831  001E0C  0E00               	movlw	0
  3832  001E0E  6F83               	movwf	___ftmul@f2& (0+255),b
  3833  001E10  0E80               	movlw	128
  3834  001E12  6F84               	movwf	(___ftmul@f2+1)& (0+255),b
  3835  001E14  0E41               	movlw	65
  3836  001E16  6F85               	movwf	(___ftmul@f2+2)& (0+255),b
  3837  001E18  0E00               	movlw	0
  3838  001E1A  6F77               	movwf	___ftadd@f2& (0+255),b
  3839  001E1C  0E43               	movlw	67
  3840  001E1E  6F78               	movwf	(___ftadd@f2+1)& (0+255),b
  3841  001E20  0EC3               	movlw	195
  3842  001E22  6F79               	movwf	(___ftadd@f2+2)& (0+255),b
  3843  001E24  C0B5  F074         	movff	le4a20@corrente,___ftadd@f1
  3844  001E28  C0B6  F075         	movff	le4a20@corrente+1,___ftadd@f1+1
  3845  001E2C  C0B7  F076         	movff	le4a20@corrente+2,___ftadd@f1+2
  3846  001E30  ECA5  F00D         	call	___ftadd	;wreg free
  3847  001E34  C074  F080         	movff	?___ftadd,___ftmul@f1
  3848  001E38  C075  F081         	movff	?___ftadd+1,___ftmul@f1+1
  3849  001E3C  C076  F082         	movff	?___ftadd+2,___ftmul@f1+2
  3850  001E40  EC7C  F018         	call	___ftmul	;wreg free
  3851  001E44  C080  F08F         	movff	?___ftmul,___ftdiv@f1
  3852  001E48  C081  F090         	movff	?___ftmul+1,___ftdiv@f1+1
  3853  001E4C  C082  F091         	movff	?___ftmul+2,___ftdiv@f1+2
  3854  001E50  ECF7  F018         	call	___ftdiv	;wreg free
  3855  001E54  C08F  F0AD         	movff	?___ftdiv,_le4a20$5649
  3856  001E58  C090  F0AE         	movff	?___ftdiv+1,_le4a20$5649+1
  3857  001E5C  C091  F0AF         	movff	?___ftdiv+2,_le4a20$5649+2
  3858                           
  3859                           ;AD.c: 107: corrente=(corrente-195.0)*16.0/784.0+4.0;
  3860  001E60  C0AD  F074         	movff	_le4a20$5649,___ftadd@f1
  3861  001E64  C0AE  F075         	movff	_le4a20$5649+1,___ftadd@f1+1
  3862  001E68  C0AF  F076         	movff	_le4a20$5649+2,___ftadd@f1+2
  3863  001E6C  0E00               	movlw	0
  3864  001E6E  0100               	movlb	0	; () banked
  3865  001E70  6F77               	movwf	___ftadd@f2& (0+255),b
  3866  001E72  0E80               	movlw	128
  3867  001E74  6F78               	movwf	(___ftadd@f2+1)& (0+255),b
  3868  001E76  0E40               	movlw	64
  3869  001E78  6F79               	movwf	(___ftadd@f2+2)& (0+255),b
  3870  001E7A  ECA5  F00D         	call	___ftadd	;wreg free
  3871  001E7E  C074  F0B5         	movff	?___ftadd,le4a20@corrente
  3872  001E82  C075  F0B6         	movff	?___ftadd+1,le4a20@corrente+1
  3873  001E86  C076  F0B7         	movff	?___ftadd+2,le4a20@corrente+2
  3874                           
  3875                           ;AD.c: 109: return corrente;
  3876  001E8A  C0B5  F09E         	movff	le4a20@corrente,?_le4a20
  3877  001E8E  C0B6  F09F         	movff	le4a20@corrente+1,?_le4a20+1
  3878  001E92  C0B7  F0A0         	movff	le4a20@corrente+2,?_le4a20+2
  3879  001E96  0012               	return	
  3880  001E98                     __end_of_le4a20:
  3881                           	opt stack 0
  3882                           tblptru	equ	0xFF8
  3883                           tblptrh	equ	0xFF7
  3884                           tblptrl	equ	0xFF6
  3885                           tablat	equ	0xFF5
  3886                           intcon	equ	0xFF2
  3887                           postinc0	equ	0xFEE
  3888                           wreg	equ	0xFE8
  3889                           postdec1	equ	0xFE5
  3890                           fsr1l	equ	0xFE1
  3891                           status	equ	0xFD8
  3892                           
  3893 ;; *************** function _leAD *****************
  3894 ;; Defined at:
  3895 ;;		line 59 in file "AD.c"
  3896 ;; Parameters:    Size  Location     Type
  3897 ;;		None
  3898 ;; Auto vars:     Size  Location     Type
  3899 ;;  i               2   10[BANK0 ] unsigned int 
  3900 ;;  leitura         4    4[BANK0 ] unsigned long 
  3901 ;;  leituraAux      2    8[BANK0 ] unsigned int 
  3902 ;; Return value:  Size  Location     Type
  3903 ;;                  2    0[BANK0 ] unsigned int 
  3904 ;; Registers used:
  3905 ;;		wreg, status,2, status,0
  3906 ;; Tracked objects:
  3907 ;;		On entry : 0/0
  3908 ;;		On exit  : 0/0
  3909 ;;		Unchanged: 0/0
  3910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3911 ;;      Params:         0       2       0       0       0       0       0       0       0
  3912 ;;      Locals:         0       8       0       0       0       0       0       0       0
  3913 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3914 ;;      Totals:         0      12       0       0       0       0       0       0       0
  3915 ;;Total ram usage:       12 bytes
  3916 ;; Hardware stack levels used:    1
  3917 ;; Hardware stack levels required when called:   10
  3918 ;; This function calls:
  3919 ;;		Nothing
  3920 ;; This function is called by:
  3921 ;;		_le4a20
  3922 ;; This function uses a non-reentrant model
  3923 ;;
  3924                           
  3925                           	psect	text6
  3926  00407E                     __ptext6:
  3927                           	opt stack 0
  3928  00407E                     _leAD:
  3929                           	opt stack 19
  3930                           
  3931                           ;AD.c: 69: uint16_t leituraAux;
  3932                           ;AD.c: 70: uint32_t leitura=0;
  3933                           
  3934                           ;incstack = 0
  3935  00407E  0E00               	movlw	0
  3936  004080  0100               	movlb	0	; () banked
  3937  004082  6F64               	movwf	leAD@leitura& (0+255),b
  3938  004084  0E00               	movlw	0
  3939  004086  6F65               	movwf	(leAD@leitura+1)& (0+255),b
  3940  004088  0E00               	movlw	0
  3941  00408A  6F66               	movwf	(leAD@leitura+2)& (0+255),b
  3942  00408C  0E00               	movlw	0
  3943  00408E  6F67               	movwf	(leAD@leitura+3)& (0+255),b
  3944                           
  3945                           ;AD.c: 72: for (uint16_t i=0;i<1024;i++)
  3946  004090  0E00               	movlw	0
  3947  004092  6F6B               	movwf	(leAD@i+1)& (0+255),b
  3948  004094  0E00               	movlw	0
  3949  004096  6F6A               	movwf	leAD@i& (0+255),b
  3950  004098                     l8765:
  3951                           
  3952                           ; BSR set to: 0
  3953  004098  0E04               	movlw	4
  3954  00409A  5D6B               	subwf	(leAD@i+1)& (0+255),w,b
  3955  00409C  B0D8               	btfsc	status,0,c
  3956  00409E  D019               	goto	u7860
  3957                           
  3958                           ; BSR set to: 0
  3959                           ;AD.c: 73: {
  3960                           ;AD.c: 74: GO_DONE=1;
  3961                           
  3962                           ; BSR set to: 0
  3963  0040A0  82C2               	bsf	4034,1,c	;volatile
  3964                           
  3965                           ;AD.c: 75: __nop();
  3966  0040A2  F000               	nop	
  3967  0040A4  B2C2               	btfsc	4034,1,c	;volatile
  3968  0040A6  D7FE               	goto	l1706
  3969                           
  3970                           ;AD.c: 78: leituraAux=ADRESH;
  3971  0040A8  CFC4 F068          	movff	4036,leAD@leituraAux	;volatile
  3972  0040AC  0100               	movlb	0	; () banked
  3973  0040AE  6B69               	clrf	(leAD@leituraAux+1)& (0+255),b
  3974                           
  3975                           ; BSR set to: 0
  3976                           ;AD.c: 79: leituraAux=(leituraAux << 8) | ADRESL;
  3977  0040B0  5168               	movf	leAD@leituraAux& (0+255),w,b
  3978  0040B2  6F62               	movwf	??_leAD& (0+255),b
  3979  0040B4  50C3               	movf	4035,w,c	;volatile
  3980  0040B6  6F68               	movwf	leAD@leituraAux& (0+255),b
  3981  0040B8  C062  F069         	movff	??_leAD,leAD@leituraAux+1
  3982                           
  3983                           ; BSR set to: 0
  3984                           ;AD.c: 80: leitura+=leituraAux;
  3985  0040BC  5168               	movf	leAD@leituraAux& (0+255),w,b
  3986  0040BE  2764               	addwf	leAD@leitura& (0+255),f,b
  3987  0040C0  5169               	movf	(leAD@leituraAux+1)& (0+255),w,b
  3988  0040C2  2365               	addwfc	(leAD@leitura+1)& (0+255),f,b
  3989  0040C4  0E00               	movlw	0
  3990  0040C6  2366               	addwfc	(leAD@leitura+2)& (0+255),f,b
  3991  0040C8  0E00               	movlw	0
  3992  0040CA  2367               	addwfc	(leAD@leitura+3)& (0+255),f,b
  3993                           
  3994                           ; BSR set to: 0
  3995  0040CC  4B6A               	infsnz	leAD@i& (0+255),f,b
  3996  0040CE  2B6B               	incf	(leAD@i+1)& (0+255),f,b
  3997  0040D0  D7E3               	goto	l8765
  3998  0040D2                     u7860:
  3999                           
  4000                           ; BSR set to: 0
  4001                           ;AD.c: 82: }
  4002                           ;AD.c: 84: leitura>>=10;
  4003                           
  4004                           ; BSR set to: 0
  4005  0040D2  0E0A               	movlw	10
  4006  0040D4  6F62               	movwf	??_leAD& (0+255),b
  4007  0040D6                     u7875:
  4008  0040D6  90D8               	bcf	status,0,c
  4009  0040D8  3367               	rrcf	(leAD@leitura+3)& (0+255),f,b
  4010  0040DA  3366               	rrcf	(leAD@leitura+2)& (0+255),f,b
  4011  0040DC  3365               	rrcf	(leAD@leitura+1)& (0+255),f,b
  4012  0040DE  3364               	rrcf	leAD@leitura& (0+255),f,b
  4013  0040E0  2F62               	decfsz	??_leAD& (0+255),f,b
  4014  0040E2  D7F9               	goto	u7875
  4015                           
  4016                           ; BSR set to: 0
  4017                           ;AD.c: 86: return leitura;
  4018  0040E4  C064  F060         	movff	leAD@leitura,?_leAD
  4019  0040E8  C065  F061         	movff	leAD@leitura+1,?_leAD+1
  4020  0040EC  0012               	return	
  4021  0040EE                     __end_of_leAD:
  4022                           	opt stack 0
  4023                           tblptru	equ	0xFF8
  4024                           tblptrh	equ	0xFF7
  4025                           tblptrl	equ	0xFF6
  4026                           tablat	equ	0xFF5
  4027                           intcon	equ	0xFF2
  4028                           postinc0	equ	0xFEE
  4029                           wreg	equ	0xFE8
  4030                           postdec1	equ	0xFE5
  4031                           fsr1l	equ	0xFE1
  4032                           status	equ	0xFD8
  4033                           
  4034 ;; *************** function ___lbtoft *****************
  4035 ;; Defined at:
  4036 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lbtoft.c"
  4037 ;; Parameters:    Size  Location     Type
  4038 ;;  c               1    wreg     unsigned char 
  4039 ;; Auto vars:     Size  Location     Type
  4040 ;;  c               1   11[BANK0 ] unsigned char 
  4041 ;; Return value:  Size  Location     Type
  4042 ;;                  3    8[BANK0 ] float 
  4043 ;; Registers used:
  4044 ;;		wreg, status,2, status,0, cstack
  4045 ;; Tracked objects:
  4046 ;;		On entry : 0/0
  4047 ;;		On exit  : 0/0
  4048 ;;		Unchanged: 0/0
  4049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4050 ;;      Params:         0       3       0       0       0       0       0       0       0
  4051 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4052 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4053 ;;      Totals:         0       4       0       0       0       0       0       0       0
  4054 ;;Total ram usage:        4 bytes
  4055 ;; Hardware stack levels used:    1
  4056 ;; Hardware stack levels required when called:   11
  4057 ;; This function calls:
  4058 ;;		___ftpack
  4059 ;; This function is called by:
  4060 ;;		_le4a20
  4061 ;; This function uses a non-reentrant model
  4062 ;;
  4063                           
  4064                           	psect	text7
  4065  0047EA                     __ptext7:
  4066                           	opt stack 0
  4067  0047EA                     ___lbtoft:
  4068                           	opt stack 18
  4069                           
  4070                           ; BSR set to: 0
  4071                           ;incstack = 0
  4072                           ;___lbtoft@c stored from wreg
  4073  0047EA  0100               	movlb	0	; () banked
  4074  0047EC  6F6B               	movwf	___lbtoft@c& (0+255),b
  4075  0047EE  0100               	movlb	0	; () banked
  4076  0047F0  516B               	movf	___lbtoft@c& (0+255),w,b
  4077  0047F2  6F60               	movwf	___ftpack@arg& (0+255),b
  4078  0047F4  6B61               	clrf	(___ftpack@arg+1)& (0+255),b
  4079  0047F6  6B62               	clrf	(___ftpack@arg+2)& (0+255),b
  4080  0047F8  0E8E               	movlw	142
  4081  0047FA  6F63               	movwf	___ftpack@exp& (0+255),b
  4082  0047FC  0E00               	movlw	0
  4083  0047FE  6F64               	movwf	___ftpack@sign& (0+255),b
  4084  004800  EC6B  F01B         	call	___ftpack	;wreg free
  4085  004804  C060  F068         	movff	?___ftpack,?___lbtoft
  4086  004808  C061  F069         	movff	?___ftpack+1,?___lbtoft+1
  4087  00480C  C062  F06A         	movff	?___ftpack+2,?___lbtoft+2
  4088  004810  0012               	return	
  4089  004812                     __end_of___lbtoft:
  4090                           	opt stack 0
  4091                           tblptru	equ	0xFF8
  4092                           tblptrh	equ	0xFF7
  4093                           tblptrl	equ	0xFF6
  4094                           tablat	equ	0xFF5
  4095                           intcon	equ	0xFF2
  4096                           postinc0	equ	0xFEE
  4097                           wreg	equ	0xFE8
  4098                           postdec1	equ	0xFE5
  4099                           fsr1l	equ	0xFE1
  4100                           status	equ	0xFD8
  4101                           
  4102 ;; *************** function ___ftdiv *****************
  4103 ;; Defined at:
  4104 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftdiv.c"
  4105 ;; Parameters:    Size  Location     Type
  4106 ;;  f1              3   47[BANK0 ] float 
  4107 ;;  f2              3   50[BANK0 ] float 
  4108 ;; Auto vars:     Size  Location     Type
  4109 ;;  f3              3   57[BANK0 ] float 
  4110 ;;  sign            1   61[BANK0 ] unsigned char 
  4111 ;;  exp             1   60[BANK0 ] unsigned char 
  4112 ;;  cntr            1   56[BANK0 ] unsigned char 
  4113 ;; Return value:  Size  Location     Type
  4114 ;;                  3   47[BANK0 ] float 
  4115 ;; Registers used:
  4116 ;;		wreg, status,2, status,0, cstack
  4117 ;; Tracked objects:
  4118 ;;		On entry : 0/0
  4119 ;;		On exit  : 0/0
  4120 ;;		Unchanged: 0/0
  4121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4122 ;;      Params:         0       6       0       0       0       0       0       0       0
  4123 ;;      Locals:         0       6       0       0       0       0       0       0       0
  4124 ;;      Temps:          0       3       0       0       0       0       0       0       0
  4125 ;;      Totals:         0      15       0       0       0       0       0       0       0
  4126 ;;Total ram usage:       15 bytes
  4127 ;; Hardware stack levels used:    1
  4128 ;; Hardware stack levels required when called:   11
  4129 ;; This function calls:
  4130 ;;		___ftpack
  4131 ;; This function is called by:
  4132 ;;		_le4a20
  4133 ;; This function uses a non-reentrant model
  4134 ;;
  4135                           
  4136                           	psect	text8
  4137  0031EE                     __ptext8:
  4138                           	opt stack 0
  4139  0031EE                     ___ftdiv:
  4140                           	opt stack 18
  4141                           
  4142                           ;incstack = 0
  4143  0031EE  C091  F095         	movff	___ftdiv@f1+2,??___ftdiv
  4144  0031F2  0100               	movlb	0	; () banked
  4145  0031F4  6B96               	clrf	(??___ftdiv+1)& (0+255),b
  4146  0031F6  6B97               	clrf	(??___ftdiv+2)& (0+255),b
  4147  0031F8  3590               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  4148  0031FA  3795               	rlcf	??___ftdiv& (0+255),f,b
  4149  0031FC  E301               	bnc	u8081
  4150  0031FE  8196               	bsf	(??___ftdiv+1)& (0+255),0,b
  4151  003200                     u8081:
  4152  003200  5195               	movf	??___ftdiv& (0+255),w,b
  4153  003202  6F9C               	movwf	___ftdiv@exp& (0+255),b
  4154  003204  519C               	movf	___ftdiv@exp& (0+255),w,b
  4155  003206  A4D8               	btfss	status,2,c
  4156  003208  D007               	goto	l2612
  4157                           
  4158                           ; BSR set to: 0
  4159  00320A  0E00               	movlw	0
  4160  00320C  6F8F               	movwf	?___ftdiv& (0+255),b
  4161  00320E  0E00               	movlw	0
  4162  003210  6F90               	movwf	(?___ftdiv+1)& (0+255),b
  4163  003212  0E00               	movlw	0
  4164  003214  6F91               	movwf	(?___ftdiv+2)& (0+255),b
  4165                           
  4166                           ; BSR set to: 0
  4167  003216  0012               	return	
  4168  003218                     l2612:
  4169                           
  4170                           ; BSR set to: 0
  4171                           
  4172                           ; BSR set to: 0
  4173  003218  C094  F095         	movff	___ftdiv@f2+2,??___ftdiv
  4174  00321C  6B96               	clrf	(??___ftdiv+1)& (0+255),b
  4175  00321E  6B97               	clrf	(??___ftdiv+2)& (0+255),b
  4176  003220  3593               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  4177  003222  3795               	rlcf	??___ftdiv& (0+255),f,b
  4178  003224  E301               	bnc	u8101
  4179  003226  8196               	bsf	(??___ftdiv+1)& (0+255),0,b
  4180  003228                     u8101:
  4181  003228  5195               	movf	??___ftdiv& (0+255),w,b
  4182  00322A  6F9D               	movwf	___ftdiv@sign& (0+255),b
  4183  00322C  519D               	movf	___ftdiv@sign& (0+255),w,b
  4184  00322E  A4D8               	btfss	status,2,c
  4185  003230  D007               	goto	l2614
  4186                           
  4187                           ; BSR set to: 0
  4188  003232  0E00               	movlw	0
  4189  003234  6F8F               	movwf	?___ftdiv& (0+255),b
  4190  003236  0E00               	movlw	0
  4191  003238  6F90               	movwf	(?___ftdiv+1)& (0+255),b
  4192  00323A  0E00               	movlw	0
  4193  00323C  6F91               	movwf	(?___ftdiv+2)& (0+255),b
  4194                           
  4195                           ; BSR set to: 0
  4196  00323E  0012               	return	
  4197  003240                     l2614:
  4198                           
  4199                           ; BSR set to: 0
  4200                           
  4201                           ; BSR set to: 0
  4202  003240  0E00               	movlw	0
  4203  003242  6F99               	movwf	___ftdiv@f3& (0+255),b
  4204  003244  0E00               	movlw	0
  4205  003246  6F9A               	movwf	(___ftdiv@f3+1)& (0+255),b
  4206  003248  0E00               	movlw	0
  4207  00324A  6F9B               	movwf	(___ftdiv@f3+2)& (0+255),b
  4208                           
  4209                           ; BSR set to: 0
  4210  00324C  519D               	movf	___ftdiv@sign& (0+255),w,b
  4211  00324E  0F89               	addlw	137
  4212  003250  5F9C               	subwf	___ftdiv@exp& (0+255),f,b
  4213                           
  4214                           ; BSR set to: 0
  4215  003252  C091  F09D         	movff	___ftdiv@f1+2,___ftdiv@sign
  4216                           
  4217                           ; BSR set to: 0
  4218  003256  5194               	movf	(___ftdiv@f2+2)& (0+255),w,b
  4219  003258  1B9D               	xorwf	___ftdiv@sign& (0+255),f,b
  4220                           
  4221                           ; BSR set to: 0
  4222  00325A  0E80               	movlw	128
  4223  00325C  179D               	andwf	___ftdiv@sign& (0+255),f,b
  4224                           
  4225                           ; BSR set to: 0
  4226  00325E  8F90               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  4227                           
  4228                           ; BSR set to: 0
  4229  003260  0EFF               	movlw	255
  4230  003262  178F               	andwf	___ftdiv@f1& (0+255),f,b
  4231  003264  0EFF               	movlw	255
  4232  003266  1790               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  4233  003268  0E00               	movlw	0
  4234  00326A  1791               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  4235                           
  4236                           ; BSR set to: 0
  4237  00326C  8F93               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  4238                           
  4239                           ; BSR set to: 0
  4240  00326E  0EFF               	movlw	255
  4241  003270  1792               	andwf	___ftdiv@f2& (0+255),f,b
  4242  003272  0EFF               	movlw	255
  4243  003274  1793               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  4244  003276  0E00               	movlw	0
  4245  003278  1794               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  4246                           
  4247                           ; BSR set to: 0
  4248  00327A  0E18               	movlw	24
  4249  00327C  6F98               	movwf	___ftdiv@cntr& (0+255),b
  4250  00327E                     
  4251                           ; BSR set to: 0
  4252                           
  4253                           ; BSR set to: 0
  4254  00327E  90D8               	bcf	status,0,c
  4255  003280  3799               	rlcf	___ftdiv@f3& (0+255),f,b
  4256  003282  379A               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  4257  003284  379B               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  4258                           
  4259                           ; BSR set to: 0
  4260  003286  5192               	movf	___ftdiv@f2& (0+255),w,b
  4261  003288  5D8F               	subwf	___ftdiv@f1& (0+255),w,b
  4262  00328A  5193               	movf	(___ftdiv@f2+1)& (0+255),w,b
  4263  00328C  5990               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  4264  00328E  5194               	movf	(___ftdiv@f2+2)& (0+255),w,b
  4265  003290  5991               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  4266  003292  A0D8               	btfss	status,0,c
  4267  003294  D007               	goto	l2616
  4268                           
  4269                           ; BSR set to: 0
  4270  003296  5192               	movf	___ftdiv@f2& (0+255),w,b
  4271  003298  5F8F               	subwf	___ftdiv@f1& (0+255),f,b
  4272  00329A  5193               	movf	(___ftdiv@f2+1)& (0+255),w,b
  4273  00329C  5B90               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  4274  00329E  5194               	movf	(___ftdiv@f2+2)& (0+255),w,b
  4275  0032A0  5B91               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  4276                           
  4277                           ; BSR set to: 0
  4278  0032A2  8199               	bsf	___ftdiv@f3& (0+255),0,b
  4279  0032A4                     l2616:
  4280                           
  4281                           ; BSR set to: 0
  4282  0032A4  90D8               	bcf	status,0,c
  4283  0032A6  378F               	rlcf	___ftdiv@f1& (0+255),f,b
  4284  0032A8  3790               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  4285  0032AA  3791               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  4286                           
  4287                           ; BSR set to: 0
  4288  0032AC  2F98               	decfsz	___ftdiv@cntr& (0+255),f,b
  4289  0032AE  D7E7               	goto	l2615
  4290                           
  4291                           ; BSR set to: 0
  4292                           
  4293                           ; BSR set to: 0
  4294  0032B0  C099  F060         	movff	___ftdiv@f3,___ftpack@arg
  4295  0032B4  C09A  F061         	movff	___ftdiv@f3+1,___ftpack@arg+1
  4296  0032B8  C09B  F062         	movff	___ftdiv@f3+2,___ftpack@arg+2
  4297  0032BC  C09C  F063         	movff	___ftdiv@exp,___ftpack@exp
  4298  0032C0  C09D  F064         	movff	___ftdiv@sign,___ftpack@sign
  4299  0032C4  EC6B  F01B         	call	___ftpack	;wreg free
  4300  0032C8  C060  F08F         	movff	?___ftpack,?___ftdiv
  4301  0032CC  C061  F090         	movff	?___ftpack+1,?___ftdiv+1
  4302  0032D0  C062  F091         	movff	?___ftpack+2,?___ftdiv+2
  4303  0032D4  0012               	return	
  4304  0032D6                     __end_of___ftdiv:
  4305                           	opt stack 0
  4306                           tblptru	equ	0xFF8
  4307                           tblptrh	equ	0xFF7
  4308                           tblptrl	equ	0xFF6
  4309                           tablat	equ	0xFF5
  4310                           intcon	equ	0xFF2
  4311                           postinc0	equ	0xFEE
  4312                           wreg	equ	0xFE8
  4313                           postdec1	equ	0xFE5
  4314                           fsr1l	equ	0xFE1
  4315                           status	equ	0xFD8
  4316                           
  4317 ;; *************** function _inicializaVariaveis *****************
  4318 ;; Defined at:
  4319 ;;		line 56 in file "Pulses.c"
  4320 ;; Parameters:    Size  Location     Type
  4321 ;;		None
  4322 ;; Auto vars:     Size  Location     Type
  4323 ;;		None
  4324 ;; Return value:  Size  Location     Type
  4325 ;;                  1    wreg      void 
  4326 ;; Registers used:
  4327 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4328 ;; Tracked objects:
  4329 ;;		On entry : 0/0
  4330 ;;		On exit  : 0/0
  4331 ;;		Unchanged: 0/0
  4332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4333 ;;      Params:         0       0       0       0       0       0       0       0       0
  4334 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4335 ;;      Temps:          0       1       0       0       0       0       0       0       0
  4336 ;;      Totals:         0       1       0       0       0       0       0       0       0
  4337 ;;Total ram usage:        1 bytes
  4338 ;; Hardware stack levels used:    1
  4339 ;; Hardware stack levels required when called:   12
  4340 ;; This function calls:
  4341 ;;		_retornaDadosEeprom
  4342 ;; This function is called by:
  4343 ;;		_main
  4344 ;; This function uses a non-reentrant model
  4345 ;;
  4346                           
  4347                           	psect	text9
  4348  004224                     __ptext9:
  4349                           	opt stack 0
  4350  004224                     _inicializaVariaveis:
  4351                           	opt stack 18
  4352                           
  4353                           ;Pulses.c: 58: TRISDbits.RD0=1;
  4354                           
  4355                           ;incstack = 0
  4356  004224  8095               	bsf	3989,0,c	;volatile
  4357                           
  4358                           ;Pulses.c: 59: dig_1=PORTDbits.RD0;
  4359  004226  A083               	btfss	3971,0,c	;volatile
  4360  004228  D004               	goto	u8650
  4361  00422A  0100               	movlb	0	; () banked
  4362  00422C  6B84               	clrf	??_inicializaVariaveis& (0+255),b
  4363  00422E  2B84               	incf	??_inicializaVariaveis& (0+255),f,b
  4364  004230  D002               	goto	u8658
  4365  004232                     u8650:
  4366  004232  0100               	movlb	0	; () banked
  4367  004234  6B84               	clrf	??_inicializaVariaveis& (0+255),b
  4368  004236                     u8658:
  4369  004236  5184               	movf	??_inicializaVariaveis& (0+255),w,b
  4370  004238  0102               	movlb	2	; () banked
  4371  00423A  6F52               	movwf	_dig_1& (0+255),b	;volatile
  4372  00423C  6B53               	clrf	(_dig_1+1)& (0+255),b	;volatile
  4373                           
  4374                           ;Pulses.c: 60: tempoHorimetro=0;
  4375  00423E  0E00               	movlw	0
  4376  004240  6F20               	movwf	_tempoHorimetro& (0+255),b	;volatile
  4377  004242  0E00               	movlw	0
  4378  004244  6F21               	movwf	(_tempoHorimetro+1)& (0+255),b	;volatile
  4379  004246  0E00               	movlw	0
  4380  004248  6F22               	movwf	(_tempoHorimetro+2)& (0+255),b	;volatile
  4381  00424A  0E00               	movlw	0
  4382  00424C  6F23               	movwf	(_tempoHorimetro+3)& (0+255),b	;volatile
  4383                           
  4384                           ;Pulses.c: 61: horimetroLigado=0;
  4385  00424E  0E00               	movlw	0
  4386  004250  6E59               	movwf	_horimetroLigado,c	;volatile
  4387                           
  4388                           ;Pulses.c: 62: tempoSemVazao=0;
  4389  004252  0E00               	movlw	0
  4390  004254  6F4F               	movwf	(_tempoSemVazao+1)& (0+255),b	;volatile
  4391  004256  0E00               	movlw	0
  4392  004258  6F4E               	movwf	_tempoSemVazao& (0+255),b	;volatile
  4393                           
  4394                           ;Pulses.c: 63: tempoRegistroHorimetro=0;
  4395  00425A  0E00               	movlw	0
  4396  00425C  6F4D               	movwf	(_tempoRegistroHorimetro+1)& (0+255),b	;volatile
  4397  00425E  0E00               	movlw	0
  4398  004260  6F4C               	movwf	_tempoRegistroHorimetro& (0+255),b	;volatile
  4399                           
  4400                           ;Pulses.c: 64: tempoVazaoInstantanea=0;
  4401  004262  0E00               	movlw	0
  4402  004264  6F4B               	movwf	(_tempoVazaoInstantanea+1)& (0+255),b	;volatile
  4403  004266  0E00               	movlw	0
  4404  004268  6F4A               	movwf	_tempoVazaoInstantanea& (0+255),b	;volatile
  4405                           
  4406                           ;Pulses.c: 65: vazaoInstantanea=0;
  4407  00426A  0E00               	movlw	0
  4408  00426C  6F49               	movwf	(_vazaoInstantanea+1)& (0+255),b	;volatile
  4409  00426E  0E00               	movlw	0
  4410  004270  6F48               	movwf	_vazaoInstantanea& (0+255),b	;volatile
  4411                           
  4412                           ; BSR set to: 2
  4413                           ;Pulses.c: 67: retornaDadosEeprom();
  4414  004272  ECCC  F00C         	call	_retornaDadosEeprom	;wreg free
  4415                           
  4416                           ;Pulses.c: 68: freqPulsesAnterior=freqPulses;
  4417  004276  C047  F21C         	movff	_freqPulses,_freqPulsesAnterior	;volatile
  4418  00427A  C048  F21D         	movff	_freqPulses+1,_freqPulsesAnterior+1	;volatile
  4419  00427E  C049  F21E         	movff	_freqPulses+2,_freqPulsesAnterior+2	;volatile
  4420  004282  C04A  F21F         	movff	_freqPulses+3,_freqPulsesAnterior+3	;volatile
  4421  004286  0012               	return		;funcret
  4422  004288                     __end_of_inicializaVariaveis:
  4423                           	opt stack 0
  4424                           tblptru	equ	0xFF8
  4425                           tblptrh	equ	0xFF7
  4426                           tblptrl	equ	0xFF6
  4427                           tablat	equ	0xFF5
  4428                           intcon	equ	0xFF2
  4429                           postinc0	equ	0xFEE
  4430                           wreg	equ	0xFE8
  4431                           postdec1	equ	0xFE5
  4432                           fsr1l	equ	0xFE1
  4433                           status	equ	0xFD8
  4434                           
  4435 ;; *************** function _retornaDadosEeprom *****************
  4436 ;; Defined at:
  4437 ;;		line 120 in file "eeprom.c"
  4438 ;; Parameters:    Size  Location     Type
  4439 ;;		None
  4440 ;; Auto vars:     Size  Location     Type
  4441 ;;  dado            4   23[BANK0 ] unsigned long 
  4442 ;;  dado            4   19[BANK0 ] unsigned long 
  4443 ;;  j               1   32[BANK0 ] unsigned char 
  4444 ;;  j               1   31[BANK0 ] unsigned char 
  4445 ;;  horimetro       4   27[BANK0 ] unsigned long 
  4446 ;;  vazao           4   11[BANK0 ] unsigned long 
  4447 ;;  crc             1   33[BANK0 ] unsigned char 
  4448 ;;  crcGravado      1    9[BANK0 ] unsigned char 
  4449 ;;  i               2   34[BANK0 ] int 
  4450 ;;  horimetroAtu    4   15[BANK0 ] unsigned long 
  4451 ;;  vazaoAcumula    4    5[BANK0 ] unsigned long 
  4452 ;;  intEnable       1   10[BANK0 ] unsigned char 
  4453 ;; Return value:  Size  Location     Type
  4454 ;;                  1    wreg      void 
  4455 ;; Registers used:
  4456 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4457 ;; Tracked objects:
  4458 ;;		On entry : 0/0
  4459 ;;		On exit  : 0/0
  4460 ;;		Unchanged: 0/0
  4461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4462 ;;      Params:         0       0       0       0       0       0       0       0       0
  4463 ;;      Locals:         0      31       0       0       0       0       0       0       0
  4464 ;;      Temps:          0       1       0       0       0       0       0       0       0
  4465 ;;      Totals:         0      32       0       0       0       0       0       0       0
  4466 ;;Total ram usage:       32 bytes
  4467 ;; Hardware stack levels used:    1
  4468 ;; Hardware stack levels required when called:   11
  4469 ;; This function calls:
  4470 ;;		_crc8
  4471 ;;		_readEeprom
  4472 ;; This function is called by:
  4473 ;;		_inicializaVariaveis
  4474 ;; This function uses a non-reentrant model
  4475 ;;
  4476                           
  4477                           	psect	text10
  4478  001998                     __ptext10:
  4479                           	opt stack 0
  4480  001998                     _retornaDadosEeprom:
  4481                           	opt stack 18
  4482                           
  4483                           ;eeprom.c: 122: uint32_t vazaoAcumuladaAtual=0;
  4484                           
  4485                           ;incstack = 0
  4486  001998  0E00               	movlw	0
  4487  00199A  0100               	movlb	0	; () banked
  4488  00199C  6F65               	movwf	retornaDadosEeprom@vazaoAcumuladaAtual& (0+255),b
  4489  00199E  0E00               	movlw	0
  4490  0019A0  6F66               	movwf	(retornaDadosEeprom@vazaoAcumuladaAtual+1)& (0+255),b
  4491  0019A2  0E00               	movlw	0
  4492  0019A4  6F67               	movwf	(retornaDadosEeprom@vazaoAcumuladaAtual+2)& (0+255),b
  4493  0019A6  0E00               	movlw	0
  4494  0019A8  6F68               	movwf	(retornaDadosEeprom@vazaoAcumuladaAtual+3)& (0+255),b
  4495                           
  4496                           ;eeprom.c: 123: uint32_t horimetroAtual=0;
  4497  0019AA  0E00               	movlw	0
  4498  0019AC  6F6F               	movwf	retornaDadosEeprom@horimetroAtual& (0+255),b
  4499  0019AE  0E00               	movlw	0
  4500  0019B0  6F70               	movwf	(retornaDadosEeprom@horimetroAtual+1)& (0+255),b
  4501  0019B2  0E00               	movlw	0
  4502  0019B4  6F71               	movwf	(retornaDadosEeprom@horimetroAtual+2)& (0+255),b
  4503  0019B6  0E00               	movlw	0
  4504  0019B8  6F72               	movwf	(retornaDadosEeprom@horimetroAtual+3)& (0+255),b
  4505                           
  4506                           ;eeprom.c: 125: for (int16_t i=0;i<255;i+=9)
  4507  0019BA  0E00               	movlw	0
  4508  0019BC  6F83               	movwf	(retornaDadosEeprom@i+1)& (0+255),b
  4509  0019BE  0E00               	movlw	0
  4510  0019C0  6F82               	movwf	retornaDadosEeprom@i& (0+255),b
  4511                           
  4512                           ; BSR set to: 0
  4513  0019C2  BF83               	btfsc	(retornaDadosEeprom@i+1)& (0+255),7,b
  4514  0019C4  D007               	goto	l2144
  4515  0019C6  5183               	movf	(retornaDadosEeprom@i+1)& (0+255),w,b
  4516  0019C8  E104               	bnz	u7880
  4517  0019CA  2982               	incf	retornaDadosEeprom@i& (0+255),w,b
  4518  0019CC  B0D8               	btfsc	status,0,c
  4519  0019CE  D0A2               	goto	u7970
  4520  0019D0  D001               	goto	l2144
  4521  0019D2                     u7880:
  4522                           
  4523                           ; BSR set to: 0
  4524  0019D2  D0A0               	goto	u7970
  4525  0019D4                     l2144:
  4526                           
  4527                           ; BSR set to: 0
  4528                           ;eeprom.c: 126: {
  4529                           ;eeprom.c: 127: uint8_t crc=0xFF;
  4530  0019D4  6981               	setf	retornaDadosEeprom@crc& (0+255),b
  4531                           
  4532                           ; BSR set to: 0
  4533                           ;eeprom.c: 128: uint32_t vazao=0;
  4534  0019D6  0E00               	movlw	0
  4535  0019D8  6F6B               	movwf	retornaDadosEeprom@vazao& (0+255),b
  4536  0019DA  0E00               	movlw	0
  4537  0019DC  6F6C               	movwf	(retornaDadosEeprom@vazao+1)& (0+255),b
  4538  0019DE  0E00               	movlw	0
  4539  0019E0  6F6D               	movwf	(retornaDadosEeprom@vazao+2)& (0+255),b
  4540  0019E2  0E00               	movlw	0
  4541  0019E4  6F6E               	movwf	(retornaDadosEeprom@vazao+3)& (0+255),b
  4542                           
  4543                           ;eeprom.c: 129: for (uint8_t j=0;j<4;j++)
  4544  0019E6  0E00               	movlw	0
  4545  0019E8  6F7F               	movwf	retornaDadosEeprom@j& (0+255),b
  4546  0019EA                     l8791:
  4547                           
  4548                           ; BSR set to: 0
  4549  0019EA  0E03               	movlw	3
  4550  0019EC  657F               	cpfsgt	retornaDadosEeprom@j& (0+255),b
  4551  0019EE  D001               	goto	l2146
  4552  0019F0  D02B               	goto	u7910
  4553  0019F2                     l2146:
  4554                           
  4555                           ; BSR set to: 0
  4556                           ;eeprom.c: 130: {
  4557                           ;eeprom.c: 131: uint32_t dado=readEeprom(i+j);
  4558                           
  4559                           ; BSR set to: 0
  4560  0019F2  517F               	movf	retornaDadosEeprom@j& (0+255),w,b
  4561  0019F4  2582               	addwf	retornaDadosEeprom@i& (0+255),w,b
  4562  0019F6  ECF5  F024         	call	_readEeprom
  4563  0019FA  0100               	movlb	0	; () banked
  4564  0019FC  6F64               	movwf	??_retornaDadosEeprom& (0+255),b
  4565  0019FE  5164               	movf	??_retornaDadosEeprom& (0+255),w,b
  4566  001A00  6F73               	movwf	retornaDadosEeprom@dado& (0+255),b
  4567  001A02  6B74               	clrf	(retornaDadosEeprom@dado+1)& (0+255),b
  4568  001A04  6B75               	clrf	(retornaDadosEeprom@dado+2)& (0+255),b
  4569  001A06  6B76               	clrf	(retornaDadosEeprom@dado+3)& (0+255),b
  4570                           
  4571                           ; BSR set to: 0
  4572                           ;eeprom.c: 132: crc=crc8(dado, crc);
  4573  001A08  C081  F060         	movff	retornaDadosEeprom@crc,crc8@crc
  4574  001A0C  5173               	movf	retornaDadosEeprom@dado& (0+255),w,b
  4575  001A0E  EC8F  F024         	call	_crc8
  4576  001A12  0100               	movlb	0	; () banked
  4577  001A14  6F81               	movwf	retornaDadosEeprom@crc& (0+255),b
  4578                           
  4579                           ; BSR set to: 0
  4580                           ;eeprom.c: 133: dado<<=24;
  4581  001A16  0E18               	movlw	24
  4582  001A18                     u7905:
  4583  001A18  90D8               	bcf	status,0,c
  4584  001A1A  3773               	rlcf	retornaDadosEeprom@dado& (0+255),f,b
  4585  001A1C  3774               	rlcf	(retornaDadosEeprom@dado+1)& (0+255),f,b
  4586  001A1E  3775               	rlcf	(retornaDadosEeprom@dado+2)& (0+255),f,b
  4587  001A20  3776               	rlcf	(retornaDadosEeprom@dado+3)& (0+255),f,b
  4588  001A22  2EE8               	decfsz	wreg,f,c
  4589  001A24  D7F9               	goto	u7905
  4590                           
  4591                           ; BSR set to: 0
  4592                           ;eeprom.c: 134: vazao>>=8;
  4593  001A26  C06C  F06B         	movff	retornaDadosEeprom@vazao+1,retornaDadosEeprom@vazao
  4594  001A2A  C06D  F06C         	movff	retornaDadosEeprom@vazao+2,retornaDadosEeprom@vazao+1
  4595  001A2E  C06E  F06D         	movff	retornaDadosEeprom@vazao+3,retornaDadosEeprom@vazao+2
  4596  001A32  6B6E               	clrf	(retornaDadosEeprom@vazao+3)& (0+255),b
  4597                           
  4598                           ; BSR set to: 0
  4599                           ;eeprom.c: 135: vazao|=dado;
  4600  001A34  5173               	movf	retornaDadosEeprom@dado& (0+255),w,b
  4601  001A36  136B               	iorwf	retornaDadosEeprom@vazao& (0+255),f,b
  4602  001A38  5174               	movf	(retornaDadosEeprom@dado+1)& (0+255),w,b
  4603  001A3A  136C               	iorwf	(retornaDadosEeprom@vazao+1)& (0+255),f,b
  4604  001A3C  5175               	movf	(retornaDadosEeprom@dado+2)& (0+255),w,b
  4605  001A3E  136D               	iorwf	(retornaDadosEeprom@vazao+2)& (0+255),f,b
  4606  001A40  5176               	movf	(retornaDadosEeprom@dado+3)& (0+255),w,b
  4607  001A42  136E               	iorwf	(retornaDadosEeprom@vazao+3)& (0+255),f,b
  4608                           
  4609                           ; BSR set to: 0
  4610  001A44  2B7F               	incf	retornaDadosEeprom@j& (0+255),f,b
  4611  001A46  D7D1               	goto	l8791
  4612  001A48                     u7910:
  4613                           
  4614                           ; BSR set to: 0
  4615                           ;eeprom.c: 136: }
  4616                           ;eeprom.c: 138: uint32_t horimetro=0;
  4617                           
  4618                           ; BSR set to: 0
  4619  001A48  0E00               	movlw	0
  4620  001A4A  6F7B               	movwf	retornaDadosEeprom@horimetro& (0+255),b
  4621  001A4C  0E00               	movlw	0
  4622  001A4E  6F7C               	movwf	(retornaDadosEeprom@horimetro+1)& (0+255),b
  4623  001A50  0E00               	movlw	0
  4624  001A52  6F7D               	movwf	(retornaDadosEeprom@horimetro+2)& (0+255),b
  4625  001A54  0E00               	movlw	0
  4626  001A56  6F7E               	movwf	(retornaDadosEeprom@horimetro+3)& (0+255),b
  4627                           
  4628                           ;eeprom.c: 139: for (uint8_t j=4;j<8;j++)
  4629  001A58  0E04               	movlw	4
  4630  001A5A  6F80               	movwf	retornaDadosEeprom@j_4801& (0+255),b
  4631  001A5C                     l8811:
  4632                           
  4633                           ; BSR set to: 0
  4634  001A5C  0E07               	movlw	7
  4635  001A5E  6580               	cpfsgt	retornaDadosEeprom@j_4801& (0+255),b
  4636  001A60  D001               	goto	l2148
  4637  001A62  D02B               	goto	u7940
  4638  001A64                     l2148:
  4639                           
  4640                           ; BSR set to: 0
  4641                           ;eeprom.c: 140: {
  4642                           ;eeprom.c: 141: uint32_t dado=readEeprom(i+j);
  4643                           
  4644                           ; BSR set to: 0
  4645  001A64  5180               	movf	retornaDadosEeprom@j_4801& (0+255),w,b
  4646  001A66  2582               	addwf	retornaDadosEeprom@i& (0+255),w,b
  4647  001A68  ECF5  F024         	call	_readEeprom
  4648  001A6C  0100               	movlb	0	; () banked
  4649  001A6E  6F64               	movwf	??_retornaDadosEeprom& (0+255),b
  4650  001A70  5164               	movf	??_retornaDadosEeprom& (0+255),w,b
  4651  001A72  6F77               	movwf	retornaDadosEeprom@dado_4802& (0+255),b
  4652  001A74  6B78               	clrf	(retornaDadosEeprom@dado_4802+1)& (0+255),b
  4653  001A76  6B79               	clrf	(retornaDadosEeprom@dado_4802+2)& (0+255),b
  4654  001A78  6B7A               	clrf	(retornaDadosEeprom@dado_4802+3)& (0+255),b
  4655                           
  4656                           ; BSR set to: 0
  4657                           ;eeprom.c: 142: crc=crc8(dado, crc);
  4658  001A7A  C081  F060         	movff	retornaDadosEeprom@crc,crc8@crc
  4659  001A7E  5177               	movf	retornaDadosEeprom@dado_4802& (0+255),w,b
  4660  001A80  EC8F  F024         	call	_crc8
  4661  001A84  0100               	movlb	0	; () banked
  4662  001A86  6F81               	movwf	retornaDadosEeprom@crc& (0+255),b
  4663                           
  4664                           ; BSR set to: 0
  4665                           ;eeprom.c: 143: dado<<=24;
  4666  001A88  0E18               	movlw	24
  4667  001A8A                     u7935:
  4668  001A8A  90D8               	bcf	status,0,c
  4669  001A8C  3777               	rlcf	retornaDadosEeprom@dado_4802& (0+255),f,b
  4670  001A8E  3778               	rlcf	(retornaDadosEeprom@dado_4802+1)& (0+255),f,b
  4671  001A90  3779               	rlcf	(retornaDadosEeprom@dado_4802+2)& (0+255),f,b
  4672  001A92  377A               	rlcf	(retornaDadosEeprom@dado_4802+3)& (0+255),f,b
  4673  001A94  2EE8               	decfsz	wreg,f,c
  4674  001A96  D7F9               	goto	u7935
  4675                           
  4676                           ; BSR set to: 0
  4677                           ;eeprom.c: 144: horimetro>>=8;
  4678  001A98  C07C  F07B         	movff	retornaDadosEeprom@horimetro+1,retornaDadosEeprom@horimetro
  4679  001A9C  C07D  F07C         	movff	retornaDadosEeprom@horimetro+2,retornaDadosEeprom@horimetro+1
  4680  001AA0  C07E  F07D         	movff	retornaDadosEeprom@horimetro+3,retornaDadosEeprom@horimetro+2
  4681  001AA4  6B7E               	clrf	(retornaDadosEeprom@horimetro+3)& (0+255),b
  4682                           
  4683                           ; BSR set to: 0
  4684                           ;eeprom.c: 145: horimetro|=dado;
  4685  001AA6  5177               	movf	retornaDadosEeprom@dado_4802& (0+255),w,b
  4686  001AA8  137B               	iorwf	retornaDadosEeprom@horimetro& (0+255),f,b
  4687  001AAA  5178               	movf	(retornaDadosEeprom@dado_4802+1)& (0+255),w,b
  4688  001AAC  137C               	iorwf	(retornaDadosEeprom@horimetro+1)& (0+255),f,b
  4689  001AAE  5179               	movf	(retornaDadosEeprom@dado_4802+2)& (0+255),w,b
  4690  001AB0  137D               	iorwf	(retornaDadosEeprom@horimetro+2)& (0+255),f,b
  4691  001AB2  517A               	movf	(retornaDadosEeprom@dado_4802+3)& (0+255),w,b
  4692  001AB4  137E               	iorwf	(retornaDadosEeprom@horimetro+3)& (0+255),f,b
  4693                           
  4694                           ; BSR set to: 0
  4695  001AB6  2B80               	incf	retornaDadosEeprom@j_4801& (0+255),f,b
  4696  001AB8  D7D1               	goto	l8811
  4697  001ABA                     u7940:
  4698                           
  4699                           ; BSR set to: 0
  4700                           ;eeprom.c: 146: }
  4701                           ;eeprom.c: 148: uint8_t crcGravado=readEeprom(i+8);
  4702                           
  4703                           ; BSR set to: 0
  4704  001ABA  5182               	movf	retornaDadosEeprom@i& (0+255),w,b
  4705  001ABC  0F08               	addlw	8
  4706  001ABE  ECF5  F024         	call	_readEeprom
  4707  001AC2  0100               	movlb	0	; () banked
  4708  001AC4  6F69               	movwf	retornaDadosEeprom@crcGravado& (0+255),b
  4709                           
  4710                           ; BSR set to: 0
  4711                           ;eeprom.c: 149: if (crcGravado!=crc)
  4712  001AC6  5181               	movf	retornaDadosEeprom@crc& (0+255),w,b
  4713  001AC8  1969               	xorwf	retornaDadosEeprom@crcGravado& (0+255),w,b
  4714  001ACA  A4D8               	btfss	status,2,c
  4715  001ACC  D01A               	goto	l2152
  4716                           
  4717                           ; BSR set to: 0
  4718                           ;eeprom.c: 152: if (horimetro>=horimetroAtual)
  4719                           
  4720                           ; BSR set to: 0
  4721                           
  4722                           ; BSR set to: 0
  4723                           ;eeprom.c: 150: continue;
  4724  001ACE  516F               	movf	retornaDadosEeprom@horimetroAtual& (0+255),w,b
  4725  001AD0  5D7B               	subwf	retornaDadosEeprom@horimetro& (0+255),w,b
  4726  001AD2  5170               	movf	(retornaDadosEeprom@horimetroAtual+1)& (0+255),w,b
  4727  001AD4  597C               	subwfb	(retornaDadosEeprom@horimetro+1)& (0+255),w,b
  4728  001AD6  5171               	movf	(retornaDadosEeprom@horimetroAtual+2)& (0+255),w,b
  4729  001AD8  597D               	subwfb	(retornaDadosEeprom@horimetro+2)& (0+255),w,b
  4730  001ADA  5172               	movf	(retornaDadosEeprom@horimetroAtual+3)& (0+255),w,b
  4731  001ADC  597E               	subwfb	(retornaDadosEeprom@horimetro+3)& (0+255),w,b
  4732  001ADE  A0D8               	btfss	status,0,c
  4733  001AE0  D010               	goto	l2152
  4734                           
  4735                           ; BSR set to: 0
  4736                           ;eeprom.c: 153: {
  4737                           ;eeprom.c: 154: vazaoAcumuladaAtual=vazao;
  4738  001AE2  C06B  F065         	movff	retornaDadosEeprom@vazao,retornaDadosEeprom@vazaoAcumuladaAtual
  4739  001AE6  C06C  F066         	movff	retornaDadosEeprom@vazao+1,retornaDadosEeprom@vazaoAcumuladaAtual+1
  4740  001AEA  C06D  F067         	movff	retornaDadosEeprom@vazao+2,retornaDadosEeprom@vazaoAcumuladaAtual+2
  4741  001AEE  C06E  F068         	movff	retornaDadosEeprom@vazao+3,retornaDadosEeprom@vazaoAcumuladaAtual+3
  4742                           
  4743                           ;eeprom.c: 155: horimetroAtual=horimetro;
  4744  001AF2  C07B  F06F         	movff	retornaDadosEeprom@horimetro,retornaDadosEeprom@horimetroAtual
  4745  001AF6  C07C  F070         	movff	retornaDadosEeprom@horimetro+1,retornaDadosEeprom@horimetroAtual+1
  4746  001AFA  C07D  F071         	movff	retornaDadosEeprom@horimetro+2,retornaDadosEeprom@horimetroAtual+2
  4747  001AFE  C07E  F072         	movff	retornaDadosEeprom@horimetro+3,retornaDadosEeprom@horimetroAtual+3
  4748  001B02                     l2152:
  4749                           
  4750                           ; BSR set to: 0
  4751                           
  4752                           ; BSR set to: 0
  4753                           
  4754                           ; BSR set to: 0
  4755  001B02  0E09               	movlw	9
  4756  001B04  2782               	addwf	retornaDadosEeprom@i& (0+255),f,b
  4757  001B06  0E00               	movlw	0
  4758  001B08  2383               	addwfc	(retornaDadosEeprom@i+1)& (0+255),f,b
  4759  001B0A  BF83               	btfsc	(retornaDadosEeprom@i+1)& (0+255),7,b
  4760  001B0C  D763               	goto	l2144
  4761  001B0E  5183               	movf	(retornaDadosEeprom@i+1)& (0+255),w,b
  4762  001B10  E101               	bnz	l8841
  4763  001B12  D75B               	goto	L1
  4764  001B14                     u7970:
  4765  001B14                     l8841:
  4766                           
  4767                           ; BSR set to: 0
  4768                           ;eeprom.c: 156: }
  4769                           ;eeprom.c: 157: }
  4770                           ;eeprom.c: 159: uint8_t intEnable = GIEH;
  4771  001B14  0E00               	movlw	0
  4772  001B16  BEF2               	btfsc	intcon,7,c	;volatile
  4773  001B18  0E01               	movlw	1
  4774  001B1A  6F6A               	movwf	retornaDadosEeprom@intEnable& (0+255),b
  4775                           
  4776                           ; BSR set to: 0
  4777                           ;eeprom.c: 160: GIEH = 0;
  4778  001B1C  9EF2               	bcf	intcon,7,c	;volatile
  4779                           
  4780                           ; BSR set to: 0
  4781                           ;eeprom.c: 161: freqPulses=vazaoAcumuladaAtual;
  4782  001B1E  C065  F047         	movff	retornaDadosEeprom@vazaoAcumuladaAtual,_freqPulses	;volatile
  4783  001B22  C066  F048         	movff	retornaDadosEeprom@vazaoAcumuladaAtual+1,_freqPulses+1	;volatile
  4784  001B26  C067  F049         	movff	retornaDadosEeprom@vazaoAcumuladaAtual+2,_freqPulses+2	;volatile
  4785  001B2A  C068  F04A         	movff	retornaDadosEeprom@vazaoAcumuladaAtual+3,_freqPulses+3	;volatile
  4786                           
  4787                           ; BSR set to: 0
  4788                           ;eeprom.c: 162: tempoHorimetro=horimetroAtual;
  4789  001B2E  C06F  F220         	movff	retornaDadosEeprom@horimetroAtual,_tempoHorimetro	;volatile
  4790  001B32  C070  F221         	movff	retornaDadosEeprom@horimetroAtual+1,_tempoHorimetro+1	;volatile
  4791  001B36  C071  F222         	movff	retornaDadosEeprom@horimetroAtual+2,_tempoHorimetro+2	;volatile
  4792  001B3A  C072  F223         	movff	retornaDadosEeprom@horimetroAtual+3,_tempoHorimetro+3	;volatile
  4793                           
  4794                           ; BSR set to: 0
  4795                           ;eeprom.c: 163: GIEH = intEnable;
  4796  001B3E  A16A               	btfss	retornaDadosEeprom@intEnable& (0+255),0,b
  4797  001B40  D002               	goto	u7980
  4798  001B42  8EF2               	bsf	intcon,7,c	;volatile
  4799  001B44  0012               	return	
  4800  001B46                     u7980:
  4801  001B46  9EF2               	bcf	intcon,7,c	;volatile
  4802  001B48  0012               	return		;funcret
  4803  001B4A                     __end_of_retornaDadosEeprom:
  4804                           	opt stack 0
  4805                           tblptru	equ	0xFF8
  4806                           tblptrh	equ	0xFF7
  4807                           tblptrl	equ	0xFF6
  4808                           tablat	equ	0xFF5
  4809                           intcon	equ	0xFF2
  4810                           postinc0	equ	0xFEE
  4811                           wreg	equ	0xFE8
  4812                           postdec1	equ	0xFE5
  4813                           fsr1l	equ	0xFE1
  4814                           status	equ	0xFD8
  4815                           
  4816 ;; *************** function _delay *****************
  4817 ;; Defined at:
  4818 ;;		line 34 in file "UT.c"
  4819 ;; Parameters:    Size  Location     Type
  4820 ;;  time            4   39[BANK0 ] unsigned long 
  4821 ;; Auto vars:     Size  Location     Type
  4822 ;;  to              4   51[BANK0 ] unsigned long 
  4823 ;; Return value:  Size  Location     Type
  4824 ;;                  1    wreg      void 
  4825 ;; Registers used:
  4826 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4827 ;; Tracked objects:
  4828 ;;		On entry : 0/0
  4829 ;;		On exit  : 0/0
  4830 ;;		Unchanged: 0/0
  4831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4832 ;;      Params:         0       4       0       0       0       0       0       0       0
  4833 ;;      Locals:         0       4       0       0       0       0       0       0       0
  4834 ;;      Temps:          0       8       0       0       0       0       0       0       0
  4835 ;;      Totals:         0      16       0       0       0       0       0       0       0
  4836 ;;Total ram usage:       16 bytes
  4837 ;; Hardware stack levels used:    1
  4838 ;; Hardware stack levels required when called:   13
  4839 ;; This function calls:
  4840 ;;		_gravaDadosEeprom
  4841 ;;		_millis
  4842 ;;		_verificaUSB
  4843 ;; This function is called by:
  4844 ;;		_main
  4845 ;; This function uses a non-reentrant model
  4846 ;;
  4847                           
  4848                           	psect	text11
  4849  003F8E                     __ptext11:
  4850                           	opt stack 0
  4851  003F8E                     _delay:
  4852                           	opt stack 17
  4853                           
  4854                           ;UT.c: 36: uint32_t to=millis();
  4855                           
  4856                           ;incstack = 0
  4857  003F8E  EC69  F024         	call	_millis	;wreg free
  4858  003F92  C060  F093         	movff	?_millis,delay@to
  4859  003F96  C061  F094         	movff	?_millis+1,delay@to+1
  4860  003F9A  C062  F095         	movff	?_millis+2,delay@to+2
  4861  003F9E  C063  F096         	movff	?_millis+3,delay@to+3
  4862                           
  4863                           ;UT.c: 37: gravaDadosEeprom();
  4864  003FA2  EC18  F010         	call	_gravaDadosEeprom	;wreg free
  4865                           
  4866                           ;UT.c: 38: verificaUSB();
  4867  003FA6  EC81  F023         	call	_verificaUSB	;wreg free
  4868                           
  4869                           ;UT.c: 39: while ((millis()-to)<time)
  4870  003FAA  D004               	goto	l944
  4871  003FAC                     
  4872                           ;UT.c: 40: {
  4873                           ;UT.c: 41: gravaDadosEeprom();
  4874  003FAC  EC18  F010         	call	_gravaDadosEeprom	;wreg free
  4875                           
  4876                           ;UT.c: 42: verificaUSB();
  4877  003FB0  EC81  F023         	call	_verificaUSB	;wreg free
  4878  003FB4                     l944:
  4879  003FB4  C093  F08B         	movff	delay@to,??_delay
  4880  003FB8  C094  F08C         	movff	delay@to+1,??_delay+1
  4881  003FBC  C095  F08D         	movff	delay@to+2,??_delay+2
  4882  003FC0  C096  F08E         	movff	delay@to+3,??_delay+3
  4883  003FC4  0100               	movlb	0	; () banked
  4884  003FC6  1F8B               	comf	??_delay& (0+255),f,b
  4885  003FC8  1F8C               	comf	(??_delay+1)& (0+255),f,b
  4886  003FCA  1F8D               	comf	(??_delay+2)& (0+255),f,b
  4887  003FCC  1F8E               	comf	(??_delay+3)& (0+255),f,b
  4888  003FCE  2B8B               	incf	??_delay& (0+255),f,b
  4889  003FD0  0E00               	movlw	0
  4890  003FD2  238C               	addwfc	(??_delay+1)& (0+255),f,b
  4891  003FD4  238D               	addwfc	(??_delay+2)& (0+255),f,b
  4892  003FD6  238E               	addwfc	(??_delay+3)& (0+255),f,b
  4893  003FD8  EC69  F024         	call	_millis	;wreg free
  4894  003FDC  0100               	movlb	0	; () banked
  4895  003FDE  518B               	movf	??_delay& (0+255),w,b
  4896  003FE0  2560               	addwf	?_millis& (0+255),w,b
  4897  003FE2  6F8F               	movwf	(??_delay+4)& (0+255),b
  4898  003FE4  518C               	movf	(??_delay+1)& (0+255),w,b
  4899  003FE6  2161               	addwfc	(?_millis+1)& (0+255),w,b
  4900  003FE8  6F90               	movwf	(??_delay+5)& (0+255),b
  4901  003FEA  518D               	movf	(??_delay+2)& (0+255),w,b
  4902  003FEC  2162               	addwfc	(?_millis+2)& (0+255),w,b
  4903  003FEE  6F91               	movwf	(??_delay+6)& (0+255),b
  4904  003FF0  518E               	movf	(??_delay+3)& (0+255),w,b
  4905  003FF2  2163               	addwfc	(?_millis+3)& (0+255),w,b
  4906  003FF4  6F92               	movwf	(??_delay+7)& (0+255),b
  4907  003FF6  5187               	movf	delay@time& (0+255),w,b
  4908  003FF8  5D8F               	subwf	(??_delay+4)& (0+255),w,b
  4909  003FFA  5188               	movf	(delay@time+1)& (0+255),w,b
  4910  003FFC  5990               	subwfb	(??_delay+5)& (0+255),w,b
  4911  003FFE  5189               	movf	(delay@time+2)& (0+255),w,b
  4912  004000  5991               	subwfb	(??_delay+6)& (0+255),w,b
  4913  004002  518A               	movf	(delay@time+3)& (0+255),w,b
  4914  004004  5992               	subwfb	(??_delay+7)& (0+255),w,b
  4915  004006  B0D8               	btfsc	status,0,c
  4916  004008  0012               	return	
  4917  00400A  D7D0               	goto	l945
  4918  00400C                     __end_of_delay:
  4919                           	opt stack 0
  4920                           tblptru	equ	0xFF8
  4921                           tblptrh	equ	0xFF7
  4922                           tblptrl	equ	0xFF6
  4923                           tablat	equ	0xFF5
  4924                           intcon	equ	0xFF2
  4925                           postinc0	equ	0xFEE
  4926                           wreg	equ	0xFE8
  4927                           postdec1	equ	0xFE5
  4928                           fsr1l	equ	0xFE1
  4929                           status	equ	0xFD8
  4930                           
  4931 ;; *************** function _verificaUSB *****************
  4932 ;; Defined at:
  4933 ;;		line 13 in file "UT.c"
  4934 ;; Parameters:    Size  Location     Type
  4935 ;;		None
  4936 ;; Auto vars:     Size  Location     Type
  4937 ;;		None
  4938 ;; Return value:  Size  Location     Type
  4939 ;;                  1    wreg      unsigned char 
  4940 ;; Registers used:
  4941 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4942 ;; Tracked objects:
  4943 ;;		On entry : 0/0
  4944 ;;		On exit  : 0/0
  4945 ;;		Unchanged: 0/0
  4946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4947 ;;      Params:         0       0       0       0       0       0       0       0       0
  4948 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4949 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4950 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4951 ;;Total ram usage:        0 bytes
  4952 ;; Hardware stack levels used:    1
  4953 ;; Hardware stack levels required when called:   12
  4954 ;; This function calls:
  4955 ;;		_CDCTxService
  4956 ;;		_USBDeviceAttach
  4957 ;;		_USBDeviceDetach
  4958 ;; This function is called by:
  4959 ;;		_delay
  4960 ;;		_main
  4961 ;; This function uses a non-reentrant model
  4962 ;;
  4963                           
  4964                           	psect	text12
  4965  004702                     __ptext12:
  4966                           	opt stack 0
  4967  004702                     _verificaUSB:
  4968                           	opt stack 18
  4969                           
  4970                           ;UT.c: 15: if ((USBDeviceState == DETACHED_STATE) && (PORTCbits.RC2 == 1))
  4971                           
  4972                           ; BSR set to: 0
  4973                           ;incstack = 0
  4974  004702  5058               	movf	_USBDeviceState,w,c	;volatile
  4975  004704  B4D8               	btfsc	status,2,c
  4976  004706  A482               	btfss	3970,2,c	;volatile
  4977  004708  D003               	goto	l935
  4978                           
  4979                           ;UT.c: 16: {
  4980                           ;UT.c: 17: USBDeviceAttach();
  4981  00470A  EC67  F023         	call	_USBDeviceAttach	;wreg free
  4982                           
  4983                           ;UT.c: 18: }
  4984  00470E  D006               	goto	l937
  4985  004710                     l935:
  4986                           
  4987                           ;UT.c: 19: else if ((USBDeviceState == ATTACHED_STATE) && (PORTCbits.RC2 != 1))
  4988  004710  0458               	decf	_USBDeviceState,w,c	;volatile
  4989  004712  B4D8               	btfsc	status,2,c
  4990  004714  B482               	btfsc	3970,2,c	;volatile
  4991  004716  D002               	goto	l937
  4992                           
  4993                           ;UT.c: 20: {
  4994                           ;UT.c: 21: USBDeviceDetach();
  4995  004718  ECFE  F024         	call	_USBDeviceDetach	;wreg free
  4996  00471C                     l937:
  4997                           
  4998                           ;UT.c: 22: }
  4999                           ;UT.c: 24: if ((USBDeviceState < CONFIGURED_STATE) || (UCONbits.SUSPND))
  5000  00471C  0E1F               	movlw	31
  5001  00471E  6458               	cpfsgt	_USBDeviceState,c	;volatile
  5002  004720  D002               	goto	u6970
  5003  004722  A26D               	btfss	3949,1,c	;volatile
  5004  004724  D002               	goto	l938
  5005  004726                     u6970:
  5006                           
  5007                           ;UT.c: 25: {
  5008                           ;UT.c: 26: return 0;
  5009  004726  0E00               	movlw	0
  5010  004728  0012               	return	
  5011  00472A                     l938:
  5012                           
  5013                           ;UT.c: 27: }
  5014                           ;UT.c: 29: CDCTxService();
  5015  00472A  EC9B  F012         	call	_CDCTxService	;wreg free
  5016                           
  5017                           ;UT.c: 30: return 1;
  5018  00472E  0E01               	movlw	1
  5019  004730  0012               	return	
  5020  004732                     __end_of_verificaUSB:
  5021                           	opt stack 0
  5022                           tblptru	equ	0xFF8
  5023                           tblptrh	equ	0xFF7
  5024                           tblptrl	equ	0xFF6
  5025                           tablat	equ	0xFF5
  5026                           intcon	equ	0xFF2
  5027                           postinc0	equ	0xFEE
  5028                           wreg	equ	0xFE8
  5029                           postdec1	equ	0xFE5
  5030                           fsr1l	equ	0xFE1
  5031                           status	equ	0xFD8
  5032                           
  5033 ;; *************** function _USBDeviceDetach *****************
  5034 ;; Defined at:
  5035 ;;		line 1247 in file "../../../../microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
  5036 ;; Parameters:    Size  Location     Type
  5037 ;;		None
  5038 ;; Auto vars:     Size  Location     Type
  5039 ;;		None
  5040 ;; Return value:  Size  Location     Type
  5041 ;;                  1    wreg      void 
  5042 ;; Registers used:
  5043 ;;		wreg, status,2
  5044 ;; Tracked objects:
  5045 ;;		On entry : 0/0
  5046 ;;		On exit  : 0/0
  5047 ;;		Unchanged: 0/0
  5048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5049 ;;      Params:         0       0       0       0       0       0       0       0       0
  5050 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5051 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5052 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5053 ;;Total ram usage:        0 bytes
  5054 ;; Hardware stack levels used:    1
  5055 ;; Hardware stack levels required when called:   10
  5056 ;; This function calls:
  5057 ;;		Nothing
  5058 ;; This function is called by:
  5059 ;;		_verificaUSB
  5060 ;; This function uses a non-reentrant model
  5061 ;;
  5062                           
  5063                           	psect	text13
  5064  0049FC                     __ptext13:
  5065                           	opt stack 0
  5066  0049FC                     _USBDeviceDetach:
  5067                           	opt stack 19
  5068                           
  5069                           ;usb_device.c: 1255: {
  5070                           ;usb_device.c: 1257: UCON = 0;
  5071                           
  5072                           ;incstack = 0
  5073  0049FC  0E00               	movlw	0
  5074  0049FE  6E6D               	movwf	3949,c	;volatile
  5075                           
  5076                           ;usb_device.c: 1260: UIE = 0;
  5077  004A00  0E00               	movlw	0
  5078  004A02  6E69               	movwf	3945,c	;volatile
  5079                           
  5080                           ;usb_device.c: 1263: USBDeviceState = DETACHED_STATE;
  5081  004A04  0E00               	movlw	0
  5082  004A06  6E58               	movwf	_USBDeviceState,c	;volatile
  5083  004A08  0012               	return	
  5084  004A0A                     __end_of_USBDeviceDetach:
  5085                           	opt stack 0
  5086                           tblptru	equ	0xFF8
  5087                           tblptrh	equ	0xFF7
  5088                           tblptrl	equ	0xFF6
  5089                           tablat	equ	0xFF5
  5090                           intcon	equ	0xFF2
  5091                           postinc0	equ	0xFEE
  5092                           wreg	equ	0xFE8
  5093                           postdec1	equ	0xFE5
  5094                           fsr1l	equ	0xFE1
  5095                           status	equ	0xFD8
  5096                           
  5097 ;; *************** function _USBDeviceAttach *****************
  5098 ;; Defined at:
  5099 ;;		line 1352 in file "../../../../microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
  5100 ;; Parameters:    Size  Location     Type
  5101 ;;		None
  5102 ;; Auto vars:     Size  Location     Type
  5103 ;;		None
  5104 ;; Return value:  Size  Location     Type
  5105 ;;                  1    wreg      void 
  5106 ;; Registers used:
  5107 ;;		wreg, status,2
  5108 ;; Tracked objects:
  5109 ;;		On entry : 0/0
  5110 ;;		On exit  : 0/0
  5111 ;;		Unchanged: 0/0
  5112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5113 ;;      Params:         0       0       0       0       0       0       0       0       0
  5114 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5115 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5116 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5117 ;;Total ram usage:        0 bytes
  5118 ;; Hardware stack levels used:    1
  5119 ;; Hardware stack levels required when called:   10
  5120 ;; This function calls:
  5121 ;;		Nothing
  5122 ;; This function is called by:
  5123 ;;		_verificaUSB
  5124 ;; This function uses a non-reentrant model
  5125 ;;
  5126                           
  5127                           	psect	text14
  5128  0046CE                     __ptext14:
  5129                           	opt stack 0
  5130  0046CE                     _USBDeviceAttach:
  5131                           	opt stack 19
  5132                           
  5133                           ;usb_device.c: 1355: if(USBDeviceState == DETACHED_STATE)
  5134                           
  5135                           ;incstack = 0
  5136  0046CE  5058               	movf	_USBDeviceState,w,c	;volatile
  5137  0046D0  A4D8               	btfss	status,2,c
  5138  0046D2  0012               	return	
  5139                           
  5140                           ;usb_device.c: 1356: {
  5141                           ;usb_device.c: 1357: if(PORTCbits.RC2 == 1)
  5142  0046D4  A482               	btfss	3970,2,c	;volatile
  5143  0046D6  0012               	return	
  5144                           
  5145                           ;usb_device.c: 1358: {
  5146                           ;usb_device.c: 1360: UCON = 0;
  5147  0046D8  0E00               	movlw	0
  5148  0046DA  6E6D               	movwf	3949,c	;volatile
  5149                           
  5150                           ;usb_device.c: 1363: UIE = 0;
  5151  0046DC  0E00               	movlw	0
  5152  0046DE  6E69               	movwf	3945,c	;volatile
  5153                           
  5154                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
  5155  0046E0  0E16               	movlw	22
  5156  0046E2  6E6F               	movwf	3951,c	;volatile
  5157  0046E4  0E9F               	movlw	159
  5158  0046E6  6E6B               	movwf	3947,c	;volatile
  5159  0046E8  0E7B               	movlw	123
  5160  0046EA  6E69               	movwf	3945,c	;volatile
  5161                           
  5162                           ;usb_device.c: 1369: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
  5163  0046EC  8ED0               	bsf	4048,7,c	;volatile
  5164  0046EE  8AA2               	bsf	4002,5,c	;volatile
  5165  0046F0  8AA0               	bsf	4000,5,c	;volatile
  5166  0046F2  8EF2               	bsf	intcon,7,c	;volatile
  5167                           
  5168                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  5169  0046F4  D001               	goto	l418
  5170  0046F6                     l419:
  5171  0046F6  866D               	bsf	3949,3,c	;volatile
  5172  0046F8                     l418:
  5173  0046F8  A66D               	btfss	3949,3,c	;volatile
  5174  0046FA  D7FD               	goto	l419
  5175                           
  5176                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
  5177  0046FC  0E01               	movlw	1
  5178  0046FE  6E58               	movwf	_USBDeviceState,c	;volatile
  5179  004700  0012               	return	
  5180  004702                     __end_of_USBDeviceAttach:
  5181                           	opt stack 0
  5182                           tblptru	equ	0xFF8
  5183                           tblptrh	equ	0xFF7
  5184                           tblptrl	equ	0xFF6
  5185                           tablat	equ	0xFF5
  5186                           intcon	equ	0xFF2
  5187                           postinc0	equ	0xFEE
  5188                           wreg	equ	0xFE8
  5189                           postdec1	equ	0xFE5
  5190                           fsr1l	equ	0xFE1
  5191                           status	equ	0xFD8
  5192                           
  5193 ;; *************** function _CDCTxService *****************
  5194 ;; Defined at:
  5195 ;;		line 836 in file "../../../../microchip/mla/v2017_03_06/framework/usb/src/usb_device_cdc.c"
  5196 ;; Parameters:    Size  Location     Type
  5197 ;;		None
  5198 ;; Auto vars:     Size  Location     Type
  5199 ;;  byte_to_send    1   12[BANK0 ] unsigned char 
  5200 ;;  i               1   11[BANK0 ] unsigned char 
  5201 ;; Return value:  Size  Location     Type
  5202 ;;                  1    wreg      void 
  5203 ;; Registers used:
  5204 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5205 ;; Tracked objects:
  5206 ;;		On entry : 0/0
  5207 ;;		On exit  : 0/0
  5208 ;;		Unchanged: 0/0
  5209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5210 ;;      Params:         0       0       0       0       0       0       0       0       0
  5211 ;;      Locals:         0       2       0       0       0       0       0       0       0
  5212 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5213 ;;      Totals:         0       2       0       0       0       0       0       0       0
  5214 ;;Total ram usage:        2 bytes
  5215 ;; Hardware stack levels used:    1
  5216 ;; Hardware stack levels required when called:   11
  5217 ;; This function calls:
  5218 ;;		_USBTransferOnePacket
  5219 ;; This function is called by:
  5220 ;;		_verificaUSB
  5221 ;; This function uses a non-reentrant model
  5222 ;;
  5223                           
  5224                           	psect	text15
  5225  002536                     __ptext15:
  5226                           	opt stack 0
  5227  002536                     _CDCTxService:
  5228                           	opt stack 18
  5229                           
  5230                           ;usb_device_cdc.c: 838: uint8_t byte_to_send;
  5231                           ;usb_device_cdc.c: 839: uint8_t i;
  5232                           ;usb_device_cdc.c: 841: {PIE2bits.USBIE = 0;};
  5233                           
  5234                           ;incstack = 0
  5235  002536  9AA0               	bcf	4000,5,c	;volatile
  5236                           
  5237                           ;usb_device_cdc.c: 843: {};
  5238                           ;usb_device_cdc.c: 845: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
  5239  002538  0102               	movlb	2	; () banked
  5240  00253A  5144               	movf	_CDCDataInHandle& (0+255),w,b
  5241  00253C  1145               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
  5242  00253E  B4D8               	btfsc	status,2,c
  5243  002540  D008               	goto	l789
  5244                           
  5245                           ; BSR set to: 2
  5246  002542  C244  FFD9         	movff	_CDCDataInHandle,fsr2l
  5247  002546  C245  FFDA         	movff	_CDCDataInHandle+1,fsr2h
  5248  00254A  AEDF               	btfss	indf2,7,c
  5249  00254C  D002               	goto	l789
  5250                           
  5251                           ; BSR set to: 2
  5252                           ;usb_device_cdc.c: 846: {
  5253                           ;usb_device_cdc.c: 847: {PIE2bits.USBIE = 1;};
  5254  00254E  8AA0               	bsf	4000,5,c	;volatile
  5255                           
  5256                           ;usb_device_cdc.c: 848: return;
  5257  002550  0012               	return	
  5258  002552                     l789:
  5259                           
  5260                           ; BSR set to: 2
  5261                           ;usb_device_cdc.c: 849: }
  5262                           ;usb_device_cdc.c: 856: if(cdc_trf_state == 3)
  5263                           
  5264                           ; BSR set to: 2
  5265  002552  0E03               	movlw	3
  5266  002554  0101               	movlb	1	; () banked
  5267  002556  19F5               	xorwf	_cdc_trf_state& (0+255),w,b
  5268  002558  A4D8               	btfss	status,2,c
  5269  00255A  D002               	goto	l791
  5270                           
  5271                           ; BSR set to: 1
  5272                           ;usb_device_cdc.c: 857: cdc_trf_state = 0;
  5273  00255C  0E00               	movlw	0
  5274  00255E  6FF5               	movwf	_cdc_trf_state& (0+255),b
  5275  002560                     l791:
  5276                           
  5277                           ; BSR set to: 1
  5278                           ;usb_device_cdc.c: 862: if(cdc_trf_state == 0)
  5279  002560  51F5               	movf	_cdc_trf_state& (0+255),w,b
  5280  002562  A4D8               	btfss	status,2,c
  5281  002564  D002               	goto	l792
  5282                           
  5283                           ; BSR set to: 1
  5284                           ;usb_device_cdc.c: 863: {
  5285                           ;usb_device_cdc.c: 864: {PIE2bits.USBIE = 1;};
  5286  002566  8AA0               	bsf	4000,5,c	;volatile
  5287                           
  5288                           ;usb_device_cdc.c: 865: return;
  5289  002568  0012               	return	
  5290  00256A                     l792:
  5291                           
  5292                           ; BSR set to: 1
  5293                           ;usb_device_cdc.c: 866: }
  5294                           ;usb_device_cdc.c: 871: if(cdc_trf_state == 2)
  5295                           
  5296                           ; BSR set to: 1
  5297  00256A  0E02               	movlw	2
  5298  00256C  19F5               	xorwf	_cdc_trf_state& (0+255),w,b
  5299  00256E  A4D8               	btfss	status,2,c
  5300  002570  D014               	goto	l793
  5301                           
  5302                           ; BSR set to: 1
  5303                           ;usb_device_cdc.c: 872: {
  5304                           ;usb_device_cdc.c: 873: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
  5305  002572  0E01               	movlw	1
  5306  002574  0100               	movlb	0	; () banked
  5307  002576  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
  5308  002578  0E00               	movlw	0
  5309  00257A  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
  5310  00257C  0E00               	movlw	0
  5311  00257E  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  5312  002580  0E00               	movlw	0
  5313  002582  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
  5314  002584  0E02               	movlw	2
  5315  002586  ECFD  F015         	call	_USBTransferOnePacket
  5316  00258A  C060  F244         	movff	?_USBTransferOnePacket,_CDCDataInHandle
  5317  00258E  C061  F245         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
  5318                           
  5319                           ;usb_device_cdc.c: 875: cdc_trf_state = 3;
  5320  002592  0E03               	movlw	3
  5321  002594  0101               	movlb	1	; () banked
  5322  002596  6FF5               	movwf	_cdc_trf_state& (0+255),b
  5323                           
  5324                           ;usb_device_cdc.c: 876: }
  5325  002598  D063               	goto	l795
  5326  00259A                     l793:
  5327                           
  5328                           ; BSR set to: 1
  5329                           ;usb_device_cdc.c: 877: else if(cdc_trf_state == 1)
  5330                           
  5331                           ; BSR set to: 1
  5332  00259A  05F5               	decf	_cdc_trf_state& (0+255),w,b
  5333  00259C  A4D8               	btfss	status,2,c
  5334  00259E  D060               	goto	l795
  5335                           
  5336                           ; BSR set to: 1
  5337                           ;usb_device_cdc.c: 878: {
  5338                           ;usb_device_cdc.c: 882: if(cdc_tx_len > sizeof(cdc_data_tx))
  5339  0025A0  0E40               	movlw	64
  5340  0025A2  6451               	cpfsgt	_cdc_tx_len,c
  5341  0025A4  D004               	goto	l796
  5342                           
  5343                           ; BSR set to: 1
  5344                           ;usb_device_cdc.c: 883: byte_to_send = sizeof(cdc_data_tx);
  5345  0025A6  0E40               	movlw	64
  5346  0025A8  0100               	movlb	0	; () banked
  5347  0025AA  6F6C               	movwf	CDCTxService@byte_to_send& (0+255),b
  5348  0025AC  D002               	goto	l797
  5349  0025AE                     l796:
  5350                           
  5351                           ; BSR set to: 1
  5352                           ;usb_device_cdc.c: 884: else
  5353                           ;usb_device_cdc.c: 885: byte_to_send = cdc_tx_len;
  5354  0025AE  C051  F06C         	movff	_cdc_tx_len,CDCTxService@byte_to_send
  5355  0025B2                     l797:
  5356                           
  5357                           ;usb_device_cdc.c: 890: cdc_tx_len = cdc_tx_len - byte_to_send;
  5358                           
  5359                           ; BSR set to: 1
  5360  0025B2  0100               	movlb	0	; () banked
  5361  0025B4  516C               	movf	CDCTxService@byte_to_send& (0+255),w,b
  5362  0025B6  0800               	sublw	0
  5363  0025B8  2451               	addwf	_cdc_tx_len,w,c
  5364  0025BA  6E51               	movwf	_cdc_tx_len,c
  5365                           
  5366                           ;usb_device_cdc.c: 892: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
  5367  0025BC  0E00               	movlw	0
  5368  0025BE  0102               	movlb	2	; () banked
  5369  0025C0  6F38               	movwf	_pCDCDst& (0+255),b
  5370  0025C2  0E05               	movlw	5
  5371  0025C4  6F39               	movwf	(_pCDCDst+1)& (0+255),b
  5372                           
  5373                           ; BSR set to: 2
  5374                           ;usb_device_cdc.c: 894: i = byte_to_send;
  5375  0025C6  C06C  F06B         	movff	CDCTxService@byte_to_send,CDCTxService@i
  5376                           
  5377                           ; BSR set to: 2
  5378                           ;usb_device_cdc.c: 895: if(cdc_mem_type == 0x00)
  5379  0025CA  515B               	movf	_cdc_mem_type& (0+255),w,b
  5380  0025CC  B4D8               	btfsc	status,2,c
  5381  0025CE  D012               	goto	l799
  5382  0025D0  D027               	goto	l803
  5383  0025D2                     
  5384                           ;usb_device_cdc.c: 898: {
  5385                           ;usb_device_cdc.c: 899: *pCDCDst.bRam = *pCDCSrc.bRom;
  5386                           
  5387                           ; BSR set to: 2
  5388  0025D2  C23B  FFD9         	movff	_pCDCSrc,fsr2l
  5389  0025D6  C23C  FFDA         	movff	_pCDCSrc+1,fsr2h
  5390  0025DA  C238  FFE1         	movff	_pCDCDst,fsr1l
  5391  0025DE  C239  FFE2         	movff	_pCDCDst+1,fsr1h
  5392  0025E2  CFDF FFE7          	movff	indf2,indf1
  5393                           
  5394                           ;usb_device_cdc.c: 900: pCDCDst.bRam++;
  5395  0025E6  0102               	movlb	2	; () banked
  5396  0025E8  4B38               	infsnz	_pCDCDst& (0+255),f,b
  5397  0025EA  2B39               	incf	(_pCDCDst+1)& (0+255),f,b
  5398                           
  5399                           ; BSR set to: 2
  5400                           ;usb_device_cdc.c: 901: pCDCSrc.bRom++;
  5401  0025EC  4B3B               	infsnz	_pCDCSrc& (0+255),f,b
  5402  0025EE  2B3C               	incf	(_pCDCSrc+1)& (0+255),f,b
  5403                           
  5404                           ; BSR set to: 2
  5405                           ;usb_device_cdc.c: 902: i--;
  5406  0025F0  0100               	movlb	0	; () banked
  5407  0025F2  076B               	decf	CDCTxService@i& (0+255),f,b
  5408  0025F4                     l799:
  5409                           
  5410                           ; BSR set to: 0
  5411  0025F4  0100               	movlb	0	; () banked
  5412  0025F6  516B               	movf	CDCTxService@i& (0+255),w,b
  5413  0025F8  B4D8               	btfsc	status,2,c
  5414  0025FA  D016               	goto	u6240
  5415  0025FC  D7EA               	goto	l800
  5416  0025FE                     
  5417                           ; BSR set to: 0
  5418                           ;usb_device_cdc.c: 908: {
  5419                           ;usb_device_cdc.c: 909: *pCDCDst.bRam = *pCDCSrc.bRam;
  5420                           
  5421                           ; BSR set to: 0
  5422  0025FE  C23B  FFD9         	movff	_pCDCSrc,fsr2l
  5423  002602  C23C  FFDA         	movff	_pCDCSrc+1,fsr2h
  5424  002606  C238  FFE1         	movff	_pCDCDst,fsr1l
  5425  00260A  C239  FFE2         	movff	_pCDCDst+1,fsr1h
  5426  00260E  CFDF FFE7          	movff	indf2,indf1
  5427                           
  5428                           ; BSR set to: 0
  5429                           ;usb_device_cdc.c: 910: pCDCDst.bRam++;
  5430  002612  0102               	movlb	2	; () banked
  5431  002614  4B38               	infsnz	_pCDCDst& (0+255),f,b
  5432  002616  2B39               	incf	(_pCDCDst+1)& (0+255),f,b
  5433                           
  5434                           ; BSR set to: 2
  5435                           ;usb_device_cdc.c: 911: pCDCSrc.bRam++;
  5436  002618  4B3B               	infsnz	_pCDCSrc& (0+255),f,b
  5437  00261A  2B3C               	incf	(_pCDCSrc+1)& (0+255),f,b
  5438                           
  5439                           ; BSR set to: 2
  5440                           ;usb_device_cdc.c: 912: i--;
  5441  00261C  0100               	movlb	0	; () banked
  5442  00261E  076B               	decf	CDCTxService@i& (0+255),f,b
  5443  002620                     l803:
  5444                           
  5445                           ; BSR set to: 0
  5446  002620  0100               	movlb	0	; () banked
  5447  002622  516B               	movf	CDCTxService@i& (0+255),w,b
  5448  002624  A4D8               	btfss	status,2,c
  5449  002626  D7EB               	goto	l804
  5450  002628                     u6240:
  5451                           
  5452                           ; BSR set to: 0
  5453                           ;usb_device_cdc.c: 913: }
  5454                           ;usb_device_cdc.c: 914: }
  5455                           ;usb_device_cdc.c: 920: if(cdc_tx_len == 0)
  5456                           
  5457                           ; BSR set to: 0
  5458                           
  5459                           ; BSR set to: 0
  5460  002628  5051               	movf	_cdc_tx_len,w,c
  5461  00262A  A4D8               	btfss	status,2,c
  5462  00262C  D009               	goto	l808
  5463                           
  5464                           ; BSR set to: 0
  5465                           ;usb_device_cdc.c: 921: {
  5466                           ;usb_device_cdc.c: 922: if(byte_to_send == 64)
  5467  00262E  0E40               	movlw	64
  5468  002630  196C               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
  5469  002632  A4D8               	btfss	status,2,c
  5470  002634  D002               	goto	l807
  5471                           
  5472                           ; BSR set to: 0
  5473                           ;usb_device_cdc.c: 923: cdc_trf_state = 2;
  5474  002636  0E02               	movlw	2
  5475  002638  D001               	goto	L2
  5476  00263A                     l807:
  5477                           
  5478                           ;usb_device_cdc.c: 924: else
  5479                           ;usb_device_cdc.c: 925: cdc_trf_state = 3;
  5480                           
  5481                           ; BSR set to: 1
  5482  00263A  0E03               	movlw	3
  5483  00263C                     L2:
  5484  00263C  0101               	movlb	1	; () banked
  5485  00263E  6FF5               	movwf	_cdc_trf_state& (0+255),b
  5486  002640                     l808:
  5487                           
  5488                           ;usb_device_cdc.c: 926: }
  5489                           ;usb_device_cdc.c: 927: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
  5490                           
  5491                           ; BSR set to: 1
  5492                           
  5493                           ; BSR set to: 1
  5494  002640  0E01               	movlw	1
  5495  002642  0100               	movlb	0	; () banked
  5496  002644  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
  5497  002646  0E00               	movlw	0
  5498  002648  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
  5499  00264A  0E05               	movlw	5
  5500  00264C  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  5501  00264E  C06C  F063         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
  5502  002652  0E02               	movlw	2
  5503  002654  ECFD  F015         	call	_USBTransferOnePacket
  5504  002658  C060  F244         	movff	?_USBTransferOnePacket,_CDCDataInHandle
  5505  00265C  C061  F245         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
  5506  002660                     l795:
  5507                           
  5508                           ;usb_device_cdc.c: 929: }
  5509                           ;usb_device_cdc.c: 931: {PIE2bits.USBIE = 1;};
  5510  002660  8AA0               	bsf	4000,5,c	;volatile
  5511  002662  0012               	return		;funcret
  5512  002664                     __end_of_CDCTxService:
  5513                           	opt stack 0
  5514                           tblptru	equ	0xFF8
  5515                           tblptrh	equ	0xFF7
  5516                           tblptrl	equ	0xFF6
  5517                           tablat	equ	0xFF5
  5518                           intcon	equ	0xFF2
  5519                           postinc0	equ	0xFEE
  5520                           wreg	equ	0xFE8
  5521                           indf1	equ	0xFE7
  5522                           postdec1	equ	0xFE5
  5523                           fsr1h	equ	0xFE2
  5524                           fsr1l	equ	0xFE1
  5525                           indf2	equ	0xFDF
  5526                           fsr2h	equ	0xFDA
  5527                           fsr2l	equ	0xFD9
  5528                           status	equ	0xFD8
  5529                           
  5530 ;; *************** function _USBTransferOnePacket *****************
  5531 ;; Defined at:
  5532 ;;		line 995 in file "../../../../microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
  5533 ;; Parameters:    Size  Location     Type
  5534 ;;  ep              1    wreg     unsigned char 
  5535 ;;  dir             1    0[BANK0 ] unsigned char 
  5536 ;;  data            2    1[BANK0 ] PTR unsigned char 
  5537 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
  5538 ;;  len             1    3[BANK0 ] unsigned char 
  5539 ;; Auto vars:     Size  Location     Type
  5540 ;;  ep              1    8[BANK0 ] unsigned char 
  5541 ;;  handle          2    9[BANK0 ] PTR volatile struct __BD
  5542 ;;		 -> RAM(2047), NULL(0), BDT(48), 
  5543 ;; Return value:  Size  Location     Type
  5544 ;;                  2    0[BANK0 ] PTR void 
  5545 ;; Registers used:
  5546 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5547 ;; Tracked objects:
  5548 ;;		On entry : 0/0
  5549 ;;		On exit  : 0/0
  5550 ;;		Unchanged: 0/0
  5551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5552 ;;      Params:         0       4       0       0       0       0       0       0       0
  5553 ;;      Locals:         0       3       0       0       0       0       0       0       0
  5554 ;;      Temps:          0       4       0       0       0       0       0       0       0
  5555 ;;      Totals:         0      11       0       0       0       0       0       0       0
  5556 ;;Total ram usage:       11 bytes
  5557 ;; Hardware stack levels used:    1
  5558 ;; Hardware stack levels required when called:   10
  5559 ;; This function calls:
  5560 ;;		Nothing
  5561 ;; This function is called by:
  5562 ;;		_CDCTxService
  5563 ;;		_USBCDCEventHandler
  5564 ;;		_getsUSBUSART
  5565 ;; This function uses a non-reentrant model
  5566 ;;
  5567                           
  5568                           	psect	text16
  5569  002BFA                     __ptext16:
  5570                           	opt stack 0
  5571  002BFA                     _USBTransferOnePacket:
  5572                           	opt stack 18
  5573                           
  5574                           ;incstack = 0
  5575                           ;USBTransferOnePacket@ep stored from wreg
  5576  002BFA  0100               	movlb	0	; () banked
  5577  002BFC  6F68               	movwf	USBTransferOnePacket@ep& (0+255),b
  5578                           
  5579                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
  5580                           ;usb_device.c: 1000: if(dir != 0)
  5581  002BFE  0100               	movlb	0	; () banked
  5582  002C00  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
  5583  002C02  B4D8               	btfsc	status,2,c
  5584  002C04  D007               	goto	l396
  5585                           
  5586                           ; BSR set to: 0
  5587                           ;usb_device.c: 1001: {
  5588                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
  5589  002C06  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
  5590  002C08  0D02               	mullw	2
  5591  002C0A  0E41               	movlw	low _pBDTEntryIn
  5592  002C0C  24F3               	addwf	prodl,w,c
  5593  002C0E  6ED9               	movwf	fsr2l,c
  5594  002C10  0E00               	movlw	high _pBDTEntryIn
  5595  002C12  D006               	goto	L3
  5596  002C14                     l396:
  5597                           
  5598                           ; BSR set to: 0
  5599                           ;usb_device.c: 1005: else
  5600                           ;usb_device.c: 1006: {
  5601                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
  5602                           
  5603                           ; BSR set to: 0
  5604  002C14  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
  5605  002C16  0D02               	mullw	2
  5606  002C18  0E0A               	movlw	low _pBDTEntryOut
  5607  002C1A  24F3               	addwf	prodl,w,c
  5608  002C1C  6ED9               	movwf	fsr2l,c
  5609  002C1E  0E02               	movlw	high _pBDTEntryOut
  5610  002C20                     L3:
  5611  002C20  20F4               	addwfc	prodh,w,c
  5612  002C22  6EDA               	movwf	fsr2h,c
  5613  002C24  CFDE F069          	movff	postinc2,USBTransferOnePacket@handle
  5614  002C28  CFDD F06A          	movff	postdec2,USBTransferOnePacket@handle+1
  5615                           
  5616                           ; BSR set to: 0
  5617                           ;usb_device.c: 1009: }
  5618                           ;usb_device.c: 1013: if(handle == 0)
  5619                           
  5620                           ; BSR set to: 0
  5621  002C2C  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
  5622  002C2E  116A               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  5623  002C30  A4D8               	btfss	status,2,c
  5624  002C32  D005               	goto	l398
  5625                           
  5626                           ; BSR set to: 0
  5627                           ;usb_device.c: 1014: {
  5628                           ;usb_device.c: 1015: return 0;
  5629  002C34  0E00               	movlw	0
  5630  002C36  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
  5631  002C38  0E00               	movlw	0
  5632  002C3A  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
  5633                           
  5634                           ; BSR set to: 0
  5635  002C3C  0012               	return	
  5636  002C3E                     l398:
  5637                           
  5638                           ; BSR set to: 0
  5639                           ;usb_device.c: 1016: }
  5640                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
  5641                           
  5642                           ; BSR set to: 0
  5643  002C3E  EE20 F002          	lfsr	2,2
  5644  002C42  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
  5645  002C44  26D9               	addwf	fsr2l,f,c
  5646  002C46  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  5647  002C48  22DA               	addwfc	fsr2h,f,c
  5648  002C4A  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
  5649  002C4E  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
  5650                           
  5651                           ;usb_device.c: 1030: handle->CNT = len;
  5652  002C52  EE20 F001          	lfsr	2,1
  5653  002C56  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
  5654  002C58  26D9               	addwf	fsr2l,f,c
  5655  002C5A  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  5656  002C5C  22DA               	addwfc	fsr2h,f,c
  5657  002C5E  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
  5658                           
  5659                           ; BSR set to: 0
  5660                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
  5661  002C62  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  5662  002C66  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  5663  002C6A  0E40               	movlw	64
  5664  002C6C  16DF               	andwf	indf2,f,c
  5665                           
  5666                           ; BSR set to: 0
  5667                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
  5668  002C6E  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  5669  002C72  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  5670  002C76  0E00               	movlw	0
  5671  002C78  86DB               	bsf	plusw2,3,c
  5672                           
  5673                           ; BSR set to: 0
  5674                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
  5675  002C7A  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  5676  002C7E  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  5677  002C82  0E00               	movlw	0
  5678  002C84  8EDB               	bsf	plusw2,7,c
  5679                           
  5680                           ; BSR set to: 0
  5681                           ;usb_device.c: 1036: if(dir != 0)
  5682  002C86  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
  5683  002C88  B4D8               	btfsc	status,2,c
  5684  002C8A  D018               	goto	l400
  5685                           
  5686                           ; BSR set to: 0
  5687                           ;usb_device.c: 1037: {
  5688                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
  5689  002C8C  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
  5690  002C8E  0D02               	mullw	2
  5691  002C90  0E41               	movlw	low _pBDTEntryIn
  5692  002C92  24F3               	addwf	prodl,w,c
  5693  002C94  6ED9               	movwf	fsr2l,c
  5694  002C96  0E00               	movlw	high _pBDTEntryIn
  5695  002C98  20F4               	addwfc	prodh,w,c
  5696  002C9A  6EDA               	movwf	fsr2h,c
  5697  002C9C  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
  5698  002CA0  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
  5699  002CA4  0E04               	movlw	4
  5700  002CA6  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
  5701  002CA8  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
  5702  002CAA  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
  5703  002CAC  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
  5704  002CAE  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
  5705  002CB0  0D02               	mullw	2
  5706  002CB2  0E41               	movlw	low _pBDTEntryIn
  5707  002CB4  24F3               	addwf	prodl,w,c
  5708  002CB6  6ED9               	movwf	fsr2l,c
  5709  002CB8  0E00               	movlw	high _pBDTEntryIn
  5710  002CBA  D017               	goto	L4
  5711  002CBC                     l400:
  5712                           
  5713                           ; BSR set to: 0
  5714                           ;usb_device.c: 1041: else
  5715                           ;usb_device.c: 1042: {
  5716                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
  5717                           
  5718                           ; BSR set to: 0
  5719  002CBC  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
  5720  002CBE  0D02               	mullw	2
  5721  002CC0  0E0A               	movlw	low _pBDTEntryOut
  5722  002CC2  24F3               	addwf	prodl,w,c
  5723  002CC4  6ED9               	movwf	fsr2l,c
  5724  002CC6  0E02               	movlw	high _pBDTEntryOut
  5725  002CC8  20F4               	addwfc	prodh,w,c
  5726  002CCA  6EDA               	movwf	fsr2h,c
  5727  002CCC  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
  5728  002CD0  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
  5729  002CD4  0E04               	movlw	4
  5730  002CD6  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
  5731  002CD8  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
  5732  002CDA  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
  5733  002CDC  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
  5734  002CDE  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
  5735  002CE0  0D02               	mullw	2
  5736  002CE2  0E0A               	movlw	low _pBDTEntryOut
  5737  002CE4  24F3               	addwf	prodl,w,c
  5738  002CE6  6ED9               	movwf	fsr2l,c
  5739  002CE8  0E02               	movlw	high _pBDTEntryOut
  5740  002CEA                     L4:
  5741  002CEA  20F4               	addwfc	prodh,w,c
  5742  002CEC  6EDA               	movwf	fsr2h,c
  5743  002CEE  C066  FFDE         	movff	??_USBTransferOnePacket+2,postinc2
  5744  002CF2  C067  FFDD         	movff	??_USBTransferOnePacket+3,postdec2
  5745                           
  5746                           ; BSR set to: 0
  5747                           ;usb_device.c: 1045: }
  5748                           ;usb_device.c: 1046: return (void*)handle;
  5749                           
  5750                           ; BSR set to: 0
  5751  002CF6  C069  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
  5752  002CFA  C06A  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
  5753  002CFE  0012               	return	
  5754  002D00                     __end_of_USBTransferOnePacket:
  5755                           	opt stack 0
  5756                           tblptru	equ	0xFF8
  5757                           tblptrh	equ	0xFF7
  5758                           tblptrl	equ	0xFF6
  5759                           tablat	equ	0xFF5
  5760                           prodh	equ	0xFF4
  5761                           prodl	equ	0xFF3
  5762                           intcon	equ	0xFF2
  5763                           postinc0	equ	0xFEE
  5764                           wreg	equ	0xFE8
  5765                           indf1	equ	0xFE7
  5766                           postdec1	equ	0xFE5
  5767                           fsr1h	equ	0xFE2
  5768                           fsr1l	equ	0xFE1
  5769                           indf2	equ	0xFDF
  5770                           postinc2	equ	0xFDE
  5771                           postdec2	equ	0xFDD
  5772                           plusw2	equ	0xFDB
  5773                           fsr2h	equ	0xFDA
  5774                           fsr2l	equ	0xFD9
  5775                           status	equ	0xFD8
  5776                           
  5777 ;; *************** function _gravaDadosEeprom *****************
  5778 ;; Defined at:
  5779 ;;		line 80 in file "eeprom.c"
  5780 ;; Parameters:    Size  Location     Type
  5781 ;;		None
  5782 ;; Auto vars:     Size  Location     Type
  5783 ;;  dado            1   29[BANK0 ] unsigned char 
  5784 ;;  dado            1   28[BANK0 ] unsigned char 
  5785 ;;  i               1   31[BANK0 ] char 
  5786 ;;  i               1   30[BANK0 ] char 
  5787 ;;  horimetro       4   35[BANK0 ] unsigned long 
  5788 ;;  pulsos          4   22[BANK0 ] unsigned long 
  5789 ;;  crc             1   34[BANK0 ] unsigned char 
  5790 ;;  indice          1   33[BANK0 ] unsigned char 
  5791 ;;  bombaLigada     1   32[BANK0 ] unsigned char 
  5792 ;;  bombaDesligo    1   26[BANK0 ] unsigned char 
  5793 ;; Return value:  Size  Location     Type
  5794 ;;                  1    wreg      void 
  5795 ;; Registers used:
  5796 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5797 ;; Tracked objects:
  5798 ;;		On entry : 0/0
  5799 ;;		On exit  : 0/0
  5800 ;;		Unchanged: 0/0
  5801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5802 ;;      Params:         0       0       0       0       0       0       0       0       0
  5803 ;;      Locals:         0      17       0       0       0       0       0       0       0
  5804 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5805 ;;      Totals:         0      17       0       0       0       0       0       0       0
  5806 ;;Total ram usage:       17 bytes
  5807 ;; Hardware stack levels used:    1
  5808 ;; Hardware stack levels required when called:   12
  5809 ;; This function calls:
  5810 ;;		___llmod
  5811 ;;		_crc8
  5812 ;;		_leBombaLigada
  5813 ;;		_leHorimetro
  5814 ;;		_le_pulsos
  5815 ;;		_writeEeprom
  5816 ;; This function is called by:
  5817 ;;		_delay
  5818 ;; This function uses a non-reentrant model
  5819 ;;
  5820                           
  5821                           	psect	text17
  5822  002030                     __ptext17:
  5823                           	opt stack 0
  5824  002030                     _gravaDadosEeprom:
  5825                           	opt stack 17
  5826                           
  5827                           ;eeprom.c: 82: static uint32_t horimetroAnterior=0;
  5828                           ;eeprom.c: 83: static bool bombaLigadaAnterior=0;
  5829                           ;eeprom.c: 85: bool bombaLigada=leBombaLigada();
  5830                           
  5831                           ; BSR set to: 0
  5832                           ;incstack = 0
  5833  002030  EC05  F025         	call	_leBombaLigada	;wreg free
  5834  002034  0100               	movlb	0	; () banked
  5835  002036  6F80               	movwf	gravaDadosEeprom@bombaLigada& (0+255),b
  5836                           
  5837                           ; BSR set to: 0
  5838                           ;eeprom.c: 86: bool bombaDesligou=((bombaLigada!=bombaLigadaAnterior) && (!bombaLigada))
      +                          ;
  5839  002038  0E00               	movlw	0
  5840  00203A  6F7B               	movwf	_gravaDadosEeprom$4779& (0+255),b
  5841                           
  5842                           ; BSR set to: 0
  5843  00203C  0102               	movlb	2	; () banked
  5844  00203E  5156               	movf	gravaDadosEeprom@bombaLigadaAnterior& (0+255),w,b
  5845  002040  0100               	movlb	0	; () banked
  5846  002042  1980               	xorwf	gravaDadosEeprom@bombaLigada& (0+255),w,b
  5847  002044  B4D8               	btfsc	status,2,c
  5848  002046  D005               	goto	l2135
  5849                           
  5850                           ; BSR set to: 0
  5851  002048  5180               	movf	gravaDadosEeprom@bombaLigada& (0+255),w,b
  5852  00204A  A4D8               	btfss	status,2,c
  5853  00204C  D002               	goto	l2135
  5854                           
  5855                           ; BSR set to: 0
  5856  00204E  0E01               	movlw	1
  5857  002050  6F7B               	movwf	_gravaDadosEeprom$4779& (0+255),b
  5858  002052                     l2135:
  5859                           
  5860                           ; BSR set to: 0
  5861                           
  5862                           ; BSR set to: 0
  5863  002052  C07B  F07A         	movff	_gravaDadosEeprom$4779,gravaDadosEeprom@bombaDesligou
  5864                           
  5865                           ; BSR set to: 0
  5866                           ;eeprom.c: 87: bombaLigadaAnterior=bombaLigada;
  5867  002056  C080  F256         	movff	gravaDadosEeprom@bombaLigada,gravaDadosEeprom@bombaLigadaAnterior
  5868                           
  5869                           ; BSR set to: 0
  5870                           ;eeprom.c: 89: uint32_t horimetro=leHorimetro();
  5871  00205A  EC30  F024         	call	_leHorimetro	;wreg free
  5872  00205E  C060  F083         	movff	?_leHorimetro,gravaDadosEeprom@horimetro
  5873  002062  C061  F084         	movff	?_leHorimetro+1,gravaDadosEeprom@horimetro+1
  5874  002066  C062  F085         	movff	?_leHorimetro+2,gravaDadosEeprom@horimetro+2
  5875  00206A  C063  F086         	movff	?_leHorimetro+3,gravaDadosEeprom@horimetro+3
  5876                           
  5877                           ;eeprom.c: 91: if ((horimetro==horimetroAnterior) && (!bombaDesligou))
  5878  00206E  0102               	movlb	2	; () banked
  5879  002070  5110               	movf	gravaDadosEeprom@horimetroAnterior& (0+255),w,b
  5880  002072  0100               	movlb	0	; () banked
  5881  002074  1983               	xorwf	gravaDadosEeprom@horimetro& (0+255),w,b
  5882  002076  E113               	bnz	l8237
  5883  002078  0102               	movlb	2	; () banked
  5884  00207A  5111               	movf	(gravaDadosEeprom@horimetroAnterior+1)& (0+255),w,b
  5885  00207C  0100               	movlb	0	; () banked
  5886  00207E  1984               	xorwf	(gravaDadosEeprom@horimetro+1)& (0+255),w,b
  5887  002080  E10E               	bnz	l8237
  5888  002082  0102               	movlb	2	; () banked
  5889  002084  5112               	movf	(gravaDadosEeprom@horimetroAnterior+2)& (0+255),w,b
  5890  002086  0100               	movlb	0	; () banked
  5891  002088  1985               	xorwf	(gravaDadosEeprom@horimetro+2)& (0+255),w,b
  5892  00208A  E109               	bnz	l8237
  5893  00208C  0102               	movlb	2	; () banked
  5894  00208E  5113               	movf	(gravaDadosEeprom@horimetroAnterior+3)& (0+255),w,b
  5895  002090  0100               	movlb	0	; () banked
  5896  002092  1986               	xorwf	(gravaDadosEeprom@horimetro+3)& (0+255),w,b
  5897  002094  A4D8               	btfss	status,2,c
  5898  002096  D003               	goto	l2136
  5899                           
  5900                           ; BSR set to: 0
  5901  002098  517A               	movf	gravaDadosEeprom@bombaDesligou& (0+255),w,b
  5902  00209A  B4D8               	btfsc	status,2,c
  5903  00209C  0012               	return	
  5904  00209E                     l2136:
  5905  00209E                     l8237:
  5906                           
  5907                           ; BSR set to: 0
  5908                           ;eeprom.c: 94: uint32_t pulsos=le_pulsos();
  5909  00209E  EC1D  F024         	call	_le_pulsos	;wreg free
  5910  0020A2  C060  F076         	movff	?_le_pulsos,gravaDadosEeprom@pulsos
  5911  0020A6  C061  F077         	movff	?_le_pulsos+1,gravaDadosEeprom@pulsos+1
  5912  0020AA  C062  F078         	movff	?_le_pulsos+2,gravaDadosEeprom@pulsos+2
  5913  0020AE  C063  F079         	movff	?_le_pulsos+3,gravaDadosEeprom@pulsos+3
  5914                           
  5915                           ;eeprom.c: 96: horimetroAnterior=horimetro;
  5916  0020B2  C083  F210         	movff	gravaDadosEeprom@horimetro,gravaDadosEeprom@horimetroAnterior
  5917  0020B6  C084  F211         	movff	gravaDadosEeprom@horimetro+1,gravaDadosEeprom@horimetroAnterior+1
  5918  0020BA  C085  F212         	movff	gravaDadosEeprom@horimetro+2,gravaDadosEeprom@horimetroAnterior+2
  5919  0020BE  C086  F213         	movff	gravaDadosEeprom@horimetro+3,gravaDadosEeprom@horimetroAnterior+3
  5920                           
  5921                           ;eeprom.c: 98: uint8_t indice=(horimetro % 28)*9;
  5922  0020C2  C083  F06D         	movff	gravaDadosEeprom@horimetro,___llmod@dividend
  5923  0020C6  C084  F06E         	movff	gravaDadosEeprom@horimetro+1,___llmod@dividend+1
  5924  0020CA  C085  F06F         	movff	gravaDadosEeprom@horimetro+2,___llmod@dividend+2
  5925  0020CE  C086  F070         	movff	gravaDadosEeprom@horimetro+3,___llmod@dividend+3
  5926  0020D2  0E1C               	movlw	28
  5927  0020D4  0100               	movlb	0	; () banked
  5928  0020D6  6F71               	movwf	___llmod@divisor& (0+255),b
  5929  0020D8  0E00               	movlw	0
  5930  0020DA  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
  5931  0020DC  0E00               	movlw	0
  5932  0020DE  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
  5933  0020E0  0E00               	movlw	0
  5934  0020E2  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
  5935  0020E4  ECAB  F020         	call	___llmod	;wreg free
  5936  0020E8  0100               	movlb	0	; () banked
  5937  0020EA  516D               	movf	?___llmod& (0+255),w,b
  5938  0020EC  0D09               	mullw	9
  5939  0020EE  CFF3 F081          	movff	prodl,gravaDadosEeprom@indice
  5940                           
  5941                           ; BSR set to: 0
  5942                           ;eeprom.c: 100: uint8_t crc=0xFF;
  5943  0020F2  6982               	setf	gravaDadosEeprom@crc& (0+255),b
  5944                           
  5945                           ; BSR set to: 0
  5946                           ;eeprom.c: 101: for (int8_t i=0;i<4;i++)
  5947  0020F4  0E00               	movlw	0
  5948  0020F6  6F7E               	movwf	gravaDadosEeprom@i& (0+255),b
  5949  0020F8                     l8247:
  5950                           
  5951                           ; BSR set to: 0
  5952  0020F8  517E               	movf	gravaDadosEeprom@i& (0+255),w,b
  5953  0020FA  0A80               	xorlw	128
  5954  0020FC  0F7C               	addlw	-132
  5955  0020FE  B0D8               	btfsc	status,0,c
  5956  002100  D019               	goto	u7030
  5957                           
  5958                           ; BSR set to: 0
  5959                           ;eeprom.c: 102: {
  5960                           ;eeprom.c: 103: uint8_t dado=pulsos;
  5961                           
  5962                           ; BSR set to: 0
  5963  002102  C076  F07C         	movff	gravaDadosEeprom@pulsos,gravaDadosEeprom@dado
  5964                           
  5965                           ; BSR set to: 0
  5966                           ;eeprom.c: 104: crc=crc8(dado, crc);
  5967  002106  C082  F060         	movff	gravaDadosEeprom@crc,crc8@crc
  5968  00210A  517C               	movf	gravaDadosEeprom@dado& (0+255),w,b
  5969  00210C  EC8F  F024         	call	_crc8
  5970  002110  0100               	movlb	0	; () banked
  5971  002112  6F82               	movwf	gravaDadosEeprom@crc& (0+255),b
  5972                           
  5973                           ; BSR set to: 0
  5974                           ;eeprom.c: 105: writeEeprom(indice++,dado);
  5975  002114  C07C  F061         	movff	gravaDadosEeprom@dado,writeEeprom@b
  5976  002118  5181               	movf	gravaDadosEeprom@indice& (0+255),w,b
  5977  00211A  EC24  F022         	call	_writeEeprom
  5978  00211E  0100               	movlb	0	; () banked
  5979  002120  2B81               	incf	gravaDadosEeprom@indice& (0+255),f,b
  5980                           
  5981                           ; BSR set to: 0
  5982                           ;eeprom.c: 106: pulsos>>=8;
  5983  002122  C077  F076         	movff	gravaDadosEeprom@pulsos+1,gravaDadosEeprom@pulsos
  5984  002126  C078  F077         	movff	gravaDadosEeprom@pulsos+2,gravaDadosEeprom@pulsos+1
  5985  00212A  C079  F078         	movff	gravaDadosEeprom@pulsos+3,gravaDadosEeprom@pulsos+2
  5986  00212E  6B79               	clrf	(gravaDadosEeprom@pulsos+3)& (0+255),b
  5987                           
  5988                           ; BSR set to: 0
  5989  002130  2B7E               	incf	gravaDadosEeprom@i& (0+255),f,b
  5990  002132  D7E2               	goto	l8247
  5991  002134                     u7030:
  5992                           
  5993                           ; BSR set to: 0
  5994                           ;eeprom.c: 107: }
  5995                           ;eeprom.c: 109: for (int8_t i=0;i<4;i++)
  5996                           
  5997                           ; BSR set to: 0
  5998  002134  0E00               	movlw	0
  5999  002136  6F7F               	movwf	gravaDadosEeprom@i_4790& (0+255),b
  6000  002138                     l8265:
  6001                           
  6002                           ; BSR set to: 0
  6003  002138  517F               	movf	gravaDadosEeprom@i_4790& (0+255),w,b
  6004  00213A  0A80               	xorlw	128
  6005  00213C  0F7C               	addlw	-132
  6006  00213E  B0D8               	btfsc	status,0,c
  6007  002140  D019               	goto	u7050
  6008                           
  6009                           ; BSR set to: 0
  6010                           ;eeprom.c: 110: {
  6011                           ;eeprom.c: 111: uint8_t dado=horimetro;
  6012                           
  6013                           ; BSR set to: 0
  6014  002142  C083  F07D         	movff	gravaDadosEeprom@horimetro,gravaDadosEeprom@dado_4791
  6015                           
  6016                           ; BSR set to: 0
  6017                           ;eeprom.c: 112: crc=crc8(dado, crc);
  6018  002146  C082  F060         	movff	gravaDadosEeprom@crc,crc8@crc
  6019  00214A  517D               	movf	gravaDadosEeprom@dado_4791& (0+255),w,b
  6020  00214C  EC8F  F024         	call	_crc8
  6021  002150  0100               	movlb	0	; () banked
  6022  002152  6F82               	movwf	gravaDadosEeprom@crc& (0+255),b
  6023                           
  6024                           ; BSR set to: 0
  6025                           ;eeprom.c: 113: writeEeprom(indice++,dado);
  6026  002154  C07D  F061         	movff	gravaDadosEeprom@dado_4791,writeEeprom@b
  6027  002158  5181               	movf	gravaDadosEeprom@indice& (0+255),w,b
  6028  00215A  EC24  F022         	call	_writeEeprom
  6029  00215E  0100               	movlb	0	; () banked
  6030  002160  2B81               	incf	gravaDadosEeprom@indice& (0+255),f,b
  6031                           
  6032                           ; BSR set to: 0
  6033                           ;eeprom.c: 114: horimetro>>=8;
  6034  002162  C084  F083         	movff	gravaDadosEeprom@horimetro+1,gravaDadosEeprom@horimetro
  6035  002166  C085  F084         	movff	gravaDadosEeprom@horimetro+2,gravaDadosEeprom@horimetro+1
  6036  00216A  C086  F085         	movff	gravaDadosEeprom@horimetro+3,gravaDadosEeprom@horimetro+2
  6037  00216E  6B86               	clrf	(gravaDadosEeprom@horimetro+3)& (0+255),b
  6038                           
  6039                           ; BSR set to: 0
  6040  002170  2B7F               	incf	gravaDadosEeprom@i_4790& (0+255),f,b
  6041  002172  D7E2               	goto	l8265
  6042  002174                     u7050:
  6043                           
  6044                           ; BSR set to: 0
  6045                           ;eeprom.c: 115: }
  6046                           ;eeprom.c: 116: writeEeprom(indice,crc);
  6047                           
  6048                           ; BSR set to: 0
  6049  002174  C082  F061         	movff	gravaDadosEeprom@crc,writeEeprom@b
  6050  002178  5181               	movf	gravaDadosEeprom@indice& (0+255),w,b
  6051  00217A  EC24  F022         	call	_writeEeprom
  6052  00217E  0012               	return		;funcret
  6053  002180                     __end_of_gravaDadosEeprom:
  6054                           	opt stack 0
  6055                           tblptru	equ	0xFF8
  6056                           tblptrh	equ	0xFF7
  6057                           tblptrl	equ	0xFF6
  6058                           tablat	equ	0xFF5
  6059                           prodh	equ	0xFF4
  6060                           prodl	equ	0xFF3
  6061                           intcon	equ	0xFF2
  6062                           postinc0	equ	0xFEE
  6063                           wreg	equ	0xFE8
  6064                           indf1	equ	0xFE7
  6065                           postdec1	equ	0xFE5
  6066                           fsr1h	equ	0xFE2
  6067                           fsr1l	equ	0xFE1
  6068                           indf2	equ	0xFDF
  6069                           postinc2	equ	0xFDE
  6070                           postdec2	equ	0xFDD
  6071                           plusw2	equ	0xFDB
  6072                           fsr2h	equ	0xFDA
  6073                           fsr2l	equ	0xFD9
  6074                           status	equ	0xFD8
  6075                           
  6076 ;; *************** function _writeEeprom *****************
  6077 ;; Defined at:
  6078 ;;		line 51 in file "eeprom.c"
  6079 ;; Parameters:    Size  Location     Type
  6080 ;;  end             1    wreg     unsigned char 
  6081 ;;  b               1    1[BANK0 ] unsigned char 
  6082 ;; Auto vars:     Size  Location     Type
  6083 ;;  end             1    3[BANK0 ] unsigned char 
  6084 ;;  intEnable       1    2[BANK0 ] unsigned char 
  6085 ;; Return value:  Size  Location     Type
  6086 ;;                  1    wreg      void 
  6087 ;; Registers used:
  6088 ;;		wreg, status,2, cstack
  6089 ;; Tracked objects:
  6090 ;;		On entry : 0/0
  6091 ;;		On exit  : 0/0
  6092 ;;		Unchanged: 0/0
  6093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6094 ;;      Params:         0       1       0       0       0       0       0       0       0
  6095 ;;      Locals:         0       2       0       0       0       0       0       0       0
  6096 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6097 ;;      Totals:         0       3       0       0       0       0       0       0       0
  6098 ;;Total ram usage:        3 bytes
  6099 ;; Hardware stack levels used:    1
  6100 ;; Hardware stack levels required when called:   11
  6101 ;; This function calls:
  6102 ;;		_readEeprom
  6103 ;; This function is called by:
  6104 ;;		_gravaDadosEeprom
  6105 ;; This function uses a non-reentrant model
  6106 ;;
  6107                           
  6108                           	psect	text18
  6109  004448                     __ptext18:
  6110                           	opt stack 0
  6111  004448                     _writeEeprom:
  6112                           	opt stack 17
  6113                           
  6114                           ;incstack = 0
  6115                           ;writeEeprom@end stored from wreg
  6116  004448  0100               	movlb	0	; () banked
  6117  00444A  6F63               	movwf	writeEeprom@end& (0+255),b
  6118                           
  6119                           ;eeprom.c: 53: if (readEeprom(end) == b)
  6120  00444C  0100               	movlb	0	; () banked
  6121  00444E  5163               	movf	writeEeprom@end& (0+255),w,b
  6122  004450  ECF5  F024         	call	_readEeprom
  6123  004454  0100               	movlb	0	; () banked
  6124  004456  1961               	xorwf	writeEeprom@b& (0+255),w,b
  6125  004458  B4D8               	btfsc	status,2,c
  6126  00445A  0012               	return	
  6127                           
  6128                           ; BSR set to: 0
  6129                           ;eeprom.c: 56: EEADR = end;
  6130                           
  6131                           ; BSR set to: 0
  6132                           ;eeprom.c: 54: return;
  6133  00445C  C063  FFA9         	movff	writeEeprom@end,4009	;volatile
  6134                           
  6135                           ;eeprom.c: 57: EEDATA = b;
  6136  004460  C061  FFA8         	movff	writeEeprom@b,4008	;volatile
  6137                           
  6138                           ;eeprom.c: 58: EECON1bits.EEPGD = 0;
  6139  004464  9EA6               	bcf	4006,7,c	;volsfr
  6140                           
  6141                           ;eeprom.c: 59: EECON1bits.CFGS = 0;
  6142  004466  9CA6               	bcf	4006,6,c	;volsfr
  6143                           
  6144                           ;eeprom.c: 60: EECON1bits.WREN = 1;
  6145  004468  84A6               	bsf	4006,2,c	;volsfr
  6146                           
  6147                           ; BSR set to: 0
  6148                           ;eeprom.c: 61: uint8_t intEnable = GIEH;
  6149  00446A  0E00               	movlw	0
  6150  00446C  BEF2               	btfsc	intcon,7,c	;volatile
  6151  00446E  0E01               	movlw	1
  6152  004470  6F62               	movwf	writeEeprom@intEnable& (0+255),b
  6153                           
  6154                           ; BSR set to: 0
  6155                           ;eeprom.c: 62: GIEH = 0;
  6156  004472  9EF2               	bcf	intcon,7,c	;volatile
  6157                           
  6158                           ;eeprom.c: 63: EECON2=0x55;
  6159  004474  0E55               	movlw	85
  6160  004476  6EA7               	movwf	4007,c	;volsfr
  6161                           
  6162                           ;eeprom.c: 64: EECON2=0xAA;
  6163  004478  0EAA               	movlw	170
  6164  00447A  6EA7               	movwf	4007,c	;volsfr
  6165                           
  6166                           ; BSR set to: 0
  6167                           ;eeprom.c: 65: EECON1bits.WR = 1;
  6168  00447C  82A6               	bsf	4006,1,c	;volsfr
  6169                           
  6170                           ; BSR set to: 0
  6171                           ;eeprom.c: 66: GIEH = intEnable;
  6172  00447E  A162               	btfss	writeEeprom@intEnable& (0+255),0,b
  6173  004480  D002               	goto	u6340
  6174  004482  8EF2               	bsf	intcon,7,c	;volatile
  6175  004484  D001               	goto	u6355
  6176  004486                     u6340:
  6177  004486  9EF2               	bcf	intcon,7,c	;volatile
  6178  004488                     u6355:
  6179                           
  6180                           ;eeprom.c: 67: while (EECON1bits.WR == 1);
  6181  004488  B2A6               	btfsc	4006,1,c	;volsfr
  6182  00448A  D7FE               	goto	u6355
  6183                           
  6184                           ;eeprom.c: 68: EECON1bits.WREN = 0;
  6185  00448C  94A6               	bcf	4006,2,c	;volsfr
  6186  00448E  0012               	return		;funcret
  6187  004490                     __end_of_writeEeprom:
  6188                           	opt stack 0
  6189                           tblptru	equ	0xFF8
  6190                           tblptrh	equ	0xFF7
  6191                           tblptrl	equ	0xFF6
  6192                           tablat	equ	0xFF5
  6193                           prodh	equ	0xFF4
  6194                           prodl	equ	0xFF3
  6195                           intcon	equ	0xFF2
  6196                           postinc0	equ	0xFEE
  6197                           wreg	equ	0xFE8
  6198                           indf1	equ	0xFE7
  6199                           postdec1	equ	0xFE5
  6200                           fsr1h	equ	0xFE2
  6201                           fsr1l	equ	0xFE1
  6202                           indf2	equ	0xFDF
  6203                           postinc2	equ	0xFDE
  6204                           postdec2	equ	0xFDD
  6205                           plusw2	equ	0xFDB
  6206                           fsr2h	equ	0xFDA
  6207                           fsr2l	equ	0xFD9
  6208                           status	equ	0xFD8
  6209                           
  6210 ;; *************** function _readEeprom *****************
  6211 ;; Defined at:
  6212 ;;		line 71 in file "eeprom.c"
  6213 ;; Parameters:    Size  Location     Type
  6214 ;;  end             1    wreg     unsigned char 
  6215 ;; Auto vars:     Size  Location     Type
  6216 ;;  end             1    0[BANK0 ] unsigned char 
  6217 ;; Return value:  Size  Location     Type
  6218 ;;                  1    wreg      unsigned char 
  6219 ;; Registers used:
  6220 ;;		wreg, status,2
  6221 ;; Tracked objects:
  6222 ;;		On entry : 0/0
  6223 ;;		On exit  : 0/0
  6224 ;;		Unchanged: 0/0
  6225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6226 ;;      Params:         0       0       0       0       0       0       0       0       0
  6227 ;;      Locals:         0       1       0       0       0       0       0       0       0
  6228 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6229 ;;      Totals:         0       1       0       0       0       0       0       0       0
  6230 ;;Total ram usage:        1 bytes
  6231 ;; Hardware stack levels used:    1
  6232 ;; Hardware stack levels required when called:   10
  6233 ;; This function calls:
  6234 ;;		Nothing
  6235 ;; This function is called by:
  6236 ;;		_writeEeprom
  6237 ;;		_retornaDadosEeprom
  6238 ;; This function uses a non-reentrant model
  6239 ;;
  6240                           
  6241                           	psect	text19
  6242  0049EA                     __ptext19:
  6243                           	opt stack 0
  6244  0049EA                     _readEeprom:
  6245                           	opt stack 18
  6246                           
  6247                           ;incstack = 0
  6248                           ;readEeprom@end stored from wreg
  6249  0049EA  0100               	movlb	0	; () banked
  6250  0049EC  6F60               	movwf	readEeprom@end& (0+255),b
  6251                           
  6252                           ;eeprom.c: 73: EEADR = end;
  6253  0049EE  C060  FFA9         	movff	readEeprom@end,4009	;volatile
  6254                           
  6255                           ;eeprom.c: 74: EECON1bits.EEPGD = 0;
  6256  0049F2  9EA6               	bcf	4006,7,c	;volsfr
  6257                           
  6258                           ;eeprom.c: 75: EECON1bits.CFGS = 0;
  6259  0049F4  9CA6               	bcf	4006,6,c	;volsfr
  6260                           
  6261                           ;eeprom.c: 76: EECON1bits.RD = 1;
  6262  0049F6  80A6               	bsf	4006,0,c	;volsfr
  6263                           
  6264                           ;eeprom.c: 77: return EEDATA;
  6265  0049F8  50A8               	movf	4008,w,c	;volatile
  6266  0049FA  0012               	return	
  6267  0049FC                     __end_of_readEeprom:
  6268                           	opt stack 0
  6269                           tblptru	equ	0xFF8
  6270                           tblptrh	equ	0xFF7
  6271                           tblptrl	equ	0xFF6
  6272                           tablat	equ	0xFF5
  6273                           prodh	equ	0xFF4
  6274                           prodl	equ	0xFF3
  6275                           intcon	equ	0xFF2
  6276                           postinc0	equ	0xFEE
  6277                           wreg	equ	0xFE8
  6278                           indf1	equ	0xFE7
  6279                           postdec1	equ	0xFE5
  6280                           fsr1h	equ	0xFE2
  6281                           fsr1l	equ	0xFE1
  6282                           indf2	equ	0xFDF
  6283                           postinc2	equ	0xFDE
  6284                           postdec2	equ	0xFDD
  6285                           plusw2	equ	0xFDB
  6286                           fsr2h	equ	0xFDA
  6287                           fsr2l	equ	0xFD9
  6288                           status	equ	0xFD8
  6289                           
  6290 ;; *************** function _le_pulsos *****************
  6291 ;; Defined at:
  6292 ;;		line 23 in file "Pulses.c"
  6293 ;; Parameters:    Size  Location     Type
  6294 ;;		None
  6295 ;; Auto vars:     Size  Location     Type
  6296 ;;  freq            4    4[BANK0 ] unsigned long 
  6297 ;; Return value:  Size  Location     Type
  6298 ;;                  4    0[BANK0 ] unsigned long 
  6299 ;; Registers used:
  6300 ;;		None
  6301 ;; Tracked objects:
  6302 ;;		On entry : 0/0
  6303 ;;		On exit  : 0/0
  6304 ;;		Unchanged: 0/0
  6305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6306 ;;      Params:         0       4       0       0       0       0       0       0       0
  6307 ;;      Locals:         0       4       0       0       0       0       0       0       0
  6308 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6309 ;;      Totals:         0       8       0       0       0       0       0       0       0
  6310 ;;Total ram usage:        8 bytes
  6311 ;; Hardware stack levels used:    1
  6312 ;; Hardware stack levels required when called:   10
  6313 ;; This function calls:
  6314 ;;		Nothing
  6315 ;; This function is called by:
  6316 ;;		_gravaDadosEeprom
  6317 ;; This function uses a non-reentrant model
  6318 ;;
  6319                           
  6320                           	psect	text20
  6321  00483A                     __ptext20:
  6322                           	opt stack 0
  6323  00483A                     _le_pulsos:
  6324                           	opt stack 18
  6325                           
  6326                           ;Pulses.c: 25: CCP1IE=0;
  6327                           
  6328                           ;incstack = 0
  6329  00483A  949D               	bcf	3997,2,c	;volatile
  6330                           
  6331                           ;Pulses.c: 26: uint32_t freq=freqPulses;
  6332  00483C  C047  F064         	movff	_freqPulses,le_pulsos@freq	;volatile
  6333  004840  C048  F065         	movff	_freqPulses+1,le_pulsos@freq+1	;volatile
  6334  004844  C049  F066         	movff	_freqPulses+2,le_pulsos@freq+2	;volatile
  6335  004848  C04A  F067         	movff	_freqPulses+3,le_pulsos@freq+3	;volatile
  6336                           
  6337                           ;Pulses.c: 28: CCP1IE=1;
  6338  00484C  849D               	bsf	3997,2,c	;volatile
  6339                           
  6340                           ;Pulses.c: 29: return freq;
  6341  00484E  C064  F060         	movff	le_pulsos@freq,?_le_pulsos
  6342  004852  C065  F061         	movff	le_pulsos@freq+1,?_le_pulsos+1
  6343  004856  C066  F062         	movff	le_pulsos@freq+2,?_le_pulsos+2
  6344  00485A  C067  F063         	movff	le_pulsos@freq+3,?_le_pulsos+3
  6345  00485E  0012               	return		;funcret
  6346  004860                     __end_of_le_pulsos:
  6347                           	opt stack 0
  6348                           tblptru	equ	0xFF8
  6349                           tblptrh	equ	0xFF7
  6350                           tblptrl	equ	0xFF6
  6351                           tablat	equ	0xFF5
  6352                           prodh	equ	0xFF4
  6353                           prodl	equ	0xFF3
  6354                           intcon	equ	0xFF2
  6355                           postinc0	equ	0xFEE
  6356                           wreg	equ	0xFE8
  6357                           indf1	equ	0xFE7
  6358                           postdec1	equ	0xFE5
  6359                           fsr1h	equ	0xFE2
  6360                           fsr1l	equ	0xFE1
  6361                           indf2	equ	0xFDF
  6362                           postinc2	equ	0xFDE
  6363                           postdec2	equ	0xFDD
  6364                           plusw2	equ	0xFDB
  6365                           fsr2h	equ	0xFDA
  6366                           fsr2l	equ	0xFD9
  6367                           status	equ	0xFD8
  6368                           
  6369 ;; *************** function _leHorimetro *****************
  6370 ;; Defined at:
  6371 ;;		line 32 in file "Pulses.c"
  6372 ;; Parameters:    Size  Location     Type
  6373 ;;		None
  6374 ;; Auto vars:     Size  Location     Type
  6375 ;;  horimetro       4    4[BANK0 ] unsigned long 
  6376 ;; Return value:  Size  Location     Type
  6377 ;;                  4    0[BANK0 ] unsigned long 
  6378 ;; Registers used:
  6379 ;;		None
  6380 ;; Tracked objects:
  6381 ;;		On entry : 0/0
  6382 ;;		On exit  : 0/0
  6383 ;;		Unchanged: 0/0
  6384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6385 ;;      Params:         0       4       0       0       0       0       0       0       0
  6386 ;;      Locals:         0       4       0       0       0       0       0       0       0
  6387 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6388 ;;      Totals:         0       8       0       0       0       0       0       0       0
  6389 ;;Total ram usage:        8 bytes
  6390 ;; Hardware stack levels used:    1
  6391 ;; Hardware stack levels required when called:   10
  6392 ;; This function calls:
  6393 ;;		Nothing
  6394 ;; This function is called by:
  6395 ;;		_gravaDadosEeprom
  6396 ;; This function uses a non-reentrant model
  6397 ;;
  6398                           
  6399                           	psect	text21
  6400  004860                     __ptext21:
  6401                           	opt stack 0
  6402  004860                     _leHorimetro:
  6403                           	opt stack 18
  6404                           
  6405                           ;Pulses.c: 34: CCP1IE=0;
  6406                           
  6407                           ;incstack = 0
  6408  004860  949D               	bcf	3997,2,c	;volatile
  6409                           
  6410                           ;Pulses.c: 35: uint32_t horimetro=tempoHorimetro;
  6411  004862  C220  F064         	movff	_tempoHorimetro,leHorimetro@horimetro	;volatile
  6412  004866  C221  F065         	movff	_tempoHorimetro+1,leHorimetro@horimetro+1	;volatile
  6413  00486A  C222  F066         	movff	_tempoHorimetro+2,leHorimetro@horimetro+2	;volatile
  6414  00486E  C223  F067         	movff	_tempoHorimetro+3,leHorimetro@horimetro+3	;volatile
  6415                           
  6416                           ;Pulses.c: 36: CCP1IE=1;
  6417  004872  849D               	bsf	3997,2,c	;volatile
  6418                           
  6419                           ;Pulses.c: 37: return horimetro;
  6420  004874  C064  F060         	movff	leHorimetro@horimetro,?_leHorimetro
  6421  004878  C065  F061         	movff	leHorimetro@horimetro+1,?_leHorimetro+1
  6422  00487C  C066  F062         	movff	leHorimetro@horimetro+2,?_leHorimetro+2
  6423  004880  C067  F063         	movff	leHorimetro@horimetro+3,?_leHorimetro+3
  6424  004884  0012               	return		;funcret
  6425  004886                     __end_of_leHorimetro:
  6426                           	opt stack 0
  6427                           tblptru	equ	0xFF8
  6428                           tblptrh	equ	0xFF7
  6429                           tblptrl	equ	0xFF6
  6430                           tablat	equ	0xFF5
  6431                           prodh	equ	0xFF4
  6432                           prodl	equ	0xFF3
  6433                           intcon	equ	0xFF2
  6434                           postinc0	equ	0xFEE
  6435                           wreg	equ	0xFE8
  6436                           indf1	equ	0xFE7
  6437                           postdec1	equ	0xFE5
  6438                           fsr1h	equ	0xFE2
  6439                           fsr1l	equ	0xFE1
  6440                           indf2	equ	0xFDF
  6441                           postinc2	equ	0xFDE
  6442                           postdec2	equ	0xFDD
  6443                           plusw2	equ	0xFDB
  6444                           fsr2h	equ	0xFDA
  6445                           fsr2l	equ	0xFD9
  6446                           status	equ	0xFD8
  6447                           
  6448 ;; *************** function _leBombaLigada *****************
  6449 ;; Defined at:
  6450 ;;		line 40 in file "Pulses.c"
  6451 ;; Parameters:    Size  Location     Type
  6452 ;;		None
  6453 ;; Auto vars:     Size  Location     Type
  6454 ;;  bombaLigada     1    0[BANK0 ] unsigned char 
  6455 ;; Return value:  Size  Location     Type
  6456 ;;                  1    wreg      unsigned char 
  6457 ;; Registers used:
  6458 ;;		wreg, status,2
  6459 ;; Tracked objects:
  6460 ;;		On entry : 0/0
  6461 ;;		On exit  : 0/0
  6462 ;;		Unchanged: 0/0
  6463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6464 ;;      Params:         0       0       0       0       0       0       0       0       0
  6465 ;;      Locals:         0       1       0       0       0       0       0       0       0
  6466 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6467 ;;      Totals:         0       1       0       0       0       0       0       0       0
  6468 ;;Total ram usage:        1 bytes
  6469 ;; Hardware stack levels used:    1
  6470 ;; Hardware stack levels required when called:   10
  6471 ;; This function calls:
  6472 ;;		Nothing
  6473 ;; This function is called by:
  6474 ;;		_gravaDadosEeprom
  6475 ;; This function uses a non-reentrant model
  6476 ;;
  6477                           
  6478                           	psect	text22
  6479  004A0A                     __ptext22:
  6480                           	opt stack 0
  6481  004A0A                     _leBombaLigada:
  6482                           	opt stack 18
  6483                           
  6484                           ;Pulses.c: 42: CCP1IE=0;
  6485                           
  6486                           ;incstack = 0
  6487  004A0A  949D               	bcf	3997,2,c	;volatile
  6488                           
  6489                           ;Pulses.c: 43: bool bombaLigada=horimetroLigado;
  6490  004A0C  C059  F060         	movff	_horimetroLigado,leBombaLigada@bombaLigada	;volatile
  6491                           
  6492                           ;Pulses.c: 44: CCP1IE=1;
  6493  004A10  849D               	bsf	3997,2,c	;volatile
  6494                           
  6495                           ;Pulses.c: 45: return bombaLigada;
  6496  004A12  0100               	movlb	0	; () banked
  6497  004A14  5160               	movf	leBombaLigada@bombaLigada& (0+255),w,b
  6498  004A16  0012               	return	
  6499  004A18                     __end_of_leBombaLigada:
  6500                           	opt stack 0
  6501                           tblptru	equ	0xFF8
  6502                           tblptrh	equ	0xFF7
  6503                           tblptrl	equ	0xFF6
  6504                           tablat	equ	0xFF5
  6505                           prodh	equ	0xFF4
  6506                           prodl	equ	0xFF3
  6507                           intcon	equ	0xFF2
  6508                           postinc0	equ	0xFEE
  6509                           wreg	equ	0xFE8
  6510                           indf1	equ	0xFE7
  6511                           postdec1	equ	0xFE5
  6512                           fsr1h	equ	0xFE2
  6513                           fsr1l	equ	0xFE1
  6514                           indf2	equ	0xFDF
  6515                           postinc2	equ	0xFDE
  6516                           postdec2	equ	0xFDD
  6517                           plusw2	equ	0xFDB
  6518                           fsr2h	equ	0xFDA
  6519                           fsr2l	equ	0xFD9
  6520                           status	equ	0xFD8
  6521                           
  6522 ;; *************** function _crc8 *****************
  6523 ;; Defined at:
  6524 ;;		line 45 in file "eeprom.c"
  6525 ;; Parameters:    Size  Location     Type
  6526 ;;  dado            1    wreg     unsigned char 
  6527 ;;  crc             1    0[BANK0 ] unsigned char 
  6528 ;; Auto vars:     Size  Location     Type
  6529 ;;  dado            1    3[BANK0 ] unsigned char 
  6530 ;; Return value:  Size  Location     Type
  6531 ;;                  1    wreg      unsigned char 
  6532 ;; Registers used:
  6533 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  6534 ;; Tracked objects:
  6535 ;;		On entry : 0/0
  6536 ;;		On exit  : 0/0
  6537 ;;		Unchanged: 0/0
  6538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6539 ;;      Params:         0       1       0       0       0       0       0       0       0
  6540 ;;      Locals:         0       1       0       0       0       0       0       0       0
  6541 ;;      Temps:          0       2       0       0       0       0       0       0       0
  6542 ;;      Totals:         0       4       0       0       0       0       0       0       0
  6543 ;;Total ram usage:        4 bytes
  6544 ;; Hardware stack levels used:    1
  6545 ;; Hardware stack levels required when called:   10
  6546 ;; This function calls:
  6547 ;;		Nothing
  6548 ;; This function is called by:
  6549 ;;		_gravaDadosEeprom
  6550 ;;		_retornaDadosEeprom
  6551 ;; This function uses a non-reentrant model
  6552 ;;
  6553                           
  6554                           	psect	text23
  6555  00491E                     __ptext23:
  6556                           	opt stack 0
  6557  00491E                     _crc8:
  6558                           	opt stack 18
  6559                           
  6560                           ; BSR set to: 0
  6561                           ;incstack = 0
  6562                           ;crc8@dado stored from wreg
  6563  00491E  0100               	movlb	0	; () banked
  6564  004920  6F63               	movwf	crc8@dado& (0+255),b
  6565                           
  6566                           ;eeprom.c: 47: crc = CRC8Table[crc ^ dado];
  6567  004922  0100               	movlb	0	; () banked
  6568  004924  5160               	movf	crc8@crc& (0+255),w,b
  6569  004926  1963               	xorwf	crc8@dado& (0+255),w,b
  6570  004928  6F61               	movwf	??_crc8& (0+255),b
  6571  00492A  6B62               	clrf	(??_crc8+1)& (0+255),b
  6572  00492C  0E51               	movlw	low _CRC8Table
  6573  00492E  2561               	addwf	??_crc8& (0+255),w,b
  6574  004930  6EF6               	movwf	tblptrl,c
  6575  004932  0E7C               	movlw	high _CRC8Table
  6576  004934  2162               	addwfc	(??_crc8+1)& (0+255),w,b
  6577  004936  6EF7               	movwf	tblptrh,c
  6578  004938                     	if	0	;There are less than 3 active tblptr bytes
  6579  004938                     	endif
  6580  004938  0008               	tblrd		*
  6581  00493A  CFF5 F060          	movff	tablat,crc8@crc
  6582                           
  6583                           ; BSR set to: 0
  6584                           ;eeprom.c: 48: return crc;
  6585  00493E  5160               	movf	crc8@crc& (0+255),w,b
  6586  004940  0012               	return	
  6587  004942                     __end_of_crc8:
  6588                           	opt stack 0
  6589                           tblptru	equ	0xFF8
  6590                           tblptrh	equ	0xFF7
  6591                           tblptrl	equ	0xFF6
  6592                           tablat	equ	0xFF5
  6593                           prodh	equ	0xFF4
  6594                           prodl	equ	0xFF3
  6595                           intcon	equ	0xFF2
  6596                           postinc0	equ	0xFEE
  6597                           wreg	equ	0xFE8
  6598                           indf1	equ	0xFE7
  6599                           postdec1	equ	0xFE5
  6600                           fsr1h	equ	0xFE2
  6601                           fsr1l	equ	0xFE1
  6602                           indf2	equ	0xFDF
  6603                           postinc2	equ	0xFDE
  6604                           postdec2	equ	0xFDD
  6605                           plusw2	equ	0xFDB
  6606                           fsr2h	equ	0xFDA
  6607                           fsr2l	equ	0xFD9
  6608                           status	equ	0xFD8
  6609                           
  6610 ;; *************** function _USBDeviceInit *****************
  6611 ;; Defined at:
  6612 ;;		line 277 in file "../../../../microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
  6613 ;; Parameters:    Size  Location     Type
  6614 ;;		None
  6615 ;; Auto vars:     Size  Location     Type
  6616 ;;  i               1    8[BANK0 ] unsigned char 
  6617 ;; Return value:  Size  Location     Type
  6618 ;;                  1    wreg      void 
  6619 ;; Registers used:
  6620 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6621 ;; Tracked objects:
  6622 ;;		On entry : 0/0
  6623 ;;		On exit  : 0/0
  6624 ;;		Unchanged: 0/0
  6625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6626 ;;      Params:         0       0       0       0       0       0       0       0       0
  6627 ;;      Locals:         0       1       0       0       0       0       0       0       0
  6628 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6629 ;;      Totals:         0       1       0       0       0       0       0       0       0
  6630 ;;Total ram usage:        1 bytes
  6631 ;; Hardware stack levels used:    1
  6632 ;; Hardware stack levels required when called:   11
  6633 ;; This function calls:
  6634 ;;		_memset
  6635 ;; This function is called by:
  6636 ;;		_main
  6637 ;; This function uses a non-reentrant model
  6638 ;;
  6639                           
  6640                           	psect	text24
  6641  002180                     __ptext24:
  6642                           	opt stack 0
  6643  002180                     _USBDeviceInit:
  6644                           	opt stack 19
  6645                           
  6646                           ;usb_device.c: 279: uint8_t i;
  6647                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
  6648                           
  6649                           ; BSR set to: 0
  6650                           ;incstack = 0
  6651  002180  9AA0               	bcf	4000,5,c	;volatile
  6652                           
  6653                           ;usb_device.c: 285: ;
  6654                           ;usb_device.c: 288: {UEIR = 0;};
  6655  002182  0E00               	movlw	0
  6656  002184  6E6A               	movwf	3946,c	;volatile
  6657                           
  6658                           ;usb_device.c: 291: {UIR = 0;};
  6659  002186  0E00               	movlw	0
  6660  002188  6E68               	movwf	3944,c	;volatile
  6661                           
  6662                           ;usb_device.c: 294: UEP0 = 0;
  6663  00218A  0E00               	movlw	0
  6664  00218C  6E70               	movwf	3952,c	;volatile
  6665                           
  6666                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
  6667  00218E  0E71               	movlw	113
  6668  002190  0100               	movlb	0	; () banked
  6669  002192  6F60               	movwf	memset@p1& (0+255),b
  6670  002194  0E0F               	movlw	15
  6671  002196  6F61               	movwf	(memset@p1+1)& (0+255),b
  6672  002198  0E00               	movlw	0
  6673  00219A  6F63               	movwf	(memset@c+1)& (0+255),b
  6674  00219C  0E00               	movlw	0
  6675  00219E  6F62               	movwf	memset@c& (0+255),b
  6676  0021A0  0E00               	movlw	0
  6677  0021A2  6F65               	movwf	(memset@n+1)& (0+255),b
  6678  0021A4  0E02               	movlw	2
  6679  0021A6  6F64               	movwf	memset@n& (0+255),b
  6680  0021A8  EC99  F023         	call	_memset	;wreg free
  6681                           
  6682                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  6683  0021AC  0E16               	movlw	22
  6684  0021AE  6E6F               	movwf	3951,c	;volatile
  6685  0021B0  0E9F               	movlw	159
  6686  0021B2  6E6B               	movwf	3947,c	;volatile
  6687  0021B4  0E7B               	movlw	123
  6688  0021B6  6E69               	movwf	3945,c	;volatile
  6689                           
  6690                           ;usb_device.c: 301: ;
  6691                           ;usb_device.c: 304: ;
  6692                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  6693  0021B8  0E00               	movlw	0
  6694  0021BA  0100               	movlb	0	; () banked
  6695  0021BC  6F68               	movwf	USBDeviceInit@i& (0+255),b
  6696  0021BE                     l9239:
  6697                           
  6698                           ; BSR set to: 0
  6699  0021BE  0E0B               	movlw	11
  6700  0021C0  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
  6701  0021C2  D001               	goto	l357
  6702  0021C4  D00E               	goto	u8600
  6703  0021C6                     l357:
  6704                           
  6705                           ; BSR set to: 0
  6706                           ;usb_device.c: 308: {
  6707                           ;usb_device.c: 309: BDT[i].Val = 0x00;
  6708                           
  6709                           ; BSR set to: 0
  6710  0021C6  5168               	movf	USBDeviceInit@i& (0+255),w,b
  6711  0021C8  0D04               	mullw	4
  6712  0021CA  0E00               	movlw	0
  6713  0021CC  24F3               	addwf	prodl,w,c
  6714  0021CE  6ED9               	movwf	fsr2l,c
  6715  0021D0  0E04               	movlw	4
  6716  0021D2  20F4               	addwfc	prodh,w,c
  6717  0021D4  6EDA               	movwf	fsr2h,c
  6718  0021D6  6ADE               	clrf	postinc2,c
  6719  0021D8  6ADE               	clrf	postinc2,c
  6720  0021DA  6ADE               	clrf	postinc2,c
  6721  0021DC  6ADD               	clrf	postdec2,c
  6722                           
  6723                           ; BSR set to: 0
  6724  0021DE  2B68               	incf	USBDeviceInit@i& (0+255),f,b
  6725  0021E0  D7EE               	goto	l9239
  6726  0021E2                     u8600:
  6727                           
  6728                           ; BSR set to: 0
  6729                           ;usb_device.c: 310: }
  6730                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
  6731  0021E2  8C6D               	bsf	3949,6,c	;volatile
  6732                           
  6733                           ; BSR set to: 0
  6734                           ;usb_device.c: 316: UADDR = 0x00;
  6735  0021E4  0E00               	movlw	0
  6736  0021E6  6E6E               	movwf	3950,c	;volatile
  6737                           
  6738                           ; BSR set to: 0
  6739                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
  6740  0021E8  986D               	bcf	3949,4,c	;volatile
  6741                           
  6742                           ; BSR set to: 0
  6743                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
  6744  0021EA  9C6D               	bcf	3949,6,c	;volatile
  6745  0021EC                     
  6746                           ;usb_device.c: 326: {
  6747                           ;usb_device.c: 327: (UIR &= 0xF7);
  6748                           
  6749                           ; BSR set to: 0
  6750  0021EC  9668               	bcf	3944,3,c	;volatile
  6751                           
  6752                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
  6753  0021EE  0E00               	movlw	0
  6754  0021F0  6E3E               	movwf	_inPipes+3,c	;volatile
  6755                           
  6756                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
  6757  0021F2  0E00               	movlw	0
  6758  0021F4  6E36               	movwf	_outPipes+3,c	;volatile
  6759                           
  6760                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
  6761  0021F6  0E00               	movlw	0
  6762  0021F8  6E38               	movwf	_outPipes+5,c	;volatile
  6763  0021FA  0E00               	movlw	0
  6764  0021FC  6E37               	movwf	_outPipes+4,c	;volatile
  6765                           
  6766                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
  6767  0021FE  B668               	btfsc	3944,3,c	;volatile
  6768  002200  D7F5               	goto	l359
  6769                           
  6770                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
  6771  002202  0E01               	movlw	1
  6772  002204  0101               	movlb	1	; () banked
  6773  002206  6FFA               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  6774                           
  6775                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
  6776  002208  0E01               	movlw	1
  6777  00220A  6FF9               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
  6778                           
  6779                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
  6780  00220C  0E00               	movlw	0
  6781  00220E  6FF8               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
  6782                           
  6783                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
  6784  002210  0E00               	movlw	0
  6785  002212  6FF7               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
  6786                           
  6787                           ;usb_device.c: 341: USBBusIsSuspended = 0;
  6788  002214  0E00               	movlw	0
  6789  002216  6FFC               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
  6790                           
  6791                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
  6792  002218  0E00               	movlw	0
  6793  00221A  0100               	movlb	0	; () banked
  6794  00221C  6F68               	movwf	USBDeviceInit@i& (0+255),b
  6795  00221E                     l9267:
  6796                           
  6797                           ; BSR set to: 0
  6798  00221E  0E02               	movlw	2
  6799  002220  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
  6800  002222  D001               	goto	l361
  6801  002224  D02E               	goto	u8630
  6802  002226                     l361:
  6803                           
  6804                           ; BSR set to: 0
  6805                           ;usb_device.c: 346: {
  6806                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
  6807                           
  6808                           ; BSR set to: 0
  6809  002226  5168               	movf	USBDeviceInit@i& (0+255),w,b
  6810  002228  0D02               	mullw	2
  6811  00222A  0E41               	movlw	low _pBDTEntryIn
  6812  00222C  24F3               	addwf	prodl,w,c
  6813  00222E  6ED9               	movwf	fsr2l,c
  6814  002230  0E00               	movlw	high _pBDTEntryIn
  6815  002232  20F4               	addwfc	prodh,w,c
  6816  002234  6EDA               	movwf	fsr2h,c
  6817  002236  0E00               	movlw	0
  6818  002238  6EDE               	movwf	postinc2,c
  6819  00223A  0E00               	movlw	0
  6820  00223C  6EDD               	movwf	postdec2,c
  6821                           
  6822                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
  6823  00223E  5168               	movf	USBDeviceInit@i& (0+255),w,b
  6824  002240  0D02               	mullw	2
  6825  002242  0E0A               	movlw	low _pBDTEntryOut
  6826  002244  24F3               	addwf	prodl,w,c
  6827  002246  6ED9               	movwf	fsr2l,c
  6828  002248  0E02               	movlw	high _pBDTEntryOut
  6829  00224A  20F4               	addwfc	prodh,w,c
  6830  00224C  6EDA               	movwf	fsr2h,c
  6831  00224E  0E00               	movlw	0
  6832  002250  6EDE               	movwf	postinc2,c
  6833  002252  0E00               	movlw	0
  6834  002254  6EDD               	movwf	postdec2,c
  6835                           
  6836                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
  6837  002256  5168               	movf	USBDeviceInit@i& (0+255),w,b
  6838  002258  0D01               	mullw	1
  6839  00225A  0E41               	movlw	low _ep_data_in
  6840  00225C  24F3               	addwf	prodl,w,c
  6841  00225E  6ED9               	movwf	fsr2l,c
  6842  002260  0E02               	movlw	high _ep_data_in
  6843  002262  20F4               	addwfc	prodh,w,c
  6844  002264  6EDA               	movwf	fsr2h,c
  6845  002266  0E00               	movlw	0
  6846  002268  6EDF               	movwf	indf2,c
  6847                           
  6848                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
  6849  00226A  5168               	movf	USBDeviceInit@i& (0+255),w,b
  6850  00226C  0D01               	mullw	1
  6851  00226E  0E3E               	movlw	low _ep_data_out
  6852  002270  24F3               	addwf	prodl,w,c
  6853  002272  6ED9               	movwf	fsr2l,c
  6854  002274  0E02               	movlw	high _ep_data_out
  6855  002276  20F4               	addwfc	prodh,w,c
  6856  002278  6EDA               	movwf	fsr2h,c
  6857  00227A  0E00               	movlw	0
  6858  00227C  6EDF               	movwf	indf2,c
  6859                           
  6860                           ; BSR set to: 0
  6861  00227E  2B68               	incf	USBDeviceInit@i& (0+255),f,b
  6862  002280  D7CE               	goto	l9267
  6863  002282                     u8630:
  6864                           
  6865                           ; BSR set to: 0
  6866                           ;usb_device.c: 351: }
  6867                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  6868                           
  6869                           ; BSR set to: 0
  6870  002282  0E08               	movlw	8
  6871  002284  6E41               	movwf	_pBDTEntryIn,c
  6872  002286  0E04               	movlw	4
  6873  002288  6E42               	movwf	_pBDTEntryIn+1,c
  6874                           
  6875                           ; BSR set to: 0
  6876                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
  6877  00228A  0E16               	movlw	22
  6878  00228C  6E70               	movwf	3952,c	;volatile
  6879                           
  6880                           ; BSR set to: 0
  6881                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  6882  00228E  0E04               	movlw	4
  6883  002290  0104               	movlb	4	; () banked
  6884  002292  6F03               	movwf	3,b	;volatile
  6885  002294  0E30               	movlw	48
  6886  002296  6F02               	movwf	2,b	;volatile
  6887                           
  6888                           ; BSR set to: 4
  6889                           ;usb_device.c: 359: BDT[0].CNT = 8;
  6890  002298  0E08               	movlw	8
  6891  00229A  6F01               	movwf	1,b	;volatile
  6892                           
  6893                           ; BSR set to: 4
  6894                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
  6895  00229C  0E04               	movlw	4
  6896  00229E  6F00               	movwf	0,b	;volatile
  6897                           
  6898                           ; BSR set to: 4
  6899                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
  6900  0022A0  8F00               	bsf	0,7,b	;volatile
  6901                           
  6902                           ; BSR set to: 4
  6903                           ;usb_device.c: 364: USBActiveConfiguration = 0;
  6904  0022A2  0E00               	movlw	0
  6905  0022A4  6E5E               	movwf	_USBActiveConfiguration,c	;volatile
  6906                           
  6907                           ; BSR set to: 4
  6908                           ;usb_device.c: 366: USB1msTickCount = 0;
  6909  0022A6  0E00               	movlw	0
  6910  0022A8  0102               	movlb	2	; () banked
  6911  0022AA  6F18               	movwf	_USB1msTickCount& (0+255),b	;volatile
  6912  0022AC  0E00               	movlw	0
  6913  0022AE  6F19               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
  6914  0022B0  0E00               	movlw	0
  6915  0022B2  6F1A               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
  6916  0022B4  0E00               	movlw	0
  6917  0022B6  6F1B               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
  6918                           
  6919                           ; BSR set to: 2
  6920                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
  6921  0022B8  0E00               	movlw	0
  6922  0022BA  0101               	movlb	1	; () banked
  6923  0022BC  6FF6               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
  6924                           
  6925                           ; BSR set to: 1
  6926                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
  6927  0022BE  0E00               	movlw	0
  6928  0022C0  6E58               	movwf	_USBDeviceState,c	;volatile
  6929                           
  6930                           ; BSR set to: 1
  6931  0022C2  0012               	return		;funcret
  6932  0022C4                     __end_of_USBDeviceInit:
  6933                           	opt stack 0
  6934                           tblptru	equ	0xFF8
  6935                           tblptrh	equ	0xFF7
  6936                           tblptrl	equ	0xFF6
  6937                           tablat	equ	0xFF5
  6938                           prodh	equ	0xFF4
  6939                           prodl	equ	0xFF3
  6940                           intcon	equ	0xFF2
  6941                           postinc0	equ	0xFEE
  6942                           wreg	equ	0xFE8
  6943                           indf1	equ	0xFE7
  6944                           postdec1	equ	0xFE5
  6945                           fsr1h	equ	0xFE2
  6946                           fsr1l	equ	0xFE1
  6947                           indf2	equ	0xFDF
  6948                           postinc2	equ	0xFDE
  6949                           postdec2	equ	0xFDD
  6950                           plusw2	equ	0xFDB
  6951                           fsr2h	equ	0xFDA
  6952                           fsr2l	equ	0xFD9
  6953                           status	equ	0xFD8
  6954                           
  6955 ;; *************** function _memset *****************
  6956 ;; Defined at:
  6957 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\memset.c"
  6958 ;; Parameters:    Size  Location     Type
  6959 ;;  p1              2    0[BANK0 ] PTR void 
  6960 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  6961 ;;  c               2    2[BANK0 ] int 
  6962 ;;  n               2    4[BANK0 ] unsigned int 
  6963 ;; Auto vars:     Size  Location     Type
  6964 ;;  p               2    6[BANK0 ] PTR unsigned char 
  6965 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  6966 ;; Return value:  Size  Location     Type
  6967 ;;                  2    0[BANK0 ] PTR void 
  6968 ;; Registers used:
  6969 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6970 ;; Tracked objects:
  6971 ;;		On entry : 0/0
  6972 ;;		On exit  : 0/0
  6973 ;;		Unchanged: 0/0
  6974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6975 ;;      Params:         0       6       0       0       0       0       0       0       0
  6976 ;;      Locals:         0       2       0       0       0       0       0       0       0
  6977 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6978 ;;      Totals:         0       8       0       0       0       0       0       0       0
  6979 ;;Total ram usage:        8 bytes
  6980 ;; Hardware stack levels used:    1
  6981 ;; Hardware stack levels required when called:   10
  6982 ;; This function calls:
  6983 ;;		Nothing
  6984 ;; This function is called by:
  6985 ;;		_USBDeviceInit
  6986 ;; This function uses a non-reentrant model
  6987 ;;
  6988                           
  6989                           	psect	text25
  6990  004732                     __ptext25:
  6991                           	opt stack 0
  6992  004732                     _memset:
  6993                           	opt stack 19
  6994                           
  6995                           ; BSR set to: 1
  6996                           ;incstack = 0
  6997  004732  C060  F066         	movff	memset@p1,memset@p
  6998  004736  C061  F067         	movff	memset@p1+1,memset@p+1
  6999  00473A  D009               	goto	l2789
  7000  00473C                     l8113:
  7001  00473C  C066  FFD9         	movff	memset@p,fsr2l
  7002  004740  C067  FFDA         	movff	memset@p+1,fsr2h
  7003  004744  C062  FFDF         	movff	memset@c,indf2
  7004  004748  0100               	movlb	0	; () banked
  7005  00474A  4B66               	infsnz	memset@p& (0+255),f,b
  7006  00474C  2B67               	incf	(memset@p+1)& (0+255),f,b
  7007  00474E                     l2789:
  7008                           
  7009                           ; BSR set to: 0
  7010  00474E  0100               	movlb	0	; () banked
  7011  004750  0764               	decf	memset@n& (0+255),f,b
  7012  004752  A0D8               	btfss	status,0,c
  7013  004754  0765               	decf	(memset@n+1)& (0+255),f,b
  7014  004756  2964               	incf	memset@n& (0+255),w,b
  7015  004758  E1F1               	bnz	l8113
  7016  00475A  2965               	incf	(memset@n+1)& (0+255),w,b
  7017  00475C  B4D8               	btfsc	status,2,c
  7018  00475E  0012               	return	
  7019  004760  D7ED               	goto	l2790
  7020  004762                     __end_of_memset:
  7021                           	opt stack 0
  7022                           tblptru	equ	0xFF8
  7023                           tblptrh	equ	0xFF7
  7024                           tblptrl	equ	0xFF6
  7025                           tablat	equ	0xFF5
  7026                           prodh	equ	0xFF4
  7027                           prodl	equ	0xFF3
  7028                           intcon	equ	0xFF2
  7029                           postinc0	equ	0xFEE
  7030                           wreg	equ	0xFE8
  7031                           indf1	equ	0xFE7
  7032                           postdec1	equ	0xFE5
  7033                           fsr1h	equ	0xFE2
  7034                           fsr1l	equ	0xFE1
  7035                           indf2	equ	0xFDF
  7036                           postinc2	equ	0xFDE
  7037                           postdec2	equ	0xFDD
  7038                           plusw2	equ	0xFDB
  7039                           fsr2h	equ	0xFDA
  7040                           fsr2l	equ	0xFD9
  7041                           status	equ	0xFD8
  7042                           
  7043 ;; *************** function _TxLoRaWan *****************
  7044 ;; Defined at:
  7045 ;;		line 79 in file "LoRaWanCore.c"
  7046 ;; Parameters:    Size  Location     Type
  7047 ;;  conf            1    wreg     unsigned char 
  7048 ;;  porta           1  151[BANK0 ] unsigned char 
  7049 ;;  data            2  152[BANK0 ] PTR const unsigned char 
  7050 ;;		 -> main@dadoPoco(9), 
  7051 ;;  tamData         1  154[BANK0 ] unsigned char 
  7052 ;; Auto vars:     Size  Location     Type
  7053 ;;  conf            1  200[BANK1 ] unsigned char 
  7054 ;;  status          1  201[BANK1 ] unsigned char 
  7055 ;;  i               1  206[BANK1 ] unsigned char 
  7056 ;;  comando       200    0[BANK1 ] unsigned char [200]
  7057 ;;  hex             4  202[BANK1 ] unsigned char [4]
  7058 ;; Return value:  Size  Location     Type
  7059 ;;                  1    wreg      unsigned char 
  7060 ;; Registers used:
  7061 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7062 ;; Tracked objects:
  7063 ;;		On entry : 0/0
  7064 ;;		On exit  : 0/0
  7065 ;;		Unchanged: 0/0
  7066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7067 ;;      Params:         0       4       0       0       0       0       0       0       0
  7068 ;;      Locals:         0       0     207       0       0       0       0       0       0
  7069 ;;      Temps:          0       1       0       0       0       0       0       0       0
  7070 ;;      Totals:         0       5     207       0       0       0       0       0       0
  7071 ;;Total ram usage:      212 bytes
  7072 ;; Hardware stack levels used:    1
  7073 ;; Hardware stack levels required when called:   14
  7074 ;; This function calls:
  7075 ;;		_JoinLoRaWan
  7076 ;;		_ResetModuloLoRaWan
  7077 ;;		_enviaComando
  7078 ;;		_parseLoRaWan
  7079 ;;		_sprintf
  7080 ;;		_strcat
  7081 ;; This function is called by:
  7082 ;;		_main
  7083 ;; This function uses a non-reentrant model
  7084 ;;
  7085                           
  7086                           	psect	text26
  7087  0029D6                     __ptext26:
  7088                           	opt stack 0
  7089  0029D6                     _TxLoRaWan:
  7090                           	opt stack 16
  7091                           
  7092                           ; BSR set to: 0
  7093                           ;incstack = 0
  7094                           ;TxLoRaWan@conf stored from wreg
  7095  0029D6  0101               	movlb	1	; () banked
  7096  0029D8  6FC8               	movwf	TxLoRaWan@conf& (0+255),b
  7097                           
  7098                           ;LoRaWanCore.c: 81: char comando[200];
  7099                           ;LoRaWanCore.c: 82: char hex[4];
  7100                           ;LoRaWanCore.c: 84: if (conf)
  7101  0029DA  0101               	movlb	1	; () banked
  7102  0029DC  51C8               	movf	TxLoRaWan@conf& (0+255),w,b
  7103  0029DE  B4D8               	btfsc	status,2,c
  7104  0029E0  D013               	goto	l1949
  7105                           
  7106                           ; BSR set to: 1
  7107                           ;LoRaWanCore.c: 85: sprintf(comando, "%s %d ", MAC_TX_CNF, porta);
  7108  0029E2  0E00               	movlw	low TxLoRaWan@comando
  7109  0029E4  0100               	movlb	0	; () banked
  7110  0029E6  6FC7               	movwf	sprintf@sp& (0+255),b
  7111  0029E8  0E01               	movlw	high TxLoRaWan@comando
  7112  0029EA  6FC8               	movwf	(sprintf@sp+1)& (0+255),b
  7113  0029EC  0ED2               	movlw	low STR_22
  7114  0029EE  6FC9               	movwf	sprintf@f& (0+255),b
  7115  0029F0  0E7F               	movlw	high STR_22
  7116  0029F2  6FCA               	movwf	(sprintf@f+1)& (0+255),b
  7117  0029F4  0ECD               	movlw	low _MAC_TX_CNF
  7118  0029F6  6FCB               	movwf	(?_sprintf+4)& (0+255),b
  7119  0029F8  0E7E               	movlw	high _MAC_TX_CNF
  7120  0029FA  6FCC               	movwf	(?_sprintf+5)& (0+255),b
  7121  0029FC  C0F7  F0CD         	movff	TxLoRaWan@porta,?_sprintf+6
  7122  002A00  6BCE               	clrf	(?_sprintf+7)& (0+255),b
  7123  002A02  EC09  F000         	call	_sprintf	;wreg free
  7124  002A06  D012               	goto	l1950
  7125  002A08                     l1949:
  7126                           
  7127                           ;LoRaWanCore.c: 86: else
  7128                           ;LoRaWanCore.c: 87: sprintf(comando, "%s %d ", MAC_TX_UNCNF, porta);
  7129  002A08  0E00               	movlw	low TxLoRaWan@comando
  7130  002A0A  0100               	movlb	0	; () banked
  7131  002A0C  6FC7               	movwf	sprintf@sp& (0+255),b
  7132  002A0E  0E01               	movlw	high TxLoRaWan@comando
  7133  002A10  6FC8               	movwf	(sprintf@sp+1)& (0+255),b
  7134  002A12  0ED2               	movlw	low STR_22
  7135  002A14  6FC9               	movwf	sprintf@f& (0+255),b
  7136  002A16  0E7F               	movlw	high STR_22
  7137  002A18  6FCA               	movwf	(sprintf@f+1)& (0+255),b
  7138  002A1A  0EC4               	movlw	low _MAC_TX_UNCNF
  7139  002A1C  6FCB               	movwf	(?_sprintf+4)& (0+255),b
  7140  002A1E  0E7E               	movlw	high _MAC_TX_UNCNF
  7141  002A20  6FCC               	movwf	(?_sprintf+5)& (0+255),b
  7142  002A22  C0F7  F0CD         	movff	TxLoRaWan@porta,?_sprintf+6
  7143  002A26  6BCE               	clrf	(?_sprintf+7)& (0+255),b
  7144  002A28  EC09  F000         	call	_sprintf	;wreg free
  7145  002A2C                     l1950:
  7146                           
  7147                           ;LoRaWanCore.c: 89: for (uint8_t i=0;i<tamData;i++)
  7148  002A2C  0E00               	movlw	0
  7149  002A2E  0101               	movlb	1	; () banked
  7150  002A30  6FCE               	movwf	TxLoRaWan@i& (0+255),b
  7151  002A32  D027               	goto	l1951
  7152  002A34                     
  7153                           ; BSR set to: 1
  7154                           ;LoRaWanCore.c: 90: {
  7155                           ;LoRaWanCore.c: 91: sprintf(hex, "%02X", data[i]);
  7156                           
  7157                           ; BSR set to: 1
  7158  002A34  0ECA               	movlw	low TxLoRaWan@hex
  7159  002A36  0100               	movlb	0	; () banked
  7160  002A38  6FC7               	movwf	sprintf@sp& (0+255),b
  7161  002A3A  0E01               	movlw	high TxLoRaWan@hex
  7162  002A3C  6FC8               	movwf	(sprintf@sp+1)& (0+255),b
  7163  002A3E  0EF5               	movlw	low STR_24
  7164  002A40  6FC9               	movwf	sprintf@f& (0+255),b
  7165  002A42  0E7F               	movlw	high STR_24
  7166  002A44  6FCA               	movwf	(sprintf@f+1)& (0+255),b
  7167  002A46  0101               	movlb	1	; () banked
  7168  002A48  51CE               	movf	TxLoRaWan@i& (0+255),w,b
  7169  002A4A  0D01               	mullw	1
  7170  002A4C  50F3               	movf	prodl,w,c
  7171  002A4E  0100               	movlb	0	; () banked
  7172  002A50  25F8               	addwf	TxLoRaWan@data& (0+255),w,b
  7173  002A52  6ED9               	movwf	fsr2l,c
  7174  002A54  50F4               	movf	prodh,w,c
  7175  002A56  21F9               	addwfc	(TxLoRaWan@data+1)& (0+255),w,b
  7176  002A58  6EDA               	movwf	fsr2h,c
  7177  002A5A  50DF               	movf	indf2,w,c
  7178  002A5C  6FFB               	movwf	??_TxLoRaWan& (0+255),b
  7179  002A5E  51FB               	movf	??_TxLoRaWan& (0+255),w,b
  7180  002A60  6FCB               	movwf	(?_sprintf+4)& (0+255),b
  7181  002A62  6BCC               	clrf	(?_sprintf+5)& (0+255),b
  7182  002A64  EC09  F000         	call	_sprintf	;wreg free
  7183                           
  7184                           ;LoRaWanCore.c: 92: strcat(comando,hex);
  7185  002A68  0E00               	movlw	low TxLoRaWan@comando
  7186  002A6A  0100               	movlb	0	; () banked
  7187  002A6C  6F60               	movwf	strcat@to& (0+255),b
  7188  002A6E  0E01               	movlw	high TxLoRaWan@comando
  7189  002A70  6F61               	movwf	(strcat@to+1)& (0+255),b
  7190  002A72  0ECA               	movlw	low TxLoRaWan@hex
  7191  002A74  6F62               	movwf	strcat@from& (0+255),b
  7192  002A76  0E01               	movlw	high TxLoRaWan@hex
  7193  002A78  6F63               	movwf	(strcat@from+1)& (0+255),b
  7194  002A7A  EC6C  F022         	call	_strcat	;wreg free
  7195  002A7E  0101               	movlb	1	; () banked
  7196  002A80  2BCE               	incf	TxLoRaWan@i& (0+255),f,b
  7197  002A82                     l1951:
  7198                           
  7199                           ; BSR set to: 1
  7200                           
  7201                           ; BSR set to: 1
  7202  002A82  0100               	movlb	0	; () banked
  7203  002A84  51FA               	movf	TxLoRaWan@tamData& (0+255),w,b
  7204  002A86  0101               	movlb	1	; () banked
  7205  002A88  5DCE               	subwf	TxLoRaWan@i& (0+255),w,b
  7206  002A8A  A0D8               	btfss	status,0,c
  7207  002A8C  D7D3               	goto	l1952
  7208  002A8E                     u8690:
  7209                           
  7210                           ;LoRaWanCore.c: 96: {
  7211                           ;LoRaWanCore.c: 97: uint8_t status=enviaComando(comando,0);
  7212                           
  7213                           ; BSR set to: 1
  7214                           
  7215                           ;LoRaWanCore.c: 93: }
  7216                           ;LoRaWanCore.c: 95: while (1)
  7217                           
  7218                           ; BSR set to: 1
  7219  002A8E  0E00               	movlw	low TxLoRaWan@comando
  7220  002A90  0100               	movlb	0	; () banked
  7221  002A92  6F7C               	movwf	enviaComando@cmd& (0+255),b
  7222  002A94  0E01               	movlw	high TxLoRaWan@comando
  7223  002A96  6F7D               	movwf	(enviaComando@cmd+1)& (0+255),b
  7224  002A98  0E00               	movlw	0
  7225  002A9A  6F7E               	movwf	enviaComando@tipoComando& (0+255),b
  7226  002A9C  EC80  F016         	call	_enviaComando	;wreg free
  7227  002AA0  0101               	movlb	1	; () banked
  7228  002AA2  6FC9               	movwf	TxLoRaWan@status& (0+255),b
  7229                           
  7230                           ;LoRaWanCore.c: 98: switch (status)
  7231  002AA4  D015               	goto	l1955
  7232  002AA6                     
  7233                           ; BSR set to: 1
  7234                           ;LoRaWanCore.c: 101: return (parseLoRaWan()==9);
  7235                           
  7236                           ; BSR set to: 1
  7237  002AA6  ECC3  F01B         	call	_parseLoRaWan	;wreg free
  7238  002AAA  0A09               	xorlw	9
  7239  002AAC  A4D8               	btfss	status,2,c
  7240  002AAE  D002               	goto	u8700
  7241  002AB0  0E01               	movlw	1
  7242  002AB2  0012               	return	
  7243  002AB4                     u8700:
  7244  002AB4  0E00               	movlw	0
  7245  002AB6  0012               	return	
  7246  002AB8                     
  7247                           ;LoRaWanCore.c: 103: case 5:
  7248                           ;LoRaWanCore.c: 104: {
  7249                           ;LoRaWanCore.c: 105: if (!JoinLoRaWan())
  7250  002AB8  EC2F  F023         	call	_JoinLoRaWan	;wreg free
  7251  002ABC  D002               	goto	L5
  7252  002ABE                     
  7253                           ;LoRaWanCore.c: 110: {
  7254                           ;LoRaWanCore.c: 111: if (!ResetModuloLoRaWan())
  7255  002ABE  EC56  F024         	call	_ResetModuloLoRaWan	;wreg free
  7256  002AC2                     L5:
  7257  002AC2  0900               	iorlw	0
  7258  002AC4  A4D8               	btfss	status,2,c
  7259  002AC6  D7E3               	goto	u8690
  7260                           
  7261                           ;LoRaWanCore.c: 112: return 0;
  7262  002AC8  0E00               	movlw	0
  7263  002ACA  0012               	return	
  7264  002ACC                     
  7265                           ;LoRaWanCore.c: 117: return 0;
  7266  002ACC  0E00               	movlw	0
  7267  002ACE  0012               	return	
  7268  002AD0                     l1955:
  7269  002AD0  0101               	movlb	1	; () banked
  7270  002AD2  51C9               	movf	TxLoRaWan@status& (0+255),w,b
  7271                           
  7272                           ; Switch size 1, requested type "space"
  7273                           ; Number of cases is 4, Range of values is 0 to 6
  7274                           ; switch strategies available:
  7275                           ; Name         Instructions Cycles
  7276                           ; simple_byte           13     7 (average)
  7277                           ;	Chosen strategy is simple_byte
  7278  002AD4  0A00               	xorlw	0	; case 0
  7279  002AD6  B4D8               	btfsc	status,2,c
  7280  002AD8  D7E6               	goto	l1956
  7281  002ADA  0A02               	xorlw	2	; case 2
  7282  002ADC  B4D8               	btfsc	status,2,c
  7283  002ADE  D7EC               	goto	l1958
  7284  002AE0  0A07               	xorlw	7	; case 5
  7285  002AE2  B4D8               	btfsc	status,2,c
  7286  002AE4  D7E9               	goto	l1958
  7287  002AE6  0A03               	xorlw	3	; case 6
  7288  002AE8  B4D8               	btfsc	status,2,c
  7289  002AEA  D7E9               	goto	l1962
  7290  002AEC  D7EF               	goto	l1964
  7291  002AEE                     __end_of_TxLoRaWan:
  7292                           	opt stack 0
  7293                           tblptru	equ	0xFF8
  7294                           tblptrh	equ	0xFF7
  7295                           tblptrl	equ	0xFF6
  7296                           tablat	equ	0xFF5
  7297                           prodh	equ	0xFF4
  7298                           prodl	equ	0xFF3
  7299                           intcon	equ	0xFF2
  7300                           postinc0	equ	0xFEE
  7301                           wreg	equ	0xFE8
  7302                           indf1	equ	0xFE7
  7303                           postdec1	equ	0xFE5
  7304                           fsr1h	equ	0xFE2
  7305                           fsr1l	equ	0xFE1
  7306                           indf2	equ	0xFDF
  7307                           postinc2	equ	0xFDE
  7308                           postdec2	equ	0xFDD
  7309                           plusw2	equ	0xFDB
  7310                           fsr2h	equ	0xFDA
  7311                           fsr2l	equ	0xFD9
  7312                           status	equ	0xFD8
  7313                           
  7314 ;; *************** function _strcat *****************
  7315 ;; Defined at:
  7316 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strcat.c"
  7317 ;; Parameters:    Size  Location     Type
  7318 ;;  to              2    0[BANK0 ] PTR unsigned char 
  7319 ;;		 -> TxLoRaWan@comando(200), frameBuffer(200), 
  7320 ;;  from            2    2[BANK0 ] PTR const unsigned char 
  7321 ;;		 -> TxLoRaWan@hex(4), addSensorFloat@f(30), addSensorInt@f(30), addSensorStr@f(30), 
  7322 ;; Auto vars:     Size  Location     Type
  7323 ;;  cp              2    4[BANK0 ] PTR unsigned char 
  7324 ;;		 -> TxLoRaWan@comando(200), frameBuffer(200), 
  7325 ;; Return value:  Size  Location     Type
  7326 ;;                  2    0[BANK0 ] PTR unsigned char 
  7327 ;; Registers used:
  7328 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7329 ;; Tracked objects:
  7330 ;;		On entry : 0/0
  7331 ;;		On exit  : 0/0
  7332 ;;		Unchanged: 0/0
  7333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7334 ;;      Params:         0       4       0       0       0       0       0       0       0
  7335 ;;      Locals:         0       2       0       0       0       0       0       0       0
  7336 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7337 ;;      Totals:         0       6       0       0       0       0       0       0       0
  7338 ;;Total ram usage:        6 bytes
  7339 ;; Hardware stack levels used:    1
  7340 ;; Hardware stack levels required when called:   10
  7341 ;; This function calls:
  7342 ;;		Nothing
  7343 ;; This function is called by:
  7344 ;;		_TxLoRaWan
  7345 ;;		_addSensorStr
  7346 ;;		_addSensorInt
  7347 ;;		_addSensorFloat
  7348 ;; This function uses a non-reentrant model
  7349 ;;
  7350                           
  7351                           	psect	text27
  7352  0044D8                     __ptext27:
  7353                           	opt stack 0
  7354  0044D8                     _strcat:
  7355                           	opt stack 19
  7356                           
  7357                           ;incstack = 0
  7358  0044D8  C060  F064         	movff	strcat@to,strcat@cp
  7359  0044DC  C061  F065         	movff	strcat@to+1,strcat@cp+1
  7360  0044E0  D003               	goto	l2927
  7361  0044E2  0100               	movlb	0	; () banked
  7362  0044E4  4B64               	infsnz	strcat@cp& (0+255),f,b
  7363  0044E6  2B65               	incf	(strcat@cp+1)& (0+255),f,b
  7364  0044E8                     l2927:
  7365                           
  7366                           ; BSR set to: 0
  7367  0044E8  C064  FFD9         	movff	strcat@cp,fsr2l
  7368  0044EC  C065  FFDA         	movff	strcat@cp+1,fsr2h
  7369  0044F0  50DF               	movf	indf2,w,c
  7370  0044F2  B4D8               	btfsc	status,2,c
  7371  0044F4  D006               	goto	l2930
  7372  0044F6  D7F5               	goto	l2928
  7373  0044F8  0100               	movlb	0	; () banked
  7374  0044FA  4B64               	infsnz	strcat@cp& (0+255),f,b
  7375  0044FC  2B65               	incf	(strcat@cp+1)& (0+255),f,b
  7376  0044FE  4B62               	infsnz	strcat@from& (0+255),f,b
  7377  004500  2B63               	incf	(strcat@from+1)& (0+255),f,b
  7378  004502                     l2930:
  7379                           
  7380                           ; BSR set to: 0
  7381  004502  C062  FFD9         	movff	strcat@from,fsr2l
  7382  004506  C063  FFDA         	movff	strcat@from+1,fsr2h
  7383  00450A  C064  FFE1         	movff	strcat@cp,fsr1l
  7384  00450E  C065  FFE2         	movff	strcat@cp+1,fsr1h
  7385  004512  CFDF FFE7          	movff	indf2,indf1
  7386  004516  50E7               	movf	indf1,w,c
  7387  004518  B4D8               	btfsc	status,2,c
  7388  00451A  0012               	return	
  7389  00451C  D7ED               	goto	l2931
  7390  00451E                     __end_of_strcat:
  7391                           	opt stack 0
  7392                           tblptru	equ	0xFF8
  7393                           tblptrh	equ	0xFF7
  7394                           tblptrl	equ	0xFF6
  7395                           tablat	equ	0xFF5
  7396                           prodh	equ	0xFF4
  7397                           prodl	equ	0xFF3
  7398                           intcon	equ	0xFF2
  7399                           postinc0	equ	0xFEE
  7400                           wreg	equ	0xFE8
  7401                           indf1	equ	0xFE7
  7402                           postdec1	equ	0xFE5
  7403                           fsr1h	equ	0xFE2
  7404                           fsr1l	equ	0xFE1
  7405                           indf2	equ	0xFDF
  7406                           postinc2	equ	0xFDE
  7407                           postdec2	equ	0xFDD
  7408                           plusw2	equ	0xFDB
  7409                           fsr2h	equ	0xFDA
  7410                           fsr2l	equ	0xFD9
  7411                           status	equ	0xFD8
  7412                           
  7413 ;; *************** function _sprintf *****************
  7414 ;; Defined at:
  7415 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\doprnt.c"
  7416 ;; Parameters:    Size  Location     Type
  7417 ;;  sp              2  103[BANK0 ] PTR unsigned char 
  7418 ;;		 -> TxLoRaWan@hex(4), TxLoRaWan@comando(200), SetChannelLoRaWan@comando(200), addSensorFloat@f(30), 
  7419 ;;		 -> addSensorInt@f(30), addSensorStr@f(30), frameBuffer(200), 
  7420 ;;  f               2  105[BANK0 ] PTR const unsigned char 
  7421 ;;		 -> STR_24(5), STR_23(7), STR_22(7), STR_21(10), 
  7422 ;;		 -> STR_20(9), STR_4(7), STR_3(8), STR_2(7), 
  7423 ;;		 -> STR_1(17), 
  7424 ;; Auto vars:     Size  Location     Type
  7425 ;;  idx             1  124[BANK0 ] unsigned char 
  7426 ;;  val             4  139[BANK0 ] unsigned long 
  7427 ;;  tmpval          4  133[BANK0 ] struct .
  7428 ;;  fval            3  143[BANK0 ] struct .
  7429 ;;  flag            2  148[BANK0 ] unsigned short 
  7430 ;;  width           2  146[BANK0 ] int 
  7431 ;;  exp             2  137[BANK0 ] int 
  7432 ;;  prec            2  131[BANK0 ] int 
  7433 ;;  ap              2  129[BANK0 ] PTR void [1]
  7434 ;;		 -> ?_sprintf(2), 
  7435 ;;  len             2  127[BANK0 ] unsigned int 
  7436 ;;  cp              2  125[BANK0 ] PTR const unsigned char 
  7437 ;;		 -> STR_25(7), MAC_TX_UNCNF(9), MAC_TX_CNF(7), MAC_SET_CH_STATUS(14), 
  7438 ;;  c               1  150[BANK0 ] char 
  7439 ;;  d               1    0        unsigned char 
  7440 ;; Return value:  Size  Location     Type
  7441 ;;                  2  103[BANK0 ] int 
  7442 ;; Registers used:
  7443 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7444 ;; Tracked objects:
  7445 ;;		On entry : 0/0
  7446 ;;		On exit  : 0/0
  7447 ;;		Unchanged: 0/0
  7448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7449 ;;      Params:         0      12       0       0       0       0       0       0       0
  7450 ;;      Locals:         0      30       0       0       0       0       0       0       0
  7451 ;;      Temps:          0       6       0       0       0       0       0       0       0
  7452 ;;      Totals:         0      48       0       0       0       0       0       0       0
  7453 ;;Total ram usage:       48 bytes
  7454 ;; Hardware stack levels used:    1
  7455 ;; Hardware stack levels required when called:   13
  7456 ;; This function calls:
  7457 ;;		___awdiv
  7458 ;;		___ftadd
  7459 ;;		___ftge
  7460 ;;		___ftmul
  7461 ;;		___ftneg
  7462 ;;		___ftsub
  7463 ;;		___fttol
  7464 ;;		___lldiv
  7465 ;;		___llmod
  7466 ;;		___lltoft
  7467 ;;		___wmul
  7468 ;;		__div_to_l_
  7469 ;;		__tdiv_to_l_
  7470 ;;		_fround
  7471 ;;		_isdigit
  7472 ;;		_scale
  7473 ;; This function is called by:
  7474 ;;		_TxLoRaWan
  7475 ;;		_createFrame
  7476 ;;		_addSensorStr
  7477 ;;		_addSensorInt
  7478 ;;		_addSensorFloat
  7479 ;;		_SetChannelLoRaWan
  7480 ;; This function uses a non-reentrant model
  7481 ;;
  7482                           
  7483                           	psect	text28
  7484  000012                     __ptext28:
  7485                           	opt stack 0
  7486  000012                     _sprintf:
  7487                           	opt stack 16
  7488                           
  7489                           ;doprnt.c: 494: va_list ap;
  7490                           ;doprnt.c: 499: signed char c;
  7491                           ;doprnt.c: 501: int width;
  7492                           ;doprnt.c: 504: int prec;
  7493                           ;doprnt.c: 508: unsigned short flag;
  7494                           ;doprnt.c: 515: char d;
  7495                           ;doprnt.c: 516: double fval;
  7496                           ;doprnt.c: 517: int exp;
  7497                           ;doprnt.c: 523: union {
  7498                           ;doprnt.c: 524: unsigned long vd;
  7499                           ;doprnt.c: 525: double integ;
  7500                           ;doprnt.c: 526: } tmpval;
  7501                           ;doprnt.c: 528: unsigned long val;
  7502                           ;doprnt.c: 529: unsigned len;
  7503                           ;doprnt.c: 530: const char * cp;
  7504                           ;doprnt.c: 533: *ap = __va_start();
  7505                           
  7506                           ;incstack = 0
  7507  000012  0ECB               	movlw	low (?_sprintf+4)
  7508  000014  0100               	movlb	0	; () banked
  7509  000016  6FE1               	movwf	sprintf@ap& (0+255),b
  7510  000018  0E00               	movlw	high (?_sprintf+4)
  7511  00001A  6FE2               	movwf	(sprintf@ap+1)& (0+255),b
  7512                           
  7513                           ;doprnt.c: 536: while(c = *f++) {
  7514  00001C  EFDD  F005         	goto	u7800
  7515  000020                     
  7516                           ; BSR set to: 0
  7517                           ;doprnt.c: 538: if(c != '%')
  7518                           
  7519                           ; BSR set to: 0
  7520  000020  0E25               	movlw	37
  7521  000022  19F6               	xorwf	sprintf@c& (0+255),w,b
  7522  000024  B4D8               	btfsc	status,2,c
  7523  000026  D00A               	goto	l2192
  7524                           
  7525                           ; BSR set to: 0
  7526                           ;doprnt.c: 540: {
  7527                           ;doprnt.c: 541: ((*sp++ = (c)));
  7528  000028  C0C7  FFD9         	movff	sprintf@sp,fsr2l
  7529  00002C  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
  7530  000030  C0F6  FFDF         	movff	sprintf@c,indf2
  7531                           
  7532                           ; BSR set to: 0
  7533  000034  4BC7               	infsnz	sprintf@sp& (0+255),f,b
  7534  000036  2BC8               	incf	(sprintf@sp+1)& (0+255),f,b
  7535                           
  7536                           ;doprnt.c: 542: continue;
  7537  000038  EFDD  F005         	goto	u7800
  7538  00003C                     l2192:
  7539                           
  7540                           ; BSR set to: 0
  7541                           ;doprnt.c: 543: }
  7542                           ;doprnt.c: 546: width = 0;
  7543                           
  7544                           ; BSR set to: 0
  7545  00003C  0E00               	movlw	0
  7546  00003E  6FF3               	movwf	(sprintf@width+1)& (0+255),b
  7547  000040  0E00               	movlw	0
  7548  000042  6FF2               	movwf	sprintf@width& (0+255),b
  7549                           
  7550                           ;doprnt.c: 548: flag = 0;
  7551  000044  0E00               	movlw	0
  7552  000046  6FF5               	movwf	(sprintf@flag+1)& (0+255),b
  7553  000048  0E00               	movlw	0
  7554  00004A  6FF4               	movwf	sprintf@flag& (0+255),b
  7555                           
  7556                           ; BSR set to: 0
  7557                           ;doprnt.c: 551: switch(*f) {
  7558                           
  7559                           ;doprnt.c: 550: for(;;) {
  7560  00004C  D004               	goto	l2194
  7561  00004E                     
  7562                           ;doprnt.c: 580: flag |= 0x04;
  7563                           
  7564                           ; BSR set to: 0
  7565  00004E  0100               	movlb	0	; () banked
  7566  000050  85F4               	bsf	sprintf@flag& (0+255),2,b
  7567                           
  7568                           ;doprnt.c: 581: f++;
  7569  000052  4BC9               	infsnz	sprintf@f& (0+255),f,b
  7570  000054  2BCA               	incf	(sprintf@f+1)& (0+255),f,b
  7571  000056                     l2194:
  7572                           
  7573                           ; BSR set to: 0
  7574  000056  C0C9  FFF6         	movff	sprintf@f,tblptrl
  7575  00005A  C0CA  FFF7         	movff	sprintf@f+1,tblptrh
  7576  00005E                     	if	0	;tblptru may be non-zero
  7577  00005E                     	endif
  7578  00005E                     	if	0	;tblptru may be non-zero
  7579  00005E                     	endif
  7580  00005E  0008               	tblrd		*
  7581  000060  50F5               	movf	tablat,w,c
  7582                           
  7583                           ; Switch size 1, requested type "space"
  7584                           ; Number of cases is 1, Range of values is 48 to 48
  7585                           ; switch strategies available:
  7586                           ; Name         Instructions Cycles
  7587                           ; simple_byte            4     3 (average)
  7588                           ;	Chosen strategy is simple_byte
  7589  000062  0A30               	xorlw	48	; case 48
  7590  000064  B4D8               	btfsc	status,2,c
  7591  000066  D7F3               	goto	l2195
  7592                           
  7593                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  7594                           
  7595                           ;doprnt.c: 586: }
  7596                           
  7597                           ;doprnt.c: 585: break;
  7598  000068  C0C9  FFF6         	movff	sprintf@f,tblptrl
  7599  00006C  C0CA  FFF7         	movff	sprintf@f+1,tblptrh
  7600  000070                     	if	0	;tblptru may be non-zero
  7601  000070                     	endif
  7602  000070                     	if	0	;tblptru may be non-zero
  7603  000070                     	endif
  7604  000070  0008               	tblrd		*
  7605  000072  50F5               	movf	tablat,w,c
  7606  000074  ECB3  F024         	call	_isdigit
  7607  000078  A0D8               	btfss	status,0,c
  7608  00007A  D0A4               	goto	l2203
  7609                           
  7610                           ;doprnt.c: 598: width = 0;
  7611  00007C  0E00               	movlw	0
  7612  00007E  0100               	movlb	0	; () banked
  7613  000080  6FF3               	movwf	(sprintf@width+1)& (0+255),b
  7614  000082  0E00               	movlw	0
  7615  000084  6FF2               	movwf	sprintf@width& (0+255),b
  7616  000086                     
  7617                           ;doprnt.c: 600: width *= 10;
  7618                           
  7619                           ; BSR set to: 0
  7620  000086  C0F2  F06E         	movff	sprintf@width,___wmul@multiplier
  7621  00008A  C0F3  F06F         	movff	sprintf@width+1,___wmul@multiplier+1
  7622  00008E  0E00               	movlw	0
  7623  000090  0100               	movlb	0	; () banked
  7624  000092  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7625  000094  0E0A               	movlw	10
  7626  000096  6F70               	movwf	___wmul@multiplicand& (0+255),b
  7627  000098  EC09  F024         	call	___wmul	;wreg free
  7628  00009C  C06E  F0F2         	movff	?___wmul,sprintf@width
  7629  0000A0  C06F  F0F3         	movff	?___wmul+1,sprintf@width+1
  7630                           
  7631                           ;doprnt.c: 601: width += *f++ - '0';
  7632  0000A4  0ED0               	movlw	208
  7633  0000A6  0100               	movlb	0	; () banked
  7634  0000A8  6FD3               	movwf	??_sprintf& (0+255),b
  7635  0000AA  0EFF               	movlw	255
  7636  0000AC  6FD4               	movwf	(??_sprintf+1)& (0+255),b
  7637  0000AE  C0C9  FFF6         	movff	sprintf@f,tblptrl
  7638  0000B2  C0CA  FFF7         	movff	sprintf@f+1,tblptrh
  7639  0000B6                     	if	0	;tblptru may be non-zero
  7640  0000B6                     	endif
  7641  0000B6                     	if	0	;tblptru may be non-zero
  7642  0000B6                     	endif
  7643  0000B6  0008               	tblrd		*
  7644  0000B8  50F5               	movf	tablat,w,c
  7645  0000BA  6FD5               	movwf	(??_sprintf+2)& (0+255),b
  7646  0000BC  6BD6               	clrf	(??_sprintf+3)& (0+255),b
  7647  0000BE  51D3               	movf	??_sprintf& (0+255),w,b
  7648  0000C0  27D5               	addwf	(??_sprintf+2)& (0+255),f,b
  7649  0000C2  51D4               	movf	(??_sprintf+1)& (0+255),w,b
  7650  0000C4  23D6               	addwfc	(??_sprintf+3)& (0+255),f,b
  7651  0000C6  51D5               	movf	(??_sprintf+2)& (0+255),w,b
  7652  0000C8  27F2               	addwf	sprintf@width& (0+255),f,b
  7653  0000CA  51D6               	movf	(??_sprintf+3)& (0+255),w,b
  7654  0000CC  23F3               	addwfc	(sprintf@width+1)& (0+255),f,b
  7655                           
  7656                           ; BSR set to: 0
  7657  0000CE  4BC9               	infsnz	sprintf@f& (0+255),f,b
  7658  0000D0  2BCA               	incf	(sprintf@f+1)& (0+255),f,b
  7659                           
  7660                           ; BSR set to: 0
  7661                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  7662  0000D2  C0C9  FFF6         	movff	sprintf@f,tblptrl
  7663  0000D6  C0CA  FFF7         	movff	sprintf@f+1,tblptrh
  7664  0000DA                     	if	0	;tblptru may be non-zero
  7665  0000DA                     	endif
  7666  0000DA                     	if	0	;tblptru may be non-zero
  7667  0000DA                     	endif
  7668  0000DA  0008               	tblrd		*
  7669  0000DC  50F5               	movf	tablat,w,c
  7670  0000DE  ECB3  F024         	call	_isdigit
  7671  0000E2  A0D8               	btfss	status,0,c
  7672  0000E4  D06F               	goto	l2203
  7673  0000E6  D7CF               	goto	l2200
  7674  0000E8                     
  7675                           ;doprnt.c: 643: flag |= 0x10;
  7676  0000E8  0100               	movlb	0	; () banked
  7677  0000EA  89F4               	bsf	sprintf@flag& (0+255),4,b
  7678                           
  7679                           ;doprnt.c: 644: goto loop;
  7680  0000EC  D06B               	goto	l2203
  7681  0000EE                     
  7682                           ; BSR set to: 0
  7683                           ;doprnt.c: 663: flag |= 0x400;
  7684                           
  7685                           ; BSR set to: 0
  7686  0000EE  85F5               	bsf	(sprintf@flag+1)& (0+255),2,b
  7687                           
  7688                           ; BSR set to: 0
  7689                           ;doprnt.c: 698: case 'i':
  7690                           ;doprnt.c: 699: break;
  7691                           
  7692                           ; BSR set to: 0
  7693                           
  7694                           ;doprnt.c: 697: case 'd':
  7695                           
  7696                           ;doprnt.c: 664: break;
  7697  0000F0  D092               	goto	l2208
  7698  0000F2                     
  7699                           ; BSR set to: 0
  7700                           ;doprnt.c: 718: case 'x':
  7701                           ;doprnt.c: 721: flag |= 0x80;
  7702                           
  7703                           ; BSR set to: 0
  7704                           
  7705                           ; BSR set to: 0
  7706  0000F2  8FF4               	bsf	sprintf@flag& (0+255),7,b
  7707                           
  7708                           ;doprnt.c: 723: break;
  7709  0000F4  D090               	goto	l2208
  7710  0000F6                     
  7711                           ; BSR set to: 0
  7712                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  7713                           
  7714                           ; BSR set to: 0
  7715  0000F6  C0E1  FFD9         	movff	sprintf@ap,fsr2l
  7716  0000FA  C0E2  FFDA         	movff	sprintf@ap+1,fsr2h
  7717  0000FE  CFDE F0DD          	movff	postinc2,sprintf@cp
  7718  000102  CFDD F0DE          	movff	postdec2,sprintf@cp+1
  7719                           
  7720                           ; BSR set to: 0
  7721  000106  0E02               	movlw	2
  7722  000108  27E1               	addwf	sprintf@ap& (0+255),f,b
  7723  00010A  0E00               	movlw	0
  7724  00010C  23E2               	addwfc	(sprintf@ap+1)& (0+255),f,b
  7725                           
  7726                           ; BSR set to: 0
  7727                           ;doprnt.c: 740: if(!cp)
  7728  00010E  51DD               	movf	sprintf@cp& (0+255),w,b
  7729  000110  11DE               	iorwf	(sprintf@cp+1)& (0+255),w,b
  7730  000112  A4D8               	btfss	status,2,c
  7731  000114  D004               	goto	l2214
  7732                           
  7733                           ; BSR set to: 0
  7734                           ;doprnt.c: 741: cp = "(null)";
  7735  000116  0ECB               	movlw	low STR_25
  7736  000118  6FDD               	movwf	sprintf@cp& (0+255),b
  7737  00011A  0E7F               	movlw	high STR_25
  7738  00011C  6FDE               	movwf	(sprintf@cp+1)& (0+255),b
  7739  00011E                     l2214:
  7740                           
  7741                           ; BSR set to: 0
  7742                           ;doprnt.c: 745: len = 0;
  7743                           
  7744                           ; BSR set to: 0
  7745  00011E  0E00               	movlw	0
  7746  000120  6FE0               	movwf	(sprintf@len+1)& (0+255),b
  7747  000122  0E00               	movlw	0
  7748  000124  6FDF               	movwf	sprintf@len& (0+255),b
  7749                           
  7750                           ;doprnt.c: 746: while(cp[len])
  7751  000126  D002               	goto	l2215
  7752  000128                     
  7753                           ; BSR set to: 0
  7754                           ;doprnt.c: 747: len++;
  7755                           
  7756                           ; BSR set to: 0
  7757  000128  4BDF               	infsnz	sprintf@len& (0+255),f,b
  7758  00012A  2BE0               	incf	(sprintf@len+1)& (0+255),f,b
  7759  00012C                     l2215:
  7760                           
  7761                           ; BSR set to: 0
  7762                           
  7763                           ; BSR set to: 0
  7764  00012C  51DF               	movf	sprintf@len& (0+255),w,b
  7765  00012E  25DD               	addwf	sprintf@cp& (0+255),w,b
  7766  000130  6FD3               	movwf	??_sprintf& (0+255),b
  7767  000132  51E0               	movf	(sprintf@len+1)& (0+255),w,b
  7768  000134  21DE               	addwfc	(sprintf@cp+1)& (0+255),w,b
  7769  000136  6FD4               	movwf	(??_sprintf+1)& (0+255),b
  7770  000138  C0D3  FFF6         	movff	??_sprintf,tblptrl
  7771  00013C  C0D4  FFF7         	movff	??_sprintf+1,tblptrh
  7772  000140                     	if	0	;tblptru may be non-zero
  7773  000140                     	endif
  7774  000140                     	if	0	;tblptru may be non-zero
  7775  000140                     	endif
  7776  000140  0008               	tblrd		*
  7777  000142  50F5               	movf	tablat,w,c
  7778  000144  0900               	iorlw	0
  7779  000146  A4D8               	btfss	status,2,c
  7780  000148  D7EF               	goto	l2216
  7781                           
  7782                           ; BSR set to: 0
  7783                           ;doprnt.c: 757: if(width > len)
  7784                           
  7785                           ; BSR set to: 0
  7786  00014A  51F2               	movf	sprintf@width& (0+255),w,b
  7787  00014C  5DDF               	subwf	sprintf@len& (0+255),w,b
  7788  00014E  51F3               	movf	(sprintf@width+1)& (0+255),w,b
  7789  000150  59E0               	subwfb	(sprintf@len+1)& (0+255),w,b
  7790  000152  B0D8               	btfsc	status,0,c
  7791  000154  D005               	goto	l2218
  7792                           
  7793                           ; BSR set to: 0
  7794                           ;doprnt.c: 758: width -= len;
  7795  000156  51DF               	movf	sprintf@len& (0+255),w,b
  7796  000158  5FF2               	subwf	sprintf@width& (0+255),f,b
  7797  00015A  51E0               	movf	(sprintf@len+1)& (0+255),w,b
  7798  00015C  5BF3               	subwfb	(sprintf@width+1)& (0+255),f,b
  7799  00015E  D00D               	goto	l2220
  7800  000160                     l2218:
  7801                           
  7802                           ; BSR set to: 0
  7803                           ;doprnt.c: 759: else
  7804                           ;doprnt.c: 760: width = 0;
  7805                           
  7806                           ; BSR set to: 0
  7807  000160  0E00               	movlw	0
  7808  000162  6FF3               	movwf	(sprintf@width+1)& (0+255),b
  7809  000164  0E00               	movlw	0
  7810  000166  6FF2               	movwf	sprintf@width& (0+255),b
  7811                           
  7812                           ; BSR set to: 0
  7813                           ;doprnt.c: 764: while(width--)
  7814  000168  D008               	goto	l2220
  7815  00016A                     l8431:
  7816                           
  7817                           ; BSR set to: 0
  7818                           ;doprnt.c: 765: ((*sp++ = (' ')));
  7819  00016A  C0C7  FFD9         	movff	sprintf@sp,fsr2l
  7820  00016E  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
  7821  000172  0E20               	movlw	32
  7822  000174  6EDF               	movwf	indf2,c
  7823                           
  7824                           ; BSR set to: 0
  7825  000176  4BC7               	infsnz	sprintf@sp& (0+255),f,b
  7826  000178  2BC8               	incf	(sprintf@sp+1)& (0+255),f,b
  7827  00017A                     l2220:
  7828                           
  7829                           ; BSR set to: 0
  7830                           
  7831                           ; BSR set to: 0
  7832  00017A  07F2               	decf	sprintf@width& (0+255),f,b
  7833  00017C  A0D8               	btfss	status,0,c
  7834  00017E  07F3               	decf	(sprintf@width+1)& (0+255),f,b
  7835  000180  29F2               	incf	sprintf@width& (0+255),w,b
  7836  000182  E1F3               	bnz	l8431
  7837  000184  29F3               	incf	(sprintf@width+1)& (0+255),w,b
  7838  000186  B4D8               	btfsc	status,2,c
  7839  000188  D010               	goto	l2223
  7840  00018A  D7EF               	goto	l2221
  7841  00018C                     l8437:
  7842                           
  7843                           ; BSR set to: 0
  7844                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
  7845  00018C  C0DD  FFF6         	movff	sprintf@cp,tblptrl
  7846  000190  C0DE  FFF7         	movff	sprintf@cp+1,tblptrh
  7847  000194                     	if	0	;tblptru may be non-zero
  7848  000194                     	endif
  7849  000194                     	if	0	;tblptru may be non-zero
  7850  000194                     	endif
  7851  000194  C0C7  FFD9         	movff	sprintf@sp,fsr2l
  7852  000198  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
  7853  00019C  0008               	tblrd		*
  7854  00019E  CFF5 FFDF          	movff	tablat,indf2
  7855                           
  7856                           ; BSR set to: 0
  7857  0001A2  4BDD               	infsnz	sprintf@cp& (0+255),f,b
  7858  0001A4  2BDE               	incf	(sprintf@cp+1)& (0+255),f,b
  7859                           
  7860                           ; BSR set to: 0
  7861  0001A6  4BC7               	infsnz	sprintf@sp& (0+255),f,b
  7862  0001A8  2BC8               	incf	(sprintf@sp+1)& (0+255),f,b
  7863  0001AA                     l2223:
  7864                           
  7865                           ; BSR set to: 0
  7866                           
  7867                           ; BSR set to: 0
  7868  0001AA  07DF               	decf	sprintf@len& (0+255),f,b
  7869  0001AC  A0D8               	btfss	status,0,c
  7870  0001AE  07E0               	decf	(sprintf@len+1)& (0+255),f,b
  7871  0001B0  29DF               	incf	sprintf@len& (0+255),w,b
  7872  0001B2  E1EC               	bnz	l8437
  7873  0001B4  29E0               	incf	(sprintf@len+1)& (0+255),w,b
  7874  0001B6  B4D8               	btfsc	status,2,c
  7875  0001B8  EFDD  F005         	goto	u7800
  7876  0001BC  D7E7               	goto	l2224
  7877  0001BE                     
  7878                           ; BSR set to: 0
  7879                           ;doprnt.c: 818: flag |= 0xC0;
  7880                           
  7881                           ; BSR set to: 0
  7882  0001BE  0EC0               	movlw	192
  7883  0001C0  13F4               	iorwf	sprintf@flag& (0+255),f,b
  7884                           
  7885                           ; BSR set to: 0
  7886                           ;doprnt.c: 822: }
  7887                           
  7888                           ;doprnt.c: 819: break;
  7889  0001C2  D029               	goto	l2208
  7890  0001C4                     l2203:
  7891                           
  7892                           ; BSR set to: 0
  7893  0001C4  C0C9  FFF6         	movff	sprintf@f,tblptrl
  7894  0001C8  C0CA  FFF7         	movff	sprintf@f+1,tblptrh
  7895  0001CC  0100               	movlb	0	; () banked
  7896  0001CE  4BC9               	infsnz	sprintf@f& (0+255),f,b
  7897  0001D0  2BCA               	incf	(sprintf@f+1)& (0+255),f,b
  7898  0001D2                     	if	0	;tblptru may be non-zero
  7899  0001D2                     	endif
  7900  0001D2                     	if	0	;tblptru may be non-zero
  7901  0001D2                     	endif
  7902  0001D2  0008               	tblrd		*
  7903  0001D4  CFF5 F0F6          	movff	tablat,sprintf@c
  7904  0001D8  51F6               	movf	sprintf@c& (0+255),w,b
  7905                           
  7906                           ; Switch size 1, requested type "space"
  7907                           ; Number of cases is 9, Range of values is 0 to 120
  7908                           ; switch strategies available:
  7909                           ; Name         Instructions Cycles
  7910                           ; simple_byte           28    15 (average)
  7911                           ;	Chosen strategy is simple_byte
  7912  0001DA  0A00               	xorlw	0	; case 0
  7913  0001DC  B4D8               	btfsc	status,2,c
  7914  0001DE  EFEA  F005         	goto	u7810
  7915  0001E2  0A58               	xorlw	88	; case 88
  7916  0001E4  B4D8               	btfsc	status,2,c
  7917  0001E6  D785               	goto	l2211
  7918  0001E8  0A3C               	xorlw	60	; case 100
  7919  0001EA  B4D8               	btfsc	status,2,c
  7920  0001EC  D014               	goto	l2208
  7921  0001EE  0A02               	xorlw	2	; case 102
  7922  0001F0  B4D8               	btfsc	status,2,c
  7923  0001F2  D77D               	goto	l2207
  7924  0001F4  0A0F               	xorlw	15	; case 105
  7925  0001F6  B4D8               	btfsc	status,2,c
  7926  0001F8  D00E               	goto	l2208
  7927  0001FA  0A05               	xorlw	5	; case 108
  7928  0001FC  B4D8               	btfsc	status,2,c
  7929  0001FE  D774               	goto	l2206
  7930  000200  0A1F               	xorlw	31	; case 115
  7931  000202  B4D8               	btfsc	status,2,c
  7932  000204  D778               	goto	l2213
  7933  000206  0A06               	xorlw	6	; case 117
  7934  000208  B4D8               	btfsc	status,2,c
  7935  00020A  D7D9               	goto	l2227
  7936  00020C  0A0D               	xorlw	13	; case 120
  7937  00020E  B4D8               	btfsc	status,2,c
  7938  000210  D770               	goto	l2211
  7939  000212  EFDD  F005         	goto	u7800
  7940  000216                     l2208:
  7941                           
  7942                           ; BSR set to: 0
  7943                           ;doprnt.c: 825: if(flag & (0x700)) {
  7944                           
  7945                           ; BSR set to: 0
  7946  000216  0E07               	movlw	7
  7947  000218  15F5               	andwf	(sprintf@flag+1)& (0+255),w,b
  7948  00021A  B4D8               	btfsc	status,2,c
  7949  00021C  D327               	goto	l2228
  7950                           
  7951                           ; BSR set to: 0
  7952                           ;doprnt.c: 829: prec = 6;
  7953  00021E  0E00               	movlw	0
  7954  000220  6FE4               	movwf	(sprintf@prec+1)& (0+255),b
  7955  000222  0E06               	movlw	6
  7956  000224  6FE3               	movwf	sprintf@prec& (0+255),b
  7957                           
  7958                           ; BSR set to: 0
  7959                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  7960  000226  C0E1  FFD9         	movff	sprintf@ap,fsr2l
  7961  00022A  C0E2  FFDA         	movff	sprintf@ap+1,fsr2h
  7962  00022E  CFDE F0EF          	movff	postinc2,sprintf@fval
  7963  000232  CFDE F0F0          	movff	postinc2,sprintf@fval+1
  7964  000236  CFDD F0F1          	movff	postdec2,sprintf@fval+2
  7965                           
  7966                           ; BSR set to: 0
  7967  00023A  0E03               	movlw	3
  7968  00023C  27E1               	addwf	sprintf@ap& (0+255),f,b
  7969  00023E  0E00               	movlw	0
  7970  000240  23E2               	addwfc	(sprintf@ap+1)& (0+255),f,b
  7971                           
  7972                           ; BSR set to: 0
  7973                           ;doprnt.c: 831: if(fval < 0.0) {
  7974  000242  AFF1               	btfss	(sprintf@fval+2)& (0+255),7,b
  7975  000244  D011               	goto	l2229
  7976                           
  7977                           ; BSR set to: 0
  7978                           ;doprnt.c: 832: fval = -fval;
  7979  000246  C0EF  F060         	movff	sprintf@fval,___ftneg@f1
  7980  00024A  C0F0  F061         	movff	sprintf@fval+1,___ftneg@f1+1
  7981  00024E  C0F1  F062         	movff	sprintf@fval+2,___ftneg@f1+2
  7982  000252  EC43  F024         	call	___ftneg	;wreg free
  7983  000256  C060  F0EF         	movff	?___ftneg,sprintf@fval
  7984  00025A  C061  F0F0         	movff	?___ftneg+1,sprintf@fval+1
  7985  00025E  C062  F0F1         	movff	?___ftneg+2,sprintf@fval+2
  7986                           
  7987                           ;doprnt.c: 833: flag |= 0x03;
  7988  000262  0E03               	movlw	3
  7989  000264  0100               	movlb	0	; () banked
  7990  000266  13F4               	iorwf	sprintf@flag& (0+255),f,b
  7991  000268                     l2229:
  7992                           
  7993                           ; BSR set to: 0
  7994                           ;doprnt.c: 834: }
  7995                           ;doprnt.c: 835: exp = 0;
  7996                           
  7997                           ; BSR set to: 0
  7998  000268  0E00               	movlw	0
  7999  00026A  6FEA               	movwf	(sprintf@exp+1)& (0+255),b
  8000  00026C  0E00               	movlw	0
  8001  00026E  6FE9               	movwf	sprintf@exp& (0+255),b
  8002                           
  8003                           ; BSR set to: 0
  8004                           ;doprnt.c: 836: if( fval!=0) {
  8005  000270  51EF               	movf	sprintf@fval& (0+255),w,b
  8006  000272  11F0               	iorwf	(sprintf@fval+1)& (0+255),w,b
  8007  000274  11F1               	iorwf	(sprintf@fval+2)& (0+255),w,b
  8008  000276  B4D8               	btfsc	status,2,c
  8009  000278  D088               	goto	l2234
  8010                           
  8011                           ; BSR set to: 0
  8012                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  8013  00027A  0E82               	movlw	130
  8014  00027C  6FD3               	movwf	??_sprintf& (0+255),b
  8015  00027E  0EFF               	movlw	255
  8016  000280  6FD4               	movwf	(??_sprintf+1)& (0+255),b
  8017  000282  C0EF  F0D5         	movff	sprintf@fval,??_sprintf+2
  8018  000286  C0F0  F0D6         	movff	sprintf@fval+1,??_sprintf+3
  8019  00028A  C0F1  F0D7         	movff	sprintf@fval+2,??_sprintf+4
  8020  00028E  C0F2  F0D8         	movff	sprintf@fval+3,??_sprintf+5
  8021  000292  0E10               	movlw	16
  8022  000294  D005               	goto	u7340
  8023  000296                     u7345:
  8024  000296  90D8               	bcf	status,0,c
  8025  000298  33D8               	rrcf	(??_sprintf+5)& (0+255),f,b
  8026  00029A  33D7               	rrcf	(??_sprintf+4)& (0+255),f,b
  8027  00029C  33D6               	rrcf	(??_sprintf+3)& (0+255),f,b
  8028  00029E  33D5               	rrcf	(??_sprintf+2)& (0+255),f,b
  8029  0002A0                     u7340:
  8030  0002A0  2EE8               	decfsz	wreg,f,c
  8031  0002A2  D7F9               	goto	u7345
  8032  0002A4  51D5               	movf	(??_sprintf+2)& (0+255),w,b
  8033  0002A6  25D3               	addwf	??_sprintf& (0+255),w,b
  8034  0002A8  6FE9               	movwf	sprintf@exp& (0+255),b
  8035  0002AA  0E00               	movlw	0
  8036  0002AC  21D4               	addwfc	(??_sprintf+1)& (0+255),w,b
  8037  0002AE  6FEA               	movwf	(sprintf@exp+1)& (0+255),b
  8038                           
  8039                           ; BSR set to: 0
  8040                           ;doprnt.c: 838: exp--;
  8041  0002B0  07E9               	decf	sprintf@exp& (0+255),f,b
  8042  0002B2  A0D8               	btfss	status,0,c
  8043  0002B4  07EA               	decf	(sprintf@exp+1)& (0+255),f,b
  8044                           
  8045                           ; BSR set to: 0
  8046                           ;doprnt.c: 839: exp *= 3;
  8047  0002B6  C0E9  F06E         	movff	sprintf@exp,___wmul@multiplier
  8048  0002BA  C0EA  F06F         	movff	sprintf@exp+1,___wmul@multiplier+1
  8049  0002BE  0E00               	movlw	0
  8050  0002C0  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8051  0002C2  0E03               	movlw	3
  8052  0002C4  6F70               	movwf	___wmul@multiplicand& (0+255),b
  8053  0002C6  EC09  F024         	call	___wmul	;wreg free
  8054  0002CA  C06E  F0E9         	movff	?___wmul,sprintf@exp
  8055  0002CE  C06F  F0EA         	movff	?___wmul+1,sprintf@exp+1
  8056                           
  8057                           ;doprnt.c: 840: exp /= 10;
  8058  0002D2  C0E9  F066         	movff	sprintf@exp,___awdiv@dividend
  8059  0002D6  C0EA  F067         	movff	sprintf@exp+1,___awdiv@dividend+1
  8060  0002DA  0E00               	movlw	0
  8061  0002DC  0100               	movlb	0	; () banked
  8062  0002DE  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  8063  0002E0  0E0A               	movlw	10
  8064  0002E2  6F68               	movwf	___awdiv@divisor& (0+255),b
  8065  0002E4  EC7D  F01E         	call	___awdiv	;wreg free
  8066  0002E8  C066  F0E9         	movff	?___awdiv,sprintf@exp
  8067  0002EC  C067  F0EA         	movff	?___awdiv+1,sprintf@exp+1
  8068                           
  8069                           ;doprnt.c: 841: if(exp < 0)
  8070  0002F0  0100               	movlb	0	; () banked
  8071  0002F2  AFEA               	btfss	(sprintf@exp+1)& (0+255),7,b
  8072  0002F4  D003               	goto	l2231
  8073                           
  8074                           ; BSR set to: 0
  8075                           ;doprnt.c: 842: exp--;
  8076  0002F6  07E9               	decf	sprintf@exp& (0+255),f,b
  8077  0002F8  A0D8               	btfss	status,0,c
  8078  0002FA  07EA               	decf	(sprintf@exp+1)& (0+255),f,b
  8079  0002FC                     l2231:
  8080                           
  8081                           ; BSR set to: 0
  8082                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  8083                           
  8084                           ; BSR set to: 0
  8085  0002FC  51E9               	movf	sprintf@exp& (0+255),w,b
  8086  0002FE  0800               	sublw	0
  8087  000300  ECF1  F005         	call	_scale
  8088  000304  C08F  F0E5         	movff	?_scale,sprintf@tmpval
  8089  000308  C090  F0E6         	movff	?_scale+1,sprintf@tmpval+1
  8090  00030C  C091  F0E7         	movff	?_scale+2,sprintf@tmpval+2
  8091                           
  8092                           ;doprnt.c: 847: tmpval.integ *= fval;
  8093  000310  C0E5  F080         	movff	sprintf@tmpval,___ftmul@f1
  8094  000314  C0E6  F081         	movff	sprintf@tmpval+1,___ftmul@f1+1
  8095  000318  C0E7  F082         	movff	sprintf@tmpval+2,___ftmul@f1+2
  8096  00031C  C0EF  F083         	movff	sprintf@fval,___ftmul@f2
  8097  000320  C0F0  F084         	movff	sprintf@fval+1,___ftmul@f2+1
  8098  000324  C0F1  F085         	movff	sprintf@fval+2,___ftmul@f2+2
  8099  000328  EC7C  F018         	call	___ftmul	;wreg free
  8100  00032C  C080  F0E5         	movff	?___ftmul,sprintf@tmpval
  8101  000330  C081  F0E6         	movff	?___ftmul+1,sprintf@tmpval+1
  8102  000334  C082  F0E7         	movff	?___ftmul+2,sprintf@tmpval+2
  8103                           
  8104                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  8105  000338  C0E5  F060         	movff	sprintf@tmpval,___ftge@ff1
  8106  00033C  C0E6  F061         	movff	sprintf@tmpval+1,___ftge@ff1+1
  8107  000340  C0E7  F062         	movff	sprintf@tmpval+2,___ftge@ff1+2
  8108  000344  0E00               	movlw	0
  8109  000346  0100               	movlb	0	; () banked
  8110  000348  6F63               	movwf	___ftge@ff2& (0+255),b
  8111  00034A  0E80               	movlw	128
  8112  00034C  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
  8113  00034E  0E3F               	movlw	63
  8114  000350  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
  8115  000352  ECEC  F01D         	call	___ftge	;wreg free
  8116  000356  0100               	movlb	0	; () banked
  8117  000358  B0D8               	btfsc	status,0,c
  8118  00035A  D004               	goto	l2232
  8119                           
  8120                           ; BSR set to: 0
  8121                           ;doprnt.c: 849: exp--;
  8122  00035C  07E9               	decf	sprintf@exp& (0+255),f,b
  8123  00035E  A0D8               	btfss	status,0,c
  8124  000360  07EA               	decf	(sprintf@exp+1)& (0+255),f,b
  8125  000362  D013               	goto	l2234
  8126  000364                     l2232:
  8127                           
  8128                           ; BSR set to: 0
  8129                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  8130                           
  8131                           ; BSR set to: 0
  8132  000364  C0E5  F060         	movff	sprintf@tmpval,___ftge@ff1
  8133  000368  C0E6  F061         	movff	sprintf@tmpval+1,___ftge@ff1+1
  8134  00036C  C0E7  F062         	movff	sprintf@tmpval+2,___ftge@ff1+2
  8135  000370  0E00               	movlw	0
  8136  000372  6F63               	movwf	___ftge@ff2& (0+255),b
  8137  000374  0E20               	movlw	32
  8138  000376  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
  8139  000378  0E41               	movlw	65
  8140  00037A  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
  8141  00037C  ECEC  F01D         	call	___ftge	;wreg free
  8142  000380  0100               	movlb	0	; () banked
  8143  000382  A0D8               	btfss	status,0,c
  8144  000384  D002               	goto	l2234
  8145                           
  8146                           ; BSR set to: 0
  8147                           ;doprnt.c: 851: exp++;
  8148  000386  4BE9               	infsnz	sprintf@exp& (0+255),f,b
  8149  000388  2BEA               	incf	(sprintf@exp+1)& (0+255),f,b
  8150  00038A                     l2234:
  8151                           
  8152                           ; BSR set to: 0
  8153                           ;doprnt.c: 852: }
  8154                           ;doprnt.c: 1112: if(prec <= 12)
  8155                           
  8156                           ; BSR set to: 0
  8157                           
  8158                           ; BSR set to: 0
  8159                           
  8160                           ; BSR set to: 0
  8161  00038A  BFE4               	btfsc	(sprintf@prec+1)& (0+255),7,b
  8162  00038C  D006               	goto	u7380
  8163  00038E  51E4               	movf	(sprintf@prec+1)& (0+255),w,b
  8164  000390  E11B               	bnz	l8497
  8165  000392  0E0D               	movlw	13
  8166  000394  5DE3               	subwf	sprintf@prec& (0+255),w,b
  8167  000396  B0D8               	btfsc	status,0,c
  8168  000398  D017               	goto	l2235
  8169  00039A                     u7380:
  8170                           
  8171                           ; BSR set to: 0
  8172                           ;doprnt.c: 1113: fval += fround(prec);
  8173  00039A  C0EF  F074         	movff	sprintf@fval,___ftadd@f1
  8174  00039E  C0F0  F075         	movff	sprintf@fval+1,___ftadd@f1+1
  8175  0003A2  C0F1  F076         	movff	sprintf@fval+2,___ftadd@f1+2
  8176  0003A6  51E3               	movf	sprintf@prec& (0+255),w,b
  8177  0003A8  EC4B  F009         	call	_fround
  8178  0003AC  C08F  F077         	movff	?_fround,___ftadd@f2
  8179  0003B0  C090  F078         	movff	?_fround+1,___ftadd@f2+1
  8180  0003B4  C091  F079         	movff	?_fround+2,___ftadd@f2+2
  8181  0003B8  ECA5  F00D         	call	___ftadd	;wreg free
  8182  0003BC  C074  F0EF         	movff	?___ftadd,sprintf@fval
  8183  0003C0  C075  F0F0         	movff	?___ftadd+1,sprintf@fval+1
  8184  0003C4  C076  F0F1         	movff	?___ftadd+2,sprintf@fval+2
  8185  0003C8                     l2235:
  8186  0003C8                     l8497:
  8187                           
  8188                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  8189  0003C8  0100               	movlb	0	; () banked
  8190  0003CA  BFEA               	btfsc	(sprintf@exp+1)& (0+255),7,b
  8191  0003CC  D006               	goto	u7390
  8192  0003CE  51EA               	movf	(sprintf@exp+1)& (0+255),w,b
  8193  0003D0  E11F               	bnz	l8505
  8194  0003D2  0E0A               	movlw	10
  8195  0003D4  5DE9               	subwf	sprintf@exp& (0+255),w,b
  8196  0003D6  B0D8               	btfsc	status,0,c
  8197  0003D8  D01B               	goto	u7420
  8198  0003DA                     u7390:
  8199                           
  8200                           ; BSR set to: 0
  8201  0003DA  51EF               	movf	sprintf@fval& (0+255),w,b
  8202  0003DC  11F0               	iorwf	(sprintf@fval+1)& (0+255),w,b
  8203  0003DE  11F1               	iorwf	(sprintf@fval+2)& (0+255),w,b
  8204  0003E0  B4D8               	btfsc	status,2,c
  8205  0003E2  D054               	goto	l2236
  8206                           
  8207                           ; BSR set to: 0
  8208  0003E4  C0EF  F0B8         	movff	sprintf@fval,___fttol@f1
  8209  0003E8  C0F0  F0B9         	movff	sprintf@fval+1,___fttol@f1+1
  8210  0003EC  C0F1  F0BA         	movff	sprintf@fval+2,___fttol@f1+2
  8211  0003F0  EC00  F018         	call	___fttol	;wreg free
  8212  0003F4  0100               	movlb	0	; () banked
  8213  0003F6  51B8               	movf	?___fttol& (0+255),w,b
  8214  0003F8  11B9               	iorwf	(?___fttol+1)& (0+255),w,b
  8215  0003FA  11BA               	iorwf	(?___fttol+2)& (0+255),w,b
  8216  0003FC  11BB               	iorwf	(?___fttol+3)& (0+255),w,b
  8217  0003FE  B4D8               	btfsc	status,2,c
  8218                           
  8219                           ; BSR set to: 0
  8220  000400  BFEA               	btfsc	(sprintf@exp+1)& (0+255),7,b
  8221  000402  D044               	goto	l2236
  8222  000404  51EA               	movf	(sprintf@exp+1)& (0+255),w,b
  8223  000406  E104               	bnz	l8505
  8224  000408  0E02               	movlw	2
  8225  00040A  5DE9               	subwf	sprintf@exp& (0+255),w,b
  8226  00040C  A0D8               	btfss	status,0,c
  8227  00040E  D03E               	goto	l2236
  8228  000410                     u7420:
  8229  000410                     l8505:
  8230                           
  8231                           ; BSR set to: 0
  8232                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  8233  000410  C0E5  F060         	movff	sprintf@tmpval,___ftge@ff1
  8234  000414  C0E6  F061         	movff	sprintf@tmpval+1,___ftge@ff1+1
  8235  000418  C0E7  F062         	movff	sprintf@tmpval+2,___ftge@ff1+2
  8236  00041C  0E70               	movlw	112
  8237  00041E  6F63               	movwf	___ftge@ff2& (0+255),b
  8238  000420  0E89               	movlw	137
  8239  000422  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
  8240  000424  0E40               	movlw	64
  8241  000426  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
  8242  000428  ECEC  F01D         	call	___ftge	;wreg free
  8243  00042C  0100               	movlb	0	; () banked
  8244  00042E  B0D8               	btfsc	status,0,c
  8245  000430  D002               	goto	l2239
  8246                           
  8247                           ; BSR set to: 0
  8248                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  8249  000432  0EF7               	movlw	247
  8250  000434  D001               	goto	L6
  8251  000436                     l2239:
  8252                           
  8253                           ; BSR set to: 0
  8254                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  8255                           
  8256                           ; BSR set to: 0
  8257  000436  0EF8               	movlw	248
  8258  000438                     L6:
  8259  000438  27E9               	addwf	sprintf@exp& (0+255),f,b
  8260  00043A  0EFF               	movlw	255
  8261  00043C  23EA               	addwfc	(sprintf@exp+1)& (0+255),f,b
  8262                           
  8263                           ; BSR set to: 0
  8264                           ;doprnt.c: 1124: }
  8265                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  8266                           
  8267                           ; BSR set to: 0
  8268  00043E  51E9               	movf	sprintf@exp& (0+255),w,b
  8269  000440  ECF1  F005         	call	_scale
  8270  000444  C08F  F0E5         	movff	?_scale,sprintf@tmpval
  8271  000448  C090  F0E6         	movff	?_scale+1,sprintf@tmpval+1
  8272  00044C  C091  F0E7         	movff	?_scale+2,sprintf@tmpval+2
  8273                           
  8274                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  8275  000450  C0EF  F060         	movff	sprintf@fval,__tdiv_to_l_@f1
  8276  000454  C0F0  F061         	movff	sprintf@fval+1,__tdiv_to_l_@f1+1
  8277  000458  C0F1  F062         	movff	sprintf@fval+2,__tdiv_to_l_@f1+2
  8278  00045C  C0E5  F063         	movff	sprintf@tmpval,__tdiv_to_l_@f2
  8279  000460  C0E6  F064         	movff	sprintf@tmpval+1,__tdiv_to_l_@f2+1
  8280  000464  C0E7  F065         	movff	sprintf@tmpval+2,__tdiv_to_l_@f2+2
  8281  000468  EC01  F012         	call	__tdiv_to_l_	;wreg free
  8282  00046C  C060  F0EB         	movff	?__tdiv_to_l_,sprintf@val
  8283  000470  C061  F0EC         	movff	?__tdiv_to_l_+1,sprintf@val+1
  8284  000474  C062  F0ED         	movff	?__tdiv_to_l_+2,sprintf@val+2
  8285  000478  C063  F0EE         	movff	?__tdiv_to_l_+3,sprintf@val+3
  8286                           
  8287                           ;doprnt.c: 1129: fval = 0.0;
  8288  00047C  0E00               	movlw	0
  8289  00047E  0100               	movlb	0	; () banked
  8290  000480  6FEF               	movwf	sprintf@fval& (0+255),b
  8291  000482  0E00               	movlw	0
  8292  000484  6FF0               	movwf	(sprintf@fval+1)& (0+255),b
  8293  000486  0E00               	movlw	0
  8294  000488  6FF1               	movwf	(sprintf@fval+2)& (0+255),b
  8295                           
  8296                           ;doprnt.c: 1130: } else {
  8297  00048A  D033               	goto	l2245
  8298  00048C                     l2236:
  8299                           
  8300                           ; BSR set to: 0
  8301                           ;doprnt.c: 1131: val = (unsigned long)fval;
  8302                           
  8303                           ; BSR set to: 0
  8304  00048C  C0EF  F0B8         	movff	sprintf@fval,___fttol@f1
  8305  000490  C0F0  F0B9         	movff	sprintf@fval+1,___fttol@f1+1
  8306  000494  C0F1  F0BA         	movff	sprintf@fval+2,___fttol@f1+2
  8307  000498  EC00  F018         	call	___fttol	;wreg free
  8308  00049C  C0B8  F0EB         	movff	?___fttol,sprintf@val
  8309  0004A0  C0B9  F0EC         	movff	?___fttol+1,sprintf@val+1
  8310  0004A4  C0BA  F0ED         	movff	?___fttol+2,sprintf@val+2
  8311  0004A8  C0BB  F0EE         	movff	?___fttol+3,sprintf@val+3
  8312                           
  8313                           ;doprnt.c: 1132: fval -= (double)val;
  8314  0004AC  C0EF  F080         	movff	sprintf@fval,___ftsub@f1
  8315  0004B0  C0F0  F081         	movff	sprintf@fval+1,___ftsub@f1+1
  8316  0004B4  C0F1  F082         	movff	sprintf@fval+2,___ftsub@f1+2
  8317  0004B8  C0EB  F068         	movff	sprintf@val,___lltoft@c
  8318  0004BC  C0EC  F069         	movff	sprintf@val+1,___lltoft@c+1
  8319  0004C0  C0ED  F06A         	movff	sprintf@val+2,___lltoft@c+2
  8320  0004C4  C0EE  F06B         	movff	sprintf@val+3,___lltoft@c+3
  8321  0004C8  EC44  F021         	call	___lltoft	;wreg free
  8322  0004CC  C068  F083         	movff	?___lltoft,___ftsub@f2
  8323  0004D0  C069  F084         	movff	?___lltoft+1,___ftsub@f2+1
  8324  0004D4  C06A  F085         	movff	?___lltoft+2,___ftsub@f2+2
  8325  0004D8  ECB1  F022         	call	___ftsub	;wreg free
  8326  0004DC  C080  F0EF         	movff	?___ftsub,sprintf@fval
  8327  0004E0  C081  F0F0         	movff	?___ftsub+1,sprintf@fval+1
  8328  0004E4  C082  F0F1         	movff	?___ftsub+2,sprintf@fval+2
  8329                           
  8330                           ;doprnt.c: 1133: exp = 0;
  8331  0004E8  0E00               	movlw	0
  8332  0004EA  0100               	movlb	0	; () banked
  8333  0004EC  6FEA               	movwf	(sprintf@exp+1)& (0+255),b
  8334  0004EE  0E00               	movlw	0
  8335  0004F0  6FE9               	movwf	sprintf@exp& (0+255),b
  8336  0004F2                     l2245:
  8337                           
  8338                           ; BSR set to: 0
  8339                           ;doprnt.c: 1134: }
  8340                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  8341                           
  8342                           ; BSR set to: 0
  8343  0004F2  0E01               	movlw	1
  8344  0004F4  6FF6               	movwf	sprintf@c& (0+255),b
  8345  0004F6                     l8525:
  8346                           
  8347                           ; BSR set to: 0
  8348  0004F6  0E0A               	movlw	10
  8349  0004F8  19F6               	xorwf	sprintf@c& (0+255),w,b
  8350  0004FA  B4D8               	btfsc	status,2,c
  8351  0004FC  D018               	goto	u7460
  8352                           
  8353                           ; BSR set to: 0
  8354                           ;doprnt.c: 1137: if(val < dpowers[c])
  8355                           
  8356                           ; BSR set to: 0
  8357                           
  8358                           ; BSR set to: 0
  8359  0004FE  51F6               	movf	sprintf@c& (0+255),w,b
  8360  000500  0D04               	mullw	4
  8361  000502  0E51               	movlw	low _dpowers
  8362  000504  24F3               	addwf	prodl,w,c
  8363  000506  6EF6               	movwf	tblptrl,c
  8364  000508  0E7D               	movlw	high _dpowers
  8365  00050A  20F4               	addwfc	prodh,w,c
  8366  00050C  6EF7               	movwf	tblptrh,c
  8367  00050E                     	if	0	;There are less than 3 active tblptr bytes
  8368  00050E                     	endif
  8369  00050E  0009               	tblrd		*+
  8370  000510  50F5               	movf	tablat,w,c
  8371  000512  5DEB               	subwf	sprintf@val& (0+255),w,b
  8372  000514  0009               	tblrd		*+
  8373  000516  50F5               	movf	tablat,w,c
  8374  000518  59EC               	subwfb	(sprintf@val+1)& (0+255),w,b
  8375  00051A  0009               	tblrd		*+
  8376  00051C  50F5               	movf	tablat,w,c
  8377  00051E  59ED               	subwfb	(sprintf@val+2)& (0+255),w,b
  8378  000520  0009               	tblrd		*+
  8379  000522  50F5               	movf	tablat,w,c
  8380  000524  59EE               	subwfb	(sprintf@val+3)& (0+255),w,b
  8381  000526  A0D8               	btfss	status,0,c
  8382  000528  D002               	goto	u7460
  8383                           
  8384                           ; BSR set to: 0
  8385                           
  8386                           ; BSR set to: 0
  8387                           
  8388                           ; BSR set to: 0
  8389                           ;doprnt.c: 1138: break;
  8390  00052A  2BF6               	incf	sprintf@c& (0+255),f,b
  8391  00052C  D7E4               	goto	l8525
  8392  00052E                     u7460:
  8393                           
  8394                           ; BSR set to: 0
  8395                           ;doprnt.c: 1142: width -= prec + c + exp;
  8396                           
  8397                           ; BSR set to: 0
  8398  00052E  C0F6  F0D3         	movff	sprintf@c,??_sprintf
  8399  000532  6BD4               	clrf	(??_sprintf+1)& (0+255),b
  8400  000534  BFD3               	btfsc	??_sprintf& (0+255),7,b
  8401  000536  07D4               	decf	(??_sprintf+1)& (0+255),f,b
  8402  000538  51E3               	movf	sprintf@prec& (0+255),w,b
  8403  00053A  27D3               	addwf	??_sprintf& (0+255),f,b
  8404  00053C  51E4               	movf	(sprintf@prec+1)& (0+255),w,b
  8405  00053E  23D4               	addwfc	(??_sprintf+1)& (0+255),f,b
  8406  000540  51E9               	movf	sprintf@exp& (0+255),w,b
  8407  000542  27D3               	addwf	??_sprintf& (0+255),f,b
  8408  000544  51EA               	movf	(sprintf@exp+1)& (0+255),w,b
  8409  000546  23D4               	addwfc	(??_sprintf+1)& (0+255),f,b
  8410  000548  51D3               	movf	??_sprintf& (0+255),w,b
  8411  00054A  5FF2               	subwf	sprintf@width& (0+255),f,b
  8412  00054C  51D4               	movf	(??_sprintf+1)& (0+255),w,b
  8413  00054E  5BF3               	subwfb	(sprintf@width+1)& (0+255),f,b
  8414                           
  8415                           ;doprnt.c: 1143: if(
  8416                           ;doprnt.c: 1147: prec)
  8417  000550  51E3               	movf	sprintf@prec& (0+255),w,b
  8418  000552  11E4               	iorwf	(sprintf@prec+1)& (0+255),w,b
  8419  000554  B4D8               	btfsc	status,2,c
  8420  000556  D003               	goto	l2249
  8421                           
  8422                           ; BSR set to: 0
  8423                           ;doprnt.c: 1148: width--;
  8424  000558  07F2               	decf	sprintf@width& (0+255),f,b
  8425  00055A  A0D8               	btfss	status,0,c
  8426  00055C  07F3               	decf	(sprintf@width+1)& (0+255),f,b
  8427  00055E                     l2249:
  8428                           
  8429                           ; BSR set to: 0
  8430                           ;doprnt.c: 1149: if(flag & 0x03)
  8431                           
  8432                           ; BSR set to: 0
  8433  00055E  0E03               	movlw	3
  8434  000560  15F4               	andwf	sprintf@flag& (0+255),w,b
  8435  000562  6FD3               	movwf	??_sprintf& (0+255),b
  8436  000564  0E00               	movlw	0
  8437  000566  15F5               	andwf	(sprintf@flag+1)& (0+255),w,b
  8438  000568  6FD4               	movwf	(??_sprintf+1)& (0+255),b
  8439  00056A  51D3               	movf	??_sprintf& (0+255),w,b
  8440  00056C  11D4               	iorwf	(??_sprintf+1)& (0+255),w,b
  8441  00056E  B4D8               	btfsc	status,2,c
  8442  000570  D003               	goto	l2250
  8443                           
  8444                           ; BSR set to: 0
  8445                           ;doprnt.c: 1150: width--;
  8446  000572  07F2               	decf	sprintf@width& (0+255),f,b
  8447  000574  A0D8               	btfss	status,0,c
  8448  000576  07F3               	decf	(sprintf@width+1)& (0+255),f,b
  8449  000578                     l2250:
  8450                           
  8451                           ; BSR set to: 0
  8452                           ;doprnt.c: 1153: if(flag & 0x04) {
  8453                           
  8454                           ; BSR set to: 0
  8455  000578  A5F4               	btfss	sprintf@flag& (0+255),2,b
  8456  00057A  D031               	goto	l2257
  8457                           
  8458                           ; BSR set to: 0
  8459                           ;doprnt.c: 1157: if(flag & 0x03)
  8460  00057C  0E03               	movlw	3
  8461  00057E  15F4               	andwf	sprintf@flag& (0+255),w,b
  8462  000580  6FD3               	movwf	??_sprintf& (0+255),b
  8463  000582  0E00               	movlw	0
  8464  000584  15F5               	andwf	(sprintf@flag+1)& (0+255),w,b
  8465  000586  6FD4               	movwf	(??_sprintf+1)& (0+255),b
  8466  000588  51D3               	movf	??_sprintf& (0+255),w,b
  8467  00058A  11D4               	iorwf	(??_sprintf+1)& (0+255),w,b
  8468  00058C  B4D8               	btfsc	status,2,c
  8469  00058E  D014               	goto	l2253
  8470                           
  8471                           ; BSR set to: 0
  8472                           ;doprnt.c: 1159: ((*sp++ = ('-')));
  8473  000590  C0C7  FFD9         	movff	sprintf@sp,fsr2l
  8474  000594  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
  8475  000598  0E2D               	movlw	45
  8476  00059A  6EDF               	movwf	indf2,c
  8477                           
  8478                           ; BSR set to: 0
  8479  00059C  4BC7               	infsnz	sprintf@sp& (0+255),f,b
  8480  00059E  2BC8               	incf	(sprintf@sp+1)& (0+255),f,b
  8481                           
  8482                           ; BSR set to: 0
  8483                           ;doprnt.c: 1168: while(width > 0) {
  8484  0005A0  D00B               	goto	l2253
  8485  0005A2                     l8553:
  8486                           
  8487                           ; BSR set to: 0
  8488                           ;doprnt.c: 1169: ((*sp++ = ('0')));
  8489  0005A2  C0C7  FFD9         	movff	sprintf@sp,fsr2l
  8490  0005A6  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
  8491  0005AA  0E30               	movlw	48
  8492  0005AC  6EDF               	movwf	indf2,c
  8493                           
  8494                           ; BSR set to: 0
  8495  0005AE  4BC7               	infsnz	sprintf@sp& (0+255),f,b
  8496  0005B0  2BC8               	incf	(sprintf@sp+1)& (0+255),f,b
  8497                           
  8498                           ; BSR set to: 0
  8499                           ;doprnt.c: 1170: width--;
  8500  0005B2  07F2               	decf	sprintf@width& (0+255),f,b
  8501  0005B4  A0D8               	btfss	status,0,c
  8502  0005B6  07F3               	decf	(sprintf@width+1)& (0+255),f,b
  8503  0005B8                     l2253:
  8504                           
  8505                           ; BSR set to: 0
  8506                           
  8507                           ; BSR set to: 0
  8508  0005B8  BFF3               	btfsc	(sprintf@width+1)& (0+255),7,b
  8509  0005BA  D073               	goto	l2261
  8510  0005BC  51F3               	movf	(sprintf@width+1)& (0+255),w,b
  8511  0005BE  E1F1               	bnz	l8553
  8512  0005C0  05F2               	decf	sprintf@width& (0+255),w,b
  8513  0005C2  A0D8               	btfss	status,0,c
  8514  0005C4  D06E               	goto	l2261
  8515  0005C6  D7ED               	goto	l2254
  8516  0005C8                     l8561:
  8517                           
  8518                           ; BSR set to: 0
  8519                           ;doprnt.c: 1181: ((*sp++ = (' ')));
  8520  0005C8  C0C7  FFD9         	movff	sprintf@sp,fsr2l
  8521  0005CC  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
  8522  0005D0  0E20               	movlw	32
  8523  0005D2  6EDF               	movwf	indf2,c
  8524                           
  8525                           ; BSR set to: 0
  8526  0005D4  4BC7               	infsnz	sprintf@sp& (0+255),f,b
  8527  0005D6  2BC8               	incf	(sprintf@sp+1)& (0+255),f,b
  8528                           
  8529                           ; BSR set to: 0
  8530                           ;doprnt.c: 1182: width--;
  8531  0005D8  07F2               	decf	sprintf@width& (0+255),f,b
  8532  0005DA  A0D8               	btfss	status,0,c
  8533  0005DC  07F3               	decf	(sprintf@width+1)& (0+255),f,b
  8534  0005DE                     l2257:
  8535                           
  8536                           ; BSR set to: 0
  8537                           
  8538                           ; BSR set to: 0
  8539  0005DE  BFF3               	btfsc	(sprintf@width+1)& (0+255),7,b
  8540  0005E0  D005               	goto	u7520
  8541  0005E2  51F3               	movf	(sprintf@width+1)& (0+255),w,b
  8542  0005E4  E1F1               	bnz	l8561
  8543  0005E6  05F2               	decf	sprintf@width& (0+255),w,b
  8544  0005E8  B0D8               	btfsc	status,0,c
  8545  0005EA  D7EE               	goto	l2258
  8546  0005EC                     u7520:
  8547                           
  8548                           ; BSR set to: 0
  8549                           ;doprnt.c: 1183: }
  8550                           ;doprnt.c: 1188: if(flag & 0x03)
  8551                           
  8552                           ; BSR set to: 0
  8553  0005EC  0E03               	movlw	3
  8554  0005EE  15F4               	andwf	sprintf@flag& (0+255),w,b
  8555  0005F0  6FD3               	movwf	??_sprintf& (0+255),b
  8556  0005F2  0E00               	movlw	0
  8557  0005F4  15F5               	andwf	(sprintf@flag+1)& (0+255),w,b
  8558  0005F6  6FD4               	movwf	(??_sprintf+1)& (0+255),b
  8559  0005F8  51D3               	movf	??_sprintf& (0+255),w,b
  8560  0005FA  11D4               	iorwf	(??_sprintf+1)& (0+255),w,b
  8561  0005FC  B4D8               	btfsc	status,2,c
  8562  0005FE  D051               	goto	l2261
  8563                           
  8564                           ; BSR set to: 0
  8565                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  8566  000600  C0C7  FFD9         	movff	sprintf@sp,fsr2l
  8567  000604  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
  8568  000608  0E2D               	movlw	45
  8569  00060A  D048               	goto	L7
  8570  00060C                     
  8571                           ; BSR set to: 0
  8572                           ;doprnt.c: 1200: {
  8573                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  8574                           
  8575                           ; BSR set to: 0
  8576  00060C  C0EB  F060         	movff	sprintf@val,___lldiv@dividend
  8577  000610  C0EC  F061         	movff	sprintf@val+1,___lldiv@dividend+1
  8578  000614  C0ED  F062         	movff	sprintf@val+2,___lldiv@dividend+2
  8579  000618  C0EE  F063         	movff	sprintf@val+3,___lldiv@dividend+3
  8580  00061C  51F6               	movf	sprintf@c& (0+255),w,b
  8581  00061E  0D04               	mullw	4
  8582  000620  0E51               	movlw	low _dpowers
  8583  000622  24F3               	addwf	prodl,w,c
  8584  000624  6EF6               	movwf	tblptrl,c
  8585  000626  0E7D               	movlw	high _dpowers
  8586  000628  20F4               	addwfc	prodh,w,c
  8587  00062A  6EF7               	movwf	tblptrh,c
  8588  00062C                     	if	0	;There are less than 3 active tblptr bytes
  8589  00062C                     	endif
  8590  00062C  0009               	tblrd		*+
  8591  00062E  CFF5 F064          	movff	tablat,___lldiv@divisor
  8592  000632  0009               	tblrd		*+
  8593  000634  CFF5 F065          	movff	tablat,___lldiv@divisor+1
  8594  000638  0009               	tblrd		*+
  8595  00063A  CFF5 F066          	movff	tablat,___lldiv@divisor+2
  8596  00063E  000A               	tblrd		*-
  8597  000640  CFF5 F067          	movff	tablat,___lldiv@divisor+3
  8598  000644  EC03  F01F         	call	___lldiv	;wreg free
  8599  000648  C060  F0E5         	movff	?___lldiv,sprintf@tmpval
  8600  00064C  C061  F0E6         	movff	?___lldiv+1,sprintf@tmpval+1
  8601  000650  C062  F0E7         	movff	?___lldiv+2,sprintf@tmpval+2
  8602  000654  C063  F0E8         	movff	?___lldiv+3,sprintf@tmpval+3
  8603                           
  8604                           ;doprnt.c: 1202: tmpval.vd %= 10;
  8605  000658  C0E5  F06D         	movff	sprintf@tmpval,___llmod@dividend
  8606  00065C  C0E6  F06E         	movff	sprintf@tmpval+1,___llmod@dividend+1
  8607  000660  C0E7  F06F         	movff	sprintf@tmpval+2,___llmod@dividend+2
  8608  000664  C0E8  F070         	movff	sprintf@tmpval+3,___llmod@dividend+3
  8609  000668  0E0A               	movlw	10
  8610  00066A  0100               	movlb	0	; () banked
  8611  00066C  6F71               	movwf	___llmod@divisor& (0+255),b
  8612  00066E  0E00               	movlw	0
  8613  000670  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
  8614  000672  0E00               	movlw	0
  8615  000674  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
  8616  000676  0E00               	movlw	0
  8617  000678  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
  8618  00067A  ECAB  F020         	call	___llmod	;wreg free
  8619  00067E  C06D  F0E5         	movff	?___llmod,sprintf@tmpval
  8620  000682  C06E  F0E6         	movff	?___llmod+1,sprintf@tmpval+1
  8621  000686  C06F  F0E7         	movff	?___llmod+2,sprintf@tmpval+2
  8622  00068A  C070  F0E8         	movff	?___llmod+3,sprintf@tmpval+3
  8623                           
  8624                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  8625  00068E  0100               	movlb	0	; () banked
  8626  000690  51E5               	movf	sprintf@tmpval& (0+255),w,b
  8627  000692  0F30               	addlw	48
  8628  000694  C0C7  FFD9         	movff	sprintf@sp,fsr2l
  8629  000698  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
  8630  00069C                     L7:
  8631  00069C  6EDF               	movwf	indf2,c
  8632                           
  8633                           ; BSR set to: 0
  8634  00069E  4BC7               	infsnz	sprintf@sp& (0+255),f,b
  8635  0006A0  2BC8               	incf	(sprintf@sp+1)& (0+255),f,b
  8636  0006A2                     l2261:
  8637                           
  8638                           ; BSR set to: 0
  8639                           
  8640                           ; BSR set to: 0
  8641  0006A2  07F6               	decf	sprintf@c& (0+255),f,b
  8642  0006A4  29F6               	incf	sprintf@c& (0+255),w,b
  8643  0006A6  B4D8               	btfsc	status,2,c
  8644  0006A8  D00C               	goto	l2264
  8645  0006AA  D7B0               	goto	l2262
  8646  0006AC                     l8585:
  8647                           
  8648                           ; BSR set to: 0
  8649                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  8650  0006AC  C0C7  FFD9         	movff	sprintf@sp,fsr2l
  8651  0006B0  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
  8652  0006B4  0E30               	movlw	48
  8653  0006B6  6EDF               	movwf	indf2,c
  8654                           
  8655                           ; BSR set to: 0
  8656  0006B8  4BC7               	infsnz	sprintf@sp& (0+255),f,b
  8657  0006BA  2BC8               	incf	(sprintf@sp+1)& (0+255),f,b
  8658                           
  8659                           ; BSR set to: 0
  8660                           ;doprnt.c: 1209: exp--;
  8661  0006BC  07E9               	decf	sprintf@exp& (0+255),f,b
  8662  0006BE  A0D8               	btfss	status,0,c
  8663  0006C0  07EA               	decf	(sprintf@exp+1)& (0+255),f,b
  8664  0006C2                     l2264:
  8665                           
  8666                           ; BSR set to: 0
  8667                           
  8668                           ; BSR set to: 0
  8669  0006C2  BFEA               	btfsc	(sprintf@exp+1)& (0+255),7,b
  8670  0006C4  D005               	goto	u7550
  8671  0006C6  51EA               	movf	(sprintf@exp+1)& (0+255),w,b
  8672  0006C8  E1F1               	bnz	l8585
  8673  0006CA  05E9               	decf	sprintf@exp& (0+255),w,b
  8674  0006CC  B0D8               	btfsc	status,0,c
  8675  0006CE  D7EE               	goto	l2265
  8676  0006D0                     u7550:
  8677                           
  8678                           ; BSR set to: 0
  8679                           ;doprnt.c: 1210: }
  8680                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  8681                           
  8682                           ; BSR set to: 0
  8683  0006D0  BFE4               	btfsc	(sprintf@prec+1)& (0+255),7,b
  8684  0006D2  D009               	goto	l2267
  8685  0006D4  51E4               	movf	(sprintf@prec+1)& (0+255),w,b
  8686  0006D6  E104               	bnz	u7560
  8687  0006D8  0E09               	movlw	9
  8688  0006DA  5DE3               	subwf	sprintf@prec& (0+255),w,b
  8689  0006DC  A0D8               	btfss	status,0,c
  8690  0006DE  D003               	goto	l2267
  8691  0006E0                     u7560:
  8692                           
  8693                           ; BSR set to: 0
  8694                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  8695  0006E0  0E08               	movlw	8
  8696  0006E2  6FF6               	movwf	sprintf@c& (0+255),b
  8697  0006E4  D002               	goto	l2268
  8698  0006E6                     l2267:
  8699                           
  8700                           ; BSR set to: 0
  8701                           ;doprnt.c: 1213: else
  8702                           ;doprnt.c: 1214: c = prec;
  8703  0006E6  C0E3  F0F6         	movff	sprintf@prec,sprintf@c
  8704  0006EA                     l2268:
  8705                           
  8706                           ; BSR set to: 0
  8707                           ;doprnt.c: 1215: prec -= c;
  8708                           
  8709                           ; BSR set to: 0
  8710  0006EA  51F6               	movf	sprintf@c& (0+255),w,b
  8711  0006EC  5FE3               	subwf	sprintf@prec& (0+255),f,b
  8712  0006EE  0E00               	movlw	0
  8713  0006F0  BFF6               	btfsc	sprintf@c& (0+255),7,b
  8714  0006F2  0EFF               	movlw	255
  8715  0006F4  5BE4               	subwfb	(sprintf@prec+1)& (0+255),f,b
  8716                           
  8717                           ; BSR set to: 0
  8718                           ;doprnt.c: 1219: if(c)
  8719  0006F6  51F6               	movf	sprintf@c& (0+255),w,b
  8720  0006F8  B4D8               	btfsc	status,2,c
  8721  0006FA  D008               	goto	l2269
  8722                           
  8723                           ; BSR set to: 0
  8724                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  8725  0006FC  C0C7  FFD9         	movff	sprintf@sp,fsr2l
  8726  000700  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
  8727  000704  0E2E               	movlw	46
  8728  000706  6EDF               	movwf	indf2,c
  8729                           
  8730                           ; BSR set to: 0
  8731  000708  4BC7               	infsnz	sprintf@sp& (0+255),f,b
  8732  00070A  2BC8               	incf	(sprintf@sp+1)& (0+255),f,b
  8733  00070C                     l2269:
  8734                           
  8735                           ; BSR set to: 0
  8736                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  8737                           
  8738                           ; BSR set to: 0
  8739  00070C  51F6               	movf	sprintf@c& (0+255),w,b
  8740  00070E  ECF1  F005         	call	_scale
  8741  000712  C08F  F0D9         	movff	?_scale,_sprintf$5653
  8742  000716  C090  F0DA         	movff	?_scale+1,_sprintf$5653+1
  8743  00071A  C091  F0DB         	movff	?_scale+2,_sprintf$5653+2
  8744                           
  8745                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  8746  00071E  C0EF  F083         	movff	sprintf@fval,___ftmul@f2
  8747  000722  C0F0  F084         	movff	sprintf@fval+1,___ftmul@f2+1
  8748  000726  C0F1  F085         	movff	sprintf@fval+2,___ftmul@f2+2
  8749  00072A  C0D9  F080         	movff	_sprintf$5653,___ftmul@f1
  8750  00072E  C0DA  F081         	movff	_sprintf$5653+1,___ftmul@f1+1
  8751  000732  C0DB  F082         	movff	_sprintf$5653+2,___ftmul@f1+2
  8752  000736  EC7C  F018         	call	___ftmul	;wreg free
  8753  00073A  C080  F0B8         	movff	?___ftmul,___fttol@f1
  8754  00073E  C081  F0B9         	movff	?___ftmul+1,___fttol@f1+1
  8755  000742  C082  F0BA         	movff	?___ftmul+2,___fttol@f1+2
  8756  000746  EC00  F018         	call	___fttol	;wreg free
  8757  00074A  C0B8  F0EB         	movff	?___fttol,sprintf@val
  8758  00074E  C0B9  F0EC         	movff	?___fttol+1,sprintf@val+1
  8759  000752  C0BA  F0ED         	movff	?___fttol+2,sprintf@val+2
  8760  000756  C0BB  F0EE         	movff	?___fttol+3,sprintf@val+3
  8761                           
  8762                           ;doprnt.c: 1228: while(c--) {
  8763  00075A  D072               	goto	l2270
  8764  00075C                     
  8765                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  8766  00075C  C0EB  F060         	movff	sprintf@val,___lldiv@dividend
  8767  000760  C0EC  F061         	movff	sprintf@val+1,___lldiv@dividend+1
  8768  000764  C0ED  F062         	movff	sprintf@val+2,___lldiv@dividend+2
  8769  000768  C0EE  F063         	movff	sprintf@val+3,___lldiv@dividend+3
  8770  00076C  0100               	movlb	0	; () banked
  8771  00076E  51F6               	movf	sprintf@c& (0+255),w,b
  8772  000770  0D04               	mullw	4
  8773  000772  0E51               	movlw	low _dpowers
  8774  000774  24F3               	addwf	prodl,w,c
  8775  000776  6EF6               	movwf	tblptrl,c
  8776  000778  0E7D               	movlw	high _dpowers
  8777  00077A  20F4               	addwfc	prodh,w,c
  8778  00077C  6EF7               	movwf	tblptrh,c
  8779  00077E                     	if	0	;There are less than 3 active tblptr bytes
  8780  00077E                     	endif
  8781  00077E  0009               	tblrd		*+
  8782  000780  CFF5 F064          	movff	tablat,___lldiv@divisor
  8783  000784  0009               	tblrd		*+
  8784  000786  CFF5 F065          	movff	tablat,___lldiv@divisor+1
  8785  00078A  0009               	tblrd		*+
  8786  00078C  CFF5 F066          	movff	tablat,___lldiv@divisor+2
  8787  000790  000A               	tblrd		*-
  8788  000792  CFF5 F067          	movff	tablat,___lldiv@divisor+3
  8789  000796  EC03  F01F         	call	___lldiv	;wreg free
  8790  00079A  C060  F0E5         	movff	?___lldiv,sprintf@tmpval
  8791  00079E  C061  F0E6         	movff	?___lldiv+1,sprintf@tmpval+1
  8792  0007A2  C062  F0E7         	movff	?___lldiv+2,sprintf@tmpval+2
  8793  0007A6  C063  F0E8         	movff	?___lldiv+3,sprintf@tmpval+3
  8794                           
  8795                           ;doprnt.c: 1230: tmpval.vd %= 10;
  8796  0007AA  C0E5  F06D         	movff	sprintf@tmpval,___llmod@dividend
  8797  0007AE  C0E6  F06E         	movff	sprintf@tmpval+1,___llmod@dividend+1
  8798  0007B2  C0E7  F06F         	movff	sprintf@tmpval+2,___llmod@dividend+2
  8799  0007B6  C0E8  F070         	movff	sprintf@tmpval+3,___llmod@dividend+3
  8800  0007BA  0E0A               	movlw	10
  8801  0007BC  0100               	movlb	0	; () banked
  8802  0007BE  6F71               	movwf	___llmod@divisor& (0+255),b
  8803  0007C0  0E00               	movlw	0
  8804  0007C2  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
  8805  0007C4  0E00               	movlw	0
  8806  0007C6  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
  8807  0007C8  0E00               	movlw	0
  8808  0007CA  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
  8809  0007CC  ECAB  F020         	call	___llmod	;wreg free
  8810  0007D0  C06D  F0E5         	movff	?___llmod,sprintf@tmpval
  8811  0007D4  C06E  F0E6         	movff	?___llmod+1,sprintf@tmpval+1
  8812  0007D8  C06F  F0E7         	movff	?___llmod+2,sprintf@tmpval+2
  8813  0007DC  C070  F0E8         	movff	?___llmod+3,sprintf@tmpval+3
  8814                           
  8815                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  8816  0007E0  0100               	movlb	0	; () banked
  8817  0007E2  51E5               	movf	sprintf@tmpval& (0+255),w,b
  8818  0007E4  0F30               	addlw	48
  8819  0007E6  C0C7  FFD9         	movff	sprintf@sp,fsr2l
  8820  0007EA  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
  8821  0007EE  6EDF               	movwf	indf2,c
  8822                           
  8823                           ; BSR set to: 0
  8824  0007F0  4BC7               	infsnz	sprintf@sp& (0+255),f,b
  8825  0007F2  2BC8               	incf	(sprintf@sp+1)& (0+255),f,b
  8826                           
  8827                           ; BSR set to: 0
  8828                           ;doprnt.c: 1232: val %= dpowers[c];
  8829  0007F4  C0EB  F06D         	movff	sprintf@val,___llmod@dividend
  8830  0007F8  C0EC  F06E         	movff	sprintf@val+1,___llmod@dividend+1
  8831  0007FC  C0ED  F06F         	movff	sprintf@val+2,___llmod@dividend+2
  8832  000800  C0EE  F070         	movff	sprintf@val+3,___llmod@dividend+3
  8833  000804  51F6               	movf	sprintf@c& (0+255),w,b
  8834  000806  0D04               	mullw	4
  8835  000808  0E51               	movlw	low _dpowers
  8836  00080A  24F3               	addwf	prodl,w,c
  8837  00080C  6EF6               	movwf	tblptrl,c
  8838  00080E  0E7D               	movlw	high _dpowers
  8839  000810  20F4               	addwfc	prodh,w,c
  8840  000812  6EF7               	movwf	tblptrh,c
  8841  000814                     	if	0	;There are less than 3 active tblptr bytes
  8842  000814                     	endif
  8843  000814  0009               	tblrd		*+
  8844  000816  CFF5 F071          	movff	tablat,___llmod@divisor
  8845  00081A  0009               	tblrd		*+
  8846  00081C  CFF5 F072          	movff	tablat,___llmod@divisor+1
  8847  000820  0009               	tblrd		*+
  8848  000822  CFF5 F073          	movff	tablat,___llmod@divisor+2
  8849  000826  000A               	tblrd		*-
  8850  000828  CFF5 F074          	movff	tablat,___llmod@divisor+3
  8851  00082C  ECAB  F020         	call	___llmod	;wreg free
  8852  000830  C06D  F0EB         	movff	?___llmod,sprintf@val
  8853  000834  C06E  F0EC         	movff	?___llmod+1,sprintf@val+1
  8854  000838  C06F  F0ED         	movff	?___llmod+2,sprintf@val+2
  8855  00083C  C070  F0EE         	movff	?___llmod+3,sprintf@val+3
  8856  000840                     l2270:
  8857  000840  0100               	movlb	0	; () banked
  8858  000842  07F6               	decf	sprintf@c& (0+255),f,b
  8859  000844  29F6               	incf	sprintf@c& (0+255),w,b
  8860  000846  B4D8               	btfsc	status,2,c
  8861  000848  D00C               	goto	l2273
  8862  00084A  D788               	goto	l2271
  8863  00084C                     
  8864                           ; BSR set to: 0
  8865                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  8866                           
  8867                           ; BSR set to: 0
  8868  00084C  C0C7  FFD9         	movff	sprintf@sp,fsr2l
  8869  000850  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
  8870  000854  0E30               	movlw	48
  8871  000856  6EDF               	movwf	indf2,c
  8872                           
  8873                           ; BSR set to: 0
  8874  000858  4BC7               	infsnz	sprintf@sp& (0+255),f,b
  8875  00085A  2BC8               	incf	(sprintf@sp+1)& (0+255),f,b
  8876                           
  8877                           ; BSR set to: 0
  8878                           ;doprnt.c: 1237: prec--;
  8879  00085C  07E3               	decf	sprintf@prec& (0+255),f,b
  8880  00085E  A0D8               	btfss	status,0,c
  8881  000860  07E4               	decf	(sprintf@prec+1)& (0+255),f,b
  8882  000862                     l2273:
  8883                           
  8884                           ; BSR set to: 0
  8885                           
  8886                           ; BSR set to: 0
  8887  000862  51E3               	movf	sprintf@prec& (0+255),w,b
  8888  000864  11E4               	iorwf	(sprintf@prec+1)& (0+255),w,b
  8889  000866  B4D8               	btfsc	status,2,c
  8890  000868  D1A8               	goto	u7800
  8891  00086A  D7F0               	goto	l2274
  8892  00086C                     l2228:
  8893                           
  8894                           ; BSR set to: 0
  8895                           ;doprnt.c: 1246: }
  8896                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
  8897                           
  8898                           ; BSR set to: 0
  8899  00086C  0EC0               	movlw	192
  8900  00086E  15F4               	andwf	sprintf@flag& (0+255),w,b
  8901  000870  6FD3               	movwf	??_sprintf& (0+255),b
  8902  000872  0E00               	movlw	0
  8903  000874  15F5               	andwf	(sprintf@flag+1)& (0+255),w,b
  8904  000876  6FD4               	movwf	(??_sprintf+1)& (0+255),b
  8905  000878  51D3               	movf	??_sprintf& (0+255),w,b
  8906  00087A  11D4               	iorwf	(??_sprintf+1)& (0+255),w,b
  8907  00087C  A4D8               	btfss	status,2,c
  8908  00087E  D02E               	goto	l2276
  8909                           
  8910                           ; BSR set to: 0
  8911                           ;doprnt.c: 1253: {
  8912                           ;doprnt.c: 1255: if(flag & 0x10)
  8913  000880  A9F4               	btfss	sprintf@flag& (0+255),4,b
  8914  000882  D00E               	goto	l2277
  8915                           
  8916                           ; BSR set to: 0
  8917                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
  8918  000884  C0E1  FFD9         	movff	sprintf@ap,fsr2l
  8919  000888  C0E2  FFDA         	movff	sprintf@ap+1,fsr2h
  8920  00088C  CFDE F0EB          	movff	postinc2,sprintf@val
  8921  000890  CFDE F0EC          	movff	postinc2,sprintf@val+1
  8922  000894  CFDE F0ED          	movff	postinc2,sprintf@val+2
  8923  000898  CFDE F0EE          	movff	postinc2,sprintf@val+3
  8924                           
  8925                           ; BSR set to: 0
  8926  00089C  0E04               	movlw	4
  8927  00089E  D00E               	goto	L8
  8928  0008A0                     l2277:
  8929                           
  8930                           ; BSR set to: 0
  8931                           ;doprnt.c: 1257: else
  8932                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  8933                           
  8934                           ; BSR set to: 0
  8935  0008A0  C0E1  FFD9         	movff	sprintf@ap,fsr2l
  8936  0008A4  C0E2  FFDA         	movff	sprintf@ap+1,fsr2h
  8937  0008A8  CFDE F0EB          	movff	postinc2,sprintf@val
  8938  0008AC  CFDD F0EC          	movff	postdec2,sprintf@val+1
  8939  0008B0  0E00               	movlw	0
  8940  0008B2  BFEC               	btfsc	(sprintf@val+1)& (0+255),7,b
  8941  0008B4  0EFF               	movlw	-1
  8942  0008B6  6FED               	movwf	(sprintf@val+2)& (0+255),b
  8943  0008B8  6FEE               	movwf	(sprintf@val+3)& (0+255),b
  8944                           
  8945                           ; BSR set to: 0
  8946  0008BA  0E02               	movlw	2
  8947  0008BC                     L8:
  8948  0008BC  27E1               	addwf	sprintf@ap& (0+255),f,b
  8949  0008BE  0E00               	movlw	0
  8950  0008C0  23E2               	addwfc	(sprintf@ap+1)& (0+255),f,b
  8951                           
  8952                           ; BSR set to: 0
  8953                           ;doprnt.c: 1261: if((long)val < 0) {
  8954                           
  8955                           ; BSR set to: 0
  8956  0008C2  AFEE               	btfss	(sprintf@val+3)& (0+255),7,b
  8957  0008C4  D06A               	goto	l2283
  8958                           
  8959                           ; BSR set to: 0
  8960                           ;doprnt.c: 1262: flag |= 0x03;
  8961  0008C6  0E03               	movlw	3
  8962  0008C8  13F4               	iorwf	sprintf@flag& (0+255),f,b
  8963                           
  8964                           ; BSR set to: 0
  8965                           ;doprnt.c: 1263: val = -val;
  8966  0008CA  1FEE               	comf	(sprintf@val+3)& (0+255),f,b
  8967  0008CC  1FED               	comf	(sprintf@val+2)& (0+255),f,b
  8968  0008CE  1FEC               	comf	(sprintf@val+1)& (0+255),f,b
  8969  0008D0  6DEB               	negf	sprintf@val& (0+255),b
  8970  0008D2  0E00               	movlw	0
  8971  0008D4  23EC               	addwfc	(sprintf@val+1)& (0+255),f,b
  8972  0008D6  23ED               	addwfc	(sprintf@val+2)& (0+255),f,b
  8973  0008D8  23EE               	addwfc	(sprintf@val+3)& (0+255),f,b
  8974                           
  8975                           ; BSR set to: 0
  8976                           ;doprnt.c: 1264: }
  8977                           ;doprnt.c: 1266: }
  8978  0008DA  D05F               	goto	l2283
  8979  0008DC                     l2276:
  8980                           
  8981                           ; BSR set to: 0
  8982                           ;doprnt.c: 1268: else
  8983                           ;doprnt.c: 1273: {
  8984                           ;doprnt.c: 1281: if(flag & 0x10)
  8985  0008DC  A9F4               	btfss	sprintf@flag& (0+255),4,b
  8986  0008DE  D00E               	goto	l2281
  8987                           
  8988                           ; BSR set to: 0
  8989                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  8990  0008E0  C0E1  FFD9         	movff	sprintf@ap,fsr2l
  8991  0008E4  C0E2  FFDA         	movff	sprintf@ap+1,fsr2h
  8992  0008E8  CFDE F0EB          	movff	postinc2,sprintf@val
  8993  0008EC  CFDE F0EC          	movff	postinc2,sprintf@val+1
  8994  0008F0  CFDE F0ED          	movff	postinc2,sprintf@val+2
  8995  0008F4  CFDE F0EE          	movff	postinc2,sprintf@val+3
  8996                           
  8997                           ; BSR set to: 0
  8998  0008F8  0E04               	movlw	4
  8999  0008FA  D00F               	goto	L9
  9000  0008FC                     l2281:
  9001                           
  9002                           ; BSR set to: 0
  9003                           ;doprnt.c: 1283: else
  9004                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  9005                           
  9006                           ; BSR set to: 0
  9007  0008FC  C0E1  FFD9         	movff	sprintf@ap,fsr2l
  9008  000900  C0E2  FFDA         	movff	sprintf@ap+1,fsr2h
  9009  000904  CFDE F0D3          	movff	postinc2,??_sprintf
  9010  000908  CFDD F0D4          	movff	postdec2,??_sprintf+1
  9011  00090C  C0D3  F0EB         	movff	??_sprintf,sprintf@val
  9012  000910  C0D4  F0EC         	movff	??_sprintf+1,sprintf@val+1
  9013  000914  6BED               	clrf	(sprintf@val+2)& (0+255),b
  9014  000916  6BEE               	clrf	(sprintf@val+3)& (0+255),b
  9015                           
  9016                           ; BSR set to: 0
  9017  000918  0E02               	movlw	2
  9018  00091A                     L9:
  9019  00091A  27E1               	addwf	sprintf@ap& (0+255),f,b
  9020  00091C  0E00               	movlw	0
  9021  00091E  23E2               	addwfc	(sprintf@ap+1)& (0+255),f,b
  9022                           
  9023                           ; BSR set to: 0
  9024                           ;doprnt.c: 1287: }
  9025                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
  9026                           
  9027                           ; BSR set to: 0
  9028  000920  D03C               	goto	l2283
  9029  000922                     
  9030                           ; BSR set to: 0
  9031                           ;doprnt.c: 1302: case 0xC0:
  9032                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  9033                           
  9034                           ; BSR set to: 0
  9035                           
  9036                           ; BSR set to: 0
  9037  000922  0E01               	movlw	1
  9038  000924  6FF6               	movwf	sprintf@c& (0+255),b
  9039  000926                     l8657:
  9040                           
  9041                           ; BSR set to: 0
  9042  000926  0E0A               	movlw	10
  9043  000928  19F6               	xorwf	sprintf@c& (0+255),w,b
  9044  00092A  B4D8               	btfsc	status,2,c
  9045  00092C  D041               	goto	l2289
  9046                           
  9047                           ; BSR set to: 0
  9048                           ;doprnt.c: 1306: if(val < dpowers[c])
  9049                           
  9050                           ; BSR set to: 0
  9051                           
  9052                           ; BSR set to: 0
  9053  00092E  51F6               	movf	sprintf@c& (0+255),w,b
  9054  000930  0D04               	mullw	4
  9055  000932  0E51               	movlw	low _dpowers
  9056  000934  24F3               	addwf	prodl,w,c
  9057  000936  6EF6               	movwf	tblptrl,c
  9058  000938  0E7D               	movlw	high _dpowers
  9059  00093A  20F4               	addwfc	prodh,w,c
  9060  00093C  6EF7               	movwf	tblptrh,c
  9061  00093E                     	if	0	;There are less than 3 active tblptr bytes
  9062  00093E                     	endif
  9063  00093E  0009               	tblrd		*+
  9064  000940  50F5               	movf	tablat,w,c
  9065  000942  5DEB               	subwf	sprintf@val& (0+255),w,b
  9066  000944  0009               	tblrd		*+
  9067  000946  50F5               	movf	tablat,w,c
  9068  000948  59EC               	subwfb	(sprintf@val+1)& (0+255),w,b
  9069  00094A  0009               	tblrd		*+
  9070  00094C  50F5               	movf	tablat,w,c
  9071  00094E  59ED               	subwfb	(sprintf@val+2)& (0+255),w,b
  9072  000950  0009               	tblrd		*+
  9073  000952  50F5               	movf	tablat,w,c
  9074  000954  59EE               	subwfb	(sprintf@val+3)& (0+255),w,b
  9075  000956  A0D8               	btfss	status,0,c
  9076  000958  D02B               	goto	l2289
  9077                           
  9078                           ; BSR set to: 0
  9079                           
  9080                           ; BSR set to: 0
  9081                           
  9082                           ; BSR set to: 0
  9083                           ;doprnt.c: 1307: break;
  9084  00095A  2BF6               	incf	sprintf@c& (0+255),f,b
  9085  00095C  D7E4               	goto	l8657
  9086  00095E                     
  9087                           ; BSR set to: 0
  9088                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  9089                           
  9090                           ; BSR set to: 0
  9091  00095E  0E01               	movlw	1
  9092  000960  6FF6               	movwf	sprintf@c& (0+255),b
  9093  000962                     l8671:
  9094                           
  9095                           ; BSR set to: 0
  9096  000962  0E08               	movlw	8
  9097  000964  19F6               	xorwf	sprintf@c& (0+255),w,b
  9098  000966  B4D8               	btfsc	status,2,c
  9099  000968  D023               	goto	l2289
  9100                           
  9101                           ; BSR set to: 0
  9102                           ;doprnt.c: 1317: if(val < hexpowers[c])
  9103                           
  9104                           ; BSR set to: 0
  9105                           
  9106                           ; BSR set to: 0
  9107  00096A  51F6               	movf	sprintf@c& (0+255),w,b
  9108  00096C  0D04               	mullw	4
  9109  00096E  0EC7               	movlw	low _hexpowers
  9110  000970  24F3               	addwf	prodl,w,c
  9111  000972  6EF6               	movwf	tblptrl,c
  9112  000974  0E7D               	movlw	high _hexpowers
  9113  000976  20F4               	addwfc	prodh,w,c
  9114  000978  6EF7               	movwf	tblptrh,c
  9115  00097A                     	if	0	;There are less than 3 active tblptr bytes
  9116  00097A                     	endif
  9117  00097A  0009               	tblrd		*+
  9118  00097C  50F5               	movf	tablat,w,c
  9119  00097E  5DEB               	subwf	sprintf@val& (0+255),w,b
  9120  000980  0009               	tblrd		*+
  9121  000982  50F5               	movf	tablat,w,c
  9122  000984  59EC               	subwfb	(sprintf@val+1)& (0+255),w,b
  9123  000986  0009               	tblrd		*+
  9124  000988  50F5               	movf	tablat,w,c
  9125  00098A  59ED               	subwfb	(sprintf@val+2)& (0+255),w,b
  9126  00098C  0009               	tblrd		*+
  9127  00098E  50F5               	movf	tablat,w,c
  9128  000990  59EE               	subwfb	(sprintf@val+3)& (0+255),w,b
  9129  000992  A0D8               	btfss	status,0,c
  9130  000994  D00D               	goto	l2289
  9131                           
  9132                           ; BSR set to: 0
  9133                           
  9134                           ; BSR set to: 0
  9135                           
  9136                           ; BSR set to: 0
  9137                           ;doprnt.c: 1318: break;
  9138  000996  2BF6               	incf	sprintf@c& (0+255),f,b
  9139  000998  D7E4               	goto	l8671
  9140  00099A                     l2283:
  9141                           
  9142                           ; BSR set to: 0
  9143                           
  9144                           ; BSR set to: 0
  9145  00099A  51F4               	movf	sprintf@flag& (0+255),w,b
  9146  00099C  0BC0               	andlw	192
  9147                           
  9148                           ; Switch size 1, requested type "space"
  9149                           ; Number of cases is 3, Range of values is 0 to 192
  9150                           ; switch strategies available:
  9151                           ; Name         Instructions Cycles
  9152                           ; simple_byte           10     6 (average)
  9153                           ;	Chosen strategy is simple_byte
  9154  00099E  0A00               	xorlw	0	; case 0
  9155  0009A0  B4D8               	btfsc	status,2,c
  9156  0009A2  D7BF               	goto	l2284
  9157  0009A4  0A80               	xorlw	128	; case 128
  9158  0009A6  B4D8               	btfsc	status,2,c
  9159  0009A8  D7DA               	goto	l2290
  9160  0009AA  0A40               	xorlw	64	; case 192
  9161  0009AC  B4D8               	btfsc	status,2,c
  9162  0009AE  D7B9               	goto	l2284
  9163  0009B0                     l2289:
  9164                           
  9165                           ; BSR set to: 0
  9166                           ;doprnt.c: 1345: if(width && flag & 0x03)
  9167                           
  9168                           ; BSR set to: 0
  9169  0009B0  51F2               	movf	sprintf@width& (0+255),w,b
  9170  0009B2  11F3               	iorwf	(sprintf@width+1)& (0+255),w,b
  9171  0009B4  B4D8               	btfsc	status,2,c
  9172  0009B6  D00D               	goto	l2294
  9173                           
  9174                           ; BSR set to: 0
  9175  0009B8  0E03               	movlw	3
  9176  0009BA  15F4               	andwf	sprintf@flag& (0+255),w,b
  9177  0009BC  6FD3               	movwf	??_sprintf& (0+255),b
  9178  0009BE  0E00               	movlw	0
  9179  0009C0  15F5               	andwf	(sprintf@flag+1)& (0+255),w,b
  9180  0009C2  6FD4               	movwf	(??_sprintf+1)& (0+255),b
  9181  0009C4  51D3               	movf	??_sprintf& (0+255),w,b
  9182  0009C6  11D4               	iorwf	(??_sprintf+1)& (0+255),w,b
  9183  0009C8  B4D8               	btfsc	status,2,c
  9184  0009CA  D003               	goto	l2294
  9185                           
  9186                           ; BSR set to: 0
  9187                           ;doprnt.c: 1346: width--;
  9188  0009CC  07F2               	decf	sprintf@width& (0+255),f,b
  9189  0009CE  A0D8               	btfss	status,0,c
  9190  0009D0  07F3               	decf	(sprintf@width+1)& (0+255),f,b
  9191  0009D2                     l2294:
  9192                           
  9193                           ; BSR set to: 0
  9194                           ;doprnt.c: 1381: if(width > c)
  9195                           
  9196                           ; BSR set to: 0
  9197  0009D2  0E80               	movlw	128
  9198  0009D4  BFF6               	btfsc	sprintf@c& (0+255),7,b
  9199  0009D6  0E7F               	movlw	127
  9200  0009D8  6FD3               	movwf	??_sprintf& (0+255),b
  9201  0009DA  51F2               	movf	sprintf@width& (0+255),w,b
  9202  0009DC  5DF6               	subwf	sprintf@c& (0+255),w,b
  9203  0009DE  51F3               	movf	(sprintf@width+1)& (0+255),w,b
  9204  0009E0  0A80               	xorlw	128
  9205  0009E2  59D3               	subwfb	??_sprintf& (0+255),w,b
  9206  0009E4  B0D8               	btfsc	status,0,c
  9207  0009E6  D007               	goto	l2295
  9208                           
  9209                           ; BSR set to: 0
  9210                           ;doprnt.c: 1382: width -= c;
  9211  0009E8  51F6               	movf	sprintf@c& (0+255),w,b
  9212  0009EA  5FF2               	subwf	sprintf@width& (0+255),f,b
  9213  0009EC  0E00               	movlw	0
  9214  0009EE  BFF6               	btfsc	sprintf@c& (0+255),7,b
  9215  0009F0  0EFF               	movlw	255
  9216  0009F2  5BF3               	subwfb	(sprintf@width+1)& (0+255),f,b
  9217  0009F4  D004               	goto	l2296
  9218  0009F6                     l2295:
  9219                           
  9220                           ; BSR set to: 0
  9221                           ;doprnt.c: 1383: else
  9222                           ;doprnt.c: 1384: width = 0;
  9223                           
  9224                           ; BSR set to: 0
  9225  0009F6  0E00               	movlw	0
  9226  0009F8  6FF3               	movwf	(sprintf@width+1)& (0+255),b
  9227  0009FA  0E00               	movlw	0
  9228  0009FC  6FF2               	movwf	sprintf@width& (0+255),b
  9229  0009FE                     l2296:
  9230                           
  9231                           ; BSR set to: 0
  9232                           ;doprnt.c: 1387: if(flag & 0x04) {
  9233                           
  9234                           ; BSR set to: 0
  9235  0009FE  A5F4               	btfss	sprintf@flag& (0+255),2,b
  9236  000A00  D022               	goto	l2297
  9237                           
  9238                           ; BSR set to: 0
  9239                           ;doprnt.c: 1392: if(flag & 0x03)
  9240  000A02  0E03               	movlw	3
  9241  000A04  15F4               	andwf	sprintf@flag& (0+255),w,b
  9242  000A06  6FD3               	movwf	??_sprintf& (0+255),b
  9243  000A08  0E00               	movlw	0
  9244  000A0A  15F5               	andwf	(sprintf@flag+1)& (0+255),w,b
  9245  000A0C  6FD4               	movwf	(??_sprintf+1)& (0+255),b
  9246  000A0E  51D3               	movf	??_sprintf& (0+255),w,b
  9247  000A10  11D4               	iorwf	(??_sprintf+1)& (0+255),w,b
  9248  000A12  B4D8               	btfsc	status,2,c
  9249  000A14  D008               	goto	l2298
  9250                           
  9251                           ; BSR set to: 0
  9252                           ;doprnt.c: 1393: ((*sp++ = ('-')));
  9253  000A16  C0C7  FFD9         	movff	sprintf@sp,fsr2l
  9254  000A1A  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
  9255  000A1E  0E2D               	movlw	45
  9256  000A20  6EDF               	movwf	indf2,c
  9257                           
  9258                           ; BSR set to: 0
  9259  000A22  4BC7               	infsnz	sprintf@sp& (0+255),f,b
  9260  000A24  2BC8               	incf	(sprintf@sp+1)& (0+255),f,b
  9261  000A26                     l2298:
  9262                           
  9263                           ; BSR set to: 0
  9264                           ;doprnt.c: 1415: if(width)
  9265                           
  9266                           ; BSR set to: 0
  9267  000A26  51F2               	movf	sprintf@width& (0+255),w,b
  9268  000A28  11F3               	iorwf	(sprintf@width+1)& (0+255),w,b
  9269  000A2A  B4D8               	btfsc	status,2,c
  9270  000A2C  D031               	goto	l2306
  9271                           
  9272                           ; BSR set to: 0
  9273                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  9274                           
  9275                           ; BSR set to: 0
  9276                           
  9277                           ;doprnt.c: 1416: do
  9278  000A2E  C0C7  FFD9         	movff	sprintf@sp,fsr2l
  9279  000A32  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
  9280  000A36  0E30               	movlw	48
  9281  000A38  6EDF               	movwf	indf2,c
  9282                           
  9283                           ; BSR set to: 0
  9284  000A3A  4BC7               	infsnz	sprintf@sp& (0+255),f,b
  9285  000A3C  2BC8               	incf	(sprintf@sp+1)& (0+255),f,b
  9286                           
  9287                           ; BSR set to: 0
  9288                           ;doprnt.c: 1418: while(--width);
  9289  000A3E  07F2               	decf	sprintf@width& (0+255),f,b
  9290  000A40  A0D8               	btfss	status,0,c
  9291  000A42  07F3               	decf	(sprintf@width+1)& (0+255),f,b
  9292  000A44  D7F0               	goto	l2298
  9293  000A46                     l2297:
  9294                           
  9295                           ; BSR set to: 0
  9296                           ;doprnt.c: 1422: {
  9297                           ;doprnt.c: 1424: if(width
  9298                           ;doprnt.c: 1428: )
  9299                           
  9300                           ; BSR set to: 0
  9301  000A46  51F2               	movf	sprintf@width& (0+255),w,b
  9302  000A48  11F3               	iorwf	(sprintf@width+1)& (0+255),w,b
  9303  000A4A  B4D8               	btfsc	status,2,c
  9304  000A4C  D00F               	goto	u7780
  9305  000A4E                     u7770:
  9306                           
  9307                           ; BSR set to: 0
  9308                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  9309                           
  9310                           ; BSR set to: 0
  9311                           
  9312                           ;doprnt.c: 1429: do
  9313  000A4E  C0C7  FFD9         	movff	sprintf@sp,fsr2l
  9314  000A52  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
  9315  000A56  0E20               	movlw	32
  9316  000A58  6EDF               	movwf	indf2,c
  9317                           
  9318                           ; BSR set to: 0
  9319  000A5A  4BC7               	infsnz	sprintf@sp& (0+255),f,b
  9320  000A5C  2BC8               	incf	(sprintf@sp+1)& (0+255),f,b
  9321                           
  9322                           ; BSR set to: 0
  9323                           ;doprnt.c: 1431: while(--width);
  9324  000A5E  07F2               	decf	sprintf@width& (0+255),f,b
  9325  000A60  A0D8               	btfss	status,0,c
  9326  000A62  07F3               	decf	(sprintf@width+1)& (0+255),f,b
  9327  000A64  51F2               	movf	sprintf@width& (0+255),w,b
  9328  000A66  11F3               	iorwf	(sprintf@width+1)& (0+255),w,b
  9329  000A68  A4D8               	btfss	status,2,c
  9330  000A6A  D7F1               	goto	u7770
  9331  000A6C                     u7780:
  9332                           
  9333                           ; BSR set to: 0
  9334                           ;doprnt.c: 1438: if(flag & 0x03)
  9335                           
  9336                           ; BSR set to: 0
  9337                           
  9338                           ; BSR set to: 0
  9339  000A6C  0E03               	movlw	3
  9340  000A6E  15F4               	andwf	sprintf@flag& (0+255),w,b
  9341  000A70  6FD3               	movwf	??_sprintf& (0+255),b
  9342  000A72  0E00               	movlw	0
  9343  000A74  15F5               	andwf	(sprintf@flag+1)& (0+255),w,b
  9344  000A76  6FD4               	movwf	(??_sprintf+1)& (0+255),b
  9345  000A78  51D3               	movf	??_sprintf& (0+255),w,b
  9346  000A7A  11D4               	iorwf	(??_sprintf+1)& (0+255),w,b
  9347  000A7C  B4D8               	btfsc	status,2,c
  9348  000A7E  D008               	goto	l2306
  9349                           
  9350                           ; BSR set to: 0
  9351                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  9352  000A80  C0C7  FFD9         	movff	sprintf@sp,fsr2l
  9353  000A84  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
  9354  000A88  0E2D               	movlw	45
  9355  000A8A  6EDF               	movwf	indf2,c
  9356                           
  9357                           ; BSR set to: 0
  9358  000A8C  4BC7               	infsnz	sprintf@sp& (0+255),f,b
  9359  000A8E  2BC8               	incf	(sprintf@sp+1)& (0+255),f,b
  9360  000A90                     l2306:
  9361                           
  9362                           ; BSR set to: 0
  9363                           ;doprnt.c: 1469: }
  9364                           ;doprnt.c: 1472: prec = c;
  9365                           
  9366                           ; BSR set to: 0
  9367                           
  9368                           ; BSR set to: 0
  9369  000A90  51F6               	movf	sprintf@c& (0+255),w,b
  9370  000A92  6FE3               	movwf	sprintf@prec& (0+255),b
  9371  000A94  6BE4               	clrf	(sprintf@prec+1)& (0+255),b
  9372  000A96  BFE3               	btfsc	sprintf@prec& (0+255),7,b
  9373  000A98  07E4               	decf	(sprintf@prec+1)& (0+255),f,b
  9374                           
  9375                           ;doprnt.c: 1474: while(prec--) {
  9376  000A9A  D087               	goto	l2307
  9377  000A9C                     
  9378                           ; BSR set to: 0
  9379                           ;doprnt.c: 1486: case 0xC0:
  9380                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  9381                           
  9382                           ; BSR set to: 0
  9383                           
  9384                           ; BSR set to: 0
  9385  000A9C  C0E3  F0D3         	movff	sprintf@prec,??_sprintf
  9386  000AA0  C0E4  F0D4         	movff	sprintf@prec+1,??_sprintf+1
  9387  000AA4  90D8               	bcf	status,0,c
  9388  000AA6  37D3               	rlcf	??_sprintf& (0+255),f,b
  9389  000AA8  37D4               	rlcf	(??_sprintf+1)& (0+255),f,b
  9390  000AAA  90D8               	bcf	status,0,c
  9391  000AAC  37D3               	rlcf	??_sprintf& (0+255),f,b
  9392  000AAE  37D4               	rlcf	(??_sprintf+1)& (0+255),f,b
  9393  000AB0  0E51               	movlw	low _dpowers
  9394  000AB2  25D3               	addwf	??_sprintf& (0+255),w,b
  9395  000AB4  6EF6               	movwf	tblptrl,c
  9396  000AB6  0E7D               	movlw	high _dpowers
  9397  000AB8  21D4               	addwfc	(??_sprintf+1)& (0+255),w,b
  9398  000ABA  6EF7               	movwf	tblptrh,c
  9399  000ABC                     	if	0	;There are less than 3 active tblptr bytes
  9400  000ABC                     	endif
  9401  000ABC  0009               	tblrd		*+
  9402  000ABE  CFF5 F064          	movff	tablat,___lldiv@divisor
  9403  000AC2  0009               	tblrd		*+
  9404  000AC4  CFF5 F065          	movff	tablat,___lldiv@divisor+1
  9405  000AC8  0009               	tblrd		*+
  9406  000ACA  CFF5 F066          	movff	tablat,___lldiv@divisor+2
  9407  000ACE  000A               	tblrd		*-
  9408  000AD0  CFF5 F067          	movff	tablat,___lldiv@divisor+3
  9409  000AD4  C0EB  F060         	movff	sprintf@val,___lldiv@dividend
  9410  000AD8  C0EC  F061         	movff	sprintf@val+1,___lldiv@dividend+1
  9411  000ADC  C0ED  F062         	movff	sprintf@val+2,___lldiv@dividend+2
  9412  000AE0  C0EE  F063         	movff	sprintf@val+3,___lldiv@dividend+3
  9413  000AE4  EC03  F01F         	call	___lldiv	;wreg free
  9414  000AE8  C060  F06D         	movff	?___lldiv,___llmod@dividend
  9415  000AEC  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
  9416  000AF0  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
  9417  000AF4  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
  9418  000AF8  0E0A               	movlw	10
  9419  000AFA  0100               	movlb	0	; () banked
  9420  000AFC  6F71               	movwf	___llmod@divisor& (0+255),b
  9421  000AFE  0E00               	movlw	0
  9422  000B00  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
  9423  000B02  0E00               	movlw	0
  9424  000B04  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
  9425  000B06  0E00               	movlw	0
  9426  000B08  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
  9427  000B0A  ECAB  F020         	call	___llmod	;wreg free
  9428  000B0E  0100               	movlb	0	; () banked
  9429  000B10  516D               	movf	?___llmod& (0+255),w,b
  9430  000B12  0F30               	addlw	48
  9431  000B14  6FF6               	movwf	sprintf@c& (0+255),b
  9432                           
  9433                           ;doprnt.c: 1491: break;
  9434  000B16  D041               	goto	l2312
  9435  000B18                     
  9436                           ; BSR set to: 0
  9437                           ;doprnt.c: 1499: {
  9438                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  9439                           
  9440                           ; BSR set to: 0
  9441  000B18  C0EB  F060         	movff	sprintf@val,___lldiv@dividend
  9442  000B1C  C0EC  F061         	movff	sprintf@val+1,___lldiv@dividend+1
  9443  000B20  C0ED  F062         	movff	sprintf@val+2,___lldiv@dividend+2
  9444  000B24  C0EE  F063         	movff	sprintf@val+3,___lldiv@dividend+3
  9445  000B28  C0E3  F0D3         	movff	sprintf@prec,??_sprintf
  9446  000B2C  C0E4  F0D4         	movff	sprintf@prec+1,??_sprintf+1
  9447  000B30  90D8               	bcf	status,0,c
  9448  000B32  37D3               	rlcf	??_sprintf& (0+255),f,b
  9449  000B34  37D4               	rlcf	(??_sprintf+1)& (0+255),f,b
  9450  000B36  90D8               	bcf	status,0,c
  9451  000B38  37D3               	rlcf	??_sprintf& (0+255),f,b
  9452  000B3A  37D4               	rlcf	(??_sprintf+1)& (0+255),f,b
  9453  000B3C  0EC7               	movlw	low _hexpowers
  9454  000B3E  25D3               	addwf	??_sprintf& (0+255),w,b
  9455  000B40  6EF6               	movwf	tblptrl,c
  9456  000B42  0E7D               	movlw	high _hexpowers
  9457  000B44  21D4               	addwfc	(??_sprintf+1)& (0+255),w,b
  9458  000B46  6EF7               	movwf	tblptrh,c
  9459  000B48                     	if	0	;There are less than 3 active tblptr bytes
  9460  000B48                     	endif
  9461  000B48  0009               	tblrd		*+
  9462  000B4A  CFF5 F064          	movff	tablat,___lldiv@divisor
  9463  000B4E  0009               	tblrd		*+
  9464  000B50  CFF5 F065          	movff	tablat,___lldiv@divisor+1
  9465  000B54  0009               	tblrd		*+
  9466  000B56  CFF5 F066          	movff	tablat,___lldiv@divisor+2
  9467  000B5A  000A               	tblrd		*-
  9468  000B5C  CFF5 F067          	movff	tablat,___lldiv@divisor+3
  9469  000B60  EC03  F01F         	call	___lldiv	;wreg free
  9470  000B64  0100               	movlb	0	; () banked
  9471  000B66  5160               	movf	?___lldiv& (0+255),w,b
  9472  000B68  0B0F               	andlw	15
  9473  000B6A  6FDC               	movwf	sprintf@idx& (0+255),b
  9474                           
  9475                           ; BSR set to: 0
  9476                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
  9477  000B6C  51DC               	movf	sprintf@idx& (0+255),w,b
  9478  000B6E  0D01               	mullw	1
  9479  000B70  0E16               	movlw	low STR_26
  9480  000B72  24F3               	addwf	prodl,w,c
  9481  000B74  6EF6               	movwf	tblptrl,c
  9482  000B76  0E7F               	movlw	high STR_26
  9483  000B78  20F4               	addwfc	prodh,w,c
  9484  000B7A  6EF7               	movwf	tblptrh,c
  9485  000B7C                     	if	0	;There are less than 3 active tblptr bytes
  9486  000B7C                     	endif
  9487  000B7C  0008               	tblrd		*
  9488  000B7E  CFF5 F0F6          	movff	tablat,sprintf@c
  9489                           
  9490                           ; BSR set to: 0
  9491                           ;doprnt.c: 1523: }
  9492                           
  9493                           ;doprnt.c: 1508: }
  9494                           ;doprnt.c: 1510: break;
  9495  000B82  D00B               	goto	l2312
  9496  000B84                     l8739:
  9497                           
  9498                           ; BSR set to: 0
  9499  000B84  51F4               	movf	sprintf@flag& (0+255),w,b
  9500  000B86  0BC0               	andlw	192
  9501                           
  9502                           ; Switch size 1, requested type "space"
  9503                           ; Number of cases is 3, Range of values is 0 to 192
  9504                           ; switch strategies available:
  9505                           ; Name         Instructions Cycles
  9506                           ; simple_byte           10     6 (average)
  9507                           ;	Chosen strategy is simple_byte
  9508  000B88  0A00               	xorlw	0	; case 0
  9509  000B8A  B4D8               	btfsc	status,2,c
  9510  000B8C  D787               	goto	l2310
  9511  000B8E  0A80               	xorlw	128	; case 128
  9512  000B90  B4D8               	btfsc	status,2,c
  9513  000B92  D7C2               	goto	l2313
  9514  000B94  0A40               	xorlw	64	; case 192
  9515  000B96  B4D8               	btfsc	status,2,c
  9516  000B98  D781               	goto	l2310
  9517  000B9A                     l2312:
  9518                           
  9519                           ; BSR set to: 0
  9520                           ;doprnt.c: 1524: ((*sp++ = (c)));
  9521                           
  9522                           ; BSR set to: 0
  9523  000B9A  C0C7  FFD9         	movff	sprintf@sp,fsr2l
  9524  000B9E  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
  9525  000BA2  C0F6  FFDF         	movff	sprintf@c,indf2
  9526                           
  9527                           ; BSR set to: 0
  9528  000BA6  4BC7               	infsnz	sprintf@sp& (0+255),f,b
  9529  000BA8  2BC8               	incf	(sprintf@sp+1)& (0+255),f,b
  9530  000BAA                     l2307:
  9531                           
  9532                           ; BSR set to: 0
  9533                           
  9534                           ; BSR set to: 0
  9535  000BAA  07E3               	decf	sprintf@prec& (0+255),f,b
  9536  000BAC  A0D8               	btfss	status,0,c
  9537  000BAE  07E4               	decf	(sprintf@prec+1)& (0+255),f,b
  9538  000BB0  29E3               	incf	sprintf@prec& (0+255),w,b
  9539  000BB2  E1E8               	bnz	l8739
  9540  000BB4  29E4               	incf	(sprintf@prec+1)& (0+255),w,b
  9541  000BB6  A4D8               	btfss	status,2,c
  9542  000BB8  D7E5               	goto	l2309
  9543  000BBA                     u7800:
  9544                           
  9545                           ; BSR set to: 0
  9546                           
  9547                           ; BSR set to: 0
  9548                           
  9549                           ; BSR set to: 0
  9550  000BBA  C0C9  FFF6         	movff	sprintf@f,tblptrl
  9551  000BBE  C0CA  FFF7         	movff	sprintf@f+1,tblptrh
  9552  000BC2  4BC9               	infsnz	sprintf@f& (0+255),f,b
  9553  000BC4  2BCA               	incf	(sprintf@f+1)& (0+255),f,b
  9554  000BC6                     	if	0	;tblptru may be non-zero
  9555  000BC6                     	endif
  9556  000BC6                     	if	0	;tblptru may be non-zero
  9557  000BC6                     	endif
  9558  000BC6  0008               	tblrd		*
  9559  000BC8  CFF5 F0F6          	movff	tablat,sprintf@c
  9560  000BCC  51F6               	movf	sprintf@c& (0+255),w,b
  9561  000BCE  A4D8               	btfss	status,2,c
  9562  000BD0  EF10  F000         	goto	l2191
  9563  000BD4                     u7810:
  9564                           
  9565                           ;doprnt.c: 1538: *sp = 0;
  9566                           
  9567                           ; BSR set to: 0
  9568                           
  9569                           ;doprnt.c: 1525: }
  9570                           ;doprnt.c: 1533: }
  9571                           ;doprnt.c: 1535: alldone:
  9572                           
  9573                           ; BSR set to: 0
  9574  000BD4  C0C7  FFD9         	movff	sprintf@sp,fsr2l
  9575  000BD8  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
  9576  000BDC  0E00               	movlw	0
  9577  000BDE  6EDF               	movwf	indf2,c
  9578  000BE0  0012               	return	
  9579  000BE2                     __end_of_sprintf:
  9580                           	opt stack 0
  9581                           tblptru	equ	0xFF8
  9582                           tblptrh	equ	0xFF7
  9583                           tblptrl	equ	0xFF6
  9584                           tablat	equ	0xFF5
  9585                           prodh	equ	0xFF4
  9586                           prodl	equ	0xFF3
  9587                           intcon	equ	0xFF2
  9588                           postinc0	equ	0xFEE
  9589                           wreg	equ	0xFE8
  9590                           indf1	equ	0xFE7
  9591                           postdec1	equ	0xFE5
  9592                           fsr1h	equ	0xFE2
  9593                           fsr1l	equ	0xFE1
  9594                           indf2	equ	0xFDF
  9595                           postinc2	equ	0xFDE
  9596                           postdec2	equ	0xFDD
  9597                           plusw2	equ	0xFDB
  9598                           fsr2h	equ	0xFDA
  9599                           fsr2l	equ	0xFD9
  9600                           status	equ	0xFD8
  9601                           
  9602 ;; *************** function _scale *****************
  9603 ;; Defined at:
  9604 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\doprnt.c"
  9605 ;; Parameters:    Size  Location     Type
  9606 ;;  scl             1    wreg     char 
  9607 ;; Auto vars:     Size  Location     Type
  9608 ;;  scl             1   53[BANK0 ] char 
  9609 ;; Return value:  Size  Location     Type
  9610 ;;                  3   47[BANK0 ] char 
  9611 ;; Registers used:
  9612 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9613 ;; Tracked objects:
  9614 ;;		On entry : 0/0
  9615 ;;		On exit  : 0/0
  9616 ;;		Unchanged: 0/0
  9617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9618 ;;      Params:         0       3       0       0       0       0       0       0       0
  9619 ;;      Locals:         0       4       0       0       0       0       0       0       0
  9620 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9621 ;;      Totals:         0       7       0       0       0       0       0       0       0
  9622 ;;Total ram usage:        7 bytes
  9623 ;; Hardware stack levels used:    1
  9624 ;; Hardware stack levels required when called:   12
  9625 ;; This function calls:
  9626 ;;		___awdiv
  9627 ;;		___awmod
  9628 ;;		___ftmul
  9629 ;;		___wmul
  9630 ;; This function is called by:
  9631 ;;		_sprintf
  9632 ;; This function uses a non-reentrant model
  9633 ;;
  9634                           
  9635                           	psect	text29
  9636  000BE2                     __ptext29:
  9637                           	opt stack 0
  9638  000BE2                     _scale:
  9639                           	opt stack 16
  9640                           
  9641                           ;incstack = 0
  9642                           ;scale@scl stored from wreg
  9643  000BE2  0100               	movlb	0	; () banked
  9644  000BE4  6F95               	movwf	scale@scl& (0+255),b
  9645                           
  9646                           ;doprnt.c: 428: if(scl < 0) {
  9647  000BE6  0100               	movlb	0	; () banked
  9648  000BE8  AF95               	btfss	scale@scl& (0+255),7,b
  9649  000BEA  D10C               	goto	l2180
  9650                           
  9651                           ; BSR set to: 0
  9652                           ;doprnt.c: 429: scl = -scl;
  9653  000BEC  6D95               	negf	scale@scl& (0+255),b
  9654                           
  9655                           ;doprnt.c: 430: if(scl>=110)
  9656  000BEE  5195               	movf	scale@scl& (0+255),w,b
  9657  000BF0  0A80               	xorlw	128
  9658  000BF2  0F12               	addlw	-238
  9659  000BF4  A0D8               	btfss	status,0,c
  9660  000BF6  D097               	goto	l2181
  9661                           
  9662                           ; BSR set to: 0
  9663                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  9664  000BF8  0E00               	movlw	0
  9665  000BFA  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9666  000BFC  0E03               	movlw	3
  9667  000BFE  6F70               	movwf	___wmul@multiplicand& (0+255),b
  9668  000C00  0E00               	movlw	0
  9669  000C02  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  9670  000C04  0E0A               	movlw	10
  9671  000C06  6F68               	movwf	___awdiv@divisor& (0+255),b
  9672  000C08  0E00               	movlw	0
  9673  000C0A  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  9674  000C0C  0E64               	movlw	100
  9675  000C0E  6F62               	movwf	___awmod@divisor& (0+255),b
  9676  000C10  5195               	movf	scale@scl& (0+255),w,b
  9677  000C12  6F60               	movwf	___awmod@dividend& (0+255),b
  9678  000C14  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  9679  000C16  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  9680  000C18  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  9681  000C1A  EC06  F020         	call	___awmod	;wreg free
  9682  000C1E  C060  F066         	movff	?___awmod,___awdiv@dividend
  9683  000C22  C061  F067         	movff	?___awmod+1,___awdiv@dividend+1
  9684  000C26  EC7D  F01E         	call	___awdiv	;wreg free
  9685  000C2A  0E09               	movlw	9
  9686  000C2C  0100               	movlb	0	; () banked
  9687  000C2E  2566               	addwf	?___awdiv& (0+255),w,b
  9688  000C30  6F6E               	movwf	___wmul@multiplier& (0+255),b
  9689  000C32  0E00               	movlw	0
  9690  000C34  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  9691  000C36  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  9692  000C38  EC09  F024         	call	___wmul	;wreg free
  9693  000C3C  0EA0               	movlw	low __npowers_
  9694  000C3E  0100               	movlb	0	; () banked
  9695  000C40  256E               	addwf	?___wmul& (0+255),w,b
  9696  000C42  6EF6               	movwf	tblptrl,c
  9697  000C44  0E7D               	movlw	high __npowers_
  9698  000C46  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  9699  000C48  6EF7               	movwf	tblptrh,c
  9700  000C4A                     	if	0	;There are less than 3 active tblptr bytes
  9701  000C4A                     	endif
  9702  000C4A  0009               	tblrd		*+
  9703  000C4C  CFF5 F083          	movff	tablat,___ftmul@f2
  9704  000C50  0009               	tblrd		*+
  9705  000C52  CFF5 F084          	movff	tablat,___ftmul@f2+1
  9706  000C56  000A               	tblrd		*-
  9707  000C58  CFF5 F085          	movff	tablat,___ftmul@f2+2
  9708  000C5C  0E00               	movlw	0
  9709  000C5E  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  9710  000C60  0E64               	movlw	100
  9711  000C62  6F68               	movwf	___awdiv@divisor& (0+255),b
  9712  000C64  5195               	movf	scale@scl& (0+255),w,b
  9713  000C66  6F66               	movwf	___awdiv@dividend& (0+255),b
  9714  000C68  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  9715  000C6A  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
  9716  000C6C  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
  9717  000C6E  EC7D  F01E         	call	___awdiv	;wreg free
  9718  000C72  0E12               	movlw	18
  9719  000C74  0100               	movlb	0	; () banked
  9720  000C76  2566               	addwf	?___awdiv& (0+255),w,b
  9721  000C78  6F6E               	movwf	___wmul@multiplier& (0+255),b
  9722  000C7A  0E00               	movlw	0
  9723  000C7C  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  9724  000C7E  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  9725  000C80  0E00               	movlw	0
  9726  000C82  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9727  000C84  0E03               	movlw	3
  9728  000C86  6F70               	movwf	___wmul@multiplicand& (0+255),b
  9729  000C88  EC09  F024         	call	___wmul	;wreg free
  9730  000C8C  0EA0               	movlw	low __npowers_
  9731  000C8E  0100               	movlb	0	; () banked
  9732  000C90  256E               	addwf	?___wmul& (0+255),w,b
  9733  000C92  6EF6               	movwf	tblptrl,c
  9734  000C94  0E7D               	movlw	high __npowers_
  9735  000C96  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  9736  000C98  6EF7               	movwf	tblptrh,c
  9737  000C9A                     	if	0	;There are less than 3 active tblptr bytes
  9738  000C9A                     	endif
  9739  000C9A  0009               	tblrd		*+
  9740  000C9C  CFF5 F080          	movff	tablat,___ftmul@f1
  9741  000CA0  0009               	tblrd		*+
  9742  000CA2  CFF5 F081          	movff	tablat,___ftmul@f1+1
  9743  000CA6  000A               	tblrd		*-
  9744  000CA8  CFF5 F082          	movff	tablat,___ftmul@f1+2
  9745  000CAC  EC7C  F018         	call	___ftmul	;wreg free
  9746  000CB0  C080  F092         	movff	?___ftmul,_scale$5652
  9747  000CB4  C081  F093         	movff	?___ftmul+1,_scale$5652+1
  9748  000CB8  C082  F094         	movff	?___ftmul+2,_scale$5652+2
  9749                           
  9750                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  9751  000CBC  C092  F080         	movff	_scale$5652,___ftmul@f1
  9752  000CC0  C093  F081         	movff	_scale$5652+1,___ftmul@f1+1
  9753  000CC4  C094  F082         	movff	_scale$5652+2,___ftmul@f1+2
  9754  000CC8  0E00               	movlw	0
  9755  000CCA  0100               	movlb	0	; () banked
  9756  000CCC  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9757  000CCE  0E03               	movlw	3
  9758  000CD0  6F70               	movwf	___wmul@multiplicand& (0+255),b
  9759  000CD2  0E00               	movlw	0
  9760  000CD4  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  9761  000CD6  0E0A               	movlw	10
  9762  000CD8  6F62               	movwf	___awmod@divisor& (0+255),b
  9763  000CDA  5195               	movf	scale@scl& (0+255),w,b
  9764  000CDC  6F60               	movwf	___awmod@dividend& (0+255),b
  9765  000CDE  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  9766  000CE0  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  9767  000CE2  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  9768  000CE4  EC06  F020         	call	___awmod	;wreg free
  9769  000CE8  C060  F06E         	movff	?___awmod,___wmul@multiplier
  9770  000CEC  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
  9771  000CF0  EC09  F024         	call	___wmul	;wreg free
  9772  000CF4  0EA0               	movlw	low __npowers_
  9773  000CF6  0100               	movlb	0	; () banked
  9774  000CF8  256E               	addwf	?___wmul& (0+255),w,b
  9775  000CFA  6EF6               	movwf	tblptrl,c
  9776  000CFC  0E7D               	movlw	high __npowers_
  9777  000CFE  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  9778  000D00  6EF7               	movwf	tblptrh,c
  9779  000D02                     	if	0	;There are less than 3 active tblptr bytes
  9780  000D02                     	endif
  9781  000D02  0009               	tblrd		*+
  9782  000D04  CFF5 F083          	movff	tablat,___ftmul@f2
  9783  000D08  0009               	tblrd		*+
  9784  000D0A  CFF5 F084          	movff	tablat,___ftmul@f2+1
  9785  000D0E  000A               	tblrd		*-
  9786  000D10  CFF5 F085          	movff	tablat,___ftmul@f2+2
  9787  000D14  EC7C  F018         	call	___ftmul	;wreg free
  9788  000D18  C080  F08F         	movff	?___ftmul,?_scale
  9789  000D1C  C081  F090         	movff	?___ftmul+1,?_scale+1
  9790  000D20  C082  F091         	movff	?___ftmul+2,?_scale+2
  9791  000D24  0012               	return	
  9792  000D26                     l2181:
  9793                           
  9794                           ;doprnt.c: 432: else if(scl > 10)
  9795  000D26  0100               	movlb	0	; () banked
  9796  000D28  5195               	movf	scale@scl& (0+255),w,b
  9797  000D2A  0A80               	xorlw	128
  9798  000D2C  0F75               	addlw	-139
  9799  000D2E  A0D8               	btfss	status,0,c
  9800  000D30  D056               	goto	l2184
  9801                           
  9802                           ; BSR set to: 0
  9803                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  9804  000D32  0E00               	movlw	0
  9805  000D34  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  9806  000D36  0E0A               	movlw	10
  9807  000D38  6F68               	movwf	___awdiv@divisor& (0+255),b
  9808  000D3A  5195               	movf	scale@scl& (0+255),w,b
  9809  000D3C  6F66               	movwf	___awdiv@dividend& (0+255),b
  9810  000D3E  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  9811  000D40  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
  9812  000D42  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
  9813  000D44  EC7D  F01E         	call	___awdiv	;wreg free
  9814  000D48  0E09               	movlw	9
  9815  000D4A  0100               	movlb	0	; () banked
  9816  000D4C  2566               	addwf	?___awdiv& (0+255),w,b
  9817  000D4E  6F6E               	movwf	___wmul@multiplier& (0+255),b
  9818  000D50  0E00               	movlw	0
  9819  000D52  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  9820  000D54  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  9821  000D56  0E00               	movlw	0
  9822  000D58  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9823  000D5A  0E03               	movlw	3
  9824  000D5C  6F70               	movwf	___wmul@multiplicand& (0+255),b
  9825  000D5E  EC09  F024         	call	___wmul	;wreg free
  9826  000D62  0EA0               	movlw	low __npowers_
  9827  000D64  0100               	movlb	0	; () banked
  9828  000D66  256E               	addwf	?___wmul& (0+255),w,b
  9829  000D68  6EF6               	movwf	tblptrl,c
  9830  000D6A  0E7D               	movlw	high __npowers_
  9831  000D6C  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  9832  000D6E  6EF7               	movwf	tblptrh,c
  9833  000D70                     	if	0	;There are less than 3 active tblptr bytes
  9834  000D70                     	endif
  9835  000D70  0009               	tblrd		*+
  9836  000D72  CFF5 F080          	movff	tablat,___ftmul@f1
  9837  000D76  0009               	tblrd		*+
  9838  000D78  CFF5 F081          	movff	tablat,___ftmul@f1+1
  9839  000D7C  000A               	tblrd		*-
  9840  000D7E  CFF5 F082          	movff	tablat,___ftmul@f1+2
  9841  000D82  0E00               	movlw	0
  9842  000D84  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9843  000D86  0E03               	movlw	3
  9844  000D88  6F70               	movwf	___wmul@multiplicand& (0+255),b
  9845  000D8A  0E00               	movlw	0
  9846  000D8C  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  9847  000D8E  0E0A               	movlw	10
  9848  000D90  6F62               	movwf	___awmod@divisor& (0+255),b
  9849  000D92  5195               	movf	scale@scl& (0+255),w,b
  9850  000D94  6F60               	movwf	___awmod@dividend& (0+255),b
  9851  000D96  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  9852  000D98  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  9853  000D9A  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  9854  000D9C  EC06  F020         	call	___awmod	;wreg free
  9855  000DA0  C060  F06E         	movff	?___awmod,___wmul@multiplier
  9856  000DA4  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
  9857  000DA8  EC09  F024         	call	___wmul	;wreg free
  9858  000DAC  0EA0               	movlw	low __npowers_
  9859  000DAE  0100               	movlb	0	; () banked
  9860  000DB0  256E               	addwf	?___wmul& (0+255),w,b
  9861  000DB2  6EF6               	movwf	tblptrl,c
  9862  000DB4  0E7D               	movlw	high __npowers_
  9863  000DB6  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  9864  000DB8  6EF7               	movwf	tblptrh,c
  9865  000DBA                     	if	0	;There are less than 3 active tblptr bytes
  9866  000DBA                     	endif
  9867  000DBA  0009               	tblrd		*+
  9868  000DBC  CFF5 F083          	movff	tablat,___ftmul@f2
  9869  000DC0  0009               	tblrd		*+
  9870  000DC2  CFF5 F084          	movff	tablat,___ftmul@f2+1
  9871  000DC6  000A               	tblrd		*-
  9872  000DC8  CFF5 F085          	movff	tablat,___ftmul@f2+2
  9873  000DCC  EC7C  F018         	call	___ftmul	;wreg free
  9874  000DD0  C080  F08F         	movff	?___ftmul,?_scale
  9875  000DD4  C081  F090         	movff	?___ftmul+1,?_scale+1
  9876  000DD8  C082  F091         	movff	?___ftmul+2,?_scale+2
  9877  000DDC  0012               	return	
  9878  000DDE                     l2184:
  9879                           
  9880                           ;doprnt.c: 434: return _npowers_[scl];
  9881  000DDE  0100               	movlb	0	; () banked
  9882  000DE0  5195               	movf	scale@scl& (0+255),w,b
  9883  000DE2  0D03               	mullw	3
  9884  000DE4  0EA0               	movlw	low __npowers_
  9885  000DE6  24F3               	addwf	prodl,w,c
  9886  000DE8  6EF6               	movwf	tblptrl,c
  9887  000DEA  0E7D               	movlw	high __npowers_
  9888  000DEC  20F4               	addwfc	prodh,w,c
  9889  000DEE  6EF7               	movwf	tblptrh,c
  9890  000DF0                     	if	0	;There are less than 3 active tblptr bytes
  9891  000DF0                     	endif
  9892  000DF0  0009               	tblrd		*+
  9893  000DF2  CFF5 F08F          	movff	tablat,?_scale
  9894  000DF6  0009               	tblrd		*+
  9895  000DF8  CFF5 F090          	movff	tablat,?_scale+1
  9896  000DFC  000A               	tblrd		*-
  9897  000DFE  CFF5 F091          	movff	tablat,?_scale+2
  9898                           
  9899                           ; BSR set to: 0
  9900  000E02  0012               	return	
  9901  000E04                     l2180:
  9902                           
  9903                           ; BSR set to: 0
  9904                           ;doprnt.c: 435: }
  9905                           ;doprnt.c: 436: if(scl>=110)
  9906                           
  9907                           ; BSR set to: 0
  9908  000E04  5195               	movf	scale@scl& (0+255),w,b
  9909  000E06  0A80               	xorlw	128
  9910  000E08  0F12               	addlw	-238
  9911  000E0A  A0D8               	btfss	status,0,c
  9912  000E0C  D097               	goto	l2185
  9913                           
  9914                           ; BSR set to: 0
  9915                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  9916  000E0E  0E00               	movlw	0
  9917  000E10  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9918  000E12  0E03               	movlw	3
  9919  000E14  6F70               	movwf	___wmul@multiplicand& (0+255),b
  9920  000E16  0E00               	movlw	0
  9921  000E18  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  9922  000E1A  0E0A               	movlw	10
  9923  000E1C  6F68               	movwf	___awdiv@divisor& (0+255),b
  9924  000E1E  0E00               	movlw	0
  9925  000E20  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  9926  000E22  0E64               	movlw	100
  9927  000E24  6F62               	movwf	___awmod@divisor& (0+255),b
  9928  000E26  5195               	movf	scale@scl& (0+255),w,b
  9929  000E28  6F60               	movwf	___awmod@dividend& (0+255),b
  9930  000E2A  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  9931  000E2C  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  9932  000E2E  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  9933  000E30  EC06  F020         	call	___awmod	;wreg free
  9934  000E34  C060  F066         	movff	?___awmod,___awdiv@dividend
  9935  000E38  C061  F067         	movff	?___awmod+1,___awdiv@dividend+1
  9936  000E3C  EC7D  F01E         	call	___awdiv	;wreg free
  9937  000E40  0E09               	movlw	9
  9938  000E42  0100               	movlb	0	; () banked
  9939  000E44  2566               	addwf	?___awdiv& (0+255),w,b
  9940  000E46  6F6E               	movwf	___wmul@multiplier& (0+255),b
  9941  000E48  0E00               	movlw	0
  9942  000E4A  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  9943  000E4C  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  9944  000E4E  EC09  F024         	call	___wmul	;wreg free
  9945  000E52  0E79               	movlw	low __powers_
  9946  000E54  0100               	movlb	0	; () banked
  9947  000E56  256E               	addwf	?___wmul& (0+255),w,b
  9948  000E58  6EF6               	movwf	tblptrl,c
  9949  000E5A  0E7D               	movlw	high __powers_
  9950  000E5C  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  9951  000E5E  6EF7               	movwf	tblptrh,c
  9952  000E60                     	if	0	;There are less than 3 active tblptr bytes
  9953  000E60                     	endif
  9954  000E60  0009               	tblrd		*+
  9955  000E62  CFF5 F083          	movff	tablat,___ftmul@f2
  9956  000E66  0009               	tblrd		*+
  9957  000E68  CFF5 F084          	movff	tablat,___ftmul@f2+1
  9958  000E6C  000A               	tblrd		*-
  9959  000E6E  CFF5 F085          	movff	tablat,___ftmul@f2+2
  9960  000E72  0E00               	movlw	0
  9961  000E74  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  9962  000E76  0E64               	movlw	100
  9963  000E78  6F68               	movwf	___awdiv@divisor& (0+255),b
  9964  000E7A  5195               	movf	scale@scl& (0+255),w,b
  9965  000E7C  6F66               	movwf	___awdiv@dividend& (0+255),b
  9966  000E7E  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  9967  000E80  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
  9968  000E82  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
  9969  000E84  EC7D  F01E         	call	___awdiv	;wreg free
  9970  000E88  0E12               	movlw	18
  9971  000E8A  0100               	movlb	0	; () banked
  9972  000E8C  2566               	addwf	?___awdiv& (0+255),w,b
  9973  000E8E  6F6E               	movwf	___wmul@multiplier& (0+255),b
  9974  000E90  0E00               	movlw	0
  9975  000E92  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  9976  000E94  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  9977  000E96  0E00               	movlw	0
  9978  000E98  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9979  000E9A  0E03               	movlw	3
  9980  000E9C  6F70               	movwf	___wmul@multiplicand& (0+255),b
  9981  000E9E  EC09  F024         	call	___wmul	;wreg free
  9982  000EA2  0E79               	movlw	low __powers_
  9983  000EA4  0100               	movlb	0	; () banked
  9984  000EA6  256E               	addwf	?___wmul& (0+255),w,b
  9985  000EA8  6EF6               	movwf	tblptrl,c
  9986  000EAA  0E7D               	movlw	high __powers_
  9987  000EAC  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  9988  000EAE  6EF7               	movwf	tblptrh,c
  9989  000EB0                     	if	0	;There are less than 3 active tblptr bytes
  9990  000EB0                     	endif
  9991  000EB0  0009               	tblrd		*+
  9992  000EB2  CFF5 F080          	movff	tablat,___ftmul@f1
  9993  000EB6  0009               	tblrd		*+
  9994  000EB8  CFF5 F081          	movff	tablat,___ftmul@f1+1
  9995  000EBC  000A               	tblrd		*-
  9996  000EBE  CFF5 F082          	movff	tablat,___ftmul@f1+2
  9997  000EC2  EC7C  F018         	call	___ftmul	;wreg free
  9998  000EC6  C080  F092         	movff	?___ftmul,_scale$5652
  9999  000ECA  C081  F093         	movff	?___ftmul+1,_scale$5652+1
 10000  000ECE  C082  F094         	movff	?___ftmul+2,_scale$5652+2
 10001                           
 10002                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 10003  000ED2  C092  F080         	movff	_scale$5652,___ftmul@f1
 10004  000ED6  C093  F081         	movff	_scale$5652+1,___ftmul@f1+1
 10005  000EDA  C094  F082         	movff	_scale$5652+2,___ftmul@f1+2
 10006  000EDE  0E00               	movlw	0
 10007  000EE0  0100               	movlb	0	; () banked
 10008  000EE2  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10009  000EE4  0E03               	movlw	3
 10010  000EE6  6F70               	movwf	___wmul@multiplicand& (0+255),b
 10011  000EE8  0E00               	movlw	0
 10012  000EEA  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 10013  000EEC  0E0A               	movlw	10
 10014  000EEE  6F62               	movwf	___awmod@divisor& (0+255),b
 10015  000EF0  5195               	movf	scale@scl& (0+255),w,b
 10016  000EF2  6F60               	movwf	___awmod@dividend& (0+255),b
 10017  000EF4  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 10018  000EF6  BF60               	btfsc	___awmod@dividend& (0+255),7,b
 10019  000EF8  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
 10020  000EFA  EC06  F020         	call	___awmod	;wreg free
 10021  000EFE  C060  F06E         	movff	?___awmod,___wmul@multiplier
 10022  000F02  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
 10023  000F06  EC09  F024         	call	___wmul	;wreg free
 10024  000F0A  0E79               	movlw	low __powers_
 10025  000F0C  0100               	movlb	0	; () banked
 10026  000F0E  256E               	addwf	?___wmul& (0+255),w,b
 10027  000F10  6EF6               	movwf	tblptrl,c
 10028  000F12  0E7D               	movlw	high __powers_
 10029  000F14  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 10030  000F16  6EF7               	movwf	tblptrh,c
 10031  000F18                     	if	0	;There are less than 3 active tblptr bytes
 10032  000F18                     	endif
 10033  000F18  0009               	tblrd		*+
 10034  000F1A  CFF5 F083          	movff	tablat,___ftmul@f2
 10035  000F1E  0009               	tblrd		*+
 10036  000F20  CFF5 F084          	movff	tablat,___ftmul@f2+1
 10037  000F24  000A               	tblrd		*-
 10038  000F26  CFF5 F085          	movff	tablat,___ftmul@f2+2
 10039  000F2A  EC7C  F018         	call	___ftmul	;wreg free
 10040  000F2E  C080  F08F         	movff	?___ftmul,?_scale
 10041  000F32  C081  F090         	movff	?___ftmul+1,?_scale+1
 10042  000F36  C082  F091         	movff	?___ftmul+2,?_scale+2
 10043  000F3A  0012               	return	
 10044  000F3C                     l2185:
 10045                           
 10046                           ;doprnt.c: 438: else if(scl > 10)
 10047  000F3C  0100               	movlb	0	; () banked
 10048  000F3E  5195               	movf	scale@scl& (0+255),w,b
 10049  000F40  0A80               	xorlw	128
 10050  000F42  0F75               	addlw	-139
 10051  000F44  A0D8               	btfss	status,0,c
 10052  000F46  D056               	goto	l2187
 10053                           
 10054                           ; BSR set to: 0
 10055                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 10056  000F48  0E00               	movlw	0
 10057  000F4A  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 10058  000F4C  0E0A               	movlw	10
 10059  000F4E  6F68               	movwf	___awdiv@divisor& (0+255),b
 10060  000F50  5195               	movf	scale@scl& (0+255),w,b
 10061  000F52  6F66               	movwf	___awdiv@dividend& (0+255),b
 10062  000F54  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
 10063  000F56  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
 10064  000F58  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
 10065  000F5A  EC7D  F01E         	call	___awdiv	;wreg free
 10066  000F5E  0E09               	movlw	9
 10067  000F60  0100               	movlb	0	; () banked
 10068  000F62  2566               	addwf	?___awdiv& (0+255),w,b
 10069  000F64  6F6E               	movwf	___wmul@multiplier& (0+255),b
 10070  000F66  0E00               	movlw	0
 10071  000F68  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 10072  000F6A  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 10073  000F6C  0E00               	movlw	0
 10074  000F6E  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10075  000F70  0E03               	movlw	3
 10076  000F72  6F70               	movwf	___wmul@multiplicand& (0+255),b
 10077  000F74  EC09  F024         	call	___wmul	;wreg free
 10078  000F78  0E79               	movlw	low __powers_
 10079  000F7A  0100               	movlb	0	; () banked
 10080  000F7C  256E               	addwf	?___wmul& (0+255),w,b
 10081  000F7E  6EF6               	movwf	tblptrl,c
 10082  000F80  0E7D               	movlw	high __powers_
 10083  000F82  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 10084  000F84  6EF7               	movwf	tblptrh,c
 10085  000F86                     	if	0	;There are less than 3 active tblptr bytes
 10086  000F86                     	endif
 10087  000F86  0009               	tblrd		*+
 10088  000F88  CFF5 F080          	movff	tablat,___ftmul@f1
 10089  000F8C  0009               	tblrd		*+
 10090  000F8E  CFF5 F081          	movff	tablat,___ftmul@f1+1
 10091  000F92  000A               	tblrd		*-
 10092  000F94  CFF5 F082          	movff	tablat,___ftmul@f1+2
 10093  000F98  0E00               	movlw	0
 10094  000F9A  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10095  000F9C  0E03               	movlw	3
 10096  000F9E  6F70               	movwf	___wmul@multiplicand& (0+255),b
 10097  000FA0  0E00               	movlw	0
 10098  000FA2  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 10099  000FA4  0E0A               	movlw	10
 10100  000FA6  6F62               	movwf	___awmod@divisor& (0+255),b
 10101  000FA8  5195               	movf	scale@scl& (0+255),w,b
 10102  000FAA  6F60               	movwf	___awmod@dividend& (0+255),b
 10103  000FAC  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 10104  000FAE  BF60               	btfsc	___awmod@dividend& (0+255),7,b
 10105  000FB0  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
 10106  000FB2  EC06  F020         	call	___awmod	;wreg free
 10107  000FB6  C060  F06E         	movff	?___awmod,___wmul@multiplier
 10108  000FBA  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
 10109  000FBE  EC09  F024         	call	___wmul	;wreg free
 10110  000FC2  0E79               	movlw	low __powers_
 10111  000FC4  0100               	movlb	0	; () banked
 10112  000FC6  256E               	addwf	?___wmul& (0+255),w,b
 10113  000FC8  6EF6               	movwf	tblptrl,c
 10114  000FCA  0E7D               	movlw	high __powers_
 10115  000FCC  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 10116  000FCE  6EF7               	movwf	tblptrh,c
 10117  000FD0                     	if	0	;There are less than 3 active tblptr bytes
 10118  000FD0                     	endif
 10119  000FD0  0009               	tblrd		*+
 10120  000FD2  CFF5 F083          	movff	tablat,___ftmul@f2
 10121  000FD6  0009               	tblrd		*+
 10122  000FD8  CFF5 F084          	movff	tablat,___ftmul@f2+1
 10123  000FDC  000A               	tblrd		*-
 10124  000FDE  CFF5 F085          	movff	tablat,___ftmul@f2+2
 10125  000FE2  EC7C  F018         	call	___ftmul	;wreg free
 10126  000FE6  C080  F08F         	movff	?___ftmul,?_scale
 10127  000FEA  C081  F090         	movff	?___ftmul+1,?_scale+1
 10128  000FEE  C082  F091         	movff	?___ftmul+2,?_scale+2
 10129  000FF2  0012               	return	
 10130  000FF4                     l2187:
 10131                           
 10132                           ;doprnt.c: 440: return _powers_[scl];
 10133  000FF4  0100               	movlb	0	; () banked
 10134  000FF6  5195               	movf	scale@scl& (0+255),w,b
 10135  000FF8  0D03               	mullw	3
 10136  000FFA  0E79               	movlw	low __powers_
 10137  000FFC  24F3               	addwf	prodl,w,c
 10138  000FFE  6EF6               	movwf	tblptrl,c
 10139  001000  0E7D               	movlw	high __powers_
 10140  001002  20F4               	addwfc	prodh,w,c
 10141  001004  6EF7               	movwf	tblptrh,c
 10142  001006                     	if	0	;There are less than 3 active tblptr bytes
 10143  001006                     	endif
 10144  001006  0009               	tblrd		*+
 10145  001008  CFF5 F08F          	movff	tablat,?_scale
 10146  00100C  0009               	tblrd		*+
 10147  00100E  CFF5 F090          	movff	tablat,?_scale+1
 10148  001012  000A               	tblrd		*-
 10149  001014  CFF5 F091          	movff	tablat,?_scale+2
 10150  001018  0012               	return	
 10151  00101A                     __end_of_scale:
 10152                           	opt stack 0
 10153                           tblptru	equ	0xFF8
 10154                           tblptrh	equ	0xFF7
 10155                           tblptrl	equ	0xFF6
 10156                           tablat	equ	0xFF5
 10157                           prodh	equ	0xFF4
 10158                           prodl	equ	0xFF3
 10159                           intcon	equ	0xFF2
 10160                           postinc0	equ	0xFEE
 10161                           wreg	equ	0xFE8
 10162                           indf1	equ	0xFE7
 10163                           postdec1	equ	0xFE5
 10164                           fsr1h	equ	0xFE2
 10165                           fsr1l	equ	0xFE1
 10166                           indf2	equ	0xFDF
 10167                           postinc2	equ	0xFDE
 10168                           postdec2	equ	0xFDD
 10169                           plusw2	equ	0xFDB
 10170                           fsr2h	equ	0xFDA
 10171                           fsr2l	equ	0xFD9
 10172                           status	equ	0xFD8
 10173                           
 10174 ;; *************** function _isdigit *****************
 10175 ;; Defined at:
 10176 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\isdigit.c"
 10177 ;; Parameters:    Size  Location     Type
 10178 ;;  c               1    wreg     unsigned char 
 10179 ;; Auto vars:     Size  Location     Type
 10180 ;;  c               1    2[BANK0 ] unsigned char 
 10181 ;; Return value:  Size  Location     Type
 10182 ;;		None               void
 10183 ;; Registers used:
 10184 ;;		wreg, status,2, status,0
 10185 ;; Tracked objects:
 10186 ;;		On entry : 0/0
 10187 ;;		On exit  : 0/0
 10188 ;;		Unchanged: 0/0
 10189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10190 ;;      Params:         0       0       0       0       0       0       0       0       0
 10191 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10192 ;;      Temps:          0       1       0       0       0       0       0       0       0
 10193 ;;      Totals:         0       3       0       0       0       0       0       0       0
 10194 ;;Total ram usage:        3 bytes
 10195 ;; Hardware stack levels used:    1
 10196 ;; Hardware stack levels required when called:   10
 10197 ;; This function calls:
 10198 ;;		Nothing
 10199 ;; This function is called by:
 10200 ;;		_sprintf
 10201 ;; This function uses a non-reentrant model
 10202 ;;
 10203                           
 10204                           	psect	text30
 10205  004966                     __ptext30:
 10206                           	opt stack 0
 10207  004966                     _isdigit:
 10208                           	opt stack 18
 10209                           
 10210                           ;incstack = 0
 10211                           ;isdigit@c stored from wreg
 10212  004966  0100               	movlb	0	; () banked
 10213  004968  6F62               	movwf	isdigit@c& (0+255),b
 10214  00496A  0E00               	movlw	0
 10215  00496C  0100               	movlb	0	; () banked
 10216  00496E  6F61               	movwf	_isdigit$5090& (0+255),b
 10217                           
 10218                           ; BSR set to: 0
 10219  004970  0E3A               	movlw	58
 10220  004972  6162               	cpfslt	isdigit@c& (0+255),b
 10221  004974  D005               	goto	l2680
 10222                           
 10223                           ; BSR set to: 0
 10224  004976  0E2F               	movlw	47
 10225  004978  6562               	cpfsgt	isdigit@c& (0+255),b
 10226  00497A  D002               	goto	l2680
 10227                           
 10228                           ; BSR set to: 0
 10229  00497C  0E01               	movlw	1
 10230  00497E  6F61               	movwf	_isdigit$5090& (0+255),b
 10231  004980                     l2680:
 10232                           
 10233                           ; BSR set to: 0
 10234                           
 10235                           ; BSR set to: 0
 10236  004980  C061  F060         	movff	_isdigit$5090,??_isdigit
 10237  004984  3160               	rrcf	??_isdigit& (0+255),w,b
 10238  004986  0012               	return	
 10239  004988                     __end_of_isdigit:
 10240                           	opt stack 0
 10241                           tblptru	equ	0xFF8
 10242                           tblptrh	equ	0xFF7
 10243                           tblptrl	equ	0xFF6
 10244                           tablat	equ	0xFF5
 10245                           prodh	equ	0xFF4
 10246                           prodl	equ	0xFF3
 10247                           intcon	equ	0xFF2
 10248                           postinc0	equ	0xFEE
 10249                           wreg	equ	0xFE8
 10250                           indf1	equ	0xFE7
 10251                           postdec1	equ	0xFE5
 10252                           fsr1h	equ	0xFE2
 10253                           fsr1l	equ	0xFE1
 10254                           indf2	equ	0xFDF
 10255                           postinc2	equ	0xFDE
 10256                           postdec2	equ	0xFDD
 10257                           plusw2	equ	0xFDB
 10258                           fsr2h	equ	0xFDA
 10259                           fsr2l	equ	0xFD9
 10260                           status	equ	0xFD8
 10261                           
 10262 ;; *************** function _fround *****************
 10263 ;; Defined at:
 10264 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\doprnt.c"
 10265 ;; Parameters:    Size  Location     Type
 10266 ;;  prec            1    wreg     unsigned char 
 10267 ;; Auto vars:     Size  Location     Type
 10268 ;;  prec            1   56[BANK0 ] unsigned char 
 10269 ;; Return value:  Size  Location     Type
 10270 ;;                  3   47[BANK0 ] unsigned char 
 10271 ;; Registers used:
 10272 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10273 ;; Tracked objects:
 10274 ;;		On entry : 0/0
 10275 ;;		On exit  : 0/0
 10276 ;;		Unchanged: 0/0
 10277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10278 ;;      Params:         0       3       0       0       0       0       0       0       0
 10279 ;;      Locals:         0       7       0       0       0       0       0       0       0
 10280 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10281 ;;      Totals:         0      10       0       0       0       0       0       0       0
 10282 ;;Total ram usage:       10 bytes
 10283 ;; Hardware stack levels used:    1
 10284 ;; Hardware stack levels required when called:   12
 10285 ;; This function calls:
 10286 ;;		___awdiv
 10287 ;;		___awmod
 10288 ;;		___ftmul
 10289 ;;		___wmul
 10290 ;; This function is called by:
 10291 ;;		_sprintf
 10292 ;; This function uses a non-reentrant model
 10293 ;;
 10294                           
 10295                           	psect	text31
 10296  001296                     __ptext31:
 10297                           	opt stack 0
 10298  001296                     _fround:
 10299                           	opt stack 16
 10300                           
 10301                           ; BSR set to: 0
 10302                           ;incstack = 0
 10303                           ;fround@prec stored from wreg
 10304  001296  0100               	movlb	0	; () banked
 10305  001298  6F98               	movwf	fround@prec& (0+255),b
 10306                           
 10307                           ;doprnt.c: 413: if(prec>=110)
 10308  00129A  0E6D               	movlw	109
 10309  00129C  0100               	movlb	0	; () banked
 10310  00129E  6598               	cpfsgt	fround@prec& (0+255),b
 10311  0012A0  D0A6               	goto	l2174
 10312                           
 10313                           ; BSR set to: 0
 10314                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 10315  0012A2  0E00               	movlw	0
 10316  0012A4  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10317  0012A6  0E03               	movlw	3
 10318  0012A8  6F70               	movwf	___wmul@multiplicand& (0+255),b
 10319  0012AA  0E00               	movlw	0
 10320  0012AC  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 10321  0012AE  0E0A               	movlw	10
 10322  0012B0  6F68               	movwf	___awdiv@divisor& (0+255),b
 10323  0012B2  0E00               	movlw	0
 10324  0012B4  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 10325  0012B6  0E64               	movlw	100
 10326  0012B8  6F62               	movwf	___awmod@divisor& (0+255),b
 10327  0012BA  C098  F060         	movff	fround@prec,___awmod@dividend
 10328  0012BE  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 10329  0012C0  EC06  F020         	call	___awmod	;wreg free
 10330  0012C4  C060  F066         	movff	?___awmod,___awdiv@dividend
 10331  0012C8  C061  F067         	movff	?___awmod+1,___awdiv@dividend+1
 10332  0012CC  EC7D  F01E         	call	___awdiv	;wreg free
 10333  0012D0  0E09               	movlw	9
 10334  0012D2  0100               	movlb	0	; () banked
 10335  0012D4  2566               	addwf	?___awdiv& (0+255),w,b
 10336  0012D6  6F6E               	movwf	___wmul@multiplier& (0+255),b
 10337  0012D8  0E00               	movlw	0
 10338  0012DA  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 10339  0012DC  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 10340  0012DE  EC09  F024         	call	___wmul	;wreg free
 10341  0012E2  0EA0               	movlw	low __npowers_
 10342  0012E4  0100               	movlb	0	; () banked
 10343  0012E6  256E               	addwf	?___wmul& (0+255),w,b
 10344  0012E8  6EF6               	movwf	tblptrl,c
 10345  0012EA  0E7D               	movlw	high __npowers_
 10346  0012EC  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 10347  0012EE  6EF7               	movwf	tblptrh,c
 10348  0012F0                     	if	0	;There are less than 3 active tblptr bytes
 10349  0012F0                     	endif
 10350  0012F0  0009               	tblrd		*+
 10351  0012F2  CFF5 F083          	movff	tablat,___ftmul@f2
 10352  0012F6  0009               	tblrd		*+
 10353  0012F8  CFF5 F084          	movff	tablat,___ftmul@f2+1
 10354  0012FC  000A               	tblrd		*-
 10355  0012FE  CFF5 F085          	movff	tablat,___ftmul@f2+2
 10356  001302  0E00               	movlw	0
 10357  001304  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 10358  001306  0E64               	movlw	100
 10359  001308  6F68               	movwf	___awdiv@divisor& (0+255),b
 10360  00130A  C098  F066         	movff	fround@prec,___awdiv@dividend
 10361  00130E  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
 10362  001310  EC7D  F01E         	call	___awdiv	;wreg free
 10363  001314  0E12               	movlw	18
 10364  001316  0100               	movlb	0	; () banked
 10365  001318  2566               	addwf	?___awdiv& (0+255),w,b
 10366  00131A  6F6E               	movwf	___wmul@multiplier& (0+255),b
 10367  00131C  0E00               	movlw	0
 10368  00131E  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 10369  001320  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 10370  001322  0E00               	movlw	0
 10371  001324  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10372  001326  0E03               	movlw	3
 10373  001328  6F70               	movwf	___wmul@multiplicand& (0+255),b
 10374  00132A  EC09  F024         	call	___wmul	;wreg free
 10375  00132E  0EA0               	movlw	low __npowers_
 10376  001330  0100               	movlb	0	; () banked
 10377  001332  256E               	addwf	?___wmul& (0+255),w,b
 10378  001334  6EF6               	movwf	tblptrl,c
 10379  001336  0E7D               	movlw	high __npowers_
 10380  001338  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 10381  00133A  6EF7               	movwf	tblptrh,c
 10382  00133C                     	if	0	;There are less than 3 active tblptr bytes
 10383  00133C                     	endif
 10384  00133C  0009               	tblrd		*+
 10385  00133E  CFF5 F080          	movff	tablat,___ftmul@f1
 10386  001342  0009               	tblrd		*+
 10387  001344  CFF5 F081          	movff	tablat,___ftmul@f1+1
 10388  001348  000A               	tblrd		*-
 10389  00134A  CFF5 F082          	movff	tablat,___ftmul@f1+2
 10390  00134E  EC7C  F018         	call	___ftmul	;wreg free
 10391  001352  C080  F095         	movff	?___ftmul,_fround$5650
 10392  001356  C081  F096         	movff	?___ftmul+1,_fround$5650+1
 10393  00135A  C082  F097         	movff	?___ftmul+2,_fround$5650+2
 10394                           
 10395                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 10396  00135E  0E00               	movlw	0
 10397  001360  0100               	movlb	0	; () banked
 10398  001362  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10399  001364  0E03               	movlw	3
 10400  001366  6F70               	movwf	___wmul@multiplicand& (0+255),b
 10401  001368  0E00               	movlw	0
 10402  00136A  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 10403  00136C  0E0A               	movlw	10
 10404  00136E  6F62               	movwf	___awmod@divisor& (0+255),b
 10405  001370  C098  F060         	movff	fround@prec,___awmod@dividend
 10406  001374  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 10407  001376  EC06  F020         	call	___awmod	;wreg free
 10408  00137A  C060  F06E         	movff	?___awmod,___wmul@multiplier
 10409  00137E  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
 10410  001382  EC09  F024         	call	___wmul	;wreg free
 10411  001386  0EA0               	movlw	low __npowers_
 10412  001388  0100               	movlb	0	; () banked
 10413  00138A  256E               	addwf	?___wmul& (0+255),w,b
 10414  00138C  6EF6               	movwf	tblptrl,c
 10415  00138E  0E7D               	movlw	high __npowers_
 10416  001390  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 10417  001392  6EF7               	movwf	tblptrh,c
 10418  001394                     	if	0	;There are less than 3 active tblptr bytes
 10419  001394                     	endif
 10420  001394  0009               	tblrd		*+
 10421  001396  CFF5 F083          	movff	tablat,___ftmul@f2
 10422  00139A  0009               	tblrd		*+
 10423  00139C  CFF5 F084          	movff	tablat,___ftmul@f2+1
 10424  0013A0  000A               	tblrd		*-
 10425  0013A2  CFF5 F085          	movff	tablat,___ftmul@f2+2
 10426  0013A6  C095  F080         	movff	_fround$5650,___ftmul@f1
 10427  0013AA  C096  F081         	movff	_fround$5650+1,___ftmul@f1+1
 10428  0013AE  C097  F082         	movff	_fround$5650+2,___ftmul@f1+2
 10429  0013B2  EC7C  F018         	call	___ftmul	;wreg free
 10430  0013B6  C080  F092         	movff	?___ftmul,_fround$5651
 10431  0013BA  C081  F093         	movff	?___ftmul+1,_fround$5651+1
 10432  0013BE  C082  F094         	movff	?___ftmul+2,_fround$5651+2
 10433                           
 10434                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 10435  0013C2  C092  F080         	movff	_fround$5651,___ftmul@f1
 10436  0013C6  C093  F081         	movff	_fround$5651+1,___ftmul@f1+1
 10437  0013CA  C094  F082         	movff	_fround$5651+2,___ftmul@f1+2
 10438  0013CE  0E00               	movlw	0
 10439  0013D0  0100               	movlb	0	; () banked
 10440  0013D2  6F83               	movwf	___ftmul@f2& (0+255),b
 10441  0013D4  0E00               	movlw	0
 10442  0013D6  6F84               	movwf	(___ftmul@f2+1)& (0+255),b
 10443  0013D8  0E3F               	movlw	63
 10444  0013DA  6F85               	movwf	(___ftmul@f2+2)& (0+255),b
 10445  0013DC  EC7C  F018         	call	___ftmul	;wreg free
 10446  0013E0  C080  F08F         	movff	?___ftmul,?_fround
 10447  0013E4  C081  F090         	movff	?___ftmul+1,?_fround+1
 10448  0013E8  C082  F091         	movff	?___ftmul+2,?_fround+2
 10449  0013EC  0012               	return	
 10450  0013EE                     l2174:
 10451                           
 10452                           ;doprnt.c: 415: else if(prec > 10)
 10453  0013EE  0E0A               	movlw	10
 10454  0013F0  0100               	movlb	0	; () banked
 10455  0013F2  6598               	cpfsgt	fround@prec& (0+255),b
 10456  0013F4  D067               	goto	l2177
 10457                           
 10458                           ; BSR set to: 0
 10459                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 10460  0013F6  0E00               	movlw	0
 10461  0013F8  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10462  0013FA  0E03               	movlw	3
 10463  0013FC  6F70               	movwf	___wmul@multiplicand& (0+255),b
 10464  0013FE  0E00               	movlw	0
 10465  001400  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 10466  001402  0E0A               	movlw	10
 10467  001404  6F62               	movwf	___awmod@divisor& (0+255),b
 10468  001406  C098  F060         	movff	fround@prec,___awmod@dividend
 10469  00140A  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 10470  00140C  EC06  F020         	call	___awmod	;wreg free
 10471  001410  C060  F06E         	movff	?___awmod,___wmul@multiplier
 10472  001414  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
 10473  001418  EC09  F024         	call	___wmul	;wreg free
 10474  00141C  0EA0               	movlw	low __npowers_
 10475  00141E  0100               	movlb	0	; () banked
 10476  001420  256E               	addwf	?___wmul& (0+255),w,b
 10477  001422  6EF6               	movwf	tblptrl,c
 10478  001424  0E7D               	movlw	high __npowers_
 10479  001426  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 10480  001428  6EF7               	movwf	tblptrh,c
 10481  00142A                     	if	0	;There are less than 3 active tblptr bytes
 10482  00142A                     	endif
 10483  00142A  0009               	tblrd		*+
 10484  00142C  CFF5 F083          	movff	tablat,___ftmul@f2
 10485  001430  0009               	tblrd		*+
 10486  001432  CFF5 F084          	movff	tablat,___ftmul@f2+1
 10487  001436  000A               	tblrd		*-
 10488  001438  CFF5 F085          	movff	tablat,___ftmul@f2+2
 10489  00143C  0E00               	movlw	0
 10490  00143E  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 10491  001440  0E0A               	movlw	10
 10492  001442  6F68               	movwf	___awdiv@divisor& (0+255),b
 10493  001444  C098  F066         	movff	fround@prec,___awdiv@dividend
 10494  001448  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
 10495  00144A  EC7D  F01E         	call	___awdiv	;wreg free
 10496  00144E  0E09               	movlw	9
 10497  001450  0100               	movlb	0	; () banked
 10498  001452  2566               	addwf	?___awdiv& (0+255),w,b
 10499  001454  6F6E               	movwf	___wmul@multiplier& (0+255),b
 10500  001456  0E00               	movlw	0
 10501  001458  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 10502  00145A  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 10503  00145C  0E00               	movlw	0
 10504  00145E  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10505  001460  0E03               	movlw	3
 10506  001462  6F70               	movwf	___wmul@multiplicand& (0+255),b
 10507  001464  EC09  F024         	call	___wmul	;wreg free
 10508  001468  0EA0               	movlw	low __npowers_
 10509  00146A  0100               	movlb	0	; () banked
 10510  00146C  256E               	addwf	?___wmul& (0+255),w,b
 10511  00146E  6EF6               	movwf	tblptrl,c
 10512  001470  0E7D               	movlw	high __npowers_
 10513  001472  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 10514  001474  6EF7               	movwf	tblptrh,c
 10515  001476                     	if	0	;There are less than 3 active tblptr bytes
 10516  001476                     	endif
 10517  001476  0009               	tblrd		*+
 10518  001478  CFF5 F080          	movff	tablat,___ftmul@f1
 10519  00147C  0009               	tblrd		*+
 10520  00147E  CFF5 F081          	movff	tablat,___ftmul@f1+1
 10521  001482  000A               	tblrd		*-
 10522  001484  CFF5 F082          	movff	tablat,___ftmul@f1+2
 10523  001488  EC7C  F018         	call	___ftmul	;wreg free
 10524  00148C  C080  F095         	movff	?___ftmul,_fround$5650
 10525  001490  C081  F096         	movff	?___ftmul+1,_fround$5650+1
 10526  001494  C082  F097         	movff	?___ftmul+2,_fround$5650+2
 10527                           
 10528                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 10529  001498  C095  F080         	movff	_fround$5650,___ftmul@f1
 10530  00149C  C096  F081         	movff	_fround$5650+1,___ftmul@f1+1
 10531  0014A0  C097  F082         	movff	_fround$5650+2,___ftmul@f1+2
 10532  0014A4  0E00               	movlw	0
 10533  0014A6  0100               	movlb	0	; () banked
 10534  0014A8  6F83               	movwf	___ftmul@f2& (0+255),b
 10535  0014AA  0E00               	movlw	0
 10536  0014AC  6F84               	movwf	(___ftmul@f2+1)& (0+255),b
 10537  0014AE  0E3F               	movlw	63
 10538  0014B0  6F85               	movwf	(___ftmul@f2+2)& (0+255),b
 10539  0014B2  EC7C  F018         	call	___ftmul	;wreg free
 10540  0014B6  C080  F08F         	movff	?___ftmul,?_fround
 10541  0014BA  C081  F090         	movff	?___ftmul+1,?_fround+1
 10542  0014BE  C082  F091         	movff	?___ftmul+2,?_fround+2
 10543  0014C2  0012               	return	
 10544  0014C4                     l2177:
 10545                           
 10546                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 10547  0014C4  0100               	movlb	0	; () banked
 10548  0014C6  5198               	movf	fround@prec& (0+255),w,b
 10549  0014C8  0D03               	mullw	3
 10550  0014CA  0EA0               	movlw	low __npowers_
 10551  0014CC  24F3               	addwf	prodl,w,c
 10552  0014CE  6EF6               	movwf	tblptrl,c
 10553  0014D0  0E7D               	movlw	high __npowers_
 10554  0014D2  20F4               	addwfc	prodh,w,c
 10555  0014D4  6EF7               	movwf	tblptrh,c
 10556  0014D6                     	if	0	;There are less than 3 active tblptr bytes
 10557  0014D6                     	endif
 10558  0014D6  0009               	tblrd		*+
 10559  0014D8  CFF5 F080          	movff	tablat,___ftmul@f1
 10560  0014DC  0009               	tblrd		*+
 10561  0014DE  CFF5 F081          	movff	tablat,___ftmul@f1+1
 10562  0014E2  000A               	tblrd		*-
 10563  0014E4  CFF5 F082          	movff	tablat,___ftmul@f1+2
 10564  0014E8  0E00               	movlw	0
 10565  0014EA  6F83               	movwf	___ftmul@f2& (0+255),b
 10566  0014EC  0E00               	movlw	0
 10567  0014EE  6F84               	movwf	(___ftmul@f2+1)& (0+255),b
 10568  0014F0  0E3F               	movlw	63
 10569  0014F2  6F85               	movwf	(___ftmul@f2+2)& (0+255),b
 10570  0014F4  EC7C  F018         	call	___ftmul	;wreg free
 10571  0014F8  C080  F08F         	movff	?___ftmul,?_fround
 10572  0014FC  C081  F090         	movff	?___ftmul+1,?_fround+1
 10573  001500  C082  F091         	movff	?___ftmul+2,?_fround+2
 10574  001504  0012               	return	
 10575  001506                     __end_of_fround:
 10576                           	opt stack 0
 10577                           tblptru	equ	0xFF8
 10578                           tblptrh	equ	0xFF7
 10579                           tblptrl	equ	0xFF6
 10580                           tablat	equ	0xFF5
 10581                           prodh	equ	0xFF4
 10582                           prodl	equ	0xFF3
 10583                           intcon	equ	0xFF2
 10584                           postinc0	equ	0xFEE
 10585                           wreg	equ	0xFE8
 10586                           indf1	equ	0xFE7
 10587                           postdec1	equ	0xFE5
 10588                           fsr1h	equ	0xFE2
 10589                           fsr1l	equ	0xFE1
 10590                           indf2	equ	0xFDF
 10591                           postinc2	equ	0xFDE
 10592                           postdec2	equ	0xFDD
 10593                           plusw2	equ	0xFDB
 10594                           fsr2h	equ	0xFDA
 10595                           fsr2l	equ	0xFD9
 10596                           status	equ	0xFD8
 10597                           
 10598 ;; *************** function ___wmul *****************
 10599 ;; Defined at:
 10600 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\Umul16.c"
 10601 ;; Parameters:    Size  Location     Type
 10602 ;;  multiplier      2   14[BANK0 ] unsigned int 
 10603 ;;  multiplicand    2   16[BANK0 ] unsigned int 
 10604 ;; Auto vars:     Size  Location     Type
 10605 ;;  product         2   18[BANK0 ] unsigned int 
 10606 ;; Return value:  Size  Location     Type
 10607 ;;                  2   14[BANK0 ] unsigned int 
 10608 ;; Registers used:
 10609 ;;		wreg, status,2, status,0, prodl, prodh
 10610 ;; Tracked objects:
 10611 ;;		On entry : 0/0
 10612 ;;		On exit  : 0/0
 10613 ;;		Unchanged: 0/0
 10614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10615 ;;      Params:         0       4       0       0       0       0       0       0       0
 10616 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10617 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10618 ;;      Totals:         0       6       0       0       0       0       0       0       0
 10619 ;;Total ram usage:        6 bytes
 10620 ;; Hardware stack levels used:    1
 10621 ;; Hardware stack levels required when called:   10
 10622 ;; This function calls:
 10623 ;;		Nothing
 10624 ;; This function is called by:
 10625 ;;		_fround
 10626 ;;		_scale
 10627 ;;		_sprintf
 10628 ;; This function uses a non-reentrant model
 10629 ;;
 10630                           
 10631                           	psect	text32
 10632  004812                     __ptext32:
 10633                           	opt stack 0
 10634  004812                     ___wmul:
 10635                           	opt stack 17
 10636                           
 10637                           ;incstack = 0
 10638  004812  0100               	movlb	0	; () banked
 10639  004814  516E               	movf	___wmul@multiplier& (0+255),w,b
 10640  004816  0370               	mulwf	___wmul@multiplicand& (0+255),b
 10641  004818  CFF3 F072          	movff	prodl,___wmul@product
 10642  00481C  CFF4 F073          	movff	prodh,___wmul@product+1
 10643  004820  516E               	movf	___wmul@multiplier& (0+255),w,b
 10644  004822  0371               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 10645  004824  50F3               	movf	prodl,w,c
 10646  004826  2773               	addwf	(___wmul@product+1)& (0+255),f,b
 10647  004828  516F               	movf	(___wmul@multiplier+1)& (0+255),w,b
 10648  00482A  0370               	mulwf	___wmul@multiplicand& (0+255),b
 10649  00482C  50F3               	movf	prodl,w,c
 10650  00482E  2773               	addwf	(___wmul@product+1)& (0+255),f,b
 10651                           
 10652                           ; BSR set to: 0
 10653  004830  C072  F06E         	movff	___wmul@product,?___wmul
 10654  004834  C073  F06F         	movff	___wmul@product+1,?___wmul+1
 10655  004838  0012               	return	
 10656  00483A                     __end_of___wmul:
 10657                           	opt stack 0
 10658                           tblptru	equ	0xFF8
 10659                           tblptrh	equ	0xFF7
 10660                           tblptrl	equ	0xFF6
 10661                           tablat	equ	0xFF5
 10662                           prodh	equ	0xFF4
 10663                           prodl	equ	0xFF3
 10664                           intcon	equ	0xFF2
 10665                           postinc0	equ	0xFEE
 10666                           wreg	equ	0xFE8
 10667                           indf1	equ	0xFE7
 10668                           postdec1	equ	0xFE5
 10669                           fsr1h	equ	0xFE2
 10670                           fsr1l	equ	0xFE1
 10671                           indf2	equ	0xFDF
 10672                           postinc2	equ	0xFDE
 10673                           postdec2	equ	0xFDD
 10674                           plusw2	equ	0xFDB
 10675                           fsr2h	equ	0xFDA
 10676                           fsr2l	equ	0xFD9
 10677                           status	equ	0xFD8
 10678                           
 10679 ;; *************** function ___ftmul *****************
 10680 ;; Defined at:
 10681 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftmul.c"
 10682 ;; Parameters:    Size  Location     Type
 10683 ;;  f1              3   32[BANK0 ] float 
 10684 ;;  f2              3   35[BANK0 ] float 
 10685 ;; Auto vars:     Size  Location     Type
 10686 ;;  f3_as_produc    3   42[BANK0 ] unsigned um
 10687 ;;  sign            1   46[BANK0 ] unsigned char 
 10688 ;;  cntr            1   45[BANK0 ] unsigned char 
 10689 ;;  exp             1   41[BANK0 ] unsigned char 
 10690 ;; Return value:  Size  Location     Type
 10691 ;;                  3   32[BANK0 ] float 
 10692 ;; Registers used:
 10693 ;;		wreg, status,2, status,0, cstack
 10694 ;; Tracked objects:
 10695 ;;		On entry : 0/0
 10696 ;;		On exit  : 0/0
 10697 ;;		Unchanged: 0/0
 10698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10699 ;;      Params:         0       6       0       0       0       0       0       0       0
 10700 ;;      Locals:         0       6       0       0       0       0       0       0       0
 10701 ;;      Temps:          0       3       0       0       0       0       0       0       0
 10702 ;;      Totals:         0      15       0       0       0       0       0       0       0
 10703 ;;Total ram usage:       15 bytes
 10704 ;; Hardware stack levels used:    1
 10705 ;; Hardware stack levels required when called:   11
 10706 ;; This function calls:
 10707 ;;		___ftpack
 10708 ;; This function is called by:
 10709 ;;		_main
 10710 ;;		_le4a20
 10711 ;;		_fround
 10712 ;;		_scale
 10713 ;;		_sprintf
 10714 ;; This function uses a non-reentrant model
 10715 ;;
 10716                           
 10717                           	psect	text33
 10718  0030F8                     __ptext33:
 10719                           	opt stack 0
 10720  0030F8                     ___ftmul:
 10721                           	opt stack 18
 10722                           
 10723                           ; BSR set to: 0
 10724                           ;incstack = 0
 10725  0030F8  C082  F086         	movff	___ftmul@f1+2,??___ftmul
 10726  0030FC  0100               	movlb	0	; () banked
 10727  0030FE  6B87               	clrf	(??___ftmul+1)& (0+255),b
 10728  003100  6B88               	clrf	(??___ftmul+2)& (0+255),b
 10729  003102  3581               	rlcf	(___ftmul@f1+1)& (0+255),w,b
 10730  003104  3786               	rlcf	??___ftmul& (0+255),f,b
 10731  003106  E301               	bnc	u5851
 10732  003108  8187               	bsf	(??___ftmul+1)& (0+255),0,b
 10733  00310A                     u5851:
 10734  00310A  5186               	movf	??___ftmul& (0+255),w,b
 10735  00310C  6F89               	movwf	___ftmul@exp& (0+255),b
 10736  00310E  5189               	movf	___ftmul@exp& (0+255),w,b
 10737  003110  A4D8               	btfss	status,2,c
 10738  003112  D007               	goto	l2644
 10739                           
 10740                           ; BSR set to: 0
 10741  003114  0E00               	movlw	0
 10742  003116  6F80               	movwf	?___ftmul& (0+255),b
 10743  003118  0E00               	movlw	0
 10744  00311A  6F81               	movwf	(?___ftmul+1)& (0+255),b
 10745  00311C  0E00               	movlw	0
 10746  00311E  6F82               	movwf	(?___ftmul+2)& (0+255),b
 10747                           
 10748                           ; BSR set to: 0
 10749  003120  0012               	return	
 10750  003122                     l2644:
 10751                           
 10752                           ; BSR set to: 0
 10753                           
 10754                           ; BSR set to: 0
 10755  003122  C085  F086         	movff	___ftmul@f2+2,??___ftmul
 10756  003126  6B87               	clrf	(??___ftmul+1)& (0+255),b
 10757  003128  6B88               	clrf	(??___ftmul+2)& (0+255),b
 10758  00312A  3584               	rlcf	(___ftmul@f2+1)& (0+255),w,b
 10759  00312C  3786               	rlcf	??___ftmul& (0+255),f,b
 10760  00312E  E301               	bnc	u5871
 10761  003130  8187               	bsf	(??___ftmul+1)& (0+255),0,b
 10762  003132                     u5871:
 10763  003132  5186               	movf	??___ftmul& (0+255),w,b
 10764  003134  6F8E               	movwf	___ftmul@sign& (0+255),b
 10765  003136  518E               	movf	___ftmul@sign& (0+255),w,b
 10766  003138  A4D8               	btfss	status,2,c
 10767  00313A  D007               	goto	l2646
 10768                           
 10769                           ; BSR set to: 0
 10770  00313C  0E00               	movlw	0
 10771  00313E  6F80               	movwf	?___ftmul& (0+255),b
 10772  003140  0E00               	movlw	0
 10773  003142  6F81               	movwf	(?___ftmul+1)& (0+255),b
 10774  003144  0E00               	movlw	0
 10775  003146  6F82               	movwf	(?___ftmul+2)& (0+255),b
 10776                           
 10777                           ; BSR set to: 0
 10778  003148  0012               	return	
 10779  00314A                     l2646:
 10780                           
 10781                           ; BSR set to: 0
 10782                           
 10783                           ; BSR set to: 0
 10784  00314A  518E               	movf	___ftmul@sign& (0+255),w,b
 10785  00314C  0F7B               	addlw	123
 10786  00314E  2789               	addwf	___ftmul@exp& (0+255),f,b
 10787                           
 10788                           ; BSR set to: 0
 10789  003150  C082  F08E         	movff	___ftmul@f1+2,___ftmul@sign
 10790  003154  5185               	movf	(___ftmul@f2+2)& (0+255),w,b
 10791  003156  1B8E               	xorwf	___ftmul@sign& (0+255),f,b
 10792  003158  0E80               	movlw	128
 10793  00315A  178E               	andwf	___ftmul@sign& (0+255),f,b
 10794                           
 10795                           ; BSR set to: 0
 10796  00315C  8F81               	bsf	(___ftmul@f1+1)& (0+255),7,b
 10797                           
 10798                           ; BSR set to: 0
 10799  00315E  8F84               	bsf	(___ftmul@f2+1)& (0+255),7,b
 10800                           
 10801                           ; BSR set to: 0
 10802  003160  0EFF               	movlw	255
 10803  003162  1783               	andwf	___ftmul@f2& (0+255),f,b
 10804  003164  0EFF               	movlw	255
 10805  003166  1784               	andwf	(___ftmul@f2+1)& (0+255),f,b
 10806  003168  0E00               	movlw	0
 10807  00316A  1785               	andwf	(___ftmul@f2+2)& (0+255),f,b
 10808                           
 10809                           ; BSR set to: 0
 10810  00316C  0E00               	movlw	0
 10811  00316E  6F8A               	movwf	___ftmul@f3_as_product& (0+255),b
 10812  003170  0E00               	movlw	0
 10813  003172  6F8B               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
 10814  003174  0E00               	movlw	0
 10815  003176  6F8C               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
 10816                           
 10817                           ; BSR set to: 0
 10818  003178  0E07               	movlw	7
 10819  00317A  6F8D               	movwf	___ftmul@cntr& (0+255),b
 10820  00317C                     
 10821                           ; BSR set to: 0
 10822                           
 10823                           ; BSR set to: 0
 10824  00317C  A180               	btfss	___ftmul@f1& (0+255),0,b
 10825  00317E  D006               	goto	l2648
 10826                           
 10827                           ; BSR set to: 0
 10828  003180  5183               	movf	___ftmul@f2& (0+255),w,b
 10829  003182  278A               	addwf	___ftmul@f3_as_product& (0+255),f,b
 10830  003184  5184               	movf	(___ftmul@f2+1)& (0+255),w,b
 10831  003186  238B               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 10832  003188  5185               	movf	(___ftmul@f2+2)& (0+255),w,b
 10833  00318A  238C               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 10834  00318C                     l2648:
 10835                           
 10836                           ; BSR set to: 0
 10837                           
 10838                           ; BSR set to: 0
 10839  00318C  90D8               	bcf	status,0,c
 10840  00318E  3382               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 10841  003190  3381               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 10842  003192  3380               	rrcf	___ftmul@f1& (0+255),f,b
 10843  003194  90D8               	bcf	status,0,c
 10844  003196  3783               	rlcf	___ftmul@f2& (0+255),f,b
 10845  003198  3784               	rlcf	(___ftmul@f2+1)& (0+255),f,b
 10846  00319A  3785               	rlcf	(___ftmul@f2+2)& (0+255),f,b
 10847                           
 10848                           ; BSR set to: 0
 10849  00319C  2F8D               	decfsz	___ftmul@cntr& (0+255),f,b
 10850  00319E  D7EE               	goto	l2647
 10851                           
 10852                           ; BSR set to: 0
 10853                           
 10854                           ; BSR set to: 0
 10855  0031A0  0E09               	movlw	9
 10856  0031A2  6F8D               	movwf	___ftmul@cntr& (0+255),b
 10857  0031A4                     
 10858                           ; BSR set to: 0
 10859                           
 10860                           ; BSR set to: 0
 10861  0031A4  A180               	btfss	___ftmul@f1& (0+255),0,b
 10862  0031A6  D006               	goto	l2651
 10863                           
 10864                           ; BSR set to: 0
 10865  0031A8  5183               	movf	___ftmul@f2& (0+255),w,b
 10866  0031AA  278A               	addwf	___ftmul@f3_as_product& (0+255),f,b
 10867  0031AC  5184               	movf	(___ftmul@f2+1)& (0+255),w,b
 10868  0031AE  238B               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 10869  0031B0  5185               	movf	(___ftmul@f2+2)& (0+255),w,b
 10870  0031B2  238C               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 10871  0031B4                     l2651:
 10872                           
 10873                           ; BSR set to: 0
 10874                           
 10875                           ; BSR set to: 0
 10876  0031B4  90D8               	bcf	status,0,c
 10877  0031B6  3382               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 10878  0031B8  3381               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 10879  0031BA  3380               	rrcf	___ftmul@f1& (0+255),f,b
 10880  0031BC  90D8               	bcf	status,0,c
 10881  0031BE  338C               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
 10882  0031C0  338B               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
 10883  0031C2  338A               	rrcf	___ftmul@f3_as_product& (0+255),f,b
 10884                           
 10885                           ; BSR set to: 0
 10886  0031C4  2F8D               	decfsz	___ftmul@cntr& (0+255),f,b
 10887  0031C6  D7EE               	goto	l2650
 10888                           
 10889                           ; BSR set to: 0
 10890                           
 10891                           ; BSR set to: 0
 10892  0031C8  C08A  F060         	movff	___ftmul@f3_as_product,___ftpack@arg
 10893  0031CC  C08B  F061         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
 10894  0031D0  C08C  F062         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
 10895  0031D4  C089  F063         	movff	___ftmul@exp,___ftpack@exp
 10896  0031D8  C08E  F064         	movff	___ftmul@sign,___ftpack@sign
 10897  0031DC  EC6B  F01B         	call	___ftpack	;wreg free
 10898  0031E0  C060  F080         	movff	?___ftpack,?___ftmul
 10899  0031E4  C061  F081         	movff	?___ftpack+1,?___ftmul+1
 10900  0031E8  C062  F082         	movff	?___ftpack+2,?___ftmul+2
 10901  0031EC  0012               	return	
 10902  0031EE                     __end_of___ftmul:
 10903                           	opt stack 0
 10904                           tblptru	equ	0xFF8
 10905                           tblptrh	equ	0xFF7
 10906                           tblptrl	equ	0xFF6
 10907                           tablat	equ	0xFF5
 10908                           prodh	equ	0xFF4
 10909                           prodl	equ	0xFF3
 10910                           intcon	equ	0xFF2
 10911                           postinc0	equ	0xFEE
 10912                           wreg	equ	0xFE8
 10913                           indf1	equ	0xFE7
 10914                           postdec1	equ	0xFE5
 10915                           fsr1h	equ	0xFE2
 10916                           fsr1l	equ	0xFE1
 10917                           indf2	equ	0xFDF
 10918                           postinc2	equ	0xFDE
 10919                           postdec2	equ	0xFDD
 10920                           plusw2	equ	0xFDB
 10921                           fsr2h	equ	0xFDA
 10922                           fsr2l	equ	0xFD9
 10923                           status	equ	0xFD8
 10924                           
 10925 ;; *************** function ___awmod *****************
 10926 ;; Defined at:
 10927 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\awmod.c"
 10928 ;; Parameters:    Size  Location     Type
 10929 ;;  dividend        2    0[BANK0 ] int 
 10930 ;;  divisor         2    2[BANK0 ] int 
 10931 ;; Auto vars:     Size  Location     Type
 10932 ;;  sign            1    5[BANK0 ] unsigned char 
 10933 ;;  counter         1    4[BANK0 ] unsigned char 
 10934 ;; Return value:  Size  Location     Type
 10935 ;;                  2    0[BANK0 ] int 
 10936 ;; Registers used:
 10937 ;;		wreg, status,2, status,0
 10938 ;; Tracked objects:
 10939 ;;		On entry : 0/0
 10940 ;;		On exit  : 0/0
 10941 ;;		Unchanged: 0/0
 10942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10943 ;;      Params:         0       4       0       0       0       0       0       0       0
 10944 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10945 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10946 ;;      Totals:         0       6       0       0       0       0       0       0       0
 10947 ;;Total ram usage:        6 bytes
 10948 ;; Hardware stack levels used:    1
 10949 ;; Hardware stack levels required when called:   10
 10950 ;; This function calls:
 10951 ;;		Nothing
 10952 ;; This function is called by:
 10953 ;;		_fround
 10954 ;;		_scale
 10955 ;; This function uses a non-reentrant model
 10956 ;;
 10957                           
 10958                           	psect	text34
 10959  00400C                     __ptext34:
 10960                           	opt stack 0
 10961  00400C                     ___awmod:
 10962                           	opt stack 17
 10963                           
 10964                           ;incstack = 0
 10965  00400C  0E00               	movlw	0
 10966  00400E  0100               	movlb	0	; () banked
 10967  004010  6F65               	movwf	___awmod@sign& (0+255),b
 10968                           
 10969                           ; BSR set to: 0
 10970  004012  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
 10971  004014  D006               	goto	l2497
 10972                           
 10973                           ; BSR set to: 0
 10974  004016  6D60               	negf	___awmod@dividend& (0+255),b
 10975  004018  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 10976  00401A  B0D8               	btfsc	status,0,c
 10977  00401C  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 10978                           
 10979                           ; BSR set to: 0
 10980  00401E  0E01               	movlw	1
 10981  004020  6F65               	movwf	___awmod@sign& (0+255),b
 10982  004022                     l2497:
 10983                           
 10984                           ; BSR set to: 0
 10985                           
 10986                           ; BSR set to: 0
 10987  004022  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 10988  004024  D004               	goto	l2498
 10989                           
 10990                           ; BSR set to: 0
 10991  004026  6D62               	negf	___awmod@divisor& (0+255),b
 10992  004028  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 10993  00402A  B0D8               	btfsc	status,0,c
 10994  00402C  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 10995  00402E                     l2498:
 10996                           
 10997                           ; BSR set to: 0
 10998                           
 10999                           ; BSR set to: 0
 11000  00402E  5162               	movf	___awmod@divisor& (0+255),w,b
 11001  004030  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 11002  004032  B4D8               	btfsc	status,2,c
 11003  004034  D018               	goto	l2505
 11004                           
 11005                           ; BSR set to: 0
 11006  004036  0E01               	movlw	1
 11007  004038  6F64               	movwf	___awmod@counter& (0+255),b
 11008  00403A  D004               	goto	l2500
 11009  00403C                     
 11010                           ; BSR set to: 0
 11011                           
 11012                           ; BSR set to: 0
 11013  00403C  90D8               	bcf	status,0,c
 11014  00403E  3762               	rlcf	___awmod@divisor& (0+255),f,b
 11015  004040  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 11016  004042  2B64               	incf	___awmod@counter& (0+255),f,b
 11017  004044                     l2500:
 11018                           
 11019                           ; BSR set to: 0
 11020                           
 11021                           ; BSR set to: 0
 11022  004044  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 11023  004046  D7FA               	goto	l2501
 11024  004048                     u6000:
 11025                           
 11026                           ; BSR set to: 0
 11027                           
 11028                           ; BSR set to: 0
 11029                           
 11030                           ; BSR set to: 0
 11031  004048  5162               	movf	___awmod@divisor& (0+255),w,b
 11032  00404A  5D60               	subwf	___awmod@dividend& (0+255),w,b
 11033  00404C  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 11034  00404E  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 11035  004050  A0D8               	btfss	status,0,c
 11036  004052  D004               	goto	l2504
 11037                           
 11038                           ; BSR set to: 0
 11039  004054  5162               	movf	___awmod@divisor& (0+255),w,b
 11040  004056  5F60               	subwf	___awmod@dividend& (0+255),f,b
 11041  004058  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 11042  00405A  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 11043  00405C                     l2504:
 11044                           
 11045                           ; BSR set to: 0
 11046                           
 11047                           ; BSR set to: 0
 11048  00405C  90D8               	bcf	status,0,c
 11049  00405E  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 11050  004060  3362               	rrcf	___awmod@divisor& (0+255),f,b
 11051                           
 11052                           ; BSR set to: 0
 11053  004062  2F64               	decfsz	___awmod@counter& (0+255),f,b
 11054  004064  D7F1               	goto	u6000
 11055  004066                     l2505:
 11056                           
 11057                           ; BSR set to: 0
 11058                           
 11059                           ; BSR set to: 0
 11060                           
 11061                           ; BSR set to: 0
 11062  004066  5165               	movf	___awmod@sign& (0+255),w,b
 11063  004068  B4D8               	btfsc	status,2,c
 11064  00406A  D004               	goto	l2506
 11065                           
 11066                           ; BSR set to: 0
 11067  00406C  6D60               	negf	___awmod@dividend& (0+255),b
 11068  00406E  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 11069  004070  B0D8               	btfsc	status,0,c
 11070  004072  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 11071  004074                     l2506:
 11072                           
 11073                           ; BSR set to: 0
 11074                           
 11075                           ; BSR set to: 0
 11076  004074  C060  F060         	movff	___awmod@dividend,?___awmod
 11077  004078  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 11078  00407C  0012               	return	
 11079  00407E                     __end_of___awmod:
 11080                           	opt stack 0
 11081                           tblptru	equ	0xFF8
 11082                           tblptrh	equ	0xFF7
 11083                           tblptrl	equ	0xFF6
 11084                           tablat	equ	0xFF5
 11085                           prodh	equ	0xFF4
 11086                           prodl	equ	0xFF3
 11087                           intcon	equ	0xFF2
 11088                           postinc0	equ	0xFEE
 11089                           wreg	equ	0xFE8
 11090                           indf1	equ	0xFE7
 11091                           postdec1	equ	0xFE5
 11092                           fsr1h	equ	0xFE2
 11093                           fsr1l	equ	0xFE1
 11094                           indf2	equ	0xFDF
 11095                           postinc2	equ	0xFDE
 11096                           postdec2	equ	0xFDD
 11097                           plusw2	equ	0xFDB
 11098                           fsr2h	equ	0xFDA
 11099                           fsr2l	equ	0xFD9
 11100                           status	equ	0xFD8
 11101                           
 11102 ;; *************** function ___awdiv *****************
 11103 ;; Defined at:
 11104 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\awdiv.c"
 11105 ;; Parameters:    Size  Location     Type
 11106 ;;  dividend        2    6[BANK0 ] int 
 11107 ;;  divisor         2    8[BANK0 ] int 
 11108 ;; Auto vars:     Size  Location     Type
 11109 ;;  quotient        2   12[BANK0 ] int 
 11110 ;;  sign            1   11[BANK0 ] unsigned char 
 11111 ;;  counter         1   10[BANK0 ] unsigned char 
 11112 ;; Return value:  Size  Location     Type
 11113 ;;                  2    6[BANK0 ] int 
 11114 ;; Registers used:
 11115 ;;		wreg, status,2, status,0
 11116 ;; Tracked objects:
 11117 ;;		On entry : 0/0
 11118 ;;		On exit  : 0/0
 11119 ;;		Unchanged: 0/0
 11120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11121 ;;      Params:         0       4       0       0       0       0       0       0       0
 11122 ;;      Locals:         0       4       0       0       0       0       0       0       0
 11123 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11124 ;;      Totals:         0       8       0       0       0       0       0       0       0
 11125 ;;Total ram usage:        8 bytes
 11126 ;; Hardware stack levels used:    1
 11127 ;; Hardware stack levels required when called:   10
 11128 ;; This function calls:
 11129 ;;		Nothing
 11130 ;; This function is called by:
 11131 ;;		_fround
 11132 ;;		_scale
 11133 ;;		_sprintf
 11134 ;; This function uses a non-reentrant model
 11135 ;;
 11136                           
 11137                           	psect	text35
 11138  003CFA                     __ptext35:
 11139                           	opt stack 0
 11140  003CFA                     ___awdiv:
 11141                           	opt stack 17
 11142                           
 11143                           ; BSR set to: 0
 11144                           ;incstack = 0
 11145  003CFA  0E00               	movlw	0
 11146  003CFC  0100               	movlb	0	; () banked
 11147  003CFE  6F6B               	movwf	___awdiv@sign& (0+255),b
 11148                           
 11149                           ; BSR set to: 0
 11150  003D00  AF69               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 11151  003D02  D006               	goto	l2484
 11152                           
 11153                           ; BSR set to: 0
 11154  003D04  6D68               	negf	___awdiv@divisor& (0+255),b
 11155  003D06  1F69               	comf	(___awdiv@divisor+1)& (0+255),f,b
 11156  003D08  B0D8               	btfsc	status,0,c
 11157  003D0A  2B69               	incf	(___awdiv@divisor+1)& (0+255),f,b
 11158                           
 11159                           ; BSR set to: 0
 11160  003D0C  0E01               	movlw	1
 11161  003D0E  6F6B               	movwf	___awdiv@sign& (0+255),b
 11162  003D10                     l2484:
 11163                           
 11164                           ; BSR set to: 0
 11165                           
 11166                           ; BSR set to: 0
 11167  003D10  AF67               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 11168  003D12  D006               	goto	l2485
 11169                           
 11170                           ; BSR set to: 0
 11171  003D14  6D66               	negf	___awdiv@dividend& (0+255),b
 11172  003D16  1F67               	comf	(___awdiv@dividend+1)& (0+255),f,b
 11173  003D18  B0D8               	btfsc	status,0,c
 11174  003D1A  2B67               	incf	(___awdiv@dividend+1)& (0+255),f,b
 11175                           
 11176                           ; BSR set to: 0
 11177  003D1C  0E01               	movlw	1
 11178  003D1E  1B6B               	xorwf	___awdiv@sign& (0+255),f,b
 11179  003D20                     l2485:
 11180                           
 11181                           ; BSR set to: 0
 11182                           
 11183                           ; BSR set to: 0
 11184  003D20  0E00               	movlw	0
 11185  003D22  6F6D               	movwf	(___awdiv@quotient+1)& (0+255),b
 11186  003D24  0E00               	movlw	0
 11187  003D26  6F6C               	movwf	___awdiv@quotient& (0+255),b
 11188                           
 11189                           ; BSR set to: 0
 11190  003D28  5168               	movf	___awdiv@divisor& (0+255),w,b
 11191  003D2A  1169               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 11192  003D2C  B4D8               	btfsc	status,2,c
 11193  003D2E  D01C               	goto	l2492
 11194                           
 11195                           ; BSR set to: 0
 11196  003D30  0E01               	movlw	1
 11197  003D32  6F6A               	movwf	___awdiv@counter& (0+255),b
 11198  003D34  D004               	goto	l2487
 11199  003D36                     
 11200                           ; BSR set to: 0
 11201                           
 11202                           ; BSR set to: 0
 11203  003D36  90D8               	bcf	status,0,c
 11204  003D38  3768               	rlcf	___awdiv@divisor& (0+255),f,b
 11205  003D3A  3769               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 11206  003D3C  2B6A               	incf	___awdiv@counter& (0+255),f,b
 11207  003D3E                     l2487:
 11208                           
 11209                           ; BSR set to: 0
 11210                           
 11211                           ; BSR set to: 0
 11212  003D3E  AF69               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 11213  003D40  D7FA               	goto	l2488
 11214  003D42                     u5940:
 11215                           
 11216                           ; BSR set to: 0
 11217                           
 11218                           ; BSR set to: 0
 11219                           
 11220                           ; BSR set to: 0
 11221  003D42  90D8               	bcf	status,0,c
 11222  003D44  376C               	rlcf	___awdiv@quotient& (0+255),f,b
 11223  003D46  376D               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 11224                           
 11225                           ; BSR set to: 0
 11226  003D48  5168               	movf	___awdiv@divisor& (0+255),w,b
 11227  003D4A  5D66               	subwf	___awdiv@dividend& (0+255),w,b
 11228  003D4C  5169               	movf	(___awdiv@divisor+1)& (0+255),w,b
 11229  003D4E  5967               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 11230  003D50  A0D8               	btfss	status,0,c
 11231  003D52  D005               	goto	l2491
 11232                           
 11233                           ; BSR set to: 0
 11234  003D54  5168               	movf	___awdiv@divisor& (0+255),w,b
 11235  003D56  5F66               	subwf	___awdiv@dividend& (0+255),f,b
 11236  003D58  5169               	movf	(___awdiv@divisor+1)& (0+255),w,b
 11237  003D5A  5B67               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 11238                           
 11239                           ; BSR set to: 0
 11240  003D5C  816C               	bsf	___awdiv@quotient& (0+255),0,b
 11241  003D5E                     l2491:
 11242                           
 11243                           ; BSR set to: 0
 11244                           
 11245                           ; BSR set to: 0
 11246  003D5E  90D8               	bcf	status,0,c
 11247  003D60  3369               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 11248  003D62  3368               	rrcf	___awdiv@divisor& (0+255),f,b
 11249                           
 11250                           ; BSR set to: 0
 11251  003D64  2F6A               	decfsz	___awdiv@counter& (0+255),f,b
 11252  003D66  D7ED               	goto	u5940
 11253  003D68                     l2492:
 11254                           
 11255                           ; BSR set to: 0
 11256                           
 11257                           ; BSR set to: 0
 11258                           
 11259                           ; BSR set to: 0
 11260  003D68  516B               	movf	___awdiv@sign& (0+255),w,b
 11261  003D6A  B4D8               	btfsc	status,2,c
 11262  003D6C  D004               	goto	l2493
 11263                           
 11264                           ; BSR set to: 0
 11265  003D6E  6D6C               	negf	___awdiv@quotient& (0+255),b
 11266  003D70  1F6D               	comf	(___awdiv@quotient+1)& (0+255),f,b
 11267  003D72  B0D8               	btfsc	status,0,c
 11268  003D74  2B6D               	incf	(___awdiv@quotient+1)& (0+255),f,b
 11269  003D76                     l2493:
 11270                           
 11271                           ; BSR set to: 0
 11272                           
 11273                           ; BSR set to: 0
 11274  003D76  C06C  F066         	movff	___awdiv@quotient,?___awdiv
 11275  003D7A  C06D  F067         	movff	___awdiv@quotient+1,?___awdiv+1
 11276  003D7E  0012               	return	
 11277  003D80                     __end_of___awdiv:
 11278                           	opt stack 0
 11279                           tblptru	equ	0xFF8
 11280                           tblptrh	equ	0xFF7
 11281                           tblptrl	equ	0xFF6
 11282                           tablat	equ	0xFF5
 11283                           prodh	equ	0xFF4
 11284                           prodl	equ	0xFF3
 11285                           intcon	equ	0xFF2
 11286                           postinc0	equ	0xFEE
 11287                           wreg	equ	0xFE8
 11288                           indf1	equ	0xFE7
 11289                           postdec1	equ	0xFE5
 11290                           fsr1h	equ	0xFE2
 11291                           fsr1l	equ	0xFE1
 11292                           indf2	equ	0xFDF
 11293                           postinc2	equ	0xFDE
 11294                           postdec2	equ	0xFDD
 11295                           plusw2	equ	0xFDB
 11296                           fsr2h	equ	0xFDA
 11297                           fsr2l	equ	0xFD9
 11298                           status	equ	0xFD8
 11299                           
 11300 ;; *************** function __tdiv_to_l_ *****************
 11301 ;; Defined at:
 11302 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftdivl.c"
 11303 ;; Parameters:    Size  Location     Type
 11304 ;;  f1              3    0[BANK0 ] float 
 11305 ;;  f2              3    3[BANK0 ] float 
 11306 ;; Auto vars:     Size  Location     Type
 11307 ;;  quot            4    9[BANK0 ] unsigned long 
 11308 ;;  exp1            1   14[BANK0 ] unsigned char 
 11309 ;;  cntr            1   13[BANK0 ] unsigned char 
 11310 ;; Return value:  Size  Location     Type
 11311 ;;                  4    0[BANK0 ] unsigned long 
 11312 ;; Registers used:
 11313 ;;		wreg, status,2, status,0
 11314 ;; Tracked objects:
 11315 ;;		On entry : 0/0
 11316 ;;		On exit  : 0/0
 11317 ;;		Unchanged: 0/0
 11318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11319 ;;      Params:         0       6       0       0       0       0       0       0       0
 11320 ;;      Locals:         0       6       0       0       0       0       0       0       0
 11321 ;;      Temps:          0       3       0       0       0       0       0       0       0
 11322 ;;      Totals:         0      15       0       0       0       0       0       0       0
 11323 ;;Total ram usage:       15 bytes
 11324 ;; Hardware stack levels used:    1
 11325 ;; Hardware stack levels required when called:   10
 11326 ;; This function calls:
 11327 ;;		Nothing
 11328 ;; This function is called by:
 11329 ;;		_sprintf
 11330 ;; This function uses a non-reentrant model
 11331 ;;
 11332                           
 11333                           	psect	text36
 11334  002402                     __ptext36:
 11335                           	opt stack 0
 11336  002402                     __tdiv_to_l_:
 11337                           	opt stack 18
 11338                           
 11339                           ; BSR set to: 0
 11340                           ;incstack = 0
 11341  002402  C062  F066         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 11342  002406  0100               	movlb	0	; () banked
 11343  002408  6B67               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 11344  00240A  6B68               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 11345  00240C  3561               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 11346  00240E  3766               	rlcf	??__tdiv_to_l_& (0+255),f,b
 11347  002410  E301               	bnc	u6461
 11348  002412  8167               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 11349  002414                     u6461:
 11350  002414  5166               	movf	??__tdiv_to_l_& (0+255),w,b
 11351  002416  6F6E               	movwf	__tdiv_to_l_@exp1& (0+255),b
 11352  002418  516E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 11353  00241A  A4D8               	btfss	status,2,c
 11354  00241C  D009               	goto	l2620
 11355                           
 11356                           ; BSR set to: 0
 11357  00241E  0E00               	movlw	0
 11358  002420  6F60               	movwf	?__tdiv_to_l_& (0+255),b
 11359  002422  0E00               	movlw	0
 11360  002424  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 11361  002426  0E00               	movlw	0
 11362  002428  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 11363  00242A  0E00               	movlw	0
 11364  00242C  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 11365                           
 11366                           ; BSR set to: 0
 11367  00242E  0012               	return	
 11368  002430                     l2620:
 11369                           
 11370                           ; BSR set to: 0
 11371                           
 11372                           ; BSR set to: 0
 11373  002430  C065  F066         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 11374  002434  6B67               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 11375  002436  6B68               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 11376  002438  3564               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 11377  00243A  3766               	rlcf	??__tdiv_to_l_& (0+255),f,b
 11378  00243C  E301               	bnc	u6481
 11379  00243E  8167               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 11380  002440                     u6481:
 11381  002440  5166               	movf	??__tdiv_to_l_& (0+255),w,b
 11382  002442  6F6D               	movwf	__tdiv_to_l_@cntr& (0+255),b
 11383  002444  516D               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 11384  002446  A4D8               	btfss	status,2,c
 11385  002448  D009               	goto	l2622
 11386                           
 11387                           ; BSR set to: 0
 11388  00244A  0E00               	movlw	0
 11389  00244C  6F60               	movwf	?__tdiv_to_l_& (0+255),b
 11390  00244E  0E00               	movlw	0
 11391  002450  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 11392  002452  0E00               	movlw	0
 11393  002454  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 11394  002456  0E00               	movlw	0
 11395  002458  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 11396                           
 11397                           ; BSR set to: 0
 11398  00245A  0012               	return	
 11399  00245C                     l2622:
 11400                           
 11401                           ; BSR set to: 0
 11402                           
 11403                           ; BSR set to: 0
 11404  00245C  8F61               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 11405                           
 11406                           ; BSR set to: 0
 11407  00245E  0EFF               	movlw	255
 11408  002460  1760               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 11409  002462  0EFF               	movlw	255
 11410  002464  1761               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 11411  002466  0E00               	movlw	0
 11412  002468  1762               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 11413  00246A  8F64               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 11414                           
 11415                           ; BSR set to: 0
 11416  00246C  0EFF               	movlw	255
 11417  00246E  1763               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 11418  002470  0EFF               	movlw	255
 11419  002472  1764               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 11420  002474  0E00               	movlw	0
 11421  002476  1765               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 11422                           
 11423                           ; BSR set to: 0
 11424  002478  0E00               	movlw	0
 11425  00247A  6F69               	movwf	__tdiv_to_l_@quot& (0+255),b
 11426  00247C  0E00               	movlw	0
 11427  00247E  6F6A               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 11428  002480  0E00               	movlw	0
 11429  002482  6F6B               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 11430  002484  0E00               	movlw	0
 11431  002486  6F6C               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 11432                           
 11433                           ; BSR set to: 0
 11434  002488  0E7F               	movlw	127
 11435  00248A  5F6E               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 11436                           
 11437                           ; BSR set to: 0
 11438  00248C  516D               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 11439  00248E  0F98               	addlw	152
 11440  002490  5F6E               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 11441                           
 11442                           ; BSR set to: 0
 11443  002492  0E18               	movlw	24
 11444  002494  6F6D               	movwf	__tdiv_to_l_@cntr& (0+255),b
 11445  002496                     l2623:
 11446                           
 11447                           ; BSR set to: 0
 11448  002496  90D8               	bcf	status,0,c
 11449  002498  3769               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 11450  00249A  376A               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 11451  00249C  376B               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 11452  00249E  376C               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 11453                           
 11454                           ; BSR set to: 0
 11455  0024A0  5163               	movf	__tdiv_to_l_@f2& (0+255),w,b
 11456  0024A2  5D60               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 11457  0024A4  5164               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 11458  0024A6  5961               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 11459  0024A8  5165               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 11460  0024AA  5962               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 11461  0024AC  A0D8               	btfss	status,0,c
 11462  0024AE  D007               	goto	l2624
 11463                           
 11464                           ; BSR set to: 0
 11465  0024B0  5163               	movf	__tdiv_to_l_@f2& (0+255),w,b
 11466  0024B2  5F60               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 11467  0024B4  5164               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 11468  0024B6  5B61               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 11469  0024B8  5165               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 11470  0024BA  5B62               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 11471                           
 11472                           ; BSR set to: 0
 11473  0024BC  8169               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 11474  0024BE                     l2624:
 11475                           
 11476                           ; BSR set to: 0
 11477  0024BE  90D8               	bcf	status,0,c
 11478  0024C0  3760               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 11479  0024C2  3761               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 11480  0024C4  3762               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 11481                           
 11482                           ; BSR set to: 0
 11483  0024C6  2F6D               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 11484  0024C8  D7E6               	goto	l2623
 11485                           
 11486                           ; BSR set to: 0
 11487                           
 11488                           ; BSR set to: 0
 11489  0024CA  AF6E               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 11490  0024CC  D016               	goto	l2626
 11491                           
 11492                           ; BSR set to: 0
 11493  0024CE  516E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 11494  0024D0  0A80               	xorlw	128
 11495  0024D2  0F97               	addlw	151
 11496  0024D4  B0D8               	btfsc	status,0,c
 11497  0024D6  D009               	goto	l2627
 11498                           
 11499                           ; BSR set to: 0
 11500  0024D8  0E00               	movlw	0
 11501  0024DA  6F60               	movwf	?__tdiv_to_l_& (0+255),b
 11502  0024DC  0E00               	movlw	0
 11503  0024DE  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 11504  0024E0  0E00               	movlw	0
 11505  0024E2  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 11506  0024E4  0E00               	movlw	0
 11507  0024E6  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 11508                           
 11509                           ; BSR set to: 0
 11510  0024E8  0012               	return	
 11511  0024EA                     l2627:
 11512                           
 11513                           ; BSR set to: 0
 11514                           
 11515                           ; BSR set to: 0
 11516                           
 11517                           ; BSR set to: 0
 11518  0024EA  90D8               	bcf	status,0,c
 11519  0024EC  336C               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 11520  0024EE  336B               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 11521  0024F0  336A               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 11522  0024F2  3369               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 11523                           
 11524                           ; BSR set to: 0
 11525  0024F4  3F6E               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 11526  0024F6  D7F9               	goto	l2627
 11527                           
 11528                           ; BSR set to: 0
 11529  0024F8  D015               	goto	u6540
 11530  0024FA                     l2626:
 11531                           
 11532                           ; BSR set to: 0
 11533                           
 11534                           ; BSR set to: 0
 11535  0024FA  0E17               	movlw	23
 11536  0024FC  656E               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 11537  0024FE  D00F               	goto	l2632
 11538                           
 11539                           ; BSR set to: 0
 11540  002500  0E00               	movlw	0
 11541  002502  6F60               	movwf	?__tdiv_to_l_& (0+255),b
 11542  002504  0E00               	movlw	0
 11543  002506  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 11544  002508  0E00               	movlw	0
 11545  00250A  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 11546  00250C  0E00               	movlw	0
 11547  00250E  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 11548                           
 11549                           ; BSR set to: 0
 11550  002510  0012               	return	
 11551  002512                     
 11552                           ; BSR set to: 0
 11553                           
 11554                           ; BSR set to: 0
 11555  002512  90D8               	bcf	status,0,c
 11556  002514  3769               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 11557  002516  376A               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 11558  002518  376B               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 11559  00251A  376C               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 11560  00251C  076E               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 11561  00251E                     l2632:
 11562                           
 11563                           ; BSR set to: 0
 11564                           
 11565                           ; BSR set to: 0
 11566  00251E  516E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 11567  002520  A4D8               	btfss	status,2,c
 11568  002522  D7F7               	goto	l2633
 11569  002524                     u6540:
 11570                           
 11571                           ; BSR set to: 0
 11572                           
 11573                           ; BSR set to: 0
 11574  002524  C069  F060         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 11575  002528  C06A  F061         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 11576  00252C  C06B  F062         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 11577  002530  C06C  F063         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 11578                           
 11579                           ; BSR set to: 0
 11580  002534  0012               	return		;funcret
 11581  002536                     __end_of__tdiv_to_l_:
 11582                           	opt stack 0
 11583                           tblptru	equ	0xFF8
 11584                           tblptrh	equ	0xFF7
 11585                           tblptrl	equ	0xFF6
 11586                           tablat	equ	0xFF5
 11587                           prodh	equ	0xFF4
 11588                           prodl	equ	0xFF3
 11589                           intcon	equ	0xFF2
 11590                           postinc0	equ	0xFEE
 11591                           wreg	equ	0xFE8
 11592                           indf1	equ	0xFE7
 11593                           postdec1	equ	0xFE5
 11594                           fsr1h	equ	0xFE2
 11595                           fsr1l	equ	0xFE1
 11596                           indf2	equ	0xFDF
 11597                           postinc2	equ	0xFDE
 11598                           postdec2	equ	0xFDD
 11599                           plusw2	equ	0xFDB
 11600                           fsr2h	equ	0xFDA
 11601                           fsr2l	equ	0xFD9
 11602                           status	equ	0xFD8
 11603                           
 11604 ;; *************** function __div_to_l_ *****************
 11605 ;; Defined at:
 11606 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\fldivl.c"
 11607 ;; Parameters:    Size  Location     Type
 11608 ;;  f1              3    0[BANK0 ] unsigned long 
 11609 ;;  f2              3    3[BANK0 ] unsigned long 
 11610 ;; Auto vars:     Size  Location     Type
 11611 ;;  quot            4    6[BANK0 ] unsigned long 
 11612 ;;  exp1            1   11[BANK0 ] unsigned char 
 11613 ;;  cntr            1   10[BANK0 ] unsigned char 
 11614 ;; Return value:  Size  Location     Type
 11615 ;;                  4    0[BANK0 ] unsigned long 
 11616 ;; Registers used:
 11617 ;;		wreg, status,2, status,0
 11618 ;; Tracked objects:
 11619 ;;		On entry : 0/0
 11620 ;;		On exit  : 0/0
 11621 ;;		Unchanged: 0/0
 11622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11623 ;;      Params:         0       6       0       0       0       0       0       0       0
 11624 ;;      Locals:         0       6       0       0       0       0       0       0       0
 11625 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11626 ;;      Totals:         0      12       0       0       0       0       0       0       0
 11627 ;;Total ram usage:       12 bytes
 11628 ;; Hardware stack levels used:    1
 11629 ;; Hardware stack levels required when called:   10
 11630 ;; This function calls:
 11631 ;;		Nothing
 11632 ;; This function is called by:
 11633 ;;		_sprintf
 11634 ;; This function uses a non-reentrant model
 11635 ;;
 11636                           
 11637                           	psect	text37
 11638  002792                     __ptext37:
 11639                           	opt stack 0
 11640  002792                     __div_to_l_:
 11641                           	opt stack 18
 11642                           
 11643                           ; BSR set to: 0
 11644                           ;incstack = 0
 11645  002792  0100               	movlb	0	; () banked
 11646  002794  3562               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 11647  002796  3563               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 11648  002798  6F6B               	movwf	__div_to_l_@exp1& (0+255),b
 11649  00279A  516B               	movf	__div_to_l_@exp1& (0+255),w,b
 11650  00279C  A4D8               	btfss	status,2,c
 11651  00279E  D009               	goto	l2516
 11652                           
 11653                           ; BSR set to: 0
 11654  0027A0  0E00               	movlw	0
 11655  0027A2  6F60               	movwf	?__div_to_l_& (0+255),b
 11656  0027A4  0E00               	movlw	0
 11657  0027A6  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
 11658  0027A8  0E00               	movlw	0
 11659  0027AA  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
 11660  0027AC  0E00               	movlw	0
 11661  0027AE  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
 11662                           
 11663                           ; BSR set to: 0
 11664  0027B0  0012               	return	
 11665  0027B2                     l2516:
 11666                           
 11667                           ; BSR set to: 0
 11668                           
 11669                           ; BSR set to: 0
 11670  0027B2  3565               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 11671  0027B4  3566               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 11672  0027B6  6F6A               	movwf	__div_to_l_@cntr& (0+255),b
 11673  0027B8  516A               	movf	__div_to_l_@cntr& (0+255),w,b
 11674  0027BA  A4D8               	btfss	status,2,c
 11675  0027BC  D009               	goto	l2518
 11676                           
 11677                           ; BSR set to: 0
 11678  0027BE  0E00               	movlw	0
 11679  0027C0  6F60               	movwf	?__div_to_l_& (0+255),b
 11680  0027C2  0E00               	movlw	0
 11681  0027C4  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
 11682  0027C6  0E00               	movlw	0
 11683  0027C8  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
 11684  0027CA  0E00               	movlw	0
 11685  0027CC  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
 11686                           
 11687                           ; BSR set to: 0
 11688  0027CE  0012               	return	
 11689  0027D0                     l2518:
 11690                           
 11691                           ; BSR set to: 0
 11692                           
 11693                           ; BSR set to: 0
 11694  0027D0  8F62               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 11695                           
 11696                           ; BSR set to: 0
 11697  0027D2  0EFF               	movlw	255
 11698  0027D4  1760               	andwf	__div_to_l_@f1& (0+255),f,b
 11699  0027D6  0EFF               	movlw	255
 11700  0027D8  1761               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 11701  0027DA  0EFF               	movlw	255
 11702  0027DC  1762               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 11703  0027DE  0E00               	movlw	0
 11704  0027E0  1763               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 11705                           
 11706                           ; BSR set to: 0
 11707  0027E2  8F65               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 11708  0027E4  0EFF               	movlw	255
 11709  0027E6  1763               	andwf	__div_to_l_@f2& (0+255),f,b
 11710  0027E8  0EFF               	movlw	255
 11711  0027EA  1764               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 11712  0027EC  0EFF               	movlw	255
 11713  0027EE  1765               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 11714  0027F0  0E00               	movlw	0
 11715  0027F2  1766               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 11716                           
 11717                           ; BSR set to: 0
 11718  0027F4  0E00               	movlw	0
 11719  0027F6  6F66               	movwf	__div_to_l_@quot& (0+255),b
 11720  0027F8  0E00               	movlw	0
 11721  0027FA  6F67               	movwf	(__div_to_l_@quot+1)& (0+255),b
 11722  0027FC  0E00               	movlw	0
 11723  0027FE  6F68               	movwf	(__div_to_l_@quot+2)& (0+255),b
 11724  002800  0E00               	movlw	0
 11725  002802  6F69               	movwf	(__div_to_l_@quot+3)& (0+255),b
 11726                           
 11727                           ; BSR set to: 0
 11728  002804  0E7F               	movlw	127
 11729  002806  5F6B               	subwf	__div_to_l_@exp1& (0+255),f,b
 11730                           
 11731                           ; BSR set to: 0
 11732  002808  516A               	movf	__div_to_l_@cntr& (0+255),w,b
 11733  00280A  0FA0               	addlw	160
 11734  00280C  5F6B               	subwf	__div_to_l_@exp1& (0+255),f,b
 11735                           
 11736                           ; BSR set to: 0
 11737  00280E  0E20               	movlw	32
 11738  002810  6F6A               	movwf	__div_to_l_@cntr& (0+255),b
 11739  002812                     
 11740                           ; BSR set to: 0
 11741                           
 11742                           ; BSR set to: 0
 11743  002812  90D8               	bcf	status,0,c
 11744  002814  3766               	rlcf	__div_to_l_@quot& (0+255),f,b
 11745  002816  3767               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 11746  002818  3768               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 11747  00281A  3769               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 11748                           
 11749                           ; BSR set to: 0
 11750  00281C  5163               	movf	__div_to_l_@f2& (0+255),w,b
 11751  00281E  5D60               	subwf	__div_to_l_@f1& (0+255),w,b
 11752  002820  5164               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 11753  002822  5961               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 11754  002824  5165               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 11755  002826  5962               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 11756  002828  5166               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 11757  00282A  5963               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 11758  00282C  A0D8               	btfss	status,0,c
 11759  00282E  D009               	goto	l2520
 11760                           
 11761                           ; BSR set to: 0
 11762  002830  5163               	movf	__div_to_l_@f2& (0+255),w,b
 11763  002832  5F60               	subwf	__div_to_l_@f1& (0+255),f,b
 11764  002834  5164               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 11765  002836  5B61               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 11766  002838  5165               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 11767  00283A  5B62               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 11768  00283C  5166               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 11769  00283E  5B63               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 11770                           
 11771                           ; BSR set to: 0
 11772  002840  8166               	bsf	__div_to_l_@quot& (0+255),0,b
 11773  002842                     l2520:
 11774                           
 11775                           ; BSR set to: 0
 11776                           
 11777                           ; BSR set to: 0
 11778  002842  90D8               	bcf	status,0,c
 11779  002844  3760               	rlcf	__div_to_l_@f1& (0+255),f,b
 11780  002846  3761               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 11781  002848  3762               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 11782  00284A  3763               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 11783                           
 11784                           ; BSR set to: 0
 11785  00284C  2F6A               	decfsz	__div_to_l_@cntr& (0+255),f,b
 11786  00284E  D7E1               	goto	l2519
 11787                           
 11788                           ; BSR set to: 0
 11789                           
 11790                           ; BSR set to: 0
 11791  002850  AF6B               	btfss	__div_to_l_@exp1& (0+255),7,b
 11792  002852  D016               	goto	l2522
 11793                           
 11794                           ; BSR set to: 0
 11795  002854  516B               	movf	__div_to_l_@exp1& (0+255),w,b
 11796  002856  0A80               	xorlw	128
 11797  002858  0F9F               	addlw	159
 11798  00285A  B0D8               	btfsc	status,0,c
 11799  00285C  D009               	goto	l2523
 11800                           
 11801                           ; BSR set to: 0
 11802  00285E  0E00               	movlw	0
 11803  002860  6F60               	movwf	?__div_to_l_& (0+255),b
 11804  002862  0E00               	movlw	0
 11805  002864  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
 11806  002866  0E00               	movlw	0
 11807  002868  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
 11808  00286A  0E00               	movlw	0
 11809  00286C  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
 11810                           
 11811                           ; BSR set to: 0
 11812  00286E  0012               	return	
 11813  002870                     l2523:
 11814                           
 11815                           ; BSR set to: 0
 11816                           
 11817                           ; BSR set to: 0
 11818                           
 11819                           ; BSR set to: 0
 11820  002870  90D8               	bcf	status,0,c
 11821  002872  3369               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 11822  002874  3368               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 11823  002876  3367               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 11824  002878  3366               	rrcf	__div_to_l_@quot& (0+255),f,b
 11825                           
 11826                           ; BSR set to: 0
 11827  00287A  3F6B               	incfsz	__div_to_l_@exp1& (0+255),f,b
 11828  00287C  D7F9               	goto	l2523
 11829                           
 11830                           ; BSR set to: 0
 11831  00287E  D015               	goto	u6610
 11832  002880                     l2522:
 11833                           
 11834                           ; BSR set to: 0
 11835                           
 11836                           ; BSR set to: 0
 11837  002880  0E1F               	movlw	31
 11838  002882  656B               	cpfsgt	__div_to_l_@exp1& (0+255),b
 11839  002884  D00F               	goto	l2528
 11840                           
 11841                           ; BSR set to: 0
 11842  002886  0E00               	movlw	0
 11843  002888  6F60               	movwf	?__div_to_l_& (0+255),b
 11844  00288A  0E00               	movlw	0
 11845  00288C  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
 11846  00288E  0E00               	movlw	0
 11847  002890  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
 11848  002892  0E00               	movlw	0
 11849  002894  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
 11850                           
 11851                           ; BSR set to: 0
 11852  002896  0012               	return	
 11853  002898                     
 11854                           ; BSR set to: 0
 11855                           
 11856                           ; BSR set to: 0
 11857  002898  90D8               	bcf	status,0,c
 11858  00289A  3766               	rlcf	__div_to_l_@quot& (0+255),f,b
 11859  00289C  3767               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 11860  00289E  3768               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 11861  0028A0  3769               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 11862  0028A2  076B               	decf	__div_to_l_@exp1& (0+255),f,b
 11863  0028A4                     l2528:
 11864                           
 11865                           ; BSR set to: 0
 11866                           
 11867                           ; BSR set to: 0
 11868  0028A4  516B               	movf	__div_to_l_@exp1& (0+255),w,b
 11869  0028A6  A4D8               	btfss	status,2,c
 11870  0028A8  D7F7               	goto	l2529
 11871  0028AA                     u6610:
 11872                           
 11873                           ; BSR set to: 0
 11874                           
 11875                           ; BSR set to: 0
 11876  0028AA  C066  F060         	movff	__div_to_l_@quot,?__div_to_l_
 11877  0028AE  C067  F061         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 11878  0028B2  C068  F062         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 11879  0028B6  C069  F063         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 11880                           
 11881                           ; BSR set to: 0
 11882  0028BA  0012               	return		;funcret
 11883  0028BC                     __end_of__div_to_l_:
 11884                           	opt stack 0
 11885                           tblptru	equ	0xFF8
 11886                           tblptrh	equ	0xFF7
 11887                           tblptrl	equ	0xFF6
 11888                           tablat	equ	0xFF5
 11889                           prodh	equ	0xFF4
 11890                           prodl	equ	0xFF3
 11891                           intcon	equ	0xFF2
 11892                           postinc0	equ	0xFEE
 11893                           wreg	equ	0xFE8
 11894                           indf1	equ	0xFE7
 11895                           postdec1	equ	0xFE5
 11896                           fsr1h	equ	0xFE2
 11897                           fsr1l	equ	0xFE1
 11898                           indf2	equ	0xFDF
 11899                           postinc2	equ	0xFDE
 11900                           postdec2	equ	0xFDD
 11901                           plusw2	equ	0xFDB
 11902                           fsr2h	equ	0xFDA
 11903                           fsr2l	equ	0xFD9
 11904                           status	equ	0xFD8
 11905                           
 11906 ;; *************** function ___lltoft *****************
 11907 ;; Defined at:
 11908 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lltoft.c"
 11909 ;; Parameters:    Size  Location     Type
 11910 ;;  c               4    8[BANK0 ] unsigned long 
 11911 ;; Auto vars:     Size  Location     Type
 11912 ;;  exp             1   16[BANK0 ] unsigned char 
 11913 ;; Return value:  Size  Location     Type
 11914 ;;                  3    8[BANK0 ] float 
 11915 ;; Registers used:
 11916 ;;		wreg, status,2, status,0, cstack
 11917 ;; Tracked objects:
 11918 ;;		On entry : 0/0
 11919 ;;		On exit  : 0/0
 11920 ;;		Unchanged: 0/0
 11921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11922 ;;      Params:         0       4       0       0       0       0       0       0       0
 11923 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11924 ;;      Temps:          0       4       0       0       0       0       0       0       0
 11925 ;;      Totals:         0       9       0       0       0       0       0       0       0
 11926 ;;Total ram usage:        9 bytes
 11927 ;; Hardware stack levels used:    1
 11928 ;; Hardware stack levels required when called:   11
 11929 ;; This function calls:
 11930 ;;		___ftpack
 11931 ;; This function is called by:
 11932 ;;		_le4a20
 11933 ;;		_sprintf
 11934 ;; This function uses a non-reentrant model
 11935 ;;
 11936                           
 11937                           	psect	text38
 11938  004288                     __ptext38:
 11939                           	opt stack 0
 11940  004288                     ___lltoft:
 11941                           	opt stack 18
 11942                           
 11943                           ; BSR set to: 0
 11944                           ;incstack = 0
 11945  004288  0E8E               	movlw	142
 11946  00428A  0100               	movlb	0	; () banked
 11947  00428C  6F70               	movwf	___lltoft@exp& (0+255),b
 11948  00428E  D006               	goto	l2727
 11949  004290                     
 11950                           ; BSR set to: 0
 11951                           
 11952                           ; BSR set to: 0
 11953  004290  90D8               	bcf	status,0,c
 11954  004292  336B               	rrcf	(___lltoft@c+3)& (0+255),f,b
 11955  004294  336A               	rrcf	(___lltoft@c+2)& (0+255),f,b
 11956  004296  3369               	rrcf	(___lltoft@c+1)& (0+255),f,b
 11957  004298  3368               	rrcf	___lltoft@c& (0+255),f,b
 11958  00429A  2B70               	incf	___lltoft@exp& (0+255),f,b
 11959  00429C                     l2727:
 11960                           
 11961                           ; BSR set to: 0
 11962                           
 11963                           ; BSR set to: 0
 11964  00429C  0E00               	movlw	0
 11965  00429E  1568               	andwf	___lltoft@c& (0+255),w,b
 11966  0042A0  6F6C               	movwf	??___lltoft& (0+255),b
 11967  0042A2  0E00               	movlw	0
 11968  0042A4  1569               	andwf	(___lltoft@c+1)& (0+255),w,b
 11969  0042A6  6F6D               	movwf	(??___lltoft+1)& (0+255),b
 11970  0042A8  0E00               	movlw	0
 11971  0042AA  156A               	andwf	(___lltoft@c+2)& (0+255),w,b
 11972  0042AC  6F6E               	movwf	(??___lltoft+2)& (0+255),b
 11973  0042AE  0EFF               	movlw	255
 11974  0042B0  156B               	andwf	(___lltoft@c+3)& (0+255),w,b
 11975  0042B2  6F6F               	movwf	(??___lltoft+3)& (0+255),b
 11976  0042B4  516C               	movf	??___lltoft& (0+255),w,b
 11977  0042B6  116D               	iorwf	(??___lltoft+1)& (0+255),w,b
 11978  0042B8  116E               	iorwf	(??___lltoft+2)& (0+255),w,b
 11979  0042BA  116F               	iorwf	(??___lltoft+3)& (0+255),w,b
 11980  0042BC  A4D8               	btfss	status,2,c
 11981  0042BE  D7E8               	goto	l2728
 11982                           
 11983                           ; BSR set to: 0
 11984                           
 11985                           ; BSR set to: 0
 11986  0042C0  C068  F060         	movff	___lltoft@c,___ftpack@arg
 11987  0042C4  C069  F061         	movff	___lltoft@c+1,___ftpack@arg+1
 11988  0042C8  C06A  F062         	movff	___lltoft@c+2,___ftpack@arg+2
 11989  0042CC  C070  F063         	movff	___lltoft@exp,___ftpack@exp
 11990  0042D0  0E00               	movlw	0
 11991  0042D2  6F64               	movwf	___ftpack@sign& (0+255),b
 11992  0042D4  EC6B  F01B         	call	___ftpack	;wreg free
 11993  0042D8  C060  F068         	movff	?___ftpack,?___lltoft
 11994  0042DC  C061  F069         	movff	?___ftpack+1,?___lltoft+1
 11995  0042E0  C062  F06A         	movff	?___ftpack+2,?___lltoft+2
 11996  0042E4  0012               	return	
 11997  0042E6                     __end_of___lltoft:
 11998                           	opt stack 0
 11999                           tblptru	equ	0xFF8
 12000                           tblptrh	equ	0xFF7
 12001                           tblptrl	equ	0xFF6
 12002                           tablat	equ	0xFF5
 12003                           prodh	equ	0xFF4
 12004                           prodl	equ	0xFF3
 12005                           intcon	equ	0xFF2
 12006                           postinc0	equ	0xFEE
 12007                           wreg	equ	0xFE8
 12008                           indf1	equ	0xFE7
 12009                           postdec1	equ	0xFE5
 12010                           fsr1h	equ	0xFE2
 12011                           fsr1l	equ	0xFE1
 12012                           indf2	equ	0xFDF
 12013                           postinc2	equ	0xFDE
 12014                           postdec2	equ	0xFDD
 12015                           plusw2	equ	0xFDB
 12016                           fsr2h	equ	0xFDA
 12017                           fsr2l	equ	0xFD9
 12018                           status	equ	0xFD8
 12019                           
 12020 ;; *************** function ___llmod *****************
 12021 ;; Defined at:
 12022 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\llmod.c"
 12023 ;; Parameters:    Size  Location     Type
 12024 ;;  dividend        4   13[BANK0 ] unsigned long 
 12025 ;;  divisor         4   17[BANK0 ] unsigned long 
 12026 ;; Auto vars:     Size  Location     Type
 12027 ;;  counter         1   21[BANK0 ] unsigned char 
 12028 ;; Return value:  Size  Location     Type
 12029 ;;                  4   13[BANK0 ] unsigned long 
 12030 ;; Registers used:
 12031 ;;		wreg, status,2, status,0
 12032 ;; Tracked objects:
 12033 ;;		On entry : 0/0
 12034 ;;		On exit  : 0/0
 12035 ;;		Unchanged: 0/0
 12036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12037 ;;      Params:         0       8       0       0       0       0       0       0       0
 12038 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12039 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12040 ;;      Totals:         0       9       0       0       0       0       0       0       0
 12041 ;;Total ram usage:        9 bytes
 12042 ;; Hardware stack levels used:    1
 12043 ;; Hardware stack levels required when called:   10
 12044 ;; This function calls:
 12045 ;;		Nothing
 12046 ;; This function is called by:
 12047 ;;		_gravaDadosEeprom
 12048 ;;		_sprintf
 12049 ;;		_send
 12050 ;; This function uses a non-reentrant model
 12051 ;;
 12052                           
 12053                           	psect	text39
 12054  004156                     __ptext39:
 12055                           	opt stack 0
 12056  004156                     ___llmod:
 12057                           	opt stack 18
 12058                           
 12059                           ;incstack = 0
 12060  004156  0100               	movlb	0	; () banked
 12061  004158  5171               	movf	___llmod@divisor& (0+255),w,b
 12062  00415A  1172               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 12063  00415C  1173               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 12064  00415E  1174               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 12065  004160  B4D8               	btfsc	status,2,c
 12066  004162  D024               	goto	l2721
 12067                           
 12068                           ; BSR set to: 0
 12069  004164  0E01               	movlw	1
 12070  004166  6F75               	movwf	___llmod@counter& (0+255),b
 12071  004168  D006               	goto	l2716
 12072  00416A                     
 12073                           ; BSR set to: 0
 12074                           
 12075                           ; BSR set to: 0
 12076  00416A  90D8               	bcf	status,0,c
 12077  00416C  3771               	rlcf	___llmod@divisor& (0+255),f,b
 12078  00416E  3772               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 12079  004170  3773               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 12080  004172  3774               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 12081  004174  2B75               	incf	___llmod@counter& (0+255),f,b
 12082  004176                     l2716:
 12083                           
 12084                           ; BSR set to: 0
 12085                           
 12086                           ; BSR set to: 0
 12087  004176  AF74               	btfss	(___llmod@divisor+3)& (0+255),7,b
 12088  004178  D7F8               	goto	l2717
 12089  00417A                     u6790:
 12090                           
 12091                           ; BSR set to: 0
 12092                           
 12093                           ; BSR set to: 0
 12094                           
 12095                           ; BSR set to: 0
 12096  00417A  5171               	movf	___llmod@divisor& (0+255),w,b
 12097  00417C  5D6D               	subwf	___llmod@dividend& (0+255),w,b
 12098  00417E  5172               	movf	(___llmod@divisor+1)& (0+255),w,b
 12099  004180  596E               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 12100  004182  5173               	movf	(___llmod@divisor+2)& (0+255),w,b
 12101  004184  596F               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 12102  004186  5174               	movf	(___llmod@divisor+3)& (0+255),w,b
 12103  004188  5970               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 12104  00418A  A0D8               	btfss	status,0,c
 12105  00418C  D008               	goto	l2720
 12106                           
 12107                           ; BSR set to: 0
 12108  00418E  5171               	movf	___llmod@divisor& (0+255),w,b
 12109  004190  5F6D               	subwf	___llmod@dividend& (0+255),f,b
 12110  004192  5172               	movf	(___llmod@divisor+1)& (0+255),w,b
 12111  004194  5B6E               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 12112  004196  5173               	movf	(___llmod@divisor+2)& (0+255),w,b
 12113  004198  5B6F               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 12114  00419A  5174               	movf	(___llmod@divisor+3)& (0+255),w,b
 12115  00419C  5B70               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 12116  00419E                     l2720:
 12117                           
 12118                           ; BSR set to: 0
 12119                           
 12120                           ; BSR set to: 0
 12121  00419E  90D8               	bcf	status,0,c
 12122  0041A0  3374               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 12123  0041A2  3373               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 12124  0041A4  3372               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 12125  0041A6  3371               	rrcf	___llmod@divisor& (0+255),f,b
 12126                           
 12127                           ; BSR set to: 0
 12128  0041A8  2F75               	decfsz	___llmod@counter& (0+255),f,b
 12129  0041AA  D7E7               	goto	u6790
 12130  0041AC                     l2721:
 12131                           
 12132                           ; BSR set to: 0
 12133                           
 12134                           ; BSR set to: 0
 12135  0041AC  C06D  F06D         	movff	___llmod@dividend,?___llmod
 12136  0041B0  C06E  F06E         	movff	___llmod@dividend+1,?___llmod+1
 12137  0041B4  C06F  F06F         	movff	___llmod@dividend+2,?___llmod+2
 12138  0041B8  C070  F070         	movff	___llmod@dividend+3,?___llmod+3
 12139                           
 12140                           ; BSR set to: 0
 12141  0041BC  0012               	return		;funcret
 12142  0041BE                     __end_of___llmod:
 12143                           	opt stack 0
 12144                           tblptru	equ	0xFF8
 12145                           tblptrh	equ	0xFF7
 12146                           tblptrl	equ	0xFF6
 12147                           tablat	equ	0xFF5
 12148                           prodh	equ	0xFF4
 12149                           prodl	equ	0xFF3
 12150                           intcon	equ	0xFF2
 12151                           postinc0	equ	0xFEE
 12152                           wreg	equ	0xFE8
 12153                           indf1	equ	0xFE7
 12154                           postdec1	equ	0xFE5
 12155                           fsr1h	equ	0xFE2
 12156                           fsr1l	equ	0xFE1
 12157                           indf2	equ	0xFDF
 12158                           postinc2	equ	0xFDE
 12159                           postdec2	equ	0xFDD
 12160                           plusw2	equ	0xFDB
 12161                           fsr2h	equ	0xFDA
 12162                           fsr2l	equ	0xFD9
 12163                           status	equ	0xFD8
 12164                           
 12165 ;; *************** function ___lldiv *****************
 12166 ;; Defined at:
 12167 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lldiv.c"
 12168 ;; Parameters:    Size  Location     Type
 12169 ;;  dividend        4    0[BANK0 ] unsigned long 
 12170 ;;  divisor         4    4[BANK0 ] unsigned long 
 12171 ;; Auto vars:     Size  Location     Type
 12172 ;;  quotient        4    8[BANK0 ] unsigned long 
 12173 ;;  counter         1   12[BANK0 ] unsigned char 
 12174 ;; Return value:  Size  Location     Type
 12175 ;;                  4    0[BANK0 ] unsigned long 
 12176 ;; Registers used:
 12177 ;;		wreg, status,2, status,0
 12178 ;; Tracked objects:
 12179 ;;		On entry : 0/0
 12180 ;;		On exit  : 0/0
 12181 ;;		Unchanged: 0/0
 12182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12183 ;;      Params:         0       8       0       0       0       0       0       0       0
 12184 ;;      Locals:         0       5       0       0       0       0       0       0       0
 12185 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12186 ;;      Totals:         0      13       0       0       0       0       0       0       0
 12187 ;;Total ram usage:       13 bytes
 12188 ;; Hardware stack levels used:    1
 12189 ;; Hardware stack levels required when called:   10
 12190 ;; This function calls:
 12191 ;;		Nothing
 12192 ;; This function is called by:
 12193 ;;		_setup_uart
 12194 ;;		_leMedidas
 12195 ;;		_sprintf
 12196 ;; This function uses a non-reentrant model
 12197 ;;
 12198                           
 12199                           	psect	text40
 12200  003E06                     __ptext40:
 12201                           	opt stack 0
 12202  003E06                     ___lldiv:
 12203                           	opt stack 19
 12204                           
 12205                           ; BSR set to: 0
 12206                           ;incstack = 0
 12207  003E06  0E00               	movlw	0
 12208  003E08  0100               	movlb	0	; () banked
 12209  003E0A  6F68               	movwf	___lldiv@quotient& (0+255),b
 12210  003E0C  0E00               	movlw	0
 12211  003E0E  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 12212  003E10  0E00               	movlw	0
 12213  003E12  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 12214  003E14  0E00               	movlw	0
 12215  003E16  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 12216                           
 12217                           ; BSR set to: 0
 12218  003E18  5164               	movf	___lldiv@divisor& (0+255),w,b
 12219  003E1A  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 12220  003E1C  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 12221  003E1E  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 12222  003E20  B4D8               	btfsc	status,2,c
 12223  003E22  D02A               	goto	l2711
 12224                           
 12225                           ; BSR set to: 0
 12226  003E24  0E01               	movlw	1
 12227  003E26  6F6C               	movwf	___lldiv@counter& (0+255),b
 12228  003E28  D006               	goto	l2706
 12229  003E2A                     
 12230                           ; BSR set to: 0
 12231                           
 12232                           ; BSR set to: 0
 12233  003E2A  90D8               	bcf	status,0,c
 12234  003E2C  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 12235  003E2E  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 12236  003E30  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 12237  003E32  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 12238  003E34  2B6C               	incf	___lldiv@counter& (0+255),f,b
 12239  003E36                     l2706:
 12240                           
 12241                           ; BSR set to: 0
 12242                           
 12243                           ; BSR set to: 0
 12244  003E36  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 12245  003E38  D7F8               	goto	l2707
 12246  003E3A                     u6760:
 12247                           
 12248                           ; BSR set to: 0
 12249                           
 12250                           ; BSR set to: 0
 12251                           
 12252                           ; BSR set to: 0
 12253  003E3A  90D8               	bcf	status,0,c
 12254  003E3C  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 12255  003E3E  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 12256  003E40  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 12257  003E42  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 12258                           
 12259                           ; BSR set to: 0
 12260  003E44  5164               	movf	___lldiv@divisor& (0+255),w,b
 12261  003E46  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 12262  003E48  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 12263  003E4A  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 12264  003E4C  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 12265  003E4E  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 12266  003E50  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 12267  003E52  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 12268  003E54  A0D8               	btfss	status,0,c
 12269  003E56  D009               	goto	l2710
 12270                           
 12271                           ; BSR set to: 0
 12272  003E58  5164               	movf	___lldiv@divisor& (0+255),w,b
 12273  003E5A  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 12274  003E5C  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 12275  003E5E  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 12276  003E60  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 12277  003E62  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 12278  003E64  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 12279  003E66  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 12280                           
 12281                           ; BSR set to: 0
 12282  003E68  8168               	bsf	___lldiv@quotient& (0+255),0,b
 12283  003E6A                     l2710:
 12284                           
 12285                           ; BSR set to: 0
 12286                           
 12287                           ; BSR set to: 0
 12288  003E6A  90D8               	bcf	status,0,c
 12289  003E6C  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 12290  003E6E  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 12291  003E70  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 12292  003E72  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 12293                           
 12294                           ; BSR set to: 0
 12295  003E74  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 12296  003E76  D7E1               	goto	u6760
 12297  003E78                     l2711:
 12298                           
 12299                           ; BSR set to: 0
 12300                           
 12301                           ; BSR set to: 0
 12302  003E78  C068  F060         	movff	___lldiv@quotient,?___lldiv
 12303  003E7C  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 12304  003E80  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 12305  003E84  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 12306                           
 12307                           ; BSR set to: 0
 12308  003E88  0012               	return		;funcret
 12309  003E8A                     __end_of___lldiv:
 12310                           	opt stack 0
 12311                           tblptru	equ	0xFF8
 12312                           tblptrh	equ	0xFF7
 12313                           tblptrl	equ	0xFF6
 12314                           tablat	equ	0xFF5
 12315                           prodh	equ	0xFF4
 12316                           prodl	equ	0xFF3
 12317                           intcon	equ	0xFF2
 12318                           postinc0	equ	0xFEE
 12319                           wreg	equ	0xFE8
 12320                           indf1	equ	0xFE7
 12321                           postdec1	equ	0xFE5
 12322                           fsr1h	equ	0xFE2
 12323                           fsr1l	equ	0xFE1
 12324                           indf2	equ	0xFDF
 12325                           postinc2	equ	0xFDE
 12326                           postdec2	equ	0xFDD
 12327                           plusw2	equ	0xFDB
 12328                           fsr2h	equ	0xFDA
 12329                           fsr2l	equ	0xFD9
 12330                           status	equ	0xFD8
 12331                           
 12332 ;; *************** function ___fttol *****************
 12333 ;; Defined at:
 12334 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\fttol.c"
 12335 ;; Parameters:    Size  Location     Type
 12336 ;;  f1              3   88[BANK0 ] float 
 12337 ;; Auto vars:     Size  Location     Type
 12338 ;;  lval            4   98[BANK0 ] unsigned long 
 12339 ;;  exp1            1  102[BANK0 ] unsigned char 
 12340 ;;  sign1           1   97[BANK0 ] unsigned char 
 12341 ;; Return value:  Size  Location     Type
 12342 ;;                  4   88[BANK0 ] long 
 12343 ;; Registers used:
 12344 ;;		wreg, status,2, status,0
 12345 ;; Tracked objects:
 12346 ;;		On entry : 0/0
 12347 ;;		On exit  : 0/0
 12348 ;;		Unchanged: 0/0
 12349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12350 ;;      Params:         0       4       0       0       0       0       0       0       0
 12351 ;;      Locals:         0       6       0       0       0       0       0       0       0
 12352 ;;      Temps:          0       5       0       0       0       0       0       0       0
 12353 ;;      Totals:         0      15       0       0       0       0       0       0       0
 12354 ;;Total ram usage:       15 bytes
 12355 ;; Hardware stack levels used:    1
 12356 ;; Hardware stack levels required when called:   10
 12357 ;; This function calls:
 12358 ;;		Nothing
 12359 ;; This function is called by:
 12360 ;;		_main
 12361 ;;		_sprintf
 12362 ;; This function uses a non-reentrant model
 12363 ;;
 12364                           
 12365                           	psect	text41
 12366  003000                     __ptext41:
 12367                           	opt stack 0
 12368  003000                     ___fttol:
 12369                           	opt stack 20
 12370                           
 12371                           ; BSR set to: 0
 12372                           ;incstack = 0
 12373  003000  C0BA  F0BC         	movff	___fttol@f1+2,??___fttol
 12374  003004  0100               	movlb	0	; () banked
 12375  003006  6BBD               	clrf	(??___fttol+1)& (0+255),b
 12376  003008  6BBE               	clrf	(??___fttol+2)& (0+255),b
 12377  00300A  35B9               	rlcf	(___fttol@f1+1)& (0+255),w,b
 12378  00300C  37BC               	rlcf	??___fttol& (0+255),f,b
 12379  00300E  E301               	bnc	u6671
 12380  003010  81BD               	bsf	(??___fttol+1)& (0+255),0,b
 12381  003012                     u6671:
 12382  003012  51BC               	movf	??___fttol& (0+255),w,b
 12383  003014  6FC6               	movwf	___fttol@exp1& (0+255),b
 12384  003016  51C6               	movf	___fttol@exp1& (0+255),w,b
 12385  003018  A4D8               	btfss	status,2,c
 12386  00301A  D009               	goto	l2665
 12387                           
 12388                           ; BSR set to: 0
 12389  00301C  0E00               	movlw	0
 12390  00301E  6FB8               	movwf	?___fttol& (0+255),b
 12391  003020  0E00               	movlw	0
 12392  003022  6FB9               	movwf	(?___fttol+1)& (0+255),b
 12393  003024  0E00               	movlw	0
 12394  003026  6FBA               	movwf	(?___fttol+2)& (0+255),b
 12395  003028  0E00               	movlw	0
 12396  00302A  6FBB               	movwf	(?___fttol+3)& (0+255),b
 12397                           
 12398                           ; BSR set to: 0
 12399  00302C  0012               	return	
 12400  00302E                     l2665:
 12401                           
 12402                           ; BSR set to: 0
 12403                           
 12404                           ; BSR set to: 0
 12405  00302E  0E17               	movlw	23
 12406  003030  6FBC               	movwf	??___fttol& (0+255),b
 12407  003032  C0B8  F0BD         	movff	___fttol@f1,??___fttol+1
 12408  003036  C0B9  F0BE         	movff	___fttol@f1+1,??___fttol+2
 12409  00303A  C0BA  F0BF         	movff	___fttol@f1+2,??___fttol+3
 12410  00303E  29BC               	incf	??___fttol& (0+255),w,b
 12411  003040  6FC0               	movwf	(??___fttol+4)& (0+255),b
 12412  003042  D004               	goto	u6690
 12413  003044                     u6695:
 12414  003044  90D8               	bcf	status,0,c
 12415  003046  33BF               	rrcf	(??___fttol+3)& (0+255),f,b
 12416  003048  33BE               	rrcf	(??___fttol+2)& (0+255),f,b
 12417  00304A  33BD               	rrcf	(??___fttol+1)& (0+255),f,b
 12418  00304C                     u6690:
 12419  00304C  2FC0               	decfsz	(??___fttol+4)& (0+255),f,b
 12420  00304E  D7FA               	goto	u6695
 12421  003050  0100               	movlb	0	; () banked
 12422  003052  51BD               	movf	(??___fttol+1)& (0+255),w,b
 12423  003054  6FC1               	movwf	___fttol@sign1& (0+255),b
 12424                           
 12425                           ; BSR set to: 0
 12426  003056  8FB9               	bsf	(___fttol@f1+1)& (0+255),7,b
 12427                           
 12428                           ; BSR set to: 0
 12429  003058  0EFF               	movlw	255
 12430  00305A  17B8               	andwf	___fttol@f1& (0+255),f,b
 12431  00305C  0EFF               	movlw	255
 12432  00305E  17B9               	andwf	(___fttol@f1+1)& (0+255),f,b
 12433  003060  0E00               	movlw	0
 12434  003062  17BA               	andwf	(___fttol@f1+2)& (0+255),f,b
 12435                           
 12436                           ; BSR set to: 0
 12437  003064  51B8               	movf	___fttol@f1& (0+255),w,b
 12438  003066  6FC2               	movwf	___fttol@lval& (0+255),b
 12439  003068  51B9               	movf	(___fttol@f1+1)& (0+255),w,b
 12440  00306A  6FC3               	movwf	(___fttol@lval+1)& (0+255),b
 12441  00306C  51BA               	movf	(___fttol@f1+2)& (0+255),w,b
 12442  00306E  6FC4               	movwf	(___fttol@lval+2)& (0+255),b
 12443  003070  6BC5               	clrf	(___fttol@lval+3)& (0+255),b
 12444                           
 12445                           ; BSR set to: 0
 12446  003072  0E8E               	movlw	142
 12447  003074  5FC6               	subwf	___fttol@exp1& (0+255),f,b
 12448                           
 12449                           ; BSR set to: 0
 12450  003076  AFC6               	btfss	___fttol@exp1& (0+255),7,b
 12451  003078  D016               	goto	l2667
 12452                           
 12453                           ; BSR set to: 0
 12454  00307A  51C6               	movf	___fttol@exp1& (0+255),w,b
 12455  00307C  0A80               	xorlw	128
 12456  00307E  0F8F               	addlw	143
 12457  003080  B0D8               	btfsc	status,0,c
 12458  003082  D009               	goto	l2668
 12459                           
 12460                           ; BSR set to: 0
 12461  003084  0E00               	movlw	0
 12462  003086  6FB8               	movwf	?___fttol& (0+255),b
 12463  003088  0E00               	movlw	0
 12464  00308A  6FB9               	movwf	(?___fttol+1)& (0+255),b
 12465  00308C  0E00               	movlw	0
 12466  00308E  6FBA               	movwf	(?___fttol+2)& (0+255),b
 12467  003090  0E00               	movlw	0
 12468  003092  6FBB               	movwf	(?___fttol+3)& (0+255),b
 12469                           
 12470                           ; BSR set to: 0
 12471  003094  0012               	return	
 12472  003096                     l2668:
 12473                           
 12474                           ; BSR set to: 0
 12475                           
 12476                           ; BSR set to: 0
 12477                           
 12478                           ; BSR set to: 0
 12479  003096  90D8               	bcf	status,0,c
 12480  003098  33C5               	rrcf	(___fttol@lval+3)& (0+255),f,b
 12481  00309A  33C4               	rrcf	(___fttol@lval+2)& (0+255),f,b
 12482  00309C  33C3               	rrcf	(___fttol@lval+1)& (0+255),f,b
 12483  00309E  33C2               	rrcf	___fttol@lval& (0+255),f,b
 12484                           
 12485                           ; BSR set to: 0
 12486  0030A0  3FC6               	incfsz	___fttol@exp1& (0+255),f,b
 12487  0030A2  D7F9               	goto	l2668
 12488                           
 12489                           ; BSR set to: 0
 12490  0030A4  D015               	goto	u6730
 12491  0030A6                     l2667:
 12492                           
 12493                           ; BSR set to: 0
 12494                           
 12495                           ; BSR set to: 0
 12496  0030A6  0E17               	movlw	23
 12497  0030A8  65C6               	cpfsgt	___fttol@exp1& (0+255),b
 12498  0030AA  D00F               	goto	l2673
 12499                           
 12500                           ; BSR set to: 0
 12501  0030AC  0E00               	movlw	0
 12502  0030AE  6FB8               	movwf	?___fttol& (0+255),b
 12503  0030B0  0E00               	movlw	0
 12504  0030B2  6FB9               	movwf	(?___fttol+1)& (0+255),b
 12505  0030B4  0E00               	movlw	0
 12506  0030B6  6FBA               	movwf	(?___fttol+2)& (0+255),b
 12507  0030B8  0E00               	movlw	0
 12508  0030BA  6FBB               	movwf	(?___fttol+3)& (0+255),b
 12509                           
 12510                           ; BSR set to: 0
 12511  0030BC  0012               	return	
 12512  0030BE                     
 12513                           ; BSR set to: 0
 12514                           
 12515                           ; BSR set to: 0
 12516  0030BE  90D8               	bcf	status,0,c
 12517  0030C0  37C2               	rlcf	___fttol@lval& (0+255),f,b
 12518  0030C2  37C3               	rlcf	(___fttol@lval+1)& (0+255),f,b
 12519  0030C4  37C4               	rlcf	(___fttol@lval+2)& (0+255),f,b
 12520  0030C6  37C5               	rlcf	(___fttol@lval+3)& (0+255),f,b
 12521  0030C8  07C6               	decf	___fttol@exp1& (0+255),f,b
 12522  0030CA                     l2673:
 12523                           
 12524                           ; BSR set to: 0
 12525                           
 12526                           ; BSR set to: 0
 12527  0030CA  51C6               	movf	___fttol@exp1& (0+255),w,b
 12528  0030CC  A4D8               	btfss	status,2,c
 12529  0030CE  D7F7               	goto	l2674
 12530  0030D0                     u6730:
 12531                           
 12532                           ; BSR set to: 0
 12533                           
 12534                           ; BSR set to: 0
 12535                           
 12536                           ; BSR set to: 0
 12537  0030D0  51C1               	movf	___fttol@sign1& (0+255),w,b
 12538  0030D2  B4D8               	btfsc	status,2,c
 12539  0030D4  D008               	goto	l2676
 12540                           
 12541                           ; BSR set to: 0
 12542  0030D6  1FC5               	comf	(___fttol@lval+3)& (0+255),f,b
 12543  0030D8  1FC4               	comf	(___fttol@lval+2)& (0+255),f,b
 12544  0030DA  1FC3               	comf	(___fttol@lval+1)& (0+255),f,b
 12545  0030DC  6DC2               	negf	___fttol@lval& (0+255),b
 12546  0030DE  0E00               	movlw	0
 12547  0030E0  23C3               	addwfc	(___fttol@lval+1)& (0+255),f,b
 12548  0030E2  23C4               	addwfc	(___fttol@lval+2)& (0+255),f,b
 12549  0030E4  23C5               	addwfc	(___fttol@lval+3)& (0+255),f,b
 12550  0030E6                     l2676:
 12551                           
 12552                           ; BSR set to: 0
 12553                           
 12554                           ; BSR set to: 0
 12555  0030E6  C0C2  F0B8         	movff	___fttol@lval,?___fttol
 12556  0030EA  C0C3  F0B9         	movff	___fttol@lval+1,?___fttol+1
 12557  0030EE  C0C4  F0BA         	movff	___fttol@lval+2,?___fttol+2
 12558  0030F2  C0C5  F0BB         	movff	___fttol@lval+3,?___fttol+3
 12559  0030F6  0012               	return	
 12560  0030F8                     __end_of___fttol:
 12561                           	opt stack 0
 12562                           tblptru	equ	0xFF8
 12563                           tblptrh	equ	0xFF7
 12564                           tblptrl	equ	0xFF6
 12565                           tablat	equ	0xFF5
 12566                           prodh	equ	0xFF4
 12567                           prodl	equ	0xFF3
 12568                           intcon	equ	0xFF2
 12569                           postinc0	equ	0xFEE
 12570                           wreg	equ	0xFE8
 12571                           indf1	equ	0xFE7
 12572                           postdec1	equ	0xFE5
 12573                           fsr1h	equ	0xFE2
 12574                           fsr1l	equ	0xFE1
 12575                           indf2	equ	0xFDF
 12576                           postinc2	equ	0xFDE
 12577                           postdec2	equ	0xFDD
 12578                           plusw2	equ	0xFDB
 12579                           fsr2h	equ	0xFDA
 12580                           fsr2l	equ	0xFD9
 12581                           status	equ	0xFD8
 12582                           
 12583 ;; *************** function ___ftsub *****************
 12584 ;; Defined at:
 12585 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftsub.c"
 12586 ;; Parameters:    Size  Location     Type
 12587 ;;  f1              3   32[BANK0 ] float 
 12588 ;;  f2              3   35[BANK0 ] float 
 12589 ;; Auto vars:     Size  Location     Type
 12590 ;;		None
 12591 ;; Return value:  Size  Location     Type
 12592 ;;                  3   32[BANK0 ] float 
 12593 ;; Registers used:
 12594 ;;		wreg, status,2, status,0, cstack
 12595 ;; Tracked objects:
 12596 ;;		On entry : 0/0
 12597 ;;		On exit  : 0/0
 12598 ;;		Unchanged: 0/0
 12599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12600 ;;      Params:         0       6       0       0       0       0       0       0       0
 12601 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12602 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12603 ;;      Totals:         0       6       0       0       0       0       0       0       0
 12604 ;;Total ram usage:        6 bytes
 12605 ;; Hardware stack levels used:    1
 12606 ;; Hardware stack levels required when called:   12
 12607 ;; This function calls:
 12608 ;;		___ftadd
 12609 ;; This function is called by:
 12610 ;;		_sprintf
 12611 ;; This function uses a non-reentrant model
 12612 ;;
 12613                           
 12614                           	psect	text42
 12615  004562                     __ptext42:
 12616                           	opt stack 0
 12617  004562                     ___ftsub:
 12618                           	opt stack 16
 12619                           
 12620                           ; BSR set to: 0
 12621                           ;incstack = 0
 12622  004562  0100               	movlb	0	; () banked
 12623  004564  5183               	movf	___ftsub@f2& (0+255),w,b
 12624  004566  1184               	iorwf	(___ftsub@f2+1)& (0+255),w,b
 12625  004568  1185               	iorwf	(___ftsub@f2+2)& (0+255),w,b
 12626  00456A  B4D8               	btfsc	status,2,c
 12627  00456C  D006               	goto	l2661
 12628                           
 12629                           ; BSR set to: 0
 12630  00456E  0E00               	movlw	0
 12631  004570  1B83               	xorwf	___ftsub@f2& (0+255),f,b
 12632  004572  0E00               	movlw	0
 12633  004574  1B84               	xorwf	(___ftsub@f2+1)& (0+255),f,b
 12634  004576  0E80               	movlw	128
 12635  004578  1B85               	xorwf	(___ftsub@f2+2)& (0+255),f,b
 12636  00457A                     l2661:
 12637                           
 12638                           ; BSR set to: 0
 12639                           
 12640                           ; BSR set to: 0
 12641  00457A  C080  F074         	movff	___ftsub@f1,___ftadd@f1
 12642  00457E  C081  F075         	movff	___ftsub@f1+1,___ftadd@f1+1
 12643  004582  C082  F076         	movff	___ftsub@f1+2,___ftadd@f1+2
 12644  004586  C083  F077         	movff	___ftsub@f2,___ftadd@f2
 12645  00458A  C084  F078         	movff	___ftsub@f2+1,___ftadd@f2+1
 12646  00458E  C085  F079         	movff	___ftsub@f2+2,___ftadd@f2+2
 12647  004592  ECA5  F00D         	call	___ftadd	;wreg free
 12648  004596  C074  F080         	movff	?___ftadd,?___ftsub
 12649  00459A  C075  F081         	movff	?___ftadd+1,?___ftsub+1
 12650  00459E  C076  F082         	movff	?___ftadd+2,?___ftsub+2
 12651  0045A2  0012               	return	
 12652  0045A4                     __end_of___ftsub:
 12653                           	opt stack 0
 12654                           tblptru	equ	0xFF8
 12655                           tblptrh	equ	0xFF7
 12656                           tblptrl	equ	0xFF6
 12657                           tablat	equ	0xFF5
 12658                           prodh	equ	0xFF4
 12659                           prodl	equ	0xFF3
 12660                           intcon	equ	0xFF2
 12661                           postinc0	equ	0xFEE
 12662                           wreg	equ	0xFE8
 12663                           indf1	equ	0xFE7
 12664                           postdec1	equ	0xFE5
 12665                           fsr1h	equ	0xFE2
 12666                           fsr1l	equ	0xFE1
 12667                           indf2	equ	0xFDF
 12668                           postinc2	equ	0xFDE
 12669                           postdec2	equ	0xFDD
 12670                           plusw2	equ	0xFDB
 12671                           fsr2h	equ	0xFDA
 12672                           fsr2l	equ	0xFD9
 12673                           status	equ	0xFD8
 12674                           
 12675 ;; *************** function ___ftadd *****************
 12676 ;; Defined at:
 12677 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftadd.c"
 12678 ;; Parameters:    Size  Location     Type
 12679 ;;  f1              3   20[BANK0 ] float 
 12680 ;;  f2              3   23[BANK0 ] float 
 12681 ;; Auto vars:     Size  Location     Type
 12682 ;;  exp1            1   31[BANK0 ] unsigned char 
 12683 ;;  exp2            1   30[BANK0 ] unsigned char 
 12684 ;;  sign            1   29[BANK0 ] unsigned char 
 12685 ;; Return value:  Size  Location     Type
 12686 ;;                  3   20[BANK0 ] float 
 12687 ;; Registers used:
 12688 ;;		wreg, status,2, status,0, cstack
 12689 ;; Tracked objects:
 12690 ;;		On entry : 0/0
 12691 ;;		On exit  : 0/0
 12692 ;;		Unchanged: 0/0
 12693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12694 ;;      Params:         0       6       0       0       0       0       0       0       0
 12695 ;;      Locals:         0       3       0       0       0       0       0       0       0
 12696 ;;      Temps:          0       3       0       0       0       0       0       0       0
 12697 ;;      Totals:         0      12       0       0       0       0       0       0       0
 12698 ;;Total ram usage:       12 bytes
 12699 ;; Hardware stack levels used:    1
 12700 ;; Hardware stack levels required when called:   11
 12701 ;; This function calls:
 12702 ;;		___ftpack
 12703 ;; This function is called by:
 12704 ;;		_le4a20
 12705 ;;		_sprintf
 12706 ;;		___ftsub
 12707 ;; This function uses a non-reentrant model
 12708 ;;
 12709                           
 12710                           	psect	text43
 12711  001B4A                     __ptext43:
 12712                           	opt stack 0
 12713  001B4A                     ___ftadd:
 12714                           	opt stack 18
 12715                           
 12716                           ;incstack = 0
 12717  001B4A  C076  F07A         	movff	___ftadd@f1+2,??___ftadd
 12718  001B4E  0100               	movlb	0	; () banked
 12719  001B50  6B7B               	clrf	(??___ftadd+1)& (0+255),b
 12720  001B52  6B7C               	clrf	(??___ftadd+2)& (0+255),b
 12721  001B54  3575               	rlcf	(___ftadd@f1+1)& (0+255),w,b
 12722  001B56  377A               	rlcf	??___ftadd& (0+255),f,b
 12723  001B58  E301               	bnc	u5641
 12724  001B5A  817B               	bsf	(??___ftadd+1)& (0+255),0,b
 12725  001B5C                     u5641:
 12726  001B5C  517A               	movf	??___ftadd& (0+255),w,b
 12727  001B5E  6F7F               	movwf	___ftadd@exp1& (0+255),b
 12728  001B60  C079  F07A         	movff	___ftadd@f2+2,??___ftadd
 12729  001B64  6B7B               	clrf	(??___ftadd+1)& (0+255),b
 12730  001B66  6B7C               	clrf	(??___ftadd+2)& (0+255),b
 12731  001B68  3578               	rlcf	(___ftadd@f2+1)& (0+255),w,b
 12732  001B6A  377A               	rlcf	??___ftadd& (0+255),f,b
 12733  001B6C  E301               	bnc	u5651
 12734  001B6E  817B               	bsf	(??___ftadd+1)& (0+255),0,b
 12735  001B70                     u5651:
 12736  001B70  517A               	movf	??___ftadd& (0+255),w,b
 12737  001B72  6F7E               	movwf	___ftadd@exp2& (0+255),b
 12738                           
 12739                           ; BSR set to: 0
 12740  001B74  517F               	movf	___ftadd@exp1& (0+255),w,b
 12741  001B76  B4D8               	btfsc	status,2,c
 12742  001B78  D00B               	goto	u5680
 12743                           
 12744                           ; BSR set to: 0
 12745  001B7A  517E               	movf	___ftadd@exp2& (0+255),w,b
 12746  001B7C  5D7F               	subwf	___ftadd@exp1& (0+255),w,b
 12747  001B7E  B0D8               	btfsc	status,0,c
 12748  001B80  D00E               	goto	l2579
 12749                           
 12750                           ; BSR set to: 0
 12751  001B82  517F               	movf	___ftadd@exp1& (0+255),w,b
 12752  001B84  0800               	sublw	0
 12753  001B86  257E               	addwf	___ftadd@exp2& (0+255),w,b
 12754  001B88  6F7A               	movwf	??___ftadd& (0+255),b
 12755  001B8A  0E18               	movlw	24
 12756  001B8C  657A               	cpfsgt	??___ftadd& (0+255),b
 12757  001B8E  D007               	goto	l2579
 12758  001B90                     u5680:
 12759                           
 12760                           ; BSR set to: 0
 12761  001B90  C077  F074         	movff	___ftadd@f2,?___ftadd
 12762  001B94  C078  F075         	movff	___ftadd@f2+1,?___ftadd+1
 12763  001B98  C079  F076         	movff	___ftadd@f2+2,?___ftadd+2
 12764  001B9C  0012               	return	
 12765  001B9E                     l2579:
 12766                           
 12767                           ; BSR set to: 0
 12768                           
 12769                           ; BSR set to: 0
 12770  001B9E  517E               	movf	___ftadd@exp2& (0+255),w,b
 12771  001BA0  B4D8               	btfsc	status,2,c
 12772  001BA2  D00B               	goto	u5710
 12773                           
 12774                           ; BSR set to: 0
 12775  001BA4  517F               	movf	___ftadd@exp1& (0+255),w,b
 12776  001BA6  5D7E               	subwf	___ftadd@exp2& (0+255),w,b
 12777  001BA8  B0D8               	btfsc	status,0,c
 12778  001BAA  D00E               	goto	l2583
 12779                           
 12780                           ; BSR set to: 0
 12781  001BAC  517E               	movf	___ftadd@exp2& (0+255),w,b
 12782  001BAE  0800               	sublw	0
 12783  001BB0  257F               	addwf	___ftadd@exp1& (0+255),w,b
 12784  001BB2  6F7A               	movwf	??___ftadd& (0+255),b
 12785  001BB4  0E18               	movlw	24
 12786  001BB6  657A               	cpfsgt	??___ftadd& (0+255),b
 12787  001BB8  D007               	goto	l2583
 12788  001BBA                     u5710:
 12789                           
 12790                           ; BSR set to: 0
 12791  001BBA  C074  F074         	movff	___ftadd@f1,?___ftadd
 12792  001BBE  C075  F075         	movff	___ftadd@f1+1,?___ftadd+1
 12793  001BC2  C076  F076         	movff	___ftadd@f1+2,?___ftadd+2
 12794  001BC6  0012               	return	
 12795  001BC8                     l2583:
 12796                           
 12797                           ; BSR set to: 0
 12798                           
 12799                           ; BSR set to: 0
 12800  001BC8  0E06               	movlw	6
 12801  001BCA  6F7D               	movwf	___ftadd@sign& (0+255),b
 12802                           
 12803                           ; BSR set to: 0
 12804  001BCC  BF76               	btfsc	(___ftadd@f1+2)& (0+255),7,b
 12805                           
 12806                           ; BSR set to: 0
 12807  001BCE  8F7D               	bsf	___ftadd@sign& (0+255),7,b
 12808                           
 12809                           ; BSR set to: 0
 12810                           
 12811                           ; BSR set to: 0
 12812  001BD0  BF79               	btfsc	(___ftadd@f2+2)& (0+255),7,b
 12813                           
 12814                           ; BSR set to: 0
 12815  001BD2  8D7D               	bsf	___ftadd@sign& (0+255),6,b
 12816                           
 12817                           ; BSR set to: 0
 12818  001BD4  8F75               	bsf	(___ftadd@f1+1)& (0+255),7,b
 12819                           
 12820                           ; BSR set to: 0
 12821  001BD6  0EFF               	movlw	255
 12822  001BD8  1774               	andwf	___ftadd@f1& (0+255),f,b
 12823  001BDA  0EFF               	movlw	255
 12824  001BDC  1775               	andwf	(___ftadd@f1+1)& (0+255),f,b
 12825  001BDE  0E00               	movlw	0
 12826  001BE0  1776               	andwf	(___ftadd@f1+2)& (0+255),f,b
 12827  001BE2  8F78               	bsf	(___ftadd@f2+1)& (0+255),7,b
 12828                           
 12829                           ; BSR set to: 0
 12830  001BE4  0EFF               	movlw	255
 12831  001BE6  1777               	andwf	___ftadd@f2& (0+255),f,b
 12832  001BE8  0EFF               	movlw	255
 12833  001BEA  1778               	andwf	(___ftadd@f2+1)& (0+255),f,b
 12834  001BEC  0E00               	movlw	0
 12835  001BEE  1779               	andwf	(___ftadd@f2+2)& (0+255),f,b
 12836                           
 12837                           ; BSR set to: 0
 12838  001BF0  517E               	movf	___ftadd@exp2& (0+255),w,b
 12839  001BF2  5D7F               	subwf	___ftadd@exp1& (0+255),w,b
 12840  001BF4  B0D8               	btfsc	status,0,c
 12841  001BF6  D01B               	goto	l2588
 12842  001BF8                     u5740:
 12843                           
 12844                           ; BSR set to: 0
 12845                           
 12846                           ; BSR set to: 0
 12847  001BF8  90D8               	bcf	status,0,c
 12848  001BFA  3777               	rlcf	___ftadd@f2& (0+255),f,b
 12849  001BFC  3778               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 12850  001BFE  3779               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 12851  001C00  077E               	decf	___ftadd@exp2& (0+255),f,b
 12852                           
 12853                           ; BSR set to: 0
 12854  001C02  517F               	movf	___ftadd@exp1& (0+255),w,b
 12855  001C04  197E               	xorwf	___ftadd@exp2& (0+255),w,b
 12856  001C06  B4D8               	btfsc	status,2,c
 12857  001C08  D00D               	goto	l2593
 12858                           
 12859                           ; BSR set to: 0
 12860  001C0A  077D               	decf	___ftadd@sign& (0+255),f,b
 12861  001C0C  C07D  F07A         	movff	___ftadd@sign,??___ftadd
 12862  001C10  0E07               	movlw	7
 12863  001C12  177A               	andwf	??___ftadd& (0+255),f,b
 12864  001C14  B4D8               	btfsc	status,2,c
 12865  001C16  D006               	goto	l2593
 12866  001C18  D7EF               	goto	u5740
 12867  001C1A                     
 12868                           ; BSR set to: 0
 12869                           
 12870                           ; BSR set to: 0
 12871  001C1A  90D8               	bcf	status,0,c
 12872  001C1C  3376               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 12873  001C1E  3375               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 12874  001C20  3374               	rrcf	___ftadd@f1& (0+255),f,b
 12875  001C22  2B7F               	incf	___ftadd@exp1& (0+255),f,b
 12876  001C24                     l2593:
 12877                           
 12878                           ; BSR set to: 0
 12879                           
 12880                           ; BSR set to: 0
 12881  001C24  517E               	movf	___ftadd@exp2& (0+255),w,b
 12882  001C26  197F               	xorwf	___ftadd@exp1& (0+255),w,b
 12883  001C28  B4D8               	btfsc	status,2,c
 12884  001C2A  D01F               	goto	u5810
 12885  001C2C  D7F6               	goto	l2594
 12886  001C2E                     l2588:
 12887                           
 12888                           ; BSR set to: 0
 12889                           
 12890                           ; BSR set to: 0
 12891  001C2E  517F               	movf	___ftadd@exp1& (0+255),w,b
 12892  001C30  5D7E               	subwf	___ftadd@exp2& (0+255),w,b
 12893  001C32  B0D8               	btfsc	status,0,c
 12894  001C34  D01A               	goto	u5810
 12895  001C36                     u5780:
 12896                           
 12897                           ; BSR set to: 0
 12898                           
 12899                           ; BSR set to: 0
 12900  001C36  90D8               	bcf	status,0,c
 12901  001C38  3774               	rlcf	___ftadd@f1& (0+255),f,b
 12902  001C3A  3775               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 12903  001C3C  3776               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 12904  001C3E  077F               	decf	___ftadd@exp1& (0+255),f,b
 12905                           
 12906                           ; BSR set to: 0
 12907  001C40  517F               	movf	___ftadd@exp1& (0+255),w,b
 12908  001C42  197E               	xorwf	___ftadd@exp2& (0+255),w,b
 12909  001C44  B4D8               	btfsc	status,2,c
 12910  001C46  D00D               	goto	l2602
 12911                           
 12912                           ; BSR set to: 0
 12913  001C48  077D               	decf	___ftadd@sign& (0+255),f,b
 12914  001C4A  C07D  F07A         	movff	___ftadd@sign,??___ftadd
 12915  001C4E  0E07               	movlw	7
 12916  001C50  177A               	andwf	??___ftadd& (0+255),f,b
 12917  001C52  B4D8               	btfsc	status,2,c
 12918  001C54  D006               	goto	l2602
 12919  001C56  D7EF               	goto	u5780
 12920  001C58                     
 12921                           ; BSR set to: 0
 12922                           
 12923                           ; BSR set to: 0
 12924  001C58  90D8               	bcf	status,0,c
 12925  001C5A  3379               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 12926  001C5C  3378               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 12927  001C5E  3377               	rrcf	___ftadd@f2& (0+255),f,b
 12928  001C60  2B7E               	incf	___ftadd@exp2& (0+255),f,b
 12929  001C62                     l2602:
 12930                           
 12931                           ; BSR set to: 0
 12932                           
 12933                           ; BSR set to: 0
 12934  001C62  517E               	movf	___ftadd@exp2& (0+255),w,b
 12935  001C64  197F               	xorwf	___ftadd@exp1& (0+255),w,b
 12936  001C66  A4D8               	btfss	status,2,c
 12937  001C68  D7F7               	goto	l2603
 12938  001C6A                     u5810:
 12939                           
 12940                           ; BSR set to: 0
 12941                           
 12942                           ; BSR set to: 0
 12943                           
 12944                           ; BSR set to: 0
 12945  001C6A  AF7D               	btfss	___ftadd@sign& (0+255),7,b
 12946  001C6C  D00C               	goto	l2605
 12947                           
 12948                           ; BSR set to: 0
 12949  001C6E  0EFF               	movlw	255
 12950  001C70  1B74               	xorwf	___ftadd@f1& (0+255),f,b
 12951  001C72  0EFF               	movlw	255
 12952  001C74  1B75               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 12953  001C76  0EFF               	movlw	255
 12954  001C78  1B76               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 12955  001C7A  0E01               	movlw	1
 12956  001C7C  2774               	addwf	___ftadd@f1& (0+255),f,b
 12957  001C7E  0E00               	movlw	0
 12958  001C80  2375               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 12959  001C82  0E00               	movlw	0
 12960  001C84  2376               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 12961  001C86                     l2605:
 12962                           
 12963                           ; BSR set to: 0
 12964  001C86  AD7D               	btfss	___ftadd@sign& (0+255),6,b
 12965  001C88  D00C               	goto	l2606
 12966                           
 12967                           ; BSR set to: 0
 12968  001C8A  0EFF               	movlw	255
 12969  001C8C  1B77               	xorwf	___ftadd@f2& (0+255),f,b
 12970  001C8E  0EFF               	movlw	255
 12971  001C90  1B78               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 12972  001C92  0EFF               	movlw	255
 12973  001C94  1B79               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 12974  001C96  0E01               	movlw	1
 12975  001C98  2777               	addwf	___ftadd@f2& (0+255),f,b
 12976  001C9A  0E00               	movlw	0
 12977  001C9C  2378               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 12978  001C9E  0E00               	movlw	0
 12979  001CA0  2379               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 12980  001CA2                     l2606:
 12981                           
 12982                           ; BSR set to: 0
 12983                           
 12984                           ; BSR set to: 0
 12985  001CA2  0E00               	movlw	0
 12986  001CA4  6F7D               	movwf	___ftadd@sign& (0+255),b
 12987                           
 12988                           ; BSR set to: 0
 12989  001CA6  5174               	movf	___ftadd@f1& (0+255),w,b
 12990  001CA8  2777               	addwf	___ftadd@f2& (0+255),f,b
 12991  001CAA  5175               	movf	(___ftadd@f1+1)& (0+255),w,b
 12992  001CAC  2378               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 12993  001CAE  5176               	movf	(___ftadd@f1+2)& (0+255),w,b
 12994  001CB0  2379               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 12995                           
 12996                           ; BSR set to: 0
 12997  001CB2  AF79               	btfss	(___ftadd@f2+2)& (0+255),7,b
 12998  001CB4  D00E               	goto	l2607
 12999                           
 13000                           ; BSR set to: 0
 13001  001CB6  0EFF               	movlw	255
 13002  001CB8  1B77               	xorwf	___ftadd@f2& (0+255),f,b
 13003  001CBA  0EFF               	movlw	255
 13004  001CBC  1B78               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 13005  001CBE  0EFF               	movlw	255
 13006  001CC0  1B79               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 13007  001CC2  0E01               	movlw	1
 13008  001CC4  2777               	addwf	___ftadd@f2& (0+255),f,b
 13009  001CC6  0E00               	movlw	0
 13010  001CC8  2378               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 13011  001CCA  0E00               	movlw	0
 13012  001CCC  2379               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 13013                           
 13014                           ; BSR set to: 0
 13015  001CCE  0E01               	movlw	1
 13016  001CD0  6F7D               	movwf	___ftadd@sign& (0+255),b
 13017  001CD2                     l2607:
 13018                           
 13019                           ; BSR set to: 0
 13020                           
 13021                           ; BSR set to: 0
 13022  001CD2  C077  F060         	movff	___ftadd@f2,___ftpack@arg
 13023  001CD6  C078  F061         	movff	___ftadd@f2+1,___ftpack@arg+1
 13024  001CDA  C079  F062         	movff	___ftadd@f2+2,___ftpack@arg+2
 13025  001CDE  C07F  F063         	movff	___ftadd@exp1,___ftpack@exp
 13026  001CE2  C07D  F064         	movff	___ftadd@sign,___ftpack@sign
 13027  001CE6  EC6B  F01B         	call	___ftpack	;wreg free
 13028  001CEA  C060  F074         	movff	?___ftpack,?___ftadd
 13029  001CEE  C061  F075         	movff	?___ftpack+1,?___ftadd+1
 13030  001CF2  C062  F076         	movff	?___ftpack+2,?___ftadd+2
 13031  001CF6  0012               	return	
 13032  001CF8                     __end_of___ftadd:
 13033                           	opt stack 0
 13034                           tblptru	equ	0xFF8
 13035                           tblptrh	equ	0xFF7
 13036                           tblptrl	equ	0xFF6
 13037                           tablat	equ	0xFF5
 13038                           prodh	equ	0xFF4
 13039                           prodl	equ	0xFF3
 13040                           intcon	equ	0xFF2
 13041                           postinc0	equ	0xFEE
 13042                           wreg	equ	0xFE8
 13043                           indf1	equ	0xFE7
 13044                           postdec1	equ	0xFE5
 13045                           fsr1h	equ	0xFE2
 13046                           fsr1l	equ	0xFE1
 13047                           indf2	equ	0xFDF
 13048                           postinc2	equ	0xFDE
 13049                           postdec2	equ	0xFDD
 13050                           plusw2	equ	0xFDB
 13051                           fsr2h	equ	0xFDA
 13052                           fsr2l	equ	0xFD9
 13053                           status	equ	0xFD8
 13054                           
 13055 ;; *************** function ___ftpack *****************
 13056 ;; Defined at:
 13057 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\float.c"
 13058 ;; Parameters:    Size  Location     Type
 13059 ;;  arg             3    0[BANK0 ] unsigned um
 13060 ;;  exp             1    3[BANK0 ] unsigned char 
 13061 ;;  sign            1    4[BANK0 ] unsigned char 
 13062 ;; Auto vars:     Size  Location     Type
 13063 ;;		None
 13064 ;; Return value:  Size  Location     Type
 13065 ;;                  3    0[BANK0 ] float 
 13066 ;; Registers used:
 13067 ;;		wreg, status,2, status,0
 13068 ;; Tracked objects:
 13069 ;;		On entry : 0/0
 13070 ;;		On exit  : 0/0
 13071 ;;		Unchanged: 0/0
 13072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13073 ;;      Params:         0       5       0       0       0       0       0       0       0
 13074 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13075 ;;      Temps:          0       3       0       0       0       0       0       0       0
 13076 ;;      Totals:         0       8       0       0       0       0       0       0       0
 13077 ;;Total ram usage:        8 bytes
 13078 ;; Hardware stack levels used:    1
 13079 ;; Hardware stack levels required when called:   10
 13080 ;; This function calls:
 13081 ;;		Nothing
 13082 ;; This function is called by:
 13083 ;;		___ftadd
 13084 ;;		___ftdiv
 13085 ;;		___ftmul
 13086 ;;		___lbtoft
 13087 ;;		___lltoft
 13088 ;; This function uses a non-reentrant model
 13089 ;;
 13090                           
 13091                           	psect	text44
 13092  0036D6                     __ptext44:
 13093                           	opt stack 0
 13094  0036D6                     ___ftpack:
 13095                           	opt stack 18
 13096                           
 13097                           ;incstack = 0
 13098  0036D6  0100               	movlb	0	; () banked
 13099  0036D8  5163               	movf	___ftpack@exp& (0+255),w,b
 13100  0036DA  B4D8               	btfsc	status,2,c
 13101  0036DC  D005               	goto	u5340
 13102                           
 13103                           ; BSR set to: 0
 13104  0036DE  5160               	movf	___ftpack@arg& (0+255),w,b
 13105  0036E0  1161               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 13106  0036E2  1162               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 13107  0036E4  A4D8               	btfss	status,2,c
 13108  0036E6  D00C               	goto	l2548
 13109  0036E8                     u5340:
 13110                           
 13111                           ; BSR set to: 0
 13112                           
 13113                           ; BSR set to: 0
 13114  0036E8  0E00               	movlw	0
 13115  0036EA  6F60               	movwf	?___ftpack& (0+255),b
 13116  0036EC  0E00               	movlw	0
 13117  0036EE  6F61               	movwf	(?___ftpack+1)& (0+255),b
 13118  0036F0  0E00               	movlw	0
 13119  0036F2  6F62               	movwf	(?___ftpack+2)& (0+255),b
 13120                           
 13121                           ; BSR set to: 0
 13122  0036F4  0012               	return	
 13123  0036F6                     
 13124                           ; BSR set to: 0
 13125                           
 13126                           ; BSR set to: 0
 13127  0036F6  2B63               	incf	___ftpack@exp& (0+255),f,b
 13128  0036F8  90D8               	bcf	status,0,c
 13129  0036FA  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 13130  0036FC  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 13131  0036FE  3360               	rrcf	___ftpack@arg& (0+255),f,b
 13132  003700                     l2548:
 13133                           
 13134                           ; BSR set to: 0
 13135                           
 13136                           ; BSR set to: 0
 13137  003700  0E00               	movlw	0
 13138  003702  1560               	andwf	___ftpack@arg& (0+255),w,b
 13139  003704  6F65               	movwf	??___ftpack& (0+255),b
 13140  003706  0E00               	movlw	0
 13141  003708  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
 13142  00370A  6F66               	movwf	(??___ftpack+1)& (0+255),b
 13143  00370C  0EFE               	movlw	254
 13144  00370E  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
 13145  003710  6F67               	movwf	(??___ftpack+2)& (0+255),b
 13146  003712  5165               	movf	??___ftpack& (0+255),w,b
 13147  003714  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
 13148  003716  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
 13149  003718  B4D8               	btfsc	status,2,c
 13150  00371A  D00C               	goto	l2551
 13151  00371C  D7EC               	goto	l2549
 13152  00371E                     
 13153                           ; BSR set to: 0
 13154                           
 13155                           ; BSR set to: 0
 13156  00371E  2B63               	incf	___ftpack@exp& (0+255),f,b
 13157                           
 13158                           ; BSR set to: 0
 13159  003720  0E01               	movlw	1
 13160  003722  2760               	addwf	___ftpack@arg& (0+255),f,b
 13161  003724  0E00               	movlw	0
 13162  003726  2361               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 13163  003728  0E00               	movlw	0
 13164  00372A  2362               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 13165  00372C  90D8               	bcf	status,0,c
 13166  00372E  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 13167  003730  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 13168  003732  3360               	rrcf	___ftpack@arg& (0+255),f,b
 13169  003734                     l2551:
 13170                           
 13171                           ; BSR set to: 0
 13172                           
 13173                           ; BSR set to: 0
 13174  003734  0E00               	movlw	0
 13175  003736  1560               	andwf	___ftpack@arg& (0+255),w,b
 13176  003738  6F65               	movwf	??___ftpack& (0+255),b
 13177  00373A  0E00               	movlw	0
 13178  00373C  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
 13179  00373E  6F66               	movwf	(??___ftpack+1)& (0+255),b
 13180  003740  0EFF               	movlw	255
 13181  003742  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
 13182  003744  6F67               	movwf	(??___ftpack+2)& (0+255),b
 13183  003746  5165               	movf	??___ftpack& (0+255),w,b
 13184  003748  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
 13185  00374A  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
 13186  00374C  B4D8               	btfsc	status,2,c
 13187  00374E  D006               	goto	l2554
 13188  003750  D7E6               	goto	l2552
 13189  003752                     
 13190                           ; BSR set to: 0
 13191                           
 13192                           ; BSR set to: 0
 13193  003752  0763               	decf	___ftpack@exp& (0+255),f,b
 13194  003754  90D8               	bcf	status,0,c
 13195  003756  3760               	rlcf	___ftpack@arg& (0+255),f,b
 13196  003758  3761               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 13197  00375A  3762               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 13198  00375C                     l2554:
 13199                           
 13200                           ; BSR set to: 0
 13201                           
 13202                           ; BSR set to: 0
 13203  00375C  BF61               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 13204  00375E  D003               	goto	u5380
 13205                           
 13206                           ; BSR set to: 0
 13207  003760  0E02               	movlw	2
 13208  003762  6163               	cpfslt	___ftpack@exp& (0+255),b
 13209  003764  D7F6               	goto	l2555
 13210  003766                     u5380:
 13211                           
 13212                           ; BSR set to: 0
 13213                           
 13214                           ; BSR set to: 0
 13215  003766  A163               	btfss	___ftpack@exp& (0+255),0,b
 13216                           
 13217                           ; BSR set to: 0
 13218  003768  9F61               	bcf	(___ftpack@arg+1)& (0+255),7,b
 13219                           
 13220                           ; BSR set to: 0
 13221                           
 13222                           ; BSR set to: 0
 13223  00376A  90D8               	bcf	status,0,c
 13224  00376C  3363               	rrcf	___ftpack@exp& (0+255),f,b
 13225  00376E  5163               	movf	___ftpack@exp& (0+255),w,b
 13226  003770  1362               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 13227                           
 13228                           ; BSR set to: 0
 13229  003772  5164               	movf	___ftpack@sign& (0+255),w,b
 13230  003774  A4D8               	btfss	status,2,c
 13231                           
 13232                           ; BSR set to: 0
 13233  003776  8F62               	bsf	(___ftpack@arg+2)& (0+255),7,b
 13234                           
 13235                           ; BSR set to: 0
 13236                           
 13237                           ; BSR set to: 0
 13238  003778  C060  F060         	movff	___ftpack@arg,?___ftpack
 13239  00377C  C061  F061         	movff	___ftpack@arg+1,?___ftpack+1
 13240  003780  C062  F062         	movff	___ftpack@arg+2,?___ftpack+2
 13241  003784  0012               	return	
 13242  003786                     __end_of___ftpack:
 13243                           	opt stack 0
 13244                           tblptru	equ	0xFF8
 13245                           tblptrh	equ	0xFF7
 13246                           tblptrl	equ	0xFF6
 13247                           tablat	equ	0xFF5
 13248                           prodh	equ	0xFF4
 13249                           prodl	equ	0xFF3
 13250                           intcon	equ	0xFF2
 13251                           postinc0	equ	0xFEE
 13252                           wreg	equ	0xFE8
 13253                           indf1	equ	0xFE7
 13254                           postdec1	equ	0xFE5
 13255                           fsr1h	equ	0xFE2
 13256                           fsr1l	equ	0xFE1
 13257                           indf2	equ	0xFDF
 13258                           postinc2	equ	0xFDE
 13259                           postdec2	equ	0xFDD
 13260                           plusw2	equ	0xFDB
 13261                           fsr2h	equ	0xFDA
 13262                           fsr2l	equ	0xFD9
 13263                           status	equ	0xFD8
 13264                           
 13265 ;; *************** function ___ftneg *****************
 13266 ;; Defined at:
 13267 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftneg.c"
 13268 ;; Parameters:    Size  Location     Type
 13269 ;;  f1              3    0[BANK0 ] float 
 13270 ;; Auto vars:     Size  Location     Type
 13271 ;;		None
 13272 ;; Return value:  Size  Location     Type
 13273 ;;                  3    0[BANK0 ] float 
 13274 ;; Registers used:
 13275 ;;		wreg, status,2, status,0
 13276 ;; Tracked objects:
 13277 ;;		On entry : 0/0
 13278 ;;		On exit  : 0/0
 13279 ;;		Unchanged: 0/0
 13280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13281 ;;      Params:         0       3       0       0       0       0       0       0       0
 13282 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13283 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13284 ;;      Totals:         0       3       0       0       0       0       0       0       0
 13285 ;;Total ram usage:        3 bytes
 13286 ;; Hardware stack levels used:    1
 13287 ;; Hardware stack levels required when called:   10
 13288 ;; This function calls:
 13289 ;;		Nothing
 13290 ;; This function is called by:
 13291 ;;		_sprintf
 13292 ;; This function uses a non-reentrant model
 13293 ;;
 13294                           
 13295                           	psect	text45
 13296  004886                     __ptext45:
 13297                           	opt stack 0
 13298  004886                     ___ftneg:
 13299                           	opt stack 18
 13300                           
 13301                           ; BSR set to: 0
 13302                           ;incstack = 0
 13303  004886  0100               	movlb	0	; () banked
 13304  004888  5160               	movf	___ftneg@f1& (0+255),w,b
 13305  00488A  1161               	iorwf	(___ftneg@f1+1)& (0+255),w,b
 13306  00488C  1162               	iorwf	(___ftneg@f1+2)& (0+255),w,b
 13307  00488E  B4D8               	btfsc	status,2,c
 13308  004890  D006               	goto	l2655
 13309                           
 13310                           ; BSR set to: 0
 13311  004892  0E00               	movlw	0
 13312  004894  1B60               	xorwf	___ftneg@f1& (0+255),f,b
 13313  004896  0E00               	movlw	0
 13314  004898  1B61               	xorwf	(___ftneg@f1+1)& (0+255),f,b
 13315  00489A  0E80               	movlw	128
 13316  00489C  1B62               	xorwf	(___ftneg@f1+2)& (0+255),f,b
 13317  00489E                     l2655:
 13318                           
 13319                           ; BSR set to: 0
 13320  00489E  C060  F060         	movff	___ftneg@f1,?___ftneg
 13321  0048A2  C061  F061         	movff	___ftneg@f1+1,?___ftneg+1
 13322  0048A6  C062  F062         	movff	___ftneg@f1+2,?___ftneg+2
 13323                           
 13324                           ; BSR set to: 0
 13325  0048AA  0012               	return		;funcret
 13326  0048AC                     __end_of___ftneg:
 13327                           	opt stack 0
 13328                           tblptru	equ	0xFF8
 13329                           tblptrh	equ	0xFF7
 13330                           tblptrl	equ	0xFF6
 13331                           tablat	equ	0xFF5
 13332                           prodh	equ	0xFF4
 13333                           prodl	equ	0xFF3
 13334                           intcon	equ	0xFF2
 13335                           postinc0	equ	0xFEE
 13336                           wreg	equ	0xFE8
 13337                           indf1	equ	0xFE7
 13338                           postdec1	equ	0xFE5
 13339                           fsr1h	equ	0xFE2
 13340                           fsr1l	equ	0xFE1
 13341                           indf2	equ	0xFDF
 13342                           postinc2	equ	0xFDE
 13343                           postdec2	equ	0xFDD
 13344                           plusw2	equ	0xFDB
 13345                           fsr2h	equ	0xFDA
 13346                           fsr2l	equ	0xFD9
 13347                           status	equ	0xFD8
 13348                           
 13349 ;; *************** function ___ftge *****************
 13350 ;; Defined at:
 13351 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftge.c"
 13352 ;; Parameters:    Size  Location     Type
 13353 ;;  ff1             3    0[BANK0 ] float 
 13354 ;;  ff2             3    3[BANK0 ] float 
 13355 ;; Auto vars:     Size  Location     Type
 13356 ;;		None
 13357 ;; Return value:  Size  Location     Type
 13358 ;;		None               void
 13359 ;; Registers used:
 13360 ;;		wreg, status,2, status,0
 13361 ;; Tracked objects:
 13362 ;;		On entry : 0/0
 13363 ;;		On exit  : 0/0
 13364 ;;		Unchanged: 0/0
 13365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13366 ;;      Params:         0       6       0       0       0       0       0       0       0
 13367 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13368 ;;      Temps:          0       3       0       0       0       0       0       0       0
 13369 ;;      Totals:         0       9       0       0       0       0       0       0       0
 13370 ;;Total ram usage:        9 bytes
 13371 ;; Hardware stack levels used:    1
 13372 ;; Hardware stack levels required when called:   10
 13373 ;; This function calls:
 13374 ;;		Nothing
 13375 ;; This function is called by:
 13376 ;;		_sprintf
 13377 ;; This function uses a non-reentrant model
 13378 ;;
 13379                           
 13380                           	psect	text46
 13381  003BD8                     __ptext46:
 13382                           	opt stack 0
 13383  003BD8                     ___ftge:
 13384                           	opt stack 18
 13385                           
 13386                           ; BSR set to: 0
 13387                           ;incstack = 0
 13388  003BD8  0100               	movlb	0	; () banked
 13389  003BDA  AF62               	btfss	(___ftge@ff1+2)& (0+255),7,b
 13390  003BDC  D016               	goto	l2637
 13391                           
 13392                           ; BSR set to: 0
 13393  003BDE  C060  F066         	movff	___ftge@ff1,??___ftge
 13394  003BE2  C061  F067         	movff	___ftge@ff1+1,??___ftge+1
 13395  003BE6  C062  F068         	movff	___ftge@ff1+2,??___ftge+2
 13396  003BEA  1F66               	comf	??___ftge& (0+255),f,b
 13397  003BEC  1F67               	comf	(??___ftge+1)& (0+255),f,b
 13398  003BEE  1F68               	comf	(??___ftge+2)& (0+255),f,b
 13399  003BF0  2B66               	incf	??___ftge& (0+255),f,b
 13400  003BF2  0E00               	movlw	0
 13401  003BF4  2367               	addwfc	(??___ftge+1)& (0+255),f,b
 13402  003BF6  2368               	addwfc	(??___ftge+2)& (0+255),f,b
 13403  003BF8  0E00               	movlw	0
 13404  003BFA  2566               	addwf	??___ftge& (0+255),w,b
 13405  003BFC  6F60               	movwf	___ftge@ff1& (0+255),b
 13406  003BFE  0E00               	movlw	0
 13407  003C00  2167               	addwfc	(??___ftge+1)& (0+255),w,b
 13408  003C02  6F61               	movwf	(___ftge@ff1+1)& (0+255),b
 13409  003C04  0E80               	movlw	128
 13410  003C06  2168               	addwfc	(??___ftge+2)& (0+255),w,b
 13411  003C08  6F62               	movwf	(___ftge@ff1+2)& (0+255),b
 13412  003C0A                     l2637:
 13413                           
 13414                           ; BSR set to: 0
 13415                           
 13416                           ; BSR set to: 0
 13417  003C0A  AF65               	btfss	(___ftge@ff2+2)& (0+255),7,b
 13418  003C0C  D016               	goto	l2638
 13419                           
 13420                           ; BSR set to: 0
 13421  003C0E  C063  F066         	movff	___ftge@ff2,??___ftge
 13422  003C12  C064  F067         	movff	___ftge@ff2+1,??___ftge+1
 13423  003C16  C065  F068         	movff	___ftge@ff2+2,??___ftge+2
 13424  003C1A  1F66               	comf	??___ftge& (0+255),f,b
 13425  003C1C  1F67               	comf	(??___ftge+1)& (0+255),f,b
 13426  003C1E  1F68               	comf	(??___ftge+2)& (0+255),f,b
 13427  003C20  2B66               	incf	??___ftge& (0+255),f,b
 13428  003C22  0E00               	movlw	0
 13429  003C24  2367               	addwfc	(??___ftge+1)& (0+255),f,b
 13430  003C26  2368               	addwfc	(??___ftge+2)& (0+255),f,b
 13431  003C28  0E00               	movlw	0
 13432  003C2A  2566               	addwf	??___ftge& (0+255),w,b
 13433  003C2C  6F63               	movwf	___ftge@ff2& (0+255),b
 13434  003C2E  0E00               	movlw	0
 13435  003C30  2167               	addwfc	(??___ftge+1)& (0+255),w,b
 13436  003C32  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
 13437  003C34  0E80               	movlw	128
 13438  003C36  2168               	addwfc	(??___ftge+2)& (0+255),w,b
 13439  003C38  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
 13440  003C3A                     l2638:
 13441                           
 13442                           ; BSR set to: 0
 13443                           
 13444                           ; BSR set to: 0
 13445  003C3A  0E00               	movlw	0
 13446  003C3C  1B60               	xorwf	___ftge@ff1& (0+255),f,b
 13447  003C3E  0E00               	movlw	0
 13448  003C40  1B61               	xorwf	(___ftge@ff1+1)& (0+255),f,b
 13449  003C42  0E80               	movlw	128
 13450  003C44  1B62               	xorwf	(___ftge@ff1+2)& (0+255),f,b
 13451                           
 13452                           ; BSR set to: 0
 13453  003C46  0E00               	movlw	0
 13454  003C48  1B63               	xorwf	___ftge@ff2& (0+255),f,b
 13455  003C4A  0E00               	movlw	0
 13456  003C4C  1B64               	xorwf	(___ftge@ff2+1)& (0+255),f,b
 13457  003C4E  0E80               	movlw	128
 13458  003C50  1B65               	xorwf	(___ftge@ff2+2)& (0+255),f,b
 13459  003C52  5163               	movf	___ftge@ff2& (0+255),w,b
 13460  003C54  5D60               	subwf	___ftge@ff1& (0+255),w,b
 13461  003C56  5164               	movf	(___ftge@ff2+1)& (0+255),w,b
 13462  003C58  5961               	subwfb	(___ftge@ff1+1)& (0+255),w,b
 13463  003C5A  5165               	movf	(___ftge@ff2+2)& (0+255),w,b
 13464  003C5C  5962               	subwfb	(___ftge@ff1+2)& (0+255),w,b
 13465  003C5E  B0D8               	btfsc	status,0,c
 13466  003C60  D002               	goto	l6669
 13467                           
 13468                           ; BSR set to: 0
 13469  003C62  90D8               	bcf	status,0,c
 13470  003C64  0012               	return	
 13471  003C66                     l6669:
 13472                           
 13473                           ; BSR set to: 0
 13474                           
 13475                           ; BSR set to: 0
 13476  003C66  80D8               	bsf	status,0,c
 13477                           
 13478                           ; BSR set to: 0
 13479  003C68  0012               	return	
 13480  003C6A                     __end_of___ftge:
 13481                           	opt stack 0
 13482                           tblptru	equ	0xFF8
 13483                           tblptrh	equ	0xFF7
 13484                           tblptrl	equ	0xFF6
 13485                           tablat	equ	0xFF5
 13486                           prodh	equ	0xFF4
 13487                           prodl	equ	0xFF3
 13488                           intcon	equ	0xFF2
 13489                           postinc0	equ	0xFEE
 13490                           wreg	equ	0xFE8
 13491                           indf1	equ	0xFE7
 13492                           postdec1	equ	0xFE5
 13493                           fsr1h	equ	0xFE2
 13494                           fsr1l	equ	0xFE1
 13495                           indf2	equ	0xFDF
 13496                           postinc2	equ	0xFDE
 13497                           postdec2	equ	0xFDD
 13498                           plusw2	equ	0xFDB
 13499                           fsr2h	equ	0xFDA
 13500                           fsr2l	equ	0xFD9
 13501                           status	equ	0xFD8
 13502                           
 13503 ;; *************** function _ResetModuloLoRaWan *****************
 13504 ;; Defined at:
 13505 ;;		line 41 in file "LoRaWanCore.c"
 13506 ;; Parameters:    Size  Location     Type
 13507 ;;		None
 13508 ;; Auto vars:     Size  Location     Type
 13509 ;;  status          1   39[BANK0 ] unsigned char 
 13510 ;; Return value:  Size  Location     Type
 13511 ;;                  1    wreg      unsigned char 
 13512 ;; Registers used:
 13513 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13514 ;; Tracked objects:
 13515 ;;		On entry : 0/0
 13516 ;;		On exit  : 0/0
 13517 ;;		Unchanged: 0/0
 13518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13519 ;;      Params:         0       0       0       0       0       0       0       0       0
 13520 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13521 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13522 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13523 ;;Total ram usage:        1 bytes
 13524 ;; Hardware stack levels used:    1
 13525 ;; Hardware stack levels required when called:   13
 13526 ;; This function calls:
 13527 ;;		_enviaComando
 13528 ;; This function is called by:
 13529 ;;		_TxLoRaWan
 13530 ;; This function uses a non-reentrant model
 13531 ;;
 13532                           
 13533                           	psect	text47
 13534  0048AC                     __ptext47:
 13535                           	opt stack 0
 13536  0048AC                     _ResetModuloLoRaWan:
 13537                           	opt stack 16
 13538                           
 13539                           ;LoRaWanCore.c: 43: uint8_t status;
 13540                           ;LoRaWanCore.c: 45: status=enviaComando(SYS_RESET,1);
 13541                           
 13542                           ; BSR set to: 0
 13543                           ;incstack = 0
 13544  0048AC  0ED4               	movlw	low _SYS_RESET
 13545  0048AE  0100               	movlb	0	; () banked
 13546  0048B0  6F7C               	movwf	enviaComando@cmd& (0+255),b
 13547  0048B2  0E7E               	movlw	high _SYS_RESET
 13548  0048B4  6F7D               	movwf	(enviaComando@cmd+1)& (0+255),b
 13549  0048B6  0E01               	movlw	1
 13550  0048B8  6F7E               	movwf	enviaComando@tipoComando& (0+255),b
 13551  0048BA  EC80  F016         	call	_enviaComando	;wreg free
 13552  0048BE  0100               	movlb	0	; () banked
 13553  0048C0  6F87               	movwf	ResetModuloLoRaWan@status& (0+255),b
 13554                           
 13555                           ; BSR set to: 0
 13556                           ;LoRaWanCore.c: 46: return (status==15);
 13557  0048C2  0E0F               	movlw	15
 13558  0048C4  1987               	xorwf	ResetModuloLoRaWan@status& (0+255),w,b
 13559  0048C6  A4D8               	btfss	status,2,c
 13560  0048C8  D002               	goto	u8000
 13561  0048CA  0E01               	movlw	1
 13562  0048CC  0012               	return	
 13563  0048CE                     u8000:
 13564  0048CE  0E00               	movlw	0
 13565  0048D0  0012               	return	
 13566  0048D2                     __end_of_ResetModuloLoRaWan:
 13567                           	opt stack 0
 13568                           tblptru	equ	0xFF8
 13569                           tblptrh	equ	0xFF7
 13570                           tblptrl	equ	0xFF6
 13571                           tablat	equ	0xFF5
 13572                           prodh	equ	0xFF4
 13573                           prodl	equ	0xFF3
 13574                           intcon	equ	0xFF2
 13575                           postinc0	equ	0xFEE
 13576                           wreg	equ	0xFE8
 13577                           indf1	equ	0xFE7
 13578                           postdec1	equ	0xFE5
 13579                           fsr1h	equ	0xFE2
 13580                           fsr1l	equ	0xFE1
 13581                           indf2	equ	0xFDF
 13582                           postinc2	equ	0xFDE
 13583                           postdec2	equ	0xFDD
 13584                           plusw2	equ	0xFDB
 13585                           fsr2h	equ	0xFDA
 13586                           fsr2l	equ	0xFD9
 13587                           status	equ	0xFD8
 13588                           
 13589 ;; *************** function _JoinLoRaWan *****************
 13590 ;; Defined at:
 13591 ;;		line 49 in file "LoRaWanCore.c"
 13592 ;; Parameters:    Size  Location     Type
 13593 ;;		None
 13594 ;; Auto vars:     Size  Location     Type
 13595 ;;  status          1   39[BANK0 ] unsigned char 
 13596 ;; Return value:  Size  Location     Type
 13597 ;;                  1    wreg      unsigned char 
 13598 ;; Registers used:
 13599 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13600 ;; Tracked objects:
 13601 ;;		On entry : 0/0
 13602 ;;		On exit  : 0/0
 13603 ;;		Unchanged: 0/0
 13604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13605 ;;      Params:         0       0       0       0       0       0       0       0       0
 13606 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13607 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13608 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13609 ;;Total ram usage:        1 bytes
 13610 ;; Hardware stack levels used:    1
 13611 ;; Hardware stack levels required when called:   13
 13612 ;; This function calls:
 13613 ;;		_enviaComando
 13614 ;;		_parseLoRaWan
 13615 ;; This function is called by:
 13616 ;;		_main
 13617 ;;		_TxLoRaWan
 13618 ;; This function uses a non-reentrant model
 13619 ;;
 13620                           
 13621                           	psect	text48
 13622  00465E                     __ptext48:
 13623                           	opt stack 0
 13624  00465E                     _JoinLoRaWan:
 13625                           	opt stack 16
 13626                           
 13627                           ;LoRaWanCore.c: 51: uint8_t status;
 13628                           ;LoRaWanCore.c: 53: status=enviaComando(MAC_JOIN_OTAA,0);
 13629                           
 13630                           ; BSR set to: 0
 13631                           ;incstack = 0
 13632  00465E  0EBA               	movlw	low _MAC_JOIN_OTAA
 13633  004660  0100               	movlb	0	; () banked
 13634  004662  6F7C               	movwf	enviaComando@cmd& (0+255),b
 13635  004664  0E7E               	movlw	high _MAC_JOIN_OTAA
 13636  004666  6F7D               	movwf	(enviaComando@cmd+1)& (0+255),b
 13637  004668  0E00               	movlw	0
 13638  00466A  6F7E               	movwf	enviaComando@tipoComando& (0+255),b
 13639  00466C  EC80  F016         	call	_enviaComando	;wreg free
 13640  004670  0100               	movlb	0	; () banked
 13641  004672  6F87               	movwf	JoinLoRaWan@status& (0+255),b
 13642                           
 13643                           ;LoRaWanCore.c: 54: switch (status)
 13644  004674  D00B               	goto	l1937
 13645  004676                     
 13646                           ; BSR set to: 0
 13647                           ;LoRaWanCore.c: 57: return (parseLoRaWan()==14);
 13648                           
 13649                           ; BSR set to: 0
 13650  004676  ECC3  F01B         	call	_parseLoRaWan	;wreg free
 13651  00467A  0A0E               	xorlw	14
 13652  00467C  A4D8               	btfss	status,2,c
 13653  00467E  D002               	goto	u7060
 13654  004680  0E01               	movlw	1
 13655  004682  0012               	return	
 13656  004684                     u7060:
 13657  004684  0E00               	movlw	0
 13658  004686  0012               	return	
 13659  004688                     
 13660                           ;LoRaWanCore.c: 60: return 0;
 13661  004688  0E00               	movlw	0
 13662                           
 13663                           ;LoRaWanCore.c: 62: }
 13664  00468A  0012               	return	
 13665  00468C                     l1937:
 13666  00468C  0100               	movlb	0	; () banked
 13667  00468E  5187               	movf	JoinLoRaWan@status& (0+255),w,b
 13668                           
 13669                           ; Switch size 1, requested type "space"
 13670                           ; Number of cases is 1, Range of values is 0 to 0
 13671                           ; switch strategies available:
 13672                           ; Name         Instructions Cycles
 13673                           ; simple_byte            4     3 (average)
 13674                           ;	Chosen strategy is simple_byte
 13675  004690  0A00               	xorlw	0	; case 0
 13676  004692  B4D8               	btfsc	status,2,c
 13677  004694  D7F0               	goto	l1938
 13678  004696  D7F8               	goto	l1940
 13679  004698                     __end_of_JoinLoRaWan:
 13680                           	opt stack 0
 13681                           tblptru	equ	0xFF8
 13682                           tblptrh	equ	0xFF7
 13683                           tblptrl	equ	0xFF6
 13684                           tablat	equ	0xFF5
 13685                           prodh	equ	0xFF4
 13686                           prodl	equ	0xFF3
 13687                           intcon	equ	0xFF2
 13688                           postinc0	equ	0xFEE
 13689                           wreg	equ	0xFE8
 13690                           indf1	equ	0xFE7
 13691                           postdec1	equ	0xFE5
 13692                           fsr1h	equ	0xFE2
 13693                           fsr1l	equ	0xFE1
 13694                           indf2	equ	0xFDF
 13695                           postinc2	equ	0xFDE
 13696                           postdec2	equ	0xFDD
 13697                           plusw2	equ	0xFDB
 13698                           fsr2h	equ	0xFDA
 13699                           fsr2l	equ	0xFD9
 13700                           status	equ	0xFD8
 13701                           
 13702 ;; *************** function _enviaComando *****************
 13703 ;; Defined at:
 13704 ;;		line 124 in file "LoRaWanCore.c"
 13705 ;; Parameters:    Size  Location     Type
 13706 ;;  cmd             2   28[BANK0 ] PTR const unsigned char 
 13707 ;;		 -> TxLoRaWan@comando(200), SetChannelLoRaWan@comando(200), MAC_JOIN_OTAA(10), SYS_RESET(6), 
 13708 ;;  tipoComando     1   30[BANK0 ] unsigned char 
 13709 ;; Auto vars:     Size  Location     Type
 13710 ;;  i               2   35[BANK0 ] unsigned int 
 13711 ;;  i               2   33[BANK0 ] unsigned int 
 13712 ;;  i               2   37[BANK0 ] unsigned int 
 13713 ;; Return value:  Size  Location     Type
 13714 ;;                  1    wreg      unsigned char 
 13715 ;; Registers used:
 13716 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13717 ;; Tracked objects:
 13718 ;;		On entry : 0/0
 13719 ;;		On exit  : 0/0
 13720 ;;		Unchanged: 0/0
 13721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13722 ;;      Params:         0       3       0       0       0       0       0       0       0
 13723 ;;      Locals:         0       6       0       0       0       0       0       0       0
 13724 ;;      Temps:          0       2       0       0       0       0       0       0       0
 13725 ;;      Totals:         0      11       0       0       0       0       0       0       0
 13726 ;;Total ram usage:       11 bytes
 13727 ;; Hardware stack levels used:    1
 13728 ;; Hardware stack levels required when called:   12
 13729 ;; This function calls:
 13730 ;;		_initRecebeDados
 13731 ;;		_parseLoRaWan
 13732 ;;		_putch
 13733 ;;		_strlen
 13734 ;; This function is called by:
 13735 ;;		_ResetModuloLoRaWan
 13736 ;;		_JoinLoRaWan
 13737 ;;		_TxLoRaWan
 13738 ;;		_SetChannelLoRaWan
 13739 ;; This function uses a non-reentrant model
 13740 ;;
 13741                           
 13742                           	psect	text49
 13743  002D00                     __ptext49:
 13744                           	opt stack 0
 13745  002D00                     _enviaComando:
 13746                           	opt stack 17
 13747                           
 13748                           ;LoRaWanCore.c: 126: initRecebeDados();
 13749                           
 13750                           ;incstack = 0
 13751  002D00  ECE0  F024         	call	_initRecebeDados	;wreg free
 13752                           
 13753                           ;LoRaWanCore.c: 128: switch (tipoComando)
 13754  002D04  D041               	goto	l1969
 13755  002D06                     
 13756                           ;LoRaWanCore.c: 131: {
 13757                           ;LoRaWanCore.c: 132: for (uint16_t i = 0; i < strlen(MAC); i++)
 13758  002D06  0E00               	movlw	0
 13759  002D08  0100               	movlb	0	; () banked
 13760  002D0A  6F82               	movwf	(enviaComando@i+1)& (0+255),b
 13761  002D0C  0E00               	movlw	0
 13762  002D0E  6F81               	movwf	enviaComando@i& (0+255),b
 13763  002D10  D00D               	goto	l1971
 13764  002D12                     
 13765                           ; BSR set to: 0
 13766                           ;LoRaWanCore.c: 133: {
 13767                           ;LoRaWanCore.c: 134: putch((char)MAC[i]);
 13768                           
 13769                           ; BSR set to: 0
 13770  002D12  0EDF               	movlw	low _MAC
 13771  002D14  2581               	addwf	enviaComando@i& (0+255),w,b
 13772  002D16  6EF6               	movwf	tblptrl,c
 13773  002D18  0E7E               	movlw	high _MAC
 13774  002D1A  2182               	addwfc	(enviaComando@i+1)& (0+255),w,b
 13775  002D1C  6EF7               	movwf	tblptrh,c
 13776  002D1E                     	if	0	;There are less than 3 active tblptr bytes
 13777  002D1E                     	endif
 13778  002D1E  0008               	tblrd		*
 13779  002D20  50F5               	movf	tablat,w,c
 13780  002D22  EC0C  F025         	call	_putch
 13781  002D26  0100               	movlb	0	; () banked
 13782  002D28  4B81               	infsnz	enviaComando@i& (0+255),f,b
 13783  002D2A  2B82               	incf	(enviaComando@i+1)& (0+255),f,b
 13784  002D2C                     l1971:
 13785                           
 13786                           ; BSR set to: 0
 13787                           
 13788                           ; BSR set to: 0
 13789  002D2C  0EDF               	movlw	low _MAC
 13790  002D2E  6F60               	movwf	strlen@s& (0+255),b
 13791  002D30  0E7E               	movlw	high _MAC
 13792  002D32  6F61               	movwf	(strlen@s+1)& (0+255),b
 13793  002D34  ECD0  F021         	call	_strlen	;wreg free
 13794  002D38  0100               	movlb	0	; () banked
 13795  002D3A  5160               	movf	?_strlen& (0+255),w,b
 13796  002D3C  5D81               	subwf	enviaComando@i& (0+255),w,b
 13797  002D3E  5161               	movf	(?_strlen+1)& (0+255),w,b
 13798  002D40  5982               	subwfb	(enviaComando@i+1)& (0+255),w,b
 13799  002D42  B0D8               	btfsc	status,0,c
 13800  002D44  D029               	goto	l1974
 13801  002D46  D7E5               	goto	l1972
 13802  002D48                     
 13803                           ; BSR set to: 0
 13804                           ;LoRaWanCore.c: 138: {
 13805                           ;LoRaWanCore.c: 139: for (uint16_t i = 0; i < strlen(SYS); i++)
 13806                           
 13807                           ; BSR set to: 0
 13808  002D48  0E00               	movlw	0
 13809  002D4A  6F84               	movwf	(enviaComando@i_4617+1)& (0+255),b
 13810  002D4C  0E00               	movlw	0
 13811  002D4E  6F83               	movwf	enviaComando@i_4617& (0+255),b
 13812  002D50  D00D               	goto	l1976
 13813  002D52                     
 13814                           ; BSR set to: 0
 13815                           ;LoRaWanCore.c: 140: {
 13816                           ;LoRaWanCore.c: 141: putch((char)SYS[i]);
 13817                           
 13818                           ; BSR set to: 0
 13819  002D52  0EDA               	movlw	low _SYS
 13820  002D54  2583               	addwf	enviaComando@i_4617& (0+255),w,b
 13821  002D56  6EF6               	movwf	tblptrl,c
 13822  002D58  0E7E               	movlw	high _SYS
 13823  002D5A  2184               	addwfc	(enviaComando@i_4617+1)& (0+255),w,b
 13824  002D5C  6EF7               	movwf	tblptrh,c
 13825  002D5E                     	if	0	;There are less than 3 active tblptr bytes
 13826  002D5E                     	endif
 13827  002D5E  0008               	tblrd		*
 13828  002D60  50F5               	movf	tablat,w,c
 13829  002D62  EC0C  F025         	call	_putch
 13830  002D66  0100               	movlb	0	; () banked
 13831  002D68  4B83               	infsnz	enviaComando@i_4617& (0+255),f,b
 13832  002D6A  2B84               	incf	(enviaComando@i_4617+1)& (0+255),f,b
 13833  002D6C                     l1976:
 13834                           
 13835                           ; BSR set to: 0
 13836                           
 13837                           ; BSR set to: 0
 13838  002D6C  0EDA               	movlw	low _SYS
 13839  002D6E  6F60               	movwf	strlen@s& (0+255),b
 13840  002D70  0E7E               	movlw	high _SYS
 13841  002D72  6F61               	movwf	(strlen@s+1)& (0+255),b
 13842  002D74  ECD0  F021         	call	_strlen	;wreg free
 13843  002D78  0100               	movlb	0	; () banked
 13844  002D7A  5160               	movf	?_strlen& (0+255),w,b
 13845  002D7C  5D83               	subwf	enviaComando@i_4617& (0+255),w,b
 13846  002D7E  5161               	movf	(?_strlen+1)& (0+255),w,b
 13847  002D80  5984               	subwfb	(enviaComando@i_4617+1)& (0+255),w,b
 13848  002D82  B0D8               	btfsc	status,0,c
 13849  002D84  D009               	goto	l1974
 13850  002D86  D7E5               	goto	l1977
 13851  002D88                     l1969:
 13852                           
 13853                           ; BSR set to: 0
 13854  002D88  0100               	movlb	0	; () banked
 13855  002D8A  517E               	movf	enviaComando@tipoComando& (0+255),w,b
 13856                           
 13857                           ; Switch size 1, requested type "space"
 13858                           ; Number of cases is 2, Range of values is 0 to 1
 13859                           ; switch strategies available:
 13860                           ; Name         Instructions Cycles
 13861                           ; simple_byte            7     4 (average)
 13862                           ;	Chosen strategy is simple_byte
 13863  002D8C  0A00               	xorlw	0	; case 0
 13864  002D8E  B4D8               	btfsc	status,2,c
 13865  002D90  D7BA               	goto	l1970
 13866  002D92  0A01               	xorlw	1	; case 1
 13867  002D94  B4D8               	btfsc	status,2,c
 13868  002D96  D7D8               	goto	l1975
 13869  002D98                     l1974:
 13870                           
 13871                           ; BSR set to: 0
 13872                           ;LoRaWanCore.c: 147: for (uint16_t i = 0; i < strlen(cmd); i++)
 13873                           
 13874                           ; BSR set to: 0
 13875  002D98  0E00               	movlw	0
 13876  002D9A  6F86               	movwf	(enviaComando@i_4618+1)& (0+255),b
 13877  002D9C  0E00               	movlw	0
 13878  002D9E  6F85               	movwf	enviaComando@i_4618& (0+255),b
 13879  002DA0  D01B               	goto	l1979
 13880  002DA2                     
 13881                           ; BSR set to: 0
 13882                           ;LoRaWanCore.c: 148: {
 13883                           ;LoRaWanCore.c: 149: putch((char)cmd[i]);
 13884                           
 13885                           ; BSR set to: 0
 13886  002DA2  5185               	movf	enviaComando@i_4618& (0+255),w,b
 13887  002DA4  257C               	addwf	enviaComando@cmd& (0+255),w,b
 13888  002DA6  6F7F               	movwf	??_enviaComando& (0+255),b
 13889  002DA8  5186               	movf	(enviaComando@i_4618+1)& (0+255),w,b
 13890  002DAA  217D               	addwfc	(enviaComando@cmd+1)& (0+255),w,b
 13891  002DAC  6F80               	movwf	(??_enviaComando+1)& (0+255),b
 13892  002DAE  C07F  FFF6         	movff	??_enviaComando,tblptrl
 13893  002DB2  C080  FFF7         	movff	??_enviaComando+1,tblptrh
 13894  002DB6  6AF8               	clrf	tblptru,c
 13895  002DB8  0E07               	movlw	(high __ramtop+-1)
 13896  002DBA  64F7               	cpfsgt	tblptrh,c
 13897  002DBC  D003               	bra	u6317
 13898  002DBE  0008               	tblrd		*
 13899  002DC0  50F5               	movf	tablat,w,c
 13900  002DC2  D005               	bra	u6310
 13901  002DC4                     u6317:
 13902  002DC4  CFF6 FFE9          	movff	tblptrl,fsr0l
 13903  002DC8  CFF7 FFEA          	movff	tblptrh,fsr0h
 13904  002DCC  50EF               	movf	indf0,w,c
 13905  002DCE                     u6310:
 13906  002DCE  EC0C  F025         	call	_putch
 13907  002DD2  0100               	movlb	0	; () banked
 13908  002DD4  4B85               	infsnz	enviaComando@i_4618& (0+255),f,b
 13909  002DD6  2B86               	incf	(enviaComando@i_4618+1)& (0+255),f,b
 13910  002DD8                     l1979:
 13911                           
 13912                           ; BSR set to: 0
 13913                           
 13914                           ; BSR set to: 0
 13915  002DD8  C07C  F060         	movff	enviaComando@cmd,strlen@s
 13916  002DDC  C07D  F061         	movff	enviaComando@cmd+1,strlen@s+1
 13917  002DE0  ECD0  F021         	call	_strlen	;wreg free
 13918  002DE4  0100               	movlb	0	; () banked
 13919  002DE6  5160               	movf	?_strlen& (0+255),w,b
 13920  002DE8  5D85               	subwf	enviaComando@i_4618& (0+255),w,b
 13921  002DEA  5161               	movf	(?_strlen+1)& (0+255),w,b
 13922  002DEC  5986               	subwfb	(enviaComando@i_4618+1)& (0+255),w,b
 13923  002DEE  A0D8               	btfss	status,0,c
 13924  002DF0  D7D8               	goto	l1980
 13925                           
 13926                           ; BSR set to: 0
 13927                           ;LoRaWanCore.c: 150: }
 13928                           ;LoRaWanCore.c: 151: putch(0x0D);
 13929                           
 13930                           ; BSR set to: 0
 13931  002DF2  0E0D               	movlw	13
 13932  002DF4  EC0C  F025         	call	_putch
 13933                           
 13934                           ;LoRaWanCore.c: 152: putch(0x0A);
 13935  002DF8  0E0A               	movlw	10
 13936  002DFA  EC0C  F025         	call	_putch
 13937                           
 13938                           ;LoRaWanCore.c: 154: return parseLoRaWan();
 13939  002DFE  ECC3  F01B         	call	_parseLoRaWan	;wreg free
 13940  002E02  0012               	return	
 13941  002E04                     __end_of_enviaComando:
 13942                           	opt stack 0
 13943                           tblptru	equ	0xFF8
 13944                           tblptrh	equ	0xFF7
 13945                           tblptrl	equ	0xFF6
 13946                           tablat	equ	0xFF5
 13947                           prodh	equ	0xFF4
 13948                           prodl	equ	0xFF3
 13949                           intcon	equ	0xFF2
 13950                           indf0	equ	0xFEF
 13951                           postinc0	equ	0xFEE
 13952                           fsr0h	equ	0xFEA
 13953                           fsr0l	equ	0xFE9
 13954                           wreg	equ	0xFE8
 13955                           indf1	equ	0xFE7
 13956                           postdec1	equ	0xFE5
 13957                           fsr1h	equ	0xFE2
 13958                           fsr1l	equ	0xFE1
 13959                           indf2	equ	0xFDF
 13960                           postinc2	equ	0xFDE
 13961                           postdec2	equ	0xFDD
 13962                           plusw2	equ	0xFDB
 13963                           fsr2h	equ	0xFDA
 13964                           fsr2l	equ	0xFD9
 13965                           status	equ	0xFD8
 13966                           
 13967 ;; *************** function _strlen *****************
 13968 ;; Defined at:
 13969 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strlen.c"
 13970 ;; Parameters:    Size  Location     Type
 13971 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 13972 ;;		 -> recebeByteLoRaWan@frameData(100), SYS(5), MAC(5), TxLoRaWan@comando(200), 
 13973 ;;		 -> SetChannelLoRaWan@comando(200), MAC_JOIN_OTAA(10), SYS_RESET(6), STR_19(16), 
 13974 ;;		 -> STR_18(7), STR_17(14), STR_16(8), STR_15(8), 
 13975 ;;		 -> STR_14(10), STR_13(17), STR_12(11), STR_11(5), 
 13976 ;;		 -> STR_10(32), STR_9(7), STR_8(11), STR_7(11), 
 13977 ;;		 -> STR_6(14), STR_5(3), 
 13978 ;; Auto vars:     Size  Location     Type
 13979 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
 13980 ;;		 -> recebeByteLoRaWan@frameData(100), SYS(5), MAC(5), TxLoRaWan@comando(200), 
 13981 ;;		 -> SetChannelLoRaWan@comando(200), MAC_JOIN_OTAA(10), SYS_RESET(6), STR_19(16), 
 13982 ;;		 -> STR_18(7), STR_17(14), STR_16(8), STR_15(8), 
 13983 ;;		 -> STR_14(10), STR_13(17), STR_12(11), STR_11(5), 
 13984 ;;		 -> STR_10(32), STR_9(7), STR_8(11), STR_7(11), 
 13985 ;;		 -> STR_6(14), STR_5(3), 
 13986 ;; Return value:  Size  Location     Type
 13987 ;;                  2    0[BANK0 ] unsigned int 
 13988 ;; Registers used:
 13989 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 13990 ;; Tracked objects:
 13991 ;;		On entry : 0/0
 13992 ;;		On exit  : 0/0
 13993 ;;		Unchanged: 0/0
 13994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13995 ;;      Params:         0       2       0       0       0       0       0       0       0
 13996 ;;      Locals:         0       2       0       0       0       0       0       0       0
 13997 ;;      Temps:          0       2       0       0       0       0       0       0       0
 13998 ;;      Totals:         0       6       0       0       0       0       0       0       0
 13999 ;;Total ram usage:        6 bytes
 14000 ;; Hardware stack levels used:    1
 14001 ;; Hardware stack levels required when called:   10
 14002 ;; This function calls:
 14003 ;;		Nothing
 14004 ;; This function is called by:
 14005 ;;		_enviaComando
 14006 ;; This function uses a non-reentrant model
 14007 ;;
 14008                           
 14009                           	psect	text50
 14010  0043A0                     __ptext50:
 14011                           	opt stack 0
 14012  0043A0                     _strlen:
 14013                           	opt stack 18
 14014                           
 14015                           ;incstack = 0
 14016  0043A0  C060  F064         	movff	strlen@s,strlen@cp
 14017  0043A4  C061  F065         	movff	strlen@s+1,strlen@cp+1
 14018  0043A8  D003               	goto	l2950
 14019  0043AA  0100               	movlb	0	; () banked
 14020  0043AC  4B64               	infsnz	strlen@cp& (0+255),f,b
 14021  0043AE  2B65               	incf	(strlen@cp+1)& (0+255),f,b
 14022  0043B0                     l2950:
 14023                           
 14024                           ; BSR set to: 0
 14025  0043B0  C064  FFF6         	movff	strlen@cp,tblptrl
 14026  0043B4  C065  FFF7         	movff	strlen@cp+1,tblptrh
 14027  0043B8  6AF8               	clrf	tblptru,c
 14028  0043BA  0E07               	movlw	(high __ramtop+-1)
 14029  0043BC  64F7               	cpfsgt	tblptrh,c
 14030  0043BE  D003               	bra	u5627
 14031  0043C0  0008               	tblrd		*
 14032  0043C2  50F5               	movf	tablat,w,c
 14033  0043C4  D005               	bra	u5620
 14034  0043C6                     u5627:
 14035  0043C6  CFF6 FFE9          	movff	tblptrl,fsr0l
 14036  0043CA  CFF7 FFEA          	movff	tblptrh,fsr0h
 14037  0043CE  50EF               	movf	indf0,w,c
 14038  0043D0                     u5620:
 14039  0043D0  0900               	iorlw	0
 14040  0043D2  A4D8               	btfss	status,2,c
 14041  0043D4  D7EA               	goto	l2951
 14042  0043D6  C060  F062         	movff	strlen@s,??_strlen
 14043  0043DA  C061  F063         	movff	strlen@s+1,??_strlen+1
 14044  0043DE  0100               	movlb	0	; () banked
 14045  0043E0  1F62               	comf	??_strlen& (0+255),f,b
 14046  0043E2  1F63               	comf	(??_strlen+1)& (0+255),f,b
 14047  0043E4  4B62               	infsnz	??_strlen& (0+255),f,b
 14048  0043E6  2B63               	incf	(??_strlen+1)& (0+255),f,b
 14049  0043E8  5164               	movf	strlen@cp& (0+255),w,b
 14050  0043EA  2562               	addwf	??_strlen& (0+255),w,b
 14051  0043EC  6F60               	movwf	?_strlen& (0+255),b
 14052  0043EE  5165               	movf	(strlen@cp+1)& (0+255),w,b
 14053  0043F0  2163               	addwfc	(??_strlen+1)& (0+255),w,b
 14054  0043F2  6F61               	movwf	(?_strlen+1)& (0+255),b
 14055  0043F4  0012               	return	
 14056  0043F6                     __end_of_strlen:
 14057                           	opt stack 0
 14058                           tblptru	equ	0xFF8
 14059                           tblptrh	equ	0xFF7
 14060                           tblptrl	equ	0xFF6
 14061                           tablat	equ	0xFF5
 14062                           prodh	equ	0xFF4
 14063                           prodl	equ	0xFF3
 14064                           intcon	equ	0xFF2
 14065                           indf0	equ	0xFEF
 14066                           postinc0	equ	0xFEE
 14067                           fsr0h	equ	0xFEA
 14068                           fsr0l	equ	0xFE9
 14069                           wreg	equ	0xFE8
 14070                           indf1	equ	0xFE7
 14071                           postdec1	equ	0xFE5
 14072                           fsr1h	equ	0xFE2
 14073                           fsr1l	equ	0xFE1
 14074                           indf2	equ	0xFDF
 14075                           postinc2	equ	0xFDE
 14076                           postdec2	equ	0xFDD
 14077                           plusw2	equ	0xFDB
 14078                           fsr2h	equ	0xFDA
 14079                           fsr2l	equ	0xFD9
 14080                           status	equ	0xFD8
 14081                           
 14082 ;; *************** function _putch *****************
 14083 ;; Defined at:
 14084 ;;		line 46 in file "uart/uart.c"
 14085 ;; Parameters:    Size  Location     Type
 14086 ;;  data            1    wreg     unsigned char 
 14087 ;; Auto vars:     Size  Location     Type
 14088 ;;  data            1    0[BANK0 ] unsigned char 
 14089 ;; Return value:  Size  Location     Type
 14090 ;;                  1    wreg      void 
 14091 ;; Registers used:
 14092 ;;		wreg
 14093 ;; Tracked objects:
 14094 ;;		On entry : 0/0
 14095 ;;		On exit  : 0/0
 14096 ;;		Unchanged: 0/0
 14097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14098 ;;      Params:         0       0       0       0       0       0       0       0       0
 14099 ;;      Locals:         0       1       0       0       0       0       0       0       0
 14100 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14101 ;;      Totals:         0       1       0       0       0       0       0       0       0
 14102 ;;Total ram usage:        1 bytes
 14103 ;; Hardware stack levels used:    1
 14104 ;; Hardware stack levels required when called:   10
 14105 ;; This function calls:
 14106 ;;		Nothing
 14107 ;; This function is called by:
 14108 ;;		_main
 14109 ;;		_enviaComando
 14110 ;;		_gen_send
 14111 ;;		_sendXBeePriv
 14112 ;; This function uses a non-reentrant model
 14113 ;;
 14114                           
 14115                           	psect	text51
 14116  004A18                     __ptext51:
 14117                           	opt stack 0
 14118  004A18                     _putch:
 14119                           	opt stack 20
 14120                           
 14121                           ; BSR set to: 0
 14122                           ;incstack = 0
 14123                           ;putch@data stored from wreg
 14124  004A18  0100               	movlb	0	; () banked
 14125  004A1A  6F60               	movwf	putch@data& (0+255),b
 14126  004A1C                     
 14127                           ;uart.c: 48: while (!TXIF);
 14128  004A1C  A89E               	btfss	3998,4,c	;volatile
 14129  004A1E  D7FE               	goto	l7291
 14130                           
 14131                           ;uart.c: 49: TXREG=data;
 14132  004A20  C060  FFAD         	movff	putch@data,4013	;volatile
 14133  004A24  0012               	return		;funcret
 14134  004A26                     __end_of_putch:
 14135                           	opt stack 0
 14136                           tblptru	equ	0xFF8
 14137                           tblptrh	equ	0xFF7
 14138                           tblptrl	equ	0xFF6
 14139                           tablat	equ	0xFF5
 14140                           prodh	equ	0xFF4
 14141                           prodl	equ	0xFF3
 14142                           intcon	equ	0xFF2
 14143                           indf0	equ	0xFEF
 14144                           postinc0	equ	0xFEE
 14145                           fsr0h	equ	0xFEA
 14146                           fsr0l	equ	0xFE9
 14147                           wreg	equ	0xFE8
 14148                           indf1	equ	0xFE7
 14149                           postdec1	equ	0xFE5
 14150                           fsr1h	equ	0xFE2
 14151                           fsr1l	equ	0xFE1
 14152                           indf2	equ	0xFDF
 14153                           postinc2	equ	0xFDE
 14154                           postdec2	equ	0xFDD
 14155                           plusw2	equ	0xFDB
 14156                           fsr2h	equ	0xFDA
 14157                           fsr2l	equ	0xFD9
 14158                           status	equ	0xFD8
 14159                           
 14160 ;; *************** function _parseLoRaWan *****************
 14161 ;; Defined at:
 14162 ;;		line 157 in file "LoRaWanCore.c"
 14163 ;; Parameters:    Size  Location     Type
 14164 ;;		None
 14165 ;; Auto vars:     Size  Location     Type
 14166 ;;  previous        4   20[BANK0 ] unsigned long 
 14167 ;;  intervalMAX     2   24[BANK0 ] unsigned int 
 14168 ;;  timeout         1   27[BANK0 ] unsigned char 
 14169 ;;  status          1   26[BANK0 ] unsigned char 
 14170 ;; Return value:  Size  Location     Type
 14171 ;;                  1    wreg      unsigned char 
 14172 ;; Registers used:
 14173 ;;		wreg, status,2, status,0, cstack
 14174 ;; Tracked objects:
 14175 ;;		On entry : 0/0
 14176 ;;		On exit  : 0/0
 14177 ;;		Unchanged: 0/0
 14178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14179 ;;      Params:         0       0       0       0       0       0       0       0       0
 14180 ;;      Locals:         0       8       0       0       0       0       0       0       0
 14181 ;;      Temps:          0      12       0       0       0       0       0       0       0
 14182 ;;      Totals:         0      20       0       0       0       0       0       0       0
 14183 ;;Total ram usage:       20 bytes
 14184 ;; Hardware stack levels used:    1
 14185 ;; Hardware stack levels required when called:   11
 14186 ;; This function calls:
 14187 ;;		_millis
 14188 ;; This function is called by:
 14189 ;;		_JoinLoRaWan
 14190 ;;		_TxLoRaWan
 14191 ;;		_enviaComando
 14192 ;; This function uses a non-reentrant model
 14193 ;;
 14194                           
 14195                           	psect	text52
 14196  003786                     __ptext52:
 14197                           	opt stack 0
 14198  003786                     _parseLoRaWan:
 14199                           	opt stack 18
 14200                           
 14201                           ;LoRaWanCore.c: 159: uint8_t status=0xFF;
 14202                           
 14203                           ;incstack = 0
 14204  003786  0100               	movlb	0	; () banked
 14205  003788  697A               	setf	parseLoRaWan@status& (0+255),b
 14206                           
 14207                           ; BSR set to: 0
 14208                           ;LoRaWanCore.c: 160: uint16_t intervalMAX=60000;
 14209  00378A  0EEA               	movlw	234
 14210  00378C  6F79               	movwf	(parseLoRaWan@intervalMAX+1)& (0+255),b
 14211  00378E  0E60               	movlw	96
 14212  003790  6F78               	movwf	parseLoRaWan@intervalMAX& (0+255),b
 14213                           
 14214                           ;LoRaWanCore.c: 161: bool timeout=0;
 14215  003792  0E00               	movlw	0
 14216  003794  6F7B               	movwf	parseLoRaWan@timeout& (0+255),b
 14217                           
 14218                           ; BSR set to: 0
 14219                           ;LoRaWanCore.c: 162: uint32_t previous=millis();
 14220  003796  EC69  F024         	call	_millis	;wreg free
 14221  00379A  C060  F074         	movff	?_millis,parseLoRaWan@previous
 14222  00379E  C061  F075         	movff	?_millis+1,parseLoRaWan@previous+1
 14223  0037A2  C062  F076         	movff	?_millis+2,parseLoRaWan@previous+2
 14224  0037A6  C063  F077         	movff	?_millis+3,parseLoRaWan@previous+3
 14225                           
 14226                           ;LoRaWanCore.c: 164: while ((!timeout) && (!novaMsgLoRaWan))
 14227  0037AA  D033               	goto	l1987
 14228  0037AC                     
 14229                           ;LoRaWanCore.c: 165: {
 14230                           ;LoRaWanCore.c: 166: if ((millis()-previous) > intervalMAX)
 14231  0037AC  C074  F068         	movff	parseLoRaWan@previous,??_parseLoRaWan
 14232  0037B0  C075  F069         	movff	parseLoRaWan@previous+1,??_parseLoRaWan+1
 14233  0037B4  C076  F06A         	movff	parseLoRaWan@previous+2,??_parseLoRaWan+2
 14234  0037B8  C077  F06B         	movff	parseLoRaWan@previous+3,??_parseLoRaWan+3
 14235  0037BC  0100               	movlb	0	; () banked
 14236  0037BE  1F68               	comf	??_parseLoRaWan& (0+255),f,b
 14237  0037C0  1F69               	comf	(??_parseLoRaWan+1)& (0+255),f,b
 14238  0037C2  1F6A               	comf	(??_parseLoRaWan+2)& (0+255),f,b
 14239  0037C4  1F6B               	comf	(??_parseLoRaWan+3)& (0+255),f,b
 14240  0037C6  2B68               	incf	??_parseLoRaWan& (0+255),f,b
 14241  0037C8  0E00               	movlw	0
 14242  0037CA  2369               	addwfc	(??_parseLoRaWan+1)& (0+255),f,b
 14243  0037CC  236A               	addwfc	(??_parseLoRaWan+2)& (0+255),f,b
 14244  0037CE  236B               	addwfc	(??_parseLoRaWan+3)& (0+255),f,b
 14245  0037D0  EC69  F024         	call	_millis	;wreg free
 14246  0037D4  0100               	movlb	0	; () banked
 14247  0037D6  5168               	movf	??_parseLoRaWan& (0+255),w,b
 14248  0037D8  2560               	addwf	?_millis& (0+255),w,b
 14249  0037DA  6F6C               	movwf	(??_parseLoRaWan+4)& (0+255),b
 14250  0037DC  5169               	movf	(??_parseLoRaWan+1)& (0+255),w,b
 14251  0037DE  2161               	addwfc	(?_millis+1)& (0+255),w,b
 14252  0037E0  6F6D               	movwf	(??_parseLoRaWan+5)& (0+255),b
 14253  0037E2  516A               	movf	(??_parseLoRaWan+2)& (0+255),w,b
 14254  0037E4  2162               	addwfc	(?_millis+2)& (0+255),w,b
 14255  0037E6  6F6E               	movwf	(??_parseLoRaWan+6)& (0+255),b
 14256  0037E8  516B               	movf	(??_parseLoRaWan+3)& (0+255),w,b
 14257  0037EA  2163               	addwfc	(?_millis+3)& (0+255),w,b
 14258  0037EC  6F6F               	movwf	(??_parseLoRaWan+7)& (0+255),b
 14259  0037EE  5178               	movf	parseLoRaWan@intervalMAX& (0+255),w,b
 14260  0037F0  6F70               	movwf	(??_parseLoRaWan+8)& (0+255),b
 14261  0037F2  5179               	movf	(parseLoRaWan@intervalMAX+1)& (0+255),w,b
 14262  0037F4  6F71               	movwf	(??_parseLoRaWan+9)& (0+255),b
 14263  0037F6  6B72               	clrf	(??_parseLoRaWan+10)& (0+255),b
 14264  0037F8  6B73               	clrf	(??_parseLoRaWan+11)& (0+255),b
 14265  0037FA  516C               	movf	(??_parseLoRaWan+4)& (0+255),w,b
 14266  0037FC  5D70               	subwf	(??_parseLoRaWan+8)& (0+255),w,b
 14267  0037FE  516D               	movf	(??_parseLoRaWan+5)& (0+255),w,b
 14268  003800  5971               	subwfb	(??_parseLoRaWan+9)& (0+255),w,b
 14269  003802  516E               	movf	(??_parseLoRaWan+6)& (0+255),w,b
 14270  003804  5972               	subwfb	(??_parseLoRaWan+10)& (0+255),w,b
 14271  003806  516F               	movf	(??_parseLoRaWan+7)& (0+255),w,b
 14272  003808  5973               	subwfb	(??_parseLoRaWan+11)& (0+255),w,b
 14273  00380A  B0D8               	btfsc	status,0,c
 14274  00380C  D002               	goto	l1987
 14275                           
 14276                           ; BSR set to: 0
 14277                           ;LoRaWanCore.c: 167: {
 14278                           ;LoRaWanCore.c: 168: timeout=1;
 14279  00380E  0E01               	movlw	1
 14280  003810  6F7B               	movwf	parseLoRaWan@timeout& (0+255),b
 14281  003812                     l1987:
 14282                           
 14283                           ; BSR set to: 0
 14284  003812  0100               	movlb	0	; () banked
 14285  003814  517B               	movf	parseLoRaWan@timeout& (0+255),w,b
 14286  003816  A4D8               	btfss	status,2,c
 14287  003818  D003               	goto	u5600
 14288                           
 14289                           ; BSR set to: 0
 14290  00381A  505A               	movf	_novaMsgLoRaWan,w,c	;volatile
 14291  00381C  B4D8               	btfsc	status,2,c
 14292  00381E  D7C6               	goto	l1986
 14293  003820                     u5600:
 14294                           
 14295                           ; BSR set to: 0
 14296                           ;LoRaWanCore.c: 169: }
 14297                           ;LoRaWanCore.c: 170: }
 14298                           ;LoRaWanCore.c: 172: if (novaMsgLoRaWan)
 14299                           
 14300                           ; BSR set to: 0
 14301                           
 14302                           ; BSR set to: 0
 14303  003820  505A               	movf	_novaMsgLoRaWan,w,c	;volatile
 14304  003822  B4D8               	btfsc	status,2,c
 14305  003824  D004               	goto	l1991
 14306                           
 14307                           ; BSR set to: 0
 14308                           ;LoRaWanCore.c: 173: {
 14309                           ;LoRaWanCore.c: 174: status=responseLoRaWan;
 14310  003826  C1FE  F07A         	movff	_responseLoRaWan,parseLoRaWan@status	;volatile
 14311                           
 14312                           ; BSR set to: 0
 14313                           ;LoRaWanCore.c: 175: novaMsgLoRaWan=0;
 14314  00382A  0E00               	movlw	0
 14315  00382C  6E5A               	movwf	_novaMsgLoRaWan,c	;volatile
 14316  00382E                     l1991:
 14317                           
 14318                           ; BSR set to: 0
 14319                           ;LoRaWanCore.c: 176: }
 14320                           ;LoRaWanCore.c: 178: return status;
 14321  00382E  517A               	movf	parseLoRaWan@status& (0+255),w,b
 14322  003830  0012               	return	
 14323  003832                     __end_of_parseLoRaWan:
 14324                           	opt stack 0
 14325                           tblptru	equ	0xFF8
 14326                           tblptrh	equ	0xFF7
 14327                           tblptrl	equ	0xFF6
 14328                           tablat	equ	0xFF5
 14329                           prodh	equ	0xFF4
 14330                           prodl	equ	0xFF3
 14331                           intcon	equ	0xFF2
 14332                           indf0	equ	0xFEF
 14333                           postinc0	equ	0xFEE
 14334                           fsr0h	equ	0xFEA
 14335                           fsr0l	equ	0xFE9
 14336                           wreg	equ	0xFE8
 14337                           indf1	equ	0xFE7
 14338                           postdec1	equ	0xFE5
 14339                           fsr1h	equ	0xFE2
 14340                           fsr1l	equ	0xFE1
 14341                           indf2	equ	0xFDF
 14342                           postinc2	equ	0xFDE
 14343                           postdec2	equ	0xFDD
 14344                           plusw2	equ	0xFDB
 14345                           fsr2h	equ	0xFDA
 14346                           fsr2l	equ	0xFD9
 14347                           status	equ	0xFD8
 14348                           
 14349 ;; *************** function _millis *****************
 14350 ;; Defined at:
 14351 ;;		line 47 in file "Timer.c"
 14352 ;; Parameters:    Size  Location     Type
 14353 ;;		None
 14354 ;; Auto vars:     Size  Location     Type
 14355 ;;  m               4    4[BANK0 ] unsigned long 
 14356 ;; Return value:  Size  Location     Type
 14357 ;;                  4    0[BANK0 ] unsigned long 
 14358 ;; Registers used:
 14359 ;;		None
 14360 ;; Tracked objects:
 14361 ;;		On entry : 0/0
 14362 ;;		On exit  : 0/0
 14363 ;;		Unchanged: 0/0
 14364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14365 ;;      Params:         0       4       0       0       0       0       0       0       0
 14366 ;;      Locals:         0       4       0       0       0       0       0       0       0
 14367 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14368 ;;      Totals:         0       8       0       0       0       0       0       0       0
 14369 ;;Total ram usage:        8 bytes
 14370 ;; Hardware stack levels used:    1
 14371 ;; Hardware stack levels required when called:   10
 14372 ;; This function calls:
 14373 ;;		Nothing
 14374 ;; This function is called by:
 14375 ;;		_delay
 14376 ;;		_main
 14377 ;;		_le4a20
 14378 ;;		_parseLoRaWan
 14379 ;;		_parse_message
 14380 ;;		_txZBStatusResponse
 14381 ;; This function uses a non-reentrant model
 14382 ;;
 14383                           
 14384                           	psect	text53
 14385  0048D2                     __ptext53:
 14386                           	opt stack 0
 14387  0048D2                     _millis:
 14388                           	opt stack 20
 14389                           
 14390                           ;Timer.c: 49: CCP1IE=0;
 14391                           
 14392                           ; BSR set to: 0
 14393                           ;incstack = 0
 14394  0048D2  949D               	bcf	3997,2,c	;volatile
 14395                           
 14396                           ;Timer.c: 50: uint32_t m=ticks;
 14397  0048D4  C224  F064         	movff	_ticks,millis@m	;volatile
 14398  0048D8  C225  F065         	movff	_ticks+1,millis@m+1	;volatile
 14399  0048DC  C226  F066         	movff	_ticks+2,millis@m+2	;volatile
 14400  0048E0  C227  F067         	movff	_ticks+3,millis@m+3	;volatile
 14401                           
 14402                           ;Timer.c: 51: CCP1IE=1;
 14403  0048E4  849D               	bsf	3997,2,c	;volatile
 14404                           
 14405                           ;Timer.c: 53: return m;
 14406  0048E6  C064  F060         	movff	millis@m,?_millis
 14407  0048EA  C065  F061         	movff	millis@m+1,?_millis+1
 14408  0048EE  C066  F062         	movff	millis@m+2,?_millis+2
 14409  0048F2  C067  F063         	movff	millis@m+3,?_millis+3
 14410  0048F6  0012               	return		;funcret
 14411  0048F8                     __end_of_millis:
 14412                           	opt stack 0
 14413                           tblptru	equ	0xFF8
 14414                           tblptrh	equ	0xFF7
 14415                           tblptrl	equ	0xFF6
 14416                           tablat	equ	0xFF5
 14417                           prodh	equ	0xFF4
 14418                           prodl	equ	0xFF3
 14419                           intcon	equ	0xFF2
 14420                           indf0	equ	0xFEF
 14421                           postinc0	equ	0xFEE
 14422                           fsr0h	equ	0xFEA
 14423                           fsr0l	equ	0xFE9
 14424                           wreg	equ	0xFE8
 14425                           indf1	equ	0xFE7
 14426                           postdec1	equ	0xFE5
 14427                           fsr1h	equ	0xFE2
 14428                           fsr1l	equ	0xFE1
 14429                           indf2	equ	0xFDF
 14430                           postinc2	equ	0xFDE
 14431                           postdec2	equ	0xFDD
 14432                           plusw2	equ	0xFDB
 14433                           fsr2h	equ	0xFDA
 14434                           fsr2l	equ	0xFD9
 14435                           status	equ	0xFD8
 14436                           
 14437 ;; *************** function _initRecebeDados *****************
 14438 ;; Defined at:
 14439 ;;		line 181 in file "LoRaWanCore.c"
 14440 ;; Parameters:    Size  Location     Type
 14441 ;;		None
 14442 ;; Auto vars:     Size  Location     Type
 14443 ;;		None
 14444 ;; Return value:  Size  Location     Type
 14445 ;;                  1    wreg      void 
 14446 ;; Registers used:
 14447 ;;		wreg, status,2
 14448 ;; Tracked objects:
 14449 ;;		On entry : 0/0
 14450 ;;		On exit  : 0/0
 14451 ;;		Unchanged: 0/0
 14452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14453 ;;      Params:         0       0       0       0       0       0       0       0       0
 14454 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14455 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14456 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14457 ;;Total ram usage:        0 bytes
 14458 ;; Hardware stack levels used:    1
 14459 ;; Hardware stack levels required when called:   10
 14460 ;; This function calls:
 14461 ;;		Nothing
 14462 ;; This function is called by:
 14463 ;;		_enviaComando
 14464 ;; This function uses a non-reentrant model
 14465 ;;
 14466                           
 14467                           	psect	text54
 14468  0049C0                     __ptext54:
 14469                           	opt stack 0
 14470  0049C0                     _initRecebeDados:
 14471                           	opt stack 18
 14472                           
 14473                           ;LoRaWanCore.c: 183: RCIE=0;
 14474                           
 14475                           ;incstack = 0
 14476  0049C0  9A9D               	bcf	3997,5,c	;volatile
 14477                           
 14478                           ;LoRaWanCore.c: 184: responseLoRaWan=0xFF;
 14479  0049C2  0101               	movlb	1	; () banked
 14480  0049C4  69FE               	setf	_responseLoRaWan& (0+255),b	;volatile
 14481                           
 14482                           ; BSR set to: 1
 14483                           ;LoRaWanCore.c: 185: tamFrame=0;
 14484  0049C6  0E00               	movlw	0
 14485  0049C8  6E5B               	movwf	_tamFrame,c	;volatile
 14486                           
 14487                           ;LoRaWanCore.c: 186: tamDadosRecebidos=0;
 14488  0049CA  0E00               	movlw	0
 14489  0049CC  6E5C               	movwf	_tamDadosRecebidos,c	;volatile
 14490                           
 14491                           ;LoRaWanCore.c: 187: novaMsgLoRaWan=0;
 14492  0049CE  0E00               	movlw	0
 14493  0049D0  6E5A               	movwf	_novaMsgLoRaWan,c	;volatile
 14494                           
 14495                           ; BSR set to: 1
 14496                           ;LoRaWanCore.c: 188: RCIE=1;
 14497  0049D2  8A9D               	bsf	3997,5,c	;volatile
 14498                           
 14499                           ; BSR set to: 1
 14500  0049D4  0012               	return		;funcret
 14501  0049D6                     __end_of_initRecebeDados:
 14502                           	opt stack 0
 14503                           tblptru	equ	0xFF8
 14504                           tblptrh	equ	0xFF7
 14505                           tblptrl	equ	0xFF6
 14506                           tablat	equ	0xFF5
 14507                           prodh	equ	0xFF4
 14508                           prodl	equ	0xFF3
 14509                           intcon	equ	0xFF2
 14510                           indf0	equ	0xFEF
 14511                           postinc0	equ	0xFEE
 14512                           fsr0h	equ	0xFEA
 14513                           fsr0l	equ	0xFE9
 14514                           wreg	equ	0xFE8
 14515                           indf1	equ	0xFE7
 14516                           postdec1	equ	0xFE5
 14517                           fsr1h	equ	0xFE2
 14518                           fsr1l	equ	0xFE1
 14519                           indf2	equ	0xFDF
 14520                           postinc2	equ	0xFDE
 14521                           postdec2	equ	0xFDD
 14522                           plusw2	equ	0xFDB
 14523                           fsr2h	equ	0xFDA
 14524                           fsr2l	equ	0xFD9
 14525                           status	equ	0xFD8
 14526                           
 14527 ;; *************** function _SYS_InterruptHigh *****************
 14528 ;; Defined at:
 14529 ;;		line 59 in file "usb/system.c"
 14530 ;; Parameters:    Size  Location     Type
 14531 ;;		None
 14532 ;; Auto vars:     Size  Location     Type
 14533 ;;  dig             2   48[COMRAM] int 
 14534 ;; Return value:  Size  Location     Type
 14535 ;;                  1    wreg      void 
 14536 ;; Registers used:
 14537 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14538 ;; Tracked objects:
 14539 ;;		On entry : 0/0
 14540 ;;		On exit  : 0/0
 14541 ;;		Unchanged: 0/0
 14542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14543 ;;      Params:         0       0       0       0       0       0       0       0       0
 14544 ;;      Locals:         2       0       0       0       0       0       0       0       0
 14545 ;;      Temps:         20       0       0       0       0       0       0       0       0
 14546 ;;      Totals:        22       0       0       0       0       0       0       0       0
 14547 ;;Total ram usage:       22 bytes
 14548 ;; Hardware stack levels used:    1
 14549 ;; Hardware stack levels required when called:    9
 14550 ;; This function calls:
 14551 ;;		_USBDeviceTasks
 14552 ;;		_getch
 14553 ;;		_recebeByteLoRaWan
 14554 ;; This function is called by:
 14555 ;;		Interrupt level 2
 14556 ;; This function uses a non-reentrant model
 14557 ;;
 14558                           
 14559                           	psect	intcode
 14560  000008                     __pintcode:
 14561                           	opt stack 0
 14562  000008                     _SYS_InterruptHigh:
 14563                           	opt stack 16
 14564                           
 14565                           ; BSR set to: 1
 14566                           ;incstack = 0
 14567  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 14568  00000A  ED4C  F00F         	call	int_func,f	;refresh shadow registers
 14569                           tblptru	equ	0xFF8
 14570                           tblptrh	equ	0xFF7
 14571                           tblptrl	equ	0xFF6
 14572                           tablat	equ	0xFF5
 14573                           prodh	equ	0xFF4
 14574                           prodl	equ	0xFF3
 14575                           intcon	equ	0xFF2
 14576                           indf0	equ	0xFEF
 14577                           postinc0	equ	0xFEE
 14578                           fsr0h	equ	0xFEA
 14579                           fsr0l	equ	0xFE9
 14580                           wreg	equ	0xFE8
 14581                           indf1	equ	0xFE7
 14582                           postdec1	equ	0xFE5
 14583                           fsr1h	equ	0xFE2
 14584                           fsr1l	equ	0xFE1
 14585                           indf2	equ	0xFDF
 14586                           postinc2	equ	0xFDE
 14587                           postdec2	equ	0xFDD
 14588                           plusw2	equ	0xFDB
 14589                           fsr2h	equ	0xFDA
 14590                           fsr2l	equ	0xFD9
 14591                           status	equ	0xFD8
 14592                           
 14593                           	psect	intcode_body
 14594  001E98                     __pintcode_body:
 14595                           	opt stack 16
 14596  001E98                     int_func:
 14597                           	opt stack 16
 14598  001E98  0006               	pop		; remove dummy address from shadow register refresh
 14599  001E9A  CFFA F01F          	movff	pclath,??_SYS_InterruptHigh+2
 14600  001E9E  CFFB F020          	movff	pclatu,??_SYS_InterruptHigh+3
 14601  001EA2  CFE9 F021          	movff	fsr0l,??_SYS_InterruptHigh+4
 14602  001EA6  CFEA F022          	movff	fsr0h,??_SYS_InterruptHigh+5
 14603  001EAA  CFE1 F023          	movff	fsr1l,??_SYS_InterruptHigh+6
 14604  001EAE  CFE2 F024          	movff	fsr1h,??_SYS_InterruptHigh+7
 14605  001EB2  CFD9 F025          	movff	fsr2l,??_SYS_InterruptHigh+8
 14606  001EB6  CFDA F026          	movff	fsr2h,??_SYS_InterruptHigh+9
 14607  001EBA  CFF3 F027          	movff	prodl,??_SYS_InterruptHigh+10
 14608  001EBE  CFF4 F028          	movff	prodh,??_SYS_InterruptHigh+11
 14609  001EC2  CFF6 F029          	movff	tblptrl,??_SYS_InterruptHigh+12
 14610  001EC6  CFF7 F02A          	movff	tblptrh,??_SYS_InterruptHigh+13
 14611  001ECA  CFF8 F02B          	movff	tblptru,??_SYS_InterruptHigh+14
 14612  001ECE  CFF5 F02C          	movff	tablat,??_SYS_InterruptHigh+15
 14613  001ED2  C05F  F02D         	movff	btemp,??_SYS_InterruptHigh+16
 14614  001ED6  C060  F02E         	movff	btemp+1,??_SYS_InterruptHigh+17
 14615  001EDA  C061  F02F         	movff	btemp+2,??_SYS_InterruptHigh+18
 14616  001EDE  C062  F030         	movff	btemp+3,??_SYS_InterruptHigh+19
 14617                           
 14618                           ;system.c: 61: if (CCP1IF && CCP1IE)
 14619  001EE2  B49E               	btfsc	3998,2,c	;volatile
 14620  001EE4  A49D               	btfss	3997,2,c	;volatile
 14621  001EE6  D073               	goto	i2l97
 14622                           
 14623                           ;system.c: 62: {
 14624                           ;system.c: 63: CCP1IF=0;
 14625  001EE8  949E               	bcf	3998,2,c	;volatile
 14626                           
 14627                           ;system.c: 65: ticks++;
 14628  001EEA  0E01               	movlw	1
 14629  001EEC  0102               	movlb	2	; () banked
 14630  001EEE  2724               	addwf	_ticks& (0+255),f,b	;volatile
 14631  001EF0  0E00               	movlw	0
 14632  001EF2  2325               	addwfc	(_ticks+1)& (0+255),f,b	;volatile
 14633  001EF4  2326               	addwfc	(_ticks+2)& (0+255),f,b	;volatile
 14634  001EF6  2327               	addwfc	(_ticks+3)& (0+255),f,b	;volatile
 14635                           
 14636                           ; BSR set to: 2
 14637                           ;system.c: 67: int dig=PORTDbits.RD0;
 14638  001EF8  A083               	btfss	3971,0,c	;volatile
 14639  001EFA  D003               	goto	i2u886_40
 14640  001EFC  6A1D               	clrf	??_SYS_InterruptHigh& (0+255),c
 14641  001EFE  2A1D               	incf	??_SYS_InterruptHigh& (0+255),f,c
 14642  001F00  D001               	goto	i2u886_48
 14643  001F02                     i2u886_40:
 14644  001F02  6A1D               	clrf	??_SYS_InterruptHigh& (0+255),c
 14645  001F04                     i2u886_48:
 14646  001F04  501D               	movf	??_SYS_InterruptHigh,w,c
 14647  001F06  6E31               	movwf	SYS_InterruptHigh@dig,c
 14648  001F08  6A32               	clrf	SYS_InterruptHigh@dig+1,c
 14649                           
 14650                           ;system.c: 91: if ((dig_1!=dig) && (dig==1))
 14651  001F0A  5031               	movf	SYS_InterruptHigh@dig,w,c
 14652  001F0C  0102               	movlb	2	; () banked
 14653  001F0E  1952               	xorwf	_dig_1& (0+255),w,b	;volatile
 14654  001F10  E104               	bnz	i2u887_40
 14655  001F12  5032               	movf	SYS_InterruptHigh@dig+1,w,c
 14656  001F14  1953               	xorwf	(_dig_1+1)& (0+255),w,b	;volatile
 14657  001F16  B4D8               	btfsc	status,2,c
 14658  001F18  D011               	goto	i2l98
 14659  001F1A                     i2u887_40:
 14660                           
 14661                           ; BSR set to: 2
 14662  001F1A  0431               	decf	SYS_InterruptHigh@dig,w,c
 14663  001F1C  1032               	iorwf	SYS_InterruptHigh@dig+1,w,c
 14664  001F1E  A4D8               	btfss	status,2,c
 14665  001F20  D00D               	goto	i2l98
 14666                           
 14667                           ; BSR set to: 2
 14668                           ;system.c: 92: {
 14669                           ;system.c: 93: freqPulses++;
 14670  001F22  0E01               	movlw	1
 14671  001F24  2647               	addwf	_freqPulses,f,c	;volatile
 14672  001F26  0E00               	movlw	0
 14673  001F28  2248               	addwfc	_freqPulses+1,f,c	;volatile
 14674  001F2A  2249               	addwfc	_freqPulses+2,f,c	;volatile
 14675  001F2C  224A               	addwfc	_freqPulses+3,f,c	;volatile
 14676                           
 14677                           ; BSR set to: 2
 14678                           ;system.c: 94: horimetroLigado=1;
 14679  001F2E  0E01               	movlw	1
 14680  001F30  6E59               	movwf	_horimetroLigado,c	;volatile
 14681                           
 14682                           ; BSR set to: 2
 14683                           ;system.c: 95: tempoSemVazao=0;
 14684  001F32  0E00               	movlw	0
 14685  001F34  6F4F               	movwf	(_tempoSemVazao+1)& (0+255),b	;volatile
 14686  001F36  0E00               	movlw	0
 14687  001F38  6F4E               	movwf	_tempoSemVazao& (0+255),b	;volatile
 14688                           
 14689                           ;system.c: 96: }
 14690  001F3A  D00D               	goto	i2l101
 14691  001F3C                     i2l98:
 14692                           
 14693                           ; BSR set to: 2
 14694                           ;system.c: 97: else if (horimetroLigado)
 14695                           
 14696                           ; BSR set to: 2
 14697  001F3C  5059               	movf	_horimetroLigado,w,c	;volatile
 14698  001F3E  B4D8               	btfsc	status,2,c
 14699  001F40  D00A               	goto	i2l101
 14700                           
 14701                           ; BSR set to: 2
 14702                           ;system.c: 98: {
 14703                           ;system.c: 99: tempoSemVazao++;
 14704  001F42  4B4E               	infsnz	_tempoSemVazao& (0+255),f,b	;volatile
 14705  001F44  2B4F               	incf	(_tempoSemVazao+1)& (0+255),f,b	;volatile
 14706                           
 14707                           ; BSR set to: 2
 14708                           ;system.c: 100: if (tempoSemVazao>10000)
 14709  001F46  0E11               	movlw	17
 14710  001F48  5D4E               	subwf	_tempoSemVazao& (0+255),w,b	;volatile
 14711  001F4A  0E27               	movlw	39
 14712  001F4C  594F               	subwfb	(_tempoSemVazao+1)& (0+255),w,b	;volatile
 14713  001F4E  A0D8               	btfss	status,0,c
 14714  001F50  D002               	goto	i2l101
 14715                           
 14716                           ; BSR set to: 2
 14717                           ;system.c: 101: horimetroLigado=0;
 14718  001F52  0E00               	movlw	0
 14719  001F54  6E59               	movwf	_horimetroLigado,c	;volatile
 14720  001F56                     i2l101:
 14721                           
 14722                           ; BSR set to: 2
 14723                           ;system.c: 102: }
 14724                           ;system.c: 103: dig_1=dig;
 14725                           
 14726                           ; BSR set to: 2
 14727                           
 14728                           ; BSR set to: 2
 14729                           
 14730                           ; BSR set to: 2
 14731  001F56  C031  F252         	movff	SYS_InterruptHigh@dig,_dig_1	;volatile
 14732  001F5A  C032  F253         	movff	SYS_InterruptHigh@dig+1,_dig_1+1	;volatile
 14733                           
 14734                           ;system.c: 105: if (horimetroLigado)
 14735  001F5E  5059               	movf	_horimetroLigado,w,c	;volatile
 14736  001F60  B4D8               	btfsc	status,2,c
 14737  001F62  D012               	goto	i2l103
 14738                           
 14739                           ; BSR set to: 2
 14740                           ;system.c: 106: {
 14741                           ;system.c: 107: tempoRegistroHorimetro++;
 14742  001F64  4B4C               	infsnz	_tempoRegistroHorimetro& (0+255),f,b	;volatile
 14743  001F66  2B4D               	incf	(_tempoRegistroHorimetro+1)& (0+255),f,b	;volatile
 14744                           
 14745                           ; BSR set to: 2
 14746                           ;system.c: 109: if (tempoRegistroHorimetro>=15000)
 14747  001F68  0E98               	movlw	152
 14748  001F6A  5D4C               	subwf	_tempoRegistroHorimetro& (0+255),w,b	;volatile
 14749  001F6C  0E3A               	movlw	58
 14750  001F6E  594D               	subwfb	(_tempoRegistroHorimetro+1)& (0+255),w,b	;volatile
 14751  001F70  A0D8               	btfss	status,0,c
 14752  001F72  D00A               	goto	i2l103
 14753                           
 14754                           ; BSR set to: 2
 14755                           ;system.c: 110: {
 14756                           ;system.c: 111: tempoHorimetro++;
 14757  001F74  0E01               	movlw	1
 14758  001F76  2720               	addwf	_tempoHorimetro& (0+255),f,b	;volatile
 14759  001F78  0E00               	movlw	0
 14760  001F7A  2321               	addwfc	(_tempoHorimetro+1)& (0+255),f,b	;volatile
 14761  001F7C  2322               	addwfc	(_tempoHorimetro+2)& (0+255),f,b	;volatile
 14762  001F7E  2323               	addwfc	(_tempoHorimetro+3)& (0+255),f,b	;volatile
 14763                           
 14764                           ; BSR set to: 2
 14765                           ;system.c: 112: tempoRegistroHorimetro=0;
 14766  001F80  0E00               	movlw	0
 14767  001F82  6F4D               	movwf	(_tempoRegistroHorimetro+1)& (0+255),b	;volatile
 14768  001F84  0E00               	movlw	0
 14769  001F86  6F4C               	movwf	_tempoRegistroHorimetro& (0+255),b	;volatile
 14770  001F88                     i2l103:
 14771                           
 14772                           ; BSR set to: 2
 14773                           ;system.c: 113: }
 14774                           ;system.c: 114: }
 14775                           ;system.c: 116: tempoVazaoInstantanea++;
 14776                           
 14777                           ; BSR set to: 2
 14778                           
 14779                           ; BSR set to: 2
 14780  001F88  4B4A               	infsnz	_tempoVazaoInstantanea& (0+255),f,b	;volatile
 14781  001F8A  2B4B               	incf	(_tempoVazaoInstantanea+1)& (0+255),f,b	;volatile
 14782                           
 14783                           ; BSR set to: 2
 14784                           ;system.c: 117: if (tempoVazaoInstantanea>=1000)
 14785  001F8C  0EE8               	movlw	232
 14786  001F8E  5D4A               	subwf	_tempoVazaoInstantanea& (0+255),w,b	;volatile
 14787  001F90  0E03               	movlw	3
 14788  001F92  594B               	subwfb	(_tempoVazaoInstantanea+1)& (0+255),w,b	;volatile
 14789  001F94  A0D8               	btfss	status,0,c
 14790  001F96  D026               	goto	i2l108
 14791                           
 14792                           ; BSR set to: 2
 14793                           ;system.c: 118: {
 14794                           ;system.c: 119: vazaoInstantanea=freqPulses-freqPulsesAnterior;
 14795  001F98  C21C  F01D         	movff	_freqPulsesAnterior,??_SYS_InterruptHigh	;volatile
 14796  001F9C  C21D  F01E         	movff	_freqPulsesAnterior+1,??_SYS_InterruptHigh+1	;volatile
 14797  001FA0  1E1D               	comf	??_SYS_InterruptHigh,f,c
 14798  001FA2  1E1E               	comf	??_SYS_InterruptHigh+1,f,c
 14799  001FA4  4A1D               	infsnz	??_SYS_InterruptHigh,f,c
 14800  001FA6  2A1E               	incf	??_SYS_InterruptHigh+1,f,c
 14801  001FA8  5047               	movf	_freqPulses,w,c	;volatile
 14802  001FAA  241D               	addwf	??_SYS_InterruptHigh,w,c
 14803  001FAC  6F48               	movwf	_vazaoInstantanea& (0+255),b	;volatile
 14804  001FAE  5048               	movf	_freqPulses+1,w,c	;volatile
 14805  001FB0  201E               	addwfc	??_SYS_InterruptHigh+1,w,c
 14806  001FB2  6F49               	movwf	(_vazaoInstantanea+1)& (0+255),b	;volatile
 14807                           
 14808                           ; BSR set to: 2
 14809                           ;system.c: 120: freqPulsesAnterior=freqPulses;
 14810  001FB4  C047  F21C         	movff	_freqPulses,_freqPulsesAnterior	;volatile
 14811  001FB8  C048  F21D         	movff	_freqPulses+1,_freqPulsesAnterior+1	;volatile
 14812  001FBC  C049  F21E         	movff	_freqPulses+2,_freqPulsesAnterior+2	;volatile
 14813  001FC0  C04A  F21F         	movff	_freqPulses+3,_freqPulsesAnterior+3	;volatile
 14814                           
 14815                           ; BSR set to: 2
 14816                           ;system.c: 121: tempoVazaoInstantanea=0;
 14817  001FC4  0E00               	movlw	0
 14818  001FC6  6F4B               	movwf	(_tempoVazaoInstantanea+1)& (0+255),b	;volatile
 14819  001FC8  0E00               	movlw	0
 14820  001FCA  6F4A               	movwf	_tempoVazaoInstantanea& (0+255),b	;volatile
 14821                           
 14822                           ; BSR set to: 2
 14823                           ;system.c: 122: }
 14824                           ;system.c: 123: }
 14825  001FCC  D00B               	goto	i2l108
 14826  001FCE                     i2l97:
 14827                           
 14828                           ;system.c: 124: else if (RCIE && RCIF)
 14829  001FCE  BA9D               	btfsc	3997,5,c	;volatile
 14830  001FD0  AA9E               	btfss	3998,5,c	;volatile
 14831  001FD2  D005               	goto	i2l106
 14832                           
 14833                           ;system.c: 125: {
 14834                           ;system.c: 131: recebeByteLoRaWan(getch());
 14835  001FD4  EC7C  F024         	call	_getch	;wreg free
 14836  001FD8  EC83  F00A         	call	_recebeByteLoRaWan
 14837                           
 14838                           ;system.c: 133: }
 14839  001FDC  D003               	goto	i2l108
 14840  001FDE                     i2l106:
 14841                           
 14842                           ;system.c: 134: else if (USBIE)
 14843  001FDE  BAA0               	btfsc	4000,5,c	;volatile
 14844                           
 14845                           ;system.c: 135: {
 14846                           ;system.c: 137: USBDeviceTasks();
 14847  001FE0  EC32  F013         	call	_USBDeviceTasks	;wreg free
 14848  001FE4                     i2l108:
 14849  001FE4  C030  F062         	movff	??_SYS_InterruptHigh+19,btemp+3
 14850  001FE8  C02F  F061         	movff	??_SYS_InterruptHigh+18,btemp+2
 14851  001FEC  C02E  F060         	movff	??_SYS_InterruptHigh+17,btemp+1
 14852  001FF0  C02D  F05F         	movff	??_SYS_InterruptHigh+16,btemp
 14853  001FF4  C02C  FFF5         	movff	??_SYS_InterruptHigh+15,tablat
 14854  001FF8  C02B  FFF8         	movff	??_SYS_InterruptHigh+14,tblptru
 14855  001FFC  C02A  FFF7         	movff	??_SYS_InterruptHigh+13,tblptrh
 14856  002000  C029  FFF6         	movff	??_SYS_InterruptHigh+12,tblptrl
 14857  002004  C028  FFF4         	movff	??_SYS_InterruptHigh+11,prodh
 14858  002008  C027  FFF3         	movff	??_SYS_InterruptHigh+10,prodl
 14859  00200C  C026  FFDA         	movff	??_SYS_InterruptHigh+9,fsr2h
 14860  002010  C025  FFD9         	movff	??_SYS_InterruptHigh+8,fsr2l
 14861  002014  C024  FFE2         	movff	??_SYS_InterruptHigh+7,fsr1h
 14862  002018  C023  FFE1         	movff	??_SYS_InterruptHigh+6,fsr1l
 14863  00201C  C022  FFEA         	movff	??_SYS_InterruptHigh+5,fsr0h
 14864  002020  C021  FFE9         	movff	??_SYS_InterruptHigh+4,fsr0l
 14865  002024  C020  FFFB         	movff	??_SYS_InterruptHigh+3,pclatu
 14866  002028  C01F  FFFA         	movff	??_SYS_InterruptHigh+2,pclath
 14867  00202C  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 14868  00202E  0011               	retfie		f
 14869  002030                     __end_of_SYS_InterruptHigh:
 14870                           	opt stack 0
 14871                           pclatu	equ	0xFFB
 14872                           pclath	equ	0xFFA
 14873                           tblptru	equ	0xFF8
 14874                           tblptrh	equ	0xFF7
 14875                           tblptrl	equ	0xFF6
 14876                           tablat	equ	0xFF5
 14877                           prodh	equ	0xFF4
 14878                           prodl	equ	0xFF3
 14879                           intcon	equ	0xFF2
 14880                           indf0	equ	0xFEF
 14881                           postinc0	equ	0xFEE
 14882                           fsr0h	equ	0xFEA
 14883                           fsr0l	equ	0xFE9
 14884                           wreg	equ	0xFE8
 14885                           indf1	equ	0xFE7
 14886                           postdec1	equ	0xFE5
 14887                           fsr1h	equ	0xFE2
 14888                           fsr1l	equ	0xFE1
 14889                           indf2	equ	0xFDF
 14890                           postinc2	equ	0xFDE
 14891                           postdec2	equ	0xFDD
 14892                           plusw2	equ	0xFDB
 14893                           fsr2h	equ	0xFDA
 14894                           fsr2l	equ	0xFD9
 14895                           status	equ	0xFD8
 14896                           
 14897 ;; *************** function _recebeByteLoRaWan *****************
 14898 ;; Defined at:
 14899 ;;		line 193 in file "LoRaWanCore.c"
 14900 ;; Parameters:    Size  Location     Type
 14901 ;;  b               1    wreg     char 
 14902 ;; Auto vars:     Size  Location     Type
 14903 ;;  b               1   15[COMRAM] char 
 14904 ;;  i               1   18[COMRAM] unsigned char 
 14905 ;;  port            1   14[COMRAM] unsigned char 
 14906 ;;  i               1   16[COMRAM] unsigned char 
 14907 ;;  tamMsgRx        1   17[COMRAM] unsigned char 
 14908 ;;  len             1   13[COMRAM] unsigned char 
 14909 ;; Return value:  Size  Location     Type
 14910 ;;                  1    wreg      void 
 14911 ;; Registers used:
 14912 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14913 ;; Tracked objects:
 14914 ;;		On entry : 0/0
 14915 ;;		On exit  : 0/0
 14916 ;;		Unchanged: 0/0
 14917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14918 ;;      Params:         0       0       0       0       0       0       0       0       0
 14919 ;;      Locals:         6       0       0       0       0       0       0       0       0
 14920 ;;      Temps:          4       0       0       0       0       0       0       0       0
 14921 ;;      Totals:        10       0       0       0       0       0       0       0       0
 14922 ;;Total ram usage:       10 bytes
 14923 ;; Hardware stack levels used:    1
 14924 ;; Hardware stack levels required when called:    2
 14925 ;; This function calls:
 14926 ;;		_converter
 14927 ;;		_strcmp
 14928 ;;		_strcpy
 14929 ;;		_strncmp
 14930 ;;		i2_strlen
 14931 ;; This function is called by:
 14932 ;;		_SYS_InterruptHigh
 14933 ;; This function uses a non-reentrant model
 14934 ;;
 14935                           
 14936                           	psect	text56
 14937  001506                     __ptext56:
 14938                           	opt stack 0
 14939  001506                     _recebeByteLoRaWan:
 14940                           	opt stack 22
 14941                           
 14942                           ;incstack = 0
 14943                           ;recebeByteLoRaWan@b stored from wreg
 14944  001506  6E10               	movwf	recebeByteLoRaWan@b,c
 14945                           
 14946                           ;LoRaWanCore.c: 195: static uint8_t frameData[100];
 14947                           ;LoRaWanCore.c: 197: frameData[tamFrame++]=b;
 14948  001508  505B               	movf	_tamFrame,w,c	;volatile
 14949  00150A  0D01               	mullw	1
 14950  00150C  0E14               	movlw	low recebeByteLoRaWan@frameData
 14951  00150E  24F3               	addwf	prodl,w,c
 14952  001510  6ED9               	movwf	fsr2l,c
 14953  001512  0E03               	movlw	high recebeByteLoRaWan@frameData
 14954  001514  20F4               	addwfc	prodh,w,c
 14955  001516  6EDA               	movwf	fsr2h,c
 14956  001518  C010  FFDF         	movff	recebeByteLoRaWan@b,indf2
 14957  00151C  2A5B               	incf	_tamFrame,f,c	;volatile
 14958                           
 14959                           ;LoRaWanCore.c: 198: if ((b==0x0A) && (tamFrame>2))
 14960  00151E  0E0A               	movlw	10
 14961  001520  1810               	xorwf	recebeByteLoRaWan@b,w,c
 14962  001522  A4D8               	btfss	status,2,c
 14963  001524  D10F               	goto	i2u832_40
 14964  001526  0E02               	movlw	2
 14965  001528  645B               	cpfsgt	_tamFrame,c	;volatile
 14966  00152A  D10C               	goto	i2u832_40
 14967                           
 14968                           ;LoRaWanCore.c: 199: {
 14969                           ;LoRaWanCore.c: 200: frameData[tamFrame]=0x00;
 14970  00152C  505B               	movf	_tamFrame,w,c	;volatile
 14971  00152E  0D01               	mullw	1
 14972  001530  0E14               	movlw	low recebeByteLoRaWan@frameData
 14973  001532  24F3               	addwf	prodl,w,c
 14974  001534  6ED9               	movwf	fsr2l,c
 14975  001536  0E03               	movlw	high recebeByteLoRaWan@frameData
 14976  001538  20F4               	addwfc	prodh,w,c
 14977  00153A  6EDA               	movwf	fsr2h,c
 14978  00153C  0E00               	movlw	0
 14979  00153E  6EDF               	movwf	indf2,c
 14980                           
 14981                           ;LoRaWanCore.c: 201: strcpy(frameBuffer,frameData);
 14982  001540  0E00               	movlw	low _frameBuffer
 14983  001542  6E01               	movwf	strcpy@to,c
 14984  001544  0E06               	movlw	high _frameBuffer
 14985  001546  6E02               	movwf	strcpy@to+1,c
 14986  001548  0E14               	movlw	low recebeByteLoRaWan@frameData
 14987  00154A  6E03               	movwf	strcpy@from,c
 14988  00154C  0E03               	movlw	high recebeByteLoRaWan@frameData
 14989  00154E  6E04               	movwf	strcpy@from+1,c
 14990  001550  ECB1  F023         	call	_strcpy	;wreg free
 14991                           
 14992                           ;LoRaWanCore.c: 203: frameData[tamFrame-2]=0x00;
 14993  001554  0EFE               	movlw	254
 14994  001556  6E0A               	movwf	??_recebeByteLoRaWan& (0+255),c
 14995  001558  0EFF               	movlw	255
 14996  00155A  6E0B               	movwf	(??_recebeByteLoRaWan+1)& (0+255),c
 14997  00155C  505B               	movf	_tamFrame,w,c	;volatile
 14998  00155E  6E0C               	movwf	(??_recebeByteLoRaWan+2)& (0+255),c
 14999  001560  6A0D               	clrf	(??_recebeByteLoRaWan+3)& (0+255),c
 15000  001562  500A               	movf	??_recebeByteLoRaWan,w,c
 15001  001564  260C               	addwf	??_recebeByteLoRaWan+2,f,c
 15002  001566  500B               	movf	??_recebeByteLoRaWan+1,w,c
 15003  001568  220D               	addwfc	??_recebeByteLoRaWan+3,f,c
 15004  00156A  0E14               	movlw	low recebeByteLoRaWan@frameData
 15005  00156C  240C               	addwf	??_recebeByteLoRaWan+2,w,c
 15006  00156E  6ED9               	movwf	fsr2l,c
 15007  001570  0E03               	movlw	high recebeByteLoRaWan@frameData
 15008  001572  200D               	addwfc	??_recebeByteLoRaWan+3,w,c
 15009  001574  6EDA               	movwf	fsr2h,c
 15010  001576  0E00               	movlw	0
 15011  001578  6EDF               	movwf	indf2,c
 15012                           
 15013                           ;LoRaWanCore.c: 204: tamFrame=0;
 15014  00157A  0E00               	movlw	0
 15015  00157C  6E5B               	movwf	_tamFrame,c	;volatile
 15016                           
 15017                           ;LoRaWanCore.c: 205: uint8_t len = (sizeof(MSG_LORAWAN) / sizeof((MSG_LORAWAN)[0]));
 15018  00157E  0E0F               	movlw	15
 15019  001580  6E0E               	movwf	recebeByteLoRaWan@len,c
 15020                           
 15021                           ;LoRaWanCore.c: 206: responseLoRaWan=0xFF;
 15022  001582  0101               	movlb	1	; () banked
 15023  001584  69FE               	setf	_responseLoRaWan& (0+255),b	;volatile
 15024                           
 15025                           ; BSR set to: 1
 15026                           ;LoRaWanCore.c: 207: for (uint8_t i=0;i<len;i++)
 15027  001586  0E00               	movlw	0
 15028  001588  6E11               	movwf	recebeByteLoRaWan@i,c
 15029  00158A  D01C               	goto	i2l2001
 15030  00158C                     
 15031                           ;LoRaWanCore.c: 208: {
 15032                           ;LoRaWanCore.c: 209: if (strcmp(frameData,MSG_LORAWAN[i])==0)
 15033                           
 15034                           ; BSR set to: 1
 15035  00158C  0E14               	movlw	low recebeByteLoRaWan@frameData
 15036  00158E  6E01               	movwf	strcmp@s1,c
 15037  001590  0E03               	movlw	high recebeByteLoRaWan@frameData
 15038  001592  6E02               	movwf	strcmp@s1+1,c
 15039  001594  5011               	movf	recebeByteLoRaWan@i,w,c
 15040  001596  0D02               	mullw	2
 15041  001598  0EDB               	movlw	low _MSG_LORAWAN
 15042  00159A  24F3               	addwf	prodl,w,c
 15043  00159C  6ED9               	movwf	fsr2l,c
 15044  00159E  0E02               	movlw	high _MSG_LORAWAN
 15045  0015A0  20F4               	addwfc	prodh,w,c
 15046  0015A2  6EDA               	movwf	fsr2h,c
 15047  0015A4  CFDE F003          	movff	postinc2,strcmp@s2
 15048  0015A8  CFDD F004          	movff	postdec2,strcmp@s2+1
 15049  0015AC  EC48  F022         	call	_strcmp	;wreg free
 15050  0015B0  5001               	movf	?_strcmp,w,c
 15051  0015B2  1002               	iorwf	?_strcmp+1,w,c
 15052  0015B4  A4D8               	btfss	status,2,c
 15053  0015B6  D005               	goto	i2l2003
 15054                           
 15055                           ;LoRaWanCore.c: 210: {
 15056                           ;LoRaWanCore.c: 211: responseLoRaWan=i;
 15057  0015B8  C011  F1FE         	movff	recebeByteLoRaWan@i,_responseLoRaWan	;volatile
 15058                           
 15059                           ;LoRaWanCore.c: 212: novaMsgLoRaWan=1;
 15060  0015BC  0E01               	movlw	1
 15061  0015BE  6E5A               	movwf	_novaMsgLoRaWan,c	;volatile
 15062                           
 15063                           ;LoRaWanCore.c: 213: return;
 15064  0015C0  0012               	return	
 15065  0015C2                     i2l2003:
 15066  0015C2  2A11               	incf	recebeByteLoRaWan@i,f,c
 15067  0015C4                     i2l2001:
 15068  0015C4  500E               	movf	recebeByteLoRaWan@len,w,c
 15069  0015C6  5C11               	subwf	recebeByteLoRaWan@i,w,c
 15070  0015C8  A0D8               	btfss	status,0,c
 15071  0015CA  D7E0               	goto	i2l2002
 15072                           
 15073                           ;LoRaWanCore.c: 214: }
 15074                           ;LoRaWanCore.c: 215: }
 15075                           ;LoRaWanCore.c: 217: uint8_t tamMsgRx=strlen(MSG_LORAWAN[15]);
 15076  0015CC  C2F9  F001         	movff	_MSG_LORAWAN+30,i2strlen@s
 15077  0015D0  C2FA  F002         	movff	_MSG_LORAWAN+31,i2strlen@s+1
 15078  0015D4  ECFB  F021         	call	i2_strlen	;wreg free
 15079  0015D8  5001               	movf	?i2_strlen,w,c
 15080  0015DA  6E12               	movwf	recebeByteLoRaWan@tamMsgRx,c
 15081                           
 15082                           ;LoRaWanCore.c: 218: if (strncmp(frameData,MSG_LORAWAN[15],tamMsgRx)==0)
 15083  0015DC  0E14               	movlw	low recebeByteLoRaWan@frameData
 15084  0015DE  6E01               	movwf	strncmp@s1,c
 15085  0015E0  0E03               	movlw	high recebeByteLoRaWan@frameData
 15086  0015E2  6E02               	movwf	strncmp@s1+1,c
 15087  0015E4  C2F9  F003         	movff	_MSG_LORAWAN+30,strncmp@s2
 15088  0015E8  C2FA  F004         	movff	_MSG_LORAWAN+31,strncmp@s2+1
 15089  0015EC  C012  F005         	movff	recebeByteLoRaWan@tamMsgRx,strncmp@len
 15090  0015F0  6A06               	clrf	strncmp@len+1,c
 15091  0015F2  EC86  F01F         	call	_strncmp	;wreg free
 15092  0015F6  5001               	movf	?_strncmp,w,c
 15093  0015F8  1002               	iorwf	?_strncmp+1,w,c
 15094  0015FA  A4D8               	btfss	status,2,c
 15095  0015FC  D006               	goto	i2l2006
 15096                           
 15097                           ;LoRaWanCore.c: 219: {
 15098                           ;LoRaWanCore.c: 220: responseLoRaWan=15;
 15099  0015FE  0E0F               	movlw	15
 15100  001600  0101               	movlb	1	; () banked
 15101  001602  6FFE               	movwf	_responseLoRaWan& (0+255),b	;volatile
 15102                           
 15103                           ;LoRaWanCore.c: 221: novaMsgLoRaWan=1;
 15104  001604  0E01               	movlw	1
 15105  001606  6E5A               	movwf	_novaMsgLoRaWan,c	;volatile
 15106                           
 15107                           ; BSR set to: 1
 15108                           ;LoRaWanCore.c: 222: return;
 15109  001608  0012               	return	
 15110  00160A                     i2l2006:
 15111                           
 15112                           ;LoRaWanCore.c: 223: }
 15113                           ;LoRaWanCore.c: 227: tamMsgRx=strlen(MSG_LORAWAN[10]);
 15114                           
 15115                           ; BSR set to: 1
 15116  00160A  C2EF  F001         	movff	_MSG_LORAWAN+20,i2strlen@s
 15117  00160E  C2F0  F002         	movff	_MSG_LORAWAN+21,i2strlen@s+1
 15118  001612  ECFB  F021         	call	i2_strlen	;wreg free
 15119  001616  5001               	movf	?i2_strlen,w,c
 15120  001618  6E12               	movwf	recebeByteLoRaWan@tamMsgRx,c
 15121                           
 15122                           ;LoRaWanCore.c: 228: if (strncmp(frameData,MSG_LORAWAN[10],tamMsgRx)==0)
 15123  00161A  0E14               	movlw	low recebeByteLoRaWan@frameData
 15124  00161C  6E01               	movwf	strncmp@s1,c
 15125  00161E  0E03               	movlw	high recebeByteLoRaWan@frameData
 15126  001620  6E02               	movwf	strncmp@s1+1,c
 15127  001622  C2EF  F003         	movff	_MSG_LORAWAN+20,strncmp@s2
 15128  001626  C2F0  F004         	movff	_MSG_LORAWAN+21,strncmp@s2+1
 15129  00162A  C012  F005         	movff	recebeByteLoRaWan@tamMsgRx,strncmp@len
 15130  00162E  6A06               	clrf	strncmp@len+1,c
 15131  001630  EC86  F01F         	call	_strncmp	;wreg free
 15132  001634  5001               	movf	?_strncmp,w,c
 15133  001636  1002               	iorwf	?_strncmp+1,w,c
 15134  001638  A4D8               	btfss	status,2,c
 15135  00163A  D084               	goto	i2u832_40
 15136                           
 15137                           ;LoRaWanCore.c: 229: {
 15138                           ;LoRaWanCore.c: 232: uint8_t i=tamMsgRx;
 15139  00163C  C012  F013         	movff	recebeByteLoRaWan@tamMsgRx,recebeByteLoRaWan@i_4631
 15140                           
 15141                           ;LoRaWanCore.c: 233: uint8_t port=0;
 15142  001640  0E00               	movlw	0
 15143  001642  6E0F               	movwf	recebeByteLoRaWan@port,c
 15144                           
 15145                           ;LoRaWanCore.c: 235: for (;i<strlen(frameData);i++)
 15146  001644  D027               	goto	i2l2008
 15147  001646                     
 15148                           ;LoRaWanCore.c: 236: {
 15149                           ;LoRaWanCore.c: 237: if ((frameData[i]<'0') || (frameData[i]>'9'))
 15150  001646  5013               	movf	recebeByteLoRaWan@i_4631,w,c
 15151  001648  0D01               	mullw	1
 15152  00164A  0E14               	movlw	low recebeByteLoRaWan@frameData
 15153  00164C  24F3               	addwf	prodl,w,c
 15154  00164E  6ED9               	movwf	fsr2l,c
 15155  001650  0E03               	movlw	high recebeByteLoRaWan@frameData
 15156  001652  20F4               	addwfc	prodh,w,c
 15157  001654  6EDA               	movwf	fsr2h,c
 15158  001656  0E2F               	movlw	47
 15159  001658  64DF               	cpfsgt	indf2,c
 15160  00165A  D02B               	goto	i2u830_40
 15161  00165C  5013               	movf	recebeByteLoRaWan@i_4631,w,c
 15162  00165E  0D01               	mullw	1
 15163  001660  0E14               	movlw	low recebeByteLoRaWan@frameData
 15164  001662  24F3               	addwf	prodl,w,c
 15165  001664  6ED9               	movwf	fsr2l,c
 15166  001666  0E03               	movlw	high recebeByteLoRaWan@frameData
 15167  001668  20F4               	addwfc	prodh,w,c
 15168  00166A  6EDA               	movwf	fsr2h,c
 15169  00166C  0E39               	movlw	57
 15170  00166E  64DF               	cpfsgt	indf2,c
 15171  001670  D001               	goto	i2l2010
 15172  001672  D01F               	goto	i2u830_40
 15173  001674                     i2l2010:
 15174                           
 15175                           ;LoRaWanCore.c: 239: port*=10;
 15176  001674  0E0A               	movlw	10
 15177  001676  020F               	mulwf	recebeByteLoRaWan@port,c
 15178  001678  50F3               	movf	prodl,w,c
 15179  00167A  6E0F               	movwf	recebeByteLoRaWan@port,c
 15180                           
 15181                           ;LoRaWanCore.c: 240: port+=frameData[i]-'0';
 15182  00167C  5013               	movf	recebeByteLoRaWan@i_4631,w,c
 15183  00167E  0D01               	mullw	1
 15184  001680  0E14               	movlw	low recebeByteLoRaWan@frameData
 15185  001682  24F3               	addwf	prodl,w,c
 15186  001684  6ED9               	movwf	fsr2l,c
 15187  001686  0E03               	movlw	high recebeByteLoRaWan@frameData
 15188  001688  20F4               	addwfc	prodh,w,c
 15189  00168A  6EDA               	movwf	fsr2h,c
 15190  00168C  50DF               	movf	indf2,w,c
 15191  00168E  0FD0               	addlw	208
 15192  001690  260F               	addwf	recebeByteLoRaWan@port,f,c
 15193  001692  2A13               	incf	recebeByteLoRaWan@i_4631,f,c
 15194  001694                     i2l2008:
 15195  001694  0E14               	movlw	low recebeByteLoRaWan@frameData
 15196  001696  6E01               	movwf	i2strlen@s,c
 15197  001698  0E03               	movlw	high recebeByteLoRaWan@frameData
 15198  00169A  6E02               	movwf	i2strlen@s+1,c
 15199  00169C  ECFB  F021         	call	i2_strlen	;wreg free
 15200  0016A0  5013               	movf	recebeByteLoRaWan@i_4631,w,c
 15201  0016A2  6E0A               	movwf	??_recebeByteLoRaWan& (0+255),c
 15202  0016A4  6A0B               	clrf	(??_recebeByteLoRaWan+1)& (0+255),c
 15203  0016A6  5001               	movf	?i2_strlen,w,c
 15204  0016A8  5C0A               	subwf	??_recebeByteLoRaWan,w,c
 15205  0016AA  5002               	movf	?i2_strlen+1,w,c
 15206  0016AC  580B               	subwfb	??_recebeByteLoRaWan+1,w,c
 15207  0016AE  A0D8               	btfss	status,0,c
 15208  0016B0  D7CA               	goto	i2l2009
 15209  0016B2                     i2u830_40:
 15210                           
 15211                           ;LoRaWanCore.c: 241: }
 15212                           ;LoRaWanCore.c: 242: i++;
 15213  0016B2  2A13               	incf	recebeByteLoRaWan@i_4631,f,c
 15214                           
 15215                           ;LoRaWanCore.c: 244: for (;i<strlen(frameData);i+=2)
 15216  0016B4  D038               	goto	i2l2014
 15217  0016B6                     
 15218                           ;LoRaWanCore.c: 245: {
 15219                           ;LoRaWanCore.c: 246: dadosRecebidos[tamDadosRecebidos].port=port;
 15220  0016B6  505C               	movf	_tamDadosRecebidos,w,c	;volatile
 15221  0016B8  0D02               	mullw	2
 15222  0016BA  0E00               	movlw	low _dadosRecebidos
 15223  0016BC  24F3               	addwf	prodl,w,c
 15224  0016BE  6ED9               	movwf	fsr2l,c
 15225  0016C0  0E03               	movlw	high _dadosRecebidos
 15226  0016C2  20F4               	addwfc	prodh,w,c
 15227  0016C4  6EDA               	movwf	fsr2h,c
 15228  0016C6  C00F  FFDF         	movff	recebeByteLoRaWan@port,indf2
 15229                           
 15230                           ;LoRaWanCore.c: 247: dadosRecebidos[tamDadosRecebidos++].data=converter(frameData[i],fra
      +                          meData[i+1]);
 15231  0016CA  505C               	movf	_tamDadosRecebidos,w,c	;volatile
 15232  0016CC  0D02               	mullw	2
 15233  0016CE  0E01               	movlw	1
 15234  0016D0  26F3               	addwf	prodl,f,c
 15235  0016D2  0E00               	movlw	0
 15236  0016D4  22F4               	addwfc	prodh,f,c
 15237  0016D6  0E00               	movlw	low _dadosRecebidos
 15238  0016D8  24F3               	addwf	prodl,w,c
 15239  0016DA  6ED9               	movwf	fsr2l,c
 15240  0016DC  0E03               	movlw	high _dadosRecebidos
 15241  0016DE  20F4               	addwfc	prodh,w,c
 15242  0016E0  6EDA               	movwf	fsr2h,c
 15243  0016E2  5013               	movf	recebeByteLoRaWan@i_4631,w,c
 15244  0016E4  6E0A               	movwf	??_recebeByteLoRaWan& (0+255),c
 15245  0016E6  6A0B               	clrf	(??_recebeByteLoRaWan+1)& (0+255),c
 15246  0016E8  0E01               	movlw	1
 15247  0016EA  260A               	addwf	??_recebeByteLoRaWan,f,c
 15248  0016EC  0E00               	movlw	0
 15249  0016EE  220B               	addwfc	??_recebeByteLoRaWan+1,f,c
 15250  0016F0  0E14               	movlw	low recebeByteLoRaWan@frameData
 15251  0016F2  240A               	addwf	??_recebeByteLoRaWan,w,c
 15252  0016F4  6EE1               	movwf	fsr1l,c
 15253  0016F6  0E03               	movlw	high recebeByteLoRaWan@frameData
 15254  0016F8  200B               	addwfc	??_recebeByteLoRaWan+1,w,c
 15255  0016FA  6EE2               	movwf	fsr1h,c
 15256  0016FC  50E7               	movf	indf1,w,c
 15257  0016FE  6E02               	movwf	converter@conv2,c
 15258  001700  5013               	movf	recebeByteLoRaWan@i_4631,w,c
 15259  001702  0D01               	mullw	1
 15260  001704  0E14               	movlw	low recebeByteLoRaWan@frameData
 15261  001706  24F3               	addwf	prodl,w,c
 15262  001708  6EE1               	movwf	fsr1l,c
 15263  00170A  0E03               	movlw	high recebeByteLoRaWan@frameData
 15264  00170C  20F4               	addwfc	prodh,w,c
 15265  00170E  6EE2               	movwf	fsr1h,c
 15266  001710  50E7               	movf	indf1,w,c
 15267  001712  ECC0  F01E         	call	_converter
 15268  001716  6EDF               	movwf	indf2,c
 15269  001718  2A5C               	incf	_tamDadosRecebidos,f,c	;volatile
 15270                           
 15271                           ;LoRaWanCore.c: 248: if (tamDadosRecebidos>=10)
 15272  00171A  0E09               	movlw	9
 15273  00171C  645C               	cpfsgt	_tamDadosRecebidos,c	;volatile
 15274  00171E  D001               	goto	i2l2016
 15275  001720  0012               	return	
 15276  001722                     i2l2016:
 15277  001722  0E02               	movlw	2
 15278  001724  2613               	addwf	recebeByteLoRaWan@i_4631,f,c
 15279  001726                     i2l2014:
 15280  001726  0E14               	movlw	low recebeByteLoRaWan@frameData
 15281  001728  6E01               	movwf	i2strlen@s,c
 15282  00172A  0E03               	movlw	high recebeByteLoRaWan@frameData
 15283  00172C  6E02               	movwf	i2strlen@s+1,c
 15284  00172E  ECFB  F021         	call	i2_strlen	;wreg free
 15285  001732  5013               	movf	recebeByteLoRaWan@i_4631,w,c
 15286  001734  6E0A               	movwf	??_recebeByteLoRaWan& (0+255),c
 15287  001736  6A0B               	clrf	(??_recebeByteLoRaWan+1)& (0+255),c
 15288  001738  5001               	movf	?i2_strlen,w,c
 15289  00173A  5C0A               	subwf	??_recebeByteLoRaWan,w,c
 15290  00173C  5002               	movf	?i2_strlen+1,w,c
 15291  00173E  580B               	subwfb	??_recebeByteLoRaWan+1,w,c
 15292  001740  A0D8               	btfss	status,0,c
 15293  001742  D7B9               	goto	i2l2015
 15294  001744                     i2u832_40:
 15295                           
 15296                           ;LoRaWanCore.c: 250: }
 15297                           ;LoRaWanCore.c: 251: }
 15298                           ;LoRaWanCore.c: 252: }
 15299                           ;LoRaWanCore.c: 254: if ((tamFrame>=100) || (b==0x0A))
 15300  001744  0E64               	movlw	100
 15301  001746  605B               	cpfslt	_tamFrame,c	;volatile
 15302  001748  D004               	goto	i2u834_40
 15303  00174A  0E0A               	movlw	10
 15304  00174C  1810               	xorwf	recebeByteLoRaWan@b,w,c
 15305  00174E  A4D8               	btfss	status,2,c
 15306  001750  0012               	return	
 15307  001752                     i2u834_40:
 15308                           
 15309                           ;LoRaWanCore.c: 255: {
 15310                           ;LoRaWanCore.c: 256: tamFrame=0;
 15311  001752  0E00               	movlw	0
 15312  001754  6E5B               	movwf	_tamFrame,c	;volatile
 15313  001756  0012               	return	
 15314  001758                     __end_of_recebeByteLoRaWan:
 15315                           	opt stack 0
 15316                           pclatu	equ	0xFFB
 15317                           pclath	equ	0xFFA
 15318                           tblptru	equ	0xFF8
 15319                           tblptrh	equ	0xFF7
 15320                           tblptrl	equ	0xFF6
 15321                           tablat	equ	0xFF5
 15322                           prodh	equ	0xFF4
 15323                           prodl	equ	0xFF3
 15324                           intcon	equ	0xFF2
 15325                           indf0	equ	0xFEF
 15326                           postinc0	equ	0xFEE
 15327                           fsr0h	equ	0xFEA
 15328                           fsr0l	equ	0xFE9
 15329                           wreg	equ	0xFE8
 15330                           indf1	equ	0xFE7
 15331                           postdec1	equ	0xFE5
 15332                           fsr1h	equ	0xFE2
 15333                           fsr1l	equ	0xFE1
 15334                           indf2	equ	0xFDF
 15335                           postinc2	equ	0xFDE
 15336                           postdec2	equ	0xFDD
 15337                           plusw2	equ	0xFDB
 15338                           fsr2h	equ	0xFDA
 15339                           fsr2l	equ	0xFD9
 15340                           status	equ	0xFD8
 15341                           
 15342 ;; *************** function i2_strlen *****************
 15343 ;; Defined at:
 15344 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strlen.c"
 15345 ;; Parameters:    Size  Location     Type
 15346 ;;  s               2    0[COMRAM] PTR const unsigned char 
 15347 ;;		 -> recebeByteLoRaWan@frameData(100), SYS(5), MAC(5), TxLoRaWan@comando(200), 
 15348 ;;		 -> SetChannelLoRaWan@comando(200), MAC_JOIN_OTAA(10), SYS_RESET(6), STR_19(16), 
 15349 ;;		 -> STR_18(7), STR_17(14), STR_16(8), STR_15(8), 
 15350 ;;		 -> STR_14(10), STR_13(17), STR_12(11), STR_11(5), 
 15351 ;;		 -> STR_10(32), STR_9(7), STR_8(11), STR_7(11), 
 15352 ;;		 -> STR_6(14), STR_5(3), 
 15353 ;; Auto vars:     Size  Location     Type
 15354 ;;  strlen          2    4[COMRAM] PTR const unsigned char 
 15355 ;;		 -> recebeByteLoRaWan@frameData(100), SYS(5), MAC(5), TxLoRaWan@comando(200), 
 15356 ;;		 -> SetChannelLoRaWan@comando(200), MAC_JOIN_OTAA(10), SYS_RESET(6), STR_19(16), 
 15357 ;;		 -> STR_18(7), STR_17(14), STR_16(8), STR_15(8), 
 15358 ;;		 -> STR_14(10), STR_13(17), STR_12(11), STR_11(5), 
 15359 ;;		 -> STR_10(32), STR_9(7), STR_8(11), STR_7(11), 
 15360 ;;		 -> STR_6(14), STR_5(3), 
 15361 ;; Return value:  Size  Location     Type
 15362 ;;                  2    0[COMRAM] unsigned int 
 15363 ;; Registers used:
 15364 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 15365 ;; Tracked objects:
 15366 ;;		On entry : 0/0
 15367 ;;		On exit  : 0/0
 15368 ;;		Unchanged: 0/0
 15369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15370 ;;      Params:         2       0       0       0       0       0       0       0       0
 15371 ;;      Locals:         2       0       0       0       0       0       0       0       0
 15372 ;;      Temps:          2       0       0       0       0       0       0       0       0
 15373 ;;      Totals:         6       0       0       0       0       0       0       0       0
 15374 ;;Total ram usage:        6 bytes
 15375 ;; Hardware stack levels used:    1
 15376 ;; This function calls:
 15377 ;;		Nothing
 15378 ;; This function is called by:
 15379 ;;		_recebeByteLoRaWan
 15380 ;; This function uses a non-reentrant model
 15381 ;;
 15382                           
 15383                           	psect	text57
 15384  0043F6                     __ptext57:
 15385                           	opt stack 0
 15386  0043F6                     i2_strlen:
 15387                           	opt stack 23
 15388                           
 15389                           ;incstack = 0
 15390  0043F6  C001  F005         	movff	i2strlen@s,i2strlen@cp
 15391  0043FA  C002  F006         	movff	i2strlen@s+1,i2strlen@cp+1
 15392  0043FE  D002               	goto	i2l2950
 15393  004400  4A05               	infsnz	i2strlen@cp,f,c
 15394  004402  2A06               	incf	i2strlen@cp+1,f,c
 15395  004404                     i2l2950:
 15396  004404  C005  FFF6         	movff	i2strlen@cp,tblptrl
 15397  004408  C006  FFF7         	movff	i2strlen@cp+1,tblptrh
 15398  00440C  6AF8               	clrf	tblptru,c
 15399  00440E  0E07               	movlw	(high __ramtop+-1)
 15400  004410  64F7               	cpfsgt	tblptrh,c
 15401  004412  D003               	bra	i2u818_47
 15402  004414  0008               	tblrd		*
 15403  004416  50F5               	movf	tablat,w,c
 15404  004418  D005               	bra	i2u818_40
 15405  00441A                     i2u818_47:
 15406  00441A  CFF6 FFE9          	movff	tblptrl,fsr0l
 15407  00441E  CFF7 FFEA          	movff	tblptrh,fsr0h
 15408  004422  50EF               	movf	indf0,w,c
 15409  004424                     i2u818_40:
 15410  004424  0900               	iorlw	0
 15411  004426  A4D8               	btfss	status,2,c
 15412  004428  D7EB               	goto	i2l2951
 15413  00442A  C001  F003         	movff	i2strlen@s,??i2_strlen
 15414  00442E  C002  F004         	movff	i2strlen@s+1,??i2_strlen+1
 15415  004432  1E03               	comf	??i2_strlen,f,c
 15416  004434  1E04               	comf	??i2_strlen+1,f,c
 15417  004436  4A03               	infsnz	??i2_strlen,f,c
 15418  004438  2A04               	incf	??i2_strlen+1,f,c
 15419  00443A  5005               	movf	i2strlen@cp,w,c
 15420  00443C  2403               	addwf	??i2_strlen,w,c
 15421  00443E  6E01               	movwf	?i2_strlen,c
 15422  004440  5006               	movf	i2strlen@cp+1,w,c
 15423  004442  2004               	addwfc	??i2_strlen+1,w,c
 15424  004444  6E02               	movwf	?i2_strlen+1,c
 15425  004446  0012               	return	
 15426  004448                     __end_ofi2_strlen:
 15427                           	opt stack 0
 15428                           pclatu	equ	0xFFB
 15429                           pclath	equ	0xFFA
 15430                           tblptru	equ	0xFF8
 15431                           tblptrh	equ	0xFF7
 15432                           tblptrl	equ	0xFF6
 15433                           tablat	equ	0xFF5
 15434                           prodh	equ	0xFF4
 15435                           prodl	equ	0xFF3
 15436                           intcon	equ	0xFF2
 15437                           indf0	equ	0xFEF
 15438                           postinc0	equ	0xFEE
 15439                           fsr0h	equ	0xFEA
 15440                           fsr0l	equ	0xFE9
 15441                           wreg	equ	0xFE8
 15442                           indf1	equ	0xFE7
 15443                           postdec1	equ	0xFE5
 15444                           fsr1h	equ	0xFE2
 15445                           fsr1l	equ	0xFE1
 15446                           indf2	equ	0xFDF
 15447                           postinc2	equ	0xFDE
 15448                           postdec2	equ	0xFDD
 15449                           plusw2	equ	0xFDB
 15450                           fsr2h	equ	0xFDA
 15451                           fsr2l	equ	0xFD9
 15452                           status	equ	0xFD8
 15453                           
 15454 ;; *************** function _strncmp *****************
 15455 ;; Defined at:
 15456 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strncmp.c"
 15457 ;; Parameters:    Size  Location     Type
 15458 ;;  s1              2    0[COMRAM] PTR const unsigned char 
 15459 ;;		 -> recebeByteLoRaWan@frameData(100), 
 15460 ;;  s2              2    2[COMRAM] PTR const unsigned char 
 15461 ;;		 -> STR_19(16), STR_18(7), STR_17(14), STR_16(8), 
 15462 ;;		 -> STR_15(8), STR_14(10), STR_13(17), STR_12(11), 
 15463 ;;		 -> STR_11(5), STR_10(32), STR_9(7), STR_8(11), 
 15464 ;;		 -> STR_7(11), STR_6(14), STR_5(3), 
 15465 ;;  len             2    4[COMRAM] unsigned int 
 15466 ;; Auto vars:     Size  Location     Type
 15467 ;;		None
 15468 ;; Return value:  Size  Location     Type
 15469 ;;                  2    0[COMRAM] int 
 15470 ;; Registers used:
 15471 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 15472 ;; Tracked objects:
 15473 ;;		On entry : 0/0
 15474 ;;		On exit  : 0/0
 15475 ;;		Unchanged: 0/0
 15476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15477 ;;      Params:         6       0       0       0       0       0       0       0       0
 15478 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15479 ;;      Temps:          3       0       0       0       0       0       0       0       0
 15480 ;;      Totals:         9       0       0       0       0       0       0       0       0
 15481 ;;Total ram usage:        9 bytes
 15482 ;; Hardware stack levels used:    1
 15483 ;; This function calls:
 15484 ;;		Nothing
 15485 ;; This function is called by:
 15486 ;;		_recebeByteLoRaWan
 15487 ;; This function uses a non-reentrant model
 15488 ;;
 15489                           
 15490                           	psect	text58
 15491  003F0C                     __ptext58:
 15492                           	opt stack 0
 15493  003F0C                     _strncmp:
 15494                           	opt stack 23
 15495                           
 15496                           ;incstack = 0
 15497  003F0C  D033               	goto	i2l2956
 15498  003F0E                     i2l8877:
 15499  003F0E  C001  FFD9         	movff	strncmp@s1,fsr2l
 15500  003F12  C002  FFDA         	movff	strncmp@s1+1,fsr2h
 15501  003F16  50DF               	movf	indf2,w,c
 15502  003F18  B4D8               	btfsc	status,2,c
 15503  003F1A  D00F               	goto	i2u806_40
 15504  003F1C  C001  FFD9         	movff	strncmp@s1,fsr2l
 15505  003F20  C002  FFDA         	movff	strncmp@s1+1,fsr2h
 15506  003F24  50DF               	movf	indf2,w,c
 15507  003F26  6E07               	movwf	??_strncmp& (0+255),c
 15508  003F28  C003  FFF6         	movff	strncmp@s2,tblptrl
 15509  003F2C  C004  FFF7         	movff	strncmp@s2+1,tblptrh
 15510  003F30                     	if	0	;tblptru may be non-zero
 15511  003F30                     	endif
 15512  003F30                     	if	0	;tblptru may be non-zero
 15513  003F30                     	endif
 15514  003F30  0008               	tblrd		*
 15515  003F32  50F5               	movf	tablat,w,c
 15516  003F34  1807               	xorwf	??_strncmp,w,c
 15517  003F36  B4D8               	btfsc	status,2,c
 15518  003F38  D019               	goto	i2l2958
 15519  003F3A                     i2u806_40:
 15520  003F3A  C003  FFF6         	movff	strncmp@s2,tblptrl
 15521  003F3E  C004  FFF7         	movff	strncmp@s2+1,tblptrh
 15522  003F42                     	if	0	;tblptru may be non-zero
 15523  003F42                     	endif
 15524  003F42                     	if	0	;tblptru may be non-zero
 15525  003F42                     	endif
 15526  003F42  0008               	tblrd		*
 15527  003F44  50F5               	movf	tablat,w,c
 15528  003F46  6E07               	movwf	??_strncmp& (0+255),c
 15529  003F48  6A08               	clrf	(??_strncmp+1)& (0+255),c
 15530  003F4A  1E07               	comf	??_strncmp,f,c
 15531  003F4C  1E08               	comf	??_strncmp+1,f,c
 15532  003F4E  4A07               	infsnz	??_strncmp,f,c
 15533  003F50  2A08               	incf	??_strncmp+1,f,c
 15534  003F52  C001  FFD9         	movff	strncmp@s1,fsr2l
 15535  003F56  C002  FFDA         	movff	strncmp@s1+1,fsr2h
 15536  003F5A  50DF               	movf	indf2,w,c
 15537  003F5C  6E09               	movwf	(??_strncmp+2)& (0+255),c
 15538  003F5E  5009               	movf	??_strncmp+2,w,c
 15539  003F60  2407               	addwf	??_strncmp,w,c
 15540  003F62  6E01               	movwf	?_strncmp,c
 15541  003F64  0E00               	movlw	0
 15542  003F66  2008               	addwfc	??_strncmp+1,w,c
 15543  003F68  6E02               	movwf	?_strncmp+1,c
 15544  003F6A  0012               	return	
 15545  003F6C                     i2l2958:
 15546  003F6C  4A01               	infsnz	strncmp@s1,f,c
 15547  003F6E  2A02               	incf	strncmp@s1+1,f,c
 15548  003F70  4A03               	infsnz	strncmp@s2,f,c
 15549  003F72  2A04               	incf	strncmp@s2+1,f,c
 15550  003F74                     i2l2956:
 15551  003F74  0605               	decf	strncmp@len,f,c
 15552  003F76  A0D8               	btfss	status,0,c
 15553  003F78  0606               	decf	strncmp@len+1,f,c
 15554  003F7A  2805               	incf	strncmp@len,w,c
 15555  003F7C  E1C8               	bnz	i2l8877
 15556  003F7E  2806               	incf	strncmp@len+1,w,c
 15557  003F80  A4D8               	btfss	status,2,c
 15558  003F82  D7C5               	goto	i2l2957
 15559  003F84  0E00               	movlw	0
 15560  003F86  6E02               	movwf	?_strncmp+1,c
 15561  003F88  0E00               	movlw	0
 15562  003F8A  6E01               	movwf	?_strncmp,c
 15563  003F8C  0012               	return	
 15564  003F8E                     __end_of_strncmp:
 15565                           	opt stack 0
 15566                           pclatu	equ	0xFFB
 15567                           pclath	equ	0xFFA
 15568                           tblptru	equ	0xFF8
 15569                           tblptrh	equ	0xFF7
 15570                           tblptrl	equ	0xFF6
 15571                           tablat	equ	0xFF5
 15572                           prodh	equ	0xFF4
 15573                           prodl	equ	0xFF3
 15574                           intcon	equ	0xFF2
 15575                           indf0	equ	0xFEF
 15576                           postinc0	equ	0xFEE
 15577                           fsr0h	equ	0xFEA
 15578                           fsr0l	equ	0xFE9
 15579                           wreg	equ	0xFE8
 15580                           indf1	equ	0xFE7
 15581                           postdec1	equ	0xFE5
 15582                           fsr1h	equ	0xFE2
 15583                           fsr1l	equ	0xFE1
 15584                           indf2	equ	0xFDF
 15585                           postinc2	equ	0xFDE
 15586                           postdec2	equ	0xFDD
 15587                           plusw2	equ	0xFDB
 15588                           fsr2h	equ	0xFDA
 15589                           fsr2l	equ	0xFD9
 15590                           status	equ	0xFD8
 15591                           
 15592 ;; *************** function _strcpy *****************
 15593 ;; Defined at:
 15594 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strcpy.c"
 15595 ;; Parameters:    Size  Location     Type
 15596 ;;  to              2    0[COMRAM] PTR unsigned char 
 15597 ;;		 -> frameBuffer(200), 
 15598 ;;  from            2    2[COMRAM] PTR const unsigned char 
 15599 ;;		 -> recebeByteLoRaWan@frameData(100), 
 15600 ;; Auto vars:     Size  Location     Type
 15601 ;;  cp              2    4[COMRAM] PTR unsigned char 
 15602 ;;		 -> frameBuffer(200), 
 15603 ;; Return value:  Size  Location     Type
 15604 ;;                  2    0[COMRAM] PTR unsigned char 
 15605 ;; Registers used:
 15606 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 15607 ;; Tracked objects:
 15608 ;;		On entry : 0/0
 15609 ;;		On exit  : 0/0
 15610 ;;		Unchanged: 0/0
 15611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15612 ;;      Params:         4       0       0       0       0       0       0       0       0
 15613 ;;      Locals:         2       0       0       0       0       0       0       0       0
 15614 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15615 ;;      Totals:         6       0       0       0       0       0       0       0       0
 15616 ;;Total ram usage:        6 bytes
 15617 ;; Hardware stack levels used:    1
 15618 ;; This function calls:
 15619 ;;		Nothing
 15620 ;; This function is called by:
 15621 ;;		_recebeByteLoRaWan
 15622 ;; This function uses a non-reentrant model
 15623 ;;
 15624                           
 15625                           	psect	text59
 15626  004762                     __ptext59:
 15627                           	opt stack 0
 15628  004762                     _strcpy:
 15629                           	opt stack 23
 15630                           
 15631                           ;incstack = 0
 15632  004762  C001  F005         	movff	strcpy@to,strcpy@cp
 15633  004766  C002  F006         	movff	strcpy@to+1,strcpy@cp+1
 15634  00476A  D004               	goto	i2l2944
 15635  00476C  4A05               	infsnz	strcpy@cp,f,c
 15636  00476E  2A06               	incf	strcpy@cp+1,f,c
 15637  004770  4A03               	infsnz	strcpy@from,f,c
 15638  004772  2A04               	incf	strcpy@from+1,f,c
 15639  004774                     i2l2944:
 15640  004774  C003  FFD9         	movff	strcpy@from,fsr2l
 15641  004778  C004  FFDA         	movff	strcpy@from+1,fsr2h
 15642  00477C  C005  FFE1         	movff	strcpy@cp,fsr1l
 15643  004780  C006  FFE2         	movff	strcpy@cp+1,fsr1h
 15644  004784  CFDF FFE7          	movff	indf2,indf1
 15645  004788  50E7               	movf	indf1,w,c
 15646  00478A  B4D8               	btfsc	status,2,c
 15647  00478C  0012               	return	
 15648  00478E  D7EE               	goto	i2l2945
 15649  004790                     __end_of_strcpy:
 15650                           	opt stack 0
 15651                           pclatu	equ	0xFFB
 15652                           pclath	equ	0xFFA
 15653                           tblptru	equ	0xFF8
 15654                           tblptrh	equ	0xFF7
 15655                           tblptrl	equ	0xFF6
 15656                           tablat	equ	0xFF5
 15657                           prodh	equ	0xFF4
 15658                           prodl	equ	0xFF3
 15659                           intcon	equ	0xFF2
 15660                           indf0	equ	0xFEF
 15661                           postinc0	equ	0xFEE
 15662                           fsr0h	equ	0xFEA
 15663                           fsr0l	equ	0xFE9
 15664                           wreg	equ	0xFE8
 15665                           indf1	equ	0xFE7
 15666                           postdec1	equ	0xFE5
 15667                           fsr1h	equ	0xFE2
 15668                           fsr1l	equ	0xFE1
 15669                           indf2	equ	0xFDF
 15670                           postinc2	equ	0xFDE
 15671                           postdec2	equ	0xFDD
 15672                           plusw2	equ	0xFDB
 15673                           fsr2h	equ	0xFDA
 15674                           fsr2l	equ	0xFD9
 15675                           status	equ	0xFD8
 15676                           
 15677 ;; *************** function _strcmp *****************
 15678 ;; Defined at:
 15679 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strcmp.c"
 15680 ;; Parameters:    Size  Location     Type
 15681 ;;  s1              2    0[COMRAM] PTR const unsigned char 
 15682 ;;		 -> recebeByteLoRaWan@frameData(100), 
 15683 ;;  s2              2    2[COMRAM] PTR const unsigned char 
 15684 ;;		 -> STR_19(16), STR_18(7), STR_17(14), STR_16(8), 
 15685 ;;		 -> STR_15(8), STR_14(10), STR_13(17), STR_12(11), 
 15686 ;;		 -> STR_11(5), STR_10(32), STR_9(7), STR_8(11), 
 15687 ;;		 -> STR_7(11), STR_6(14), STR_5(3), 
 15688 ;; Auto vars:     Size  Location     Type
 15689 ;;  r               1    5[COMRAM] char 
 15690 ;; Return value:  Size  Location     Type
 15691 ;;                  2    0[COMRAM] int 
 15692 ;; Registers used:
 15693 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 15694 ;; Tracked objects:
 15695 ;;		On entry : 0/0
 15696 ;;		On exit  : 0/0
 15697 ;;		Unchanged: 0/0
 15698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15699 ;;      Params:         4       0       0       0       0       0       0       0       0
 15700 ;;      Locals:         1       0       0       0       0       0       0       0       0
 15701 ;;      Temps:          1       0       0       0       0       0       0       0       0
 15702 ;;      Totals:         6       0       0       0       0       0       0       0       0
 15703 ;;Total ram usage:        6 bytes
 15704 ;; Hardware stack levels used:    1
 15705 ;; This function calls:
 15706 ;;		Nothing
 15707 ;; This function is called by:
 15708 ;;		_recebeByteLoRaWan
 15709 ;; This function uses a non-reentrant model
 15710 ;;
 15711                           
 15712                           	psect	text60
 15713  004490                     __ptext60:
 15714                           	opt stack 0
 15715  004490                     _strcmp:
 15716                           	opt stack 23
 15717                           
 15718                           ;incstack = 0
 15719  004490  D004               	goto	i2l2936
 15720  004492  4A01               	infsnz	strcmp@s1,f,c
 15721  004494  2A02               	incf	strcmp@s1+1,f,c
 15722  004496  4A03               	infsnz	strcmp@s2,f,c
 15723  004498  2A04               	incf	strcmp@s2+1,f,c
 15724  00449A                     i2l2936:
 15725  00449A  C001  FFD9         	movff	strcmp@s1,fsr2l
 15726  00449E  C002  FFDA         	movff	strcmp@s1+1,fsr2h
 15727  0044A2  50DF               	movf	indf2,w,c
 15728  0044A4  6E05               	movwf	??_strcmp& (0+255),c
 15729  0044A6  C003  FFF6         	movff	strcmp@s2,tblptrl
 15730  0044AA  C004  FFF7         	movff	strcmp@s2+1,tblptrh
 15731  0044AE                     	if	0	;tblptru may be non-zero
 15732  0044AE                     	endif
 15733  0044AE                     	if	0	;tblptru may be non-zero
 15734  0044AE                     	endif
 15735  0044AE  0008               	tblrd		*
 15736  0044B0  50F5               	movf	tablat,w,c
 15737  0044B2  0800               	sublw	0
 15738  0044B4  2405               	addwf	??_strcmp,w,c
 15739  0044B6  6E06               	movwf	strcmp@r,c
 15740  0044B8  5006               	movf	strcmp@r,w,c
 15741  0044BA  A4D8               	btfss	status,2,c
 15742  0044BC  D007               	goto	i2u804_40
 15743  0044BE  C001  FFD9         	movff	strcmp@s1,fsr2l
 15744  0044C2  C002  FFDA         	movff	strcmp@s1+1,fsr2h
 15745  0044C6  50DF               	movf	indf2,w,c
 15746  0044C8  A4D8               	btfss	status,2,c
 15747  0044CA  D7E3               	goto	i2l2937
 15748  0044CC                     i2u804_40:
 15749  0044CC  5006               	movf	strcmp@r,w,c
 15750  0044CE  6E01               	movwf	?_strcmp,c
 15751  0044D0  6A02               	clrf	?_strcmp+1,c
 15752  0044D2  BE01               	btfsc	?_strcmp,7,c
 15753  0044D4  0602               	decf	?_strcmp+1,f,c
 15754  0044D6  0012               	return	
 15755  0044D8                     __end_of_strcmp:
 15756                           	opt stack 0
 15757                           pclatu	equ	0xFFB
 15758                           pclath	equ	0xFFA
 15759                           tblptru	equ	0xFF8
 15760                           tblptrh	equ	0xFF7
 15761                           tblptrl	equ	0xFF6
 15762                           tablat	equ	0xFF5
 15763                           prodh	equ	0xFF4
 15764                           prodl	equ	0xFF3
 15765                           intcon	equ	0xFF2
 15766                           indf0	equ	0xFEF
 15767                           postinc0	equ	0xFEE
 15768                           fsr0h	equ	0xFEA
 15769                           fsr0l	equ	0xFE9
 15770                           wreg	equ	0xFE8
 15771                           indf1	equ	0xFE7
 15772                           postdec1	equ	0xFE5
 15773                           fsr1h	equ	0xFE2
 15774                           fsr1l	equ	0xFE1
 15775                           indf2	equ	0xFDF
 15776                           postinc2	equ	0xFDE
 15777                           postdec2	equ	0xFDD
 15778                           plusw2	equ	0xFDB
 15779                           fsr2h	equ	0xFDA
 15780                           fsr2l	equ	0xFD9
 15781                           status	equ	0xFD8
 15782                           
 15783 ;; *************** function _converter *****************
 15784 ;; Defined at:
 15785 ;;		line 357 in file "XBeeCore.c"
 15786 ;; Parameters:    Size  Location     Type
 15787 ;;  conv1           1    wreg     unsigned char 
 15788 ;;  conv2           1    1[COMRAM] unsigned char 
 15789 ;; Auto vars:     Size  Location     Type
 15790 ;;  conv1           1    5[COMRAM] unsigned char 
 15791 ;;  aux2            1    4[COMRAM] unsigned char 
 15792 ;;  aux             1    3[COMRAM] unsigned char 
 15793 ;;  resul           1    2[COMRAM] unsigned char 
 15794 ;; Return value:  Size  Location     Type
 15795 ;;                  1    wreg      unsigned char 
 15796 ;; Registers used:
 15797 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15798 ;; Tracked objects:
 15799 ;;		On entry : 0/0
 15800 ;;		On exit  : 0/0
 15801 ;;		Unchanged: 0/0
 15802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15803 ;;      Params:         1       0       0       0       0       0       0       0       0
 15804 ;;      Locals:         4       0       0       0       0       0       0       0       0
 15805 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15806 ;;      Totals:         5       0       0       0       0       0       0       0       0
 15807 ;;Total ram usage:        5 bytes
 15808 ;; Hardware stack levels used:    1
 15809 ;; Hardware stack levels required when called:    1
 15810 ;; This function calls:
 15811 ;;		_toupper
 15812 ;; This function is called by:
 15813 ;;		_recebeByteLoRaWan
 15814 ;;		_send
 15815 ;; This function uses a non-reentrant model
 15816 ;;
 15817                           
 15818                           	psect	text61
 15819  003D80                     __ptext61:
 15820                           	opt stack 0
 15821  003D80                     _converter:
 15822                           	opt stack 22
 15823                           
 15824                           ;incstack = 0
 15825                           ;converter@conv1 stored from wreg
 15826  003D80  6E06               	movwf	converter@conv1,c
 15827                           
 15828                           ;XBeeCore.c: 359: uint8_t aux=0;
 15829  003D82  0E00               	movlw	0
 15830  003D84  6E04               	movwf	converter@aux,c
 15831                           
 15832                           ;XBeeCore.c: 360: uint8_t aux2=0;
 15833  003D86  0E00               	movlw	0
 15834  003D88  6E05               	movwf	converter@aux2,c
 15835                           
 15836                           ;XBeeCore.c: 361: uint8_t resul=0;
 15837  003D8A  0E00               	movlw	0
 15838  003D8C  6E03               	movwf	converter@resul,c
 15839                           
 15840                           ;XBeeCore.c: 364: conv1=toupper(conv1);
 15841  003D8E  5006               	movf	converter@conv1,w,c
 15842  003D90  ECEB  F024         	call	_toupper
 15843  003D94  6E06               	movwf	converter@conv1,c
 15844                           
 15845                           ;XBeeCore.c: 365: conv2=toupper(conv2);
 15846  003D96  5002               	movf	converter@conv2,w,c
 15847  003D98  ECEB  F024         	call	_toupper
 15848  003D9C  6E02               	movwf	converter@conv2,c
 15849                           
 15850                           ;XBeeCore.c: 367: if ((conv1>='0') && (conv1<='9'))
 15851  003D9E  0E2F               	movlw	47
 15852  003DA0  6406               	cpfsgt	converter@conv1,c
 15853  003DA2  D006               	goto	i2l1296
 15854  003DA4  0E3A               	movlw	58
 15855  003DA6  6006               	cpfslt	converter@conv1,c
 15856  003DA8  D003               	goto	i2l1296
 15857                           
 15858                           ;XBeeCore.c: 368: {
 15859                           ;XBeeCore.c: 369: aux=conv1-'0';
 15860  003DAA  5006               	movf	converter@conv1,w,c
 15861  003DAC  0FD0               	addlw	208
 15862  003DAE  D008               	goto	L10
 15863  003DB0                     i2l1296:
 15864                           
 15865                           ;XBeeCore.c: 371: else if ((conv1>='A') && (conv1<='F'))
 15866  003DB0  0E40               	movlw	64
 15867  003DB2  6406               	cpfsgt	converter@conv1,c
 15868  003DB4  D006               	goto	i2l1298
 15869  003DB6  0E47               	movlw	71
 15870  003DB8  6006               	cpfslt	converter@conv1,c
 15871  003DBA  D003               	goto	i2l1298
 15872                           
 15873                           ;XBeeCore.c: 372: {
 15874                           ;XBeeCore.c: 373: aux=conv1-'A'+10;
 15875  003DBC  5006               	movf	converter@conv1,w,c
 15876  003DBE  0FC9               	addlw	201
 15877  003DC0                     L10:
 15878  003DC0  6E04               	movwf	converter@aux,c
 15879  003DC2                     i2l1298:
 15880                           
 15881                           ;XBeeCore.c: 374: }
 15882                           ;XBeeCore.c: 376: if ((conv2>='0') && (conv2<='9'))
 15883  003DC2  0E2F               	movlw	47
 15884  003DC4  6402               	cpfsgt	converter@conv2,c
 15885  003DC6  D006               	goto	i2l1299
 15886  003DC8  0E3A               	movlw	58
 15887  003DCA  6002               	cpfslt	converter@conv2,c
 15888  003DCC  D003               	goto	i2l1299
 15889                           
 15890                           ;XBeeCore.c: 377: {
 15891                           ;XBeeCore.c: 378: aux2=conv2-'0';
 15892  003DCE  5002               	movf	converter@conv2,w,c
 15893  003DD0  0FD0               	addlw	208
 15894  003DD2  D00A               	goto	L12
 15895  003DD4                     i2l1299:
 15896                           
 15897                           ;XBeeCore.c: 380: else if ((conv2>='A') && (conv2<='F'))
 15898  003DD4  0E40               	movlw	64
 15899  003DD6  6402               	cpfsgt	converter@conv2,c
 15900  003DD8  D006               	goto	i2l1301
 15901  003DDA  0E47               	movlw	71
 15902  003DDC  6002               	cpfslt	converter@conv2,c
 15903  003DDE  D003               	goto	i2l1301
 15904                           
 15905                           ;XBeeCore.c: 381: {
 15906                           ;XBeeCore.c: 382: aux2=conv2-'A'+10;
 15907  003DE0  5002               	movf	converter@conv2,w,c
 15908  003DE2  0FC9               	addlw	201
 15909  003DE4  D001               	goto	L12
 15910  003DE6                     i2l1301:
 15911                           
 15912                           ;XBeeCore.c: 384: else
 15913                           ;XBeeCore.c: 385: {
 15914                           ;XBeeCore.c: 386: aux2=100;
 15915  003DE6  0E64               	movlw	100
 15916  003DE8                     L12:
 15917  003DE8  6E05               	movwf	converter@aux2,c
 15918                           
 15919                           ;XBeeCore.c: 387: }
 15920                           ;XBeeCore.c: 389: if(aux2==100)
 15921  003DEA  0E64               	movlw	100
 15922  003DEC  1805               	xorwf	converter@aux2,w,c
 15923  003DEE  A4D8               	btfss	status,2,c
 15924  003DF0  D003               	goto	i2l1303
 15925                           
 15926                           ;XBeeCore.c: 390: {
 15927                           ;XBeeCore.c: 391: resul=aux;
 15928  003DF2  C004  F003         	movff	converter@aux,converter@resul
 15929                           
 15930                           ;XBeeCore.c: 392: }
 15931  003DF6  D005               	goto	i2l1304
 15932  003DF8                     i2l1303:
 15933                           
 15934                           ;XBeeCore.c: 393: else
 15935                           ;XBeeCore.c: 394: {
 15936                           ;XBeeCore.c: 395: resul=(uint8_t)((aux*16)+aux2);
 15937  003DF8  5004               	movf	converter@aux,w,c
 15938  003DFA  0D10               	mullw	16
 15939  003DFC  50F3               	movf	prodl,w,c
 15940  003DFE  2405               	addwf	converter@aux2,w,c
 15941  003E00  6E03               	movwf	converter@resul,c
 15942  003E02                     i2l1304:
 15943                           
 15944                           ;XBeeCore.c: 396: }
 15945                           ;XBeeCore.c: 397: return resul;
 15946  003E02  5003               	movf	converter@resul,w,c
 15947  003E04  0012               	return	
 15948  003E06                     __end_of_converter:
 15949                           	opt stack 0
 15950                           pclatu	equ	0xFFB
 15951                           pclath	equ	0xFFA
 15952                           tblptru	equ	0xFF8
 15953                           tblptrh	equ	0xFF7
 15954                           tblptrl	equ	0xFF6
 15955                           tablat	equ	0xFF5
 15956                           prodh	equ	0xFF4
 15957                           prodl	equ	0xFF3
 15958                           intcon	equ	0xFF2
 15959                           indf0	equ	0xFEF
 15960                           postinc0	equ	0xFEE
 15961                           fsr0h	equ	0xFEA
 15962                           fsr0l	equ	0xFE9
 15963                           wreg	equ	0xFE8
 15964                           indf1	equ	0xFE7
 15965                           postdec1	equ	0xFE5
 15966                           fsr1h	equ	0xFE2
 15967                           fsr1l	equ	0xFE1
 15968                           indf2	equ	0xFDF
 15969                           postinc2	equ	0xFDE
 15970                           postdec2	equ	0xFDD
 15971                           plusw2	equ	0xFDB
 15972                           fsr2h	equ	0xFDA
 15973                           fsr2l	equ	0xFD9
 15974                           status	equ	0xFD8
 15975                           
 15976 ;; *************** function _toupper *****************
 15977 ;; Defined at:
 15978 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\toupper.c"
 15979 ;; Parameters:    Size  Location     Type
 15980 ;;  c               1    wreg     unsigned char 
 15981 ;; Auto vars:     Size  Location     Type
 15982 ;;  c               1    0[COMRAM] unsigned char 
 15983 ;; Return value:  Size  Location     Type
 15984 ;;                  1    wreg      unsigned char 
 15985 ;; Registers used:
 15986 ;;		wreg, status,2, status,0
 15987 ;; Tracked objects:
 15988 ;;		On entry : 0/0
 15989 ;;		On exit  : 0/0
 15990 ;;		Unchanged: 0/0
 15991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15992 ;;      Params:         0       0       0       0       0       0       0       0       0
 15993 ;;      Locals:         1       0       0       0       0       0       0       0       0
 15994 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15995 ;;      Totals:         1       0       0       0       0       0       0       0       0
 15996 ;;Total ram usage:        1 bytes
 15997 ;; Hardware stack levels used:    1
 15998 ;; This function calls:
 15999 ;;		Nothing
 16000 ;; This function is called by:
 16001 ;;		_converter
 16002 ;; This function uses a non-reentrant model
 16003 ;;
 16004                           
 16005                           	psect	text62
 16006  0049D6                     __ptext62:
 16007                           	opt stack 0
 16008  0049D6                     _toupper:
 16009                           	opt stack 22
 16010                           
 16011                           ;incstack = 0
 16012                           ;toupper@c stored from wreg
 16013  0049D6  6E01               	movwf	toupper@c,c
 16014  0049D8  0E7B               	movlw	123
 16015  0049DA  6001               	cpfslt	toupper@c,c
 16016  0049DC  D004               	goto	i2l2965
 16017  0049DE  0E60               	movlw	96
 16018  0049E0  6401               	cpfsgt	toupper@c,c
 16019  0049E2  D001               	goto	i2l2965
 16020  0049E4  9A01               	bcf	toupper@c,5,c
 16021  0049E6                     i2l2965:
 16022  0049E6  5001               	movf	toupper@c,w,c
 16023  0049E8  0012               	return	
 16024  0049EA                     __end_of_toupper:
 16025                           	opt stack 0
 16026                           pclatu	equ	0xFFB
 16027                           pclath	equ	0xFFA
 16028                           tblptru	equ	0xFF8
 16029                           tblptrh	equ	0xFF7
 16030                           tblptrl	equ	0xFF6
 16031                           tablat	equ	0xFF5
 16032                           prodh	equ	0xFF4
 16033                           prodl	equ	0xFF3
 16034                           intcon	equ	0xFF2
 16035                           indf0	equ	0xFEF
 16036                           postinc0	equ	0xFEE
 16037                           fsr0h	equ	0xFEA
 16038                           fsr0l	equ	0xFE9
 16039                           wreg	equ	0xFE8
 16040                           indf1	equ	0xFE7
 16041                           postdec1	equ	0xFE5
 16042                           fsr1h	equ	0xFE2
 16043                           fsr1l	equ	0xFE1
 16044                           indf2	equ	0xFDF
 16045                           postinc2	equ	0xFDE
 16046                           postdec2	equ	0xFDD
 16047                           plusw2	equ	0xFDB
 16048                           fsr2h	equ	0xFDA
 16049                           fsr2l	equ	0xFD9
 16050                           status	equ	0xFD8
 16051                           
 16052 ;; *************** function _getch *****************
 16053 ;; Defined at:
 16054 ;;		line 52 in file "uart/uart.c"
 16055 ;; Parameters:    Size  Location     Type
 16056 ;;		None
 16057 ;; Auto vars:     Size  Location     Type
 16058 ;;  data            1    2[COMRAM] unsigned char 
 16059 ;;  RC              1    1[COMRAM] unsigned char 
 16060 ;; Return value:  Size  Location     Type
 16061 ;;                  1    wreg      unsigned char 
 16062 ;; Registers used:
 16063 ;;		wreg, status,2, status,0
 16064 ;; Tracked objects:
 16065 ;;		On entry : 0/0
 16066 ;;		On exit  : 0/0
 16067 ;;		Unchanged: 0/0
 16068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16069 ;;      Params:         0       0       0       0       0       0       0       0       0
 16070 ;;      Locals:         2       0       0       0       0       0       0       0       0
 16071 ;;      Temps:          1       0       0       0       0       0       0       0       0
 16072 ;;      Totals:         3       0       0       0       0       0       0       0       0
 16073 ;;Total ram usage:        3 bytes
 16074 ;; Hardware stack levels used:    1
 16075 ;; This function calls:
 16076 ;;		Nothing
 16077 ;; This function is called by:
 16078 ;;		_SYS_InterruptHigh
 16079 ;;		_flush
 16080 ;; This function uses a non-reentrant model
 16081 ;;
 16082                           
 16083                           	psect	text63
 16084  0048F8                     __ptext63:
 16085                           	opt stack 0
 16086  0048F8                     _getch:
 16087                           	opt stack 24
 16088                           
 16089                           ;uart.c: 54: uint8_t RC;
 16090                           ;uart.c: 55: char data;
 16091                           ;uart.c: 57: if (!RCIF)
 16092                           
 16093                           ;incstack = 0
 16094  0048F8  BA9E               	btfsc	3998,5,c	;volatile
 16095  0048FA  D002               	goto	i2l1073
 16096                           
 16097                           ;uart.c: 58: return 0;
 16098  0048FC  0E00               	movlw	0
 16099  0048FE  0012               	return	
 16100  004900                     i2l1073:
 16101                           
 16102                           ;uart.c: 60: RC=RCSTA;
 16103  004900  CFAB F002          	movff	4011,getch@RC	;volatile
 16104                           
 16105                           ;uart.c: 61: data=RCREG;
 16106  004904  CFAE F003          	movff	4014,getch@data	;volatile
 16107                           
 16108                           ;uart.c: 64: if ((RC & 0x06)!=0)
 16109  004908  C002  F001         	movff	getch@RC,??_getch
 16110  00490C  0E06               	movlw	6
 16111  00490E  1601               	andwf	??_getch,f,c
 16112  004910  B4D8               	btfsc	status,2,c
 16113  004912  D003               	goto	i2l1075
 16114                           
 16115                           ;uart.c: 65: {
 16116                           ;uart.c: 66: RCSTAbits.CREN=0;
 16117  004914  98AB               	bcf	4011,4,c	;volatile
 16118                           
 16119                           ;uart.c: 67: __nop();
 16120  004916  F000               	nop	
 16121                           
 16122                           ;uart.c: 68: RCSTAbits.CREN=1;
 16123  004918  88AB               	bsf	4011,4,c	;volatile
 16124  00491A                     i2l1075:
 16125                           
 16126                           ;uart.c: 69: }
 16127                           ;uart.c: 71: return data;
 16128  00491A  5003               	movf	getch@data,w,c
 16129  00491C  0012               	return	
 16130  00491E                     __end_of_getch:
 16131                           	opt stack 0
 16132                           pclatu	equ	0xFFB
 16133                           pclath	equ	0xFFA
 16134                           tblptru	equ	0xFF8
 16135                           tblptrh	equ	0xFF7
 16136                           tblptrl	equ	0xFF6
 16137                           tablat	equ	0xFF5
 16138                           prodh	equ	0xFF4
 16139                           prodl	equ	0xFF3
 16140                           intcon	equ	0xFF2
 16141                           indf0	equ	0xFEF
 16142                           postinc0	equ	0xFEE
 16143                           fsr0h	equ	0xFEA
 16144                           fsr0l	equ	0xFE9
 16145                           wreg	equ	0xFE8
 16146                           indf1	equ	0xFE7
 16147                           postdec1	equ	0xFE5
 16148                           fsr1h	equ	0xFE2
 16149                           fsr1l	equ	0xFE1
 16150                           indf2	equ	0xFDF
 16151                           postinc2	equ	0xFDE
 16152                           postdec2	equ	0xFDD
 16153                           plusw2	equ	0xFDB
 16154                           fsr2h	equ	0xFDA
 16155                           fsr2l	equ	0xFD9
 16156                           status	equ	0xFD8
 16157                           
 16158 ;; *************** function _USBDeviceTasks *****************
 16159 ;; Defined at:
 16160 ;;		line 477 in file "../../../../microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 16161 ;; Parameters:    Size  Location     Type
 16162 ;;		None
 16163 ;; Auto vars:     Size  Location     Type
 16164 ;;  i               1   27[COMRAM] unsigned char 
 16165 ;; Return value:  Size  Location     Type
 16166 ;;                  1    wreg      void 
 16167 ;; Registers used:
 16168 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16169 ;; Tracked objects:
 16170 ;;		On entry : 0/0
 16171 ;;		On exit  : 0/0
 16172 ;;		Unchanged: 0/0
 16173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16174 ;;      Params:         0       0       0       0       0       0       0       0       0
 16175 ;;      Locals:         1       0       0       0       0       0       0       0       0
 16176 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16177 ;;      Totals:         1       0       0       0       0       0       0       0       0
 16178 ;;Total ram usage:        1 bytes
 16179 ;; Hardware stack levels used:    1
 16180 ;; Hardware stack levels required when called:    8
 16181 ;; This function calls:
 16182 ;;		_USBCtrlEPAllowStatusStage
 16183 ;;		_USBCtrlEPService
 16184 ;;		_USBIncrement1msInternalTimers
 16185 ;;		_USBStallHandler
 16186 ;;		_USBSuspend
 16187 ;;		_USBWakeFromSuspend
 16188 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16189 ;;		i2_USBDeviceInit
 16190 ;; This function is called by:
 16191 ;;		_SYS_InterruptHigh
 16192 ;; This function uses a non-reentrant model
 16193 ;;
 16194                           
 16195                           	psect	text64
 16196  002664                     __ptext64:
 16197                           	opt stack 0
 16198  002664                     _USBDeviceTasks:
 16199                           	opt stack 16
 16200                           
 16201                           ;usb_device.c: 479: uint8_t i;
 16202                           ;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
 16203                           
 16204                           ;incstack = 0
 16205  002664  0458               	decf	_USBDeviceState,w,c	;volatile
 16206  002666  B4D8               	btfsc	status,2,c
 16207                           
 16208                           ;usb_device.c: 591: {
 16209                           ;usb_device.c: 601: if(!UCONbits.SE0)
 16210  002668  BA6D               	btfsc	3949,5,c	;volatile
 16211  00266A  D006               	goto	i2l367
 16212                           
 16213                           ;usb_device.c: 602: {
 16214                           ;usb_device.c: 608: {UIR = 0;};
 16215  00266C  0E00               	movlw	0
 16216  00266E  6E68               	movwf	3944,c	;volatile
 16217                           
 16218                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
 16219  002670  8069               	bsf	3945,0,c	;volatile
 16220                           
 16221                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
 16222  002672  8869               	bsf	3945,4,c	;volatile
 16223                           
 16224                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
 16225  002674  0E02               	movlw	2
 16226  002676  6E58               	movwf	_USBDeviceState,c	;volatile
 16227  002678                     i2l367:
 16228                           
 16229                           ;usb_device.c: 617: }
 16230                           ;usb_device.c: 618: }
 16231                           ;usb_device.c: 634: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 16232  002678  B468               	btfsc	3944,2,c	;volatile
 16233  00267A  A469               	btfss	3945,2,c	;volatile
 16234  00267C  D003               	goto	i2l368
 16235                           
 16236                           ;usb_device.c: 635: {
 16237                           ;usb_device.c: 636: (UIR &= 0xFB);
 16238  00267E  9468               	bcf	3944,2,c	;volatile
 16239                           
 16240                           ;usb_device.c: 640: USBWakeFromSuspend();
 16241  002680  EC4C  F023         	call	_USBWakeFromSuspend	;wreg free
 16242  002684                     i2l368:
 16243                           
 16244                           ;usb_device.c: 642: }
 16245                           ;usb_device.c: 647: if(UCONbits.SUSPND==1)
 16246  002684  A26D               	btfss	3949,1,c	;volatile
 16247  002686  D002               	goto	i2l369
 16248                           
 16249                           ;usb_device.c: 648: {
 16250                           ;usb_device.c: 649: {PIR2bits.USBIF = 0;};
 16251  002688  9AA1               	bcf	4001,5,c	;volatile
 16252                           
 16253                           ;usb_device.c: 650: return;
 16254  00268A  0012               	return	
 16255  00268C                     i2l369:
 16256                           
 16257                           ;usb_device.c: 651: }
 16258                           ;usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
 16259  00268C  B068               	btfsc	3944,0,c	;volatile
 16260  00268E  A069               	btfss	3945,0,c	;volatile
 16261  002690  D006               	goto	i2l371
 16262                           
 16263                           ;usb_device.c: 664: {
 16264                           ;usb_device.c: 665: USBDeviceInit();
 16265  002692  EC62  F011         	call	i2_USBDeviceInit	;wreg free
 16266                           
 16267                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
 16268  002696  8AA0               	bsf	4000,5,c	;volatile
 16269                           
 16270                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
 16271  002698  0E04               	movlw	4
 16272  00269A  6E58               	movwf	_USBDeviceState,c	;volatile
 16273                           
 16274                           ;usb_device.c: 681: (UIR &= 0xFE);
 16275  00269C  9068               	bcf	3944,0,c	;volatile
 16276  00269E                     i2l371:
 16277                           
 16278                           ;usb_device.c: 682: }
 16279                           ;usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 16280  00269E  B868               	btfsc	3944,4,c	;volatile
 16281  0026A0  A869               	btfss	3945,4,c	;volatile
 16282  0026A2  D002               	goto	i2l372
 16283                           
 16284                           ;usb_device.c: 688: {
 16285                           ;usb_device.c: 694: USBSuspend();
 16286  0026A4  ECC8  F023         	call	_USBSuspend	;wreg free
 16287  0026A8                     i2l372:
 16288                           
 16289                           ;usb_device.c: 696: }
 16290                           ;usb_device.c: 708: if(UIRbits.SOFIF)
 16291  0026A8  AC68               	btfss	3944,6,c	;volatile
 16292  0026AA  D01A               	goto	i2l376
 16293                           
 16294                           ;usb_device.c: 709: {
 16295                           ;usb_device.c: 711: if(UIEbits.SOFIE)
 16296  0026AC  AC69               	btfss	3945,6,c	;volatile
 16297  0026AE  D00E               	goto	i2l374
 16298                           
 16299                           ;usb_device.c: 712: {
 16300                           ;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 16301  0026B0  0E00               	movlw	0
 16302  0026B2  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 16303  0026B4  0E73               	movlw	115
 16304  0026B6  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 16305  0026B8  0E00               	movlw	0
 16306  0026BA  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 16307  0026BC  0E00               	movlw	0
 16308  0026BE  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 16309  0026C0  0E00               	movlw	0
 16310  0026C2  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 16311  0026C4  0E01               	movlw	1
 16312  0026C6  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 16313  0026C8  ECA2  F021         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 16314  0026CC                     i2l374:
 16315                           
 16316                           ;usb_device.c: 714: }
 16317                           ;usb_device.c: 715: (UIR &= 0xBF);
 16318  0026CC  9C68               	bcf	3944,6,c	;volatile
 16319                           
 16320                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
 16321  0026CE  ECC4  F024         	call	_USBIncrement1msInternalTimers	;wreg free
 16322                           
 16323                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 16324  0026D2  5054               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 16325  0026D4  A4D8               	btfss	status,2,c
 16326                           
 16327                           ;usb_device.c: 736: {
 16328                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 16329  0026D6  0654               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 16330                           
 16331                           ;usb_device.c: 738: }
 16332                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 16333  0026D8  5054               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 16334  0026DA  B4D8               	btfsc	status,2,c
 16335                           
 16336                           ;usb_device.c: 745: {
 16337                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 16338  0026DC  ECAB  F01A         	call	_USBCtrlEPAllowStatusStage	;wreg free
 16339  0026E0                     i2l376:
 16340                           
 16341                           ;usb_device.c: 747: }
 16342                           ;usb_device.c: 749: }
 16343                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
 16344  0026E0  BA68               	btfsc	3944,5,c	;volatile
 16345  0026E2  AA69               	btfss	3945,5,c	;volatile
 16346  0026E4  D002               	goto	i2l377
 16347                           
 16348                           ;usb_device.c: 752: {
 16349                           ;usb_device.c: 753: USBStallHandler();
 16350  0026E6  ECD2  F022         	call	_USBStallHandler	;wreg free
 16351  0026EA                     i2l377:
 16352                           
 16353                           ;usb_device.c: 754: }
 16354                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 16355  0026EA  B268               	btfsc	3944,1,c	;volatile
 16356  0026EC  A269               	btfss	3945,1,c	;volatile
 16357  0026EE  D00F               	goto	i2l378
 16358                           
 16359                           ;usb_device.c: 757: {
 16360                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 16361  0026F0  0E7F               	movlw	127
 16362  0026F2  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 16363  0026F4  680D               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 16364  0026F6  0E00               	movlw	0
 16365  0026F8  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 16366  0026FA  0E00               	movlw	0
 16367  0026FC  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 16368  0026FE  0E00               	movlw	0
 16369  002700  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 16370  002702  0E01               	movlw	1
 16371  002704  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 16372  002706  ECA2  F021         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 16373                           
 16374                           ;usb_device.c: 759: {UEIR = 0;};
 16375  00270A  0E00               	movlw	0
 16376  00270C  6E6A               	movwf	3946,c	;volatile
 16377  00270E                     i2l378:
 16378                           
 16379                           ;usb_device.c: 767: }
 16380                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 16381  00270E  0E04               	movlw	4
 16382  002710  6058               	cpfslt	_USBDeviceState,c	;volatile
 16383  002712  D002               	goto	i2l379
 16384                           
 16385                           ;usb_device.c: 775: {
 16386                           ;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 16387  002714  9AA1               	bcf	4001,5,c	;volatile
 16388                           
 16389                           ;usb_device.c: 777: return;
 16390  002716  0012               	return	
 16391  002718                     i2l379:
 16392                           
 16393                           ;usb_device.c: 778: }
 16394                           ;usb_device.c: 783: if(UIEbits.TRNIE)
 16395  002718  A669               	btfss	3945,3,c	;volatile
 16396  00271A  D039               	goto	i2u858_40
 16397                           
 16398                           ;usb_device.c: 784: {
 16399                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
 16400  00271C  0E00               	movlw	0
 16401  00271E  6E1C               	movwf	USBDeviceTasks@i,c
 16402  002720                     i2l9199:
 16403  002720  0E03               	movlw	3
 16404  002722  641C               	cpfsgt	USBDeviceTasks@i,c
 16405  002724  D001               	goto	i2l381
 16406  002726  D033               	goto	i2u858_40
 16407  002728                     i2l381:
 16408                           
 16409                           ;usb_device.c: 786: {
 16410                           ;usb_device.c: 787: if(UIRbits.TRNIF)
 16411  002728  A668               	btfss	3944,3,c	;volatile
 16412  00272A  D031               	goto	i2u858_40
 16413                           
 16414                           ;usb_device.c: 788: {
 16415                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
 16416  00272C  CF6C F05D          	movff	3948,_USTATcopy	;volatile
 16417                           
 16418                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 16419  002730  305D               	rrcf	_USTATcopy,w,c	;volatile
 16420  002732  32E8               	rrcf	wreg,f,c
 16421  002734  32E8               	rrcf	wreg,f,c
 16422  002736  0B0F               	andlw	15
 16423  002738  6E55               	movwf	_endpoint_number,c	;volatile
 16424                           
 16425                           ;usb_device.c: 793: (UIR &= 0xF7);
 16426  00273A  9668               	bcf	3944,3,c	;volatile
 16427                           
 16428                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 16429  00273C  B45D               	btfsc	_USTATcopy,2,c	;volatile
 16430  00273E  D007               	goto	i2l384
 16431                           
 16432                           ;usb_device.c: 799: {
 16433                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 16434  002740  5055               	movf	_endpoint_number,w,c	;volatile
 16435  002742  0D01               	mullw	1
 16436  002744  0E3E               	movlw	low _ep_data_out
 16437  002746  24F3               	addwf	prodl,w,c
 16438  002748  6ED9               	movwf	fsr2l,c
 16439  00274A  0E02               	movlw	high _ep_data_out
 16440  00274C  D006               	goto	L13
 16441  00274E                     i2l384:
 16442                           
 16443                           ;usb_device.c: 802: else
 16444                           ;usb_device.c: 803: {
 16445                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 16446                           
 16447                           ; BSR set to: 2
 16448  00274E  5055               	movf	_endpoint_number,w,c	;volatile
 16449  002750  0D01               	mullw	1
 16450  002752  0E41               	movlw	low _ep_data_in
 16451  002754  24F3               	addwf	prodl,w,c
 16452  002756  6ED9               	movwf	fsr2l,c
 16453  002758  0E02               	movlw	high _ep_data_in
 16454  00275A                     L13:
 16455  00275A  20F4               	addwfc	prodh,w,c
 16456  00275C  6EDA               	movwf	fsr2h,c
 16457  00275E  0102               	movlb	2	; () banked
 16458  002760  70DF               	btg	indf2,0,c
 16459                           
 16460                           ; BSR set to: 2
 16461                           ;usb_device.c: 805: }
 16462                           ;usb_device.c: 810: if(endpoint_number == 0)
 16463                           
 16464                           ; BSR set to: 2
 16465  002762  5055               	movf	_endpoint_number,w,c	;volatile
 16466  002764  A4D8               	btfss	status,2,c
 16467  002766  D003               	goto	i2l386
 16468                           
 16469                           ; BSR set to: 2
 16470                           ;usb_device.c: 811: {
 16471                           ;usb_device.c: 812: USBCtrlEPService();
 16472  002768  EC57  F01D         	call	_USBCtrlEPService	;wreg free
 16473                           
 16474                           ;usb_device.c: 813: }
 16475  00276C  D00E               	goto	i2l388
 16476  00276E                     i2l386:
 16477                           
 16478                           ;usb_device.c: 814: else
 16479                           ;usb_device.c: 815: {
 16480                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 16481  00276E  0E00               	movlw	0
 16482  002770  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 16483  002772  0E72               	movlw	114
 16484  002774  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 16485  002776  0E5D               	movlw	low _USTATcopy
 16486  002778  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 16487  00277A  0E00               	movlw	high _USTATcopy
 16488  00277C  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 16489  00277E  0E00               	movlw	0
 16490  002780  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 16491  002782  0E00               	movlw	0
 16492  002784  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 16493  002786  ECA2  F021         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 16494  00278A                     i2l388:
 16495  00278A  2A1C               	incf	USBDeviceTasks@i,f,c
 16496  00278C  D7C9               	goto	i2l9199
 16497  00278E                     i2u858_40:
 16498                           
 16499                           ;usb_device.c: 822: }
 16500                           ;usb_device.c: 823: }
 16501                           ;usb_device.c: 824: }
 16502                           ;usb_device.c: 826: {PIR2bits.USBIF = 0;};
 16503  00278E  9AA1               	bcf	4001,5,c	;volatile
 16504  002790  0012               	return		;funcret
 16505  002792                     __end_of_USBDeviceTasks:
 16506                           	opt stack 0
 16507                           pclatu	equ	0xFFB
 16508                           pclath	equ	0xFFA
 16509                           tblptru	equ	0xFF8
 16510                           tblptrh	equ	0xFF7
 16511                           tblptrl	equ	0xFF6
 16512                           tablat	equ	0xFF5
 16513                           prodh	equ	0xFF4
 16514                           prodl	equ	0xFF3
 16515                           intcon	equ	0xFF2
 16516                           indf0	equ	0xFEF
 16517                           postinc0	equ	0xFEE
 16518                           fsr0h	equ	0xFEA
 16519                           fsr0l	equ	0xFE9
 16520                           wreg	equ	0xFE8
 16521                           indf1	equ	0xFE7
 16522                           postdec1	equ	0xFE5
 16523                           fsr1h	equ	0xFE2
 16524                           fsr1l	equ	0xFE1
 16525                           indf2	equ	0xFDF
 16526                           postinc2	equ	0xFDE
 16527                           postdec2	equ	0xFDD
 16528                           plusw2	equ	0xFDB
 16529                           fsr2h	equ	0xFDA
 16530                           fsr2l	equ	0xFD9
 16531                           status	equ	0xFD8
 16532                           
 16533 ;; *************** function i2_USBDeviceInit *****************
 16534 ;; Defined at:
 16535 ;;		line 277 in file "../../../../microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 16536 ;; Parameters:    Size  Location     Type
 16537 ;;		None
 16538 ;; Auto vars:     Size  Location     Type
 16539 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 16540 ;; Return value:  Size  Location     Type
 16541 ;;                  1    wreg      void 
 16542 ;; Registers used:
 16543 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16544 ;; Tracked objects:
 16545 ;;		On entry : 0/0
 16546 ;;		On exit  : 0/0
 16547 ;;		Unchanged: 0/0
 16548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16549 ;;      Params:         0       0       0       0       0       0       0       0       0
 16550 ;;      Locals:         1       0       0       0       0       0       0       0       0
 16551 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16552 ;;      Totals:         1       0       0       0       0       0       0       0       0
 16553 ;;Total ram usage:        1 bytes
 16554 ;; Hardware stack levels used:    1
 16555 ;; Hardware stack levels required when called:    1
 16556 ;; This function calls:
 16557 ;;		i2_memset
 16558 ;; This function is called by:
 16559 ;;		_USBDeviceTasks
 16560 ;; This function uses a non-reentrant model
 16561 ;;
 16562                           
 16563                           	psect	text65
 16564  0022C4                     __ptext65:
 16565                           	opt stack 0
 16566  0022C4                     i2_USBDeviceInit:
 16567                           	opt stack 22
 16568                           
 16569                           ;usb_device.c: 279: uint8_t i;
 16570                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 16571                           
 16572                           ;incstack = 0
 16573  0022C4  9AA0               	bcf	4000,5,c	;volatile
 16574                           
 16575                           ;usb_device.c: 285: ;
 16576                           ;usb_device.c: 288: {UEIR = 0;};
 16577  0022C6  0E00               	movlw	0
 16578  0022C8  6E6A               	movwf	3946,c	;volatile
 16579                           
 16580                           ;usb_device.c: 291: {UIR = 0;};
 16581  0022CA  0E00               	movlw	0
 16582  0022CC  6E68               	movwf	3944,c	;volatile
 16583                           
 16584                           ;usb_device.c: 294: UEP0 = 0;
 16585  0022CE  0E00               	movlw	0
 16586  0022D0  6E70               	movwf	3952,c	;volatile
 16587                           
 16588                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 16589  0022D2  0E71               	movlw	113
 16590  0022D4  6E01               	movwf	i2memset@p1,c
 16591  0022D6  0E0F               	movlw	15
 16592  0022D8  6E02               	movwf	i2memset@p1+1,c
 16593  0022DA  0E00               	movlw	0
 16594  0022DC  6E04               	movwf	i2memset@c+1,c
 16595  0022DE  0E00               	movlw	0
 16596  0022E0  6E03               	movwf	i2memset@c,c
 16597  0022E2  0E00               	movlw	0
 16598  0022E4  6E06               	movwf	i2memset@n+1,c
 16599  0022E6  0E02               	movlw	2
 16600  0022E8  6E05               	movwf	i2memset@n,c
 16601  0022EA  ECDF  F023         	call	i2_memset	;wreg free
 16602                           
 16603                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 16604  0022EE  0E16               	movlw	22
 16605  0022F0  6E6F               	movwf	3951,c	;volatile
 16606  0022F2  0E9F               	movlw	159
 16607  0022F4  6E6B               	movwf	3947,c	;volatile
 16608  0022F6  0E7B               	movlw	123
 16609  0022F8  6E69               	movwf	3945,c	;volatile
 16610                           
 16611                           ;usb_device.c: 301: ;
 16612                           ;usb_device.c: 304: ;
 16613                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
 16614  0022FA  0E00               	movlw	0
 16615  0022FC  6E09               	movwf	i2USBDeviceInit@i,c
 16616  0022FE                     i2l8957:
 16617  0022FE  0E0B               	movlw	11
 16618  002300  6409               	cpfsgt	i2USBDeviceInit@i,c
 16619  002302  D001               	goto	i2l357
 16620  002304  D00E               	goto	i2u814_40
 16621  002306                     i2l357:
 16622                           
 16623                           ;usb_device.c: 308: {
 16624                           ;usb_device.c: 309: BDT[i].Val = 0x00;
 16625  002306  5009               	movf	i2USBDeviceInit@i,w,c
 16626  002308  0D04               	mullw	4
 16627  00230A  0E00               	movlw	0
 16628  00230C  24F3               	addwf	prodl,w,c
 16629  00230E  6ED9               	movwf	fsr2l,c
 16630  002310  0E04               	movlw	4
 16631  002312  20F4               	addwfc	prodh,w,c
 16632  002314  6EDA               	movwf	fsr2h,c
 16633  002316  6ADE               	clrf	postinc2,c
 16634  002318  6ADE               	clrf	postinc2,c
 16635  00231A  6ADE               	clrf	postinc2,c
 16636  00231C  6ADD               	clrf	postdec2,c
 16637  00231E  2A09               	incf	i2USBDeviceInit@i,f,c
 16638  002320  D7EE               	goto	i2l8957
 16639  002322                     i2u814_40:
 16640                           
 16641                           ;usb_device.c: 310: }
 16642                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
 16643  002322  8C6D               	bsf	3949,6,c	;volatile
 16644                           
 16645                           ;usb_device.c: 316: UADDR = 0x00;
 16646  002324  0E00               	movlw	0
 16647  002326  6E6E               	movwf	3950,c	;volatile
 16648                           
 16649                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 16650  002328  986D               	bcf	3949,4,c	;volatile
 16651                           
 16652                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 16653  00232A  9C6D               	bcf	3949,6,c	;volatile
 16654  00232C                     
 16655                           ;usb_device.c: 326: {
 16656                           ;usb_device.c: 327: (UIR &= 0xF7);
 16657  00232C  9668               	bcf	3944,3,c	;volatile
 16658                           
 16659                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 16660  00232E  0E00               	movlw	0
 16661  002330  6E3E               	movwf	_inPipes+3,c	;volatile
 16662                           
 16663                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 16664  002332  0E00               	movlw	0
 16665  002334  6E36               	movwf	_outPipes+3,c	;volatile
 16666                           
 16667                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 16668  002336  0E00               	movlw	0
 16669  002338  6E38               	movwf	_outPipes+5,c	;volatile
 16670  00233A  0E00               	movlw	0
 16671  00233C  6E37               	movwf	_outPipes+4,c	;volatile
 16672                           
 16673                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 16674  00233E  B668               	btfsc	3944,3,c	;volatile
 16675  002340  D7F5               	goto	i2l359
 16676                           
 16677                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 16678  002342  0E01               	movlw	1
 16679  002344  0101               	movlb	1	; () banked
 16680  002346  6FFA               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 16681                           
 16682                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 16683  002348  0E01               	movlw	1
 16684  00234A  6FF9               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 16685                           
 16686                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 16687  00234C  0E00               	movlw	0
 16688  00234E  6FF8               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 16689                           
 16690                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 16691  002350  0E00               	movlw	0
 16692  002352  6FF7               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 16693                           
 16694                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 16695  002354  0E00               	movlw	0
 16696  002356  6FFC               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 16697                           
 16698                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 16699  002358  0E00               	movlw	0
 16700  00235A  6E09               	movwf	i2USBDeviceInit@i,c
 16701  00235C                     i2l8985:
 16702                           
 16703                           ; BSR set to: 1
 16704  00235C  0E02               	movlw	2
 16705  00235E  6409               	cpfsgt	i2USBDeviceInit@i,c
 16706  002360  D001               	goto	i2l361
 16707  002362  D02E               	goto	i2u817_40
 16708  002364                     i2l361:
 16709                           
 16710                           ;usb_device.c: 346: {
 16711                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 16712                           
 16713                           ; BSR set to: 1
 16714  002364  5009               	movf	i2USBDeviceInit@i,w,c
 16715  002366  0D02               	mullw	2
 16716  002368  0E41               	movlw	low _pBDTEntryIn
 16717  00236A  24F3               	addwf	prodl,w,c
 16718  00236C  6ED9               	movwf	fsr2l,c
 16719  00236E  0E00               	movlw	high _pBDTEntryIn
 16720  002370  20F4               	addwfc	prodh,w,c
 16721  002372  6EDA               	movwf	fsr2h,c
 16722  002374  0E00               	movlw	0
 16723  002376  6EDE               	movwf	postinc2,c
 16724  002378  0E00               	movlw	0
 16725  00237A  6EDD               	movwf	postdec2,c
 16726                           
 16727                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 16728  00237C  5009               	movf	i2USBDeviceInit@i,w,c
 16729  00237E  0D02               	mullw	2
 16730  002380  0E0A               	movlw	low _pBDTEntryOut
 16731  002382  24F3               	addwf	prodl,w,c
 16732  002384  6ED9               	movwf	fsr2l,c
 16733  002386  0E02               	movlw	high _pBDTEntryOut
 16734  002388  20F4               	addwfc	prodh,w,c
 16735  00238A  6EDA               	movwf	fsr2h,c
 16736  00238C  0E00               	movlw	0
 16737  00238E  6EDE               	movwf	postinc2,c
 16738  002390  0E00               	movlw	0
 16739  002392  6EDD               	movwf	postdec2,c
 16740                           
 16741                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 16742  002394  5009               	movf	i2USBDeviceInit@i,w,c
 16743  002396  0D01               	mullw	1
 16744  002398  0E41               	movlw	low _ep_data_in
 16745  00239A  24F3               	addwf	prodl,w,c
 16746  00239C  6ED9               	movwf	fsr2l,c
 16747  00239E  0E02               	movlw	high _ep_data_in
 16748  0023A0  20F4               	addwfc	prodh,w,c
 16749  0023A2  6EDA               	movwf	fsr2h,c
 16750  0023A4  0E00               	movlw	0
 16751  0023A6  6EDF               	movwf	indf2,c
 16752                           
 16753                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 16754  0023A8  5009               	movf	i2USBDeviceInit@i,w,c
 16755  0023AA  0D01               	mullw	1
 16756  0023AC  0E3E               	movlw	low _ep_data_out
 16757  0023AE  24F3               	addwf	prodl,w,c
 16758  0023B0  6ED9               	movwf	fsr2l,c
 16759  0023B2  0E02               	movlw	high _ep_data_out
 16760  0023B4  20F4               	addwfc	prodh,w,c
 16761  0023B6  6EDA               	movwf	fsr2h,c
 16762  0023B8  0E00               	movlw	0
 16763  0023BA  6EDF               	movwf	indf2,c
 16764  0023BC  2A09               	incf	i2USBDeviceInit@i,f,c
 16765  0023BE  D7CE               	goto	i2l8985
 16766  0023C0                     i2u817_40:
 16767                           
 16768                           ;usb_device.c: 351: }
 16769                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 16770  0023C0  0E08               	movlw	8
 16771  0023C2  6E41               	movwf	_pBDTEntryIn,c
 16772  0023C4  0E04               	movlw	4
 16773  0023C6  6E42               	movwf	_pBDTEntryIn+1,c
 16774                           
 16775                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 16776  0023C8  0E16               	movlw	22
 16777  0023CA  6E70               	movwf	3952,c	;volatile
 16778                           
 16779                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 16780  0023CC  0E04               	movlw	4
 16781  0023CE  0104               	movlb	4	; () banked
 16782  0023D0  6F03               	movwf	3,b	;volatile
 16783  0023D2  0E30               	movlw	48
 16784  0023D4  6F02               	movwf	2,b	;volatile
 16785                           
 16786                           ; BSR set to: 4
 16787                           ;usb_device.c: 359: BDT[0].CNT = 8;
 16788  0023D6  0E08               	movlw	8
 16789  0023D8  6F01               	movwf	1,b	;volatile
 16790                           
 16791                           ; BSR set to: 4
 16792                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 16793  0023DA  0E04               	movlw	4
 16794  0023DC  6F00               	movwf	0,b	;volatile
 16795                           
 16796                           ; BSR set to: 4
 16797                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 16798  0023DE  8F00               	bsf	0,7,b	;volatile
 16799                           
 16800                           ; BSR set to: 4
 16801                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 16802  0023E0  0E00               	movlw	0
 16803  0023E2  6E5E               	movwf	_USBActiveConfiguration,c	;volatile
 16804                           
 16805                           ; BSR set to: 4
 16806                           ;usb_device.c: 366: USB1msTickCount = 0;
 16807  0023E4  0E00               	movlw	0
 16808  0023E6  0102               	movlb	2	; () banked
 16809  0023E8  6F18               	movwf	_USB1msTickCount& (0+255),b	;volatile
 16810  0023EA  0E00               	movlw	0
 16811  0023EC  6F19               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
 16812  0023EE  0E00               	movlw	0
 16813  0023F0  6F1A               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
 16814  0023F2  0E00               	movlw	0
 16815  0023F4  6F1B               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
 16816                           
 16817                           ; BSR set to: 2
 16818                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 16819  0023F6  0E00               	movlw	0
 16820  0023F8  0101               	movlb	1	; () banked
 16821  0023FA  6FF6               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 16822                           
 16823                           ; BSR set to: 1
 16824                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 16825  0023FC  0E00               	movlw	0
 16826  0023FE  6E58               	movwf	_USBDeviceState,c	;volatile
 16827                           
 16828                           ; BSR set to: 1
 16829  002400  0012               	return		;funcret
 16830  002402                     __end_ofi2_USBDeviceInit:
 16831                           	opt stack 0
 16832                           pclatu	equ	0xFFB
 16833                           pclath	equ	0xFFA
 16834                           tblptru	equ	0xFF8
 16835                           tblptrh	equ	0xFF7
 16836                           tblptrl	equ	0xFF6
 16837                           tablat	equ	0xFF5
 16838                           prodh	equ	0xFF4
 16839                           prodl	equ	0xFF3
 16840                           intcon	equ	0xFF2
 16841                           indf0	equ	0xFEF
 16842                           postinc0	equ	0xFEE
 16843                           fsr0h	equ	0xFEA
 16844                           fsr0l	equ	0xFE9
 16845                           wreg	equ	0xFE8
 16846                           indf1	equ	0xFE7
 16847                           postdec1	equ	0xFE5
 16848                           fsr1h	equ	0xFE2
 16849                           fsr1l	equ	0xFE1
 16850                           indf2	equ	0xFDF
 16851                           postinc2	equ	0xFDE
 16852                           postdec2	equ	0xFDD
 16853                           plusw2	equ	0xFDB
 16854                           fsr2h	equ	0xFDA
 16855                           fsr2l	equ	0xFD9
 16856                           status	equ	0xFD8
 16857                           
 16858 ;; *************** function _USBWakeFromSuspend *****************
 16859 ;; Defined at:
 16860 ;;		line 2303 in file "../../../../microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 16861 ;; Parameters:    Size  Location     Type
 16862 ;;		None
 16863 ;; Auto vars:     Size  Location     Type
 16864 ;;		None
 16865 ;; Return value:  Size  Location     Type
 16866 ;;                  1    wreg      void 
 16867 ;; Registers used:
 16868 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16869 ;; Tracked objects:
 16870 ;;		On entry : 0/0
 16871 ;;		On exit  : 0/0
 16872 ;;		Unchanged: 0/0
 16873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16874 ;;      Params:         0       0       0       0       0       0       0       0       0
 16875 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16876 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16877 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16878 ;;Total ram usage:        0 bytes
 16879 ;; Hardware stack levels used:    1
 16880 ;; Hardware stack levels required when called:    4
 16881 ;; This function calls:
 16882 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16883 ;; This function is called by:
 16884 ;;		_USBDeviceTasks
 16885 ;; This function uses a non-reentrant model
 16886 ;;
 16887                           
 16888                           	psect	text66
 16889  004698                     __ptext66:
 16890                           	opt stack 0
 16891  004698                     _USBWakeFromSuspend:
 16892                           	opt stack 19
 16893                           
 16894                           ;usb_device.c: 2305: USBBusIsSuspended = 0;
 16895                           
 16896                           ; BSR set to: 1
 16897                           ;incstack = 0
 16898  004698  0E00               	movlw	0
 16899  00469A  0101               	movlb	1	; () banked
 16900  00469C  6FFC               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 16901                           
 16902                           ; BSR set to: 1
 16903                           ;usb_device.c: 2311: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 16904  00469E  0E00               	movlw	0
 16905  0046A0  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 16906  0046A2  0E74               	movlw	116
 16907  0046A4  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 16908  0046A6  0E00               	movlw	0
 16909  0046A8  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 16910  0046AA  0E00               	movlw	0
 16911  0046AC  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 16912  0046AE  0E00               	movlw	0
 16913  0046B0  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 16914  0046B2  0E00               	movlw	0
 16915  0046B4  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 16916  0046B6  ECA2  F021         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 16917                           
 16918                           ;usb_device.c: 2318: UCONbits.SUSPND = 0;
 16919  0046BA  926D               	bcf	3949,1,c	;volatile
 16920                           
 16921                           ;usb_device.c: 2323: UIEbits.ACTVIE = 0;
 16922  0046BC  9469               	bcf	3945,2,c	;volatile
 16923                           
 16924                           ;usb_device.c: 2341: while(UIRbits.ACTVIF)
 16925  0046BE  D001               	goto	i2l527
 16926  0046C0                     
 16927                           ;usb_device.c: 2343: {
 16928                           ;usb_device.c: 2344: (UIR &= 0xFB);
 16929  0046C0  9468               	bcf	3944,2,c	;volatile
 16930  0046C2                     i2l527:
 16931  0046C2  B468               	btfsc	3944,2,c	;volatile
 16932  0046C4  D7FD               	goto	i2l528
 16933                           
 16934                           ;usb_device.c: 2345: }
 16935                           ;usb_device.c: 2347: USBTicksSinceSuspendEnd = 0;
 16936  0046C6  0E00               	movlw	0
 16937  0046C8  0101               	movlb	1	; () banked
 16938  0046CA  6FF6               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 16939                           
 16940                           ; BSR set to: 1
 16941  0046CC  0012               	return		;funcret
 16942  0046CE                     __end_of_USBWakeFromSuspend:
 16943                           	opt stack 0
 16944                           pclatu	equ	0xFFB
 16945                           pclath	equ	0xFFA
 16946                           tblptru	equ	0xFF8
 16947                           tblptrh	equ	0xFF7
 16948                           tblptrl	equ	0xFF6
 16949                           tablat	equ	0xFF5
 16950                           prodh	equ	0xFF4
 16951                           prodl	equ	0xFF3
 16952                           intcon	equ	0xFF2
 16953                           indf0	equ	0xFEF
 16954                           postinc0	equ	0xFEE
 16955                           fsr0h	equ	0xFEA
 16956                           fsr0l	equ	0xFE9
 16957                           wreg	equ	0xFE8
 16958                           indf1	equ	0xFE7
 16959                           postdec1	equ	0xFE5
 16960                           fsr1h	equ	0xFE2
 16961                           fsr1l	equ	0xFE1
 16962                           indf2	equ	0xFDF
 16963                           postinc2	equ	0xFDE
 16964                           postdec2	equ	0xFDD
 16965                           plusw2	equ	0xFDB
 16966                           fsr2h	equ	0xFDA
 16967                           fsr2l	equ	0xFD9
 16968                           status	equ	0xFD8
 16969                           
 16970 ;; *************** function _USBSuspend *****************
 16971 ;; Defined at:
 16972 ;;		line 2245 in file "../../../../microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 16973 ;; Parameters:    Size  Location     Type
 16974 ;;		None
 16975 ;; Auto vars:     Size  Location     Type
 16976 ;;		None
 16977 ;; Return value:  Size  Location     Type
 16978 ;;                  1    wreg      void 
 16979 ;; Registers used:
 16980 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16981 ;; Tracked objects:
 16982 ;;		On entry : 0/0
 16983 ;;		On exit  : 0/0
 16984 ;;		Unchanged: 0/0
 16985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16986 ;;      Params:         0       0       0       0       0       0       0       0       0
 16987 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16988 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16989 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16990 ;;Total ram usage:        0 bytes
 16991 ;; Hardware stack levels used:    1
 16992 ;; Hardware stack levels required when called:    4
 16993 ;; This function calls:
 16994 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16995 ;; This function is called by:
 16996 ;;		_USBDeviceTasks
 16997 ;; This function uses a non-reentrant model
 16998 ;;
 16999                           
 17000                           	psect	text67
 17001  004790                     __ptext67:
 17002                           	opt stack 0
 17003  004790                     _USBSuspend:
 17004                           	opt stack 19
 17005                           
 17006                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
 17007                           
 17008                           ; BSR set to: 1
 17009                           ;incstack = 0
 17010  004790  8469               	bsf	3945,2,c	;volatile
 17011                           
 17012                           ;usb_device.c: 2271: (UIR &= 0xEF);
 17013  004792  9868               	bcf	3944,4,c	;volatile
 17014                           
 17015                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
 17016  004794  826D               	bsf	3949,1,c	;volatile
 17017                           
 17018                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
 17019  004796  0E01               	movlw	1
 17020  004798  0101               	movlb	1	; () banked
 17021  00479A  6FFC               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 17022                           
 17023                           ; BSR set to: 1
 17024                           ;usb_device.c: 2278: USBTicksSinceSuspendEnd = 0;
 17025  00479C  0E00               	movlw	0
 17026  00479E  6FF6               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 17027                           
 17028                           ; BSR set to: 1
 17029                           ;usb_device.c: 2285: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 17030  0047A0  0E00               	movlw	0
 17031  0047A2  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 17032  0047A4  0E75               	movlw	117
 17033  0047A6  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 17034  0047A8  0E00               	movlw	0
 17035  0047AA  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 17036  0047AC  0E00               	movlw	0
 17037  0047AE  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 17038  0047B0  0E00               	movlw	0
 17039  0047B2  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 17040  0047B4  0E00               	movlw	0
 17041  0047B6  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 17042  0047B8  ECA2  F021         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 17043  0047BC  0012               	return		;funcret
 17044  0047BE                     __end_of_USBSuspend:
 17045                           	opt stack 0
 17046                           pclatu	equ	0xFFB
 17047                           pclath	equ	0xFFA
 17048                           tblptru	equ	0xFF8
 17049                           tblptrh	equ	0xFF7
 17050                           tblptrl	equ	0xFF6
 17051                           tablat	equ	0xFF5
 17052                           prodh	equ	0xFF4
 17053                           prodl	equ	0xFF3
 17054                           intcon	equ	0xFF2
 17055                           indf0	equ	0xFEF
 17056                           postinc0	equ	0xFEE
 17057                           fsr0h	equ	0xFEA
 17058                           fsr0l	equ	0xFE9
 17059                           wreg	equ	0xFE8
 17060                           indf1	equ	0xFE7
 17061                           postdec1	equ	0xFE5
 17062                           fsr1h	equ	0xFE2
 17063                           fsr1l	equ	0xFE1
 17064                           indf2	equ	0xFDF
 17065                           postinc2	equ	0xFDE
 17066                           postdec2	equ	0xFDD
 17067                           plusw2	equ	0xFDB
 17068                           fsr2h	equ	0xFDA
 17069                           fsr2l	equ	0xFD9
 17070                           status	equ	0xFD8
 17071                           
 17072 ;; *************** function _USBStallHandler *****************
 17073 ;; Defined at:
 17074 ;;		line 2202 in file "../../../../microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 17075 ;; Parameters:    Size  Location     Type
 17076 ;;		None
 17077 ;; Auto vars:     Size  Location     Type
 17078 ;;		None
 17079 ;; Return value:  Size  Location     Type
 17080 ;;                  1    wreg      void 
 17081 ;; Registers used:
 17082 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17083 ;; Tracked objects:
 17084 ;;		On entry : 0/0
 17085 ;;		On exit  : 0/0
 17086 ;;		Unchanged: 0/0
 17087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17088 ;;      Params:         0       0       0       0       0       0       0       0       0
 17089 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17090 ;;      Temps:          1       0       0       0       0       0       0       0       0
 17091 ;;      Totals:         1       0       0       0       0       0       0       0       0
 17092 ;;Total ram usage:        1 bytes
 17093 ;; Hardware stack levels used:    1
 17094 ;; This function calls:
 17095 ;;		Nothing
 17096 ;; This function is called by:
 17097 ;;		_USBDeviceTasks
 17098 ;; This function uses a non-reentrant model
 17099 ;;
 17100                           
 17101                           	psect	text68
 17102  0045A4                     __ptext68:
 17103                           	opt stack 0
 17104  0045A4                     _USBStallHandler:
 17105                           	opt stack 23
 17106                           
 17107                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
 17108                           
 17109                           ;incstack = 0
 17110  0045A4  A070               	btfss	3952,0,c	;volatile
 17111  0045A6  D01D               	goto	i2l519
 17112                           
 17113                           ;usb_device.c: 2215: {
 17114                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 17115  0045A8  C04F  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 17116  0045AC  C050  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 17117  0045B0  0E80               	movlw	128
 17118  0045B2  18DE               	xorwf	postinc2,w,c
 17119  0045B4  A4D8               	btfss	status,2,c
 17120  0045B6  D014               	goto	i2l520
 17121  0045B8  C041  FFD9         	movff	_pBDTEntryIn,fsr2l
 17122  0045BC  C042  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17123  0045C0  0E84               	movlw	132
 17124  0045C2  18DE               	xorwf	postinc2,w,c
 17125  0045C4  A4D8               	btfss	status,2,c
 17126  0045C6  D00C               	goto	i2l520
 17127                           
 17128                           ;usb_device.c: 2218: {
 17129                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 17130  0045C8  C04F  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 17131  0045CC  C050  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 17132  0045D0  0E0C               	movlw	12
 17133  0045D2  6EDF               	movwf	indf2,c
 17134                           
 17135                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 17136  0045D4  C04F  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 17137  0045D8  C050  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 17138  0045DC  0E00               	movlw	0
 17139  0045DE  8EDB               	bsf	plusw2,7,c
 17140  0045E0                     i2l520:
 17141                           
 17142                           ;usb_device.c: 2222: }
 17143                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
 17144  0045E0  9070               	bcf	3952,0,c	;volatile
 17145  0045E2                     i2l519:
 17146                           
 17147                           ;usb_device.c: 2224: }
 17148                           ;usb_device.c: 2226: (UIR &= 0xDF);
 17149  0045E2  9A68               	bcf	3944,5,c	;volatile
 17150  0045E4  0012               	return		;funcret
 17151  0045E6                     __end_of_USBStallHandler:
 17152                           	opt stack 0
 17153                           pclatu	equ	0xFFB
 17154                           pclath	equ	0xFFA
 17155                           tblptru	equ	0xFF8
 17156                           tblptrh	equ	0xFF7
 17157                           tblptrl	equ	0xFF6
 17158                           tablat	equ	0xFF5
 17159                           prodh	equ	0xFF4
 17160                           prodl	equ	0xFF3
 17161                           intcon	equ	0xFF2
 17162                           indf0	equ	0xFEF
 17163                           postinc0	equ	0xFEE
 17164                           fsr0h	equ	0xFEA
 17165                           fsr0l	equ	0xFE9
 17166                           wreg	equ	0xFE8
 17167                           indf1	equ	0xFE7
 17168                           postdec1	equ	0xFE5
 17169                           fsr1h	equ	0xFE2
 17170                           fsr1l	equ	0xFE1
 17171                           indf2	equ	0xFDF
 17172                           postinc2	equ	0xFDE
 17173                           postdec2	equ	0xFDD
 17174                           plusw2	equ	0xFDB
 17175                           fsr2h	equ	0xFDA
 17176                           fsr2l	equ	0xFD9
 17177                           status	equ	0xFD8
 17178                           
 17179 ;; *************** function _USBIncrement1msInternalTimers *****************
 17180 ;; Defined at:
 17181 ;;		line 3025 in file "../../../../microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 17182 ;; Parameters:    Size  Location     Type
 17183 ;;		None
 17184 ;; Auto vars:     Size  Location     Type
 17185 ;;		None
 17186 ;; Return value:  Size  Location     Type
 17187 ;;                  1    wreg      void 
 17188 ;; Registers used:
 17189 ;;		wreg, status,2, status,0
 17190 ;; Tracked objects:
 17191 ;;		On entry : 0/0
 17192 ;;		On exit  : 0/0
 17193 ;;		Unchanged: 0/0
 17194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17195 ;;      Params:         0       0       0       0       0       0       0       0       0
 17196 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17197 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17198 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17199 ;;Total ram usage:        0 bytes
 17200 ;; Hardware stack levels used:    1
 17201 ;; This function calls:
 17202 ;;		Nothing
 17203 ;; This function is called by:
 17204 ;;		_USBDeviceTasks
 17205 ;; This function uses a non-reentrant model
 17206 ;;
 17207                           
 17208                           	psect	text69
 17209  004988                     __ptext69:
 17210                           	opt stack 0
 17211  004988                     _USBIncrement1msInternalTimers:
 17212                           	opt stack 23
 17213                           
 17214                           ;usb_device.c: 3033: USB1msTickCount++;
 17215                           
 17216                           ;incstack = 0
 17217  004988  0E01               	movlw	1
 17218  00498A  0102               	movlb	2	; () banked
 17219  00498C  2718               	addwf	_USB1msTickCount& (0+255),f,b	;volatile
 17220  00498E  0E00               	movlw	0
 17221  004990  2319               	addwfc	(_USB1msTickCount+1)& (0+255),f,b	;volatile
 17222  004992  231A               	addwfc	(_USB1msTickCount+2)& (0+255),f,b	;volatile
 17223  004994  231B               	addwfc	(_USB1msTickCount+3)& (0+255),f,b	;volatile
 17224                           
 17225                           ; BSR set to: 2
 17226                           ;usb_device.c: 3034: if(USBBusIsSuspended == 0)
 17227  004996  0101               	movlb	1	; () banked
 17228  004998  51FC               	movf	_USBBusIsSuspended& (0+255),w,b	;volatile
 17229  00499A  A4D8               	btfss	status,2,c
 17230  00499C  0012               	return	
 17231                           
 17232                           ; BSR set to: 1
 17233                           ;usb_device.c: 3035: {
 17234                           ;usb_device.c: 3036: USBTicksSinceSuspendEnd++;
 17235  00499E  2BF6               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b	;volatile
 17236                           
 17237                           ; BSR set to: 1
 17238                           ;usb_device.c: 3038: if(USBTicksSinceSuspendEnd == 0)
 17239  0049A0  51F6               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b	;volatile
 17240  0049A2  A4D8               	btfss	status,2,c
 17241  0049A4  0012               	return	
 17242                           
 17243                           ; BSR set to: 1
 17244                           ;usb_device.c: 3039: {
 17245                           ;usb_device.c: 3040: USBTicksSinceSuspendEnd = 255;
 17246  0049A6  69F6               	setf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 17247                           
 17248                           ; BSR set to: 1
 17249  0049A8  0012               	return	
 17250  0049AA                     __end_of_USBIncrement1msInternalTimers:
 17251                           	opt stack 0
 17252                           pclatu	equ	0xFFB
 17253                           pclath	equ	0xFFA
 17254                           tblptru	equ	0xFF8
 17255                           tblptrh	equ	0xFF7
 17256                           tblptrl	equ	0xFF6
 17257                           tablat	equ	0xFF5
 17258                           prodh	equ	0xFF4
 17259                           prodl	equ	0xFF3
 17260                           intcon	equ	0xFF2
 17261                           indf0	equ	0xFEF
 17262                           postinc0	equ	0xFEE
 17263                           fsr0h	equ	0xFEA
 17264                           fsr0l	equ	0xFE9
 17265                           wreg	equ	0xFE8
 17266                           indf1	equ	0xFE7
 17267                           postdec1	equ	0xFE5
 17268                           fsr1h	equ	0xFE2
 17269                           fsr1l	equ	0xFE1
 17270                           indf2	equ	0xFDF
 17271                           postinc2	equ	0xFDE
 17272                           postdec2	equ	0xFDD
 17273                           plusw2	equ	0xFDB
 17274                           fsr2h	equ	0xFDA
 17275                           fsr2l	equ	0xFD9
 17276                           status	equ	0xFD8
 17277                           
 17278 ;; *************** function _USBCtrlEPService *****************
 17279 ;; Defined at:
 17280 ;;		line 2372 in file "../../../../microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 17281 ;; Parameters:    Size  Location     Type
 17282 ;;		None
 17283 ;; Auto vars:     Size  Location     Type
 17284 ;;		None
 17285 ;; Return value:  Size  Location     Type
 17286 ;;                  1    wreg      void 
 17287 ;; Registers used:
 17288 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17289 ;; Tracked objects:
 17290 ;;		On entry : 0/0
 17291 ;;		On exit  : 0/0
 17292 ;;		Unchanged: 0/0
 17293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17294 ;;      Params:         0       0       0       0       0       0       0       0       0
 17295 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17296 ;;      Temps:          1       0       0       0       0       0       0       0       0
 17297 ;;      Totals:         1       0       0       0       0       0       0       0       0
 17298 ;;Total ram usage:        1 bytes
 17299 ;; Hardware stack levels used:    1
 17300 ;; Hardware stack levels required when called:    7
 17301 ;; This function calls:
 17302 ;;		_USBCtrlTrfInHandler
 17303 ;;		_USBCtrlTrfOutHandler
 17304 ;;		_USBCtrlTrfSetupHandler
 17305 ;;		_memcpy
 17306 ;; This function is called by:
 17307 ;;		_USBDeviceTasks
 17308 ;; This function uses a non-reentrant model
 17309 ;;
 17310                           
 17311                           	psect	text70
 17312  003AAE                     __ptext70:
 17313                           	opt stack 0
 17314  003AAE                     _USBCtrlEPService:
 17315                           	opt stack 16
 17316                           
 17317                           ;usb_device.c: 2378: USBStatusStageTimeoutCounter = (uint8_t)45;
 17318                           
 17319                           ; BSR set to: 1
 17320                           ;incstack = 0
 17321  003AAE  0E2D               	movlw	45
 17322  003AB0  6E54               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 17323                           
 17324                           ;usb_device.c: 2382: if((USTATcopy.Val & ~0x02) == 0x00)
 17325  003AB2  C05D  F01B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 17326  003AB6  0EFD               	movlw	253
 17327  003AB8  161B               	andwf	??_USBCtrlEPService,f,c
 17328  003ABA  A4D8               	btfss	status,2,c
 17329  003ABC  D03B               	goto	i2l533
 17330                           
 17331                           ;usb_device.c: 2383: {
 17332                           ;usb_device.c: 2386: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 17333  003ABE  C05D  F01B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 17334  003AC2  90D8               	bcf	status,0,c
 17335  003AC4  321B               	rrcf	??_USBCtrlEPService,f,c
 17336  003AC6  0E3F               	movlw	63
 17337  003AC8  161B               	andwf	??_USBCtrlEPService,f,c
 17338  003ACA  501B               	movf	??_USBCtrlEPService,w,c
 17339  003ACC  0D04               	mullw	4
 17340  003ACE  0E00               	movlw	0
 17341  003AD0  24F3               	addwf	prodl,w,c
 17342  003AD2  6E4F               	movwf	_pBDTEntryEP0OutCurrent,c
 17343  003AD4  0E04               	movlw	4
 17344  003AD6  20F4               	addwfc	prodh,w,c
 17345  003AD8  6E50               	movwf	_pBDTEntryEP0OutCurrent+1,c
 17346                           
 17347                           ;usb_device.c: 2394: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 17348  003ADA  C04F  F04D         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 17349  003ADE  C050  F04E         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 17350                           
 17351                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 17352  003AE2  0E04               	movlw	4
 17353  003AE4  184D               	xorwf	_pBDTEntryEP0OutNext,w,c
 17354  003AE6  6E4D               	movwf	_pBDTEntryEP0OutNext,c
 17355  003AE8  504E               	movf	_pBDTEntryEP0OutNext+1,w,c
 17356  003AEA  6E4E               	movwf	_pBDTEntryEP0OutNext+1,c
 17357                           
 17358                           ;usb_device.c: 2399: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 17359  003AEC  C04F  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 17360  003AF0  C050  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 17361  003AF4  30DF               	rrcf	indf2,w,c
 17362  003AF6  32E8               	rrcf	wreg,f,c
 17363  003AF8  0B0F               	andlw	15
 17364  003AFA  0A0D               	xorlw	13
 17365  003AFC  A4D8               	btfss	status,2,c
 17366  003AFE  D017               	goto	i2l534
 17367                           
 17368                           ;usb_device.c: 2400: {
 17369                           ;usb_device.c: 2405: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void *)(pBDTEntryEP0OutCurr
      +                          ent->ADR)), 8);
 17370  003B00  0E30               	movlw	48
 17371  003B02  6E01               	movwf	memcpy@d1,c
 17372  003B04  0E04               	movlw	4
 17373  003B06  6E02               	movwf	memcpy@d1+1,c
 17374  003B08  EE20 F002          	lfsr	2,2
 17375  003B0C  504F               	movf	_pBDTEntryEP0OutCurrent,w,c
 17376  003B0E  26D9               	addwf	fsr2l,f,c
 17377  003B10  5050               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 17378  003B12  22DA               	addwfc	fsr2h,f,c
 17379  003B14  CFDE F003          	movff	postinc2,memcpy@s1
 17380  003B18  CFDD F004          	movff	postdec2,memcpy@s1+1
 17381  003B1C  0E00               	movlw	0
 17382  003B1E  6E06               	movwf	memcpy@n+1,c
 17383  003B20  0E08               	movlw	8
 17384  003B22  6E05               	movwf	memcpy@n,c
 17385  003B24  EC8F  F022         	call	_memcpy	;wreg free
 17386                           
 17387                           ;usb_device.c: 2408: USBCtrlTrfSetupHandler();
 17388  003B28  EC35  F01E         	call	_USBCtrlTrfSetupHandler	;wreg free
 17389                           
 17390                           ;usb_device.c: 2409: }
 17391  003B2C  0012               	return	
 17392  003B2E                     i2l534:
 17393                           
 17394                           ;usb_device.c: 2410: else
 17395                           ;usb_device.c: 2411: {
 17396                           ;usb_device.c: 2413: USBCtrlTrfOutHandler();
 17397  003B2E  EC73  F021         	call	_USBCtrlTrfOutHandler	;wreg free
 17398                           
 17399                           ;usb_device.c: 2414: }
 17400                           ;usb_device.c: 2415: }
 17401  003B32  0012               	return	
 17402  003B34                     i2l533:
 17403                           
 17404                           ;usb_device.c: 2416: else if((USTATcopy.Val & ~0x02) == 0x04)
 17405  003B34  505D               	movf	_USTATcopy,w,c	;volatile
 17406  003B36  0BFD               	andlw	253
 17407  003B38  0A04               	xorlw	4
 17408  003B3A  A4D8               	btfss	status,2,c
 17409  003B3C  0012               	return	
 17410                           
 17411                           ;usb_device.c: 2417: {
 17412                           ;usb_device.c: 2420: USBCtrlTrfInHandler();
 17413  003B3E  EC0D  F01B         	call	_USBCtrlTrfInHandler	;wreg free
 17414  003B42  0012               	return	
 17415  003B44                     __end_of_USBCtrlEPService:
 17416                           	opt stack 0
 17417                           pclatu	equ	0xFFB
 17418                           pclath	equ	0xFFA
 17419                           tblptru	equ	0xFF8
 17420                           tblptrh	equ	0xFF7
 17421                           tblptrl	equ	0xFF6
 17422                           tablat	equ	0xFF5
 17423                           prodh	equ	0xFF4
 17424                           prodl	equ	0xFF3
 17425                           intcon	equ	0xFF2
 17426                           indf0	equ	0xFEF
 17427                           postinc0	equ	0xFEE
 17428                           fsr0h	equ	0xFEA
 17429                           fsr0l	equ	0xFE9
 17430                           wreg	equ	0xFE8
 17431                           indf1	equ	0xFE7
 17432                           postdec1	equ	0xFE5
 17433                           fsr1h	equ	0xFE2
 17434                           fsr1l	equ	0xFE1
 17435                           indf2	equ	0xFDF
 17436                           postinc2	equ	0xFDE
 17437                           postdec2	equ	0xFDD
 17438                           plusw2	equ	0xFDB
 17439                           fsr2h	equ	0xFDA
 17440                           fsr2l	equ	0xFD9
 17441                           status	equ	0xFD8
 17442                           
 17443 ;; *************** function _memcpy *****************
 17444 ;; Defined at:
 17445 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\memcpy.c"
 17446 ;; Parameters:    Size  Location     Type
 17447 ;;  d1              2    0[COMRAM] PTR void 
 17448 ;;		 -> receivePacket(100), response(100), SetupPkt(8), 
 17449 ;;  s1              2    2[COMRAM] PTR const void 
 17450 ;;		 -> recebeByte@frameData(100), CtrlTrfData(8), RAM(2047), SetupPkt(8), 
 17451 ;;  n               2    4[COMRAM] unsigned int 
 17452 ;; Auto vars:     Size  Location     Type
 17453 ;;  s               2    8[COMRAM] PTR const unsigned char 
 17454 ;;		 -> recebeByte@frameData(100), CtrlTrfData(8), RAM(2047), SetupPkt(8), 
 17455 ;;  d               2    6[COMRAM] PTR unsigned char 
 17456 ;;		 -> receivePacket(100), response(100), SetupPkt(8), 
 17457 ;;  tmp             1   10[COMRAM] unsigned char 
 17458 ;; Return value:  Size  Location     Type
 17459 ;;                  2    0[COMRAM] PTR void 
 17460 ;; Registers used:
 17461 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17462 ;; Tracked objects:
 17463 ;;		On entry : 0/0
 17464 ;;		On exit  : 0/0
 17465 ;;		Unchanged: 0/0
 17466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17467 ;;      Params:         6       0       0       0       0       0       0       0       0
 17468 ;;      Locals:         5       0       0       0       0       0       0       0       0
 17469 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17470 ;;      Totals:        11       0       0       0       0       0       0       0       0
 17471 ;;Total ram usage:       11 bytes
 17472 ;; Hardware stack levels used:    1
 17473 ;; This function calls:
 17474 ;;		Nothing
 17475 ;; This function is called by:
 17476 ;;		_USBCtrlEPService
 17477 ;;		_recebeByte
 17478 ;; This function uses a non-reentrant model
 17479 ;;
 17480                           
 17481                           	psect	text71
 17482  00451E                     __ptext71:
 17483                           	opt stack 0
 17484  00451E                     _memcpy:
 17485                           	opt stack 22
 17486                           
 17487                           ;incstack = 0
 17488  00451E  C003  F009         	movff	memcpy@s1,memcpy@s
 17489  004522  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
 17490  004526  C001  F007         	movff	memcpy@d1,memcpy@d
 17491  00452A  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
 17492  00452E  D010               	goto	i2l2783
 17493  004530                     i2l7569:
 17494  004530  C009  FFD9         	movff	memcpy@s,fsr2l
 17495  004534  C00A  FFDA         	movff	memcpy@s+1,fsr2h
 17496  004538  50DF               	movf	indf2,w,c
 17497  00453A  6E0B               	movwf	memcpy@tmp,c
 17498  00453C  4A09               	infsnz	memcpy@s,f,c
 17499  00453E  2A0A               	incf	memcpy@s+1,f,c
 17500  004540  C007  FFD9         	movff	memcpy@d,fsr2l
 17501  004544  C008  FFDA         	movff	memcpy@d+1,fsr2h
 17502  004548  C00B  FFDF         	movff	memcpy@tmp,indf2
 17503  00454C  4A07               	infsnz	memcpy@d,f,c
 17504  00454E  2A08               	incf	memcpy@d+1,f,c
 17505  004550                     i2l2783:
 17506  004550  0605               	decf	memcpy@n,f,c
 17507  004552  A0D8               	btfss	status,0,c
 17508  004554  0606               	decf	memcpy@n+1,f,c
 17509  004556  2805               	incf	memcpy@n,w,c
 17510  004558  E1EB               	bnz	i2l7569
 17511  00455A  2806               	incf	memcpy@n+1,w,c
 17512  00455C  B4D8               	btfsc	status,2,c
 17513  00455E  0012               	return	
 17514  004560  D7E7               	goto	i2l2784
 17515  004562                     __end_of_memcpy:
 17516                           	opt stack 0
 17517                           pclatu	equ	0xFFB
 17518                           pclath	equ	0xFFA
 17519                           tblptru	equ	0xFF8
 17520                           tblptrh	equ	0xFF7
 17521                           tblptrl	equ	0xFF6
 17522                           tablat	equ	0xFF5
 17523                           prodh	equ	0xFF4
 17524                           prodl	equ	0xFF3
 17525                           intcon	equ	0xFF2
 17526                           indf0	equ	0xFEF
 17527                           postinc0	equ	0xFEE
 17528                           fsr0h	equ	0xFEA
 17529                           fsr0l	equ	0xFE9
 17530                           wreg	equ	0xFE8
 17531                           indf1	equ	0xFE7
 17532                           postdec1	equ	0xFE5
 17533                           fsr1h	equ	0xFE2
 17534                           fsr1l	equ	0xFE1
 17535                           indf2	equ	0xFDF
 17536                           postinc2	equ	0xFDE
 17537                           postdec2	equ	0xFDD
 17538                           plusw2	equ	0xFDB
 17539                           fsr2h	equ	0xFDA
 17540                           fsr2l	equ	0xFD9
 17541                           status	equ	0xFD8
 17542                           
 17543 ;; *************** function _USBCtrlTrfSetupHandler *****************
 17544 ;; Defined at:
 17545 ;;		line 2465 in file "../../../../microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 17546 ;; Parameters:    Size  Location     Type
 17547 ;;		None
 17548 ;; Auto vars:     Size  Location     Type
 17549 ;;		None
 17550 ;; Return value:  Size  Location     Type
 17551 ;;                  1    wreg      void 
 17552 ;; Registers used:
 17553 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17554 ;; Tracked objects:
 17555 ;;		On entry : 0/0
 17556 ;;		On exit  : 0/0
 17557 ;;		Unchanged: 0/0
 17558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17559 ;;      Params:         0       0       0       0       0       0       0       0       0
 17560 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17561 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17562 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17563 ;;Total ram usage:        0 bytes
 17564 ;; Hardware stack levels used:    1
 17565 ;; Hardware stack levels required when called:    6
 17566 ;; This function calls:
 17567 ;;		_USBCheckStdRequest
 17568 ;;		_USBCtrlEPServiceComplete
 17569 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 17570 ;; This function is called by:
 17571 ;;		_USBCtrlEPService
 17572 ;; This function uses a non-reentrant model
 17573 ;;
 17574                           
 17575                           	psect	text72
 17576  003C6A                     __ptext72:
 17577                           	opt stack 0
 17578  003C6A                     _USBCtrlTrfSetupHandler:
 17579                           	opt stack 16
 17580                           
 17581                           ;usb_device.c: 2470: shortPacketStatus = 0;
 17582                           
 17583                           ;incstack = 0
 17584  003C6A  0E00               	movlw	0
 17585  003C6C  6E57               	movwf	_shortPacketStatus,c	;volatile
 17586                           
 17587                           ;usb_device.c: 2471: USBDeferStatusStagePacket = 0;
 17588  003C6E  0E00               	movlw	0
 17589  003C70  6E53               	movwf	_USBDeferStatusStagePacket,c	;volatile
 17590                           
 17591                           ;usb_device.c: 2472: USBDeferINDataStagePackets = 0;
 17592  003C72  0E00               	movlw	0
 17593  003C74  0101               	movlb	1	; () banked
 17594  003C76  6FF8               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 17595                           
 17596                           ;usb_device.c: 2473: USBDeferOUTDataStagePackets = 0;
 17597  003C78  0E00               	movlw	0
 17598  003C7A  6FF7               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 17599                           
 17600                           ;usb_device.c: 2474: BothEP0OutUOWNsSet = 0;
 17601  003C7C  0E00               	movlw	0
 17602  003C7E  6FFB               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 17603                           
 17604                           ;usb_device.c: 2475: controlTransferState = 0;
 17605  003C80  0E00               	movlw	0
 17606  003C82  6E56               	movwf	_controlTransferState,c	;volatile
 17607                           
 17608                           ; BSR set to: 1
 17609                           ;usb_device.c: 2484: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 17610  003C84  C041  FFD9         	movff	_pBDTEntryIn,fsr2l
 17611  003C88  C042  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17612  003C8C  0E7F               	movlw	127
 17613  003C8E  16DF               	andwf	indf2,f,c
 17614                           
 17615                           ; BSR set to: 1
 17616                           ;usb_device.c: 2486: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 17617  003C90  0E04               	movlw	4
 17618  003C92  1841               	xorwf	_pBDTEntryIn,w,c
 17619  003C94  6E41               	movwf	_pBDTEntryIn,c
 17620  003C96  5042               	movf	_pBDTEntryIn+1,w,c
 17621  003C98  6E42               	movwf	_pBDTEntryIn+1,c
 17622                           
 17623                           ; BSR set to: 1
 17624                           ;usb_device.c: 2487: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 17625  003C9A  C041  FFD9         	movff	_pBDTEntryIn,fsr2l
 17626  003C9E  C042  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17627  003CA2  0E7F               	movlw	127
 17628  003CA4  16DF               	andwf	indf2,f,c
 17629                           
 17630                           ; BSR set to: 1
 17631                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 17632  003CA6  0E04               	movlw	4
 17633  003CA8  1841               	xorwf	_pBDTEntryIn,w,c
 17634  003CAA  6E41               	movwf	_pBDTEntryIn,c
 17635  003CAC  5042               	movf	_pBDTEntryIn+1,w,c
 17636  003CAE  6E42               	movwf	_pBDTEntryIn+1,c
 17637                           
 17638                           ; BSR set to: 1
 17639                           ;usb_device.c: 2489: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 17640  003CB0  C04D  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17641  003CB4  C04E  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17642  003CB8  0E7F               	movlw	127
 17643  003CBA  16DF               	andwf	indf2,f,c
 17644                           
 17645                           ; BSR set to: 1
 17646                           ;usb_device.c: 2491: inPipes[0].info.Val = 0;
 17647  003CBC  0E00               	movlw	0
 17648  003CBE  6E3E               	movwf	_inPipes+3,c	;volatile
 17649                           
 17650                           ; BSR set to: 1
 17651                           ;usb_device.c: 2492: inPipes[0].wCount.Val = 0;
 17652  003CC0  0E00               	movlw	0
 17653  003CC2  6E40               	movwf	_inPipes+5,c	;volatile
 17654  003CC4  0E00               	movlw	0
 17655  003CC6  6E3F               	movwf	_inPipes+4,c	;volatile
 17656                           
 17657                           ; BSR set to: 1
 17658                           ;usb_device.c: 2493: outPipes[0].info.Val = 0;
 17659  003CC8  0E00               	movlw	0
 17660  003CCA  6E36               	movwf	_outPipes+3,c	;volatile
 17661                           
 17662                           ; BSR set to: 1
 17663                           ;usb_device.c: 2494: outPipes[0].wCount.Val = 0;
 17664  003CCC  0E00               	movlw	0
 17665  003CCE  6E38               	movwf	_outPipes+5,c	;volatile
 17666  003CD0  0E00               	movlw	0
 17667  003CD2  6E37               	movwf	_outPipes+4,c	;volatile
 17668                           
 17669                           ; BSR set to: 1
 17670                           ;usb_device.c: 2500: USBCheckStdRequest();
 17671  003CD4  ECD9  F019         	call	_USBCheckStdRequest	;wreg free
 17672                           
 17673                           ;usb_device.c: 2501: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 17674  003CD8  0E00               	movlw	0
 17675  003CDA  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 17676  003CDC  0E03               	movlw	3
 17677  003CDE  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 17678  003CE0  0E00               	movlw	0
 17679  003CE2  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 17680  003CE4  0E00               	movlw	0
 17681  003CE6  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 17682  003CE8  0E00               	movlw	0
 17683  003CEA  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 17684  003CEC  0E00               	movlw	0
 17685  003CEE  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 17686  003CF0  ECA2  F021         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 17687                           
 17688                           ;usb_device.c: 2514: USBCtrlEPServiceComplete();
 17689  003CF4  EC83  F017         	call	_USBCtrlEPServiceComplete	;wreg free
 17690  003CF8  0012               	return		;funcret
 17691  003CFA                     __end_of_USBCtrlTrfSetupHandler:
 17692                           	opt stack 0
 17693                           pclatu	equ	0xFFB
 17694                           pclath	equ	0xFFA
 17695                           tblptru	equ	0xFF8
 17696                           tblptrh	equ	0xFF7
 17697                           tblptrl	equ	0xFF6
 17698                           tablat	equ	0xFF5
 17699                           prodh	equ	0xFF4
 17700                           prodl	equ	0xFF3
 17701                           intcon	equ	0xFF2
 17702                           indf0	equ	0xFEF
 17703                           postinc0	equ	0xFEE
 17704                           fsr0h	equ	0xFEA
 17705                           fsr0l	equ	0xFE9
 17706                           wreg	equ	0xFE8
 17707                           indf1	equ	0xFE7
 17708                           postdec1	equ	0xFE5
 17709                           fsr1h	equ	0xFE2
 17710                           fsr1l	equ	0xFE1
 17711                           indf2	equ	0xFDF
 17712                           postinc2	equ	0xFDE
 17713                           postdec2	equ	0xFDD
 17714                           plusw2	equ	0xFDB
 17715                           fsr2h	equ	0xFDA
 17716                           fsr2l	equ	0xFD9
 17717                           status	equ	0xFD8
 17718                           
 17719 ;; *************** function _USBCtrlEPServiceComplete *****************
 17720 ;; Defined at:
 17721 ;;		line 1616 in file "../../../../microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 17722 ;; Parameters:    Size  Location     Type
 17723 ;;		None
 17724 ;; Auto vars:     Size  Location     Type
 17725 ;;		None
 17726 ;; Return value:  Size  Location     Type
 17727 ;;                  1    wreg      void 
 17728 ;; Registers used:
 17729 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17730 ;; Tracked objects:
 17731 ;;		On entry : 0/0
 17732 ;;		On exit  : 0/0
 17733 ;;		Unchanged: 0/0
 17734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17735 ;;      Params:         0       0       0       0       0       0       0       0       0
 17736 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17737 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17738 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17739 ;;Total ram usage:        0 bytes
 17740 ;; Hardware stack levels used:    1
 17741 ;; Hardware stack levels required when called:    2
 17742 ;; This function calls:
 17743 ;;		_USBCtrlEPAllowDataStage
 17744 ;;		_USBCtrlEPAllowStatusStage
 17745 ;; This function is called by:
 17746 ;;		_USBCtrlTrfSetupHandler
 17747 ;; This function uses a non-reentrant model
 17748 ;;
 17749                           
 17750                           	psect	text73
 17751  002F06                     __ptext73:
 17752                           	opt stack 0
 17753  002F06                     _USBCtrlEPServiceComplete:
 17754                           	opt stack 19
 17755                           
 17756                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
 17757                           
 17758                           ;incstack = 0
 17759  002F06  986D               	bcf	3949,4,c	;volatile
 17760                           
 17761                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
 17762  002F08  BE3E               	btfsc	_inPipes+3,7,c	;volatile
 17763  002F0A  D03A               	goto	i2l443
 17764                           
 17765                           ;usb_device.c: 1629: {
 17766                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
 17767  002F0C  AE36               	btfss	_outPipes+3,7,c	;volatile
 17768  002F0E  D00D               	goto	i2l444
 17769                           
 17770                           ;usb_device.c: 1631: {
 17771                           ;usb_device.c: 1632: controlTransferState = 2;
 17772  002F10  0E02               	movlw	2
 17773  002F12  6E56               	movwf	_controlTransferState,c	;volatile
 17774                           
 17775                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
 17776  002F14  0101               	movlb	1	; () banked
 17777  002F16  51F7               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 17778  002F18  B4D8               	btfsc	status,2,c
 17779                           
 17780                           ; BSR set to: 1
 17781                           ;usb_device.c: 1644: {
 17782                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
 17783  002F1A  EC0B  F01D         	call	_USBCtrlEPAllowDataStage	;wreg free
 17784                           
 17785                           ;usb_device.c: 1646: }
 17786                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
 17787  002F1E  0E00               	movlw	0
 17788  002F20  0101               	movlb	1	; () banked
 17789  002F22  6FF9               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 17790                           
 17791                           ; BSR set to: 1
 17792                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
 17793  002F24  0E00               	movlw	0
 17794  002F26  6FFA               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 17795                           
 17796                           ;usb_device.c: 1652: }
 17797  002F28  0012               	return	
 17798  002F2A                     i2l444:
 17799                           
 17800                           ;usb_device.c: 1653: else
 17801                           ;usb_device.c: 1654: {
 17802                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
 17803                           
 17804                           ; BSR set to: 1
 17805  002F2A  EE20 F001          	lfsr	2,1
 17806  002F2E  504D               	movf	_pBDTEntryEP0OutNext,w,c
 17807  002F30  26D9               	addwf	fsr2l,f,c
 17808  002F32  504E               	movf	_pBDTEntryEP0OutNext+1,w,c
 17809  002F34  22DA               	addwfc	fsr2h,f,c
 17810  002F36  0E08               	movlw	8
 17811  002F38  6EDF               	movwf	indf2,c
 17812                           
 17813                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 17814  002F3A  EE20 F002          	lfsr	2,2
 17815  002F3E  504D               	movf	_pBDTEntryEP0OutNext,w,c
 17816  002F40  26D9               	addwf	fsr2l,f,c
 17817  002F42  504E               	movf	_pBDTEntryEP0OutNext+1,w,c
 17818  002F44  22DA               	addwfc	fsr2h,f,c
 17819  002F46  0E30               	movlw	48
 17820  002F48  6EDE               	movwf	postinc2,c
 17821  002F4A  0E04               	movlw	4
 17822  002F4C  6EDD               	movwf	postdec2,c
 17823                           
 17824                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 17825  002F4E  C04D  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17826  002F52  C04E  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17827  002F56  0E0C               	movlw	12
 17828  002F58  6EDF               	movwf	indf2,c
 17829                           
 17830                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 17831  002F5A  C04D  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17832  002F5E  C04E  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17833  002F62  0E00               	movlw	0
 17834  002F64  8EDB               	bsf	plusw2,7,c
 17835                           
 17836                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
 17837  002F66  C041  FFD9         	movff	_pBDTEntryIn,fsr2l
 17838  002F6A  C042  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17839  002F6E  0E04               	movlw	4
 17840  002F70  6EDF               	movwf	indf2,c
 17841                           
 17842                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
 17843  002F72  C041  FFD9         	movff	_pBDTEntryIn,fsr2l
 17844  002F76  C042  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17845  002F7A  0E00               	movlw	0
 17846  002F7C  8EDB               	bsf	plusw2,7,c
 17847                           
 17848                           ;usb_device.c: 1665: }
 17849                           ;usb_device.c: 1666: }
 17850  002F7E  0012               	return	
 17851  002F80                     i2l443:
 17852                           
 17853                           ;usb_device.c: 1667: else
 17854                           ;usb_device.c: 1668: {
 17855                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
 17856  002F80  0104               	movlb	4	; () banked
 17857  002F82  AF30               	btfss	48,7,b	;volatile
 17858  002F84  D012               	goto	i2l448
 17859                           
 17860                           ; BSR set to: 4
 17861                           ;usb_device.c: 1670: {
 17862                           ;usb_device.c: 1671: controlTransferState = 1;
 17863  002F86  0E01               	movlw	1
 17864  002F88  6E56               	movwf	_controlTransferState,c	;volatile
 17865                           
 17866                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
 17867  002F8A  0101               	movlb	1	; () banked
 17868  002F8C  51F8               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 17869  002F8E  B4D8               	btfsc	status,2,c
 17870                           
 17871                           ; BSR set to: 1
 17872                           ;usb_device.c: 1686: {
 17873                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
 17874  002F90  EC0B  F01D         	call	_USBCtrlEPAllowDataStage	;wreg free
 17875                           
 17876                           ;usb_device.c: 1688: }
 17877                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
 17878  002F94  0E00               	movlw	0
 17879  002F96  0101               	movlb	1	; () banked
 17880  002F98  6FF9               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 17881                           
 17882                           ; BSR set to: 1
 17883                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
 17884  002F9A  0E00               	movlw	0
 17885  002F9C  6FFA               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 17886                           
 17887                           ; BSR set to: 1
 17888                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
 17889  002F9E  5053               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 17890  002FA0  A4D8               	btfss	status,2,c
 17891  002FA2  0012               	return	
 17892                           
 17893                           ; BSR set to: 1
 17894                           ;usb_device.c: 1713: {
 17895                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
 17896  002FA4  ECAB  F01A         	call	_USBCtrlEPAllowStatusStage	;wreg free
 17897                           
 17898                           ;usb_device.c: 1715: }
 17899                           ;usb_device.c: 1716: }
 17900  002FA8  0012               	return	
 17901  002FAA                     i2l448:
 17902                           
 17903                           ;usb_device.c: 1717: else
 17904                           ;usb_device.c: 1718: {
 17905                           ;usb_device.c: 1729: controlTransferState = 2;
 17906  002FAA  0E02               	movlw	2
 17907  002FAC  6E56               	movwf	_controlTransferState,c	;volatile
 17908                           
 17909                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
 17910  002FAE  EE20 F001          	lfsr	2,1
 17911  002FB2  504D               	movf	_pBDTEntryEP0OutNext,w,c
 17912  002FB4  26D9               	addwf	fsr2l,f,c
 17913  002FB6  504E               	movf	_pBDTEntryEP0OutNext+1,w,c
 17914  002FB8  22DA               	addwfc	fsr2h,f,c
 17915  002FBA  0E08               	movlw	8
 17916  002FBC  6EDF               	movwf	indf2,c
 17917                           
 17918                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 17919  002FBE  EE20 F002          	lfsr	2,2
 17920  002FC2  504D               	movf	_pBDTEntryEP0OutNext,w,c
 17921  002FC4  26D9               	addwf	fsr2l,f,c
 17922  002FC6  504E               	movf	_pBDTEntryEP0OutNext+1,w,c
 17923  002FC8  22DA               	addwfc	fsr2h,f,c
 17924  002FCA  0E30               	movlw	48
 17925  002FCC  6EDE               	movwf	postinc2,c
 17926  002FCE  0E04               	movlw	4
 17927  002FD0  6EDD               	movwf	postdec2,c
 17928                           
 17929                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 17930  002FD2  C04D  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17931  002FD6  C04E  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17932  002FDA  0E04               	movlw	4
 17933  002FDC  6EDF               	movwf	indf2,c
 17934                           
 17935                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 17936  002FDE  C04D  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17937  002FE2  C04E  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17938  002FE6  0E00               	movlw	0
 17939  002FE8  8EDB               	bsf	plusw2,7,c
 17940                           
 17941                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
 17942  002FEA  0E00               	movlw	0
 17943  002FEC  0101               	movlb	1	; () banked
 17944  002FEE  6FF9               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 17945                           
 17946                           ; BSR set to: 1
 17947                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
 17948  002FF0  0E00               	movlw	0
 17949  002FF2  6FFA               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 17950                           
 17951                           ; BSR set to: 1
 17952                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
 17953  002FF4  5053               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 17954  002FF6  A4D8               	btfss	status,2,c
 17955  002FF8  0012               	return	
 17956                           
 17957                           ; BSR set to: 1
 17958                           ;usb_device.c: 1741: {
 17959                           ;usb_device.c: 1742: USBCtrlEPAllowStatusStage();
 17960  002FFA  ECAB  F01A         	call	_USBCtrlEPAllowStatusStage	;wreg free
 17961  002FFE  0012               	return	
 17962  003000                     __end_of_USBCtrlEPServiceComplete:
 17963                           	opt stack 0
 17964                           pclatu	equ	0xFFB
 17965                           pclath	equ	0xFFA
 17966                           tblptru	equ	0xFF8
 17967                           tblptrh	equ	0xFF7
 17968                           tblptrl	equ	0xFF6
 17969                           tablat	equ	0xFF5
 17970                           prodh	equ	0xFF4
 17971                           prodl	equ	0xFF3
 17972                           intcon	equ	0xFF2
 17973                           indf0	equ	0xFEF
 17974                           postinc0	equ	0xFEE
 17975                           fsr0h	equ	0xFEA
 17976                           fsr0l	equ	0xFE9
 17977                           wreg	equ	0xFE8
 17978                           indf1	equ	0xFE7
 17979                           postdec1	equ	0xFE5
 17980                           fsr1h	equ	0xFE2
 17981                           fsr1l	equ	0xFE1
 17982                           indf2	equ	0xFDF
 17983                           postinc2	equ	0xFDE
 17984                           postdec2	equ	0xFDD
 17985                           plusw2	equ	0xFDB
 17986                           fsr2h	equ	0xFDA
 17987                           fsr2l	equ	0xFD9
 17988                           status	equ	0xFD8
 17989                           
 17990 ;; *************** function _USBCtrlEPAllowDataStage *****************
 17991 ;; Defined at:
 17992 ;;		line 1488 in file "../../../../microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 17993 ;; Parameters:    Size  Location     Type
 17994 ;;		None
 17995 ;; Auto vars:     Size  Location     Type
 17996 ;;		None
 17997 ;; Return value:  Size  Location     Type
 17998 ;;                  1    wreg      void 
 17999 ;; Registers used:
 18000 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 18001 ;; Tracked objects:
 18002 ;;		On entry : 0/0
 18003 ;;		On exit  : 0/0
 18004 ;;		Unchanged: 0/0
 18005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18006 ;;      Params:         0       0       0       0       0       0       0       0       0
 18007 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18008 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18009 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18010 ;;Total ram usage:        0 bytes
 18011 ;; Hardware stack levels used:    1
 18012 ;; Hardware stack levels required when called:    1
 18013 ;; This function calls:
 18014 ;;		_USBCtrlTrfTxService
 18015 ;; This function is called by:
 18016 ;;		_USBCtrlEPServiceComplete
 18017 ;; This function uses a non-reentrant model
 18018 ;;
 18019                           
 18020                           	psect	text74
 18021  003A16                     __ptext74:
 18022                           	opt stack 0
 18023  003A16                     _USBCtrlEPAllowDataStage:
 18024                           	opt stack 19
 18025                           
 18026                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
 18027                           
 18028                           ;incstack = 0
 18029  003A16  0E00               	movlw	0
 18030  003A18  0101               	movlb	1	; () banked
 18031  003A1A  6FF8               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 18032                           
 18033                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
 18034  003A1C  0E00               	movlw	0
 18035  003A1E  6FF7               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 18036                           
 18037                           ; BSR set to: 1
 18038                           ;usb_device.c: 1493: if(controlTransferState == 2)
 18039  003A20  0E02               	movlw	2
 18040  003A22  1856               	xorwf	_controlTransferState,w,c	;volatile
 18041  003A24  A4D8               	btfss	status,2,c
 18042  003A26  D01F               	goto	i2l432
 18043                           
 18044                           ; BSR set to: 1
 18045                           ;usb_device.c: 1494: {
 18046                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
 18047  003A28  EE20 F001          	lfsr	2,1
 18048  003A2C  504D               	movf	_pBDTEntryEP0OutNext,w,c
 18049  003A2E  26D9               	addwf	fsr2l,f,c
 18050  003A30  504E               	movf	_pBDTEntryEP0OutNext+1,w,c
 18051  003A32  22DA               	addwfc	fsr2h,f,c
 18052  003A34  0E08               	movlw	8
 18053  003A36  6EDF               	movwf	indf2,c
 18054                           
 18055                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 18056  003A38  EE20 F002          	lfsr	2,2
 18057  003A3C  504D               	movf	_pBDTEntryEP0OutNext,w,c
 18058  003A3E  26D9               	addwf	fsr2l,f,c
 18059  003A40  504E               	movf	_pBDTEntryEP0OutNext+1,w,c
 18060  003A42  22DA               	addwfc	fsr2h,f,c
 18061  003A44  0E38               	movlw	56
 18062  003A46  6EDE               	movwf	postinc2,c
 18063  003A48  0E04               	movlw	4
 18064  003A4A  6EDD               	movwf	postdec2,c
 18065                           
 18066                           ; BSR set to: 1
 18067                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 18068  003A4C  C04D  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18069  003A50  C04E  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18070  003A54  0E48               	movlw	72
 18071  003A56  6EDF               	movwf	indf2,c
 18072                           
 18073                           ; BSR set to: 1
 18074                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 18075  003A58  C04D  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18076  003A5C  C04E  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18077  003A60  0E00               	movlw	0
 18078  003A62  8EDB               	bsf	plusw2,7,c
 18079                           
 18080                           ;usb_device.c: 1500: }
 18081  003A64  0012               	return	
 18082  003A66                     i2l432:
 18083                           
 18084                           ; BSR set to: 1
 18085                           ;usb_device.c: 1501: else
 18086                           ;usb_device.c: 1502: {
 18087                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 18088                           
 18089                           ; BSR set to: 1
 18090  003A66  503F               	movf	_inPipes+4,w,c	;volatile
 18091  003A68  0104               	movlb	4	; () banked
 18092  003A6A  5D36               	subwf	54,w,b	;volatile
 18093  003A6C  5040               	movf	_inPipes+5,w,c	;volatile
 18094  003A6E  5937               	subwfb	55,w,b	;volatile
 18095  003A70  B0D8               	btfsc	status,0,c
 18096  003A72  D004               	goto	i2l434
 18097                           
 18098                           ; BSR set to: 4
 18099                           ;usb_device.c: 1506: {
 18100                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
 18101  003A74  C436 F03F          	movff	1078,_inPipes+4	;volatile
 18102  003A78  C437 F040          	movff	1079,_inPipes+5	;volatile
 18103  003A7C                     i2l434:
 18104                           
 18105                           ; BSR set to: 4
 18106                           ;usb_device.c: 1508: }
 18107                           ;usb_device.c: 1509: USBCtrlTrfTxService();
 18108                           
 18109                           ; BSR set to: 4
 18110  003A7C  EC45  F01A         	call	_USBCtrlTrfTxService	;wreg free
 18111                           
 18112                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 18113  003A80  EE20 F002          	lfsr	2,2
 18114  003A84  5041               	movf	_pBDTEntryIn,w,c
 18115  003A86  26D9               	addwf	fsr2l,f,c
 18116  003A88  5042               	movf	_pBDTEntryIn+1,w,c
 18117  003A8A  22DA               	addwfc	fsr2h,f,c
 18118  003A8C  0E38               	movlw	56
 18119  003A8E  6EDE               	movwf	postinc2,c
 18120  003A90  0E04               	movlw	4
 18121  003A92  6EDD               	movwf	postdec2,c
 18122                           
 18123                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 18124  003A94  C041  FFD9         	movff	_pBDTEntryIn,fsr2l
 18125  003A98  C042  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18126  003A9C  0E48               	movlw	72
 18127  003A9E  6EDF               	movwf	indf2,c
 18128                           
 18129                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
 18130  003AA0  C041  FFD9         	movff	_pBDTEntryIn,fsr2l
 18131  003AA4  C042  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18132  003AA8  0E00               	movlw	0
 18133  003AAA  8EDB               	bsf	plusw2,7,c
 18134  003AAC  0012               	return	
 18135  003AAE                     __end_of_USBCtrlEPAllowDataStage:
 18136                           	opt stack 0
 18137                           pclatu	equ	0xFFB
 18138                           pclath	equ	0xFFA
 18139                           tblptru	equ	0xFF8
 18140                           tblptrh	equ	0xFF7
 18141                           tblptrl	equ	0xFF6
 18142                           tablat	equ	0xFF5
 18143                           prodh	equ	0xFF4
 18144                           prodl	equ	0xFF3
 18145                           intcon	equ	0xFF2
 18146                           indf0	equ	0xFEF
 18147                           postinc0	equ	0xFEE
 18148                           fsr0h	equ	0xFEA
 18149                           fsr0l	equ	0xFE9
 18150                           wreg	equ	0xFE8
 18151                           indf1	equ	0xFE7
 18152                           postdec1	equ	0xFE5
 18153                           fsr1h	equ	0xFE2
 18154                           fsr1l	equ	0xFE1
 18155                           indf2	equ	0xFDF
 18156                           postinc2	equ	0xFDE
 18157                           postdec2	equ	0xFDD
 18158                           plusw2	equ	0xFDB
 18159                           fsr2h	equ	0xFDA
 18160                           fsr2l	equ	0xFD9
 18161                           status	equ	0xFD8
 18162                           
 18163 ;; *************** function _USBCheckStdRequest *****************
 18164 ;; Defined at:
 18165 ;;		line 2686 in file "../../../../microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 18166 ;; Parameters:    Size  Location     Type
 18167 ;;		None
 18168 ;; Auto vars:     Size  Location     Type
 18169 ;;		None
 18170 ;; Return value:  Size  Location     Type
 18171 ;;                  1    wreg      void 
 18172 ;; Registers used:
 18173 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18174 ;; Tracked objects:
 18175 ;;		On entry : 0/0
 18176 ;;		On exit  : 0/0
 18177 ;;		Unchanged: 0/0
 18178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18179 ;;      Params:         0       0       0       0       0       0       0       0       0
 18180 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18181 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18182 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18183 ;;Total ram usage:        0 bytes
 18184 ;; Hardware stack levels used:    1
 18185 ;; Hardware stack levels required when called:    5
 18186 ;; This function calls:
 18187 ;;		_USBStdFeatureReqHandler
 18188 ;;		_USBStdGetDscHandler
 18189 ;;		_USBStdGetStatusHandler
 18190 ;;		_USBStdSetCfgHandler
 18191 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 18192 ;; This function is called by:
 18193 ;;		_USBCtrlTrfSetupHandler
 18194 ;; This function uses a non-reentrant model
 18195 ;;
 18196                           
 18197                           	psect	text75
 18198  0033B2                     __ptext75:
 18199                           	opt stack 0
 18200  0033B2                     _USBCheckStdRequest:
 18201                           	opt stack 16
 18202                           
 18203                           ;usb_device.c: 2688: if(SetupPkt.RequestType != (0x00>>5)) return;
 18204                           
 18205                           ;incstack = 0
 18206  0033B2  0104               	movlb	4	; () banked
 18207  0033B4  3930               	swapf	48,w,b	;volatile
 18208  0033B6  32E8               	rrcf	wreg,f,c
 18209  0033B8  0B03               	andlw	3
 18210  0033BA  0900               	iorlw	0
 18211  0033BC  A4D8               	btfss	status,2,c
 18212  0033BE  0012               	return	
 18213  0033C0  D042               	goto	i2l567
 18214  0033C2                     i2l568:
 18215                           
 18216                           ; BSR set to: 4
 18217                           ;usb_device.c: 2693: inPipes[0].info.bits.busy = 1;
 18218  0033C2  8E3E               	bsf	_inPipes+3,7,c	;volatile
 18219                           
 18220                           ; BSR set to: 4
 18221                           ;usb_device.c: 2694: USBDeviceState = ADR_PENDING_STATE;
 18222  0033C4  0E08               	movlw	8
 18223  0033C6  6E58               	movwf	_USBDeviceState,c	;volatile
 18224                           
 18225                           ;usb_device.c: 2696: break;
 18226  0033C8  0012               	return	
 18227  0033CA                     
 18228                           ; BSR set to: 4
 18229                           ;usb_device.c: 2698: USBStdGetDscHandler();
 18230                           
 18231                           ; BSR set to: 4
 18232  0033CA  EC5E  F014         	call	_USBStdGetDscHandler	;wreg free
 18233                           
 18234                           ;usb_device.c: 2699: break;
 18235  0033CE  0012               	return	
 18236  0033D0                     
 18237                           ;usb_device.c: 2701: USBStdSetCfgHandler();
 18238  0033D0  EC6B  F019         	call	_USBStdSetCfgHandler	;wreg free
 18239                           
 18240                           ;usb_device.c: 2702: break;
 18241  0033D4  0012               	return	
 18242  0033D6                     
 18243                           ;usb_device.c: 2704: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 18244  0033D6  0E5E               	movlw	low _USBActiveConfiguration
 18245  0033D8  6E3B               	movwf	_inPipes,c	;volatile
 18246  0033DA  0E00               	movlw	high _USBActiveConfiguration
 18247  0033DC  6E3C               	movwf	_inPipes+1,c	;volatile
 18248                           
 18249                           ;usb_device.c: 2705: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 18250  0033DE  803E               	bsf	_inPipes+3,0,c	;volatile
 18251                           
 18252                           ;usb_device.c: 2706: inPipes[0].wCount.v[0] = 1;
 18253  0033E0  0E01               	movlw	1
 18254  0033E2  6E3F               	movwf	_inPipes+4,c	;volatile
 18255                           
 18256                           ;usb_device.c: 2707: inPipes[0].info.bits.busy = 1;
 18257  0033E4  8E3E               	bsf	_inPipes+3,7,c	;volatile
 18258                           
 18259                           ;usb_device.c: 2708: break;
 18260  0033E6  0012               	return	
 18261  0033E8                     
 18262                           ;usb_device.c: 2710: USBStdGetStatusHandler();
 18263  0033E8  ECBB  F01C         	call	_USBStdGetStatusHandler	;wreg free
 18264                           
 18265                           ;usb_device.c: 2711: break;
 18266  0033EC  0012               	return	
 18267  0033EE                     
 18268                           ;usb_device.c: 2713: case 3:
 18269                           ;usb_device.c: 2714: USBStdFeatureReqHandler();
 18270  0033EE  EC0D  F008         	call	_USBStdFeatureReqHandler	;wreg free
 18271                           
 18272                           ;usb_device.c: 2715: break;
 18273  0033F2  0012               	return	
 18274  0033F4                     
 18275                           ;usb_device.c: 2717: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 18276  0033F4  0104               	movlb	4	; () banked
 18277  0033F6  5134               	movf	52,w,b	;volatile
 18278  0033F8  0D01               	mullw	1
 18279  0033FA  0ED9               	movlw	low _USBAlternateInterface
 18280  0033FC  24F3               	addwf	prodl,w,c
 18281  0033FE  6E3B               	movwf	_inPipes,c	;volatile
 18282  003400  0E02               	movlw	high _USBAlternateInterface
 18283  003402  20F4               	addwfc	prodh,w,c
 18284  003404  6E3C               	movwf	_inPipes+1,c	;volatile
 18285                           
 18286                           ; BSR set to: 4
 18287                           ;usb_device.c: 2718: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 18288  003406  803E               	bsf	_inPipes+3,0,c	;volatile
 18289                           
 18290                           ; BSR set to: 4
 18291                           ;usb_device.c: 2719: inPipes[0].wCount.v[0] = 1;
 18292  003408  0E01               	movlw	1
 18293  00340A  6E3F               	movwf	_inPipes+4,c	;volatile
 18294                           
 18295                           ; BSR set to: 4
 18296                           ;usb_device.c: 2720: inPipes[0].info.bits.busy = 1;
 18297  00340C  8E3E               	bsf	_inPipes+3,7,c	;volatile
 18298                           
 18299                           ;usb_device.c: 2721: break;
 18300  00340E  0012               	return	
 18301  003410                     i2l577:
 18302                           
 18303                           ; BSR set to: 4
 18304                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
 18305  003410  8E3E               	bsf	_inPipes+3,7,c	;volatile
 18306                           
 18307                           ; BSR set to: 4
 18308                           ;usb_device.c: 2724: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 18309  003412  5134               	movf	52,w,b	;volatile
 18310  003414  0D01               	mullw	1
 18311  003416  0ED9               	movlw	low _USBAlternateInterface
 18312  003418  24F3               	addwf	prodl,w,c
 18313  00341A  6ED9               	movwf	fsr2l,c
 18314  00341C  0E02               	movlw	high _USBAlternateInterface
 18315  00341E  20F4               	addwfc	prodh,w,c
 18316  003420  6EDA               	movwf	fsr2h,c
 18317  003422  C432 FFDF          	movff	1074,indf2	;volatile
 18318                           
 18319                           ;usb_device.c: 2725: break;
 18320  003426  0012               	return	
 18321  003428                     
 18322                           ; BSR set to: 4
 18323                           ;usb_device.c: 2727: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 18324                           
 18325                           ; BSR set to: 4
 18326  003428  0E00               	movlw	0
 18327  00342A  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 18328  00342C  0E02               	movlw	2
 18329  00342E  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 18330  003430  0E00               	movlw	0
 18331  003432  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 18332  003434  0E00               	movlw	0
 18333  003436  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 18334  003438  0E00               	movlw	0
 18335  00343A  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 18336  00343C  0E00               	movlw	0
 18337  00343E  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 18338  003440  ECA2  F021         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 18339                           
 18340                           ;usb_device.c: 2732: }
 18341                           
 18342                           ;usb_device.c: 2731: break;
 18343                           
 18344                           ;usb_device.c: 2730: default:
 18345                           
 18346                           ;usb_device.c: 2729: case 12:
 18347                           
 18348                           ;usb_device.c: 2728: break;
 18349  003444  0012               	return	
 18350  003446                     i2l567:
 18351  003446  0104               	movlb	4	; () banked
 18352  003448  5131               	movf	49,w,b	;volatile
 18353                           
 18354                           ; Switch size 1, requested type "space"
 18355                           ; Number of cases is 11, Range of values is 0 to 12
 18356                           ; switch strategies available:
 18357                           ; Name         Instructions Cycles
 18358                           ; simple_byte           34    18 (average)
 18359                           ;	Chosen strategy is simple_byte
 18360  00344A  0A00               	xorlw	0	; case 0
 18361  00344C  B4D8               	btfsc	status,2,c
 18362  00344E  D7CC               	goto	i2l573
 18363  003450  0A01               	xorlw	1	; case 1
 18364  003452  B4D8               	btfsc	status,2,c
 18365  003454  D7CC               	goto	i2l574
 18366  003456  0A02               	xorlw	2	; case 3
 18367  003458  B4D8               	btfsc	status,2,c
 18368  00345A  D7C9               	goto	i2l574
 18369  00345C  0A06               	xorlw	6	; case 5
 18370  00345E  B4D8               	btfsc	status,2,c
 18371  003460  D7B0               	goto	i2l568
 18372  003462  0A03               	xorlw	3	; case 6
 18373  003464  B4D8               	btfsc	status,2,c
 18374  003466  D7B1               	goto	i2l570
 18375  003468  0A01               	xorlw	1	; case 7
 18376  00346A  B4D8               	btfsc	status,2,c
 18377  00346C  D7DD               	goto	i2l578
 18378  00346E  0A0F               	xorlw	15	; case 8
 18379  003470  B4D8               	btfsc	status,2,c
 18380  003472  D7B1               	goto	i2l572
 18381  003474  0A01               	xorlw	1	; case 9
 18382  003476  B4D8               	btfsc	status,2,c
 18383  003478  D7AB               	goto	i2l571
 18384  00347A  0A03               	xorlw	3	; case 10
 18385  00347C  B4D8               	btfsc	status,2,c
 18386  00347E  D7BA               	goto	i2l576
 18387  003480  0A01               	xorlw	1	; case 11
 18388  003482  B4D8               	btfsc	status,2,c
 18389  003484  D7C5               	goto	i2l577
 18390  003486  0A07               	xorlw	7	; case 12
 18391  003488  0012               	return	
 18392  00348A                     __end_of_USBCheckStdRequest:
 18393                           	opt stack 0
 18394                           pclatu	equ	0xFFB
 18395                           pclath	equ	0xFFA
 18396                           tblptru	equ	0xFF8
 18397                           tblptrh	equ	0xFF7
 18398                           tblptrl	equ	0xFF6
 18399                           tablat	equ	0xFF5
 18400                           prodh	equ	0xFF4
 18401                           prodl	equ	0xFF3
 18402                           intcon	equ	0xFF2
 18403                           indf0	equ	0xFEF
 18404                           postinc0	equ	0xFEE
 18405                           fsr0h	equ	0xFEA
 18406                           fsr0l	equ	0xFE9
 18407                           wreg	equ	0xFE8
 18408                           indf1	equ	0xFE7
 18409                           postdec1	equ	0xFE5
 18410                           fsr1h	equ	0xFE2
 18411                           fsr1l	equ	0xFE1
 18412                           indf2	equ	0xFDF
 18413                           postinc2	equ	0xFDE
 18414                           postdec2	equ	0xFDD
 18415                           plusw2	equ	0xFDB
 18416                           fsr2h	equ	0xFDA
 18417                           fsr2l	equ	0xFD9
 18418                           status	equ	0xFD8
 18419                           
 18420 ;; *************** function _USBStdSetCfgHandler *****************
 18421 ;; Defined at:
 18422 ;;		line 1968 in file "../../../../microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 18423 ;; Parameters:    Size  Location     Type
 18424 ;;		None
 18425 ;; Auto vars:     Size  Location     Type
 18426 ;;  i               1   20[COMRAM] unsigned char 
 18427 ;; Return value:  Size  Location     Type
 18428 ;;                  1    wreg      void 
 18429 ;; Registers used:
 18430 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18431 ;; Tracked objects:
 18432 ;;		On entry : 0/0
 18433 ;;		On exit  : 0/0
 18434 ;;		Unchanged: 0/0
 18435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18436 ;;      Params:         0       0       0       0       0       0       0       0       0
 18437 ;;      Locals:         1       0       0       0       0       0       0       0       0
 18438 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18439 ;;      Totals:         1       0       0       0       0       0       0       0       0
 18440 ;;Total ram usage:        1 bytes
 18441 ;; Hardware stack levels used:    1
 18442 ;; Hardware stack levels required when called:    4
 18443 ;; This function calls:
 18444 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 18445 ;;		i2_memset
 18446 ;; This function is called by:
 18447 ;;		_USBCheckStdRequest
 18448 ;; This function uses a non-reentrant model
 18449 ;;
 18450                           
 18451                           	psect	text76
 18452  0032D6                     __ptext76:
 18453                           	opt stack 0
 18454  0032D6                     _USBStdSetCfgHandler:
 18455                           	opt stack 16
 18456                           
 18457                           ;usb_device.c: 1970: uint8_t i;
 18458                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
 18459                           
 18460                           ;incstack = 0
 18461  0032D6  8E3E               	bsf	_inPipes+3,7,c	;volatile
 18462                           
 18463                           ;usb_device.c: 1976: memset((void*)&UEP1,0x00,(2));;
 18464  0032D8  0E71               	movlw	113
 18465  0032DA  6E01               	movwf	i2memset@p1,c
 18466  0032DC  0E0F               	movlw	15
 18467  0032DE  6E02               	movwf	i2memset@p1+1,c
 18468  0032E0  0E00               	movlw	0
 18469  0032E2  6E04               	movwf	i2memset@c+1,c
 18470  0032E4  0E00               	movlw	0
 18471  0032E6  6E03               	movwf	i2memset@c,c
 18472  0032E8  0E00               	movlw	0
 18473  0032EA  6E06               	movwf	i2memset@n+1,c
 18474  0032EC  0E02               	movlw	2
 18475  0032EE  6E05               	movwf	i2memset@n,c
 18476  0032F0  ECDF  F023         	call	i2_memset	;wreg free
 18477                           
 18478                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 18479  0032F4  0E00               	movlw	0
 18480  0032F6  6E01               	movwf	i2memset@p1,c
 18481  0032F8  0E04               	movlw	4
 18482  0032FA  6E02               	movwf	i2memset@p1+1,c
 18483  0032FC  0E00               	movlw	0
 18484  0032FE  6E04               	movwf	i2memset@c+1,c
 18485  003300  0E00               	movlw	0
 18486  003302  6E03               	movwf	i2memset@c,c
 18487  003304  0E00               	movlw	0
 18488  003306  6E06               	movwf	i2memset@n+1,c
 18489  003308  0E30               	movlw	48
 18490  00330A  6E05               	movwf	i2memset@n,c
 18491  00330C  ECDF  F023         	call	i2_memset	;wreg free
 18492                           
 18493                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
 18494  003310  8C6D               	bsf	3949,6,c	;volatile
 18495                           
 18496                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
 18497  003312  0E00               	movlw	0
 18498  003314  6E15               	movwf	USBStdSetCfgHandler@i,c
 18499  003316                     i2l6917:
 18500  003316  0E02               	movlw	2
 18501  003318  6415               	cpfsgt	USBStdSetCfgHandler@i,c
 18502  00331A  D001               	goto	i2l484
 18503  00331C  D016               	goto	i2u502_40
 18504  00331E                     i2l484:
 18505                           
 18506                           ;usb_device.c: 1988: {
 18507                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
 18508  00331E  5015               	movf	USBStdSetCfgHandler@i,w,c
 18509  003320  0D01               	mullw	1
 18510  003322  0E41               	movlw	low _ep_data_in
 18511  003324  24F3               	addwf	prodl,w,c
 18512  003326  6ED9               	movwf	fsr2l,c
 18513  003328  0E02               	movlw	high _ep_data_in
 18514  00332A  20F4               	addwfc	prodh,w,c
 18515  00332C  6EDA               	movwf	fsr2h,c
 18516  00332E  0E00               	movlw	0
 18517  003330  6EDF               	movwf	indf2,c
 18518                           
 18519                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
 18520  003332  5015               	movf	USBStdSetCfgHandler@i,w,c
 18521  003334  0D01               	mullw	1
 18522  003336  0E3E               	movlw	low _ep_data_out
 18523  003338  24F3               	addwf	prodl,w,c
 18524  00333A  6ED9               	movwf	fsr2l,c
 18525  00333C  0E02               	movlw	high _ep_data_out
 18526  00333E  20F4               	addwfc	prodh,w,c
 18527  003340  6EDA               	movwf	fsr2h,c
 18528  003342  0E00               	movlw	0
 18529  003344  6EDF               	movwf	indf2,c
 18530  003346  2A15               	incf	USBStdSetCfgHandler@i,f,c
 18531  003348  D7E6               	goto	i2l6917
 18532  00334A                     i2u502_40:
 18533                           
 18534                           ;usb_device.c: 1991: }
 18535                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
 18536  00334A  0ED9               	movlw	low _USBAlternateInterface
 18537  00334C  6E01               	movwf	i2memset@p1,c
 18538  00334E  0E02               	movlw	high _USBAlternateInterface
 18539  003350  6E02               	movwf	i2memset@p1+1,c
 18540  003352  0E00               	movlw	0
 18541  003354  6E04               	movwf	i2memset@c+1,c
 18542  003356  0E00               	movlw	0
 18543  003358  6E03               	movwf	i2memset@c,c
 18544  00335A  0E00               	movlw	0
 18545  00335C  6E06               	movwf	i2memset@n+1,c
 18546  00335E  0E02               	movlw	2
 18547  003360  6E05               	movwf	i2memset@n,c
 18548  003362  ECDF  F023         	call	i2_memset	;wreg free
 18549                           
 18550                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
 18551  003366  9C6D               	bcf	3949,6,c	;volatile
 18552                           
 18553                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 18554  003368  0E08               	movlw	8
 18555  00336A  6E41               	movwf	_pBDTEntryIn,c
 18556  00336C  0E04               	movlw	4
 18557  00336E  6E42               	movwf	_pBDTEntryIn+1,c
 18558                           
 18559                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 18560  003370  0E00               	movlw	0
 18561  003372  6E4F               	movwf	_pBDTEntryEP0OutCurrent,c
 18562  003374  0E04               	movlw	4
 18563  003376  6E50               	movwf	_pBDTEntryEP0OutCurrent+1,c
 18564                           
 18565                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 18566  003378  C04F  F04D         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 18567  00337C  C050  F04E         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 18568                           
 18569                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 18570  003380  C432 F05E          	movff	1074,_USBActiveConfiguration	;volatile
 18571                           
 18572                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
 18573  003384  505E               	movf	_USBActiveConfiguration,w,c	;volatile
 18574  003386  A4D8               	btfss	status,2,c
 18575  003388  D003               	goto	i2l486
 18576                           
 18577                           ;usb_device.c: 2010: {
 18578                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
 18579  00338A  0E10               	movlw	16
 18580  00338C  6E58               	movwf	_USBDeviceState,c	;volatile
 18581                           
 18582                           ;usb_device.c: 2013: }
 18583  00338E  0012               	return	
 18584  003390                     i2l486:
 18585                           
 18586                           ;usb_device.c: 2014: else
 18587                           ;usb_device.c: 2015: {
 18588                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 18589  003390  0E00               	movlw	0
 18590  003392  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 18591  003394  0E01               	movlw	1
 18592  003396  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 18593  003398  0E5E               	movlw	low _USBActiveConfiguration
 18594  00339A  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 18595  00339C  0E00               	movlw	high _USBActiveConfiguration
 18596  00339E  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 18597  0033A0  0E00               	movlw	0
 18598  0033A2  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 18599  0033A4  0E01               	movlw	1
 18600  0033A6  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 18601  0033A8  ECA2  F021         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 18602                           
 18603                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
 18604  0033AC  0E20               	movlw	32
 18605  0033AE  6E58               	movwf	_USBDeviceState,c	;volatile
 18606  0033B0  0012               	return	
 18607  0033B2                     __end_of_USBStdSetCfgHandler:
 18608                           	opt stack 0
 18609                           pclatu	equ	0xFFB
 18610                           pclath	equ	0xFFA
 18611                           tblptru	equ	0xFF8
 18612                           tblptrh	equ	0xFF7
 18613                           tblptrl	equ	0xFF6
 18614                           tablat	equ	0xFF5
 18615                           prodh	equ	0xFF4
 18616                           prodl	equ	0xFF3
 18617                           intcon	equ	0xFF2
 18618                           indf0	equ	0xFEF
 18619                           postinc0	equ	0xFEE
 18620                           fsr0h	equ	0xFEA
 18621                           fsr0l	equ	0xFE9
 18622                           wreg	equ	0xFE8
 18623                           indf1	equ	0xFE7
 18624                           postdec1	equ	0xFE5
 18625                           fsr1h	equ	0xFE2
 18626                           fsr1l	equ	0xFE1
 18627                           indf2	equ	0xFDF
 18628                           postinc2	equ	0xFDE
 18629                           postdec2	equ	0xFDD
 18630                           plusw2	equ	0xFDB
 18631                           fsr2h	equ	0xFDA
 18632                           fsr2l	equ	0xFD9
 18633                           status	equ	0xFD8
 18634                           
 18635 ;; *************** function i2_memset *****************
 18636 ;; Defined at:
 18637 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\memset.c"
 18638 ;; Parameters:    Size  Location     Type
 18639 ;;  p1              2    0[COMRAM] PTR void 
 18640 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 18641 ;;  c               2    2[COMRAM] int 
 18642 ;;  n               2    4[COMRAM] unsigned int 
 18643 ;; Auto vars:     Size  Location     Type
 18644 ;;  memset          2    6[COMRAM] PTR unsigned char 
 18645 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 18646 ;; Return value:  Size  Location     Type
 18647 ;;                  2    0[COMRAM] PTR void 
 18648 ;; Registers used:
 18649 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18650 ;; Tracked objects:
 18651 ;;		On entry : 0/0
 18652 ;;		On exit  : 0/0
 18653 ;;		Unchanged: 0/0
 18654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18655 ;;      Params:         6       0       0       0       0       0       0       0       0
 18656 ;;      Locals:         2       0       0       0       0       0       0       0       0
 18657 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18658 ;;      Totals:         8       0       0       0       0       0       0       0       0
 18659 ;;Total ram usage:        8 bytes
 18660 ;; Hardware stack levels used:    1
 18661 ;; This function calls:
 18662 ;;		Nothing
 18663 ;; This function is called by:
 18664 ;;		_USBStdSetCfgHandler
 18665 ;;		i2_USBDeviceInit
 18666 ;; This function uses a non-reentrant model
 18667 ;;
 18668                           
 18669                           	psect	text77
 18670  0047BE                     __ptext77:
 18671                           	opt stack 0
 18672  0047BE                     i2_memset:
 18673                           	opt stack 22
 18674                           
 18675                           ;incstack = 0
 18676  0047BE  C001  F007         	movff	i2memset@p1,i2memset@p
 18677  0047C2  C002  F008         	movff	i2memset@p1+1,i2memset@p+1
 18678  0047C6  D008               	goto	i2l2789
 18679  0047C8                     i2l6847:
 18680  0047C8  C007  FFD9         	movff	i2memset@p,fsr2l
 18681  0047CC  C008  FFDA         	movff	i2memset@p+1,fsr2h
 18682  0047D0  C003  FFDF         	movff	i2memset@c,indf2
 18683  0047D4  4A07               	infsnz	i2memset@p,f,c
 18684  0047D6  2A08               	incf	i2memset@p+1,f,c
 18685  0047D8                     i2l2789:
 18686  0047D8  0605               	decf	i2memset@n,f,c
 18687  0047DA  A0D8               	btfss	status,0,c
 18688  0047DC  0606               	decf	i2memset@n+1,f,c
 18689  0047DE  2805               	incf	i2memset@n,w,c
 18690  0047E0  E1F3               	bnz	i2l6847
 18691  0047E2  2806               	incf	i2memset@n+1,w,c
 18692  0047E4  B4D8               	btfsc	status,2,c
 18693  0047E6  0012               	return	
 18694  0047E8  D7EF               	goto	i2l2790
 18695  0047EA                     __end_ofi2_memset:
 18696                           	opt stack 0
 18697                           pclatu	equ	0xFFB
 18698                           pclath	equ	0xFFA
 18699                           tblptru	equ	0xFF8
 18700                           tblptrh	equ	0xFF7
 18701                           tblptrl	equ	0xFF6
 18702                           tablat	equ	0xFF5
 18703                           prodh	equ	0xFF4
 18704                           prodl	equ	0xFF3
 18705                           intcon	equ	0xFF2
 18706                           indf0	equ	0xFEF
 18707                           postinc0	equ	0xFEE
 18708                           fsr0h	equ	0xFEA
 18709                           fsr0l	equ	0xFE9
 18710                           wreg	equ	0xFE8
 18711                           indf1	equ	0xFE7
 18712                           postdec1	equ	0xFE5
 18713                           fsr1h	equ	0xFE2
 18714                           fsr1l	equ	0xFE1
 18715                           indf2	equ	0xFDF
 18716                           postinc2	equ	0xFDE
 18717                           postdec2	equ	0xFDD
 18718                           plusw2	equ	0xFDB
 18719                           fsr2h	equ	0xFDA
 18720                           fsr2l	equ	0xFD9
 18721                           status	equ	0xFD8
 18722                           
 18723 ;; *************** function _USBStdGetStatusHandler *****************
 18724 ;; Defined at:
 18725 ;;		line 2129 in file "../../../../microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 18726 ;; Parameters:    Size  Location     Type
 18727 ;;		None
 18728 ;; Auto vars:     Size  Location     Type
 18729 ;;  p               2    1[COMRAM] PTR struct __BDT
 18730 ;;		 -> RAM(2047), NULL(0), BDT(48), 
 18731 ;; Return value:  Size  Location     Type
 18732 ;;                  1    wreg      void 
 18733 ;; Registers used:
 18734 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18735 ;; Tracked objects:
 18736 ;;		On entry : 0/0
 18737 ;;		On exit  : 0/0
 18738 ;;		Unchanged: 0/0
 18739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18740 ;;      Params:         0       0       0       0       0       0       0       0       0
 18741 ;;      Locals:         2       0       0       0       0       0       0       0       0
 18742 ;;      Temps:          1       0       0       0       0       0       0       0       0
 18743 ;;      Totals:         3       0       0       0       0       0       0       0       0
 18744 ;;Total ram usage:        3 bytes
 18745 ;; Hardware stack levels used:    1
 18746 ;; This function calls:
 18747 ;;		Nothing
 18748 ;; This function is called by:
 18749 ;;		_USBCheckStdRequest
 18750 ;; This function uses a non-reentrant model
 18751 ;;
 18752                           
 18753                           	psect	text78
 18754  003976                     __ptext78:
 18755                           	opt stack 0
 18756  003976                     _USBStdGetStatusHandler:
 18757                           	opt stack 20
 18758                           
 18759                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
 18760                           
 18761                           ;incstack = 0
 18762  003976  0E00               	movlw	0
 18763  003978  0104               	movlb	4	; () banked
 18764  00397A  6F38               	movwf	56,b	;volatile
 18765                           
 18766                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
 18767  00397C  0E00               	movlw	0
 18768  00397E  6F39               	movwf	57,b	;volatile
 18769                           
 18770                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
 18771  003980  D035               	goto	i2l505
 18772  003982                     i2l506:
 18773                           
 18774                           ; BSR set to: 4
 18775                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
 18776  003982  8E3E               	bsf	_inPipes+3,7,c	;volatile
 18777                           
 18778                           ; BSR set to: 4
 18779                           ;usb_device.c: 2145: }
 18780                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
 18781                           
 18782                           ; BSR set to: 4
 18783                           
 18784                           ; BSR set to: 4
 18785                           ;usb_device.c: 2143: {
 18786                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
 18787                           
 18788                           ;usb_device.c: 2142: if(0 == 1)
 18789  003984  0101               	movlb	1	; () banked
 18790  003986  05FD               	decf	_RemoteWakeup& (0+255),w,b	;volatile
 18791  003988  A4D8               	btfss	status,2,c
 18792  00398A  D03B               	goto	i2l509
 18793                           
 18794                           ; BSR set to: 1
 18795                           ;usb_device.c: 2148: {
 18796                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
 18797  00398C  0104               	movlb	4	; () banked
 18798  00398E  8338               	bsf	56,1,b	;volatile
 18799                           
 18800                           ; BSR set to: 4
 18801                           ;usb_device.c: 2150: }
 18802                           ;usb_device.c: 2151: break;
 18803  003990  D038               	goto	i2l509
 18804  003992                     i2l510:
 18805                           
 18806                           ; BSR set to: 4
 18807                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
 18808  003992  8E3E               	bsf	_inPipes+3,7,c	;volatile
 18809                           
 18810                           ;usb_device.c: 2154: break;
 18811  003994  D036               	goto	i2l509
 18812  003996                     i2l511:
 18813                           
 18814                           ; BSR set to: 4
 18815                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
 18816  003996  8E3E               	bsf	_inPipes+3,7,c	;volatile
 18817                           
 18818                           ;usb_device.c: 2160: {
 18819                           ;usb_device.c: 2161: BDT_ENTRY *p;
 18820                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
 18821  003998  BF34               	btfsc	52,7,b	;volatile
 18822  00399A  D00A               	goto	i2l512
 18823                           
 18824                           ; BSR set to: 4
 18825                           ;usb_device.c: 2164: {
 18826                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 18827  00399C  5134               	movf	52,w,b	;volatile
 18828  00399E  0B0F               	andlw	15
 18829  0039A0  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 18830  0039A2  5001               	movf	??_USBStdGetStatusHandler,w,c
 18831  0039A4  0D02               	mullw	2
 18832  0039A6  0E0A               	movlw	low _pBDTEntryOut
 18833  0039A8  24F3               	addwf	prodl,w,c
 18834  0039AA  6ED9               	movwf	fsr2l,c
 18835  0039AC  0E02               	movlw	high _pBDTEntryOut
 18836  0039AE  D009               	goto	L14
 18837  0039B0                     i2l512:
 18838                           
 18839                           ; BSR set to: 4
 18840                           ;usb_device.c: 2167: else
 18841                           ;usb_device.c: 2168: {
 18842                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 18843                           
 18844                           ; BSR set to: 4
 18845  0039B0  5134               	movf	52,w,b	;volatile
 18846  0039B2  0B0F               	andlw	15
 18847  0039B4  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 18848  0039B6  5001               	movf	??_USBStdGetStatusHandler,w,c
 18849  0039B8  0D02               	mullw	2
 18850  0039BA  0E41               	movlw	low _pBDTEntryIn
 18851  0039BC  24F3               	addwf	prodl,w,c
 18852  0039BE  6ED9               	movwf	fsr2l,c
 18853  0039C0  0E00               	movlw	high _pBDTEntryIn
 18854  0039C2                     L14:
 18855  0039C2  20F4               	addwfc	prodh,w,c
 18856  0039C4  6EDA               	movwf	fsr2h,c
 18857  0039C6  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 18858  0039CA  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 18859                           
 18860                           ; BSR set to: 4
 18861                           ;usb_device.c: 2170: }
 18862                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 18863                           
 18864                           ; BSR set to: 4
 18865  0039CE  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 18866  0039D2  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 18867  0039D6  AEDF               	btfss	indf2,7,c
 18868  0039D8  D014               	goto	i2l509
 18869                           
 18870                           ; BSR set to: 4
 18871  0039DA  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 18872  0039DE  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 18873  0039E2  A4DF               	btfss	indf2,2,c
 18874  0039E4  D00E               	goto	i2l509
 18875                           
 18876                           ; BSR set to: 4
 18877                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
 18878  0039E6  0E01               	movlw	1
 18879  0039E8  6F38               	movwf	56,b	;volatile
 18880                           
 18881                           ; BSR set to: 4
 18882                           ;usb_device.c: 2175: }
 18883                           ;usb_device.c: 2176: }
 18884                           
 18885                           ; BSR set to: 4
 18886                           ;usb_device.c: 2174: break;
 18887  0039EA  D00B               	goto	i2l509
 18888  0039EC                     i2l505:
 18889                           
 18890                           ; BSR set to: 4
 18891                           
 18892                           ; BSR set to: 4
 18893  0039EC  5130               	movf	48,w,b	;volatile
 18894  0039EE  0B1F               	andlw	31
 18895                           
 18896                           ; Switch size 1, requested type "space"
 18897                           ; Number of cases is 3, Range of values is 0 to 2
 18898                           ; switch strategies available:
 18899                           ; Name         Instructions Cycles
 18900                           ; simple_byte           10     6 (average)
 18901                           ;	Chosen strategy is simple_byte
 18902  0039F0  0A00               	xorlw	0	; case 0
 18903  0039F2  B4D8               	btfsc	status,2,c
 18904  0039F4  D7C6               	goto	i2l506
 18905  0039F6  0A01               	xorlw	1	; case 1
 18906  0039F8  B4D8               	btfsc	status,2,c
 18907  0039FA  D7CB               	goto	i2l510
 18908  0039FC  0A03               	xorlw	3	; case 2
 18909  0039FE  B4D8               	btfsc	status,2,c
 18910  003A00  D7CA               	goto	i2l511
 18911  003A02                     i2l509:
 18912                           
 18913                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
 18914  003A02  AE3E               	btfss	_inPipes+3,7,c	;volatile
 18915  003A04  0012               	return	
 18916                           
 18917                           ;usb_device.c: 2179: {
 18918                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 18919  003A06  0E38               	movlw	56
 18920  003A08  6E3B               	movwf	_inPipes,c	;volatile
 18921  003A0A  0E04               	movlw	4
 18922  003A0C  6E3C               	movwf	_inPipes+1,c	;volatile
 18923                           
 18924                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 18925  003A0E  803E               	bsf	_inPipes+3,0,c	;volatile
 18926                           
 18927                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
 18928  003A10  0E02               	movlw	2
 18929  003A12  6E3F               	movwf	_inPipes+4,c	;volatile
 18930  003A14  0012               	return	
 18931  003A16                     __end_of_USBStdGetStatusHandler:
 18932                           	opt stack 0
 18933                           pclatu	equ	0xFFB
 18934                           pclath	equ	0xFFA
 18935                           tblptru	equ	0xFF8
 18936                           tblptrh	equ	0xFF7
 18937                           tblptrl	equ	0xFF6
 18938                           tablat	equ	0xFF5
 18939                           prodh	equ	0xFF4
 18940                           prodl	equ	0xFF3
 18941                           intcon	equ	0xFF2
 18942                           indf0	equ	0xFEF
 18943                           postinc0	equ	0xFEE
 18944                           fsr0h	equ	0xFEA
 18945                           fsr0l	equ	0xFE9
 18946                           wreg	equ	0xFE8
 18947                           indf1	equ	0xFE7
 18948                           postdec1	equ	0xFE5
 18949                           fsr1h	equ	0xFE2
 18950                           fsr1l	equ	0xFE1
 18951                           indf2	equ	0xFDF
 18952                           postinc2	equ	0xFDE
 18953                           postdec2	equ	0xFDD
 18954                           plusw2	equ	0xFDB
 18955                           fsr2h	equ	0xFDA
 18956                           fsr2l	equ	0xFD9
 18957                           status	equ	0xFD8
 18958                           
 18959 ;; *************** function _USBStdGetDscHandler *****************
 18960 ;; Defined at:
 18961 ;;		line 2043 in file "../../../../microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 18962 ;; Parameters:    Size  Location     Type
 18963 ;;		None
 18964 ;; Auto vars:     Size  Location     Type
 18965 ;;		None
 18966 ;; Return value:  Size  Location     Type
 18967 ;;                  1    wreg      void 
 18968 ;; Registers used:
 18969 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 18970 ;; Tracked objects:
 18971 ;;		On entry : 0/0
 18972 ;;		On exit  : 0/0
 18973 ;;		Unchanged: 0/0
 18974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18975 ;;      Params:         0       0       0       0       0       0       0       0       0
 18976 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18977 ;;      Temps:          2       0       0       0       0       0       0       0       0
 18978 ;;      Totals:         2       0       0       0       0       0       0       0       0
 18979 ;;Total ram usage:        2 bytes
 18980 ;; Hardware stack levels used:    1
 18981 ;; This function calls:
 18982 ;;		Nothing
 18983 ;; This function is called by:
 18984 ;;		_USBCheckStdRequest
 18985 ;; This function uses a non-reentrant model
 18986 ;;
 18987                           
 18988                           	psect	text79
 18989  0028BC                     __ptext79:
 18990                           	opt stack 0
 18991  0028BC                     _USBStdGetDscHandler:
 18992                           	opt stack 20
 18993                           
 18994                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
 18995                           
 18996                           ;incstack = 0
 18997  0028BC  0E80               	movlw	128
 18998  0028BE  0104               	movlb	4	; () banked
 18999  0028C0  1930               	xorwf	48,w,b	;volatile
 19000  0028C2  A4D8               	btfss	status,2,c
 19001  0028C4  0012               	return	
 19002                           
 19003                           ; BSR set to: 4
 19004                           ;usb_device.c: 2046: {
 19005                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 19006  0028C6  0EC0               	movlw	192
 19007  0028C8  6E3E               	movwf	_inPipes+3,c	;volatile
 19008                           
 19009                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
 19010  0028CA  D079               	goto	i2l492
 19011  0028CC                     
 19012                           ; BSR set to: 4
 19013                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 19014                           
 19015                           ; BSR set to: 4
 19016  0028CC  0E9A               	movlw	low _device_dsc
 19017  0028CE  6E3B               	movwf	_inPipes,c	;volatile
 19018  0028D0  0E7E               	movlw	high _device_dsc
 19019  0028D2  6E3C               	movwf	_inPipes+1,c	;volatile
 19020                           
 19021                           ; BSR set to: 4
 19022                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
 19023  0028D4  0E00               	movlw	0
 19024  0028D6  6E40               	movwf	_inPipes+5,c	;volatile
 19025  0028D8  0E12               	movlw	18
 19026  0028DA  6E3F               	movwf	_inPipes+4,c	;volatile
 19027                           
 19028                           ;usb_device.c: 2058: break;
 19029  0028DC  0012               	return	
 19030  0028DE                     
 19031                           ; BSR set to: 4
 19032                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
 19033                           
 19034                           ; BSR set to: 4
 19035  0028DE  5132               	movf	50,w,b	;volatile
 19036  0028E0  A4D8               	btfss	status,2,c
 19037  0028E2  D03D               	goto	i2l496
 19038                           
 19039                           ; BSR set to: 4
 19040                           ;usb_device.c: 2064: {
 19041                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 19042  0028E4  5132               	movf	50,w,b	;volatile
 19043  0028E6  0D02               	mullw	2
 19044  0028E8  0EED               	movlw	low _USB_CD_Ptr
 19045  0028EA  24F3               	addwf	prodl,w,c
 19046  0028EC  6EF6               	movwf	tblptrl,c
 19047  0028EE  0E7D               	movlw	high _USB_CD_Ptr
 19048  0028F0  20F4               	addwfc	prodh,w,c
 19049  0028F2  6EF7               	movwf	tblptrh,c
 19050  0028F4                     	if	0	;There are less than 3 active tblptr bytes
 19051  0028F4                     	endif
 19052  0028F4  0009               	tblrd		*+
 19053  0028F6  CFF5 F03B          	movff	tablat,_inPipes	;volatile
 19054  0028FA  000A               	tblrd		*-
 19055  0028FC  CFF5 F03C          	movff	tablat,_inPipes+1	;volatile
 19056                           
 19057                           ; BSR set to: 4
 19058                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 19059  002900  0E02               	movlw	2
 19060  002902  243B               	addwf	_inPipes,w,c	;volatile
 19061  002904  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 19062  002906  0E00               	movlw	0
 19063  002908  203C               	addwfc	_inPipes+1,w,c	;volatile
 19064  00290A  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 19065  00290C  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 19066  002910  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 19067  002914  6AF8               	clrf	tblptru,c
 19068  002916  0E07               	movlw	(high __ramtop+-1)
 19069  002918  64F7               	cpfsgt	tblptrh,c
 19070  00291A  D003               	bra	i2u506_47
 19071  00291C  0008               	tblrd		*
 19072  00291E  50F5               	movf	tablat,w,c
 19073  002920  D005               	bra	i2u506_40
 19074  002922                     i2u506_47:
 19075  002922  CFF6 FFE9          	movff	tblptrl,fsr0l
 19076  002926  CFF7 FFEA          	movff	tblptrh,fsr0h
 19077  00292A  50EF               	movf	indf0,w,c
 19078  00292C                     i2u506_40:
 19079  00292C  6E3F               	movwf	_inPipes+4,c	;volatile
 19080                           
 19081                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 19082  00292E  0E03               	movlw	3
 19083  002930  243B               	addwf	_inPipes,w,c	;volatile
 19084  002932  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 19085  002934  0E00               	movlw	0
 19086  002936  203C               	addwfc	_inPipes+1,w,c	;volatile
 19087  002938  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 19088  00293A  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 19089  00293E  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 19090  002942  6AF8               	clrf	tblptru,c
 19091  002944  0E07               	movlw	(high __ramtop+-1)
 19092  002946  64F7               	cpfsgt	tblptrh,c
 19093  002948  D003               	bra	i2u507_47
 19094  00294A  0008               	tblrd		*
 19095  00294C  50F5               	movf	tablat,w,c
 19096  00294E  D005               	bra	i2u507_40
 19097  002950                     i2u507_47:
 19098  002950  CFF6 FFE9          	movff	tblptrl,fsr0l
 19099  002954  CFF7 FFEA          	movff	tblptrh,fsr0h
 19100  002958  50EF               	movf	indf0,w,c
 19101  00295A                     i2u507_40:
 19102  00295A  6E40               	movwf	_inPipes+5,c	;volatile
 19103                           
 19104                           ;usb_device.c: 2076: }
 19105  00295C  0012               	return	
 19106  00295E                     i2l496:
 19107                           
 19108                           ;usb_device.c: 2077: else
 19109                           ;usb_device.c: 2078: {
 19110                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
 19111  00295E  0E00               	movlw	0
 19112  002960  6E3E               	movwf	_inPipes+3,c	;volatile
 19113                           
 19114                           ;usb_device.c: 2080: }
 19115                           ;usb_device.c: 2081: break;
 19116  002962  0012               	return	
 19117  002964                     
 19118                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
 19119  002964  0E03               	movlw	3
 19120  002966  0104               	movlb	4	; () banked
 19121  002968  6132               	cpfslt	50,b	;volatile
 19122  00296A  D023               	goto	i2l499
 19123                           
 19124                           ; BSR set to: 4
 19125                           ;usb_device.c: 2087: {
 19126                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 19127  00296C  5132               	movf	50,w,b	;volatile
 19128  00296E  0D02               	mullw	2
 19129  002970  0EE7               	movlw	low _USB_SD_Ptr
 19130  002972  24F3               	addwf	prodl,w,c
 19131  002974  6EF6               	movwf	tblptrl,c
 19132  002976  0E7D               	movlw	high _USB_SD_Ptr
 19133  002978  20F4               	addwfc	prodh,w,c
 19134  00297A  6EF7               	movwf	tblptrh,c
 19135  00297C                     	if	0	;There are less than 3 active tblptr bytes
 19136  00297C                     	endif
 19137  00297C  0009               	tblrd		*+
 19138  00297E  CFF5 F03B          	movff	tablat,_inPipes	;volatile
 19139  002982  000A               	tblrd		*-
 19140  002984  CFF5 F03C          	movff	tablat,_inPipes+1	;volatile
 19141                           
 19142                           ; BSR set to: 4
 19143                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 19144  002988  C03B  FFF6         	movff	_inPipes,tblptrl	;volatile
 19145  00298C  C03C  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 19146  002990  6AF8               	clrf	tblptru,c
 19147  002992  0E07               	movlw	(high __ramtop+-1)
 19148  002994  64F7               	cpfsgt	tblptrh,c
 19149  002996  D003               	bra	i2u509_47
 19150  002998  0008               	tblrd		*
 19151  00299A  50F5               	movf	tablat,w,c
 19152  00299C  D005               	bra	i2u509_40
 19153  00299E                     i2u509_47:
 19154  00299E  CFF6 FFE9          	movff	tblptrl,fsr0l
 19155  0029A2  CFF7 FFEA          	movff	tblptrh,fsr0h
 19156  0029A6  50EF               	movf	indf0,w,c
 19157  0029A8                     i2u509_40:
 19158  0029A8  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 19159  0029AA  5001               	movf	??_USBStdGetDscHandler,w,c
 19160  0029AC  6E3F               	movwf	_inPipes+4,c	;volatile
 19161  0029AE  6A40               	clrf	_inPipes+5,c	;volatile
 19162                           
 19163                           ;usb_device.c: 2092: }
 19164  0029B0  0012               	return	
 19165  0029B2                     i2l499:
 19166                           
 19167                           ;usb_device.c: 2102: else
 19168                           ;usb_device.c: 2103: {
 19169                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
 19170  0029B2  0E00               	movlw	0
 19171  0029B4  6E3E               	movwf	_inPipes+3,c	;volatile
 19172                           
 19173                           ;usb_device.c: 2105: }
 19174                           ;usb_device.c: 2106: break;
 19175  0029B6  0012               	return	
 19176  0029B8                     
 19177                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
 19178  0029B8  0E00               	movlw	0
 19179  0029BA  6E3E               	movwf	_inPipes+3,c	;volatile
 19180                           
 19181                           ;usb_device.c: 2110: }
 19182                           
 19183                           ;usb_device.c: 2109: break;
 19184  0029BC  0012               	return	
 19185  0029BE                     i2l492:
 19186  0029BE  0104               	movlb	4	; () banked
 19187  0029C0  5133               	movf	51,w,b	;volatile
 19188                           
 19189                           ; Switch size 1, requested type "space"
 19190                           ; Number of cases is 3, Range of values is 1 to 3
 19191                           ; switch strategies available:
 19192                           ; Name         Instructions Cycles
 19193                           ; simple_byte           10     6 (average)
 19194                           ;	Chosen strategy is simple_byte
 19195  0029C2  0A01               	xorlw	1	; case 1
 19196  0029C4  B4D8               	btfsc	status,2,c
 19197  0029C6  D782               	goto	i2l493
 19198  0029C8  0A03               	xorlw	3	; case 2
 19199  0029CA  B4D8               	btfsc	status,2,c
 19200  0029CC  D788               	goto	i2l495
 19201  0029CE  0A01               	xorlw	1	; case 3
 19202  0029D0  B4D8               	btfsc	status,2,c
 19203  0029D2  D7C8               	goto	i2l498
 19204  0029D4  D7F1               	goto	i2l501
 19205  0029D6                     __end_of_USBStdGetDscHandler:
 19206                           	opt stack 0
 19207                           pclatu	equ	0xFFB
 19208                           pclath	equ	0xFFA
 19209                           tblptru	equ	0xFF8
 19210                           tblptrh	equ	0xFF7
 19211                           tblptrl	equ	0xFF6
 19212                           tablat	equ	0xFF5
 19213                           prodh	equ	0xFF4
 19214                           prodl	equ	0xFF3
 19215                           intcon	equ	0xFF2
 19216                           indf0	equ	0xFEF
 19217                           postinc0	equ	0xFEE
 19218                           fsr0h	equ	0xFEA
 19219                           fsr0l	equ	0xFE9
 19220                           wreg	equ	0xFE8
 19221                           indf1	equ	0xFE7
 19222                           postdec1	equ	0xFE5
 19223                           fsr1h	equ	0xFE2
 19224                           fsr1l	equ	0xFE1
 19225                           indf2	equ	0xFDF
 19226                           postinc2	equ	0xFDE
 19227                           postdec2	equ	0xFDD
 19228                           plusw2	equ	0xFDB
 19229                           fsr2h	equ	0xFDA
 19230                           fsr2l	equ	0xFD9
 19231                           status	equ	0xFD8
 19232                           
 19233 ;; *************** function _USBStdFeatureReqHandler *****************
 19234 ;; Defined at:
 19235 ;;		line 2754 in file "../../../../microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 19236 ;; Parameters:    Size  Location     Type
 19237 ;;		None
 19238 ;; Auto vars:     Size  Location     Type
 19239 ;;  p               2   24[COMRAM] PTR struct __BDT
 19240 ;;		 -> RAM(2047), NULL(0), BDT(48), 
 19241 ;;  pUEP            2   21[COMRAM] PTR unsigned char 
 19242 ;;		 -> UEP0(1), 
 19243 ;;  current_ep_d    1   23[COMRAM] struct .
 19244 ;; Return value:  Size  Location     Type
 19245 ;;                  1    wreg      void 
 19246 ;; Registers used:
 19247 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19248 ;; Tracked objects:
 19249 ;;		On entry : 0/0
 19250 ;;		On exit  : 0/0
 19251 ;;		Unchanged: 0/0
 19252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19253 ;;      Params:         0       0       0       0       0       0       0       0       0
 19254 ;;      Locals:         5       0       0       0       0       0       0       0       0
 19255 ;;      Temps:          1       0       0       0       0       0       0       0       0
 19256 ;;      Totals:         6       0       0       0       0       0       0       0       0
 19257 ;;Total ram usage:        6 bytes
 19258 ;; Hardware stack levels used:    1
 19259 ;; Hardware stack levels required when called:    4
 19260 ;; This function calls:
 19261 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 19262 ;; This function is called by:
 19263 ;;		_USBCheckStdRequest
 19264 ;; This function uses a non-reentrant model
 19265 ;;
 19266                           
 19267                           	psect	text80
 19268  00101A                     __ptext80:
 19269                           	opt stack 0
 19270  00101A                     _USBStdFeatureReqHandler:
 19271                           	opt stack 16
 19272                           
 19273                           ;usb_device.c: 2756: BDT_ENTRY *p;
 19274                           ;usb_device.c: 2757: EP_STATUS current_ep_data;
 19275                           ;usb_device.c: 2761: unsigned char* pUEP;
 19276                           ;usb_device.c: 2799: if((SetupPkt.bFeature == 1)&&
 19277                           ;usb_device.c: 2800: (SetupPkt.Recipient == (0x00)))
 19278                           
 19279                           ;incstack = 0
 19280  00101A  0104               	movlb	4	; () banked
 19281  00101C  0532               	decf	50,w,b	;volatile
 19282  00101E  A4D8               	btfss	status,2,c
 19283  001020  D00F               	goto	i2l585
 19284                           
 19285                           ; BSR set to: 4
 19286  001022  5130               	movf	48,w,b	;volatile
 19287  001024  0B1F               	andlw	31
 19288  001026  0900               	iorlw	0
 19289  001028  A4D8               	btfss	status,2,c
 19290  00102A  D00A               	goto	i2l585
 19291                           
 19292                           ; BSR set to: 4
 19293                           ;usb_device.c: 2801: {
 19294                           ;usb_device.c: 2802: inPipes[0].info.bits.busy = 1;
 19295  00102C  8E3E               	bsf	_inPipes+3,7,c	;volatile
 19296                           
 19297                           ; BSR set to: 4
 19298                           ;usb_device.c: 2803: if(SetupPkt.bRequest == 3)
 19299  00102E  0E03               	movlw	3
 19300  001030  1931               	xorwf	49,w,b	;volatile
 19301  001032  A4D8               	btfss	status,2,c
 19302  001034  D002               	goto	i2l584
 19303                           
 19304                           ; BSR set to: 4
 19305                           ;usb_device.c: 2804: RemoteWakeup = 1;
 19306  001036  0E01               	movlw	1
 19307  001038  D001               	goto	L15
 19308  00103A                     i2l584:
 19309                           
 19310                           ;usb_device.c: 2805: else
 19311                           ;usb_device.c: 2806: RemoteWakeup = 0;
 19312                           
 19313                           ; BSR set to: 1
 19314  00103A  0E00               	movlw	0
 19315  00103C                     L15:
 19316  00103C  0101               	movlb	1	; () banked
 19317  00103E  6FFD               	movwf	_RemoteWakeup& (0+255),b	;volatile
 19318  001040                     i2l585:
 19319                           
 19320                           ;usb_device.c: 2807: }
 19321                           ;usb_device.c: 2810: if((SetupPkt.bFeature == 0)&&
 19322                           ;usb_device.c: 2811: (SetupPkt.Recipient == (0x02))&&
 19323                           ;usb_device.c: 2812: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 19324                           ;usb_device.c: 2813: (USBDeviceState == CONFIGURED_STATE))
 19325                           
 19326                           ; BSR set to: 1
 19327  001040  0104               	movlb	4	; () banked
 19328  001042  5132               	movf	50,w,b	;volatile
 19329  001044  A4D8               	btfss	status,2,c
 19330  001046  0012               	return	
 19331                           
 19332                           ; BSR set to: 4
 19333  001048  5130               	movf	48,w,b	;volatile
 19334  00104A  0B1F               	andlw	31
 19335  00104C  0A02               	xorlw	2
 19336  00104E  A4D8               	btfss	status,2,c
 19337  001050  0012               	return	
 19338                           
 19339                           ; BSR set to: 4
 19340  001052  5134               	movf	52,w,b	;volatile
 19341  001054  0B0F               	andlw	15
 19342  001056  0900               	iorlw	0
 19343  001058  B4D8               	btfsc	status,2,c
 19344  00105A  0012               	return	
 19345                           
 19346                           ; BSR set to: 4
 19347  00105C  5134               	movf	52,w,b	;volatile
 19348  00105E  0B0F               	andlw	15
 19349  001060  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19350  001062  0E03               	movlw	3
 19351  001064  6015               	cpfslt	??_USBStdFeatureReqHandler,c
 19352  001066  0012               	return	
 19353                           
 19354                           ; BSR set to: 4
 19355  001068  0E20               	movlw	32
 19356  00106A  1858               	xorwf	_USBDeviceState,w,c	;volatile
 19357  00106C  A4D8               	btfss	status,2,c
 19358  00106E  0012               	return	
 19359                           
 19360                           ; BSR set to: 4
 19361                           ;usb_device.c: 2814: {
 19362                           ;usb_device.c: 2817: inPipes[0].info.bits.busy = 1;
 19363  001070  8E3E               	bsf	_inPipes+3,7,c	;volatile
 19364                           
 19365                           ;usb_device.c: 2820: if(SetupPkt.EPDir == 0)
 19366  001072  BF34               	btfsc	52,7,b	;volatile
 19367  001074  D019               	goto	i2l587
 19368                           
 19369                           ; BSR set to: 4
 19370                           ;usb_device.c: 2821: {
 19371                           ;usb_device.c: 2822: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 19372  001076  5134               	movf	52,w,b	;volatile
 19373  001078  0B0F               	andlw	15
 19374  00107A  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19375  00107C  5015               	movf	??_USBStdFeatureReqHandler,w,c
 19376  00107E  0D02               	mullw	2
 19377  001080  0E0A               	movlw	low _pBDTEntryOut
 19378  001082  24F3               	addwf	prodl,w,c
 19379  001084  6ED9               	movwf	fsr2l,c
 19380  001086  0E02               	movlw	high _pBDTEntryOut
 19381  001088  20F4               	addwfc	prodh,w,c
 19382  00108A  6EDA               	movwf	fsr2h,c
 19383  00108C  CFDE F019          	movff	postinc2,USBStdFeatureReqHandler@p
 19384  001090  CFDD F01A          	movff	postdec2,USBStdFeatureReqHandler@p+1
 19385                           
 19386                           ;usb_device.c: 2823: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 19387  001094  5134               	movf	52,w,b	;volatile
 19388  001096  0B0F               	andlw	15
 19389  001098  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19390  00109A  5015               	movf	??_USBStdFeatureReqHandler,w,c
 19391  00109C  0D01               	mullw	1
 19392  00109E  0E3E               	movlw	low _ep_data_out
 19393  0010A0  24F3               	addwf	prodl,w,c
 19394  0010A2  6ED9               	movwf	fsr2l,c
 19395  0010A4  0E02               	movlw	high _ep_data_out
 19396  0010A6  D018               	goto	L16
 19397  0010A8                     i2l587:
 19398                           
 19399                           ; BSR set to: 4
 19400                           ;usb_device.c: 2825: else
 19401                           ;usb_device.c: 2826: {
 19402                           ;usb_device.c: 2827: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 19403                           
 19404                           ; BSR set to: 4
 19405  0010A8  5134               	movf	52,w,b	;volatile
 19406  0010AA  0B0F               	andlw	15
 19407  0010AC  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19408  0010AE  5015               	movf	??_USBStdFeatureReqHandler,w,c
 19409  0010B0  0D02               	mullw	2
 19410  0010B2  0E41               	movlw	low _pBDTEntryIn
 19411  0010B4  24F3               	addwf	prodl,w,c
 19412  0010B6  6ED9               	movwf	fsr2l,c
 19413  0010B8  0E00               	movlw	high _pBDTEntryIn
 19414  0010BA  20F4               	addwfc	prodh,w,c
 19415  0010BC  6EDA               	movwf	fsr2h,c
 19416  0010BE  CFDE F019          	movff	postinc2,USBStdFeatureReqHandler@p
 19417  0010C2  CFDD F01A          	movff	postdec2,USBStdFeatureReqHandler@p+1
 19418                           
 19419                           ;usb_device.c: 2828: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 19420  0010C6  5134               	movf	52,w,b	;volatile
 19421  0010C8  0B0F               	andlw	15
 19422  0010CA  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19423  0010CC  5015               	movf	??_USBStdFeatureReqHandler,w,c
 19424  0010CE  0D01               	mullw	1
 19425  0010D0  0E41               	movlw	low _ep_data_in
 19426  0010D2  24F3               	addwf	prodl,w,c
 19427  0010D4  6ED9               	movwf	fsr2l,c
 19428  0010D6  0E02               	movlw	high _ep_data_in
 19429  0010D8                     L16:
 19430  0010D8  20F4               	addwfc	prodh,w,c
 19431  0010DA  6EDA               	movwf	fsr2h,c
 19432  0010DC  50DF               	movf	indf2,w,c
 19433  0010DE  6E18               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 19434                           
 19435                           ; BSR set to: 4
 19436                           ;usb_device.c: 2829: }
 19437                           ;usb_device.c: 2835: if(current_ep_data.bits.ping_pong_state == 0)
 19438                           
 19439                           ; BSR set to: 4
 19440  0010E0  B018               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 19441  0010E2  D006               	goto	i2l589
 19442                           
 19443                           ; BSR set to: 4
 19444                           ;usb_device.c: 2836: {
 19445                           ;usb_device.c: 2837: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 19446  0010E4  0EFB               	movlw	251
 19447  0010E6  1419               	andwf	USBStdFeatureReqHandler@p,w,c
 19448  0010E8  6E19               	movwf	USBStdFeatureReqHandler@p,c
 19449  0010EA  0EFF               	movlw	255
 19450  0010EC  141A               	andwf	USBStdFeatureReqHandler@p+1,w,c
 19451  0010EE  D004               	goto	L17
 19452  0010F0                     i2l589:
 19453                           
 19454                           ; BSR set to: 4
 19455                           ;usb_device.c: 2839: else
 19456                           ;usb_device.c: 2840: {
 19457                           ;usb_device.c: 2841: p = (BDT_ENTRY*)(((uintptr_t)p) | 0x0004);
 19458                           
 19459                           ; BSR set to: 4
 19460  0010F0  0E04               	movlw	4
 19461  0010F2  1019               	iorwf	USBStdFeatureReqHandler@p,w,c
 19462  0010F4  6E19               	movwf	USBStdFeatureReqHandler@p,c
 19463  0010F6  501A               	movf	USBStdFeatureReqHandler@p+1,w,c
 19464  0010F8                     L17:
 19465  0010F8  6E1A               	movwf	USBStdFeatureReqHandler@p+1,c
 19466                           
 19467                           ; BSR set to: 4
 19468                           ;usb_device.c: 2842: }
 19469                           ;usb_device.c: 2847: if(SetupPkt.EPDir == 0)
 19470                           
 19471                           ; BSR set to: 4
 19472  0010FA  BF34               	btfsc	52,7,b	;volatile
 19473  0010FC  D00A               	goto	i2l591
 19474                           
 19475                           ; BSR set to: 4
 19476                           ;usb_device.c: 2848: {
 19477                           ;usb_device.c: 2849: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 19478  0010FE  5134               	movf	52,w,b	;volatile
 19479  001100  0B0F               	andlw	15
 19480  001102  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19481  001104  5015               	movf	??_USBStdFeatureReqHandler,w,c
 19482  001106  0D02               	mullw	2
 19483  001108  0E0A               	movlw	low _pBDTEntryOut
 19484  00110A  24F3               	addwf	prodl,w,c
 19485  00110C  6ED9               	movwf	fsr2l,c
 19486  00110E  0E02               	movlw	high _pBDTEntryOut
 19487  001110  D009               	goto	L18
 19488  001112                     i2l591:
 19489                           
 19490                           ; BSR set to: 4
 19491                           ;usb_device.c: 2851: else
 19492                           ;usb_device.c: 2852: {
 19493                           ;usb_device.c: 2853: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 19494                           
 19495                           ; BSR set to: 4
 19496  001112  5134               	movf	52,w,b	;volatile
 19497  001114  0B0F               	andlw	15
 19498  001116  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19499  001118  5015               	movf	??_USBStdFeatureReqHandler,w,c
 19500  00111A  0D02               	mullw	2
 19501  00111C  0E41               	movlw	low _pBDTEntryIn
 19502  00111E  24F3               	addwf	prodl,w,c
 19503  001120  6ED9               	movwf	fsr2l,c
 19504  001122  0E00               	movlw	high _pBDTEntryIn
 19505  001124                     L18:
 19506  001124  20F4               	addwfc	prodh,w,c
 19507  001126  6EDA               	movwf	fsr2h,c
 19508  001128  C019  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 19509  00112C  C01A  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 19510                           
 19511                           ; BSR set to: 4
 19512                           ;usb_device.c: 2854: }
 19513                           ;usb_device.c: 2857: if(SetupPkt.bRequest == 3)
 19514                           
 19515                           ; BSR set to: 4
 19516  001130  0E03               	movlw	3
 19517  001132  1931               	xorwf	49,w,b	;volatile
 19518  001134  A4D8               	btfss	status,2,c
 19519  001136  D02D               	goto	i2l593
 19520                           
 19521                           ; BSR set to: 4
 19522                           ;usb_device.c: 2858: {
 19523                           ;usb_device.c: 2859: if(p->STAT.UOWN == 1)
 19524  001138  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 19525  00113C  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 19526  001140  AEDF               	btfss	indf2,7,c
 19527  001142  D01A               	goto	i2l596
 19528                           
 19529                           ; BSR set to: 4
 19530                           ;usb_device.c: 2860: {
 19531                           ;usb_device.c: 2863: if(SetupPkt.EPDir == 0)
 19532  001144  BF34               	btfsc	52,7,b	;volatile
 19533  001146  D00A               	goto	i2l595
 19534                           
 19535                           ; BSR set to: 4
 19536                           ;usb_device.c: 2864: {
 19537                           ;usb_device.c: 2865: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 19538  001148  5134               	movf	52,w,b	;volatile
 19539  00114A  0B0F               	andlw	15
 19540  00114C  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19541  00114E  5015               	movf	??_USBStdFeatureReqHandler,w,c
 19542  001150  0D01               	mullw	1
 19543  001152  0E3E               	movlw	low _ep_data_out
 19544  001154  24F3               	addwf	prodl,w,c
 19545  001156  6ED9               	movwf	fsr2l,c
 19546  001158  0E02               	movlw	high _ep_data_out
 19547  00115A  D00A               	goto	L19
 19548  00115C                     i2l595:
 19549                           
 19550                           ;usb_device.c: 2867: else
 19551                           ;usb_device.c: 2868: {
 19552                           ;usb_device.c: 2869: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 19553                           
 19554                           ; BSR set to: 2
 19555  00115C  0104               	movlb	4	; () banked
 19556  00115E  5134               	movf	52,w,b	;volatile
 19557  001160  0B0F               	andlw	15
 19558  001162  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19559  001164  5015               	movf	??_USBStdFeatureReqHandler,w,c
 19560  001166  0D01               	mullw	1
 19561  001168  0E41               	movlw	low _ep_data_in
 19562  00116A  24F3               	addwf	prodl,w,c
 19563  00116C  6ED9               	movwf	fsr2l,c
 19564  00116E  0E02               	movlw	high _ep_data_in
 19565  001170                     L19:
 19566  001170  20F4               	addwfc	prodh,w,c
 19567  001172  6EDA               	movwf	fsr2h,c
 19568  001174  0102               	movlb	2	; () banked
 19569  001176  82DF               	bsf	indf2,1,c
 19570  001178                     i2l596:
 19571                           
 19572                           ;usb_device.c: 2870: }
 19573                           ;usb_device.c: 2871: }
 19574                           ;usb_device.c: 2874: p->STAT.Val |= 0x04;
 19575                           
 19576                           ; BSR set to: 2
 19577                           
 19578                           ; BSR set to: 2
 19579  001178  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 19580  00117C  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 19581  001180  0E00               	movlw	0
 19582  001182  84DB               	bsf	plusw2,2,c
 19583                           
 19584                           ;usb_device.c: 2875: p->STAT.Val |= 0x80;
 19585  001184  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 19586  001188  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 19587  00118C  0E00               	movlw	0
 19588  00118E  8EDB               	bsf	plusw2,7,c
 19589                           
 19590                           ;usb_device.c: 2876: }
 19591  001190  0012               	return	
 19592  001192                     i2l593:
 19593                           
 19594                           ;usb_device.c: 2877: else
 19595                           ;usb_device.c: 2878: {
 19596                           ;usb_device.c: 2882: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 19597  001192  0E04               	movlw	4
 19598  001194  1819               	xorwf	USBStdFeatureReqHandler@p,w,c
 19599  001196  6E19               	movwf	USBStdFeatureReqHandler@p,c
 19600  001198  501A               	movf	USBStdFeatureReqHandler@p+1,w,c
 19601  00119A  6E1A               	movwf	USBStdFeatureReqHandler@p+1,c
 19602                           
 19603                           ;usb_device.c: 2884: if(p->STAT.UOWN == 1)
 19604  00119C  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 19605  0011A0  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 19606  0011A4  AEDF               	btfss	indf2,7,c
 19607  0011A6  D01B               	goto	i2l598
 19608                           
 19609                           ;usb_device.c: 2885: {
 19610                           ;usb_device.c: 2888: p->STAT.Val &= (~0x80);
 19611  0011A8  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 19612  0011AC  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 19613  0011B0  0E7F               	movlw	127
 19614  0011B2  16DF               	andwf	indf2,f,c
 19615                           
 19616                           ;usb_device.c: 2889: p->STAT.Val |= 0x40;
 19617  0011B4  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 19618  0011B8  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 19619  0011BC  0E00               	movlw	0
 19620  0011BE  8CDB               	bsf	plusw2,6,c
 19621                           
 19622                           ;usb_device.c: 2890: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 19623  0011C0  0E00               	movlw	0
 19624  0011C2  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 19625  0011C4  0E05               	movlw	5
 19626  0011C6  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 19627  0011C8  C019  F00F         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 19628  0011CC  C01A  F010         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 19629  0011D0  0E00               	movlw	0
 19630  0011D2  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 19631  0011D4  0E02               	movlw	2
 19632  0011D6  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 19633  0011D8  ECA2  F021         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 19634                           
 19635                           ;usb_device.c: 2891: }
 19636  0011DC  D006               	goto	i2l599
 19637  0011DE                     i2l598:
 19638                           
 19639                           ;usb_device.c: 2892: else
 19640                           ;usb_device.c: 2893: {
 19641                           ;usb_device.c: 2895: p->STAT.Val |= 0x40;
 19642  0011DE  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 19643  0011E2  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 19644  0011E6  0E00               	movlw	0
 19645  0011E8  8CDB               	bsf	plusw2,6,c
 19646  0011EA                     i2l599:
 19647                           
 19648                           ;usb_device.c: 2896: }
 19649                           ;usb_device.c: 2900: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 19650  0011EA  0E04               	movlw	4
 19651  0011EC  1819               	xorwf	USBStdFeatureReqHandler@p,w,c
 19652  0011EE  6E19               	movwf	USBStdFeatureReqHandler@p,c
 19653  0011F0  501A               	movf	USBStdFeatureReqHandler@p+1,w,c
 19654  0011F2  6E1A               	movwf	USBStdFeatureReqHandler@p+1,c
 19655                           
 19656                           ;usb_device.c: 2906: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 19657  0011F4  B218               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 19658  0011F6  D006               	goto	i2u531_40
 19659  0011F8  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 19660  0011FC  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 19661  001200  AEDF               	btfss	indf2,7,c
 19662  001202  D030               	goto	i2l600
 19663  001204                     i2u531_40:
 19664                           
 19665                           ;usb_device.c: 2907: {
 19666                           ;usb_device.c: 2908: if(SetupPkt.EPDir == 0)
 19667  001204  0104               	movlb	4	; () banked
 19668  001206  BF34               	btfsc	52,7,b	;volatile
 19669  001208  D00A               	goto	i2l603
 19670                           
 19671                           ; BSR set to: 4
 19672                           ;usb_device.c: 2909: {
 19673                           ;usb_device.c: 2910: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 19674  00120A  5134               	movf	52,w,b	;volatile
 19675  00120C  0B0F               	andlw	15
 19676  00120E  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19677  001210  5015               	movf	??_USBStdFeatureReqHandler,w,c
 19678  001212  0D01               	mullw	1
 19679  001214  0E3E               	movlw	low _ep_data_out
 19680  001216  24F3               	addwf	prodl,w,c
 19681  001218  6ED9               	movwf	fsr2l,c
 19682  00121A  0E02               	movlw	high _ep_data_out
 19683  00121C  D00A               	goto	L20
 19684  00121E                     i2l603:
 19685                           
 19686                           ;usb_device.c: 2912: else
 19687                           ;usb_device.c: 2913: {
 19688                           ;usb_device.c: 2914: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 19689                           
 19690                           ; BSR set to: 2
 19691  00121E  0104               	movlb	4	; () banked
 19692  001220  5134               	movf	52,w,b	;volatile
 19693  001222  0B0F               	andlw	15
 19694  001224  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19695  001226  5015               	movf	??_USBStdFeatureReqHandler,w,c
 19696  001228  0D01               	mullw	1
 19697  00122A  0E41               	movlw	low _ep_data_in
 19698  00122C  24F3               	addwf	prodl,w,c
 19699  00122E  6ED9               	movwf	fsr2l,c
 19700  001230  0E02               	movlw	high _ep_data_in
 19701  001232                     L20:
 19702  001232  20F4               	addwfc	prodh,w,c
 19703  001234  6EDA               	movwf	fsr2h,c
 19704  001236  0102               	movlb	2	; () banked
 19705  001238  92DF               	bcf	indf2,1,c
 19706                           
 19707                           ; BSR set to: 2
 19708                           ;usb_device.c: 2915: }
 19709                           ;usb_device.c: 2917: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 19710                           
 19711                           ; BSR set to: 2
 19712  00123A  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 19713  00123E  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 19714  001242  0E3B               	movlw	59
 19715  001244  16DF               	andwf	indf2,f,c
 19716                           
 19717                           ; BSR set to: 2
 19718                           ;usb_device.c: 2920: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 19719  001246  0E00               	movlw	0
 19720  001248  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 19721  00124A  0E05               	movlw	5
 19722  00124C  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 19723  00124E  C019  F00F         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 19724  001252  C01A  F010         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 19725  001256  0E00               	movlw	0
 19726  001258  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 19727  00125A  0E02               	movlw	2
 19728  00125C  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 19729  00125E  ECA2  F021         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 19730                           
 19731                           ;usb_device.c: 2921: }
 19732  001262  D006               	goto	i2l605
 19733  001264                     i2l600:
 19734                           
 19735                           ;usb_device.c: 2922: else
 19736                           ;usb_device.c: 2923: {
 19737                           ;usb_device.c: 2925: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 19738  001264  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 19739  001268  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 19740  00126C  0E3B               	movlw	59
 19741  00126E  16DF               	andwf	indf2,f,c
 19742  001270                     i2l605:
 19743                           
 19744                           ;usb_device.c: 2926: }
 19745                           ;usb_device.c: 2973: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 19746  001270  0104               	movlb	4	; () banked
 19747  001272  5134               	movf	52,w,b	;volatile
 19748  001274  0B0F               	andlw	15
 19749  001276  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19750  001278  5015               	movf	??_USBStdFeatureReqHandler,w,c
 19751  00127A  0D01               	mullw	1
 19752  00127C  0E70               	movlw	112
 19753  00127E  24F3               	addwf	prodl,w,c
 19754  001280  6E16               	movwf	USBStdFeatureReqHandler@pUEP,c
 19755  001282  0E0F               	movlw	15
 19756  001284  20F4               	addwfc	prodh,w,c
 19757  001286  6E17               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 19758                           
 19759                           ; BSR set to: 4
 19760                           ;usb_device.c: 2977: *pUEP &= ~0x0001;
 19761  001288  C016  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 19762  00128C  C017  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 19763  001290  0EFE               	movlw	254
 19764  001292  16DF               	andwf	indf2,f,c
 19765                           
 19766                           ; BSR set to: 4
 19767  001294  0012               	return	
 19768  001296                     __end_of_USBStdFeatureReqHandler:
 19769                           	opt stack 0
 19770                           pclatu	equ	0xFFB
 19771                           pclath	equ	0xFFA
 19772                           tblptru	equ	0xFF8
 19773                           tblptrh	equ	0xFF7
 19774                           tblptrl	equ	0xFF6
 19775                           tablat	equ	0xFF5
 19776                           prodh	equ	0xFF4
 19777                           prodl	equ	0xFF3
 19778                           intcon	equ	0xFF2
 19779                           indf0	equ	0xFEF
 19780                           postinc0	equ	0xFEE
 19781                           fsr0h	equ	0xFEA
 19782                           fsr0l	equ	0xFE9
 19783                           wreg	equ	0xFE8
 19784                           indf1	equ	0xFE7
 19785                           postdec1	equ	0xFE5
 19786                           fsr1h	equ	0xFE2
 19787                           fsr1l	equ	0xFE1
 19788                           indf2	equ	0xFDF
 19789                           postinc2	equ	0xFDE
 19790                           postdec2	equ	0xFDD
 19791                           plusw2	equ	0xFDB
 19792                           fsr2h	equ	0xFDA
 19793                           fsr2l	equ	0xFD9
 19794                           status	equ	0xFD8
 19795                           
 19796 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 19797 ;; Defined at:
 19798 ;;		line 29 in file "usb/usb_events.c"
 19799 ;; Parameters:    Size  Location     Type
 19800 ;;  event           2   12[COMRAM] enum E4179
 19801 ;;  pdata           2   14[COMRAM] PTR void 
 19802 ;;		 -> RAM(2047), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 19803 ;;		 -> BDT(48), 
 19804 ;;  size            2   16[COMRAM] unsigned int 
 19805 ;; Auto vars:     Size  Location     Type
 19806 ;;		None
 19807 ;; Return value:  Size  Location     Type
 19808 ;;                  1    wreg      unsigned char 
 19809 ;; Registers used:
 19810 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19811 ;; Tracked objects:
 19812 ;;		On entry : 0/0
 19813 ;;		On exit  : 0/0
 19814 ;;		Unchanged: 0/0
 19815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19816 ;;      Params:         6       0       0       0       0       0       0       0       0
 19817 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19818 ;;      Temps:          2       0       0       0       0       0       0       0       0
 19819 ;;      Totals:         8       0       0       0       0       0       0       0       0
 19820 ;;Total ram usage:        8 bytes
 19821 ;; Hardware stack levels used:    1
 19822 ;; Hardware stack levels required when called:    3
 19823 ;; This function calls:
 19824 ;;		_CDCInitEP
 19825 ;;		_USBCheckCDCRequest
 19826 ;; This function is called by:
 19827 ;;		_USBDeviceTasks
 19828 ;;		_USBStdSetCfgHandler
 19829 ;;		_USBSuspend
 19830 ;;		_USBWakeFromSuspend
 19831 ;;		_USBCtrlTrfSetupHandler
 19832 ;;		_USBCheckStdRequest
 19833 ;;		_USBStdFeatureReqHandler
 19834 ;; This function uses a non-reentrant model
 19835 ;;
 19836                           
 19837                           	psect	text81
 19838  004344                     __ptext81:
 19839                           	opt stack 0
 19840  004344                     _USER_USB_CALLBACK_EVENT_HANDLER:
 19841                           	opt stack 20
 19842                           
 19843                           ;usb_events.c: 31: switch( (int) event )
 19844                           
 19845                           ;incstack = 0
 19846  004344  D006               	goto	i2l204
 19847  004346                     
 19848                           ;usb_events.c: 56: CDCInitEP();
 19849  004346  ECDF  F020         	call	_CDCInitEP	;wreg free
 19850                           
 19851                           ;usb_events.c: 60: break;
 19852                           
 19853                           ;usb_events.c: 59: case EVENT_SET_DESCRIPTOR:
 19854                           
 19855                           ;usb_events.c: 57: break;
 19856  00434A  0012               	return	
 19857  00434C                     
 19858                           ;usb_events.c: 65: USBCheckCDCRequest();
 19859  00434C  EC19  F01C         	call	_USBCheckCDCRequest	;wreg free
 19860                           
 19861                           ;usb_events.c: 76: }
 19862                           
 19863                           ;usb_events.c: 75: break;
 19864                           
 19865                           ;usb_events.c: 74: default:
 19866                           
 19867                           ;usb_events.c: 72: break;
 19868                           
 19869                           ;usb_events.c: 71: case EVENT_TRANSFER_TERMINATED:
 19870                           
 19871                           ;usb_events.c: 69: break;
 19872                           
 19873                           ;usb_events.c: 68: case EVENT_BUS_ERROR:
 19874                           
 19875                           ;usb_events.c: 66: break;
 19876  004350  0012               	return	
 19877  004352                     i2l204:
 19878  004352  C00D  F013         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 19879  004356  C00E  F014         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 19880                           
 19881                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 19882                           ; Switch size 1, requested type "space"
 19883                           ; Number of cases is 2, Range of values is 0 to 127
 19884                           ; switch strategies available:
 19885                           ; Name         Instructions Cycles
 19886                           ; simple_byte            7     4 (average)
 19887                           ;	Chosen strategy is simple_byte
 19888  00435A  5014               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 19889  00435C  0A00               	xorlw	0	; case 0
 19890  00435E  B4D8               	btfsc	status,2,c
 19891  004360  D004               	goto	i2l10219
 19892  004362  0A7F               	xorlw	127	; case 127
 19893  004364  A4D8               	btfss	status,2,c
 19894  004366  0012               	return	
 19895  004368  D018               	goto	i2l10221
 19896  00436A                     i2l10219:
 19897                           
 19898                           ; Switch size 1, requested type "space"
 19899                           ; Number of cases is 8, Range of values is 1 to 117
 19900                           ; switch strategies available:
 19901                           ; Name         Instructions Cycles
 19902                           ; simple_byte           25    13 (average)
 19903                           ;	Chosen strategy is simple_byte
 19904  00436A  5013               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 19905  00436C  0A01               	xorlw	1	; case 1
 19906  00436E  B4D8               	btfsc	status,2,c
 19907  004370  D7EA               	goto	i2l210
 19908  004372  0A03               	xorlw	3	; case 2
 19909  004374  B4D8               	btfsc	status,2,c
 19910  004376  0012               	return	
 19911  004378  0A01               	xorlw	1	; case 3
 19912  00437A  B4D8               	btfsc	status,2,c
 19913  00437C  D7E7               	goto	i2l212
 19914  00437E  0A06               	xorlw	6	; case 5
 19915  004380  B4D8               	btfsc	status,2,c
 19916  004382  0012               	return	
 19917  004384  0A77               	xorlw	119	; case 114
 19918  004386  B4D8               	btfsc	status,2,c
 19919  004388  0012               	return	
 19920  00438A  0A01               	xorlw	1	; case 115
 19921  00438C  B4D8               	btfsc	status,2,c
 19922  00438E  0012               	return	
 19923  004390  0A07               	xorlw	7	; case 116
 19924  004392  B4D8               	btfsc	status,2,c
 19925  004394  0012               	return	
 19926  004396  0A01               	xorlw	1	; case 117
 19927  004398  0012               	return	
 19928  00439A                     i2l10221:
 19929                           
 19930                           ; Switch size 1, requested type "space"
 19931                           ; Number of cases is 1, Range of values is 255 to 255
 19932                           ; switch strategies available:
 19933                           ; Name         Instructions Cycles
 19934                           ; simple_byte            4     3 (average)
 19935                           ;	Chosen strategy is simple_byte
 19936  00439A  5013               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 19937  00439C  0AFF               	xorlw	255	; case 255
 19938  00439E  0012               	return	
 19939  0043A0                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 19940                           	opt stack 0
 19941                           pclatu	equ	0xFFB
 19942                           pclath	equ	0xFFA
 19943                           tblptru	equ	0xFF8
 19944                           tblptrh	equ	0xFF7
 19945                           tblptrl	equ	0xFF6
 19946                           tablat	equ	0xFF5
 19947                           prodh	equ	0xFF4
 19948                           prodl	equ	0xFF3
 19949                           intcon	equ	0xFF2
 19950                           indf0	equ	0xFEF
 19951                           postinc0	equ	0xFEE
 19952                           fsr0h	equ	0xFEA
 19953                           fsr0l	equ	0xFE9
 19954                           wreg	equ	0xFE8
 19955                           indf1	equ	0xFE7
 19956                           postdec1	equ	0xFE5
 19957                           fsr1h	equ	0xFE2
 19958                           fsr1l	equ	0xFE1
 19959                           indf2	equ	0xFDF
 19960                           postinc2	equ	0xFDE
 19961                           postdec2	equ	0xFDD
 19962                           plusw2	equ	0xFDB
 19963                           fsr2h	equ	0xFDA
 19964                           fsr2l	equ	0xFD9
 19965                           status	equ	0xFD8
 19966                           
 19967 ;; *************** function _USBCheckCDCRequest *****************
 19968 ;; Defined at:
 19969 ;;		line 147 in file "../../../../microchip/mla/v2017_03_06/framework/usb/src/usb_device_cdc.c"
 19970 ;; Parameters:    Size  Location     Type
 19971 ;;		None
 19972 ;; Auto vars:     Size  Location     Type
 19973 ;;		None
 19974 ;; Return value:  Size  Location     Type
 19975 ;;                  1    wreg      void 
 19976 ;; Registers used:
 19977 ;;		wreg, status,2, status,0
 19978 ;; Tracked objects:
 19979 ;;		On entry : 0/0
 19980 ;;		On exit  : 0/0
 19981 ;;		Unchanged: 0/0
 19982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19983 ;;      Params:         0       0       0       0       0       0       0       0       0
 19984 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19985 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19986 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19987 ;;Total ram usage:        0 bytes
 19988 ;; Hardware stack levels used:    1
 19989 ;; This function calls:
 19990 ;;		Nothing
 19991 ;; This function is called by:
 19992 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 19993 ;; This function uses a non-reentrant model
 19994 ;;
 19995                           
 19996                           	psect	text82
 19997  003832                     __ptext82:
 19998                           	opt stack 0
 19999  003832                     _USBCheckCDCRequest:
 20000                           	opt stack 22
 20001                           
 20002                           ;usb_device_cdc.c: 152: if(SetupPkt.Recipient != (0x01)) return;
 20003                           
 20004                           ;incstack = 0
 20005  003832  0104               	movlb	4	; () banked
 20006  003834  5130               	movf	48,w,b	;volatile
 20007  003836  0B1F               	andlw	31
 20008  003838  06E8               	decf	wreg,f,c
 20009  00383A  A4D8               	btfss	status,2,c
 20010  00383C  0012               	return	
 20011                           
 20012                           ; BSR set to: 4
 20013                           ;usb_device_cdc.c: 157: if(SetupPkt.RequestType != (0x20>>5)) return;
 20014                           
 20015                           ; BSR set to: 4
 20016                           
 20017                           ; BSR set to: 4
 20018  00383E  3930               	swapf	48,w,b	;volatile
 20019  003840  32E8               	rrcf	wreg,f,c
 20020  003842  0B03               	andlw	3
 20021  003844  06E8               	decf	wreg,f,c
 20022  003846  A4D8               	btfss	status,2,c
 20023  003848  0012               	return	
 20024                           
 20025                           ; BSR set to: 4
 20026                           ;usb_device_cdc.c: 163: if((SetupPkt.bIntfID != 0x0)&&
 20027                           ;usb_device_cdc.c: 164: (SetupPkt.bIntfID != 0x01)) return;
 20028                           
 20029                           ; BSR set to: 4
 20030                           
 20031                           ; BSR set to: 4
 20032  00384A  5134               	movf	52,w,b	;volatile
 20033  00384C  B4D8               	btfsc	status,2,c
 20034  00384E  D032               	goto	i2l739
 20035                           
 20036                           ; BSR set to: 4
 20037  003850  0534               	decf	52,w,b	;volatile
 20038  003852  A4D8               	btfss	status,2,c
 20039  003854  0012               	return	
 20040  003856  D02E               	goto	i2l739
 20041  003858                     
 20042                           ; BSR set to: 4
 20043                           ;usb_device_cdc.c: 171: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 20044                           
 20045                           ; BSR set to: 4
 20046  003858  0ECA               	movlw	low _dummy_encapsulated_cmd_response
 20047  00385A  6E3B               	movwf	_inPipes,c	;volatile
 20048  00385C  0E02               	movlw	high _dummy_encapsulated_cmd_response
 20049  00385E  6E3C               	movwf	_inPipes+1,c	;volatile
 20050                           
 20051                           ; BSR set to: 4
 20052                           ;usb_device_cdc.c: 172: inPipes[0].wCount.Val = 0x08;
 20053  003860  0E00               	movlw	0
 20054  003862  6E40               	movwf	_inPipes+5,c	;volatile
 20055  003864  0E08               	movlw	8
 20056  003866  6E3F               	movwf	_inPipes+4,c	;volatile
 20057                           
 20058                           ; BSR set to: 4
 20059                           ;usb_device_cdc.c: 173: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 20060  003868  803E               	bsf	_inPipes+3,0,c	;volatile
 20061                           
 20062                           ; BSR set to: 4
 20063                           ;usb_device_cdc.c: 174: inPipes[0].info.bits.busy = 1;
 20064  00386A  8E3E               	bsf	_inPipes+3,7,c	;volatile
 20065                           
 20066                           ;usb_device_cdc.c: 175: break;
 20067  00386C  0012               	return	
 20068  00386E                     
 20069                           ; BSR set to: 4
 20070                           ;usb_device_cdc.c: 178: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 20071                           
 20072                           ; BSR set to: 4
 20073  00386E  0ECA               	movlw	low _dummy_encapsulated_cmd_response
 20074  003870  6E3B               	movwf	_inPipes,c	;volatile
 20075  003872  0E02               	movlw	high _dummy_encapsulated_cmd_response
 20076  003874  6E3C               	movwf	_inPipes+1,c	;volatile
 20077                           
 20078                           ; BSR set to: 4
 20079                           ;usb_device_cdc.c: 179: inPipes[0].info.bits.busy = 1;
 20080  003876  8E3E               	bsf	_inPipes+3,7,c	;volatile
 20081                           
 20082                           ;usb_device_cdc.c: 180: break;
 20083  003878  0012               	return	
 20084  00387A                     i2l743:
 20085                           
 20086                           ; BSR set to: 4
 20087                           ;usb_device_cdc.c: 185: outPipes[0].wCount.Val = SetupPkt.wLength;
 20088  00387A  C436 F037          	movff	1078,_outPipes+4	;volatile
 20089  00387E  C437 F038          	movff	1079,_outPipes+5	;volatile
 20090                           
 20091                           ; BSR set to: 4
 20092                           ;usb_device_cdc.c: 186: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 20093  003882  0ED2               	movlw	low _line_coding
 20094  003884  6E33               	movwf	_outPipes,c	;volatile
 20095  003886  0E02               	movlw	high _line_coding
 20096  003888  6E34               	movwf	_outPipes+1,c	;volatile
 20097                           
 20098                           ;usb_device_cdc.c: 187: outPipes[0].pFunc = (0);
 20099  00388A  0E00               	movlw	0
 20100  00388C  6E39               	movwf	_outPipes+6,c	;volatile
 20101  00388E  0E00               	movlw	0
 20102  003890  6E3A               	movwf	_outPipes+7,c	;volatile
 20103                           
 20104                           ; BSR set to: 4
 20105                           ;usb_device_cdc.c: 188: outPipes[0].info.bits.busy = 1;
 20106  003892  8E36               	bsf	_outPipes+3,7,c	;volatile
 20107                           
 20108                           ;usb_device_cdc.c: 189: break;
 20109  003894  0012               	return	
 20110  003896                     
 20111                           ; BSR set to: 4
 20112                           ;usb_device_cdc.c: 192: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 20113                           
 20114                           ; BSR set to: 4
 20115  003896  0ED2               	movlw	low _line_coding
 20116  003898  6E3B               	movwf	_inPipes,c	;volatile
 20117  00389A  0E02               	movlw	high _line_coding
 20118  00389C  6E3C               	movwf	_inPipes+1,c	;volatile
 20119                           
 20120                           ; BSR set to: 4
 20121  00389E  0E00               	movlw	0
 20122  0038A0  6E40               	movwf	_inPipes+5,c	;volatile
 20123  0038A2  0E07               	movlw	7
 20124  0038A4  6E3F               	movwf	_inPipes+4,c	;volatile
 20125                           
 20126                           ; BSR set to: 4
 20127  0038A6  0EC1               	movlw	193
 20128  0038A8  6E3E               	movwf	_inPipes+3,c	;volatile
 20129                           
 20130                           ;usb_device_cdc.c: 196: break;
 20131  0038AA  0012               	return	
 20132  0038AC                     i2l745:
 20133                           
 20134                           ; BSR set to: 4
 20135                           ;usb_device_cdc.c: 199: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 20136  0038AC  C432 F25A          	movff	1074,_control_signal_bitmap	;volatile
 20137                           
 20138                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
 20139  0038B0  8E3E               	bsf	_inPipes+3,7,c	;volatile
 20140                           
 20141                           ; BSR set to: 4
 20142                           ;usb_device_cdc.c: 258: }
 20143                           
 20144                           ; BSR set to: 4
 20145                           ;usb_device_cdc.c: 257: break;
 20146                           
 20147                           ;usb_device_cdc.c: 256: default:
 20148                           
 20149                           ;usb_device_cdc.c: 232: break;
 20150  0038B2  0012               	return	
 20151  0038B4                     i2l739:
 20152                           
 20153                           ; BSR set to: 4
 20154                           
 20155                           ; BSR set to: 4
 20156  0038B4  5131               	movf	49,w,b	;volatile
 20157                           
 20158                           ; Switch size 1, requested type "space"
 20159                           ; Number of cases is 5, Range of values is 0 to 34
 20160                           ; switch strategies available:
 20161                           ; Name         Instructions Cycles
 20162                           ; simple_byte           16     9 (average)
 20163                           ;	Chosen strategy is simple_byte
 20164  0038B6  0A00               	xorlw	0	; case 0
 20165  0038B8  B4D8               	btfsc	status,2,c
 20166  0038BA  D7CE               	goto	i2l740
 20167  0038BC  0A01               	xorlw	1	; case 1
 20168  0038BE  B4D8               	btfsc	status,2,c
 20169  0038C0  D7D6               	goto	i2l742
 20170  0038C2  0A21               	xorlw	33	; case 32
 20171  0038C4  B4D8               	btfsc	status,2,c
 20172  0038C6  D7D9               	goto	i2l743
 20173  0038C8  0A01               	xorlw	1	; case 33
 20174  0038CA  B4D8               	btfsc	status,2,c
 20175  0038CC  D7E4               	goto	i2l744
 20176  0038CE  0A03               	xorlw	3	; case 34
 20177  0038D0  A4D8               	btfss	status,2,c
 20178  0038D2  0012               	return	
 20179  0038D4  D7EB               	goto	i2l745
 20180  0038D6                     __end_of_USBCheckCDCRequest:
 20181                           	opt stack 0
 20182                           pclatu	equ	0xFFB
 20183                           pclath	equ	0xFFA
 20184                           tblptru	equ	0xFF8
 20185                           tblptrh	equ	0xFF7
 20186                           tblptrl	equ	0xFF6
 20187                           tablat	equ	0xFF5
 20188                           prodh	equ	0xFF4
 20189                           prodl	equ	0xFF3
 20190                           intcon	equ	0xFF2
 20191                           indf0	equ	0xFEF
 20192                           postinc0	equ	0xFEE
 20193                           fsr0h	equ	0xFEA
 20194                           fsr0l	equ	0xFE9
 20195                           wreg	equ	0xFE8
 20196                           indf1	equ	0xFE7
 20197                           postdec1	equ	0xFE5
 20198                           fsr1h	equ	0xFE2
 20199                           fsr1l	equ	0xFE1
 20200                           indf2	equ	0xFDF
 20201                           postinc2	equ	0xFDE
 20202                           postdec2	equ	0xFDD
 20203                           plusw2	equ	0xFDB
 20204                           fsr2h	equ	0xFDA
 20205                           fsr2l	equ	0xFD9
 20206                           status	equ	0xFD8
 20207                           
 20208 ;; *************** function _CDCInitEP *****************
 20209 ;; Defined at:
 20210 ;;		line 294 in file "../../../../microchip/mla/v2017_03_06/framework/usb/src/usb_device_cdc.c"
 20211 ;; Parameters:    Size  Location     Type
 20212 ;;		None
 20213 ;; Auto vars:     Size  Location     Type
 20214 ;;		None
 20215 ;; Return value:  Size  Location     Type
 20216 ;;                  1    wreg      void 
 20217 ;; Registers used:
 20218 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20219 ;; Tracked objects:
 20220 ;;		On entry : 0/0
 20221 ;;		On exit  : 0/0
 20222 ;;		Unchanged: 0/0
 20223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20224 ;;      Params:         0       0       0       0       0       0       0       0       0
 20225 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20226 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20227 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20228 ;;Total ram usage:        0 bytes
 20229 ;; Hardware stack levels used:    1
 20230 ;; Hardware stack levels required when called:    2
 20231 ;; This function calls:
 20232 ;;		_USBEnableEndpoint
 20233 ;;		i2_USBTransferOnePacket
 20234 ;; This function is called by:
 20235 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 20236 ;; This function uses a non-reentrant model
 20237 ;;
 20238                           
 20239                           	psect	text83
 20240  0041BE                     __ptext83:
 20241                           	opt stack 0
 20242  0041BE                     _CDCInitEP:
 20243                           	opt stack 20
 20244                           
 20245                           ;usb_device_cdc.c: 297: line_coding.dwDTERate = 19200;
 20246                           
 20247                           ; BSR set to: 4
 20248                           ;incstack = 0
 20249  0041BE  0E00               	movlw	0
 20250  0041C0  0102               	movlb	2	; () banked
 20251  0041C2  6FD2               	movwf	_line_coding& (0+255),b
 20252  0041C4  0E4B               	movlw	75
 20253  0041C6  6FD3               	movwf	(_line_coding+1)& (0+255),b
 20254  0041C8  0E00               	movlw	0
 20255  0041CA  6FD4               	movwf	(_line_coding+2)& (0+255),b
 20256  0041CC  0E00               	movlw	0
 20257  0041CE  6FD5               	movwf	(_line_coding+3)& (0+255),b
 20258                           
 20259                           ;usb_device_cdc.c: 298: line_coding.bCharFormat = 0x00;
 20260  0041D0  0E00               	movlw	0
 20261  0041D2  6FD6               	movwf	(_line_coding+4)& (0+255),b
 20262                           
 20263                           ;usb_device_cdc.c: 299: line_coding.bParityType = 0x00;
 20264  0041D4  0E00               	movlw	0
 20265  0041D6  6FD7               	movwf	(_line_coding+5)& (0+255),b
 20266                           
 20267                           ;usb_device_cdc.c: 300: line_coding.bDataBits = 0x08;
 20268  0041D8  0E08               	movlw	8
 20269  0041DA  6FD8               	movwf	(_line_coding+6)& (0+255),b
 20270                           
 20271                           ;usb_device_cdc.c: 302: cdc_rx_len = 0;
 20272  0041DC  0E00               	movlw	0
 20273  0041DE  6E52               	movwf	_cdc_rx_len,c
 20274                           
 20275                           ; BSR set to: 2
 20276                           ;usb_device_cdc.c: 315: USBEnableEndpoint(1,0x02|0x10|0x08);
 20277  0041E0  0E1A               	movlw	26
 20278  0041E2  6E09               	movwf	USBEnableEndpoint@options,c
 20279  0041E4  0E01               	movlw	1
 20280  0041E6  EC11  F023         	call	_USBEnableEndpoint
 20281                           
 20282                           ;usb_device_cdc.c: 316: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 20283  0041EA  0E1E               	movlw	30
 20284  0041EC  6E09               	movwf	USBEnableEndpoint@options,c
 20285  0041EE  0E02               	movlw	2
 20286  0041F0  EC11  F023         	call	_USBEnableEndpoint
 20287                           
 20288                           ;usb_device_cdc.c: 318: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 20289  0041F4  0E00               	movlw	0
 20290  0041F6  6E01               	movwf	i2USBTransferOnePacket@dir,c
 20291  0041F8  0E40               	movlw	64
 20292  0041FA  6E02               	movwf	i2USBTransferOnePacket@data,c
 20293  0041FC  0E05               	movlw	5
 20294  0041FE  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 20295  004200  0E40               	movlw	64
 20296  004202  6E04               	movwf	i2USBTransferOnePacket@len,c
 20297  004204  0E02               	movlw	2
 20298  004206  EC02  F017         	call	i2_USBTransferOnePacket
 20299  00420A  C001  F1F2         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 20300  00420E  C002  F1F3         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 20301                           
 20302                           ;usb_device_cdc.c: 319: CDCDataInHandle = (0);
 20303  004212  0E00               	movlw	0
 20304  004214  0102               	movlb	2	; () banked
 20305  004216  6F44               	movwf	_CDCDataInHandle& (0+255),b
 20306  004218  0E00               	movlw	0
 20307  00421A  6F45               	movwf	(_CDCDataInHandle+1)& (0+255),b
 20308                           
 20309                           ; BSR set to: 2
 20310                           ;usb_device_cdc.c: 346: cdc_trf_state = 0;
 20311  00421C  0E00               	movlw	0
 20312  00421E  0101               	movlb	1	; () banked
 20313  004220  6FF5               	movwf	_cdc_trf_state& (0+255),b
 20314                           
 20315                           ; BSR set to: 1
 20316  004222  0012               	return		;funcret
 20317  004224                     __end_of_CDCInitEP:
 20318                           	opt stack 0
 20319                           pclatu	equ	0xFFB
 20320                           pclath	equ	0xFFA
 20321                           tblptru	equ	0xFF8
 20322                           tblptrh	equ	0xFF7
 20323                           tblptrl	equ	0xFF6
 20324                           tablat	equ	0xFF5
 20325                           prodh	equ	0xFF4
 20326                           prodl	equ	0xFF3
 20327                           intcon	equ	0xFF2
 20328                           indf0	equ	0xFEF
 20329                           postinc0	equ	0xFEE
 20330                           fsr0h	equ	0xFEA
 20331                           fsr0l	equ	0xFE9
 20332                           wreg	equ	0xFE8
 20333                           indf1	equ	0xFE7
 20334                           postdec1	equ	0xFE5
 20335                           fsr1h	equ	0xFE2
 20336                           fsr1l	equ	0xFE1
 20337                           indf2	equ	0xFDF
 20338                           postinc2	equ	0xFDE
 20339                           postdec2	equ	0xFDD
 20340                           plusw2	equ	0xFDB
 20341                           fsr2h	equ	0xFDA
 20342                           fsr2l	equ	0xFD9
 20343                           status	equ	0xFD8
 20344                           
 20345 ;; *************** function i2_USBTransferOnePacket *****************
 20346 ;; Defined at:
 20347 ;;		line 995 in file "../../../../microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 20348 ;; Parameters:    Size  Location     Type
 20349 ;;  ep              1    wreg     unsigned char 
 20350 ;;  dir             1    0[COMRAM] unsigned char 
 20351 ;;  data            2    1[COMRAM] PTR unsigned char 
 20352 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 20353 ;;  len             1    3[COMRAM] unsigned char 
 20354 ;; Auto vars:     Size  Location     Type
 20355 ;;  ep              1    8[COMRAM] unsigned char 
 20356 ;;  USBTransferO    2    9[COMRAM] PTR volatile struct __BD
 20357 ;;		 -> RAM(2047), NULL(0), BDT(48), 
 20358 ;; Return value:  Size  Location     Type
 20359 ;;                  2    0[COMRAM] PTR void 
 20360 ;; Registers used:
 20361 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 20362 ;; Tracked objects:
 20363 ;;		On entry : 0/0
 20364 ;;		On exit  : 0/0
 20365 ;;		Unchanged: 0/0
 20366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20367 ;;      Params:         4       0       0       0       0       0       0       0       0
 20368 ;;      Locals:         3       0       0       0       0       0       0       0       0
 20369 ;;      Temps:          4       0       0       0       0       0       0       0       0
 20370 ;;      Totals:        11       0       0       0       0       0       0       0       0
 20371 ;;Total ram usage:       11 bytes
 20372 ;; Hardware stack levels used:    1
 20373 ;; This function calls:
 20374 ;;		Nothing
 20375 ;; This function is called by:
 20376 ;;		_CDCInitEP
 20377 ;; This function uses a non-reentrant model
 20378 ;;
 20379                           
 20380                           	psect	text84
 20381  002E04                     __ptext84:
 20382                           	opt stack 0
 20383  002E04                     i2_USBTransferOnePacket:
 20384                           	opt stack 21
 20385                           
 20386                           ; BSR set to: 1
 20387                           ;incstack = 0
 20388                           ;i2USBTransferOnePacket@ep stored from wreg
 20389  002E04  6E09               	movwf	i2USBTransferOnePacket@ep,c
 20390                           
 20391                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 20392                           ;usb_device.c: 1000: if(dir != 0)
 20393  002E06  5001               	movf	i2USBTransferOnePacket@dir,w,c
 20394  002E08  B4D8               	btfsc	status,2,c
 20395  002E0A  D007               	goto	i2l396
 20396                           
 20397                           ;usb_device.c: 1001: {
 20398                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 20399  002E0C  5009               	movf	i2USBTransferOnePacket@ep,w,c
 20400  002E0E  0D02               	mullw	2
 20401  002E10  0E41               	movlw	low _pBDTEntryIn
 20402  002E12  24F3               	addwf	prodl,w,c
 20403  002E14  6ED9               	movwf	fsr2l,c
 20404  002E16  0E00               	movlw	high _pBDTEntryIn
 20405  002E18  D006               	goto	L21
 20406  002E1A                     i2l396:
 20407                           
 20408                           ;usb_device.c: 1005: else
 20409                           ;usb_device.c: 1006: {
 20410                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 20411  002E1A  5009               	movf	i2USBTransferOnePacket@ep,w,c
 20412  002E1C  0D02               	mullw	2
 20413  002E1E  0E0A               	movlw	low _pBDTEntryOut
 20414  002E20  24F3               	addwf	prodl,w,c
 20415  002E22  6ED9               	movwf	fsr2l,c
 20416  002E24  0E02               	movlw	high _pBDTEntryOut
 20417  002E26                     L21:
 20418  002E26  20F4               	addwfc	prodh,w,c
 20419  002E28  6EDA               	movwf	fsr2h,c
 20420  002E2A  CFDE F00A          	movff	postinc2,i2USBTransferOnePacket@handle
 20421  002E2E  CFDD F00B          	movff	postdec2,i2USBTransferOnePacket@handle+1
 20422                           
 20423                           ;usb_device.c: 1009: }
 20424                           ;usb_device.c: 1013: if(handle == 0)
 20425  002E32  500A               	movf	i2USBTransferOnePacket@handle,w,c
 20426  002E34  100B               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 20427  002E36  A4D8               	btfss	status,2,c
 20428  002E38  D005               	goto	i2l398
 20429                           
 20430                           ;usb_device.c: 1014: {
 20431                           ;usb_device.c: 1015: return 0;
 20432  002E3A  0E00               	movlw	0
 20433  002E3C  6E01               	movwf	?i2_USBTransferOnePacket,c
 20434  002E3E  0E00               	movlw	0
 20435  002E40  6E02               	movwf	?i2_USBTransferOnePacket+1,c
 20436  002E42  0012               	return	
 20437  002E44                     i2l398:
 20438                           
 20439                           ;usb_device.c: 1016: }
 20440                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 20441  002E44  EE20 F002          	lfsr	2,2
 20442  002E48  500A               	movf	i2USBTransferOnePacket@handle,w,c
 20443  002E4A  26D9               	addwf	fsr2l,f,c
 20444  002E4C  500B               	movf	i2USBTransferOnePacket@handle+1,w,c
 20445  002E4E  22DA               	addwfc	fsr2h,f,c
 20446  002E50  C002  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 20447  002E54  C003  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 20448                           
 20449                           ;usb_device.c: 1030: handle->CNT = len;
 20450  002E58  EE20 F001          	lfsr	2,1
 20451  002E5C  500A               	movf	i2USBTransferOnePacket@handle,w,c
 20452  002E5E  26D9               	addwf	fsr2l,f,c
 20453  002E60  500B               	movf	i2USBTransferOnePacket@handle+1,w,c
 20454  002E62  22DA               	addwfc	fsr2h,f,c
 20455  002E64  C004  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 20456                           
 20457                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 20458  002E68  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 20459  002E6C  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 20460  002E70  0E40               	movlw	64
 20461  002E72  16DF               	andwf	indf2,f,c
 20462                           
 20463                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 20464  002E74  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 20465  002E78  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 20466  002E7C  0E00               	movlw	0
 20467  002E7E  86DB               	bsf	plusw2,3,c
 20468                           
 20469                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 20470  002E80  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 20471  002E84  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 20472  002E88  0E00               	movlw	0
 20473  002E8A  8EDB               	bsf	plusw2,7,c
 20474                           
 20475                           ;usb_device.c: 1036: if(dir != 0)
 20476  002E8C  5001               	movf	i2USBTransferOnePacket@dir,w,c
 20477  002E8E  B4D8               	btfsc	status,2,c
 20478  002E90  D018               	goto	i2l400
 20479                           
 20480                           ;usb_device.c: 1037: {
 20481                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
 20482  002E92  5009               	movf	i2USBTransferOnePacket@ep,w,c
 20483  002E94  0D02               	mullw	2
 20484  002E96  0E41               	movlw	low _pBDTEntryIn
 20485  002E98  24F3               	addwf	prodl,w,c
 20486  002E9A  6ED9               	movwf	fsr2l,c
 20487  002E9C  0E00               	movlw	high _pBDTEntryIn
 20488  002E9E  20F4               	addwfc	prodh,w,c
 20489  002EA0  6EDA               	movwf	fsr2h,c
 20490  002EA2  CFDE F005          	movff	postinc2,??i2_USBTransferOnePacket
 20491  002EA6  CFDD F006          	movff	postdec2,??i2_USBTransferOnePacket+1
 20492  002EAA  0E04               	movlw	4
 20493  002EAC  1805               	xorwf	??i2_USBTransferOnePacket,w,c
 20494  002EAE  6E07               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 20495  002EB0  5006               	movf	??i2_USBTransferOnePacket+1,w,c
 20496  002EB2  6E08               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 20497  002EB4  5009               	movf	i2USBTransferOnePacket@ep,w,c
 20498  002EB6  0D02               	mullw	2
 20499  002EB8  0E41               	movlw	low _pBDTEntryIn
 20500  002EBA  24F3               	addwf	prodl,w,c
 20501  002EBC  6ED9               	movwf	fsr2l,c
 20502  002EBE  0E00               	movlw	high _pBDTEntryIn
 20503  002EC0  D017               	goto	L22
 20504  002EC2                     i2l400:
 20505                           
 20506                           ;usb_device.c: 1041: else
 20507                           ;usb_device.c: 1042: {
 20508                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
 20509  002EC2  5009               	movf	i2USBTransferOnePacket@ep,w,c
 20510  002EC4  0D02               	mullw	2
 20511  002EC6  0E0A               	movlw	low _pBDTEntryOut
 20512  002EC8  24F3               	addwf	prodl,w,c
 20513  002ECA  6ED9               	movwf	fsr2l,c
 20514  002ECC  0E02               	movlw	high _pBDTEntryOut
 20515  002ECE  20F4               	addwfc	prodh,w,c
 20516  002ED0  6EDA               	movwf	fsr2h,c
 20517  002ED2  CFDE F005          	movff	postinc2,??i2_USBTransferOnePacket
 20518  002ED6  CFDD F006          	movff	postdec2,??i2_USBTransferOnePacket+1
 20519  002EDA  0E04               	movlw	4
 20520  002EDC  1805               	xorwf	??i2_USBTransferOnePacket,w,c
 20521  002EDE  6E07               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 20522  002EE0  5006               	movf	??i2_USBTransferOnePacket+1,w,c
 20523  002EE2  6E08               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 20524  002EE4  5009               	movf	i2USBTransferOnePacket@ep,w,c
 20525  002EE6  0D02               	mullw	2
 20526  002EE8  0E0A               	movlw	low _pBDTEntryOut
 20527  002EEA  24F3               	addwf	prodl,w,c
 20528  002EEC  6ED9               	movwf	fsr2l,c
 20529  002EEE  0E02               	movlw	high _pBDTEntryOut
 20530  002EF0                     L22:
 20531  002EF0  20F4               	addwfc	prodh,w,c
 20532  002EF2  6EDA               	movwf	fsr2h,c
 20533  002EF4  C007  FFDE         	movff	??i2_USBTransferOnePacket+2,postinc2
 20534  002EF8  C008  FFDD         	movff	??i2_USBTransferOnePacket+3,postdec2
 20535                           
 20536                           ;usb_device.c: 1045: }
 20537                           ;usb_device.c: 1046: return (void*)handle;
 20538  002EFC  C00A  F001         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 20539  002F00  C00B  F002         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 20540  002F04  0012               	return	
 20541  002F06                     __end_ofi2_USBTransferOnePacket:
 20542                           	opt stack 0
 20543                           pclatu	equ	0xFFB
 20544                           pclath	equ	0xFFA
 20545                           tblptru	equ	0xFF8
 20546                           tblptrh	equ	0xFF7
 20547                           tblptrl	equ	0xFF6
 20548                           tablat	equ	0xFF5
 20549                           prodh	equ	0xFF4
 20550                           prodl	equ	0xFF3
 20551                           intcon	equ	0xFF2
 20552                           indf0	equ	0xFEF
 20553                           postinc0	equ	0xFEE
 20554                           fsr0h	equ	0xFEA
 20555                           fsr0l	equ	0xFE9
 20556                           wreg	equ	0xFE8
 20557                           indf1	equ	0xFE7
 20558                           postdec1	equ	0xFE5
 20559                           fsr1h	equ	0xFE2
 20560                           fsr1l	equ	0xFE1
 20561                           indf2	equ	0xFDF
 20562                           postinc2	equ	0xFDE
 20563                           postdec2	equ	0xFDD
 20564                           plusw2	equ	0xFDB
 20565                           fsr2h	equ	0xFDA
 20566                           fsr2l	equ	0xFD9
 20567                           status	equ	0xFD8
 20568                           
 20569 ;; *************** function _USBEnableEndpoint *****************
 20570 ;; Defined at:
 20571 ;;		line 878 in file "../../../../microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 20572 ;; Parameters:    Size  Location     Type
 20573 ;;  ep              1    wreg     unsigned char 
 20574 ;;  options         1    8[COMRAM] unsigned char 
 20575 ;; Auto vars:     Size  Location     Type
 20576 ;;  ep              1   11[COMRAM] unsigned char 
 20577 ;;  p               2    9[COMRAM] PTR unsigned char 
 20578 ;;		 -> UEP0(1), 
 20579 ;; Return value:  Size  Location     Type
 20580 ;;                  1    wreg      void 
 20581 ;; Registers used:
 20582 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20583 ;; Tracked objects:
 20584 ;;		On entry : 0/0
 20585 ;;		On exit  : 0/0
 20586 ;;		Unchanged: 0/0
 20587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20588 ;;      Params:         1       0       0       0       0       0       0       0       0
 20589 ;;      Locals:         3       0       0       0       0       0       0       0       0
 20590 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20591 ;;      Totals:         4       0       0       0       0       0       0       0       0
 20592 ;;Total ram usage:        4 bytes
 20593 ;; Hardware stack levels used:    1
 20594 ;; Hardware stack levels required when called:    1
 20595 ;; This function calls:
 20596 ;;		_USBConfigureEndpoint
 20597 ;; This function is called by:
 20598 ;;		_CDCInitEP
 20599 ;; This function uses a non-reentrant model
 20600 ;;
 20601                           
 20602                           	psect	text85
 20603  004622                     __ptext85:
 20604                           	opt stack 0
 20605  004622                     _USBEnableEndpoint:
 20606                           	opt stack 20
 20607                           
 20608                           ;incstack = 0
 20609                           ;USBEnableEndpoint@ep stored from wreg
 20610  004622  6E0C               	movwf	USBEnableEndpoint@ep,c
 20611                           
 20612                           ;usb_device.c: 880: unsigned char* p;
 20613                           ;usb_device.c: 884: if(options & 0x04)
 20614  004624  A409               	btfss	USBEnableEndpoint@options,2,c
 20615  004626  D005               	goto	i2l391
 20616                           
 20617                           ;usb_device.c: 885: {
 20618                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 20619  004628  0E00               	movlw	0
 20620  00462A  6E01               	movwf	USBConfigureEndpoint@direction,c
 20621  00462C  500C               	movf	USBEnableEndpoint@ep,w,c
 20622  00462E  ECA2  F01D         	call	_USBConfigureEndpoint
 20623  004632                     i2l391:
 20624                           
 20625                           ;usb_device.c: 887: }
 20626                           ;usb_device.c: 888: if(options & 0x02)
 20627  004632  A209               	btfss	USBEnableEndpoint@options,1,c
 20628  004634  D005               	goto	i2l392
 20629                           
 20630                           ;usb_device.c: 889: {
 20631                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 20632  004636  0E01               	movlw	1
 20633  004638  6E01               	movwf	USBConfigureEndpoint@direction,c
 20634  00463A  500C               	movf	USBEnableEndpoint@ep,w,c
 20635  00463C  ECA2  F01D         	call	_USBConfigureEndpoint
 20636  004640                     i2l392:
 20637                           
 20638                           ;usb_device.c: 891: }
 20639                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 20640  004640  500C               	movf	USBEnableEndpoint@ep,w,c
 20641  004642  0D01               	mullw	1
 20642  004644  0E70               	movlw	112
 20643  004646  24F3               	addwf	prodl,w,c
 20644  004648  6E0A               	movwf	USBEnableEndpoint@p,c
 20645  00464A  0E0F               	movlw	15
 20646  00464C  20F4               	addwfc	prodh,w,c
 20647  00464E  6E0B               	movwf	USBEnableEndpoint@p+1,c
 20648                           
 20649                           ;usb_device.c: 901: *p = options;
 20650  004650  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 20651  004654  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 20652  004658  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 20653  00465C  0012               	return		;funcret
 20654  00465E                     __end_of_USBEnableEndpoint:
 20655                           	opt stack 0
 20656                           pclatu	equ	0xFFB
 20657                           pclath	equ	0xFFA
 20658                           tblptru	equ	0xFF8
 20659                           tblptrh	equ	0xFF7
 20660                           tblptrl	equ	0xFF6
 20661                           tablat	equ	0xFF5
 20662                           prodh	equ	0xFF4
 20663                           prodl	equ	0xFF3
 20664                           intcon	equ	0xFF2
 20665                           indf0	equ	0xFEF
 20666                           postinc0	equ	0xFEE
 20667                           fsr0h	equ	0xFEA
 20668                           fsr0l	equ	0xFE9
 20669                           wreg	equ	0xFE8
 20670                           indf1	equ	0xFE7
 20671                           postdec1	equ	0xFE5
 20672                           fsr1h	equ	0xFE2
 20673                           fsr1l	equ	0xFE1
 20674                           indf2	equ	0xFDF
 20675                           postinc2	equ	0xFDE
 20676                           postdec2	equ	0xFDD
 20677                           plusw2	equ	0xFDB
 20678                           fsr2h	equ	0xFDA
 20679                           fsr2l	equ	0xFD9
 20680                           status	equ	0xFD8
 20681                           
 20682 ;; *************** function _USBConfigureEndpoint *****************
 20683 ;; Defined at:
 20684 ;;		line 1543 in file "../../../../microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 20685 ;; Parameters:    Size  Location     Type
 20686 ;;  EPNum           1    wreg     unsigned char 
 20687 ;;  direction       1    0[COMRAM] unsigned char 
 20688 ;; Auto vars:     Size  Location     Type
 20689 ;;  EPNum           1    5[COMRAM] unsigned char 
 20690 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 20691 ;;		 -> BDT(48), 
 20692 ;; Return value:  Size  Location     Type
 20693 ;;                  1    wreg      void 
 20694 ;; Registers used:
 20695 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 20696 ;; Tracked objects:
 20697 ;;		On entry : 0/0
 20698 ;;		On exit  : 0/0
 20699 ;;		Unchanged: 0/0
 20700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20701 ;;      Params:         1       0       0       0       0       0       0       0       0
 20702 ;;      Locals:         3       0       0       0       0       0       0       0       0
 20703 ;;      Temps:          4       0       0       0       0       0       0       0       0
 20704 ;;      Totals:         8       0       0       0       0       0       0       0       0
 20705 ;;Total ram usage:        8 bytes
 20706 ;; Hardware stack levels used:    1
 20707 ;; This function calls:
 20708 ;;		Nothing
 20709 ;; This function is called by:
 20710 ;;		_USBEnableEndpoint
 20711 ;; This function uses a non-reentrant model
 20712 ;;
 20713                           
 20714                           	psect	text86
 20715  003B44                     __ptext86:
 20716                           	opt stack 0
 20717  003B44                     _USBConfigureEndpoint:
 20718                           	opt stack 20
 20719                           
 20720                           ;incstack = 0
 20721                           ;USBConfigureEndpoint@EPNum stored from wreg
 20722  003B44  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 20723                           
 20724                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
 20725                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
 20726  003B46  0E00               	movlw	0
 20727  003B48  6E07               	movwf	USBConfigureEndpoint@handle,c
 20728  003B4A  0E04               	movlw	4
 20729  003B4C  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 20730                           
 20731                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
 20732  003B4E  5001               	movf	USBConfigureEndpoint@direction,w,c
 20733  003B50  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 20734  003B52  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 20735  003B54  90D8               	bcf	status,0,c
 20736  003B56  3602               	rlcf	??_USBConfigureEndpoint,f,c
 20737  003B58  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 20738  003B5A  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 20739  003B5C  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 20740  003B5E  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 20741  003B60  90D8               	bcf	status,0,c
 20742  003B62  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 20743  003B64  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 20744  003B66  90D8               	bcf	status,0,c
 20745  003B68  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 20746  003B6A  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 20747  003B6C  5002               	movf	??_USBConfigureEndpoint,w,c
 20748  003B6E  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 20749  003B70  5003               	movf	??_USBConfigureEndpoint+1,w,c
 20750  003B72  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 20751  003B74  90D8               	bcf	status,0,c
 20752  003B76  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 20753  003B78  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 20754  003B7A  90D8               	bcf	status,0,c
 20755  003B7C  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 20756  003B7E  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 20757  003B80  5004               	movf	??_USBConfigureEndpoint+2,w,c
 20758  003B82  2607               	addwf	USBConfigureEndpoint@handle,f,c
 20759  003B84  5005               	movf	??_USBConfigureEndpoint+3,w,c
 20760  003B86  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 20761                           
 20762                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
 20763  003B88  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 20764  003B8C  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 20765  003B90  9EDF               	bcf	indf2,7,c
 20766                           
 20767                           ;usb_device.c: 1557: if(direction == 0)
 20768  003B92  5001               	movf	USBConfigureEndpoint@direction,w,c
 20769  003B94  A4D8               	btfss	status,2,c
 20770  003B96  D007               	goto	i2l438
 20771                           
 20772                           ;usb_device.c: 1558: {
 20773                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
 20774  003B98  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 20775  003B9A  0D02               	mullw	2
 20776  003B9C  0E0A               	movlw	low _pBDTEntryOut
 20777  003B9E  24F3               	addwf	prodl,w,c
 20778  003BA0  6ED9               	movwf	fsr2l,c
 20779  003BA2  0E02               	movlw	high _pBDTEntryOut
 20780  003BA4  D006               	goto	L23
 20781  003BA6                     i2l438:
 20782                           
 20783                           ;usb_device.c: 1561: else
 20784                           ;usb_device.c: 1562: {
 20785                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
 20786  003BA6  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 20787  003BA8  0D02               	mullw	2
 20788  003BAA  0E41               	movlw	low _pBDTEntryIn
 20789  003BAC  24F3               	addwf	prodl,w,c
 20790  003BAE  6ED9               	movwf	fsr2l,c
 20791  003BB0  0E00               	movlw	high _pBDTEntryIn
 20792  003BB2                     L23:
 20793  003BB2  20F4               	addwfc	prodh,w,c
 20794  003BB4  6EDA               	movwf	fsr2h,c
 20795  003BB6  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 20796  003BBA  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 20797                           
 20798                           ;usb_device.c: 1564: }
 20799                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
 20800  003BBE  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 20801  003BC2  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 20802  003BC6  9CDF               	bcf	indf2,6,c
 20803                           
 20804                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
 20805  003BC8  EE20 F004          	lfsr	2,4
 20806  003BCC  5007               	movf	USBConfigureEndpoint@handle,w,c
 20807  003BCE  26D9               	addwf	fsr2l,f,c
 20808  003BD0  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 20809  003BD2  22DA               	addwfc	fsr2h,f,c
 20810  003BD4  8CDF               	bsf	indf2,6,c
 20811  003BD6  0012               	return		;funcret
 20812  003BD8                     __end_of_USBConfigureEndpoint:
 20813                           	opt stack 0
 20814                           pclatu	equ	0xFFB
 20815                           pclath	equ	0xFFA
 20816                           tblptru	equ	0xFF8
 20817                           tblptrh	equ	0xFF7
 20818                           tblptrl	equ	0xFF6
 20819                           tablat	equ	0xFF5
 20820                           prodh	equ	0xFF4
 20821                           prodl	equ	0xFF3
 20822                           intcon	equ	0xFF2
 20823                           indf0	equ	0xFEF
 20824                           postinc0	equ	0xFEE
 20825                           fsr0h	equ	0xFEA
 20826                           fsr0l	equ	0xFE9
 20827                           wreg	equ	0xFE8
 20828                           indf1	equ	0xFE7
 20829                           postdec1	equ	0xFE5
 20830                           fsr1h	equ	0xFE2
 20831                           fsr1l	equ	0xFE1
 20832                           indf2	equ	0xFDF
 20833                           postinc2	equ	0xFDE
 20834                           postdec2	equ	0xFDD
 20835                           plusw2	equ	0xFDB
 20836                           fsr2h	equ	0xFDA
 20837                           fsr2l	equ	0xFD9
 20838                           status	equ	0xFD8
 20839                           
 20840 ;; *************** function _USBCtrlTrfOutHandler *****************
 20841 ;; Defined at:
 20842 ;;		line 2538 in file "../../../../microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 20843 ;; Parameters:    Size  Location     Type
 20844 ;;		None
 20845 ;; Auto vars:     Size  Location     Type
 20846 ;;		None
 20847 ;; Return value:  Size  Location     Type
 20848 ;;                  1    wreg      void 
 20849 ;; Registers used:
 20850 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20851 ;; Tracked objects:
 20852 ;;		On entry : 0/0
 20853 ;;		On exit  : 0/0
 20854 ;;		Unchanged: 0/0
 20855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20856 ;;      Params:         0       0       0       0       0       0       0       0       0
 20857 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20858 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20859 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20860 ;;Total ram usage:        0 bytes
 20861 ;; Hardware stack levels used:    1
 20862 ;; Hardware stack levels required when called:    2
 20863 ;; This function calls:
 20864 ;;		_USBCtrlTrfRxService
 20865 ;; This function is called by:
 20866 ;;		_USBCtrlEPService
 20867 ;; This function uses a non-reentrant model
 20868 ;;
 20869                           
 20870                           	psect	text87
 20871  0042E6                     __ptext87:
 20872                           	opt stack 0
 20873  0042E6                     _USBCtrlTrfOutHandler:
 20874                           	opt stack 20
 20875                           
 20876                           ;usb_device.c: 2540: if(controlTransferState == 2)
 20877                           
 20878                           ;incstack = 0
 20879  0042E6  0E02               	movlw	2
 20880  0042E8  1856               	xorwf	_controlTransferState,w,c	;volatile
 20881  0042EA  A4D8               	btfss	status,2,c
 20882  0042EC  D003               	goto	i2l544
 20883                           
 20884                           ;usb_device.c: 2541: {
 20885                           ;usb_device.c: 2542: USBCtrlTrfRxService();
 20886  0042EE  EC77  F015         	call	_USBCtrlTrfRxService	;wreg free
 20887                           
 20888                           ;usb_device.c: 2543: }
 20889  0042F2  0012               	return	
 20890  0042F4                     i2l544:
 20891                           
 20892                           ;usb_device.c: 2544: else
 20893                           ;usb_device.c: 2545: {
 20894                           ;usb_device.c: 2548: controlTransferState = 0;
 20895  0042F4  0E00               	movlw	0
 20896  0042F6  6E56               	movwf	_controlTransferState,c	;volatile
 20897                           
 20898                           ;usb_device.c: 2555: if(BothEP0OutUOWNsSet == 0)
 20899  0042F8  0101               	movlb	1	; () banked
 20900  0042FA  51FB               	movf	_BothEP0OutUOWNsSet& (0+255),w,b	;volatile
 20901  0042FC  A4D8               	btfss	status,2,c
 20902  0042FE  D01F               	goto	i2l546
 20903                           
 20904                           ; BSR set to: 1
 20905                           ;usb_device.c: 2556: {
 20906                           ;usb_device.c: 2557: pBDTEntryEP0OutNext->CNT = 8;
 20907  004300  EE20 F001          	lfsr	2,1
 20908  004304  504D               	movf	_pBDTEntryEP0OutNext,w,c
 20909  004306  26D9               	addwf	fsr2l,f,c
 20910  004308  504E               	movf	_pBDTEntryEP0OutNext+1,w,c
 20911  00430A  22DA               	addwfc	fsr2h,f,c
 20912  00430C  0E08               	movlw	8
 20913  00430E  6EDF               	movwf	indf2,c
 20914                           
 20915                           ;usb_device.c: 2558: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 20916  004310  EE20 F002          	lfsr	2,2
 20917  004314  504D               	movf	_pBDTEntryEP0OutNext,w,c
 20918  004316  26D9               	addwf	fsr2l,f,c
 20919  004318  504E               	movf	_pBDTEntryEP0OutNext+1,w,c
 20920  00431A  22DA               	addwfc	fsr2h,f,c
 20921  00431C  0E30               	movlw	48
 20922  00431E  6EDE               	movwf	postinc2,c
 20923  004320  0E04               	movlw	4
 20924  004322  6EDD               	movwf	postdec2,c
 20925                           
 20926                           ; BSR set to: 1
 20927                           ;usb_device.c: 2559: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 20928  004324  C04D  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20929  004328  C04E  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20930  00432C  0E0C               	movlw	12
 20931  00432E  6EDF               	movwf	indf2,c
 20932                           
 20933                           ; BSR set to: 1
 20934                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 20935  004330  C04D  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20936  004334  C04E  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20937  004338  0E00               	movlw	0
 20938  00433A  8EDB               	bsf	plusw2,7,c
 20939                           
 20940                           ;usb_device.c: 2561: }
 20941  00433C  0012               	return	
 20942  00433E                     i2l546:
 20943                           
 20944                           ; BSR set to: 1
 20945                           ;usb_device.c: 2562: else
 20946                           ;usb_device.c: 2563: {
 20947                           ;usb_device.c: 2564: BothEP0OutUOWNsSet = 0;
 20948                           
 20949                           ; BSR set to: 1
 20950  00433E  0E00               	movlw	0
 20951  004340  6FFB               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 20952                           
 20953                           ; BSR set to: 1
 20954  004342  0012               	return	
 20955  004344                     __end_of_USBCtrlTrfOutHandler:
 20956                           	opt stack 0
 20957                           pclatu	equ	0xFFB
 20958                           pclath	equ	0xFFA
 20959                           tblptru	equ	0xFF8
 20960                           tblptrh	equ	0xFF7
 20961                           tblptrl	equ	0xFF6
 20962                           tablat	equ	0xFF5
 20963                           prodh	equ	0xFF4
 20964                           prodl	equ	0xFF3
 20965                           intcon	equ	0xFF2
 20966                           indf0	equ	0xFEF
 20967                           postinc0	equ	0xFEE
 20968                           fsr0h	equ	0xFEA
 20969                           fsr0l	equ	0xFE9
 20970                           wreg	equ	0xFE8
 20971                           indf1	equ	0xFE7
 20972                           postdec1	equ	0xFE5
 20973                           fsr1h	equ	0xFE2
 20974                           fsr1l	equ	0xFE1
 20975                           indf2	equ	0xFDF
 20976                           postinc2	equ	0xFDE
 20977                           postdec2	equ	0xFDD
 20978                           plusw2	equ	0xFDB
 20979                           fsr2h	equ	0xFDA
 20980                           fsr2l	equ	0xFD9
 20981                           status	equ	0xFD8
 20982                           
 20983 ;; *************** function _USBCtrlTrfRxService *****************
 20984 ;; Defined at:
 20985 ;;		line 1852 in file "../../../../microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 20986 ;; Parameters:    Size  Location     Type
 20987 ;;		None
 20988 ;; Auto vars:     Size  Location     Type
 20989 ;;  byteToRead      1    1[COMRAM] unsigned char 
 20990 ;;  i               1    0[COMRAM] unsigned char 
 20991 ;; Return value:  Size  Location     Type
 20992 ;;                  1    wreg      void 
 20993 ;; Registers used:
 20994 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20995 ;; Tracked objects:
 20996 ;;		On entry : 0/0
 20997 ;;		On exit  : 0/0
 20998 ;;		Unchanged: 0/0
 20999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21000 ;;      Params:         0       0       0       0       0       0       0       0       0
 21001 ;;      Locals:         2       0       0       0       0       0       0       0       0
 21002 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21003 ;;      Totals:         2       0       0       0       0       0       0       0       0
 21004 ;;Total ram usage:        2 bytes
 21005 ;; Hardware stack levels used:    1
 21006 ;; Hardware stack levels required when called:    1
 21007 ;; This function calls:
 21008 ;;		_USBCtrlEPAllowStatusStage
 21009 ;; This function is called by:
 21010 ;;		_USBCtrlTrfOutHandler
 21011 ;; This function uses a non-reentrant model
 21012 ;;
 21013                           
 21014                           	psect	text88
 21015  002AEE                     __ptext88:
 21016                           	opt stack 0
 21017  002AEE                     _USBCtrlTrfRxService:
 21018                           	opt stack 20
 21019                           
 21020                           ;usb_device.c: 1854: uint8_t byteToRead;
 21021                           ;usb_device.c: 1855: uint8_t i;
 21022                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 21023                           
 21024                           ;incstack = 0
 21025  002AEE  EE20 F001          	lfsr	2,1
 21026  002AF2  504F               	movf	_pBDTEntryEP0OutCurrent,w,c
 21027  002AF4  26D9               	addwf	fsr2l,f,c
 21028  002AF6  5050               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 21029  002AF8  22DA               	addwfc	fsr2h,f,c
 21030  002AFA  50DF               	movf	indf2,w,c
 21031  002AFC  6E02               	movwf	USBCtrlTrfRxService@byteToRead,c
 21032                           
 21033                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
 21034  002AFE  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 21035  002B00  5C37               	subwf	_outPipes+4,w,c	;volatile
 21036  002B02  0E00               	movlw	0
 21037  002B04  5838               	subwfb	_outPipes+5,w,c	;volatile
 21038  002B06  A0D8               	btfss	status,0,c
 21039                           
 21040                           ;usb_device.c: 1866: {
 21041                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
 21042  002B08  C037  F002         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 21043                           
 21044                           ;usb_device.c: 1868: }
 21045                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
 21046  002B0C  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 21047  002B0E  5E37               	subwf	_outPipes+4,f,c	;volatile
 21048  002B10  0E00               	movlw	0
 21049  002B12  5A38               	subwfb	_outPipes+5,f,c	;volatile
 21050                           
 21051                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
 21052  002B14  0E00               	movlw	0
 21053  002B16  6E01               	movwf	USBCtrlTrfRxService@i,c
 21054  002B18  D011               	goto	i2l472
 21055  002B1A                     
 21056                           ;usb_device.c: 1875: {
 21057                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 21058  002B1A  5001               	movf	USBCtrlTrfRxService@i,w,c
 21059  002B1C  0D01               	mullw	1
 21060  002B1E  0E38               	movlw	56
 21061  002B20  24F3               	addwf	prodl,w,c
 21062  002B22  6ED9               	movwf	fsr2l,c
 21063  002B24  0E04               	movlw	4
 21064  002B26  20F4               	addwfc	prodh,w,c
 21065  002B28  6EDA               	movwf	fsr2h,c
 21066  002B2A  C033  FFE1         	movff	_outPipes,fsr1l	;volatile
 21067  002B2E  C034  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 21068  002B32  CFDF FFE7          	movff	indf2,indf1
 21069  002B36  4A33               	infsnz	_outPipes,f,c	;volatile
 21070  002B38  2A34               	incf	_outPipes+1,f,c	;volatile
 21071  002B3A  2A01               	incf	USBCtrlTrfRxService@i,f,c
 21072  002B3C                     i2l472:
 21073  002B3C  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 21074  002B3E  5C01               	subwf	USBCtrlTrfRxService@i,w,c
 21075  002B40  A0D8               	btfss	status,0,c
 21076  002B42  D7EB               	goto	i2l473
 21077                           
 21078                           ;usb_device.c: 1877: }
 21079                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
 21080  002B44  5037               	movf	_outPipes+4,w,c	;volatile
 21081  002B46  1038               	iorwf	_outPipes+5,w,c	;volatile
 21082  002B48  B4D8               	btfsc	status,2,c
 21083  002B4A  D032               	goto	i2l475
 21084                           
 21085                           ;usb_device.c: 1882: {
 21086                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
 21087  002B4C  EE20 F001          	lfsr	2,1
 21088  002B50  504D               	movf	_pBDTEntryEP0OutNext,w,c
 21089  002B52  26D9               	addwf	fsr2l,f,c
 21090  002B54  504E               	movf	_pBDTEntryEP0OutNext+1,w,c
 21091  002B56  22DA               	addwfc	fsr2h,f,c
 21092  002B58  0E08               	movlw	8
 21093  002B5A  6EDF               	movwf	indf2,c
 21094                           
 21095                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 21096  002B5C  EE20 F002          	lfsr	2,2
 21097  002B60  504D               	movf	_pBDTEntryEP0OutNext,w,c
 21098  002B62  26D9               	addwf	fsr2l,f,c
 21099  002B64  504E               	movf	_pBDTEntryEP0OutNext+1,w,c
 21100  002B66  22DA               	addwfc	fsr2h,f,c
 21101  002B68  0E38               	movlw	56
 21102  002B6A  6EDE               	movwf	postinc2,c
 21103  002B6C  0E04               	movlw	4
 21104  002B6E  6EDD               	movwf	postdec2,c
 21105                           
 21106                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 21107  002B70  C04F  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 21108  002B74  C050  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 21109  002B78  BCDF               	btfsc	indf2,6,c
 21110  002B7A  D00D               	goto	i2l476
 21111                           
 21112                           ;usb_device.c: 1886: {
 21113                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 21114  002B7C  C04D  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21115  002B80  C04E  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21116  002B84  0E48               	movlw	72
 21117  002B86  6EDF               	movwf	indf2,c
 21118                           
 21119                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 21120  002B88  C04D  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21121  002B8C  C04E  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21122  002B90  0E00               	movlw	0
 21123  002B92  8EDB               	bsf	plusw2,7,c
 21124                           
 21125                           ;usb_device.c: 1889: }
 21126  002B94  0012               	return	
 21127  002B96                     i2l476:
 21128                           
 21129                           ;usb_device.c: 1890: else
 21130                           ;usb_device.c: 1891: {
 21131                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 21132  002B96  C04D  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21133  002B9A  C04E  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21134  002B9E  0E08               	movlw	8
 21135  002BA0  6EDF               	movwf	indf2,c
 21136                           
 21137                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 21138  002BA2  C04D  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21139  002BA6  C04E  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21140  002BAA  0E00               	movlw	0
 21141  002BAC  8EDB               	bsf	plusw2,7,c
 21142                           
 21143                           ;usb_device.c: 1894: }
 21144                           ;usb_device.c: 1895: }
 21145  002BAE  0012               	return	
 21146  002BB0                     i2l475:
 21147                           
 21148                           ;usb_device.c: 1896: else
 21149                           ;usb_device.c: 1897: {
 21150                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 21151  002BB0  EE20 F001          	lfsr	2,1
 21152  002BB4  504D               	movf	_pBDTEntryEP0OutNext,w,c
 21153  002BB6  26D9               	addwf	fsr2l,f,c
 21154  002BB8  504E               	movf	_pBDTEntryEP0OutNext+1,w,c
 21155  002BBA  22DA               	addwfc	fsr2h,f,c
 21156  002BBC  0E08               	movlw	8
 21157  002BBE  6EDF               	movwf	indf2,c
 21158                           
 21159                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 21160  002BC0  EE20 F002          	lfsr	2,2
 21161  002BC4  504D               	movf	_pBDTEntryEP0OutNext,w,c
 21162  002BC6  26D9               	addwf	fsr2l,f,c
 21163  002BC8  504E               	movf	_pBDTEntryEP0OutNext+1,w,c
 21164  002BCA  22DA               	addwfc	fsr2h,f,c
 21165  002BCC  0E30               	movlw	48
 21166  002BCE  6EDE               	movwf	postinc2,c
 21167  002BD0  0E04               	movlw	4
 21168  002BD2  6EDD               	movwf	postdec2,c
 21169                           
 21170                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 21171  002BD4  C04D  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21172  002BD8  C04E  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21173  002BDC  0E04               	movlw	4
 21174  002BDE  6EDF               	movwf	indf2,c
 21175                           
 21176                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 21177  002BE0  C04D  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21178  002BE4  C04E  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21179  002BE8  0E00               	movlw	0
 21180  002BEA  8EDB               	bsf	plusw2,7,c
 21181                           
 21182                           ;usb_device.c: 1926: }
 21183                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
 21184                           
 21185                           ;usb_device.c: 1915: {
 21186                           ;usb_device.c: 1921: outPipes[0].pFunc();
 21187  002BEC  9E36               	bcf	_outPipes+3,7,c	;volatile
 21188                           
 21189                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
 21190  002BEE  5053               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 21191  002BF0  A4D8               	btfss	status,2,c
 21192  002BF2  0012               	return	
 21193                           
 21194                           ;usb_device.c: 1942: {
 21195                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
 21196  002BF4  ECAB  F01A         	call	_USBCtrlEPAllowStatusStage	;wreg free
 21197  002BF8  0012               	return	
 21198  002BFA                     __end_of_USBCtrlTrfRxService:
 21199                           	opt stack 0
 21200                           pclatu	equ	0xFFB
 21201                           pclath	equ	0xFFA
 21202                           tblptru	equ	0xFF8
 21203                           tblptrh	equ	0xFF7
 21204                           tblptrl	equ	0xFF6
 21205                           tablat	equ	0xFF5
 21206                           prodh	equ	0xFF4
 21207                           prodl	equ	0xFF3
 21208                           intcon	equ	0xFF2
 21209                           indf0	equ	0xFEF
 21210                           postinc0	equ	0xFEE
 21211                           fsr0h	equ	0xFEA
 21212                           fsr0l	equ	0xFE9
 21213                           wreg	equ	0xFE8
 21214                           indf1	equ	0xFE7
 21215                           postdec1	equ	0xFE5
 21216                           fsr1h	equ	0xFE2
 21217                           fsr1l	equ	0xFE1
 21218                           indf2	equ	0xFDF
 21219                           postinc2	equ	0xFDE
 21220                           postdec2	equ	0xFDD
 21221                           plusw2	equ	0xFDB
 21222                           fsr2h	equ	0xFDA
 21223                           fsr2l	equ	0xFD9
 21224                           status	equ	0xFD8
 21225                           
 21226 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 21227 ;; Defined at:
 21228 ;;		line 1416 in file "../../../../microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 21229 ;; Parameters:    Size  Location     Type
 21230 ;;		None
 21231 ;; Auto vars:     Size  Location     Type
 21232 ;;		None
 21233 ;; Return value:  Size  Location     Type
 21234 ;;                  1    wreg      void 
 21235 ;; Registers used:
 21236 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21237 ;; Tracked objects:
 21238 ;;		On entry : 0/0
 21239 ;;		On exit  : 0/0
 21240 ;;		Unchanged: 0/0
 21241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21242 ;;      Params:         0       0       0       0       0       0       0       0       0
 21243 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21244 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21245 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21246 ;;Total ram usage:        0 bytes
 21247 ;; Hardware stack levels used:    1
 21248 ;; This function calls:
 21249 ;;		Nothing
 21250 ;; This function is called by:
 21251 ;;		_USBDeviceTasks
 21252 ;;		_USBCtrlEPServiceComplete
 21253 ;;		_USBCtrlTrfRxService
 21254 ;; This function uses a non-reentrant model
 21255 ;;
 21256                           
 21257                           	psect	text89
 21258  003556                     __ptext89:
 21259                           	opt stack 0
 21260  003556                     _USBCtrlEPAllowStatusStage:
 21261                           	opt stack 20
 21262                           
 21263                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
 21264                           
 21265                           ;incstack = 0
 21266  003556  0101               	movlb	1	; () banked
 21267  003558  51FA               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 21268  00355A  A4D8               	btfss	status,2,c
 21269  00355C  0012               	return	
 21270                           
 21271                           ; BSR set to: 1
 21272                           ;usb_device.c: 1424: {
 21273                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
 21274  00355E  0E01               	movlw	1
 21275  003560  6FFA               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 21276                           
 21277                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
 21278  003562  51F9               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 21279  003564  A4D8               	btfss	status,2,c
 21280  003566  0012               	return	
 21281                           
 21282                           ; BSR set to: 1
 21283                           ;usb_device.c: 1427: {
 21284                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
 21285  003568  0E01               	movlw	1
 21286  00356A  6FF9               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 21287                           
 21288                           ; BSR set to: 1
 21289                           ;usb_device.c: 1432: if(controlTransferState == 2)
 21290  00356C  0E02               	movlw	2
 21291  00356E  1856               	xorwf	_controlTransferState,w,c	;volatile
 21292  003570  A4D8               	btfss	status,2,c
 21293  003572  D015               	goto	i2l426
 21294                           
 21295                           ; BSR set to: 1
 21296                           ;usb_device.c: 1433: {
 21297                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
 21298  003574  EE20 F001          	lfsr	2,1
 21299  003578  5041               	movf	_pBDTEntryIn,w,c
 21300  00357A  26D9               	addwf	fsr2l,f,c
 21301  00357C  5042               	movf	_pBDTEntryIn+1,w,c
 21302  00357E  22DA               	addwfc	fsr2h,f,c
 21303  003580  0E00               	movlw	0
 21304  003582  6EDF               	movwf	indf2,c
 21305                           
 21306                           ; BSR set to: 1
 21307                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 21308  003584  C041  FFD9         	movff	_pBDTEntryIn,fsr2l
 21309  003588  C042  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21310  00358C  0E48               	movlw	72
 21311  00358E  6EDF               	movwf	indf2,c
 21312                           
 21313                           ; BSR set to: 1
 21314                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
 21315  003590  C041  FFD9         	movff	_pBDTEntryIn,fsr2l
 21316  003594  C042  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21317  003598  0E00               	movlw	0
 21318  00359A  8EDB               	bsf	plusw2,7,c
 21319                           
 21320                           ;usb_device.c: 1437: }
 21321  00359C  0012               	return	
 21322  00359E                     i2l426:
 21323                           
 21324                           ; BSR set to: 1
 21325                           ;usb_device.c: 1438: else if(controlTransferState == 1)
 21326                           
 21327                           ; BSR set to: 1
 21328  00359E  0456               	decf	_controlTransferState,w,c	;volatile
 21329  0035A0  A4D8               	btfss	status,2,c
 21330  0035A2  0012               	return	
 21331                           
 21332                           ; BSR set to: 1
 21333                           ;usb_device.c: 1439: {
 21334                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
 21335  0035A4  0E00               	movlw	0
 21336  0035A6  6FFB               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 21337                           
 21338                           ; BSR set to: 1
 21339                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
 21340  0035A8  EE20 F001          	lfsr	2,1
 21341  0035AC  504F               	movf	_pBDTEntryEP0OutCurrent,w,c
 21342  0035AE  26D9               	addwf	fsr2l,f,c
 21343  0035B0  5050               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 21344  0035B2  22DA               	addwfc	fsr2h,f,c
 21345  0035B4  0E08               	movlw	8
 21346  0035B6  6EDF               	movwf	indf2,c
 21347                           
 21348                           ; BSR set to: 1
 21349                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 21350  0035B8  EE20 F002          	lfsr	2,2
 21351  0035BC  504F               	movf	_pBDTEntryEP0OutCurrent,w,c
 21352  0035BE  26D9               	addwf	fsr2l,f,c
 21353  0035C0  5050               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 21354  0035C2  22DA               	addwfc	fsr2h,f,c
 21355  0035C4  0E30               	movlw	48
 21356  0035C6  6EDE               	movwf	postinc2,c
 21357  0035C8  0E04               	movlw	4
 21358  0035CA  6EDD               	movwf	postdec2,c
 21359                           
 21360                           ; BSR set to: 1
 21361                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 21362  0035CC  C04F  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 21363  0035D0  C050  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 21364  0035D4  0E04               	movlw	4
 21365  0035D6  6EDF               	movwf	indf2,c
 21366                           
 21367                           ; BSR set to: 1
 21368                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 21369  0035D8  C04F  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 21370  0035DC  C050  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 21371  0035E0  0E00               	movlw	0
 21372  0035E2  8EDB               	bsf	plusw2,7,c
 21373                           
 21374                           ; BSR set to: 1
 21375                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
 21376  0035E4  0E01               	movlw	1
 21377  0035E6  6FFB               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 21378                           
 21379                           ; BSR set to: 1
 21380                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
 21381  0035E8  EE20 F001          	lfsr	2,1
 21382  0035EC  504D               	movf	_pBDTEntryEP0OutNext,w,c
 21383  0035EE  26D9               	addwf	fsr2l,f,c
 21384  0035F0  504E               	movf	_pBDTEntryEP0OutNext+1,w,c
 21385  0035F2  22DA               	addwfc	fsr2h,f,c
 21386  0035F4  0E08               	movlw	8
 21387  0035F6  6EDF               	movwf	indf2,c
 21388                           
 21389                           ; BSR set to: 1
 21390                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 21391  0035F8  EE20 F002          	lfsr	2,2
 21392  0035FC  504D               	movf	_pBDTEntryEP0OutNext,w,c
 21393  0035FE  26D9               	addwf	fsr2l,f,c
 21394  003600  504E               	movf	_pBDTEntryEP0OutNext+1,w,c
 21395  003602  22DA               	addwfc	fsr2h,f,c
 21396  003604  0E30               	movlw	48
 21397  003606  6EDE               	movwf	postinc2,c
 21398  003608  0E04               	movlw	4
 21399  00360A  6EDD               	movwf	postdec2,c
 21400                           
 21401                           ; BSR set to: 1
 21402                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 21403  00360C  C04D  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21404  003610  C04E  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21405  003614  0E80               	movlw	128
 21406  003616  6EDF               	movwf	indf2,c
 21407                           
 21408                           ; BSR set to: 1
 21409                           
 21410                           ; BSR set to: 1
 21411                           
 21412                           ; BSR set to: 1
 21413  003618  0012               	return	
 21414  00361A                     __end_of_USBCtrlEPAllowStatusStage:
 21415                           	opt stack 0
 21416                           pclatu	equ	0xFFB
 21417                           pclath	equ	0xFFA
 21418                           tblptru	equ	0xFF8
 21419                           tblptrh	equ	0xFF7
 21420                           tblptrl	equ	0xFF6
 21421                           tablat	equ	0xFF5
 21422                           prodh	equ	0xFF4
 21423                           prodl	equ	0xFF3
 21424                           intcon	equ	0xFF2
 21425                           indf0	equ	0xFEF
 21426                           postinc0	equ	0xFEE
 21427                           fsr0h	equ	0xFEA
 21428                           fsr0l	equ	0xFE9
 21429                           wreg	equ	0xFE8
 21430                           indf1	equ	0xFE7
 21431                           postdec1	equ	0xFE5
 21432                           fsr1h	equ	0xFE2
 21433                           fsr1l	equ	0xFE1
 21434                           indf2	equ	0xFDF
 21435                           postinc2	equ	0xFDE
 21436                           postdec2	equ	0xFDD
 21437                           plusw2	equ	0xFDB
 21438                           fsr2h	equ	0xFDA
 21439                           fsr2l	equ	0xFD9
 21440                           status	equ	0xFD8
 21441                           
 21442 ;; *************** function _USBCtrlTrfInHandler *****************
 21443 ;; Defined at:
 21444 ;;		line 2592 in file "../../../../microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 21445 ;; Parameters:    Size  Location     Type
 21446 ;;		None
 21447 ;; Auto vars:     Size  Location     Type
 21448 ;;  lastDTS         1    1[COMRAM] unsigned char 
 21449 ;; Return value:  Size  Location     Type
 21450 ;;                  1    wreg      void 
 21451 ;; Registers used:
 21452 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21453 ;; Tracked objects:
 21454 ;;		On entry : 0/0
 21455 ;;		On exit  : 0/0
 21456 ;;		Unchanged: 0/0
 21457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21458 ;;      Params:         0       0       0       0       0       0       0       0       0
 21459 ;;      Locals:         1       0       0       0       0       0       0       0       0
 21460 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21461 ;;      Totals:         1       0       0       0       0       0       0       0       0
 21462 ;;Total ram usage:        1 bytes
 21463 ;; Hardware stack levels used:    1
 21464 ;; Hardware stack levels required when called:    1
 21465 ;; This function calls:
 21466 ;;		_USBCtrlTrfTxService
 21467 ;; This function is called by:
 21468 ;;		_USBCtrlEPService
 21469 ;; This function uses a non-reentrant model
 21470 ;;
 21471                           
 21472                           	psect	text90
 21473  00361A                     __ptext90:
 21474                           	opt stack 0
 21475  00361A                     _USBCtrlTrfInHandler:
 21476                           	opt stack 21
 21477                           
 21478                           ;usb_device.c: 2594: uint8_t lastDTS;
 21479                           ;usb_device.c: 2596: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 21480                           
 21481                           ; BSR set to: 1
 21482                           ;incstack = 0
 21483  00361A  C041  FFD9         	movff	_pBDTEntryIn,fsr2l
 21484  00361E  C042  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21485  003622  0E00               	movlw	0
 21486  003624  BCDF               	btfsc	indf2,6,c
 21487  003626  0E01               	movlw	1
 21488  003628  6E02               	movwf	USBCtrlTrfInHandler@lastDTS,c
 21489                           
 21490                           ;usb_device.c: 2599: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 21491  00362A  0E04               	movlw	4
 21492  00362C  1841               	xorwf	_pBDTEntryIn,w,c
 21493  00362E  6E41               	movwf	_pBDTEntryIn,c
 21494  003630  5042               	movf	_pBDTEntryIn+1,w,c
 21495  003632  6E42               	movwf	_pBDTEntryIn+1,c
 21496                           
 21497                           ;usb_device.c: 2604: if(USBDeviceState == ADR_PENDING_STATE)
 21498  003634  0E08               	movlw	8
 21499  003636  1858               	xorwf	_USBDeviceState,w,c	;volatile
 21500  003638  A4D8               	btfss	status,2,c
 21501  00363A  D00B               	goto	i2l553
 21502                           
 21503                           ;usb_device.c: 2605: {
 21504                           ;usb_device.c: 2606: UADDR = (SetupPkt.bDevADR & 0x7F);
 21505  00363C  0104               	movlb	4	; () banked
 21506  00363E  5132               	movf	50,w,b	;volatile
 21507  003640  0B7F               	andlw	127
 21508  003642  6E6E               	movwf	3950,c	;volatile
 21509                           
 21510                           ; BSR set to: 4
 21511                           ;usb_device.c: 2607: if(UADDR != 0u)
 21512  003644  506E               	movf	3950,w,c	;volatile
 21513  003646  B4D8               	btfsc	status,2,c
 21514  003648  D002               	goto	i2l552
 21515                           
 21516                           ; BSR set to: 4
 21517                           ;usb_device.c: 2608: {
 21518                           ;usb_device.c: 2609: USBDeviceState=ADDRESS_STATE;
 21519  00364A  0E10               	movlw	16
 21520  00364C  D001               	goto	L24
 21521  00364E                     i2l552:
 21522                           
 21523                           ; BSR set to: 4
 21524                           ;usb_device.c: 2611: else
 21525                           ;usb_device.c: 2612: {
 21526                           ;usb_device.c: 2613: USBDeviceState=DEFAULT_STATE;
 21527                           
 21528                           ; BSR set to: 4
 21529  00364E  0E04               	movlw	4
 21530  003650                     L24:
 21531  003650  6E58               	movwf	_USBDeviceState,c	;volatile
 21532  003652                     i2l553:
 21533                           
 21534                           ;usb_device.c: 2614: }
 21535                           ;usb_device.c: 2615: }
 21536                           ;usb_device.c: 2618: if(controlTransferState == 1)
 21537                           
 21538                           ; BSR set to: 4
 21539                           
 21540                           ; BSR set to: 4
 21541  003652  0456               	decf	_controlTransferState,w,c	;volatile
 21542  003654  A4D8               	btfss	status,2,c
 21543  003656  D03A               	goto	i2l554
 21544                           
 21545                           ;usb_device.c: 2619: {
 21546                           ;usb_device.c: 2620: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 21547  003658  EE20 F002          	lfsr	2,2
 21548  00365C  5041               	movf	_pBDTEntryIn,w,c
 21549  00365E  26D9               	addwf	fsr2l,f,c
 21550  003660  5042               	movf	_pBDTEntryIn+1,w,c
 21551  003662  22DA               	addwfc	fsr2h,f,c
 21552  003664  0E38               	movlw	56
 21553  003666  6EDE               	movwf	postinc2,c
 21554  003668  0E04               	movlw	4
 21555  00366A  6EDD               	movwf	postdec2,c
 21556                           
 21557                           ;usb_device.c: 2621: USBCtrlTrfTxService();
 21558  00366C  EC45  F01A         	call	_USBCtrlTrfTxService	;wreg free
 21559                           
 21560                           ;usb_device.c: 2627: if(shortPacketStatus == 2)
 21561  003670  0E02               	movlw	2
 21562  003672  1857               	xorwf	_shortPacketStatus,w,c	;volatile
 21563  003674  A4D8               	btfss	status,2,c
 21564  003676  D00D               	goto	i2l555
 21565                           
 21566                           ;usb_device.c: 2628: {
 21567                           ;usb_device.c: 2631: pBDTEntryIn[0]->STAT.Val = 0x04;
 21568  003678  C041  FFD9         	movff	_pBDTEntryIn,fsr2l
 21569  00367C  C042  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21570  003680  0E04               	movlw	4
 21571  003682  6EDF               	movwf	indf2,c
 21572                           
 21573                           ;usb_device.c: 2632: pBDTEntryIn[0]->STAT.Val |= 0x80;
 21574  003684  C041  FFD9         	movff	_pBDTEntryIn,fsr2l
 21575  003688  C042  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21576  00368C  0E00               	movlw	0
 21577  00368E  8EDB               	bsf	plusw2,7,c
 21578                           
 21579                           ;usb_device.c: 2633: }
 21580  003690  0012               	return	
 21581  003692                     i2l555:
 21582                           
 21583                           ;usb_device.c: 2634: else
 21584                           ;usb_device.c: 2635: {
 21585                           ;usb_device.c: 2636: if(lastDTS == 0)
 21586  003692  5002               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 21587  003694  A4D8               	btfss	status,2,c
 21588  003696  D00D               	goto	i2l557
 21589                           
 21590                           ;usb_device.c: 2637: {
 21591                           ;usb_device.c: 2638: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 21592  003698  C041  FFD9         	movff	_pBDTEntryIn,fsr2l
 21593  00369C  C042  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21594  0036A0  0E48               	movlw	72
 21595  0036A2  6EDF               	movwf	indf2,c
 21596                           
 21597                           ;usb_device.c: 2639: pBDTEntryIn[0]->STAT.Val |= 0x80;
 21598  0036A4  C041  FFD9         	movff	_pBDTEntryIn,fsr2l
 21599  0036A8  C042  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21600  0036AC  0E00               	movlw	0
 21601  0036AE  8EDB               	bsf	plusw2,7,c
 21602                           
 21603                           ;usb_device.c: 2640: }
 21604  0036B0  0012               	return	
 21605  0036B2                     i2l557:
 21606                           
 21607                           ;usb_device.c: 2641: else
 21608                           ;usb_device.c: 2642: {
 21609                           ;usb_device.c: 2643: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 21610  0036B2  C041  FFD9         	movff	_pBDTEntryIn,fsr2l
 21611  0036B6  C042  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21612  0036BA  0E08               	movlw	8
 21613  0036BC  6EDF               	movwf	indf2,c
 21614                           
 21615                           ;usb_device.c: 2644: pBDTEntryIn[0]->STAT.Val |= 0x80;
 21616  0036BE  C041  FFD9         	movff	_pBDTEntryIn,fsr2l
 21617  0036C2  C042  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21618  0036C6  0E00               	movlw	0
 21619  0036C8  8EDB               	bsf	plusw2,7,c
 21620                           
 21621                           ;usb_device.c: 2645: }
 21622                           ;usb_device.c: 2646: }
 21623                           ;usb_device.c: 2647: }
 21624  0036CA  0012               	return	
 21625  0036CC                     i2l554:
 21626                           
 21627                           ;usb_device.c: 2648: else
 21628                           ;usb_device.c: 2649: {
 21629                           ;usb_device.c: 2653: if(outPipes[0].info.bits.busy == 1)
 21630  0036CC  BE36               	btfsc	_outPipes+3,7,c	;volatile
 21631                           
 21632                           ;usb_device.c: 2658: }
 21633                           ;usb_device.c: 2659: outPipes[0].info.bits.busy = 0;
 21634                           
 21635                           ;usb_device.c: 2656: {
 21636                           ;usb_device.c: 2657: outPipes[0].pFunc();
 21637  0036CE  9E36               	bcf	_outPipes+3,7,c	;volatile
 21638                           
 21639                           ;usb_device.c: 2660: }
 21640                           ;usb_device.c: 2662: controlTransferState = 0;
 21641  0036D0  0E00               	movlw	0
 21642  0036D2  6E56               	movwf	_controlTransferState,c	;volatile
 21643  0036D4  0012               	return	
 21644  0036D6                     __end_of_USBCtrlTrfInHandler:
 21645                           	opt stack 0
 21646                           pclatu	equ	0xFFB
 21647                           pclath	equ	0xFFA
 21648                           tblptru	equ	0xFF8
 21649                           tblptrh	equ	0xFF7
 21650                           tblptrl	equ	0xFF6
 21651                           tablat	equ	0xFF5
 21652                           prodh	equ	0xFF4
 21653                           prodl	equ	0xFF3
 21654                           intcon	equ	0xFF2
 21655                           indf0	equ	0xFEF
 21656                           postinc0	equ	0xFEE
 21657                           fsr0h	equ	0xFEA
 21658                           fsr0l	equ	0xFE9
 21659                           wreg	equ	0xFE8
 21660                           indf1	equ	0xFE7
 21661                           postdec1	equ	0xFE5
 21662                           fsr1h	equ	0xFE2
 21663                           fsr1l	equ	0xFE1
 21664                           indf2	equ	0xFDF
 21665                           postinc2	equ	0xFDE
 21666                           postdec2	equ	0xFDD
 21667                           plusw2	equ	0xFDB
 21668                           fsr2h	equ	0xFDA
 21669                           fsr2l	equ	0xFD9
 21670                           status	equ	0xFD8
 21671                           
 21672 ;; *************** function _USBCtrlTrfTxService *****************
 21673 ;; Defined at:
 21674 ;;		line 1771 in file "../../../../microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 21675 ;; Parameters:    Size  Location     Type
 21676 ;;		None
 21677 ;; Auto vars:     Size  Location     Type
 21678 ;;  byteToSend      1    0[COMRAM] unsigned char 
 21679 ;; Return value:  Size  Location     Type
 21680 ;;                  1    wreg      void 
 21681 ;; Registers used:
 21682 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 21683 ;; Tracked objects:
 21684 ;;		On entry : 0/0
 21685 ;;		On exit  : 0/0
 21686 ;;		Unchanged: 0/0
 21687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21688 ;;      Params:         0       0       0       0       0       0       0       0       0
 21689 ;;      Locals:         1       0       0       0       0       0       0       0       0
 21690 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21691 ;;      Totals:         1       0       0       0       0       0       0       0       0
 21692 ;;Total ram usage:        1 bytes
 21693 ;; Hardware stack levels used:    1
 21694 ;; This function calls:
 21695 ;;		Nothing
 21696 ;; This function is called by:
 21697 ;;		_USBCtrlEPAllowDataStage
 21698 ;;		_USBCtrlTrfInHandler
 21699 ;; This function uses a non-reentrant model
 21700 ;;
 21701                           
 21702                           	psect	text91
 21703  00348A                     __ptext91:
 21704                           	opt stack 0
 21705  00348A                     _USBCtrlTrfTxService:
 21706                           	opt stack 19
 21707                           
 21708                           ;usb_device.c: 1773: uint8_t byteToSend;
 21709                           ;usb_device.c: 1777: byteToSend = 8;
 21710                           
 21711                           ;incstack = 0
 21712  00348A  0E08               	movlw	8
 21713  00348C  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 21714                           
 21715                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
 21716  00348E  5040               	movf	_inPipes+5,w,c	;volatile
 21717  003490  E110               	bnz	i2l6815
 21718  003492  0E08               	movlw	8
 21719  003494  5C3F               	subwf	_inPipes+4,w,c	;volatile
 21720  003496  B0D8               	btfsc	status,0,c
 21721  003498  D00C               	goto	i2l459
 21722                           
 21723                           ;usb_device.c: 1779: {
 21724                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
 21725  00349A  C03F  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 21726                           
 21727                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
 21728  00349E  5057               	movf	_shortPacketStatus,w,c	;volatile
 21729  0034A0  A4D8               	btfss	status,2,c
 21730  0034A2  D002               	goto	i2l457
 21731                           
 21732                           ;usb_device.c: 1788: {
 21733                           ;usb_device.c: 1789: shortPacketStatus = 1;
 21734  0034A4  0E01               	movlw	1
 21735  0034A6  D004               	goto	L25
 21736  0034A8                     i2l457:
 21737                           
 21738                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
 21739  0034A8  0457               	decf	_shortPacketStatus,w,c	;volatile
 21740  0034AA  A4D8               	btfss	status,2,c
 21741  0034AC  D002               	goto	i2l459
 21742                           
 21743                           ;usb_device.c: 1792: {
 21744                           ;usb_device.c: 1793: shortPacketStatus = 2;
 21745  0034AE  0E02               	movlw	2
 21746  0034B0                     L25:
 21747  0034B0  6E57               	movwf	_shortPacketStatus,c	;volatile
 21748  0034B2                     i2l459:
 21749  0034B2                     i2l6815:
 21750                           
 21751                           ;usb_device.c: 1794: }
 21752                           ;usb_device.c: 1795: }
 21753                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
 21754  0034B2  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 21755  0034B4  5E3F               	subwf	_inPipes+4,f,c	;volatile
 21756  0034B6  0E00               	movlw	0
 21757  0034B8  5A40               	subwfb	_inPipes+5,f,c	;volatile
 21758                           
 21759                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
 21760  0034BA  EE20 F001          	lfsr	2,1
 21761  0034BE  5041               	movf	_pBDTEntryIn,w,c
 21762  0034C0  26D9               	addwf	fsr2l,f,c
 21763  0034C2  5042               	movf	_pBDTEntryIn+1,w,c
 21764  0034C4  22DA               	addwfc	fsr2h,f,c
 21765  0034C6  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 21766                           
 21767                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
 21768  0034CA  0E38               	movlw	56
 21769  0034CC  0102               	movlb	2	; () banked
 21770  0034CE  6F46               	movwf	_pDst& (0+255),b
 21771  0034D0  0E04               	movlw	4
 21772  0034D2  6F47               	movwf	(_pDst+1)& (0+255),b
 21773                           
 21774                           ; BSR set to: 2
 21775                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 21776  0034D4  A03E               	btfss	_inPipes+3,0,c	;volatile
 21777  0034D6  D01C               	goto	i2l461
 21778  0034D8  D03A               	goto	i2l465
 21779  0034DA                     
 21780                           ; BSR set to: 2
 21781                           ;usb_device.c: 1812: {
 21782                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
 21783                           
 21784                           ; BSR set to: 2
 21785  0034DA  C03B  FFF6         	movff	_inPipes,tblptrl	;volatile
 21786  0034DE  C03C  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 21787  0034E2  6AF8               	clrf	tblptru,c
 21788  0034E4  C246  FFD9         	movff	_pDst,fsr2l
 21789  0034E8  C247  FFDA         	movff	_pDst+1,fsr2h
 21790  0034EC  0E07               	movlw	(high __ramtop+-1)
 21791  0034EE  64F7               	cpfsgt	tblptrh,c
 21792  0034F0  D003               	bra	i2u490_47
 21793  0034F2  0008               	tblrd		*
 21794  0034F4  50F5               	movf	tablat,w,c
 21795  0034F6  D005               	bra	i2u490_40
 21796  0034F8                     i2u490_47:
 21797  0034F8  CFF6 FFE9          	movff	tblptrl,fsr0l
 21798  0034FC  CFF7 FFEA          	movff	tblptrh,fsr0h
 21799  003500  50EF               	movf	indf0,w,c
 21800  003502                     i2u490_40:
 21801  003502  6EDF               	movwf	indf2,c
 21802  003504  4A3B               	infsnz	_inPipes,f,c	;volatile
 21803  003506  2A3C               	incf	_inPipes+1,f,c	;volatile
 21804  003508  0102               	movlb	2	; () banked
 21805  00350A  4B46               	infsnz	_pDst& (0+255),f,b
 21806  00350C  2B47               	incf	(_pDst+1)& (0+255),f,b
 21807                           
 21808                           ; BSR set to: 2
 21809                           ;usb_device.c: 1814: byteToSend--;
 21810  00350E  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 21811  003510                     i2l461:
 21812                           
 21813                           ; BSR set to: 2
 21814                           
 21815                           ; BSR set to: 2
 21816  003510  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 21817  003512  B4D8               	btfsc	status,2,c
 21818  003514  0012               	return	
 21819  003516  D7E1               	goto	i2l462
 21820  003518                     
 21821                           ; BSR set to: 2
 21822                           ;usb_device.c: 1820: {
 21823                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
 21824                           
 21825                           ; BSR set to: 2
 21826  003518  C03B  FFF6         	movff	_inPipes,tblptrl	;volatile
 21827  00351C  C03C  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 21828  003520  6AF8               	clrf	tblptru,c
 21829  003522  C246  FFD9         	movff	_pDst,fsr2l
 21830  003526  C247  FFDA         	movff	_pDst+1,fsr2h
 21831  00352A  0E07               	movlw	(high __ramtop+-1)
 21832  00352C  64F7               	cpfsgt	tblptrh,c
 21833  00352E  D003               	bra	i2u492_47
 21834  003530  0008               	tblrd		*
 21835  003532  50F5               	movf	tablat,w,c
 21836  003534  D005               	bra	i2u492_40
 21837  003536                     i2u492_47:
 21838  003536  CFF6 FFE9          	movff	tblptrl,fsr0l
 21839  00353A  CFF7 FFEA          	movff	tblptrh,fsr0h
 21840  00353E  50EF               	movf	indf0,w,c
 21841  003540                     i2u492_40:
 21842  003540  6EDF               	movwf	indf2,c
 21843  003542  4A3B               	infsnz	_inPipes,f,c	;volatile
 21844  003544  2A3C               	incf	_inPipes+1,f,c	;volatile
 21845  003546  0102               	movlb	2	; () banked
 21846  003548  4B46               	infsnz	_pDst& (0+255),f,b
 21847  00354A  2B47               	incf	(_pDst+1)& (0+255),f,b
 21848                           
 21849                           ; BSR set to: 2
 21850                           ;usb_device.c: 1822: byteToSend--;
 21851  00354C  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 21852  00354E                     i2l465:
 21853                           
 21854                           ; BSR set to: 2
 21855                           
 21856                           ; BSR set to: 2
 21857  00354E  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 21858  003550  B4D8               	btfsc	status,2,c
 21859  003552  0012               	return	
 21860  003554  D7E1               	goto	i2l466
 21861  003556                     __end_of_USBCtrlTrfTxService:
 21862                           	opt stack 0
 21863                           pclatu	equ	0xFFB
 21864                           pclath	equ	0xFFA
 21865                           tblptru	equ	0xFF8
 21866                           tblptrh	equ	0xFF7
 21867                           tblptrl	equ	0xFF6
 21868                           tablat	equ	0xFF5
 21869                           prodh	equ	0xFF4
 21870                           prodl	equ	0xFF3
 21871                           intcon	equ	0xFF2
 21872                           indf0	equ	0xFEF
 21873                           postinc0	equ	0xFEE
 21874                           fsr0h	equ	0xFEA
 21875                           fsr0l	equ	0xFE9
 21876                           wreg	equ	0xFE8
 21877                           indf1	equ	0xFE7
 21878                           postdec1	equ	0xFE5
 21879                           fsr1h	equ	0xFE2
 21880                           fsr1l	equ	0xFE1
 21881                           indf2	equ	0xFDF
 21882                           postinc2	equ	0xFDE
 21883                           postdec2	equ	0xFDD
 21884                           plusw2	equ	0xFDB
 21885                           fsr2h	equ	0xFDA
 21886                           fsr2l	equ	0xFD9
 21887                           status	equ	0xFD8
 21888                           pclatu	equ	0xFFB
 21889                           pclath	equ	0xFFA
 21890                           tblptru	equ	0xFF8
 21891                           tblptrh	equ	0xFF7
 21892                           tblptrl	equ	0xFF6
 21893                           tablat	equ	0xFF5
 21894                           prodh	equ	0xFF4
 21895                           prodl	equ	0xFF3
 21896                           intcon	equ	0xFF2
 21897                           indf0	equ	0xFEF
 21898                           postinc0	equ	0xFEE
 21899                           fsr0h	equ	0xFEA
 21900                           fsr0l	equ	0xFE9
 21901                           wreg	equ	0xFE8
 21902                           indf1	equ	0xFE7
 21903                           postdec1	equ	0xFE5
 21904                           fsr1h	equ	0xFE2
 21905                           fsr1l	equ	0xFE1
 21906                           indf2	equ	0xFDF
 21907                           postinc2	equ	0xFDE
 21908                           postdec2	equ	0xFDD
 21909                           plusw2	equ	0xFDB
 21910                           fsr2h	equ	0xFDA
 21911                           fsr2l	equ	0xFD9
 21912                           status	equ	0xFD8
 21913                           
 21914                           	psect	rparam
 21915  0000                     pclatu	equ	0xFFB
 21916                           pclath	equ	0xFFA
 21917                           tblptru	equ	0xFF8
 21918                           tblptrh	equ	0xFF7
 21919                           tblptrl	equ	0xFF6
 21920                           tablat	equ	0xFF5
 21921                           prodh	equ	0xFF4
 21922                           prodl	equ	0xFF3
 21923                           intcon	equ	0xFF2
 21924                           indf0	equ	0xFEF
 21925                           postinc0	equ	0xFEE
 21926                           fsr0h	equ	0xFEA
 21927                           fsr0l	equ	0xFE9
 21928                           wreg	equ	0xFE8
 21929                           indf1	equ	0xFE7
 21930                           postdec1	equ	0xFE5
 21931                           fsr1h	equ	0xFE2
 21932                           fsr1l	equ	0xFE1
 21933                           indf2	equ	0xFDF
 21934                           postinc2	equ	0xFDE
 21935                           postdec2	equ	0xFDD
 21936                           plusw2	equ	0xFDB
 21937                           fsr2h	equ	0xFDA
 21938                           fsr2l	equ	0xFD9
 21939                           status	equ	0xFD8
 21940                           
 21941                           	psect	temp
 21942  00005F                     btemp:
 21943                           	opt stack 0
 21944  00005F                     	ds	1
 21945  0000                     int$flags	set	btemp
 21946  0000                     wtemp6	set	btemp+1
 21947                           pclatu	equ	0xFFB
 21948                           pclath	equ	0xFFA
 21949                           tblptru	equ	0xFF8
 21950                           tblptrh	equ	0xFF7
 21951                           tblptrl	equ	0xFF6
 21952                           tablat	equ	0xFF5
 21953                           prodh	equ	0xFF4
 21954                           prodl	equ	0xFF3
 21955                           intcon	equ	0xFF2
 21956                           indf0	equ	0xFEF
 21957                           postinc0	equ	0xFEE
 21958                           fsr0h	equ	0xFEA
 21959                           fsr0l	equ	0xFE9
 21960                           wreg	equ	0xFE8
 21961                           indf1	equ	0xFE7
 21962                           postdec1	equ	0xFE5
 21963                           fsr1h	equ	0xFE2
 21964                           fsr1l	equ	0xFE1
 21965                           indf2	equ	0xFDF
 21966                           postinc2	equ	0xFDE
 21967                           postdec2	equ	0xFDD
 21968                           plusw2	equ	0xFDB
 21969                           fsr2h	equ	0xFDA
 21970                           fsr2l	equ	0xFD9
 21971                           status	equ	0xFD8


Data Sizes:
    Strings     265
    Constant    677
    Data        35
    BSS         951
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     50      94
    BANK0           160    160     160
    BANK1           256    238     256
    BANK2           256      0     254
    BANK3           256      0     220
    BANK4           192      0     100
    BANK5           128      0       0
    BANK6           256      0     200
    BANK7           256      0     150

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMl[48]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_19(CODE[16]), STR_18(CODE[7]), STR_17(CODE[14]), STR_16(CODE[8]), 
		 -> STR_15(CODE[8]), STR_14(CODE[10]), STR_13(CODE[17]), STR_12(CODE[11]), 
		 -> STR_11(CODE[5]), STR_10(CODE[32]), STR_9(CODE[7]), STR_8(CODE[11]), 
		 -> STR_7(CODE[11]), STR_6(CODE[14]), STR_5(CODE[3]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 100
		 -> recebeByteLoRaWan@frameData(BANK3[100]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 200
		 -> recebeByteLoRaWan@frameData(BANK3[100]), SYS(CODE[5]), MAC(CODE[5]), TxLoRaWan@comando(BANK1[200]), 
		 -> SetChannelLoRaWan@comando(BANK1[200]), MAC_JOIN_OTAA(CODE[10]), SYS_RESET(CODE[6]), STR_19(CODE[16]), 
		 -> STR_18(CODE[7]), STR_17(CODE[14]), STR_16(CODE[8]), STR_15(CODE[8]), 
		 -> STR_14(CODE[10]), STR_13(CODE[17]), STR_12(CODE[11]), STR_11(CODE[5]), 
		 -> STR_10(CODE[32]), STR_9(CODE[7]), STR_8(CODE[11]), STR_7(CODE[11]), 
		 -> STR_6(CODE[14]), STR_5(CODE[3]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 200
		 -> recebeByteLoRaWan@frameData(BANK3[100]), SYS(CODE[5]), MAC(CODE[5]), TxLoRaWan@comando(BANK1[200]), 
		 -> SetChannelLoRaWan@comando(BANK1[200]), MAC_JOIN_OTAA(CODE[10]), SYS_RESET(CODE[6]), STR_19(CODE[16]), 
		 -> STR_18(CODE[7]), STR_17(CODE[14]), STR_16(CODE[8]), STR_15(CODE[8]), 
		 -> STR_14(CODE[10]), STR_13(CODE[17]), STR_12(CODE[11]), STR_11(CODE[5]), 
		 -> STR_10(CODE[32]), STR_9(CODE[7]), STR_8(CODE[11]), STR_7(CODE[11]), 
		 -> STR_6(CODE[14]), STR_5(CODE[3]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 100
		 -> recebeByteLoRaWan@frameData(BANK3[100]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 200
		 -> frameBuffer(BANK6[200]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 200
		 -> frameBuffer(BANK6[200]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_19(CODE[16]), STR_18(CODE[7]), STR_17(CODE[14]), STR_16(CODE[8]), 
		 -> STR_15(CODE[8]), STR_14(CODE[10]), STR_13(CODE[17]), STR_12(CODE[11]), 
		 -> STR_11(CODE[5]), STR_10(CODE[32]), STR_9(CODE[7]), STR_8(CODE[11]), 
		 -> STR_7(CODE[11]), STR_6(CODE[14]), STR_5(CODE[3]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 100
		 -> recebeByteLoRaWan@frameData(BANK3[100]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 30
		 -> TxLoRaWan@hex(BANK1[4]), addSensorFloat@f(COMRAM[30]), addSensorInt@f(COMRAM[30]), addSensorStr@f(COMRAM[30]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 200
		 -> TxLoRaWan@comando(BANK1[200]), frameBuffer(BANK6[200]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 200
		 -> TxLoRaWan@comando(BANK1[200]), frameBuffer(BANK6[200]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 100
		 -> receivePacket(BANK3[100]), response(BANK2[100]), SetupPkt(BIGRAMhl[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 100
		 -> receivePacket(BANK3[100]), response(BANK2[100]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 2047
		 -> recebeByte@frameData(BANK4[100]), CtrlTrfData(BIGRAMhl[8]), RAM(DATA[2047]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 2047
		 -> recebeByte@frameData(BANK4[100]), CtrlTrfData(BIGRAMhl[8]), RAM(DATA[2047]), SetupPkt(BIGRAMhl[8]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_25(CODE[7]), MAC_TX_UNCNF(CODE[9]), MAC_TX_CNF(CODE[7]), MAC_SET_CH_STATUS(CODE[14]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_24(CODE[5]), STR_23(CODE[7]), STR_22(CODE[7]), STR_21(CODE[10]), 
		 -> STR_20(CODE[9]), STR_4(CODE[7]), STR_3(CODE[8]), STR_2(CODE[7]), 
		 -> STR_1(CODE[17]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 200
		 -> TxLoRaWan@hex(BANK1[4]), TxLoRaWan@comando(BANK1[200]), SetChannelLoRaWan@comando(BANK1[200]), addSensorFloat@f(COMRAM[30]), 
		 -> addSensorInt@f(COMRAM[30]), addSensorStr@f(COMRAM[30]), frameBuffer(BANK6[200]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 200
		 -> frameBuffer(BANK6[200]), 

    enviaComando@cmd	PTR const unsigned char  size(2) Largest target is 200
		 -> TxLoRaWan@comando(BANK1[200]), SetChannelLoRaWan@comando(BANK1[200]), MAC_JOIN_OTAA(CODE[10]), SYS_RESET(CODE[6]), 

    TxLoRaWan@data	PTR const unsigned char  size(2) Largest target is 9
		 -> main@dadoPoco(BANK1[9]), 

    MSG_LORAWAN	PTR const unsigned char [15] size(2) Largest target is 32
		 -> STR_19(CODE[16]), STR_18(CODE[7]), STR_17(CODE[14]), STR_16(CODE[8]), 
		 -> STR_15(CODE[8]), STR_14(CODE[10]), STR_13(CODE[17]), STR_12(CODE[11]), 
		 -> STR_11(CODE[5]), STR_10(CODE[32]), STR_9(CODE[7]), STR_8(CODE[11]), 
		 -> STR_7(CODE[11]), STR_6(CODE[14]), STR_5(CODE[3]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 200
		 -> TxLoRaWan@comando(BANK1[200]), frameBuffer(BANK6[200]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S2337_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S2337_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S2337_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S2337_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 100
		 -> receivePacket(BANK3[100]), response(BANK2[100]), SetupPkt(BIGRAMhl[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BIGRAMhl[64]), cdc_data_rx(BIGRAMhh[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S516$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S506$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S506$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S482$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S482$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S482$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S482$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _SYS_InterruptHigh in COMRAM

    _SYS_InterruptHigh->_USBDeviceTasks
    _recebeByteLoRaWan->_strncmp
    _converter->_toupper
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    _main->_TxLoRaWan
    _setup_uart->___lldiv
    _leMedidas->___lldiv
    _le4a20->___ftdiv
    ___lbtoft->___ftpack
    ___ftdiv->___ftmul
    _inicializaVariaveis->_retornaDadosEeprom
    _retornaDadosEeprom->_crc8
    _delay->_gravaDadosEeprom
    _verificaUSB->_CDCTxService
    _CDCTxService->_USBTransferOnePacket
    _gravaDadosEeprom->___llmod
    _writeEeprom->_readEeprom
    _USBDeviceInit->_memset
    _TxLoRaWan->_sprintf
    _sprintf->___fttol
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___ftadd
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->_le4a20
    ___ftsub->___ftadd
    ___ftadd->___wmul
    _ResetModuloLoRaWan->_enviaComando
    _JoinLoRaWan->_enviaComando
    _enviaComando->_parseLoRaWan
    _parseLoRaWan->_millis

Critical Paths under _SYS_InterruptHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_TxLoRaWan

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _SYS_InterruptHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _SYS_InterruptHigh in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                35    35      0  133164
                                            156 BANK0      4     4      0
                                            207 BANK1     31    31      0
                        _JoinLoRaWan
                          _TxLoRaWan
                      _USBDeviceInit
                            ___ftmul
                            ___fttol
                              _delay
                _inicializaVariaveis
                             _le4a20
                          _leMedidas
                             _millis
                              _putch
                           _setup_AD
                         _setup_ccp1
                         _setup_uart
                        _verificaUSB
 ---------------------------------------------------------------------------------
 (1) _setup_uart                                           8     4      4    1587
                                             13 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (1) _setup_ccp1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup_AD                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _leMedidas                                            0     0      0    1408
                            ___lldiv
 ---------------------------------------------------------------------------------
 (1) _le4a20                                              26    23      3   21059
                                             62 BANK0     26    23      3
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                           ___lbtoft
                           ___lltoft
                               _leAD
                             _millis
 ---------------------------------------------------------------------------------
 (2) _leAD                                                12    10      2     117
                                              0 BANK0     12    10      2
 ---------------------------------------------------------------------------------
 (2) ___lbtoft                                             4     1      3    2956
                                              8 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    3722
                                             47 BANK0     15     9      6
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (1) _inicializaVariaveis                                  1     1      0    1042
                                             36 BANK0      1     1      0
                 _retornaDadosEeprom
 ---------------------------------------------------------------------------------
 (2) _retornaDadosEeprom                                  32    32      0    1042
                                              4 BANK0     32    32      0
                               _crc8
                         _readEeprom
 ---------------------------------------------------------------------------------
 (1) _delay                                               16    12      4    4594
                                             39 BANK0     16    12      4
                   _gravaDadosEeprom
                             _millis
                        _verificaUSB
 ---------------------------------------------------------------------------------
 (1) _verificaUSB                                          0     0      0    1770
                       _CDCTxService
                    _USBDeviceAttach
                    _USBDeviceDetach
 ---------------------------------------------------------------------------------
 (2) _USBDeviceDetach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CDCTxService                                         2     2      0    1770
                                             11 BANK0      2     2      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBTransferOnePacket                                11     7      4    1633
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 (2) _gravaDadosEeprom                                    17    17      0    2667
                                             22 BANK0     17    17      0
                            ___llmod
                               _crc8
                      _leBombaLigada
                        _leHorimetro
                          _le_pulsos
                        _writeEeprom
 ---------------------------------------------------------------------------------
 (3) _writeEeprom                                          3     2      1     400
                                              1 BANK0      3     2      1
                         _readEeprom
 ---------------------------------------------------------------------------------
 (3) _readEeprom                                           1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _le_pulsos                                            8     4      4      23
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _leHorimetro                                          8     4      4      23
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _leBombaLigada                                        1     1      0      23
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _crc8                                                 4     3      1     423
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1132
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     930
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _TxLoRaWan                                          212   208      4   91362
                                            151 BANK0      5     1      4
                                              0 BANK1    207   207      0
                        _JoinLoRaWan
                 _ResetModuloLoRaWan
                       _enviaComando
                       _parseLoRaWan
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (2) _strcat                                               6     2      4     810
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             49    37     12   84623
                                            103 BANK0     48    36     12
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                                7     4      3   21426
                                             47 BANK0      7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              10     7      3   21228
                                             47 BANK0     10     7      3
                            ___awdiv
                            ___awmod
                            ___ftadd (ARG)
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4   10745
                                             14 BANK0      6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    6260
                                             32 BANK0     15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___ftadd (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1898
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    2080
                                              6 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         15     9      6     481
                                              0 BANK0     15     9      6
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          12     6      6     624
                                              0 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             9     5      4    3181
                                              8 BANK0      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8    1227
                                             13 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8    1408
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     608
                                             88 BANK0     15    11      4
                            ___ftmul (ARG)
                             _le4a20 (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftsub                                              6     0      6    5035
                                             32 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    4638
                                             20 BANK0     12     6      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2934
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3     134
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     670
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (2) _ResetModuloLoRaWan                                   1     1      0    1687
                                             39 BANK0      1     1      0
                       _enviaComando
 ---------------------------------------------------------------------------------
 (2) _JoinLoRaWan                                          1     1      0    1804
                                             39 BANK0      1     1      0
                       _enviaComando
                       _parseLoRaWan
 ---------------------------------------------------------------------------------
 (2) _enviaComando                                        11     8      3    1664
                                             28 BANK0     11     8      3
                    _initRecebeDados
                       _parseLoRaWan
                              _putch
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               6     4      2     609
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _putch                                                1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _parseLoRaWan                                        20    20      0     117
                                              8 BANK0     20    20      0
                             _millis
 ---------------------------------------------------------------------------------
 (1) _millis                                               8     4      4      23
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _initRecebeDados                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _SYS_InterruptHigh                                   22    22      0   33203
                                             28 COMRAM    22    22      0
                     _USBDeviceTasks
                              _getch
                  _recebeByteLoRaWan
 ---------------------------------------------------------------------------------
 (7) _recebeByteLoRaWan                                   10    10      0    2467
                                              9 COMRAM    10    10      0
                          _converter
                             _strcmp
                             _strcpy
                            _strncmp
                           i2_strlen
 ---------------------------------------------------------------------------------
 (8) i2_strlen                                             6     4      2     194
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) _strncmp                                              9     3      6     668
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (8) _strcpy                                               6     2      4     253
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) _strcmp                                               6     2      4     269
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) _converter                                            5     4      1     675
                                              1 COMRAM     5     4      1
                            _toupper
 ---------------------------------------------------------------------------------
 (9) _toupper                                              1     1      0      67
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _getch                                                3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (7) _USBDeviceTasks                                       1     1      0   30623
                                             27 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (8) i2_USBDeviceInit                                      1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (8) _USBWakeFromSuspend                                   0     0      0    3879
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBSuspend                                           0     0      0    3879
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBStallHandler                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPService                                     1     1      0   18330
                                             26 COMRAM     1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (9) _memcpy                                              11     5      6    1478
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfSetupHandler                               0     0      0   16623
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (10) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (11) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (10) _USBCheckStdRequest                                  0     0      0   12652
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (11) _USBStdSetCfgHandler                                 1     1      0    4377
                                             20 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (9) i2_memset                                             8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (11) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (11) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (11) _USBStdFeatureReqHandler                             6     6      0    4350
                                             20 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6    3879
                                             12 COMRAM     8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (9) _USBCheckCDCRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _CDCInitEP                                            0     0      0    1187
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (10) i2_USBTransferOnePacket                             11     7      4     454
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (10) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (11) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfOutHandler                                 0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (10) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (11) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfInHandler                                  1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (12) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _JoinLoRaWan
     _enviaComando
       _initRecebeDados
       _parseLoRaWan
         _millis
       _putch
       _strlen
     _parseLoRaWan
       _millis
   _TxLoRaWan
     _JoinLoRaWan
       _enviaComando
         _initRecebeDados
         _parseLoRaWan
           _millis
         _putch
         _strlen
       _parseLoRaWan
         _millis
     _ResetModuloLoRaWan
       _enviaComando
         _initRecebeDados
         _parseLoRaWan
           _millis
         _putch
         _strlen
     _enviaComando
       _initRecebeDados
       _parseLoRaWan
         _millis
       _putch
       _strlen
     _parseLoRaWan
       _millis
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _le4a20 (ARG)
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___lltoft (ARG)
               ___ftpack
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lbtoft
             ___ftpack
           ___lltoft
             ___ftpack
           _leAD
           _millis
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     _strcat
   _USBDeviceInit
     _memset
   ___ftmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___ftadd (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftpack (ARG)
     ___wmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
   ___fttol
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftadd (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _le4a20 (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftdiv
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lltoft (ARG)
           ___ftpack
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___lbtoft
         ___ftpack
       ___lltoft
         ___ftpack
       _leAD
       _millis
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   _delay
     _gravaDadosEeprom
       ___llmod
         ___lldiv (ARG)
       _crc8
       _leBombaLigada
       _leHorimetro
       _le_pulsos
       _writeEeprom
         _readEeprom
     _millis
     _verificaUSB
       _CDCTxService
         _USBTransferOnePacket
       _USBDeviceAttach
       _USBDeviceDetach
   _inicializaVariaveis
     _retornaDadosEeprom
       _crc8
       _readEeprom
   _le4a20
     ___ftadd
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftdiv
       ___ftadd (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lltoft (ARG)
         ___ftpack
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftadd (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___lbtoft
       ___ftpack
     ___lltoft
       ___ftpack
     _leAD
     _millis
   _leMedidas
     ___lldiv
   _millis
   _putch
   _setup_AD
   _setup_ccp1
   _setup_uart
     ___lldiv
   _verificaUSB
     _CDCTxService
       _USBTransferOnePacket
     _USBDeviceAttach
     _USBDeviceDetach

 _SYS_InterruptHigh (ROOT)
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _USBCheckCDCRequest
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _USBCheckCDCRequest
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _USBCheckCDCRequest
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _memcpy
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _USBCheckCDCRequest
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _USBCheckCDCRequest
     _USER_USB_CALLBACK_EVENT_HANDLER
       _CDCInitEP
         _USBEnableEndpoint
           _USBConfigureEndpoint
         i2_USBTransferOnePacket
       _USBCheckCDCRequest
     i2_USBDeviceInit
       i2_memset
   _getch
   _recebeByteLoRaWan
     _converter
       _toupper
     _strcmp
     _strcpy
     _strncmp
     i2_strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            3FF      0       0      23        0.0%
BIGRAMhh           280      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0      96      20       58.6%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0      C8      18       78.1%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      DC      11       85.9%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      FE       9       99.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100     EE     100       7      100.0%
BIGRAMhl            C0      0       0      22        0.0%
BITBANK4            C0      0       0      12        0.0%
BANK4               C0      0      64      13       52.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     A0      A0       5      100.0%
BITBANK5            80      0       0      14        0.0%
BANK5               80      0       0      15        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     32      5E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     59A      16        0.0%
DATA                 0      0     59A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Wed Jun 06 13:52:07 2018

                              _USB_SD_Ptr 7DE7                              ___awdiv@sign 006B  
                             __CFG_BOR$ON 000000                                        _cs 0257  
                recebeByte@estadoRecepcao 0259                             _USBDeviceInit 2180  
                     ___wmul@multiplicand 0070                               __CFG_BORV$0 000000  
                      __size_of_CDCInitEP 0066                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                        _retornaDadosEeprom 1998  
                            ___ftadd@exp1 007F                              ___ftadd@exp2 007E  
    USER_USB_CALLBACK_EVENT_HANDLER@event 000D      USER_USB_CALLBACK_EVENT_HANDLER@pdata 000F  
                            ___ftadd@sign 007D                                       l400 2CBC  
             __end_of_USBStdGetDscHandler 29D6                                       l361 2226  
                                     l418 46F8                                       l419 46F6  
                                     l357 21C6                                       l359 21EC  
                                     l800 25D2                                       l803 2620  
                                     l396 2C14                                       l804 25FE  
                                     l398 2C3E                                       l807 263A  
                                     l808 2640                                       _BDT 000400  
             gravaDadosEeprom@bombaLigada 0080                                       l791 2560  
                                     l935 4710                                       l792 256A  
                                     l944 3FB4                                       l952 1780  
                                     l793 259A                                       l937 471C  
                                     l945 3FAC                                       l938 472A  
                                     l954 17E8                                       l795 2660  
                                     l796 25AE                                       l956 1982  
                                     l797 25B2                                       l789 2552  
                                     l799 25F4                                       _MAC 7EDF  
                            __CFG_CPB$OFF 000000                              __CFG_CPD$OFF 000000  
                                     _UIE 000F69                                       _UIR 000F68  
                                     _SYS 7EDA                   __end_of_initRecebeDados 49D6  
                              _USBSuspend 4790                              ___awmod@sign 0065  
                    USBStdSetCfgHandler@i 0015                                       prod 000FF3  
                                     wreg 000FE8                            _USBDeviceTasks 2664  
                          _USBDeviceState 0058                       ?_retornaDadosEeprom 0001  
                   ??_USBCtrlTrfRxService 0001                  __size_ofi2_USBDeviceInit 013E  
                USBEnableEndpoint@options 0009                              __CFG_LVP$OFF 000000  
                            ___ftdiv@cntr 0098                              ___ftdiv@sign 009D  
                            __CFG_WDT$OFF 000000                                      l2200 0086  
                                    l2203 01C4                                      l2211 00F2  
                                    l2220 017A                                      l2221 016A  
                                    l2213 00F6                                      l2310 0A9C  
                                    l2214 011E                                      l2206 00E8  
                                    l2231 02FC                                      l2223 01AA  
                                    l2215 012C                                      l2207 00EE  
                                    l2135 2052                                      l2312 0B9A  
                                    l2232 0364                                      l2208 0216  
                                    l2224 018C                                      l2216 0128  
                                    l2136 209E                                      l2152 1B02  
                                    l2144 19D4                                      l2313 0B18  
                                    l2306 0A90                                      l2250 0578  
                                    l2234 038A                                      l2218 0160  
                                    l2146 19F2                                      l2307 0BAA  
                                    l2235 03C8                                      l2227 01BE  
                                    l2500 4044                                      l2180 0E04  
                                    l2228 086C                                      l2236 048C  
                                    l2148 1A64                                      l2501 403C  
                                    l2181 0D26                                      l2309 0B84  
                                    l2261 06A2                                      l2253 05B8  
                                    l2245 04F2                                      l2229 0268  
                                    l2174 13EE                                      l2270 0840  
                                    l2262 060C                                      l2254 05A2  
                                    l2271 075C                                      l2239 0436  
                                    l2191 0020                                      l1711 1D4C  
                                    l2520 2842                                      l2504 405C  
                                    l2184 0DDE                                      l2264 06C2  
                                    l2192 003C                                      l1712 1D24  
                                    l2505 4066                                      l2177 14C4  
                                    l2185 0F3C                                      l2281 08FC  
                                    l2273 0862                                      l2265 06AC  
                                    l2257 05DE                                      l2249 055E  
                                    l2602 1C62                                      l2522 2880  
                                    l2506 4074                                      l2290 095E  
                                    l2274 084C                                      l2258 05C8  
                                    l2194 0056                                      l1706 40A4  
                                    l1714 1DBA                                      l2603 1C58  
                                    l2523 2870                                      l2187 0FF4  
                                    l2283 099A                                      l2267 06E6  
                                    l2195 004E                                      l2516 27B2  
                                    l2620 2430                                      l2284 0922  
                                    l2276 08DC                                      l2268 06EA  
                                    l2612 3218                USBConfigureEndpoint@handle 0007  
                                    l2605 1C86                                      l2277 08A0  
                                    l2269 070C                                      l2606 1CA2  
                                    l2710 3E6A                                      l2518 27D0  
                                    l2622 245C                                      l2294 09D2  
                                    l2614 3240                                      l2551 3734  
                                    l2607 1CD2                                      l2711 3E78  
                                    l2519 2812                                      l2623 2496  
                                    l2295 09F6                                      l2615 327E  
                                    l2552 371E                                      l2720 419E  
                                    l2528 28A4                                      l2632 251E  
                                    l2624 24BE                                      l2296 09FE  
                                    l2616 32A4                                      l2721 41AC  
                                    l2529 2898                                      l2633 2512  
                                    l2297 0A46                                      l2289 09B0  
                                    l2554 375C                                      l2706 3E36  
                                    l2626 24FA                                      l2650 31A4  
                                    l2298 0A26                                      l2555 3752  
                                    l2707 3E2A                                      l2627 24EA  
                                    l2491 3D5E                                      l2651 31B4  
                                    l1940 4688                                      l2548 3700  
                                    l2716 4176                                      l2492 3D68  
                                    l2484 3D10                                      l2644 3122  
                                    l2637 3C0A                                      l2549 36F6  
                                    l2661 457A                                      l2717 416A  
                                    l2493 3D76                                      l2485 3D20  
                                    l2638 3C3A                                      l2646 314A  
                                    l1950 2A2C                                      l2655 489E  
                                    l2583 1BC8                                      l2727 429C  
                                    l2487 3D3E                                      l2647 317C  
                                    l1951 2A82                                      l2728 4290  
                                    l2488 3D36                                      l2648 318C  
                                    l2680 4980                                      l1952 2A34  
                                    l1937 468C                                      l2593 1C24  
                                    l2673 30CA                                      l2665 302E  
                                    l2497 4022                                      l1970 2D06  
                                    l1938 4676                                      l2594 1C1A  
                                    l2674 30BE                                      l2498 402E  
                                    l2930 4502                                      l1962 2ABE  
                                    l1971 2D2C                                      l2579 1B9E  
                                    l2667 30A6                                      l2931 44F8  
                                    l1955 2AD0                                      l1980 2DA2  
                                    l1972 2D12                                      l2588 1C2E  
                                    l2676 30E6                                      l2668 3096  
                                    l1964 2ACC                                      l1956 2AA6  
                                    l1949 2A08                                      l2950 43B0  
                                    l1974 2D98                                      l1958 2AB8  
                                    l2790 473C                                      l1991 382E  
                                    l2951 43AA                                      l1975 2D48  
                                    l2927 44E8                                      l1976 2D6C  
                                    l2928 44E2                                      l1969 2D88  
                                    l1977 2D52                                      l1986 37AC  
                                    l1987 3812                                      l1979 2DD8  
                                    l2789 474E                                      l8113 473C  
                                    _ADIE 007CEE                                      _ADIF 007CF6  
                                    l7291 4A1C                                      l8237 209E  
             __size_of_ResetModuloLoRaWan 0026                                      l8431 016A  
                                    l8247 20F8                                      l8505 0410  
                                    l8265 2138                                      l6669 3C66  
                                    l8525 04F6                                      l8437 018C  
                                    l9239 21BE                                      l8561 05C8  
                                    l8553 05A2                                      l9267 221E  
                                    l8811 1A5C                                      _ADON 007E10  
                                    l8671 0962                                      l8657 0926  
                                    l8585 06AC                                      l8497 03C8  
                                    l8841 1B14                                      l9385 1DA0  
                                    l8739 0B84                                      l8765 4098  
                                    l9741 17B0                                      l8791 19EA  
                                    l9729 1770                                      STR_1 7F38  
                                    STR_2 7FEE                                      STR_3 7FC3  
                                    STR_4 7FE7                                      STR_5 7FA7  
                                    STR_6 7F59                                      STR_7 7F75  
                                    STR_8 7F8B                                      STR_9 7FE0  
                                    _GIEH 007F97                                      u6000 4048  
                                    u5340 36E8                                      u6310 2DCE  
                                    u7030 2134                                      u5600 3820  
                                    u8000 48CE                                      u6240 2628  
                                    u7050 2174                                      _RCIE 007CED  
                                    u5620 43D0                                      u7060 4684  
                                    u5380 3766                                      u6340 4486  
                                    _RCIF 007CF5                                      u6317 2DC4  
                                    u8101 3228                                      u5710 1BBA  
                                    u5641 1B5C                                      u5810 1C6A  
                                    u6610 28AA                                      u5627 43C6  
                                    u5651 1B70                                      u6355 4488  
                                    u5740 1BF8                                      u6540 2524  
                                    u7420 0410                                      u7340 02A0  
                                    u6461 2414                     ??_USBCtrlTrfTxService 0001  
                                    u5680 1B90                                      u7520 05EC  
                                    u6481 2440                                      u7345 0296  
                                    u8081 3200                                      u6730 30D0  
                                    u9130 17B0                                      u5851 310A  
                                    u5780 1C36                                      u5940 3D42  
                                    u7460 052E                                      u7380 039A  
                                    u9125 178C                                      u7550 06D0  
                                    u7390 03DA                                      u9126 178E  
                                    u6671 3012                                      u5871 3132  
                                    _UCFG 000F6F                                      u6760 3E3A  
                                    u7800 0BBA                                      u7560 06E0  
                                    u8600 21E2                                      u9160 1972  
                                    i2l97 1FCE                                      u9145 180A  
                                    i2l98 1F3C                                      u6690 304C  
                                    u7810 0BD4                                      u9146 180C  
                                    u9155 1886                                      u8700 2AB4  
                                    u9156 188A                                      _UEP0 000F70  
                                    _UEP1 000F71                                      u6790 417A  
                                    u8630 2282                                      u7910 1A48  
                                    u6695 3044                                      u7905 1A18  
                                    u7770 0A4E                                      u6970 4726  
                                    u8650 4232                                      u9507 179A  
                                    _UEIE 000F6B                                      u7780 0A6C  
                                    u7940 1ABA                                      u7860 40D2  
                                    u9517 1D44                                      u7935 1A8A  
                                    u7880 19D2                                      u8690 2A8E  
                                    u7970 1B14                                      u8658 4236  
                                    u7875 40D6                                      u7980 1B46  
                                    _UEIR 000F6A                                      _UCON 000F6D  
                                    _TXIF 007CF4                              __CFG_PWRT$ON 000000  
                   __end_of_leBombaLigada 4A18                           _CDCDataInHandle 0244  
                                    _leAD 407E    USBStdFeatureReqHandler@current_ep_data 0018  
                                    _crc8 491E                                      _pDst 0246  
                         _USBDeviceDetach 49FC                                      _main 1758  
                            ___ftpack@arg 0060                         JoinLoRaWan@status 0087  
                ??i2_USBTransferOnePacket 0005                              ___ftpack@exp 0063  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    indf0 000FEF                                      fsr2h 000FDA  
                                    fsr0l 000FE9                                      indf1 000FE7  
                             _BaudRateGen 0214                                      indf2 000FDF  
                                    fsr1l 000FE1                                      fsr2l 000FD9  
                         _USBDeviceAttach 46CE                                      btemp 005F  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 000E                             __CFG_IESO$OFF 000000  
              __end_of_USBCheckStdRequest 348A                              _sprintf$5653 00D9  
                            main@dadoPoco 01E5                    ??_USBCtrlTrfOutHandler 0003  
                           __CFG_MCLRE$ON 000000                      ??_retornaDadosEeprom 0064  
                            ___ftmul@cntr 008D                              ___param_bank 000000  
                            ___ftmul@sign 008E                 ??_USBStdFeatureReqHandler 0015  
                           ??_JoinLoRaWan 0087                          _vazaoInstantanea 0248  
                ??_USBStdGetStatusHandler 0001                              ___fttol@exp1 00C6  
                            ___fttol@lval 00C2                  __end_of_gravaDadosEeprom 2180  
                          ?_USBDeviceInit 0001                             ?_enviaComando 007C  
                           __CFG_PLLDIV$5 000000                                     ?_leAD 0060  
                             _writeEeprom 4448                                     ?_crc8 0060  
                            _sourceMacLow 0234                                     ?_main 0001  
                         __end_of___awdiv 3D80                                     _EEADR 000FA9  
                         __end_of___ftadd 1CF8                                     STR_10 7EF6  
                                   STR_11 7FFA                                     STR_20 7FAA  
                                   STR_12 7F80                                     STR_21 7F96  
                                   STR_13 7F27                                     STR_22 7FD2  
                                   STR_14 7FA0                                     STR_23 7FD2  
                                   STR_15 7FB3                                     STR_24 7FF5  
                                   STR_16 7FBB                                     STR_25 7FCB  
                                   STR_17 7F67                                     STR_26 7F16  
                                   STR_18 7FD9                                     STR_19 7F49  
                         __end_of___awmod 407E         __size_of_USBCtrlEPServiceComplete 00FA  
                         __end_of___ftdiv 32D6                           __end_of___ftneg 48AC  
                         __end_of___lldiv 3E8A                           __end_of___ftmul 31EE  
                                   _T0CON 000FD5                           ___awdiv@divisor 0068  
                                   _T1CON 000FCD                           __end_of___llmod 41BE  
                  __end_of_USBDeviceTasks 2792                           __end_of___ftsub 45A4  
                         __end_of___fttol 30F8                                     _T3CON 000FB1  
               ?_USBCtrlEPServiceComplete 0001                            __CFG_DEBUG$OFF 000000  
                                   i2l101 1F56                                     i2l103 1F88  
                                   i2l210 4346                                     i2l106 1FDE  
                                   i2l204 4352                                     i2l212 434C  
                                   i2l108 1FE4                                     i2l400 2EC2  
                                   i2l501 29B8                                     i2l510 3992  
                                   i2l511 3996                                     i2l600 1264  
                                   i2l512 39B0                                     i2l432 3A66  
                                   i2l520 45E0                                     i2l505 39EC  
                                   i2l361 2364                                     i2l426 359E  
                                   i2l506 3982                                     i2l434 3A7C  
                                   i2l603 121E                                     i2l443 2F80  
                                   i2l371 269E                                     i2l444 2F2A  
                                   i2l372 26A8                                     i2l461 3510  
                                   i2l605 1270                                     i2l509 3A02  
                                   i2l533 3B34                                     i2l357 2306  
                                   i2l381 2728                                     i2l462 34DA  
                                   i2l438 3BA6                                     i2l534 3B2E  
                                   i2l374 26CC                                     i2l391 4632  
                                   i2l519 45E2                                     i2l527 46C2  
                                   i2l359 232C                                     i2l367 2678  
                                   i2l552 364E                                     i2l472 2B3C  
                                   i2l544 42F4                                     i2l392 4640  
                                   i2l448 2FAA                                     i2l528 46C0  
                                   i2l384 274E                                     i2l376 26E0  
                                   i2l368 2684                                     i2l465 354E  
                                   i2l457 34A8                                     i2l553 3652  
                                   i2l473 2B1A                                     i2l377 26EA  
                                   i2l369 268C                                     i2l466 3518  
                                   i2l554 36CC                                     i2l546 433E  
                                   i2l570 33CA                                     i2l386 276E  
                                   i2l378 270E                                     i2l459 34B2  
                                   i2l555 3692                                     i2l475 2BB0  
                                   i2l571 33D0                                     i2l379 2718  
                                   i2l476 2B96                                     i2l396 2E1A  
                                   i2l740 3858                                     i2l492 29BE  
                                   i2l484 331E                                     i2l572 33D6  
                                   i2l388 278A                                     i2l557 36B2  
                                   i2l493 28CC                                     i2l573 33E8  
                                   i2l398 2E44                                     i2l742 386E  
                                   i2l486 3390                                     i2l574 33EE  
                                   i2l743 387A                                     i2l591 1112  
                                   i2l495 28DE                                     i2l567 3446  
                                   i2l744 3896                                     i2l584 103A  
                                   i2l496 295E                                     i2l576 33F4  
                                   i2l568 33C2                                     i2l745 38AC  
                                   i2l593 1192                                     i2l585 1040  
                                   i2l577 3410                                     i2l498 2964  
                                   i2l578 3428                                     i2l739 38B4  
                                   i2l595 115C                                     i2l587 10A8  
                                   i2l499 29B2                                     i2l596 1178  
                                   i2l589 10F0                                     i2l598 11DE  
                                   i2l599 11EA                                     _UADDR 000F6E  
                         ___awdiv@counter 006A                                     _RCREG 000FAE  
                                   _RCSTA 000FAB                                     _TMR1H 000FCF  
                                   _TMR1L 000FCE                                     _SPBRG 000FAF  
                           __CFG_USBDIV$2 000000                                     _USBIE 007D05  
                                   _USTAT 000F6C                                     _TXREG 000FAD  
      __size_of_USBCtrlEPAllowStatusStage 00C4                              ___lltoft@exp 0070  
                          __CFG_FCMEN$OFF 000000           __end_of_USBCtrlEPAllowDataStage 3AAE  
                                   _sd000 7EE4                                     _sd001 7E66  
                                   _sd002 7E32            ?_USBIncrement1msInternalTimers 0001  
                                   leAD@i 006A                                     _dig_1 0252  
                                   _delay 3F8E                                i2memset@p1 0001  
                                   _getch 48F8                           __end_of_dpowers 7D79  
                                   _scale 0BE2                           __end_of_isdigit 4988  
                                   _randx 02F9                                     _ticks 0224  
                           ___ftpack@sign 0064                                     _putch 4A18  
                                   main@i 01E2                                     pclath 000FFA  
                                   tablat 000FF5                             _gs_encryption 7EE8  
                                   plusw2 000FDB                         __end_of_CDCInitEP 4224  
                                   status 000FD8                                     wtemp6 0060  
                         __end_of_sprintf 0BE2                           __end_of_strncmp 3F8E  
                         __end_of_toupper 49EA                          __end_ofi2_memset 47EA  
                  gravaDadosEeprom@i_4790 007F                         __end_of_CRC8Table 7D51  
                          _tamanhoCommand 01EE              __size_of_USBStdSetCfgHandler 00DC  
                        __end_ofi2_strlen 4448                             setup_uart@brg 0071  
                         __initialization 3E8A                              __end_of_leAD 40EE  
                            __end_of_crc8 4942                              __end_of_main 1998  
                   _control_signal_bitmap 025A                            ??_enviaComando 007F  
                  gravaDadosEeprom@indice 0081                      __size_of_leHorimetro 0026  
               __size_of_USBCtrlEPService 0096                                    ??_leAD 0062  
                  gravaDadosEeprom@pulsos 0076                                    ??_crc8 0061  
                                  ??_main 00FC                             ___fttol@sign1 00C1  
                     __end_of_JoinLoRaWan 4698                             __activetblptr 000002  
                         ?_USBDeviceTasks 0001                               ?_USBSuspend 0001  
                      recebeByte@sizeData 004B                      __size_of__tdiv_to_l_ 0134  
                        ?_initRecebeDados 0001                                i2strlen@cp 0005  
                      recebeByteLoRaWan@b 0010                        recebeByteLoRaWan@i 0011  
                            _cdc_mem_type 025B                   __end_of_USBDeviceDetach 4A0A  
                           _sourceMacHigh 0230                                    ?_delay 0087  
                                  ?_getch 0001                   __end_of_USBDeviceAttach 4702  
                                  _ADCON0 000FC2                                    _ADCON1 000FC1  
                                  _ADCON2 000FC0                          _CDCDataOutHandle 01F2  
                                  _CCP1IE 007CEA                                    _CCP1IF 007CF2  
                        ___llmod@dividend 006D                                    ?_scale 008F  
                                  _ADRESH 000FC4                                    _ADRESL 000FC3  
                                  _EEDATA 000FA8                                    _CCPR1H 000FBF  
                                  _CCPR1L 000FBE                                    _EECON2 000FA7  
                        ___awdiv@dividend 0066                                    ?_putch 0001  
                        __end_of___ftpack 3786                          __end_of___lbtoft 4812  
                        __end_of___lltoft 42E6                     __size_of_CDCTxService 012E  
                                  i2l2001 15C4                                    i2l2010 1674  
                                  i2l2002 158C                                    i2l2003 15C2  
                                  i2l1301 3DE6                                    i2l2014 1726  
                                  i2l2006 160A                                    i2l1303 3DF8  
                                  i2l2015 16B6                                    i2l1304 3E02  
                                  i2l2016 1722                                    i2l2008 1694  
                                  i2l1073 4900                                    i2l2009 1646  
                                  i2l1075 491A                                    i2l1296 3DB0  
                                  i2l1298 3DC2                                    i2l1299 3DD4  
                                  i2l2790 47C8                                    i2l2950 4404  
                                  i2l2783 4550                                    i2l2951 4400  
                                  i2l2784 4530                                    i2l2936 449A  
                                  i2l2944 4774                                    i2l2937 4492  
                                  i2l2945 476C                                TxLoRaWan@i 01CE  
                                  i2l2956 3F74                                    i2l2789 47D8  
                                  i2l2965 49E6                                    i2l2957 3F0E  
                                  i2l2958 3F6C                                    i2l6815 34B2  
                                  i2l6917 3316                                    i2l6847 47C8  
                                  i2l7569 4530                                    i2l9199 2720  
                                  i2l8957 22FE                                    i2l8877 3F0E  
                                  i2l8985 235C                                    _PAN_ID 0254  
                    writeEeprom@intEnable 0062                             CDCTxService@i 006B  
                                  _TMR0IE 007F95                                    _TMR1IE 007CE8  
                                  _SPBRGH 000FB0                  leBombaLigada@bombaLigada 0060  
                i2USBTransferOnePacket@ep 0009                         ??i2_USBDeviceInit 0009  
         __size_ofi2_USBTransferOnePacket 0102                            __CFG_VREGEN$ON 000000  
                       _shortPacketStatus 0057                            __CFG_XINST$OFF 000000  
                        __end_of__powers_ 7DA0                           USBDeviceTasks@i 001C  
                                  _le4a20 1CF8                              _write_values 7EEC  
             USBStdFeatureReqHandler@pUEP 0016                  USBTransferOnePacket@data 0061  
              USBCtrlTrfInHandler@lastDTS 0002                           ??_USBDeviceInit 0068  
                                  ___ftge 3BD8                                    ___wmul 4812  
                           main@nivelPoco 01E0                                 ??___awdiv 006A  
                               ??___ftadd 007A                            __CFG_STVREN$ON 000000  
                               ??___awmod 0064                                 ??___ftdiv 0095  
                               ??___ftneg 0063                                 ??___lldiv 0068  
                               ??___ftmul 0086                                 ??___llmod 0075  
                               ??___ftsub 0086                                 ??___fttol 00BC  
                       _USBEnableEndpoint 4622           __size_of_USBStdGetStatusHandler 00A0  
                                  _gs_pan 7EF0                                    _memcpy 451E  
                                  _memset 4732                                    _fround 1296  
                                  _millis 48D2                                    clear_0 3EB0  
                                  clear_1 3EBC                                    clear_2 3EC8  
                                  clear_3 3ED4                                    clear_4 3EE0  
                                  clear_5 3EEC                                    clear_6 3EF8  
                        ___awdiv@quotient 006C                           ___awmod@divisor 0062  
                         ___awmod@counter 0064                        __size_of_TxLoRaWan 0118  
                      ?_USBEnableEndpoint 0009                       _inicializaVariaveis 4224  
                            converter@aux 0004                                    _strcat 44D8  
                                  _strcmp 4490                                    _strcpy 4762  
                                  _strlen 43A0                     ___ftmul@f3_as_product 008A  
           __size_of_USBTransferOnePacket 0106                                 ??_isdigit 0060  
                            _CDCTxService 2536                          __end_of_setup_AD 49C0  
                            __mediumconst 7C50                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                     ??_USBEnableEndpoint 000A                      __end_of_MAC_TX_UNCNF 7ECD  
                 recebeByteLoRaWan@i_4631 0013                                 ??_sprintf 00D3  
                             _CtrlTrfData 000438                                 ??_strncmp 0007  
                               ??_toupper 0001                         __end_of_SYS_RESET 7EDA  
                      setup_uart@baudRate 006D                      _controlTransferState 0056  
                           ?_parseLoRaWan 0001                                __accesstop 0060  
                 __end_of__initialization 3EFE                      ?_inicializaVariaveis 0001  
                            ?_verificaUSB 0001                           __CFG_PBADEN$OFF 000000  
                              ___ftadd@f1 0074                                ___ftadd@f2 0077  
                              ___ftge@ff1 0060                                ___ftge@ff2 0063  
                           ___rparam_used 000001                                ___ftdiv@f1 008F  
                              ___ftdiv@f2 0092                                ___ftdiv@f3 0099  
           gravaDadosEeprom@bombaDesligou 007A                  __size_of_USBStallHandler 0042  
                              ___ftneg@f1 0060                                ___lbtoft@c 006B  
                     __size_of_USBSuspend 002E                                ___ftmul@f1 0080  
                              ___ftmul@f2 0083                       recebeByte@frameData 0440  
                              ___ftsub@f1 0080                                ___ftsub@f2 0083  
                              ___fttol@f1 00B8                            __pcstackCOMRAM 0001  
               __end_of_USBEnableEndpoint 465E                             __end_of_sd000 7EE8  
                           __end_of_sd001 7E9A                             __end_of_sd002 7E66  
                             _JoinLoRaWan 465E                              __pidataBANK2 4942  
        retornaDadosEeprom@horimetroAtual 006F                             __end_of_delay 400C  
                              ___lltoft@c 0068          __size_of_USBCtrlEPAllowDataStage 0098  
                           __end_of_getch 491E                             __end_of_scale 101A  
           __size_of_USBConfigureEndpoint 0094                           _retries_sending 025F  
                           __end_of_putch 4A26               __end_of_USBCtrlTrfInHandler 36D6  
                      __size_of_leMedidas 0068                         _MAC_SET_CH_STATUS 7EAC  
                  i2_USBTransferOnePacket 2E04                           _responseLoRaWan 01FE  
                              __div_to_l_ 2792                                _cdc_notice 0200  
                               ?i2_memset 0001                                _cdc_rx_len 0052  
                              _cdc_tx_len 0051                            main@deltaTempo 01DC  
                                 ??_delay 008B                                 ?i2_strlen 0001  
                ??_USBCtrlTrfSetupHandler 001B                          ?_USBDeviceDetach 0001  
                 _USBTicksSinceSuspendEnd 01F6                                   ??_getch 0001  
                         __div_to_l_@exp1 006B                           __div_to_l_@cntr 006A  
                        ?_USBDeviceAttach 0001                                   ??_scale 0092  
                         __div_to_l_@quot 0066                        __end_of_MAC_TX_CNF 7ED4  
                  _USBStdGetStatusHandler 3976                              sprintf@width 00F2  
                                 ??_putch 0060                        __size_of_converter 0086  
                          ??_parseLoRaWan 0068                      __end_of_enviaComando 2E04  
                              __pbssBANK1 01EE                                __pbssBANK2 0200  
                              __pbssBANK3 0300                                __pbssBANK4 0440  
                              __pbssBANK6 0600                                __pbssBANK7 0700  
                      __size_of_le_pulsos 0026                     ??_inicializaVariaveis 0084  
                   recebeByteLoRaWan@port 000F                         __end_of_TxLoRaWan 2AEE  
                          _novaMsgLoRaWan 005A                             __div_to_l_@f1 0060  
                           __div_to_l_@f2 0063               __size_of_USBWakeFromSuspend 0036  
                             _pBDTEntryIn 0041          __end_of_USBCtrlEPServiceComplete 3000  
             __size_of_USBCheckCDCRequest 00A4                                   ?_le4a20 009E  
                    USBCtrlTrfRxService@i 0001                                   ?___ftge 0060  
                                 ?___wmul 006E                 __end_of_MAC_SET_CH_STATUS 7EBA  
                                 _CCP1CON 000FBD                                   ?_memcpy 0001  
                       ?_gravaDadosEeprom 0001                                   ?_memset 0060  
                                 ?_fround 008F                                   ?_millis 0060  
                              _device_dsc 7E9A                                 ?___ftpack 0060  
                               ?___lbtoft 0068                          _USBCtrlEPService 3AAE  
                            ?_writeEeprom 0061                                _ep_data_in 0241  
                               ?___lltoft 0068                                   ?_strcat 0060  
                                 ?_strcmp 0001                                   ?_strcpy 0001  
                                 ?_strlen 0060                        ??_gravaDadosEeprom 0076  
             __end_of_USBCtrlTrfRxService 2BFA                        _USBCheckStdRequest 33B2  
                       _configDescriptor1 7DEF                                   i2l10221 439A  
                                 i2l10219 436A                       retornaDadosEeprom@i 0082  
                     retornaDadosEeprom@j 007F                         _tamDadosRecebidos 005C  
                                 _GO_DONE 007E11                                ??i2_memset 0007  
             __end_of_USBCtrlTrfTxService 3556                       _USBStdSetCfgHandler 32D6  
              __end_of_ResetModuloLoRaWan 48D2                                ??i2_strlen 0003  
                        _discovery_status 0260                       ?_USBCheckStdRequest 0001  
            __size_of_USBStdGetDscHandler 011A                                   _UIEbits 000F69  
                                 _UIRbits 000F68                                _gs_channel 7EEE  
                           _cdc_trf_state 01F5                         __end_of_leMedidas 4156  
                              _freqPulses 0047                     __end_of_MAC_JOIN_OTAA 7EC4  
                                 _pCDCDst 0238                                   _pCDCSrc 023B  
                       __end_of__npowers_ 7DC7                                   __Hparam 0000  
         ??_USBIncrement1msInternalTimers 0001                      ?_USBStdSetCfgHandler 0001  
                               _CDCInitEP 41BE                                _scale$5652 0092  
                                 __Lparam 0000               __size_of_retornaDadosEeprom 01B2  
              __size_of_USBEnableEndpoint 003C                                 ?_setup_AD 0001  
                         __size_of_le4a20 01A0                                _readEeprom 49EA  
                    ??_USBCheckStdRequest 001B                   enviaComando@tipoComando 007E  
                         __size_of___ftge 0092             __size_of_USBCtrlTrfOutHandler 005E  
                                 ___awdiv 3CFA                                   ___ftadd 1B4A  
                                 ___awmod 400C                                   ___ftdiv 31EE  
                                 ___ftneg 4886                                   ___lldiv 3E06  
                        ??_USBDeviceTasks 001C                           __size_of___wmul 0028  
                                 ___ftmul 30F8                                   ___llmod 4156  
                                 ___ftsub 4562                                   ___fttol 3000  
                               _CRC8Table 7C51                         ??_USBStallHandler 0001  
                       __end_of_converter 3E06                                   _channel 0262  
                                 __pcinit 3E8A                         __end_of_le_pulsos 4860  
                         __size_of_memcpy 0044                                ??___ftpack 0065  
                              ??___lbtoft 006B                           __size_of_memset 0030  
                         __size_of_fround 0270                 __end_of_configDescriptor1 7E32  
                         __size_of_millis 0026                                   __ramtop 0800  
                              ??___lltoft 006C                                   __ptext0 1758  
                                 __ptext1 38D6                                   __ptext2 45E6  
                                 __ptext3 49AA                                   __ptext4 40EE  
                                 __ptext5 1CF8                                   __ptext6 407E  
                                 __ptext7 47EA                                   __ptext8 31EE  
                                 __ptext9 4224                                   crc8@crc 0060  
                                 _inPipes 003B                    __size_of_leBombaLigada 000E  
                                 _command 0700               _USBDeferOUTDataStagePackets 01F7  
       gravaDadosEeprom@horimetroAnterior 0210                           __size_of_strcat 0046  
                         __size_of_strcmp 0048                           __size_of_strcpy 002E  
                         __size_of_strlen 0056                         __end_of_hexpowers 7DE7  
                             ?__div_to_l_ 0060                                   _dpowers 7D51  
                            ??_USBSuspend 0015                                   _isdigit 4966  
                             _le4a20$5649 00AD                                   delay@to 0093  
                        ___awmod@dividend 0060                             _receivePacket 0378  
                         i2_USBDeviceInit 22C4                          i2USBDeviceInit@i 0009  
                                 getch@RC 0002                             converter@aux2 0005  
                   retornaDadosEeprom@crc 0081                        __end_of_USB_CD_Ptr 7DEF  
                                 _sprintf 0012           __size_of_USBCtrlTrfSetupHandler 0090  
                                 _strncmp 3F0C                            __pintcode_body 1E98  
                                 _toupper 49D6                      end_of_initialization 3EFE  
                           TxLoRaWan@data 00F8                             TxLoRaWan@conf 01C8  
                      __end_of_USB_SD_Ptr 7DED                                   memcpy@d 0007  
                                 memcpy@n 0005                                   memcpy@s 0009  
                     _pBDTEntryEP0OutNext 004D                                   memset@c 0062  
                                 memset@n 0064                                   memset@p 0066  
                           __Lmediumconst 7C50                                   int_func 1E98  
                         _USB1msTickCount 0218           _dummy_encapsulated_cmd_response 02CA  
                                 millis@m 0064                  ?_USBStdFeatureReqHandler 0001  
                           enviaComando@i 0081                     ??_USBStdSetCfgHandler 0015  
                         ___lldiv@divisor 0064                      __size_of_verificaUSB 0030  
                              ?_CDCInitEP 0001                           ___lldiv@counter 006C  
                      parseLoRaWan@status 007A                  recebeByte@escapeCaracter 01F4  
                      __end_of_USBSuspend 47BE                             ??_leHorimetro 0064  
                 _USBCtrlEPAllowDataStage 3A16                                 _RCSTAbits 000FAB  
                              ??_setup_AD 0060                                   postdec1 000FE5  
                                 postdec2 000FDD                              _MAC_TX_UNCNF 7EC4  
                                 postinc0 000FEE                                   postinc2 000FDE  
                            writeEeprom@b 0061                  _USBCtrlEPServiceComplete 2F06  
                          __tdiv_to_l_@f1 0060                            __tdiv_to_l_@f2 0063  
                                 strcmp@r 0006                                   strlen@s 0060  
                    __end_of_parseLoRaWan 3832                             ??__tdiv_to_l_ 0066  
              _USBStatusStageEnabledFlag1 01FA                _USBStatusStageEnabledFlag2 01F9  
                      USBEnableEndpoint@p 000A                                 _PORTCbits 000F82  
                               _PORTDbits 000F83                                 _PORTEbits 000F84  
                              _setup_ccp1 45E6                             le_pulsos@freq 0064  
   retornaDadosEeprom@vazaoAcumuladaAtual 0065                                _setup_uart 38D6  
                retornaDadosEeprom@j_4801 0080                     __size_of_enviaComando 0104  
                               _TRISAbits 000F92                                 _TRISCbits 000F94  
                               _TRISDbits 000F95                                 _TRISEbits 000F96  
                      _BothEP0OutUOWNsSet 01FB                 USBConfigureEndpoint@EPNum 0006  
              ?_USBCtrlEPAllowStatusStage 0001       USER_USB_CALLBACK_EVENT_HANDLER@size 0011  
                               _USTATcopy 005D                  __size_of_initRecebeDados 0016  
                          leAD@leituraAux 0068              __end_of_USBTransferOnePacket 2D00  
                           _leBombaLigada 4A0A                               ___ftdiv@exp 009C  
                               _TXSTAbits 000FAC                                 _SYS_RESET 7ED4  
                     __size_of__div_to_l_ 012A                               ___ftmul@exp 0089  
                    gravaDadosEeprom@dado 007C                               ?_readEeprom 0001  
                            ?_JoinLoRaWan 0001                    _USBCtrlTrfSetupHandler 3C6A  
             retornaDadosEeprom@dado_4802 0077                            __end_of_le4a20 1E98  
                 ?i2_USBTransferOnePacket 0001                     __end_of_USBDeviceInit 22C4  
                          __end_of___ftge 3C6A     __end_of_USBIncrement1msInternalTimers 49AA  
  __size_of_USBIncrement1msInternalTimers 0022             _USBIncrement1msInternalTimers 4988  
                          __end_of___wmul 483A                              _enviaComando 2D00  
                             _BAUDCONbits 000FB8                   __end_ofi2_USBDeviceInit 2402  
                    leHorimetro@horimetro 0064                            __end_of_gs_pan 7EF2  
                               i2memset@c 0003                                 i2memset@n 0005  
                               i2memset@p 0007                            __end_of_memcpy 4562  
                          __end_of_memset 4762                            __end_of_fround 1506  
                     __end_of_leHorimetro 4886                            __end_of_millis 48F8  
                       _USBBusIsSuspended 01FC                      __size_of_writeEeprom 0048  
                          __end_of_strcat 451E                            __end_of_strcmp 44D8  
                          __end_of_strcpy 4790                            __end_of_strlen 43F6  
                     start_initialization 3E8A                   ?_USBStdGetStatusHandler 0001  
                             leAD@leitura 0064                               __end_of_MAC 7EE4  
           USBCtrlTrfRxService@byteToRead 0002                               __end_of_SYS 7EDF  
                     __end_of__tdiv_to_l_ 2536                          TxLoRaWan@comando 0100  
                             _cdc_data_rx 000540                               _cdc_data_tx 000500  
                       __size_ofi2_memset 002C              __end_of_USBConfigureEndpoint 3BD8  
                      _freqPulsesAnterior 021C                            _tempoHorimetro 0220  
                        TxLoRaWan@tamData 00FA           __end_of_USBStdFeatureReqHandler 1296  
                         _horimetroMedido 0228                           _horimetroLigado 0059  
       __end_of_USBCtrlEPAllowStatusStage 361A                         __size_ofi2_strlen 0052  
                               i2strlen@s 0001                            ?_leBombaLigada 0001  
                __end_of_USBCtrlEPService 3B44                           ___llmod@divisor 0071  
                         ___llmod@counter 0075                 ??_USBCtrlEPAllowDataStage 0002  
                  _tempoRegistroHorimetro 024C                               ??_CDCInitEP 000D  
                          USBDeviceInit@i 0068                                 _TxLoRaWan 29D6  
                  _pBDTEntryEP0OutCurrent 004F               retornaDadosEeprom@intEnable 006A  
                 USBTransferOnePacket@dir 0060                                  ??_le4a20 00A1  
                 USBTransferOnePacket@len 0063            __end_ofi2_USBTransferOnePacket 2F06  
                                ??___ftge 0066                                  ??___wmul 0072  
                     _USBStdGetDscHandler 28BC                     _tempoVazaoInstantanea 024A  
                             __pdataBANK2 02DB                          __CFG_LPT1OSC$OFF 000000  
                                ??_memcpy 0007                                  ??_memset 0066  
                                ??_fround 0092                                  ??_millis 0064  
                               le4a20@cnt 00B0               retornaDadosEeprom@horimetro 007B  
                           sprintf@tmpval 00E5                                  ??_strcat 0064  
                ResetModuloLoRaWan@status 0087                                  ??_strcmp 0005  
                                ??_strcpy 0005                                  ??_strlen 0062  
                             ?_setup_ccp1 0001                 recebeByteLoRaWan@tamMsgRx 0012  
                  _USBActiveConfiguration 005E                                fround@prec 0098  
          __end_of_USBStdGetStatusHandler 3A16                               ?_setup_uart 006D  
                       __size_of___ftpack 00B0                         __size_of___lbtoft 0028  
                       __size_of___lltoft 005E                               __pbssCOMRAM 0033  
                       _recebeByteLoRaWan 1506                             __pcstackBANK0 0060  
                           __pcstackBANK1 0100              __size_of_USBCtrlTrfInHandler 00BC  
             __end_of_inicializaVariaveis 4288                      __end_of_set_link_key 7EEC  
                      ?_recebeByteLoRaWan 0001                              _isdigit$5090 0061  
                    ?_USBStdGetDscHandler 0001                       __size_of_readEeprom 0012  
                   __end_of_gs_encryption 7EEA                 __size_of_gravaDadosEeprom 0150  
                    _vazaoAcumuladaMedido 022C                __end_of_USBWakeFromSuspend 46CE  
                             sprintf@flag 00F4                               sprintf@fval 00EF  
                             sprintf@prec 00E3                           _USBStallHandler 45A4  
                     ??_recebeByteLoRaWan 000A                              _pBDTEntryOut 020A  
              __end_of_USBCheckCDCRequest 38D6                      recebeByteLoRaWan@len 000E  
                __size_of_USBDeviceDetach 000E                  __size_of_USBDeviceAttach 0034  
                      _ResetModuloLoRaWan 48AC                                 _leMedidas 40EE  
                               _main$5648 01D5                         ??_initRecebeDados 0060  
                              ?_TxLoRaWan 00F7                     __size_of_parseLoRaWan 00AC  
                               __pintcode 0008                             __pmediumconst 7C50  
                             _leHorimetro 4860                                  ?___awdiv 0066  
                                ?___ftadd 0074                                  ?___awmod 0060  
                                ?___ftdiv 008F                                  ?___ftneg 0060  
                                ?___lldiv 0060                                  ?___ftmul 0080  
                                ?___llmod 006D                                  ?___ftsub 0080  
                               __npowers_ 7DA0                                  ?___fttol 00B8  
                     ?_ResetModuloLoRaWan 0001                 gravaDadosEeprom@dado_4791 007D  
                      enviaComando@i_4617 0083                        enviaComando@i_4618 0085  
                       __size_of_setup_AD 0016                          ?i2_USBDeviceInit 0001  
                             __tdiv_to_l_ 2402                 __end_of_recebeByteLoRaWan 1758  
                           __send_retries 02FD                              ??__div_to_l_ 0066  
                    _USBTransferOnePacket 2BFA                         gravaDadosEeprom@i 007E  
                               _converter 3D80                                  ?_isdigit 0001  
                               _le_pulsos 483A                            le4a20@corrente 00B5  
            __end_of_USBCtrlTrfOutHandler 4344                                 _hexpowers 7DC7  
                   ??_USBStdGetDscHandler 0001                               _ep_data_out 023E  
                          __size_of_delay 007E                            __size_of_getch 0026  
                 parseLoRaWan@intervalMAX 0078                                  ?_sprintf 00C7  
            __size_of_USBCtrlTrfRxService 010C                      ??_ResetModuloLoRaWan 0087  
                          __size_of_scale 0438                           ??_leBombaLigada 0060  
           USBConfigureEndpoint@direction 0001                                  ?_strncmp 0001  
                                ?_toupper 0001                            __size_of_putch 000E  
                    SYS_InterruptHigh@dig 0031                                 delay@time 0087  
            __size_of_USBCtrlTrfTxService 00CC                              _parseLoRaWan 3786  
                          ___wmul@product 0072                              TxLoRaWan@hex 01CA  
              ??_USBCtrlEPServiceComplete 0002                    _vazaoInstantaneaMedido 0250  
                                _IPR1bits 000F9F                                  _IPR2bits 000FA2  
                                _PIE2bits 000FA0                       __size_of_setup_ccp1 003C  
              __end_of_retornaDadosEeprom 1B4A              retornaDadosEeprom@crcGravado 0069  
                               _numPacote 025D                       __size_of_setup_uart 00A0  
                              ?_leMedidas 0001                                  i2u502_40 334A  
                           readEeprom@end 0060                        __end_of__div_to_l_ 28BC  
                                i2u506_40 292C                                  i2u506_47 2922  
                                i2u531_40 1204                                  i2u507_40 295A  
                                _PIR2bits 000FA1                                  i2u507_47 2950  
                                i2u509_40 29A8                                  i2u509_47 299E  
                                i2u490_40 3502                                  i2u490_47 34F8  
                                i2u492_40 3540                                  i2u804_40 44CC  
                                i2u492_47 3536                                  i2u814_40 2322  
                                i2u806_40 3F3A                                  i2u830_40 16B2  
                                i2u832_40 1744                                  i2u817_40 23C0  
                                i2u818_40 4424                                  i2u834_40 1752  
                                i2u818_47 441A                                  i2u858_40 278E  
                                i2u886_40 1F02                                  i2u887_40 1F1A  
                                i2u886_48 1F04                                  _RCONbits 000FD0  
                        __CFG_WDTPS$32768 000000                                  _UEP0bits 000F70  
              _USBDeferINDataStagePackets 01F8               __size_of_USBCheckStdRequest 00D8  
                                _UCONbits 000F6D                      _USBConfigureEndpoint 3B44  
                    __size_of_JoinLoRaWan 003A                                 getch@data 0003  
                             _frameBuffer 0600          __size_of_USBStdFeatureReqHandler 027C  
               gravaDadosEeprom@horimetro 0083                          _get_own_mac_high 7EF2  
                       ___wmul@multiplier 006E                     ?_USBTransferOnePacket 0060  
                 retornaDadosEeprom@vazao 006B                         _SYS_InterruptHigh 0008  
                             _encryptMode 025E                                ?_converter 0002  
                           ?_CDCTxService 0001                                ?_le_pulsos 0060  
                            _RemoteWakeup 01FD                                 main@pisca 01E4  
                               main@tempo 01D1                                  i2_memset 47BE  
                        main@tempoTimeOut 01D8                        ?_SYS_InterruptHigh 0001  
                     gravaDadosEeprom@crc 0082                   __end_of_USBStallHandler 45E6  
                                i2_strlen 43F6                                 copy_data0 3E9E  
             ??_USBCtrlEPAllowStatusStage 0001               __end_of_USBStdSetCfgHandler 33B2  
                     ??_SYS_InterruptHigh 001D                             ??_verificaUSB 006D  
                      __end_of_device_dsc 7EAC                                _EECON1bits 000FA6  
                           _tempoSemVazao 024E                   ?_USBCtrlTrfSetupHandler 0001  
                         TxLoRaWan@status 01C9                   USBStdGetStatusHandler@p 0002  
                                __Hrparam 0000                               ??_TxLoRaWan 00FB  
                               memcpy@tmp 000B                                  __Lrparam 0000  
                  USBTransferOnePacket@ep 0068                              ??_readEeprom 0060  
                                _SetupPkt 000430                                  le4a20@ad 00B1  
              recebeByteLoRaWan@frameData 0314                                  le4a20@to 00A9  
                       ??_USBDeviceDetach 0060                     ?_USBConfigureEndpoint 0001  
                       ??_USBDeviceAttach 0060                          __size_of___awdiv 0086  
     gravaDadosEeprom@bombaLigadaAnterior 0256                          __size_of___ftadd 01AE  
                        __size_of___awmod 0072                          __size_of___ftdiv 00E8  
                        __size_of___ftneg 0026                          __size_of___lldiv 0084  
                        __size_of___ftmul 00F6                          __size_of___llmod 0068  
                        __size_of___ftsub 0042                          __size_of___fttol 00F8  
                                ___ftpack 36D6                                  ___lbtoft 47EA  
               __end_of_SYS_InterruptHigh 2030                               _fround$5650 0095  
                             _fround$5651 0092                                  ___lltoft 4288  
                             _line_coding 02D2                __size_of_recebeByteLoRaWan 0252  
                      __end_of_gs_channel 7EF0                            ??_CDCTxService 006B  
                              sprintf@idx 00DC                                sprintf@len 00DF  
                              sprintf@exp 00E9                                sprintf@val 00EB  
                              strcat@from 0062                          __size_of_isdigit 0022  
                 __size_of_USBDeviceTasks 012E                           enviaComando@cmd 007C  
                                __ptext10 1998                                  __ptext11 3F8E  
                                __ptext20 483A                                  __ptext12 4702  
                                __ptext21 4860                                  __ptext13 49FC  
                                __ptext30 4966                                  __ptext22 4A0A  
                                __ptext14 46CE                                  __ptext31 1296  
                                __ptext23 491E                                  __ptext15 2536  
                                __ptext40 3E06                                  __ptext32 4812  
                                __ptext24 2180                                  __ptext16 2BFA  
                                __ptext41 3000                                  __ptext33 30F8  
                                __ptext25 4732                                  __ptext17 2030  
                                __ptext50 43A0                                  __ptext42 4562  
                                __ptext34 400C                                  __ptext26 29D6  
                                __ptext18 4448                                  __ptext51 4A18  
                                __ptext43 1B4A                                  __ptext35 3CFA  
                                __ptext27 44D8                                  __ptext19 49EA  
                                __ptext60 4490                                  __ptext52 3786  
                                __ptext44 36D6                                  __ptext36 2402  
                                __ptext28 0012                                  __ptext61 3D80  
                                __ptext53 48D2                                  __ptext45 4886  
                                __ptext37 2792                                  __ptext29 0BE2  
                                __ptext70 3AAE                                  __ptext62 49D6  
                                __ptext54 49C0                                  __ptext46 3BD8  
                                __ptext38 4288                                  __ptext71 451E  
                                __ptext63 48F8                                  __ptext47 48AC  
                                __ptext39 4156                                  __ptext80 101A  
                                __ptext72 3C6A                                  __ptext64 2664  
                                __ptext56 1506                                  __ptext48 465E  
                                __ptext81 4344                                  __ptext73 2F06  
                                __ptext65 22C4                                  __ptext57 43F6  
                                __ptext49 2D00                                  __ptext90 361A  
                                __ptext82 3832                                  __ptext74 3A16  
                                __ptext66 4698                                  __ptext58 3F0C  
                                __ptext91 348A                                  __ptext83 41BE  
                                __ptext75 33B2                                  __ptext67 4790  
                                __ptext59 4762                                  __ptext84 2E04  
                                __ptext76 32D6                                  __ptext68 45A4  
                                __ptext85 4622                                  __ptext77 47BE  
                                __ptext69 4988                                  __ptext86 3B44  
                                __ptext78 3976                                  __ptext87 42E6  
                                __ptext79 28BC                                  __ptext88 2AEE  
                                __ptext89 3556                                  crc8@dado 0063  
                                __powers_ 7D79             recebeByte@checksumRecebimento 0258  
                        _gravaDadosEeprom 2030                          __size_of_sprintf 0BD0  
                      __end_of_readEeprom 49FC                          __size_of_strncmp 0082  
                        __size_of_toupper 0014                                strcpy@from 0003  
                          _dadosRecebidos 0300                             __size_of_leAD 0070  
                           __size_of_crc8 0024                                  _error_AT 0265  
                                _error_RX 0263                                  _error_TX 01FF  
                    parseLoRaWan@previous 0074            __end_of_USBCtrlTrfSetupHandler 3CFA  
                           __size_of_main 0240                         ?_USBCtrlEPService 0001  
                                _tamFrame 005B                                strncmp@len 0005  
                       main@statusLoRaWan 01CF                        ??_USBCtrlEPService 001B  
                           _MAC_JOIN_OTAA 7EBA                               ??_leMedidas 006D  
                     _USBCtrlTrfInHandler 361A                                _MAC_TX_CNF 7ECD  
                     __end_of_verificaUSB 4732                                  _response 0266  
                                _setup_AD 49AA                                  _outPipes 0033  
                            _set_link_key 7EEA                      _USBCtrlTrfOutHandler 42E6  
                                int$flags 005F                    retornaDadosEeprom@dado 0073  
               _USBCtrlEPAllowStatusStage 3556                            converter@conv1 0006  
                          converter@conv2 0002                           _get_own_mac_low 7EF4  
                                _protocol 0264                            converter@resul 0003  
                                main@resp 01D0                    ??_USBTransferOnePacket 0064  
                           ??_writeEeprom 0062                              ??_setup_ccp1 0060  
                             _MSG_LORAWAN 02DB                     __CFG_CPUDIV$OSC1_PLL2 000000  
                            ??_setup_uart 0071                 _USBDeferStatusStagePacket 0053  
                CDCTxService@byte_to_send 006C                                 putch@data 0060  
                             ??_converter 0003                            writeEeprom@end 0063  
                             ??_le_pulsos 0064                                _INTCONbits 000FF2  
                          TxLoRaWan@porta 00F7                      ?_USBCtrlTrfInHandler 0001  
                                memcpy@d1 0001                                  memcpy@s1 0003  
                         _delivery_status 0261             USBCtrlTrfTxService@byteToSend 0001  
                                isdigit@c 0062                                  memset@p1 0060  
                                scale@scl 0095                          ?_USBStallHandler 0001  
                USBStdFeatureReqHandler@p 0019                           _initRecebeDados 49C0  
                                intlevel2 0000                                 sprintf@ap 00E1  
                               sprintf@cp 00DD                          __tdiv_to_l_@exp1 006E  
                               sprintf@sp 00C7                          __tdiv_to_l_@cntr 006D  
                  __size_of_USBDeviceInit 0144                          __tdiv_to_l_@quot 0069  
 __end_of_USER_USB_CALLBACK_EVENT_HANDLER 43A0  __size_of_USER_USB_CALLBACK_EVENT_HANDLER 005C  
       ??_USER_USB_CALLBACK_EVENT_HANDLER 0013          ?_USER_USB_CALLBACK_EVENT_HANDLER 000D  
         _USER_USB_CALLBACK_EVENT_HANDLER 4344              i2USBTransferOnePacket@handle 000A  
                        ___lldiv@dividend 0060                     _horimetroLigadoMedido 025C  
                     parseLoRaWan@timeout 007B                                 strncmp@s1 0001  
                               strncmp@s2 0003                        __end_of_setup_ccp1 4622  
                      __end_of_setup_uart 3976                i2USBTransferOnePacket@data 0002  
                  ??_USBConfigureEndpoint 0002                     ?_USBCtrlTrfOutHandler 0001  
                            ?_leHorimetro 0060                       _USBCtrlTrfRxService 2AEE  
                      _USBWakeFromSuspend 4698                     _gravaDadosEeprom$4779 007B  
                 _USBStdFeatureReqHandler 101A                        _USBCheckCDCRequest 3832  
                     _USBCtrlTrfTxService 348A                __size_of_SYS_InterruptHigh 2028  
                            ?__tdiv_to_l_ 0060                                  sprintf@c 00F6  
                                sprintf@f 00C9                                  strcat@cp 0064  
               recebeByte@tamanhoMensagem 01F0                                  strcat@to 0060  
                     ?_USBWakeFromSuspend 0001                                  strcmp@s1 0001  
                                strcmp@s2 0003                          ___lldiv@quotient 0068  
                   ??_USBCtrlTrfInHandler 0002                                  strcpy@cp 0005  
                                strlen@cp 0064                                  strcpy@to 0001  
                   _USBAlternateInterface 02D9                                  toupper@c 0001  
                     ?_USBCheckCDCRequest 0001                      __end_of_write_values 7EEE  
                     __end_of_writeEeprom 4490                 i2USBTransferOnePacket@dir 0001  
               i2USBTransferOnePacket@len 0004                       USBEnableEndpoint@ep 000C  
                         _endpoint_number 0055                      ?_USBCtrlTrfRxService 0001  
                      __CFG_FOSC$HSPLL_HS 000000                  ?_USBCtrlEPAllowDataStage 0001  
                    ?_USBCtrlTrfTxService 0001              __size_of_inicializaVariaveis 0064  
                             _verificaUSB 4702                  __end_of_get_own_mac_high 7EF4  
            _USBStatusStageTimeoutCounter 0054                      ??_USBWakeFromSuspend 0015  
              USBTransferOnePacket@handle 0069                      __end_of_CDCTxService 2664  
                 __end_of_get_own_mac_low 7EF6                      ??_USBCheckCDCRequest 0001  
                              _USB_CD_Ptr 7DED  
