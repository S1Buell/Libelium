

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Wed Nov 22 16:21:10 2017

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	text0,global,reloc=2,class=CODE,delta=1
    23                           	psect	text1,global,reloc=2,class=CODE,delta=1
    24                           	psect	text2,global,reloc=2,class=CODE,delta=1
    25                           	psect	text3,global,reloc=2,class=CODE,delta=1
    26                           	psect	text4,global,reloc=2,class=CODE,delta=1
    27                           	psect	text5,global,reloc=2,class=CODE,delta=1
    28                           	psect	text6,global,reloc=2,class=CODE,delta=1
    29                           	psect	text7,global,reloc=2,class=CODE,delta=1
    30                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text10,global,reloc=2,class=CODE,delta=1
    33                           	psect	text11,global,reloc=2,class=CODE,delta=1
    34                           	psect	text12,global,reloc=2,class=CODE,delta=1
    35                           	psect	text13,global,reloc=2,class=CODE,delta=1
    36                           	psect	text14,global,reloc=2,class=CODE,delta=1
    37                           	psect	text15,global,reloc=2,class=CODE,delta=1
    38                           	psect	text16,global,reloc=2,class=CODE,delta=1
    39                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text18,global,reloc=2,class=CODE,delta=1
    41                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text20,global,reloc=2,class=CODE,delta=1
    43                           	psect	text21,global,reloc=2,class=CODE,delta=1
    44                           	psect	text22,global,reloc=2,class=CODE,delta=1
    45                           	psect	text23,global,reloc=2,class=CODE,delta=1
    46                           	psect	text24,global,reloc=2,class=CODE,delta=1
    47                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text26,global,reloc=2,class=CODE,delta=1
    49                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text42,global,reloc=2,class=CODE,delta=1
    65                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text44,global,reloc=2,class=CODE,delta=1
    67                           	psect	text45,global,reloc=2,class=CODE,delta=1
    68                           	psect	text46,global,reloc=2,class=CODE,delta=1
    69                           	psect	text47,global,reloc=2,class=CODE,delta=1
    70                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    71                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    72                           	psect	text49,global,reloc=2,class=CODE,delta=1
    73                           	psect	text50,global,reloc=2,class=CODE,delta=1
    74                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text54,global,reloc=2,class=CODE,delta=1
    78                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text56,global,reloc=2,class=CODE,delta=1
    80                           	psect	text57,global,reloc=2,class=CODE,delta=1
    81                           	psect	text58,global,reloc=2,class=CODE,delta=1
    82                           	psect	text59,global,reloc=2,class=CODE,delta=1
    83                           	psect	text60,global,reloc=2,class=CODE,delta=1
    84                           	psect	text61,global,reloc=2,class=CODE,delta=1
    85                           	psect	text62,global,reloc=2,class=CODE,delta=1
    86                           	psect	text63,global,reloc=2,class=CODE,delta=1
    87                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text65,global,reloc=2,class=CODE,delta=1
    89                           	psect	text66,global,reloc=2,class=CODE,delta=1
    90                           	psect	text67,global,reloc=2,class=CODE,delta=1
    91                           	psect	text68,global,reloc=2,class=CODE,delta=1
    92                           	psect	text69,global,reloc=2,class=CODE,delta=1
    93                           	psect	text70,global,reloc=2,class=CODE,delta=1
    94                           	psect	text71,global,reloc=2,class=CODE,delta=1
    95                           	psect	text72,global,reloc=2,class=CODE,delta=1
    96                           	psect	text73,global,reloc=2,class=CODE,delta=1
    97                           	psect	text74,global,reloc=2,class=CODE,delta=1
    98                           	psect	text75,global,reloc=2,class=CODE,delta=1
    99                           	psect	text76,global,reloc=2,class=CODE,delta=1
   100                           	psect	text77,global,reloc=2,class=CODE,delta=1
   101                           	psect	text78,global,reloc=2,class=CODE,delta=1
   102                           	psect	text79,global,reloc=2,class=CODE,delta=1
   103                           	psect	text80,global,reloc=2,class=CODE,delta=1
   104                           	psect	text81,global,reloc=2,class=CODE,delta=1
   105                           	psect	text82,global,reloc=2,class=CODE,delta=1
   106                           	psect	text83,global,reloc=2,class=CODE,delta=1
   107                           	psect	text84,global,reloc=2,class=CODE,delta=1
   108                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   109                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   110                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   111                           	dabs	1,0x400,48,_BDT
   112                           	dabs	1,0x500,64,_cdc_data_tx
   113                           	dabs	1,0x438,8,_CtrlTrfData
   114                           	dabs	1,0x430,8,_SetupPkt
   115                           	dabs	1,0x540,64,_cdc_data_rx
   116  0000                     
   117                           ; Version 1.44
   118                           ; Generated 14/09/2017 GMT
   119                           ; 
   120                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   121                           ; All rights reserved.
   122                           ; 
   123                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   124                           ; 
   125                           ; Redistribution and use in source and binary forms, with or without modification, are
   126                           ; permitted provided that the following conditions are met:
   127                           ; 
   128                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   129                           ;        conditions and the following disclaimer.
   130                           ; 
   131                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   132                           ;        of conditions and the following disclaimer in the documentation and/or other
   133                           ;        materials provided with the distribution.
   134                           ; 
   135                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   136                           ;        software without specific prior written permission.
   137                           ; 
   138                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   139                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   140                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   141                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   142                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   143                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   144                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   145                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   146                           ; 
   147                           ; 
   148                           ; Code-generator required, PIC18F4550 Definitions
   149                           ; 
   150                           ; SFR Addresses
   151  0000                     
   152                           	psect	idataBANK1
   153  004568                     __pidataBANK1:
   154                           	opt stack 0
   155                           
   156                           ;initializer for __send_retries
   157  004568  03                 	db	3
   158                           
   159                           	psect	idataBANK2
   160  0044A6                     __pidataBANK2:
   161                           	opt stack 0
   162                           
   163                           ;initializer for _MSG_LORAWAN
   164  0044A6  A7                 	db	low (STR_14+7)
   165  0044A7  7F                 	db	high (STR_14+7)
   166  0044A8  59                 	db	low STR_6
   167  0044A9  7F                 	db	high STR_6
   168  0044AA  75                 	db	low STR_7
   169  0044AB  7F                 	db	high STR_7
   170  0044AC  8B                 	db	low STR_8
   171  0044AD  7F                 	db	high STR_8
   172  0044AE  E0                 	db	low STR_9
   173  0044AF  7F                 	db	high STR_9
   174  0044B0  F6                 	db	low STR_10
   175  0044B1  7E                 	db	high STR_10
   176  0044B2  FA                 	db	low STR_11
   177  0044B3  7F                 	db	high STR_11
   178  0044B4  80                 	db	low STR_12
   179  0044B5  7F                 	db	high STR_12
   180  0044B6  27                 	db	low STR_13
   181  0044B7  7F                 	db	high STR_13
   182  0044B8  A0                 	db	low STR_14
   183  0044B9  7F                 	db	high STR_14
   184  0044BA  B3                 	db	low STR_15
   185  0044BB  7F                 	db	high STR_15
   186  0044BC  BB                 	db	low STR_16
   187  0044BD  7F                 	db	high STR_16
   188  0044BE  67                 	db	low STR_17
   189  0044BF  7F                 	db	high STR_17
   190  0044C0  D9                 	db	low STR_18
   191  0044C1  7F                 	db	high STR_18
   192  0044C2  49                 	db	low STR_19
   193  0044C3  7F                 	db	high STR_19
   194                           
   195                           ;initializer for _randx
   196  0044C4  0001               	dw	1
   197  0044C6  0000               	dw	0
   198                           
   199                           	psect	mediumconst
   200  007D50                     __pmediumconst:
   201                           	opt stack 0
   202  007D50  00                 	db	0
   203  007D51                     _dpowers:
   204                           	opt stack 0
   205  007D51  0001               	dw	1
   206  007D53  0000               	dw	0
   207  007D55  000A               	dw	10
   208  007D57  0000               	dw	0
   209  007D59  0064               	dw	100
   210  007D5B  0000               	dw	0
   211  007D5D  03E8               	dw	1000
   212  007D5F  0000               	dw	0
   213  007D61  2710               	dw	10000
   214  007D63  0000               	dw	0
   215  007D65  86A0               	dw	34464
   216  007D67  0001               	dw	1
   217  007D69  4240               	dw	16960
   218  007D6B  000F               	dw	15
   219  007D6D  9680               	dw	38528
   220  007D6F  0098               	dw	152
   221  007D71  E100               	dw	57600
   222  007D73  05F5               	dw	1525
   223  007D75  CA00               	dw	51712
   224  007D77  3B9A               	dw	15258
   225  007D79                     __end_of_dpowers:
   226                           	opt stack 0
   227  007D79                     __powers_:
   228                           	opt stack 0
   229  007D79  00                 	db	0
   230  007D7A  80                 	db	128
   231  007D7B  3F                 	db	63
   232  007D7C  00                 	db	0
   233  007D7D  20                 	db	32
   234  007D7E  41                 	db	65
   235  007D7F  00                 	db	0
   236  007D80  C8                 	db	200
   237  007D81  42                 	db	66
   238  007D82  00                 	db	0
   239  007D83  7A                 	db	122
   240  007D84  44                 	db	68
   241  007D85  40                 	db	64
   242  007D86  1C                 	db	28
   243  007D87  46                 	db	70
   244  007D88  50                 	db	80
   245  007D89  C3                 	db	195
   246  007D8A  47                 	db	71
   247  007D8B  24                 	db	36
   248  007D8C  74                 	db	116
   249  007D8D  49                 	db	73
   250  007D8E  97                 	db	151
   251  007D8F  18                 	db	24
   252  007D90  4B                 	db	75
   253  007D91  BC                 	db	188
   254  007D92  BE                 	db	190
   255  007D93  4C                 	db	76
   256  007D94  6B                 	db	107
   257  007D95  6E                 	db	110
   258  007D96  4E                 	db	78
   259  007D97  03                 	db	3
   260  007D98  15                 	db	21
   261  007D99  50                 	db	80
   262  007D9A  79                 	db	121
   263  007D9B  AD                 	db	173
   264  007D9C  60                 	db	96
   265  007D9D  F3                 	db	243
   266  007D9E  49                 	db	73
   267  007D9F  71                 	db	113
   268  007DA0                     __end_of__powers_:
   269                           	opt stack 0
   270  007DA0                     __npowers_:
   271                           	opt stack 0
   272  007DA0  00                 	db	0
   273  007DA1  80                 	db	128
   274  007DA2  3F                 	db	63
   275  007DA3  CD                 	db	205
   276  007DA4  CC                 	db	204
   277  007DA5  3D                 	db	61
   278  007DA6  D7                 	db	215
   279  007DA7  23                 	db	35
   280  007DA8  3C                 	db	60
   281  007DA9  12                 	db	18
   282  007DAA  83                 	db	131
   283  007DAB  3A                 	db	58
   284  007DAC  B7                 	db	183
   285  007DAD  D1                 	db	209
   286  007DAE  38                 	db	56
   287  007DAF  C6                 	db	198
   288  007DB0  27                 	db	39
   289  007DB1  37                 	db	55
   290  007DB2  38                 	db	56
   291  007DB3  86                 	db	134
   292  007DB4  35                 	db	53
   293  007DB5  C0                 	db	192
   294  007DB6  D6                 	db	214
   295  007DB7  33                 	db	51
   296  007DB8  CC                 	db	204
   297  007DB9  2B                 	db	43
   298  007DBA  32                 	db	50
   299  007DBB  70                 	db	112
   300  007DBC  89                 	db	137
   301  007DBD  30                 	db	48
   302  007DBE  E7                 	db	231
   303  007DBF  DB                 	db	219
   304  007DC0  2E                 	db	46
   305  007DC1  E5                 	db	229
   306  007DC2  3C                 	db	60
   307  007DC3  1E                 	db	30
   308  007DC4  42                 	db	66
   309  007DC5  A2                 	db	162
   310  007DC6  0D                 	db	13
   311  007DC7                     __end_of__npowers_:
   312                           	opt stack 0
   313  007DC7                     _hexpowers:
   314                           	opt stack 0
   315  007DC7  0001               	dw	1
   316  007DC9  0000               	dw	0
   317  007DCB  0010               	dw	16
   318  007DCD  0000               	dw	0
   319  007DCF  0100               	dw	256
   320  007DD1  0000               	dw	0
   321  007DD3  1000               	dw	4096
   322  007DD5  0000               	dw	0
   323  007DD7  0000               	dw	0
   324  007DD9  0001               	dw	1
   325  007DDB  0000               	dw	0
   326  007DDD  0010               	dw	16
   327  007DDF  0000               	dw	0
   328  007DE1  0100               	dw	256
   329  007DE3  0000               	dw	0
   330  007DE5  1000               	dw	4096
   331  007DE7                     __end_of_hexpowers:
   332                           	opt stack 0
   333  007DE7                     _USB_SD_Ptr:
   334                           	opt stack 0
   335  007DE7  E4                 	db	low _sd000
   336  007DE8  7E                 	db	high _sd000
   337  007DE9  66                 	db	low _sd001
   338  007DEA  7E                 	db	high _sd001
   339  007DEB  32                 	db	low _sd002
   340  007DEC  7E                 	db	high _sd002
   341  007DED                     __end_of_USB_SD_Ptr:
   342                           	opt stack 0
   343  007DED                     _USB_CD_Ptr:
   344                           	opt stack 0
   345  007DED  EF                 	db	low _configDescriptor1
   346  007DEE  7D                 	db	high _configDescriptor1
   347  007DEF                     __end_of_USB_CD_Ptr:
   348                           	opt stack 0
   349  007DEF                     _configDescriptor1:
   350                           	opt stack 0
   351  007DEF  09                 	db	9
   352  007DF0  02                 	db	2
   353  007DF1  43                 	db	67
   354  007DF2  00                 	db	0
   355  007DF3  02                 	db	2
   356  007DF4  01                 	db	1
   357  007DF5  00                 	db	0
   358  007DF6  C0                 	db	192
   359  007DF7  32                 	db	50
   360  007DF8  09                 	db	9
   361  007DF9  04                 	db	4
   362  007DFA  00                 	db	0
   363  007DFB  00                 	db	0
   364  007DFC  01                 	db	1
   365  007DFD  02                 	db	2
   366  007DFE  02                 	db	2
   367  007DFF  01                 	db	1
   368  007E00  00                 	db	0
   369  007E01  05                 	db	5
   370  007E02  24                 	db	36
   371  007E03  00                 	db	0
   372  007E04  10                 	db	16
   373  007E05  01                 	db	1
   374  007E06  04                 	db	4
   375  007E07  24                 	db	36
   376  007E08  02                 	db	2
   377  007E09  02                 	db	2
   378  007E0A  05                 	db	5
   379  007E0B  24                 	db	36
   380  007E0C  06                 	db	6
   381  007E0D  00                 	db	0
   382  007E0E  01                 	db	1
   383  007E0F  05                 	db	5
   384  007E10  24                 	db	36
   385  007E11  01                 	db	1
   386  007E12  00                 	db	0
   387  007E13  01                 	db	1
   388  007E14  07                 	db	7
   389  007E15  05                 	db	5
   390  007E16  81                 	db	129
   391  007E17  03                 	db	3
   392  007E18  08                 	db	8
   393  007E19  00                 	db	0
   394  007E1A  02                 	db	2
   395  007E1B  09                 	db	9
   396  007E1C  04                 	db	4
   397  007E1D  01                 	db	1
   398  007E1E  00                 	db	0
   399  007E1F  02                 	db	2
   400  007E20  0A                 	db	10
   401  007E21  00                 	db	0
   402  007E22  00                 	db	0
   403  007E23  00                 	db	0
   404  007E24  07                 	db	7
   405  007E25  05                 	db	5
   406  007E26  02                 	db	2
   407  007E27  02                 	db	2
   408  007E28  40                 	db	64
   409  007E29  00                 	db	0
   410  007E2A  00                 	db	0
   411  007E2B  07                 	db	7
   412  007E2C  05                 	db	5
   413  007E2D  82                 	db	130
   414  007E2E  02                 	db	2
   415  007E2F  40                 	db	64
   416  007E30  00                 	db	0
   417  007E31  00                 	db	0
   418  007E32                     __end_of_configDescriptor1:
   419                           	opt stack 0
   420  007E32                     _sd002:
   421                           	opt stack 0
   422  007E32  34                 	db	52
   423  007E33  03                 	db	3
   424  007E34  0043               	dw	67
   425  007E36  0044               	dw	68
   426  007E38  0043               	dw	67
   427  007E3A  0020               	dw	32
   428  007E3C  0052               	dw	82
   429  007E3E  0053               	dw	83
   430  007E40  002D               	dw	45
   431  007E42  0032               	dw	50
   432  007E44  0033               	dw	51
   433  007E46  0032               	dw	50
   434  007E48  0020               	dw	32
   435  007E4A  0045               	dw	69
   436  007E4C  006D               	dw	109
   437  007E4E  0075               	dw	117
   438  007E50  006C               	dw	108
   439  007E52  0061               	dw	97
   440  007E54  0074               	dw	116
   441  007E56  0069               	dw	105
   442  007E58  006F               	dw	111
   443  007E5A  006E               	dw	110
   444  007E5C  0020               	dw	32
   445  007E5E  0044               	dw	68
   446  007E60  0065               	dw	101
   447  007E62  006D               	dw	109
   448  007E64  006F               	dw	111
   449  007E66                     __end_of_sd002:
   450                           	opt stack 0
   451  007E66                     _sd001:
   452                           	opt stack 0
   453  007E66  34                 	db	52
   454  007E67  03                 	db	3
   455  007E68  004D               	dw	77
   456  007E6A  0069               	dw	105
   457  007E6C  0063               	dw	99
   458  007E6E  0072               	dw	114
   459  007E70  006F               	dw	111
   460  007E72  0063               	dw	99
   461  007E74  0068               	dw	104
   462  007E76  0069               	dw	105
   463  007E78  0070               	dw	112
   464  007E7A  0020               	dw	32
   465  007E7C  0054               	dw	84
   466  007E7E  0065               	dw	101
   467  007E80  0063               	dw	99
   468  007E82  0068               	dw	104
   469  007E84  006E               	dw	110
   470  007E86  006F               	dw	111
   471  007E88  006C               	dw	108
   472  007E8A  006F               	dw	111
   473  007E8C  0067               	dw	103
   474  007E8E  0079               	dw	121
   475  007E90  0020               	dw	32
   476  007E92  0049               	dw	73
   477  007E94  006E               	dw	110
   478  007E96  0063               	dw	99
   479  007E98  002E               	dw	46
   480  007E9A                     __end_of_sd001:
   481                           	opt stack 0
   482  007E9A                     _device_dsc:
   483                           	opt stack 0
   484  007E9A  12                 	db	18
   485  007E9B  01                 	db	1
   486  007E9C  0200               	dw	512
   487  007E9E  02                 	db	2
   488  007E9F  00                 	db	0
   489  007EA0  00                 	db	0
   490  007EA1  08                 	db	8
   491  007EA2  04D8               	dw	1240
   492  007EA4  000A               	dw	10
   493  007EA6  0100               	dw	256
   494  007EA8  01                 	db	1
   495  007EA9  02                 	db	2
   496  007EAA  00                 	db	0
   497  007EAB  01                 	db	1
   498  007EAC                     __end_of_device_dsc:
   499                           	opt stack 0
   500  007EAC                     _MAC_SET_CH_STATUS:
   501                           	opt stack 0
   502  007EAC  73                 	db	115
   503  007EAD  65                 	db	101
   504  007EAE  74                 	db	116
   505  007EAF  20                 	db	32
   506  007EB0  63                 	db	99
   507  007EB1  68                 	db	104
   508  007EB2  20                 	db	32
   509  007EB3  73                 	db	115
   510  007EB4  74                 	db	116
   511  007EB5  61                 	db	97
   512  007EB6  74                 	db	116
   513  007EB7  75                 	db	117
   514  007EB8  73                 	db	115
   515  007EB9  00                 	db	0
   516  007EBA                     __end_of_MAC_SET_CH_STATUS:
   517                           	opt stack 0
   518  007EBA                     _MAC_JOIN_OTAA:
   519                           	opt stack 0
   520  007EBA  6A                 	db	106
   521  007EBB  6F                 	db	111
   522  007EBC  69                 	db	105
   523  007EBD  6E                 	db	110
   524  007EBE  20                 	db	32
   525  007EBF  6F                 	db	111
   526  007EC0  74                 	db	116
   527  007EC1  61                 	db	97
   528  007EC2  61                 	db	97
   529  007EC3  00                 	db	0
   530  007EC4                     __end_of_MAC_JOIN_OTAA:
   531                           	opt stack 0
   532  007EC4                     _MAC_TX_UNCNF:
   533                           	opt stack 0
   534  007EC4  74                 	db	116
   535  007EC5  78                 	db	120
   536  007EC6  20                 	db	32
   537  007EC7  75                 	db	117
   538  007EC8  6E                 	db	110
   539  007EC9  63                 	db	99
   540  007ECA  6E                 	db	110
   541  007ECB  66                 	db	102
   542  007ECC  00                 	db	0
   543  007ECD                     __end_of_MAC_TX_UNCNF:
   544                           	opt stack 0
   545  007ECD                     _MAC_TX_CNF:
   546                           	opt stack 0
   547  007ECD  74                 	db	116
   548  007ECE  78                 	db	120
   549  007ECF  20                 	db	32
   550  007ED0  63                 	db	99
   551  007ED1  6E                 	db	110
   552  007ED2  66                 	db	102
   553  007ED3  00                 	db	0
   554  007ED4                     __end_of_MAC_TX_CNF:
   555                           	opt stack 0
   556  007ED4                     _SYS_RESET:
   557                           	opt stack 0
   558  007ED4  72                 	db	114
   559  007ED5  65                 	db	101
   560  007ED6  73                 	db	115
   561  007ED7  65                 	db	101
   562  007ED8  74                 	db	116
   563  007ED9  00                 	db	0
   564  007EDA                     __end_of_SYS_RESET:
   565                           	opt stack 0
   566  007EDA                     _SYS:
   567                           	opt stack 0
   568  007EDA  73                 	db	115
   569  007EDB  79                 	db	121
   570  007EDC  73                 	db	115
   571  007EDD  20                 	db	32
   572  007EDE  00                 	db	0
   573  007EDF                     __end_of_SYS:
   574                           	opt stack 0
   575  007EDF                     _MAC:
   576                           	opt stack 0
   577  007EDF  6D                 	db	109
   578  007EE0  61                 	db	97
   579  007EE1  63                 	db	99
   580  007EE2  20                 	db	32
   581  007EE3  00                 	db	0
   582  007EE4                     __end_of_MAC:
   583                           	opt stack 0
   584  007EE4                     _sd000:
   585                           	opt stack 0
   586  007EE4  04                 	db	4
   587  007EE5  03                 	db	3
   588  007EE6  0409               	dw	1033
   589  007EE8                     __end_of_sd000:
   590                           	opt stack 0
   591  007EE8                     _gs_encryption:
   592                           	opt stack 0
   593  007EE8  45                 	db	69
   594  007EE9  45                 	db	69
   595  007EEA                     __end_of_gs_encryption:
   596                           	opt stack 0
   597  007EEA                     _set_link_key:
   598                           	opt stack 0
   599  007EEA  4B                 	db	75
   600  007EEB  59                 	db	89
   601  007EEC                     __end_of_set_link_key:
   602                           	opt stack 0
   603  007EEC                     _write_values:
   604                           	opt stack 0
   605  007EEC  57                 	db	87
   606  007EED  52                 	db	82
   607  007EEE                     __end_of_write_values:
   608                           	opt stack 0
   609  007EEE                     _gs_channel:
   610                           	opt stack 0
   611  007EEE  43                 	db	67
   612  007EEF  48                 	db	72
   613  007EF0                     __end_of_gs_channel:
   614                           	opt stack 0
   615  007EF0                     _gs_pan:
   616                           	opt stack 0
   617  007EF0  49                 	db	73
   618  007EF1  44                 	db	68
   619  007EF2                     __end_of_gs_pan:
   620                           	opt stack 0
   621  007EF2                     _get_own_mac_high:
   622                           	opt stack 0
   623  007EF2  53                 	db	83
   624  007EF3  48                 	db	72
   625  007EF4                     __end_of_get_own_mac_high:
   626                           	opt stack 0
   627  007EF4                     _get_own_mac_low:
   628                           	opt stack 0
   629  007EF4  53                 	db	83
   630  007EF5  4C                 	db	76
   631  007EF6                     __end_of_get_own_mac_low:
   632                           	opt stack 0
   633  0000                     _ADRESL	set	4035
   634  0000                     _ADRESH	set	4036
   635  0000                     _ADCON2	set	4032
   636  0000                     _ADCON0	set	4034
   637  0000                     _ADCON1	set	4033
   638  0000                     _IPR1bits	set	3999
   639  0000                     _CCP1CON	set	4029
   640  0000                     _CCPR1L	set	4030
   641  0000                     _CCPR1H	set	4031
   642  0000                     _TMR1L	set	4046
   643  0000                     _TMR1H	set	4047
   644  0000                     _T3CON	set	4017
   645  0000                     _T0CON	set	4053
   646  0000                     _T1CON	set	4045
   647  0000                     _RCREG	set	4014
   648  0000                     _RCSTA	set	4011
   649  0000                     _TXREG	set	4013
   650  0000                     _RCSTAbits	set	4011
   651  0000                     _SPBRGH	set	4016
   652  0000                     _SPBRG	set	4015
   653  0000                     _BAUDCONbits	set	4024
   654  0000                     _TXSTAbits	set	4012
   655  0000                     _TRISCbits	set	3988
   656  0000                     _PORTEbits	set	3972
   657  0000                     _TRISDbits	set	3989
   658  0000                     _TRISEbits	set	3990
   659  0000                     _UEP0bits	set	3952
   660  0000                     _INTCONbits	set	4082
   661  0000                     _IPR2bits	set	4002
   662  0000                     _RCONbits	set	4048
   663  0000                     _PORTCbits	set	3970
   664  0000                     _UCON	set	3949
   665  0000                     _USTAT	set	3948
   666  0000                     _PIR2bits	set	4001
   667  0000                     _UIEbits	set	3945
   668  0000                     _UIRbits	set	3944
   669  0000                     _UADDR	set	3950
   670  0000                     _UCONbits	set	3949
   671  0000                     _UIE	set	3945
   672  0000                     _UEIE	set	3947
   673  0000                     _UCFG	set	3951
   674  0000                     _UIR	set	3944
   675  0000                     _UEIR	set	3946
   676  0000                     _PIE2bits	set	4000
   677  0000                     _PORTDbits	set	3971
   678  0000                     _UEP1	set	3953
   679  0000                     _UEP0	set	3952
   680  0000                     _GO_DONE	set	32273
   681  0000                     _ADIE	set	31982
   682  0000                     _ADIF	set	31990
   683  0000                     _ADON	set	32272
   684  0000                     _TMR0IE	set	32661
   685  0000                     _GIEH	set	32663
   686  0000                     _TMR1IE	set	31976
   687  0000                     _TXIF	set	31988
   688  0000                     _USBIE	set	32005
   689  0000                     _RCIF	set	31989
   690  0000                     _RCIE	set	31981
   691  0000                     _CCP1IE	set	31978
   692  0000                     _CCP1IF	set	31986
   693  007EF6                     STR_10:
   694  007EF6  66                 	db	102	;'f'
   695  007EF7  72                 	db	114	;'r'
   696  007EF8  61                 	db	97	;'a'
   697  007EF9  6D                 	db	109	;'m'
   698  007EFA  65                 	db	101	;'e'
   699  007EFB  5F                 	db	95	;'_'
   700  007EFC  63                 	db	99	;'c'
   701  007EFD  6F                 	db	111	;'o'
   702  007EFE  75                 	db	117	;'u'
   703  007EFF  6E                 	db	110	;'n'
   704  007F00  74                 	db	116	;'t'
   705  007F01  65                 	db	101	;'e'
   706  007F02  72                 	db	114	;'r'
   707  007F03  5F                 	db	95	;'_'
   708  007F04  65                 	db	101	;'e'
   709  007F05  72                 	db	114	;'r'
   710  007F06  72                 	db	114	;'r'
   711  007F07  5F                 	db	95	;'_'
   712  007F08  72                 	db	114	;'r'
   713  007F09  65                 	db	101	;'e'
   714  007F0A  6A                 	db	106	;'j'
   715  007F0B  6F                 	db	111	;'o'
   716  007F0C  69                 	db	105	;'i'
   717  007F0D  6E                 	db	110	;'n'
   718  007F0E  5F                 	db	95	;'_'
   719  007F0F  6E                 	db	110	;'n'
   720  007F10  65                 	db	101	;'e'
   721  007F11  65                 	db	101	;'e'
   722  007F12  64                 	db	100	;'d'
   723  007F13  65                 	db	101	;'e'
   724  007F14  64                 	db	100	;'d'
   725  007F15  00                 	db	0
   726  007F16                     STR_26:
   727  007F16  30                 	db	48	;'0'
   728  007F17  31                 	db	49	;'1'
   729  007F18  32                 	db	50	;'2'
   730  007F19  33                 	db	51	;'3'
   731  007F1A  34                 	db	52	;'4'
   732  007F1B  35                 	db	53	;'5'
   733  007F1C  36                 	db	54	;'6'
   734  007F1D  37                 	db	55	;'7'
   735  007F1E  38                 	db	56	;'8'
   736  007F1F  39                 	db	57	;'9'
   737  007F20  41                 	db	65	;'A'
   738  007F21  42                 	db	66	;'B'
   739  007F22  43                 	db	67	;'C'
   740  007F23  44                 	db	68	;'D'
   741  007F24  45                 	db	69	;'E'
   742  007F25  46                 	db	70	;'F'
   743  007F26  00                 	db	0
   744  007F27                     STR_13:
   745  007F27  69                 	db	105	;'i'
   746  007F28  6E                 	db	110	;'n'
   747  007F29  76                 	db	118	;'v'
   748  007F2A  61                 	db	97	;'a'
   749  007F2B  6C                 	db	108	;'l'
   750  007F2C  69                 	db	105	;'i'
   751  007F2D  64                 	db	100	;'d'
   752  007F2E  5F                 	db	95	;'_'
   753  007F2F  64                 	db	100	;'d'
   754  007F30  61                 	db	97	;'a'
   755  007F31  74                 	db	116	;'t'
   756  007F32  61                 	db	97	;'a'
   757  007F33  5F                 	db	95	;'_'
   758  007F34  6C                 	db	108	;'l'
   759  007F35  65                 	db	101	;'e'
   760  007F36  6E                 	db	110	;'n'
   761  007F37  00                 	db	0
   762  007F38  3C                 	db	60	;'<'
   763  007F39  3D                 	db	61	;'='
   764  007F3A  3E                 	db	62	;'>'
   765  007F3B  80                 	db	-128
   766  007F3C  4E                 	db	78	;'N'
   767  007F3D  23                 	db	35
   768  007F3E  25                 	db	37
   769  007F3F  6C                 	db	108	;'l'
   770  007F40  64                 	db	100	;'d'
   771  007F41  23                 	db	35
   772  007F42  25                 	db	37
   773  007F43  73                 	db	115	;'s'
   774  007F44  23                 	db	35
   775  007F45  25                 	db	37
   776  007F46  64                 	db	100	;'d'
   777  007F47  23                 	db	35
   778  007F48  00                 	db	0
   779  007F49                     STR_19:
   780  007F49  61                 	db	97	;'a'
   781  007F4A  63                 	db	99	;'c'
   782  007F4B  63                 	db	99	;'c'
   783  007F4C  65                 	db	101	;'e'
   784  007F4D  70                 	db	112	;'p'
   785  007F4E  74                 	db	116	;'t'
   786  007F4F  65                 	db	101	;'e'
   787  007F50  64                 	db	100	;'d'
   788  007F51  52                 	db	82	;'R'
   789  007F52  4E                 	db	78	;'N'
   790  007F53  32                 	db	50	;'2'
   791  007F54  39                 	db	57	;'9'
   792  007F55  30                 	db	48	;'0'
   793  007F56  33                 	db	51	;'3'
   794  007F57  20                 	db	32
   795  007F58  00                 	db	0
   796  007F59                     STR_6:
   797  007F59  69                 	db	105	;'i'
   798  007F5A  6E                 	db	110	;'n'
   799  007F5B  76                 	db	118	;'v'
   800  007F5C  61                 	db	97	;'a'
   801  007F5D  6C                 	db	108	;'l'
   802  007F5E  69                 	db	105	;'i'
   803  007F5F  64                 	db	100	;'d'
   804  007F60  5F                 	db	95	;'_'
   805  007F61  70                 	db	112	;'p'
   806  007F62  61                 	db	97	;'a'
   807  007F63  72                 	db	114	;'r'
   808  007F64  61                 	db	97	;'a'
   809  007F65  6D                 	db	109	;'m'
   810  007F66  00                 	db	0
   811  007F67                     STR_17:
   812  007F67  6B                 	db	107	;'k'
   813  007F68  65                 	db	101	;'e'
   814  007F69  79                 	db	121	;'y'
   815  007F6A  73                 	db	115	;'s'
   816  007F6B  5F                 	db	95	;'_'
   817  007F6C  6E                 	db	110	;'n'
   818  007F6D  6F                 	db	111	;'o'
   819  007F6E  74                 	db	116	;'t'
   820  007F6F  5F                 	db	95	;'_'
   821  007F70  69                 	db	105	;'i'
   822  007F71  6E                 	db	110	;'n'
   823  007F72  69                 	db	105	;'i'
   824  007F73  74                 	db	116	;'t'
   825  007F74  00                 	db	0
   826  007F75                     STR_7:
   827  007F75  6E                 	db	110	;'n'
   828  007F76  6F                 	db	111	;'o'
   829  007F77  74                 	db	116	;'t'
   830  007F78  5F                 	db	95	;'_'
   831  007F79  6A                 	db	106	;'j'
   832  007F7A  6F                 	db	111	;'o'
   833  007F7B  69                 	db	105	;'i'
   834  007F7C  6E                 	db	110	;'n'
   835  007F7D  65                 	db	101	;'e'
   836  007F7E  64                 	db	100	;'d'
   837  007F7F  00                 	db	0
   838  007F80                     STR_12:
   839  007F80  6D                 	db	109	;'m'
   840  007F81  61                 	db	97	;'a'
   841  007F82  63                 	db	99	;'c'
   842  007F83  5F                 	db	95	;'_'
   843  007F84  70                 	db	112	;'p'
   844  007F85  61                 	db	97	;'a'
   845  007F86  75                 	db	117	;'u'
   846  007F87  73                 	db	115	;'s'
   847  007F88  65                 	db	101	;'e'
   848  007F89  64                 	db	100	;'d'
   849  007F8A  00                 	db	0
   850  007F8B                     STR_8:
   851  007F8B  6E                 	db	110	;'n'
   852  007F8C  6F                 	db	111	;'o'
   853  007F8D  5F                 	db	95	;'_'
   854  007F8E  66                 	db	102	;'f'
   855  007F8F  72                 	db	114	;'r'
   856  007F90  65                 	db	101	;'e'
   857  007F91  65                 	db	101	;'e'
   858  007F92  5F                 	db	95	;'_'
   859  007F93  63                 	db	99	;'c'
   860  007F94  68                 	db	104	;'h'
   861  007F95  00                 	db	0
   862  007F96                     STR_21:
   863  007F96  25                 	db	37
   864  007F97  73                 	db	115	;'s'
   865  007F98  20                 	db	32
   866  007F99  25                 	db	37
   867  007F9A  64                 	db	100	;'d'
   868  007F9B  20                 	db	32
   869  007F9C  6F                 	db	111	;'o'
   870  007F9D  66                 	db	102	;'f'
   871  007F9E  66                 	db	102	;'f'
   872  007F9F  00                 	db	0
   873  007FA0                     STR_14:
   874  007FA0  6D                 	db	109	;'m'
   875  007FA1  61                 	db	97	;'a'
   876  007FA2  63                 	db	99	;'c'
   877  007FA3  5F                 	db	95	;'_'
   878  007FA4  74                 	db	116	;'t'
   879  007FA5  78                 	db	120	;'x'
   880  007FA6  5F                 	db	95	;'_'
   881  007FA7  6F                 	db	111	;'o'
   882  007FA8  6B                 	db	107	;'k'
   883  007FA9  00                 	db	0
   884  007FAA                     STR_20:
   885  007FAA  25                 	db	37
   886  007FAB  73                 	db	115	;'s'
   887  007FAC  20                 	db	32
   888  007FAD  25                 	db	37
   889  007FAE  64                 	db	100	;'d'
   890  007FAF  20                 	db	32
   891  007FB0  6F                 	db	111	;'o'
   892  007FB1  6E                 	db	110	;'n'
   893  007FB2  00                 	db	0
   894  007FB3                     STR_15:
   895  007FB3  6D                 	db	109	;'m'
   896  007FB4  61                 	db	97	;'a'
   897  007FB5  63                 	db	99	;'c'
   898  007FB6  5F                 	db	95	;'_'
   899  007FB7  72                 	db	114	;'r'
   900  007FB8  78                 	db	120	;'x'
   901  007FB9  20                 	db	32
   902  007FBA  00                 	db	0
   903  007FBB                     STR_16:
   904  007FBB  6D                 	db	109	;'m'
   905  007FBC  61                 	db	97	;'a'
   906  007FBD  63                 	db	99	;'c'
   907  007FBE  5F                 	db	95	;'_'
   908  007FBF  65                 	db	101	;'e'
   909  007FC0  72                 	db	114	;'r'
   910  007FC1  72                 	db	114	;'r'
   911  007FC2  00                 	db	0
   912  007FC3  25                 	db	37
   913  007FC4  73                 	db	115	;'s'
   914  007FC5  3A                 	db	58	;':'
   915  007FC6  25                 	db	37
   916  007FC7  6C                 	db	108	;'l'
   917  007FC8  75                 	db	117	;'u'
   918  007FC9  23                 	db	35
   919  007FCA  00                 	db	0
   920  007FCB                     STR_25:
   921  007FCB  28                 	db	40
   922  007FCC  6E                 	db	110	;'n'
   923  007FCD  75                 	db	117	;'u'
   924  007FCE  6C                 	db	108	;'l'
   925  007FCF  6C                 	db	108	;'l'
   926  007FD0  29                 	db	41
   927  007FD1  00                 	db	0
   928  007FD2                     STR_22:
   929  007FD2  25                 	db	37
   930  007FD3  73                 	db	115	;'s'
   931  007FD4  20                 	db	32
   932  007FD5  25                 	db	37
   933  007FD6  64                 	db	100	;'d'
   934  007FD7  20                 	db	32
   935  007FD8  00                 	db	0
   936  007FD9                     STR_18:
   937  007FD9  64                 	db	100	;'d'
   938  007FDA  65                 	db	101	;'e'
   939  007FDB  6E                 	db	110	;'n'
   940  007FDC  69                 	db	105	;'i'
   941  007FDD  65                 	db	101	;'e'
   942  007FDE  64                 	db	100	;'d'
   943  007FDF  00                 	db	0
   944  007FE0                     STR_9:
   945  007FE0  73                 	db	115	;'s'
   946  007FE1  69                 	db	105	;'i'
   947  007FE2  6C                 	db	108	;'l'
   948  007FE3  65                 	db	101	;'e'
   949  007FE4  6E                 	db	110	;'n'
   950  007FE5  74                 	db	116	;'t'
   951  007FE6  00                 	db	0
   952  007FE7  25                 	db	37
   953  007FE8  73                 	db	115	;'s'
   954  007FE9  3A                 	db	58	;':'
   955  007FEA  25                 	db	37
   956  007FEB  66                 	db	102	;'f'
   957  007FEC  23                 	db	35
   958  007FED  00                 	db	0
   959  007FEE  25                 	db	37
   960  007FEF  73                 	db	115	;'s'
   961  007FF0  3A                 	db	58	;':'
   962  007FF1  25                 	db	37
   963  007FF2  73                 	db	115	;'s'
   964  007FF3  23                 	db	35
   965  007FF4  00                 	db	0
   966  007FF5                     STR_24:
   967  007FF5  25                 	db	37
   968  007FF6  30                 	db	48	;'0'
   969  007FF7  32                 	db	50	;'2'
   970  007FF8  58                 	db	88	;'X'
   971  007FF9  00                 	db	0
   972  007FFA                     STR_11:
   973  007FFA  62                 	db	98	;'b'
   974  007FFB  75                 	db	117	;'u'
   975  007FFC  73                 	db	115	;'s'
   976  007FFD  79                 	db	121	;'y'
   977  007FFE  00                 	db	0
   978  0000                     
   979                           ; #config settings
   980  007FFF  00                 	db	0	; dummy byte at the end
   981  0000                     
   982                           	psect	cinit
   983  003598                     __pcinit:
   984                           	opt stack 0
   985  003598                     start_initialization:
   986                           	opt stack 0
   987  003598                     __initialization:
   988                           	opt stack 0
   989                           
   990                           ; Initialize objects allocated to BANK2 (34 bytes)
   991                           ; load TBLPTR registers with __pidataBANK2
   992  003598  0EA6               	movlw	low __pidataBANK2
   993  00359A  6EF6               	movwf	tblptrl,c
   994  00359C  0E44               	movlw	high __pidataBANK2
   995  00359E  6EF7               	movwf	tblptrh,c
   996  0035A0  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   997  0035A2  6EF8               	movwf	tblptru,c
   998  0035A4  EE02  F0C2         	lfsr	0,__pdataBANK2
   999  0035A8  EE10 F022          	lfsr	1,34
  1000  0035AC                     copy_data0:
  1001  0035AC  0009               	tblrd		*+
  1002  0035AE  CFF5 FFEE          	movff	tablat,postinc0
  1003  0035B2  50E5               	movf	postdec1,w,c
  1004  0035B4  50E1               	movf	fsr1l,w,c
  1005  0035B6  E1FA               	bnz	copy_data0
  1006                           
  1007                           ; Initialize objects allocated to BANK1 (1 bytes)
  1008                           ; load TBLPTR registers with __pidataBANK1
  1009  0035B8  0E68               	movlw	low __pidataBANK1
  1010  0035BA  6EF6               	movwf	tblptrl,c
  1011  0035BC  0E45               	movlw	high __pidataBANK1
  1012  0035BE  6EF7               	movwf	tblptrh,c
  1013  0035C0  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1014  0035C2  6EF8               	movwf	tblptru,c
  1015  0035C4  0009               	tblrd		*+	;fetch initializer
  1016  0035C6  CFF5 F1FF          	movff	tablat,__pdataBANK1
  1017                           
  1018                           ; Clear objects allocated to BANK7 (150 bytes)
  1019  0035CA  EE07  F000         	lfsr	0,__pbssBANK7
  1020  0035CE  0E96               	movlw	150
  1021  0035D0                     clear_0:
  1022  0035D0  6AEE               	clrf	postinc0,c
  1023  0035D2  06E8               	decf	wreg,f,c
  1024  0035D4  E1FD               	bnz	clear_0
  1025                           
  1026                           ; Clear objects allocated to BANK6 (200 bytes)
  1027  0035D6  EE06  F000         	lfsr	0,__pbssBANK6
  1028  0035DA  0EC8               	movlw	200
  1029  0035DC                     clear_1:
  1030  0035DC  6AEE               	clrf	postinc0,c
  1031  0035DE  06E8               	decf	wreg,f,c
  1032  0035E0  E1FD               	bnz	clear_1
  1033                           
  1034                           ; Clear objects allocated to BANK3 (200 bytes)
  1035  0035E2  EE03  F000         	lfsr	0,__pbssBANK3
  1036  0035E6  0EC8               	movlw	200
  1037  0035E8                     clear_2:
  1038  0035E8  6AEE               	clrf	postinc0,c
  1039  0035EA  06E8               	decf	wreg,f,c
  1040  0035EC  E1FD               	bnz	clear_2
  1041                           
  1042                           ; Clear objects allocated to BANK2 (194 bytes)
  1043  0035EE  EE02  F000         	lfsr	0,__pbssBANK2
  1044  0035F2  0EC2               	movlw	194
  1045  0035F4                     clear_3:
  1046  0035F4  6AEE               	clrf	postinc0,c
  1047  0035F6  06E8               	decf	wreg,f,c
  1048  0035F8  E1FD               	bnz	clear_3
  1049                           
  1050                           ; Clear objects allocated to BANK1 (20 bytes)
  1051  0035FA  EE01  F0EB         	lfsr	0,__pbssBANK1
  1052  0035FE  0E14               	movlw	20
  1053  003600                     clear_4:
  1054  003600  6AEE               	clrf	postinc0,c
  1055  003602  06E8               	decf	wreg,f,c
  1056  003604  E1FD               	bnz	clear_4
  1057                           
  1058                           ; Clear objects allocated to BANK4 (100 bytes)
  1059  003606  EE04  F040         	lfsr	0,__pbssBANK4
  1060  00360A  0E64               	movlw	100
  1061  00360C                     clear_5:
  1062  00360C  6AEE               	clrf	postinc0,c
  1063  00360E  06E8               	decf	wreg,f,c
  1064  003610  E1FD               	bnz	clear_5
  1065                           
  1066                           ; Clear objects allocated to BANK0 (9 bytes)
  1067  003612  EE00  F0F7         	lfsr	0,__pbssBANK0
  1068  003616  0E09               	movlw	9
  1069  003618                     clear_6:
  1070  003618  6AEE               	clrf	postinc0,c
  1071  00361A  06E8               	decf	wreg,f,c
  1072  00361C  E1FD               	bnz	clear_6
  1073                           
  1074                           ; Clear objects allocated to COMRAM (45 bytes)
  1075  00361E  EE00  F032         	lfsr	0,__pbssCOMRAM
  1076  003622  0E2D               	movlw	45
  1077  003624                     clear_7:
  1078  003624  6AEE               	clrf	postinc0,c
  1079  003626  06E8               	decf	wreg,f,c
  1080  003628  E1FD               	bnz	clear_7
  1081  00362A                     end_of_initialization:
  1082                           	opt stack 0
  1083  00362A                     __end_of__initialization:
  1084                           	opt stack 0
  1085  00362A  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1086  00362C  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1087  00362E  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1088  003630  6EF8               	movwf	tblptru,c
  1089  003632  0100               	movlb	0
  1090  003634  EF85  F00A         	goto	_main	;jump to C main() function
  1091                           tblptru	equ	0xFF8
  1092                           tblptrh	equ	0xFF7
  1093                           tblptrl	equ	0xFF6
  1094                           tablat	equ	0xFF5
  1095                           postinc0	equ	0xFEE
  1096                           wreg	equ	0xFE8
  1097                           postdec1	equ	0xFE5
  1098                           fsr1l	equ	0xFE1
  1099                           
  1100                           	psect	bssCOMRAM
  1101  000032                     __pbssCOMRAM:
  1102                           	opt stack 0
  1103  000032                     _outPipes:
  1104                           	opt stack 0
  1105  000032                     	ds	8
  1106  00003A                     _pBDTEntryIn:
  1107                           	opt stack 0
  1108  00003A                     	ds	6
  1109  000040                     _tamanhoCommand:
  1110                           	opt stack 0
  1111  000040                     	ds	2
  1112  000042                     recebeByte@sizeData:
  1113                           	opt stack 0
  1114  000042                     	ds	2
  1115  000044                     recebeByte@tamanhoMensagem:
  1116                           	opt stack 0
  1117  000044                     	ds	2
  1118  000046                     _CDCDataOutHandle:
  1119                           	opt stack 0
  1120  000046                     	ds	2
  1121  000048                     _pBDTEntryEP0OutNext:
  1122                           	opt stack 0
  1123  000048                     	ds	2
  1124  00004A                     _pBDTEntryEP0OutCurrent:
  1125                           	opt stack 0
  1126  00004A                     	ds	2
  1127  00004C                     recebeByte@escapeCaracter:
  1128                           	opt stack 0
  1129  00004C                     	ds	1
  1130  00004D                     _cdc_rx_len:
  1131                           	opt stack 0
  1132  00004D                     	ds	1
  1133  00004E                     _USBStatusStageEnabledFlag2:
  1134                           	opt stack 0
  1135  00004E                     	ds	1
  1136  00004F                     _USBStatusStageEnabledFlag1:
  1137                           	opt stack 0
  1138  00004F                     	ds	1
  1139  000050                     _USBDeferStatusStagePacket:
  1140                           	opt stack 0
  1141  000050                     	ds	1
  1142  000051                     _USBStatusStageTimeoutCounter:
  1143                           	opt stack 0
  1144  000051                     	ds	1
  1145  000052                     _BothEP0OutUOWNsSet:
  1146                           	opt stack 0
  1147  000052                     	ds	1
  1148  000053                     _endpoint_number:
  1149                           	opt stack 0
  1150  000053                     	ds	1
  1151  000054                     _USBBusIsSuspended:
  1152                           	opt stack 0
  1153  000054                     	ds	1
  1154  000055                     _RemoteWakeup:
  1155                           	opt stack 0
  1156  000055                     	ds	1
  1157  000056                     _controlTransferState:
  1158                           	opt stack 0
  1159  000056                     	ds	1
  1160  000057                     _shortPacketStatus:
  1161                           	opt stack 0
  1162  000057                     	ds	1
  1163  000058                     _USBDeviceState:
  1164                           	opt stack 0
  1165  000058                     	ds	1
  1166  000059                     _tamFrame:
  1167                           	opt stack 0
  1168  000059                     	ds	1
  1169  00005A                     _tamDadosRecebidos:
  1170                           	opt stack 0
  1171  00005A                     	ds	1
  1172  00005B                     _responseLoRaWan:
  1173                           	opt stack 0
  1174  00005B                     	ds	1
  1175  00005C                     _error_TX:
  1176                           	opt stack 0
  1177  00005C                     	ds	1
  1178  00005D                     _USTATcopy:
  1179                           	opt stack 0
  1180  00005D                     	ds	1
  1181  00005E                     _USBActiveConfiguration:
  1182                           	opt stack 0
  1183  00005E                     	ds	1
  1184                           tblptru	equ	0xFF8
  1185                           tblptrh	equ	0xFF7
  1186                           tblptrl	equ	0xFF6
  1187                           tablat	equ	0xFF5
  1188                           postinc0	equ	0xFEE
  1189                           wreg	equ	0xFE8
  1190                           postdec1	equ	0xFE5
  1191                           fsr1l	equ	0xFE1
  1192                           
  1193                           	psect	bssBANK0
  1194  0000F7                     __pbssBANK0:
  1195                           	opt stack 0
  1196  0000F7                     _inPipes:
  1197                           	opt stack 0
  1198  0000F7                     	ds	6
  1199  0000FD                     _cdc_tx_len:
  1200                           	opt stack 0
  1201  0000FD                     	ds	1
  1202  0000FE                     _cdc_trf_state:
  1203                           	opt stack 0
  1204  0000FE                     	ds	1
  1205  0000FF                     _novaMsgLoRaWan:
  1206                           	opt stack 0
  1207  0000FF                     	ds	1
  1208                           tblptru	equ	0xFF8
  1209                           tblptrh	equ	0xFF7
  1210                           tblptrl	equ	0xFF6
  1211                           tablat	equ	0xFF5
  1212                           postinc0	equ	0xFEE
  1213                           wreg	equ	0xFE8
  1214                           postdec1	equ	0xFE5
  1215                           fsr1l	equ	0xFE1
  1216                           
  1217                           	psect	bssBANK1
  1218  0001EB                     __pbssBANK1:
  1219                           	opt stack 0
  1220  0001EB                     _ep_data_out:
  1221                           	opt stack 0
  1222  0001EB                     	ds	3
  1223  0001EE                     _ep_data_in:
  1224                           	opt stack 0
  1225  0001EE                     	ds	3
  1226  0001F1                     _cs:
  1227                           	opt stack 0
  1228  0001F1                     	ds	1
  1229  0001F2                     recebeByte@checksumRecebimento:
  1230                           	opt stack 0
  1231  0001F2                     	ds	1
  1232  0001F3                     recebeByte@estadoRecepcao:
  1233                           	opt stack 0
  1234  0001F3                     	ds	1
  1235  0001F4                     _cdc_mem_type:
  1236                           	opt stack 0
  1237  0001F4                     	ds	1
  1238  0001F5                     _USBTicksSinceSuspendEnd:
  1239                           	opt stack 0
  1240  0001F5                     	ds	1
  1241  0001F6                     _USBDeferOUTDataStagePackets:
  1242                           	opt stack 0
  1243  0001F6                     	ds	1
  1244  0001F7                     _USBDeferINDataStagePackets:
  1245                           	opt stack 0
  1246  0001F7                     	ds	1
  1247  0001F8                     _numPacote:
  1248                           	opt stack 0
  1249  0001F8                     	ds	1
  1250  0001F9                     _encryptMode:
  1251                           	opt stack 0
  1252  0001F9                     	ds	1
  1253  0001FA                     _delivery_status:
  1254                           	opt stack 0
  1255  0001FA                     	ds	1
  1256  0001FB                     _protocol:
  1257                           	opt stack 0
  1258  0001FB                     	ds	1
  1259  0001FC                     _error_AT:
  1260                           	opt stack 0
  1261  0001FC                     	ds	1
  1262  0001FD                     _USBAlternateInterface:
  1263                           	opt stack 0
  1264  0001FD                     	ds	2
  1265                           tblptru	equ	0xFF8
  1266                           tblptrh	equ	0xFF7
  1267                           tblptrl	equ	0xFF6
  1268                           tablat	equ	0xFF5
  1269                           postinc0	equ	0xFEE
  1270                           wreg	equ	0xFE8
  1271                           postdec1	equ	0xFE5
  1272                           fsr1l	equ	0xFE1
  1273                           
  1274                           	psect	dataBANK1
  1275  0001FF                     __pdataBANK1:
  1276                           	opt stack 0
  1277  0001FF                     __send_retries:
  1278                           	opt stack 0
  1279  0001FF                     	ds	1
  1280                           tblptru	equ	0xFF8
  1281                           tblptrh	equ	0xFF7
  1282                           tblptrl	equ	0xFF6
  1283                           tablat	equ	0xFF5
  1284                           postinc0	equ	0xFEE
  1285                           wreg	equ	0xFE8
  1286                           postdec1	equ	0xFE5
  1287                           fsr1l	equ	0xFE1
  1288                           
  1289                           	psect	bssBANK2
  1290  000200                     __pbssBANK2:
  1291                           	opt stack 0
  1292  000200                     _dadosRecebidos:
  1293                           	opt stack 0
  1294  000200                     	ds	20
  1295  000214                     _cdc_notice:
  1296                           	opt stack 0
  1297  000214                     	ds	10
  1298  00021E                     _pBDTEntryOut:
  1299                           	opt stack 0
  1300  00021E                     	ds	6
  1301  000224                     _BaudRateGen:
  1302                           	opt stack 0
  1303  000224                     	ds	4
  1304  000228                     _USB1msTickCount:
  1305                           	opt stack 0
  1306  000228                     	ds	4
  1307  00022C                     _ticks:
  1308                           	opt stack 0
  1309  00022C                     	ds	4
  1310  000230                     _freqPulses:
  1311                           	opt stack 0
  1312  000230                     	ds	4
  1313  000234                     _sourceMacHigh:
  1314                           	opt stack 0
  1315  000234                     	ds	4
  1316  000238                     _sourceMacLow:
  1317                           	opt stack 0
  1318  000238                     	ds	4
  1319  00023C                     _pCDCDst:
  1320                           	opt stack 0
  1321  00023C                     	ds	3
  1322  00023F                     _pCDCSrc:
  1323                           	opt stack 0
  1324  00023F                     	ds	3
  1325  000242                     _CDCDataInHandle:
  1326                           	opt stack 0
  1327  000242                     	ds	2
  1328  000244                     _pDst:
  1329                           	opt stack 0
  1330  000244                     	ds	2
  1331  000246                     _dig_1:
  1332                           	opt stack 0
  1333  000246                     	ds	2
  1334  000248                     _PAN_ID:
  1335                           	opt stack 0
  1336  000248                     	ds	2
  1337  00024A                     _control_signal_bitmap:
  1338                           	opt stack 0
  1339  00024A                     	ds	1
  1340  00024B                     _retries_sending:
  1341                           	opt stack 0
  1342  00024B                     	ds	1
  1343  00024C                     _discovery_status:
  1344                           	opt stack 0
  1345  00024C                     	ds	1
  1346  00024D                     _channel:
  1347                           	opt stack 0
  1348  00024D                     	ds	1
  1349  00024E                     _error_RX:
  1350                           	opt stack 0
  1351  00024E                     	ds	1
  1352  00024F                     _response:
  1353                           	opt stack 0
  1354  00024F                     	ds	100
  1355  0002B3                     _dummy_encapsulated_cmd_response:
  1356                           	opt stack 0
  1357  0002B3                     	ds	8
  1358  0002BB                     _line_coding:
  1359                           	opt stack 0
  1360  0002BB                     	ds	7
  1361                           tblptru	equ	0xFF8
  1362                           tblptrh	equ	0xFF7
  1363                           tblptrl	equ	0xFF6
  1364                           tablat	equ	0xFF5
  1365                           postinc0	equ	0xFEE
  1366                           wreg	equ	0xFE8
  1367                           postdec1	equ	0xFE5
  1368                           fsr1l	equ	0xFE1
  1369                           
  1370                           	psect	dataBANK2
  1371  0002C2                     __pdataBANK2:
  1372                           	opt stack 0
  1373  0002C2                     _MSG_LORAWAN:
  1374                           	opt stack 0
  1375  0002C2                     	ds	30
  1376  0002E0                     _randx:
  1377                           	opt stack 0
  1378  0002E0                     	ds	4
  1379                           tblptru	equ	0xFF8
  1380                           tblptrh	equ	0xFF7
  1381                           tblptrl	equ	0xFF6
  1382                           tablat	equ	0xFF5
  1383                           postinc0	equ	0xFEE
  1384                           wreg	equ	0xFE8
  1385                           postdec1	equ	0xFE5
  1386                           fsr1l	equ	0xFE1
  1387                           
  1388                           	psect	bssBANK3
  1389  000300                     __pbssBANK3:
  1390                           	opt stack 0
  1391  000300                     recebeByteLoRaWan@frameData:
  1392                           	opt stack 0
  1393  000300                     	ds	100
  1394  000364                     _receivePacket:
  1395                           	opt stack 0
  1396  000364                     	ds	100
  1397                           tblptru	equ	0xFF8
  1398                           tblptrh	equ	0xFF7
  1399                           tblptrl	equ	0xFF6
  1400                           tablat	equ	0xFF5
  1401                           postinc0	equ	0xFEE
  1402                           wreg	equ	0xFE8
  1403                           postdec1	equ	0xFE5
  1404                           fsr1l	equ	0xFE1
  1405                           
  1406                           	psect	bssBANK4
  1407  000440                     __pbssBANK4:
  1408                           	opt stack 0
  1409  000440                     recebeByte@frameData:
  1410                           	opt stack 0
  1411  000440                     	ds	100
  1412                           tblptru	equ	0xFF8
  1413                           tblptrh	equ	0xFF7
  1414                           tblptrl	equ	0xFF6
  1415                           tablat	equ	0xFF5
  1416                           postinc0	equ	0xFEE
  1417                           wreg	equ	0xFE8
  1418                           postdec1	equ	0xFE5
  1419                           fsr1l	equ	0xFE1
  1420                           
  1421                           	psect	bssBANK6
  1422  000600                     __pbssBANK6:
  1423                           	opt stack 0
  1424  000600                     _frameBuffer:
  1425                           	opt stack 0
  1426  000600                     	ds	200
  1427                           tblptru	equ	0xFF8
  1428                           tblptrh	equ	0xFF7
  1429                           tblptrl	equ	0xFF6
  1430                           tablat	equ	0xFF5
  1431                           postinc0	equ	0xFEE
  1432                           wreg	equ	0xFE8
  1433                           postdec1	equ	0xFE5
  1434                           fsr1l	equ	0xFE1
  1435                           
  1436                           	psect	bssBANK7
  1437  000700                     __pbssBANK7:
  1438                           	opt stack 0
  1439  000700                     _command:
  1440                           	opt stack 0
  1441  000700                     	ds	150
  1442                           tblptru	equ	0xFF8
  1443                           tblptrh	equ	0xFF7
  1444                           tblptrl	equ	0xFF6
  1445                           tablat	equ	0xFF5
  1446                           postinc0	equ	0xFEE
  1447                           wreg	equ	0xFE8
  1448                           postdec1	equ	0xFE5
  1449                           fsr1l	equ	0xFE1
  1450                           
  1451                           	psect	cstackBANK1
  1452  000100                     __pcstackBANK1:
  1453                           	opt stack 0
  1454  000100                     SetChannelLoRaWan@comando:
  1455                           	opt stack 0
  1456  000100                     TxLoRaWan@comando:
  1457                           	opt stack 0
  1458                           
  1459                           ; 200 bytes @ 0x0
  1460  000100                     	ds	200
  1461  0001C8                     SetChannelLoRaWan@status:
  1462                           	opt stack 0
  1463  0001C8                     TxLoRaWan@conf:
  1464                           	opt stack 0
  1465                           
  1466                           ; 1 bytes @ 0xC8
  1467  0001C8                     	ds	1
  1468  0001C9                     SetChannelLoRaWan@canal:
  1469                           	opt stack 0
  1470  0001C9                     TxLoRaWan@status:
  1471                           	opt stack 0
  1472                           
  1473                           ; 1 bytes @ 0xC9
  1474  0001C9                     	ds	1
  1475  0001CA                     TxLoRaWan@hex:
  1476                           	opt stack 0
  1477                           
  1478                           ; 4 bytes @ 0xCA
  1479  0001CA                     	ds	4
  1480  0001CE                     TxLoRaWan@i:
  1481                           	opt stack 0
  1482                           
  1483                           ; 1 bytes @ 0xCE
  1484  0001CE                     	ds	1
  1485  0001CF                     main@statusLoRaWan:
  1486                           	opt stack 0
  1487                           
  1488                           ; 1 bytes @ 0xCF
  1489  0001CF                     	ds	1
  1490  0001D0                     main@resp:
  1491                           	opt stack 0
  1492                           
  1493                           ; 1 bytes @ 0xD0
  1494  0001D0                     	ds	1
  1495  0001D1                     main@tempo:
  1496                           	opt stack 0
  1497                           
  1498                           ; 4 bytes @ 0xD1
  1499  0001D1                     	ds	4
  1500  0001D5                     main@tempoTimeOut:
  1501                           	opt stack 0
  1502                           
  1503                           ; 4 bytes @ 0xD5
  1504  0001D5                     	ds	4
  1505  0001D9                     _main$5265:
  1506                           	opt stack 0
  1507                           
  1508                           ; 3 bytes @ 0xD9
  1509  0001D9                     	ds	3
  1510  0001DC                     main@deltaTempo:
  1511                           	opt stack 0
  1512                           
  1513                           ; 4 bytes @ 0xDC
  1514  0001DC                     	ds	4
  1515  0001E0                     main@i:
  1516                           	opt stack 0
  1517                           
  1518                           ; 2 bytes @ 0xE0
  1519  0001E0                     	ds	2
  1520  0001E2                     main@dadoPoco:
  1521                           	opt stack 0
  1522                           
  1523                           ; 6 bytes @ 0xE2
  1524  0001E2                     	ds	6
  1525  0001E8                     main@pisca:
  1526                           	opt stack 0
  1527                           
  1528                           ; 1 bytes @ 0xE8
  1529  0001E8                     	ds	1
  1530  0001E9                     main@canal:
  1531                           	opt stack 0
  1532                           
  1533                           ; 1 bytes @ 0xE9
  1534  0001E9                     	ds	1
  1535  0001EA                     main@canal_3124:
  1536                           	opt stack 0
  1537                           
  1538                           ; 1 bytes @ 0xEA
  1539  0001EA                     	ds	1
  1540                           tblptru	equ	0xFF8
  1541                           tblptrh	equ	0xFF7
  1542                           tblptrl	equ	0xFF6
  1543                           tablat	equ	0xFF5
  1544                           postinc0	equ	0xFEE
  1545                           wreg	equ	0xFE8
  1546                           postdec1	equ	0xFE5
  1547                           fsr1l	equ	0xFE1
  1548                           
  1549                           	psect	cstackBANK0
  1550  000060                     __pcstackBANK0:
  1551                           	opt stack 0
  1552  000060                     ??_setup_pulsos:
  1553  000060                     ??_isdigit:
  1554  000060                     ?_USBTransferOnePacket:
  1555                           	opt stack 0
  1556  000060                     ?_strlen:
  1557                           	opt stack 0
  1558  000060                     ?___awmod:
  1559                           	opt stack 0
  1560  000060                     ?___ftpack:
  1561                           	opt stack 0
  1562  000060                     ?___ftneg:
  1563                           	opt stack 0
  1564  000060                     ?_millis:
  1565                           	opt stack 0
  1566  000060                     ?_le_pulsos:
  1567                           	opt stack 0
  1568  000060                     ?__tdiv_to_l_:
  1569                           	opt stack 0
  1570  000060                     ?__div_to_l_:
  1571                           	opt stack 0
  1572  000060                     ?___lldiv:
  1573                           	opt stack 0
  1574  000060                     USBTransferOnePacket@dir:
  1575                           	opt stack 0
  1576  000060                     putch@data:
  1577                           	opt stack 0
  1578  000060                     putsUSBUSART@data:
  1579                           	opt stack 0
  1580  000060                     ___awmod@dividend:
  1581                           	opt stack 0
  1582  000060                     memset@p1:
  1583                           	opt stack 0
  1584  000060                     strcat@to:
  1585                           	opt stack 0
  1586  000060                     strlen@s:
  1587                           	opt stack 0
  1588  000060                     __div_to_l_@f1:
  1589                           	opt stack 0
  1590  000060                     ___ftpack@arg:
  1591                           	opt stack 0
  1592  000060                     __tdiv_to_l_@f1:
  1593                           	opt stack 0
  1594  000060                     ___ftge@ff1:
  1595                           	opt stack 0
  1596  000060                     ___ftneg@f1:
  1597                           	opt stack 0
  1598  000060                     ___lldiv@dividend:
  1599                           	opt stack 0
  1600                           
  1601                           ; 4 bytes @ 0x0
  1602  000060                     	ds	1
  1603  000061                     _isdigit$4726:
  1604                           	opt stack 0
  1605  000061                     USBTransferOnePacket@data:
  1606                           	opt stack 0
  1607                           
  1608                           ; 2 bytes @ 0x1
  1609  000061                     	ds	1
  1610  000062                     ??_strlen:
  1611  000062                     isdigit@c:
  1612                           	opt stack 0
  1613  000062                     putsUSBUSART@pData:
  1614                           	opt stack 0
  1615  000062                     ___awmod@divisor:
  1616                           	opt stack 0
  1617  000062                     memset@c:
  1618                           	opt stack 0
  1619  000062                     strcat@from:
  1620                           	opt stack 0
  1621                           
  1622                           ; 2 bytes @ 0x2
  1623  000062                     	ds	1
  1624  000063                     USBTransferOnePacket@len:
  1625                           	opt stack 0
  1626  000063                     ___ftpack@exp:
  1627                           	opt stack 0
  1628  000063                     __div_to_l_@f2:
  1629                           	opt stack 0
  1630  000063                     __tdiv_to_l_@f2:
  1631                           	opt stack 0
  1632  000063                     ___ftge@ff2:
  1633                           	opt stack 0
  1634                           
  1635                           ; 3 bytes @ 0x3
  1636  000063                     	ds	1
  1637  000064                     ??_USBTransferOnePacket:
  1638  000064                     putsUSBUSART@len:
  1639                           	opt stack 0
  1640  000064                     ___awmod@counter:
  1641                           	opt stack 0
  1642  000064                     ___ftpack@sign:
  1643                           	opt stack 0
  1644  000064                     memset@n:
  1645                           	opt stack 0
  1646  000064                     strcat@cp:
  1647                           	opt stack 0
  1648  000064                     strlen@cp:
  1649                           	opt stack 0
  1650  000064                     millis@m:
  1651                           	opt stack 0
  1652  000064                     le_pulsos@freq:
  1653                           	opt stack 0
  1654  000064                     ___lldiv@divisor:
  1655                           	opt stack 0
  1656                           
  1657                           ; 4 bytes @ 0x4
  1658  000064                     	ds	1
  1659  000065                     ??___ftpack:
  1660  000065                     ___awmod@sign:
  1661                           	opt stack 0
  1662                           
  1663                           ; 1 bytes @ 0x5
  1664  000065                     	ds	1
  1665  000066                     ??__tdiv_to_l_:
  1666  000066                     ??___ftge:
  1667  000066                     ?___awdiv:
  1668                           	opt stack 0
  1669  000066                     ___awdiv@dividend:
  1670                           	opt stack 0
  1671  000066                     memset@p:
  1672                           	opt stack 0
  1673  000066                     __div_to_l_@quot:
  1674                           	opt stack 0
  1675                           
  1676                           ; 4 bytes @ 0x6
  1677  000066                     	ds	2
  1678  000068                     ??_parseLoRaWan:
  1679  000068                     ?___awtoft:
  1680                           	opt stack 0
  1681  000068                     ?___lltoft:
  1682                           	opt stack 0
  1683  000068                     USBDeviceInit@i:
  1684                           	opt stack 0
  1685  000068                     USBTransferOnePacket@ep:
  1686                           	opt stack 0
  1687  000068                     ___awdiv@divisor:
  1688                           	opt stack 0
  1689  000068                     ___awtoft@c:
  1690                           	opt stack 0
  1691  000068                     ___lldiv@quotient:
  1692                           	opt stack 0
  1693  000068                     ___lltoft@c:
  1694                           	opt stack 0
  1695                           
  1696                           ; 4 bytes @ 0x8
  1697  000068                     	ds	1
  1698  000069                     USBTransferOnePacket@handle:
  1699                           	opt stack 0
  1700  000069                     __tdiv_to_l_@quot:
  1701                           	opt stack 0
  1702                           
  1703                           ; 4 bytes @ 0x9
  1704  000069                     	ds	1
  1705  00006A                     ___awdiv@counter:
  1706                           	opt stack 0
  1707  00006A                     __div_to_l_@cntr:
  1708                           	opt stack 0
  1709                           
  1710                           ; 1 bytes @ 0xA
  1711  00006A                     	ds	1
  1712  00006B                     CDCTxService@i:
  1713                           	opt stack 0
  1714  00006B                     ___awdiv@sign:
  1715                           	opt stack 0
  1716  00006B                     ___awtoft@sign:
  1717                           	opt stack 0
  1718  00006B                     __div_to_l_@exp1:
  1719                           	opt stack 0
  1720                           
  1721                           ; 1 bytes @ 0xB
  1722  00006B                     	ds	1
  1723  00006C                     ??___lltoft:
  1724  00006C                     CDCTxService@byte_to_send:
  1725                           	opt stack 0
  1726  00006C                     ___lldiv@counter:
  1727                           	opt stack 0
  1728  00006C                     ___awdiv@quotient:
  1729                           	opt stack 0
  1730                           
  1731                           ; 2 bytes @ 0xC
  1732  00006C                     	ds	1
  1733  00006D                     ?___llmod:
  1734                           	opt stack 0
  1735  00006D                     __tdiv_to_l_@cntr:
  1736                           	opt stack 0
  1737  00006D                     delay@time:
  1738                           	opt stack 0
  1739  00006D                     setup_uart@baudRate:
  1740                           	opt stack 0
  1741  00006D                     ___llmod@dividend:
  1742                           	opt stack 0
  1743                           
  1744                           ; 4 bytes @ 0xD
  1745  00006D                     	ds	1
  1746  00006E                     ?___wmul:
  1747                           	opt stack 0
  1748  00006E                     __tdiv_to_l_@exp1:
  1749                           	opt stack 0
  1750  00006E                     ___wmul@multiplier:
  1751                           	opt stack 0
  1752                           
  1753                           ; 2 bytes @ 0xE
  1754  00006E                     	ds	2
  1755  000070                     ___lltoft@exp:
  1756                           	opt stack 0
  1757  000070                     ___wmul@multiplicand:
  1758                           	opt stack 0
  1759                           
  1760                           ; 2 bytes @ 0x10
  1761  000070                     	ds	1
  1762  000071                     ??_delay:
  1763  000071                     setup_uart@brg:
  1764                           	opt stack 0
  1765  000071                     ___llmod@divisor:
  1766                           	opt stack 0
  1767                           
  1768                           ; 4 bytes @ 0x11
  1769  000071                     	ds	1
  1770  000072                     ___wmul@product:
  1771                           	opt stack 0
  1772                           
  1773                           ; 2 bytes @ 0x12
  1774  000072                     	ds	2
  1775  000074                     ?___ftadd:
  1776                           	opt stack 0
  1777  000074                     ___ftadd@f1:
  1778                           	opt stack 0
  1779  000074                     parseLoRaWan@previous:
  1780                           	opt stack 0
  1781                           
  1782                           ; 4 bytes @ 0x14
  1783  000074                     	ds	1
  1784  000075                     ___llmod@counter:
  1785                           	opt stack 0
  1786                           
  1787                           ; 1 bytes @ 0x15
  1788  000075                     	ds	2
  1789  000077                     ___ftadd@f2:
  1790                           	opt stack 0
  1791                           
  1792                           ; 3 bytes @ 0x17
  1793  000077                     	ds	1
  1794  000078                     parseLoRaWan@intervalMAX:
  1795                           	opt stack 0
  1796                           
  1797                           ; 2 bytes @ 0x18
  1798  000078                     	ds	1
  1799  000079                     delay@to:
  1800                           	opt stack 0
  1801                           
  1802                           ; 4 bytes @ 0x19
  1803  000079                     	ds	1
  1804  00007A                     ??___ftadd:
  1805  00007A                     parseLoRaWan@status:
  1806                           	opt stack 0
  1807                           
  1808                           ; 1 bytes @ 0x1A
  1809  00007A                     	ds	1
  1810  00007B                     parseLoRaWan@timeout:
  1811                           	opt stack 0
  1812                           
  1813                           ; 1 bytes @ 0x1B
  1814  00007B                     	ds	1
  1815  00007C                     enviaComando@cmd:
  1816                           	opt stack 0
  1817                           
  1818                           ; 2 bytes @ 0x1C
  1819  00007C                     	ds	1
  1820  00007D                     ___ftadd@sign:
  1821                           	opt stack 0
  1822                           
  1823                           ; 1 bytes @ 0x1D
  1824  00007D                     	ds	1
  1825  00007E                     enviaComando@tipoComando:
  1826                           	opt stack 0
  1827  00007E                     ___ftadd@exp2:
  1828                           	opt stack 0
  1829                           
  1830                           ; 1 bytes @ 0x1E
  1831  00007E                     	ds	1
  1832  00007F                     ??_enviaComando:
  1833  00007F                     ___ftadd@exp1:
  1834                           	opt stack 0
  1835                           
  1836                           ; 1 bytes @ 0x1F
  1837  00007F                     	ds	1
  1838  000080                     ?___ftmul:
  1839                           	opt stack 0
  1840  000080                     ?___ftsub:
  1841                           	opt stack 0
  1842  000080                     ___ftmul@f1:
  1843                           	opt stack 0
  1844  000080                     ___ftsub@f1:
  1845                           	opt stack 0
  1846                           
  1847                           ; 3 bytes @ 0x20
  1848  000080                     	ds	1
  1849  000081                     enviaComando@i:
  1850                           	opt stack 0
  1851                           
  1852                           ; 2 bytes @ 0x21
  1853  000081                     	ds	2
  1854  000083                     enviaComando@i_4423:
  1855                           	opt stack 0
  1856  000083                     ___ftmul@f2:
  1857                           	opt stack 0
  1858  000083                     ___ftsub@f2:
  1859                           	opt stack 0
  1860                           
  1861                           ; 3 bytes @ 0x23
  1862  000083                     	ds	2
  1863  000085                     enviaComando@i_4424:
  1864                           	opt stack 0
  1865                           
  1866                           ; 2 bytes @ 0x25
  1867  000085                     	ds	1
  1868  000086                     ??___ftmul:
  1869  000086                     
  1870                           ; 1 bytes @ 0x26
  1871  000086                     	ds	1
  1872  000087                     ResetModuloLoRaWan@status:
  1873                           	opt stack 0
  1874  000087                     JoinLoRaWan@status:
  1875                           	opt stack 0
  1876                           
  1877                           ; 1 bytes @ 0x27
  1878  000087                     	ds	2
  1879  000089                     ___ftmul@exp:
  1880                           	opt stack 0
  1881                           
  1882                           ; 1 bytes @ 0x29
  1883  000089                     	ds	1
  1884  00008A                     ___ftmul@f3_as_product:
  1885                           	opt stack 0
  1886                           
  1887                           ; 3 bytes @ 0x2A
  1888  00008A                     	ds	3
  1889  00008D                     ___ftmul@cntr:
  1890                           	opt stack 0
  1891                           
  1892                           ; 1 bytes @ 0x2D
  1893  00008D                     	ds	1
  1894  00008E                     ___ftmul@sign:
  1895                           	opt stack 0
  1896                           
  1897                           ; 1 bytes @ 0x2E
  1898  00008E                     	ds	1
  1899  00008F                     ?___ftdiv:
  1900                           	opt stack 0
  1901  00008F                     ?_fround:
  1902                           	opt stack 0
  1903  00008F                     ?_scale:
  1904                           	opt stack 0
  1905  00008F                     ___ftdiv@f1:
  1906                           	opt stack 0
  1907                           
  1908                           ; 3 bytes @ 0x2F
  1909  00008F                     	ds	3
  1910  000092                     ___ftdiv@f2:
  1911                           	opt stack 0
  1912  000092                     _fround$5268:
  1913                           	opt stack 0
  1914  000092                     _scale$5269:
  1915                           	opt stack 0
  1916                           
  1917                           ; 3 bytes @ 0x32
  1918  000092                     	ds	3
  1919  000095                     ??___ftdiv:
  1920  000095                     scale@scl:
  1921                           	opt stack 0
  1922  000095                     _fround$5267:
  1923                           	opt stack 0
  1924                           
  1925                           ; 3 bytes @ 0x35
  1926  000095                     	ds	3
  1927  000098                     fround@prec:
  1928                           	opt stack 0
  1929  000098                     ___ftdiv@cntr:
  1930                           	opt stack 0
  1931                           
  1932                           ; 1 bytes @ 0x38
  1933  000098                     	ds	1
  1934  000099                     ___ftdiv@f3:
  1935                           	opt stack 0
  1936                           
  1937                           ; 3 bytes @ 0x39
  1938  000099                     	ds	3
  1939  00009C                     ___ftdiv@exp:
  1940                           	opt stack 0
  1941                           
  1942                           ; 1 bytes @ 0x3C
  1943  00009C                     	ds	1
  1944  00009D                     ___ftdiv@sign:
  1945                           	opt stack 0
  1946                           
  1947                           ; 1 bytes @ 0x3D
  1948  00009D                     	ds	1
  1949  00009E                     ?_le_AD:
  1950                           	opt stack 0
  1951                           
  1952                           ; 3 bytes @ 0x3E
  1953  00009E                     	ds	3
  1954  0000A1                     ??_le_AD:
  1955                           
  1956                           ; 1 bytes @ 0x41
  1957  0000A1                     	ds	2
  1958  0000A3                     _le_AD$5266:
  1959                           	opt stack 0
  1960                           
  1961                           ; 3 bytes @ 0x43
  1962  0000A3                     	ds	3
  1963  0000A6                     le_AD@corrente:
  1964                           	opt stack 0
  1965                           
  1966                           ; 3 bytes @ 0x46
  1967  0000A6                     	ds	3
  1968  0000A9                     le_AD@leituraAux:
  1969                           	opt stack 0
  1970                           
  1971                           ; 2 bytes @ 0x49
  1972  0000A9                     	ds	2
  1973  0000AB                     le_AD@i:
  1974                           	opt stack 0
  1975                           
  1976                           ; 2 bytes @ 0x4B
  1977  0000AB                     	ds	2
  1978  0000AD                     le_AD@leitura:
  1979                           	opt stack 0
  1980                           
  1981                           ; 2 bytes @ 0x4D
  1982  0000AD                     	ds	2
  1983  0000AF                     ?___fttol:
  1984                           	opt stack 0
  1985  0000AF                     ___fttol@f1:
  1986                           	opt stack 0
  1987                           
  1988                           ; 3 bytes @ 0x4F
  1989  0000AF                     	ds	4
  1990  0000B3                     ??___fttol:
  1991                           
  1992                           ; 1 bytes @ 0x53
  1993  0000B3                     	ds	5
  1994  0000B8                     ___fttol@sign1:
  1995                           	opt stack 0
  1996                           
  1997                           ; 1 bytes @ 0x58
  1998  0000B8                     	ds	1
  1999  0000B9                     ___fttol@lval:
  2000                           	opt stack 0
  2001                           
  2002                           ; 4 bytes @ 0x59
  2003  0000B9                     	ds	4
  2004  0000BD                     ___fttol@exp1:
  2005                           	opt stack 0
  2006                           
  2007                           ; 1 bytes @ 0x5D
  2008  0000BD                     	ds	1
  2009  0000BE                     ?_sprintf:
  2010                           	opt stack 0
  2011  0000BE                     sprintf@sp:
  2012                           	opt stack 0
  2013                           
  2014                           ; 2 bytes @ 0x5E
  2015  0000BE                     	ds	2
  2016  0000C0                     sprintf@f:
  2017                           	opt stack 0
  2018                           
  2019                           ; 2 bytes @ 0x60
  2020  0000C0                     	ds	10
  2021  0000CA                     ??_sprintf:
  2022                           
  2023                           ; 1 bytes @ 0x6A
  2024  0000CA                     	ds	6
  2025  0000D0                     _sprintf$5270:
  2026                           	opt stack 0
  2027                           
  2028                           ; 3 bytes @ 0x70
  2029  0000D0                     	ds	3
  2030  0000D3                     sprintf@idx:
  2031                           	opt stack 0
  2032                           
  2033                           ; 1 bytes @ 0x73
  2034  0000D3                     	ds	1
  2035  0000D4                     sprintf@cp:
  2036                           	opt stack 0
  2037                           
  2038                           ; 2 bytes @ 0x74
  2039  0000D4                     	ds	2
  2040  0000D6                     sprintf@len:
  2041                           	opt stack 0
  2042                           
  2043                           ; 2 bytes @ 0x76
  2044  0000D6                     	ds	2
  2045  0000D8                     sprintf@ap:
  2046                           	opt stack 0
  2047                           
  2048                           ; 2 bytes @ 0x78
  2049  0000D8                     	ds	2
  2050  0000DA                     sprintf@prec:
  2051                           	opt stack 0
  2052                           
  2053                           ; 2 bytes @ 0x7A
  2054  0000DA                     	ds	2
  2055  0000DC                     sprintf@tmpval:
  2056                           	opt stack 0
  2057                           
  2058                           ; 4 bytes @ 0x7C
  2059  0000DC                     	ds	4
  2060  0000E0                     sprintf@exp:
  2061                           	opt stack 0
  2062                           
  2063                           ; 2 bytes @ 0x80
  2064  0000E0                     	ds	2
  2065  0000E2                     sprintf@val:
  2066                           	opt stack 0
  2067                           
  2068                           ; 4 bytes @ 0x82
  2069  0000E2                     	ds	4
  2070  0000E6                     sprintf@fval:
  2071                           	opt stack 0
  2072                           
  2073                           ; 3 bytes @ 0x86
  2074  0000E6                     	ds	3
  2075  0000E9                     sprintf@width:
  2076                           	opt stack 0
  2077                           
  2078                           ; 2 bytes @ 0x89
  2079  0000E9                     	ds	2
  2080  0000EB                     sprintf@flag:
  2081                           	opt stack 0
  2082                           
  2083                           ; 2 bytes @ 0x8B
  2084  0000EB                     	ds	2
  2085  0000ED                     sprintf@c:
  2086                           	opt stack 0
  2087                           
  2088                           ; 1 bytes @ 0x8D
  2089  0000ED                     	ds	1
  2090  0000EE                     SetChannelLoRaWan@ligado:
  2091                           	opt stack 0
  2092  0000EE                     TxLoRaWan@porta:
  2093                           	opt stack 0
  2094                           
  2095                           ; 1 bytes @ 0x8E
  2096  0000EE                     	ds	1
  2097  0000EF                     TxLoRaWan@data:
  2098                           	opt stack 0
  2099                           
  2100                           ; 2 bytes @ 0x8F
  2101  0000EF                     	ds	2
  2102  0000F1                     TxLoRaWan@tamData:
  2103                           	opt stack 0
  2104                           
  2105                           ; 1 bytes @ 0x91
  2106  0000F1                     	ds	1
  2107  0000F2                     ??_TxLoRaWan:
  2108                           
  2109                           ; 1 bytes @ 0x92
  2110  0000F2                     	ds	1
  2111  0000F3                     ??_main:
  2112                           
  2113                           ; 1 bytes @ 0x93
  2114  0000F3                     	ds	4
  2115                           tblptru	equ	0xFF8
  2116                           tblptrh	equ	0xFF7
  2117                           tblptrl	equ	0xFF6
  2118                           tablat	equ	0xFF5
  2119                           postinc0	equ	0xFEE
  2120                           wreg	equ	0xFE8
  2121                           postdec1	equ	0xFE5
  2122                           fsr1l	equ	0xFE1
  2123                           
  2124                           	psect	cstackCOMRAM
  2125  000001                     __pcstackCOMRAM:
  2126                           	opt stack 0
  2127  000001                     ??_getch:
  2128  000001                     ??_USBStdGetDscHandler:
  2129  000001                     ??_USBStdGetStatusHandler:
  2130  000001                     ?_strcmp:
  2131                           	opt stack 0
  2132  000001                     ?_strncmp:
  2133                           	opt stack 0
  2134  000001                     ?i2_USBTransferOnePacket:
  2135                           	opt stack 0
  2136  000001                     ?i2_strlen:
  2137                           	opt stack 0
  2138  000001                     USBConfigureEndpoint@direction:
  2139                           	opt stack 0
  2140  000001                     USBCtrlTrfTxService@byteToSend:
  2141                           	opt stack 0
  2142  000001                     USBCtrlTrfRxService@i:
  2143                           	opt stack 0
  2144  000001                     toupper@c:
  2145                           	opt stack 0
  2146  000001                     i2USBTransferOnePacket@dir:
  2147                           	opt stack 0
  2148  000001                     memcpy@d1:
  2149                           	opt stack 0
  2150  000001                     strcmp@s1:
  2151                           	opt stack 0
  2152  000001                     strcpy@to:
  2153                           	opt stack 0
  2154  000001                     strncmp@s1:
  2155                           	opt stack 0
  2156  000001                     i2memset@p1:
  2157                           	opt stack 0
  2158  000001                     i2strlen@s:
  2159                           	opt stack 0
  2160                           
  2161                           ; 2 bytes @ 0x0
  2162  000001                     	ds	1
  2163  000002                     ??_USBConfigureEndpoint:
  2164  000002                     USBCtrlTrfRxService@byteToRead:
  2165                           	opt stack 0
  2166  000002                     USBCtrlTrfInHandler@lastDTS:
  2167                           	opt stack 0
  2168  000002                     getch@RC:
  2169                           	opt stack 0
  2170  000002                     converter@conv2:
  2171                           	opt stack 0
  2172  000002                     USBStdGetStatusHandler@p:
  2173                           	opt stack 0
  2174  000002                     i2USBTransferOnePacket@data:
  2175                           	opt stack 0
  2176                           
  2177                           ; 2 bytes @ 0x1
  2178  000002                     	ds	1
  2179  000003                     ??i2_strlen:
  2180  000003                     getch@data:
  2181                           	opt stack 0
  2182  000003                     converter@resul:
  2183                           	opt stack 0
  2184  000003                     memcpy@s1:
  2185                           	opt stack 0
  2186  000003                     strcmp@s2:
  2187                           	opt stack 0
  2188  000003                     strcpy@from:
  2189                           	opt stack 0
  2190  000003                     strncmp@s2:
  2191                           	opt stack 0
  2192  000003                     i2memset@c:
  2193                           	opt stack 0
  2194                           
  2195                           ; 2 bytes @ 0x2
  2196  000003                     	ds	1
  2197  000004                     converter@aux:
  2198                           	opt stack 0
  2199  000004                     i2USBTransferOnePacket@len:
  2200                           	opt stack 0
  2201                           
  2202                           ; 1 bytes @ 0x3
  2203  000004                     	ds	1
  2204  000005                     ??_strcmp:
  2205  000005                     ??i2_USBTransferOnePacket:
  2206  000005                     converter@aux2:
  2207                           	opt stack 0
  2208  000005                     memcpy@n:
  2209                           	opt stack 0
  2210  000005                     strcpy@cp:
  2211                           	opt stack 0
  2212  000005                     strncmp@len:
  2213                           	opt stack 0
  2214  000005                     i2memset@n:
  2215                           	opt stack 0
  2216  000005                     i2strlen@cp:
  2217                           	opt stack 0
  2218                           
  2219                           ; 2 bytes @ 0x4
  2220  000005                     	ds	1
  2221  000006                     USBConfigureEndpoint@EPNum:
  2222                           	opt stack 0
  2223  000006                     converter@conv1:
  2224                           	opt stack 0
  2225  000006                     strcmp@r:
  2226                           	opt stack 0
  2227                           
  2228                           ; 1 bytes @ 0x5
  2229  000006                     	ds	1
  2230  000007                     ??_strncmp:
  2231  000007                     USBConfigureEndpoint@handle:
  2232                           	opt stack 0
  2233  000007                     memcpy@d:
  2234                           	opt stack 0
  2235  000007                     i2memset@p:
  2236                           	opt stack 0
  2237                           
  2238                           ; 2 bytes @ 0x6
  2239  000007                     	ds	2
  2240  000009                     USBEnableEndpoint@options:
  2241                           	opt stack 0
  2242  000009                     i2USBDeviceInit@i:
  2243                           	opt stack 0
  2244  000009                     i2USBTransferOnePacket@ep:
  2245                           	opt stack 0
  2246  000009                     memcpy@s:
  2247                           	opt stack 0
  2248                           
  2249                           ; 2 bytes @ 0x8
  2250  000009                     	ds	1
  2251  00000A                     ??_recebeByteLoRaWan:
  2252  00000A                     USBEnableEndpoint@p:
  2253                           	opt stack 0
  2254  00000A                     i2USBTransferOnePacket@handle:
  2255                           	opt stack 0
  2256                           
  2257                           ; 2 bytes @ 0x9
  2258  00000A                     	ds	1
  2259  00000B                     memcpy@tmp:
  2260                           	opt stack 0
  2261                           
  2262                           ; 1 bytes @ 0xA
  2263  00000B                     	ds	1
  2264  00000C                     USBEnableEndpoint@ep:
  2265                           	opt stack 0
  2266                           
  2267                           ; 1 bytes @ 0xB
  2268  00000C                     	ds	1
  2269  00000D                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  2270                           	opt stack 0
  2271                           
  2272                           ; 2 bytes @ 0xC
  2273  00000D                     	ds	1
  2274  00000E                     recebeByteLoRaWan@len:
  2275                           	opt stack 0
  2276                           
  2277                           ; 1 bytes @ 0xD
  2278  00000E                     	ds	1
  2279  00000F                     recebeByteLoRaWan@port:
  2280                           	opt stack 0
  2281  00000F                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  2282                           	opt stack 0
  2283                           
  2284                           ; 2 bytes @ 0xE
  2285  00000F                     	ds	1
  2286  000010                     recebeByteLoRaWan@b:
  2287                           	opt stack 0
  2288                           
  2289                           ; 1 bytes @ 0xF
  2290  000010                     	ds	1
  2291  000011                     recebeByteLoRaWan@i:
  2292                           	opt stack 0
  2293  000011                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  2294                           	opt stack 0
  2295                           
  2296                           ; 2 bytes @ 0x10
  2297  000011                     	ds	1
  2298  000012                     recebeByteLoRaWan@tamMsgRx:
  2299                           	opt stack 0
  2300                           
  2301                           ; 1 bytes @ 0x11
  2302  000012                     	ds	1
  2303  000013                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  2304  000013                     recebeByteLoRaWan@i_4437:
  2305                           	opt stack 0
  2306                           
  2307                           ; 1 bytes @ 0x12
  2308  000013                     	ds	2
  2309  000015                     ??_USBStdFeatureReqHandler:
  2310  000015                     USBStdSetCfgHandler@i:
  2311                           	opt stack 0
  2312                           
  2313                           ; 1 bytes @ 0x14
  2314  000015                     	ds	1
  2315  000016                     USBStdFeatureReqHandler@pUEP:
  2316                           	opt stack 0
  2317                           
  2318                           ; 2 bytes @ 0x15
  2319  000016                     	ds	2
  2320  000018                     USBStdFeatureReqHandler@current_ep_data:
  2321                           	opt stack 0
  2322                           
  2323                           ; 1 bytes @ 0x17
  2324  000018                     	ds	1
  2325  000019                     USBStdFeatureReqHandler@p:
  2326                           	opt stack 0
  2327                           
  2328                           ; 2 bytes @ 0x18
  2329  000019                     	ds	2
  2330  00001B                     ??_USBCtrlEPService:
  2331  00001B                     
  2332                           ; 1 bytes @ 0x1A
  2333  00001B                     	ds	1
  2334  00001C                     USBDeviceTasks@i:
  2335                           	opt stack 0
  2336                           
  2337                           ; 1 bytes @ 0x1B
  2338  00001C                     	ds	1
  2339  00001D                     ??_SYS_InterruptHigh:
  2340                           
  2341                           ; 1 bytes @ 0x1C
  2342  00001D                     	ds	19
  2343  000030                     SYS_InterruptHigh@dig:
  2344                           	opt stack 0
  2345                           
  2346                           ; 2 bytes @ 0x2F
  2347  000030                     	ds	2
  2348                           tblptru	equ	0xFF8
  2349                           tblptrh	equ	0xFF7
  2350                           tblptrl	equ	0xFF6
  2351                           tablat	equ	0xFF5
  2352                           postinc0	equ	0xFEE
  2353                           wreg	equ	0xFE8
  2354                           postdec1	equ	0xFE5
  2355                           fsr1l	equ	0xFE1
  2356                           
  2357 ;;
  2358 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  2359 ;;
  2360 ;; *************** function _main *****************
  2361 ;; Defined at:
  2362 ;;		line 50 in file "UT.c"
  2363 ;; Parameters:    Size  Location     Type
  2364 ;;		None
  2365 ;; Auto vars:     Size  Location     Type
  2366 ;;  tempoTimeOut    4  213[BANK1 ] unsigned long 
  2367 ;;  canal           1  234[BANK1 ] unsigned char 
  2368 ;;  canal           1  233[BANK1 ] unsigned char 
  2369 ;;  deltaTempo      4  220[BANK1 ] unsigned long 
  2370 ;;  tempo           4  209[BANK1 ] unsigned long 
  2371 ;;  resp            1  208[BANK1 ] unsigned char 
  2372 ;;  i               2  224[BANK1 ] int 
  2373 ;;  dadoPoco        6  226[BANK1 ] struct .
  2374 ;;  pisca           1  232[BANK1 ] unsigned char 
  2375 ;;  statusLoRaWa    1  207[BANK1 ] unsigned char 
  2376 ;; Return value:  Size  Location     Type
  2377 ;;                  1    wreg      void 
  2378 ;; Registers used:
  2379 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2380 ;; Tracked objects:
  2381 ;;		On entry : 0/0
  2382 ;;		On exit  : 0/0
  2383 ;;		Unchanged: 0/0
  2384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2385 ;;      Params:         0       0       0       0       0       0       0       0       0
  2386 ;;      Locals:         0       0      28       0       0       0       0       0       0
  2387 ;;      Temps:          0       4       0       0       0       0       0       0       0
  2388 ;;      Totals:         0       4      28       0       0       0       0       0       0
  2389 ;;Total ram usage:       32 bytes
  2390 ;; Hardware stack levels required when called:   15
  2391 ;; This function calls:
  2392 ;;		_JoinLoRaWan
  2393 ;;		_SetChannelLoRaWan
  2394 ;;		_TxLoRaWan
  2395 ;;		_USBDeviceInit
  2396 ;;		___ftmul
  2397 ;;		___fttol
  2398 ;;		_delay
  2399 ;;		_le_AD
  2400 ;;		_le_pulsos
  2401 ;;		_millis
  2402 ;;		_putch
  2403 ;;		_putsUSBUSART
  2404 ;;		_setup_AD
  2405 ;;		_setup_ccp1
  2406 ;;		_setup_pulsos
  2407 ;;		_setup_uart
  2408 ;;		_verificaUSB
  2409 ;; This function is called by:
  2410 ;;		Startup code after reset
  2411 ;; This function uses a non-reentrant model
  2412 ;;
  2413                           
  2414                           	psect	text0
  2415  00150A                     __ptext0:
  2416                           	opt stack 0
  2417  00150A                     _main:
  2418                           	opt stack 16
  2419                           
  2420                           ;UT.c: 51: uint8_t pisca=0;
  2421                           
  2422                           ;incstack = 0
  2423  00150A  0E00               	movlw	0
  2424  00150C  0101               	movlb	1	; () banked
  2425  00150E  6FE8               	movwf	main@pisca& (0+255),b
  2426                           
  2427                           ; BSR set to: 1
  2428                           ;UT.c: 53: TRISEbits.RE2=0;
  2429  001510  9496               	bcf	3990,2,c	;volatile
  2430                           
  2431                           ; BSR set to: 1
  2432                           ;UT.c: 54: PORTDbits.RD4=0;
  2433  001512  9883               	bcf	3971,4,c	;volatile
  2434                           
  2435                           ; BSR set to: 1
  2436                           ;UT.c: 55: TRISDbits.RD4=0;
  2437  001514  9895               	bcf	3989,4,c	;volatile
  2438                           
  2439                           ;UT.c: 57: for (int i=0;i<25;i++)
  2440  001516  0E00               	movlw	0
  2441  001518  6FE1               	movwf	(main@i+1)& (0+255),b
  2442  00151A  0E00               	movlw	0
  2443  00151C  6FE0               	movwf	main@i& (0+255),b
  2444  00151E                     l8869:
  2445                           
  2446                           ; BSR set to: 1
  2447  00151E  BFE1               	btfsc	(main@i+1)& (0+255),7,b
  2448  001520  D006               	goto	l858
  2449  001522  51E1               	movf	(main@i+1)& (0+255),w,b
  2450  001524  E11C               	bnz	l8881
  2451  001526  0E19               	movlw	25
  2452  001528  5DE0               	subwf	main@i& (0+255),w,b
  2453  00152A  B0D8               	btfsc	status,0,c
  2454  00152C  D018               	goto	u8610
  2455  00152E                     l858:
  2456                           
  2457                           ; BSR set to: 1
  2458                           ;UT.c: 58: {
  2459                           ;UT.c: 59: pisca ^= 1;
  2460                           
  2461                           ; BSR set to: 1
  2462  00152E  0E01               	movlw	1
  2463  001530  1BE8               	xorwf	main@pisca& (0+255),f,b
  2464                           
  2465                           ; BSR set to: 1
  2466                           ;UT.c: 60: PORTEbits.RE2 = pisca;
  2467  001532  B1E8               	btfsc	main@pisca& (0+255),0,b
  2468  001534  D002               	bra	u8605
  2469  001536  9484               	bcf	3972,2,c	;volatile
  2470  001538  D001               	bra	u8606
  2471  00153A                     u8605:
  2472  00153A  8484               	bsf	3972,2,c	;volatile
  2473  00153C                     u8606:
  2474                           
  2475                           ;UT.c: 61: _delay((unsigned long)((200)*(48000000/4000.0)));
  2476  00153C  0E0D               	movlw	13
  2477  00153E  0100               	movlb	0	; () banked
  2478  001540  6FF4               	movwf	(??_main+1)& (0+255),b
  2479  001542  0E2D               	movlw	45
  2480  001544  6FF3               	movwf	??_main& (0+255),b
  2481  001546  0ED7               	movlw	215
  2482  001548                     u9027:
  2483  001548  2EE8               	decfsz	wreg,f,c
  2484  00154A  D7FE               	bra	u9027
  2485  00154C  2FF3               	decfsz	??_main& (0+255),f,b
  2486  00154E  D7FC               	bra	u9027
  2487  001550  2FF4               	decfsz	(??_main+1)& (0+255),f,b
  2488  001552  D7FA               	bra	u9027
  2489  001554  D000               	nop2	
  2490  001556  0101               	movlb	1	; () banked
  2491  001558  4BE0               	infsnz	main@i& (0+255),f,b
  2492  00155A  2BE1               	incf	(main@i+1)& (0+255),f,b
  2493  00155C  D7E0               	goto	l8869
  2494  00155E                     u8610:
  2495  00155E                     l8881:
  2496                           
  2497                           ; BSR set to: 1
  2498                           ;UT.c: 62: }
  2499                           ;UT.c: 68: setup_uart(57600);
  2500  00155E  0E00               	movlw	0
  2501  001560  0100               	movlb	0	; () banked
  2502  001562  6F6D               	movwf	setup_uart@baudRate& (0+255),b
  2503  001564  0EE1               	movlw	225
  2504  001566  6F6E               	movwf	(setup_uart@baudRate+1)& (0+255),b
  2505  001568  0E00               	movlw	0
  2506  00156A  6F6F               	movwf	(setup_uart@baudRate+2)& (0+255),b
  2507  00156C  0E00               	movlw	0
  2508  00156E  6F70               	movwf	(setup_uart@baudRate+3)& (0+255),b
  2509  001570  EC1C  F01B         	call	_setup_uart	;wreg free
  2510                           
  2511                           ;UT.c: 71: USBDeviceInit();
  2512  001574  ECAF  F00D         	call	_USBDeviceInit	;wreg free
  2513                           
  2514                           ;UT.c: 72: setup_AD();
  2515  001578  EC86  F022         	call	_setup_AD	;wreg free
  2516                           
  2517                           ;UT.c: 73: setup_pulsos();
  2518  00157C  ECB4  F021         	call	_setup_pulsos	;wreg free
  2519                           
  2520                           ;UT.c: 74: setup_ccp1();
  2521  001580  ECAC  F020         	call	_setup_ccp1	;wreg free
  2522                           
  2523                           ;UT.c: 76: verificaUSB();
  2524  001584  EC56  F021         	call	_verificaUSB	;wreg free
  2525                           
  2526                           ;UT.c: 88: struct
  2527                           ;UT.c: 89: {
  2528                           ;UT.c: 91: uint16_t nivel;
  2529                           ;UT.c: 92: uint32_t pulsos;
  2530                           ;UT.c: 93: } dadoPoco;
  2531                           ;UT.c: 96: putch(0x55);
  2532  001588  0E55               	movlw	85
  2533  00158A  ECAD  F022         	call	_putch
  2534                           
  2535                           ;UT.c: 135: uint8_t statusLoRaWan=JoinLoRaWan();
  2536  00158E  EC05  F021         	call	_JoinLoRaWan	;wreg free
  2537  001592  0101               	movlb	1	; () banked
  2538  001594  6FCF               	movwf	main@statusLoRaWan& (0+255),b
  2539  001596                     
  2540                           ;UT.c: 140: {
  2541                           ;UT.c: 141: uint32_t tempo=millis();
  2542                           
  2543                           ; BSR set to: 1
  2544  001596  EC2D  F022         	call	_millis	;wreg free
  2545  00159A  C060  F1D1         	movff	?_millis,main@tempo
  2546  00159E  C061  F1D2         	movff	?_millis+1,main@tempo+1
  2547  0015A2  C062  F1D3         	movff	?_millis+2,main@tempo+2
  2548  0015A6  C063  F1D4         	movff	?_millis+3,main@tempo+3
  2549                           
  2550                           ;UT.c: 142: pisca ^= 1;
  2551  0015AA  0E01               	movlw	1
  2552  0015AC  0101               	movlb	1	; () banked
  2553  0015AE  1BE8               	xorwf	main@pisca& (0+255),f,b
  2554                           
  2555                           ; BSR set to: 1
  2556                           ;UT.c: 143: PORTEbits.RE2 = pisca;
  2557  0015B0  B1E8               	btfsc	main@pisca& (0+255),0,b
  2558  0015B2  D002               	bra	u8625
  2559  0015B4  9484               	bcf	3972,2,c	;volatile
  2560  0015B6  D001               	bra	u8626
  2561  0015B8                     u8625:
  2562  0015B8  8484               	bsf	3972,2,c	;volatile
  2563  0015BA                     u8626:
  2564                           
  2565                           ;UT.c: 154: dadoPoco.nivel=(uint16_t)(le_AD()*1000.0);
  2566  0015BA  EC6D  F012         	call	_le_AD	;wreg free
  2567  0015BE  C09E  F1D9         	movff	?_le_AD,_main$5265
  2568  0015C2  C09F  F1DA         	movff	?_le_AD+1,_main$5265+1
  2569  0015C6  C0A0  F1DB         	movff	?_le_AD+2,_main$5265+2
  2570                           
  2571                           ;UT.c: 154: dadoPoco.nivel=(uint16_t)(le_AD()*1000.0);
  2572  0015CA  0E00               	movlw	0
  2573  0015CC  0100               	movlb	0	; () banked
  2574  0015CE  6F83               	movwf	___ftmul@f2& (0+255),b
  2575  0015D0  0E7A               	movlw	122
  2576  0015D2  6F84               	movwf	(___ftmul@f2+1)& (0+255),b
  2577  0015D4  0E44               	movlw	68
  2578  0015D6  6F85               	movwf	(___ftmul@f2+2)& (0+255),b
  2579  0015D8  C1D9  F080         	movff	_main$5265,___ftmul@f1
  2580  0015DC  C1DA  F081         	movff	_main$5265+1,___ftmul@f1+1
  2581  0015E0  C1DB  F082         	movff	_main$5265+2,___ftmul@f1+2
  2582  0015E4  EC00  F016         	call	___ftmul	;wreg free
  2583  0015E8  C080  F0AF         	movff	?___ftmul,___fttol@f1
  2584  0015EC  C081  F0B0         	movff	?___ftmul+1,___fttol@f1+1
  2585  0015F0  C082  F0B1         	movff	?___ftmul+2,___fttol@f1+2
  2586  0015F4  EC84  F015         	call	___fttol	;wreg free
  2587  0015F8  C0AF  F1E2         	movff	?___fttol,main@dadoPoco
  2588  0015FC  C0B0  F1E3         	movff	?___fttol+1,main@dadoPoco+1
  2589                           
  2590                           ;UT.c: 155: dadoPoco.pulsos=le_pulsos();
  2591  001600  ECF4  F021         	call	_le_pulsos	;wreg free
  2592  001604  C060  F1E4         	movff	?_le_pulsos,main@dadoPoco+2
  2593  001608  C061  F1E5         	movff	?_le_pulsos+1,main@dadoPoco+3
  2594  00160C  C062  F1E6         	movff	?_le_pulsos+2,main@dadoPoco+4
  2595  001610  C063  F1E7         	movff	?_le_pulsos+3,main@dadoPoco+5
  2596                           
  2597                           ;UT.c: 158: for (uint8_t canal=0;canal<8;canal++)
  2598  001614  0E00               	movlw	0
  2599  001616  0101               	movlb	1	; () banked
  2600  001618  6FE9               	movwf	main@canal& (0+255),b
  2601  00161A                     l8911:
  2602                           
  2603                           ; BSR set to: 1
  2604  00161A  0E07               	movlw	7
  2605  00161C  65E9               	cpfsgt	main@canal& (0+255),b
  2606  00161E  D001               	goto	l861
  2607  001620  D00A               	goto	u8640
  2608  001622                     l861:
  2609                           
  2610                           ; BSR set to: 1
  2611                           ;UT.c: 159: {
  2612                           ;UT.c: 160: SetChannelLoRaWan(canal, 1);
  2613                           
  2614                           ; BSR set to: 1
  2615  001622  0E01               	movlw	1
  2616  001624  0100               	movlb	0	; () banked
  2617  001626  6FEE               	movwf	SetChannelLoRaWan@ligado& (0+255),b
  2618  001628  0101               	movlb	1	; () banked
  2619  00162A  51E9               	movf	main@canal& (0+255),w,b
  2620  00162C  EC5D  F01E         	call	_SetChannelLoRaWan
  2621  001630  0101               	movlb	1	; () banked
  2622  001632  2BE9               	incf	main@canal& (0+255),f,b
  2623  001634  D7F2               	goto	l8911
  2624  001636                     u8640:
  2625                           
  2626                           ; BSR set to: 1
  2627                           ;UT.c: 161: }
  2628                           ;UT.c: 162: for (uint8_t canal=8;canal<72;canal++)
  2629                           
  2630                           ; BSR set to: 1
  2631  001636  0E08               	movlw	8
  2632  001638  6FEA               	movwf	main@canal_3124& (0+255),b
  2633  00163A                     l8923:
  2634                           
  2635                           ; BSR set to: 1
  2636  00163A  0E47               	movlw	71
  2637  00163C  65EA               	cpfsgt	main@canal_3124& (0+255),b
  2638  00163E  D001               	goto	l863
  2639  001640  D00A               	goto	u8660
  2640  001642                     l863:
  2641                           
  2642                           ; BSR set to: 1
  2643                           ;UT.c: 163: {
  2644                           ;UT.c: 164: SetChannelLoRaWan(canal, 0);
  2645                           
  2646                           ; BSR set to: 1
  2647  001642  0E00               	movlw	0
  2648  001644  0100               	movlb	0	; () banked
  2649  001646  6FEE               	movwf	SetChannelLoRaWan@ligado& (0+255),b
  2650  001648  0101               	movlb	1	; () banked
  2651  00164A  51EA               	movf	main@canal_3124& (0+255),w,b
  2652  00164C  EC5D  F01E         	call	_SetChannelLoRaWan
  2653  001650  0101               	movlb	1	; () banked
  2654  001652  2BEA               	incf	main@canal_3124& (0+255),f,b
  2655  001654  D7F2               	goto	l8923
  2656  001656                     u8660:
  2657                           
  2658                           ; BSR set to: 1
  2659                           ;UT.c: 165: }
  2660                           ;UT.c: 166: SetChannelLoRaWan(64, 1);
  2661                           
  2662                           ; BSR set to: 1
  2663  001656  0E01               	movlw	1
  2664  001658  0100               	movlb	0	; () banked
  2665  00165A  6FEE               	movwf	SetChannelLoRaWan@ligado& (0+255),b
  2666  00165C  0E40               	movlw	64
  2667  00165E  EC5D  F01E         	call	_SetChannelLoRaWan
  2668                           
  2669                           ;UT.c: 169: uint8_t resp=TxLoRaWan(1, 1, (const uint8_t*)&dadoPoco, sizeof(dadoPoco));
  2670  001662  0E01               	movlw	1
  2671  001664  0100               	movlb	0	; () banked
  2672  001666  6FEE               	movwf	TxLoRaWan@porta& (0+255),b
  2673  001668  0EE2               	movlw	low main@dadoPoco
  2674  00166A  6FEF               	movwf	TxLoRaWan@data& (0+255),b
  2675  00166C  0E01               	movlw	high main@dadoPoco
  2676  00166E  6FF0               	movwf	(TxLoRaWan@data+1)& (0+255),b
  2677  001670  0E06               	movlw	6
  2678  001672  6FF1               	movwf	TxLoRaWan@tamData& (0+255),b
  2679  001674  0E01               	movlw	1
  2680  001676  ECE1  F011         	call	_TxLoRaWan
  2681  00167A  0101               	movlb	1	; () banked
  2682  00167C  6FD0               	movwf	main@resp& (0+255),b
  2683                           
  2684                           ; BSR set to: 1
  2685                           ;UT.c: 174: if (verificaUSB() && (cdc_trf_state == 0))
  2686  00167E  EC56  F021         	call	_verificaUSB	;wreg free
  2687  001682  0900               	iorlw	0
  2688  001684  B4D8               	btfsc	status,2,c
  2689  001686  D00A               	goto	l865
  2690  001688  0100               	movlb	0	; () banked
  2691  00168A  51FE               	movf	_cdc_trf_state& (0+255),w,b
  2692  00168C  A4D8               	btfss	status,2,c
  2693  00168E  D006               	goto	l865
  2694                           
  2695                           ; BSR set to: 0
  2696                           ;UT.c: 175: {
  2697                           ;UT.c: 186: putsUSBUSART(frameBuffer);
  2698  001690  0E00               	movlw	low _frameBuffer
  2699  001692  6F60               	movwf	putsUSBUSART@data& (0+255),b
  2700  001694  0E06               	movlw	high _frameBuffer
  2701  001696  6F61               	movwf	(putsUSBUSART@data+1)& (0+255),b
  2702  001698  ECD9  F01F         	call	_putsUSBUSART	;wreg free
  2703  00169C                     l865:
  2704                           
  2705                           ;UT.c: 188: }
  2706                           ;UT.c: 191: uint32_t deltaTempo=(millis()-tempo);
  2707  00169C  C1D1  F0F3         	movff	main@tempo,??_main
  2708  0016A0  C1D2  F0F4         	movff	main@tempo+1,??_main+1
  2709  0016A4  C1D3  F0F5         	movff	main@tempo+2,??_main+2
  2710  0016A8  C1D4  F0F6         	movff	main@tempo+3,??_main+3
  2711  0016AC  0100               	movlb	0	; () banked
  2712  0016AE  1FF3               	comf	??_main& (0+255),f,b
  2713  0016B0  1FF4               	comf	(??_main+1)& (0+255),f,b
  2714  0016B2  1FF5               	comf	(??_main+2)& (0+255),f,b
  2715  0016B4  1FF6               	comf	(??_main+3)& (0+255),f,b
  2716  0016B6  2BF3               	incf	??_main& (0+255),f,b
  2717  0016B8  0E00               	movlw	0
  2718  0016BA  23F4               	addwfc	(??_main+1)& (0+255),f,b
  2719  0016BC  23F5               	addwfc	(??_main+2)& (0+255),f,b
  2720  0016BE  23F6               	addwfc	(??_main+3)& (0+255),f,b
  2721  0016C0  EC2D  F022         	call	_millis	;wreg free
  2722  0016C4  0100               	movlb	0	; () banked
  2723  0016C6  51F3               	movf	??_main& (0+255),w,b
  2724  0016C8  2560               	addwf	?_millis& (0+255),w,b
  2725  0016CA  0101               	movlb	1	; () banked
  2726  0016CC  6FDC               	movwf	main@deltaTempo& (0+255),b
  2727  0016CE  0100               	movlb	0	; () banked
  2728  0016D0  51F4               	movf	(??_main+1)& (0+255),w,b
  2729  0016D2  2161               	addwfc	(?_millis+1)& (0+255),w,b
  2730  0016D4  0101               	movlb	1	; () banked
  2731  0016D6  6FDD               	movwf	(main@deltaTempo+1)& (0+255),b
  2732  0016D8  0100               	movlb	0	; () banked
  2733  0016DA  51F5               	movf	(??_main+2)& (0+255),w,b
  2734  0016DC  2162               	addwfc	(?_millis+2)& (0+255),w,b
  2735  0016DE  0101               	movlb	1	; () banked
  2736  0016E0  6FDE               	movwf	(main@deltaTempo+2)& (0+255),b
  2737  0016E2  0100               	movlb	0	; () banked
  2738  0016E4  51F6               	movf	(??_main+3)& (0+255),w,b
  2739  0016E6  2163               	addwfc	(?_millis+3)& (0+255),w,b
  2740  0016E8  0101               	movlb	1	; () banked
  2741  0016EA  6FDF               	movwf	(main@deltaTempo+3)& (0+255),b
  2742                           
  2743                           ; BSR set to: 1
  2744                           ;UT.c: 192: if (deltaTempo<30000)
  2745  0016EC  51DF               	movf	(main@deltaTempo+3)& (0+255),w,b
  2746  0016EE  11DE               	iorwf	(main@deltaTempo+2)& (0+255),w,b
  2747  0016F0  E105               	bnz	u8691
  2748  0016F2  0E30               	movlw	48
  2749  0016F4  5DDC               	subwf	main@deltaTempo& (0+255),w,b
  2750  0016F6  0E75               	movlw	117
  2751  0016F8  59DD               	subwfb	(main@deltaTempo+1)& (0+255),w,b
  2752  0016FA  B0D8               	btfsc	status,0,c
  2753  0016FC                     u8691:
  2754  0016FC  D74C               	goto	l860
  2755                           
  2756                           ; BSR set to: 1
  2757                           ;UT.c: 193: {
  2758                           ;UT.c: 194: uint32_t tempoTimeOut=30000-deltaTempo;
  2759  0016FE  C1DC  F0F3         	movff	main@deltaTempo,??_main
  2760  001702  C1DD  F0F4         	movff	main@deltaTempo+1,??_main+1
  2761  001706  C1DE  F0F5         	movff	main@deltaTempo+2,??_main+2
  2762  00170A  C1DF  F0F6         	movff	main@deltaTempo+3,??_main+3
  2763  00170E  0100               	movlb	0	; () banked
  2764  001710  1FF3               	comf	??_main& (0+255),f,b
  2765  001712  1FF4               	comf	(??_main+1)& (0+255),f,b
  2766  001714  1FF5               	comf	(??_main+2)& (0+255),f,b
  2767  001716  1FF6               	comf	(??_main+3)& (0+255),f,b
  2768  001718  2BF3               	incf	??_main& (0+255),f,b
  2769  00171A  0E00               	movlw	0
  2770  00171C  23F4               	addwfc	(??_main+1)& (0+255),f,b
  2771  00171E  23F5               	addwfc	(??_main+2)& (0+255),f,b
  2772  001720  23F6               	addwfc	(??_main+3)& (0+255),f,b
  2773  001722  0E30               	movlw	48
  2774  001724  25F3               	addwf	??_main& (0+255),w,b
  2775  001726  0101               	movlb	1	; () banked
  2776  001728  6FD5               	movwf	main@tempoTimeOut& (0+255),b
  2777  00172A  0E75               	movlw	117
  2778  00172C  0100               	movlb	0	; () banked
  2779  00172E  21F4               	addwfc	(??_main+1)& (0+255),w,b
  2780  001730  0101               	movlb	1	; () banked
  2781  001732  6FD6               	movwf	(main@tempoTimeOut+1)& (0+255),b
  2782  001734  0E00               	movlw	0
  2783  001736  0100               	movlb	0	; () banked
  2784  001738  21F5               	addwfc	(??_main+2)& (0+255),w,b
  2785  00173A  0101               	movlb	1	; () banked
  2786  00173C  6FD7               	movwf	(main@tempoTimeOut+2)& (0+255),b
  2787  00173E  0E00               	movlw	0
  2788  001740  0100               	movlb	0	; () banked
  2789  001742  21F6               	addwfc	(??_main+3)& (0+255),w,b
  2790  001744  0101               	movlb	1	; () banked
  2791  001746  6FD8               	movwf	(main@tempoTimeOut+3)& (0+255),b
  2792                           
  2793                           ; BSR set to: 1
  2794                           ;UT.c: 195: delay(tempoTimeOut);
  2795  001748  C1D5  F06D         	movff	main@tempoTimeOut,delay@time
  2796  00174C  C1D6  F06E         	movff	main@tempoTimeOut+1,delay@time+1
  2797  001750  C1D7  F06F         	movff	main@tempoTimeOut+2,delay@time+2
  2798  001754  C1D8  F070         	movff	main@tempoTimeOut+3,delay@time+3
  2799  001758  ECEB  F01D         	call	_delay	;wreg free
  2800  00175C  D71C               	goto	l860
  2801  00175E                     __end_of_main:
  2802                           	opt stack 0
  2803                           tblptru	equ	0xFF8
  2804                           tblptrh	equ	0xFF7
  2805                           tblptrl	equ	0xFF6
  2806                           tablat	equ	0xFF5
  2807                           postinc0	equ	0xFEE
  2808                           wreg	equ	0xFE8
  2809                           postdec1	equ	0xFE5
  2810                           fsr1l	equ	0xFE1
  2811                           status	equ	0xFD8
  2812                           
  2813 ;; *************** function _setup_uart *****************
  2814 ;; Defined at:
  2815 ;;		line 13 in file "uart/uart.c"
  2816 ;; Parameters:    Size  Location     Type
  2817 ;;  baudRate        4   13[BANK0 ] unsigned long 
  2818 ;; Auto vars:     Size  Location     Type
  2819 ;;  brg             4   17[BANK0 ] unsigned long 
  2820 ;; Return value:  Size  Location     Type
  2821 ;;                  1    wreg      void 
  2822 ;; Registers used:
  2823 ;;		wreg, status,2, status,0, cstack
  2824 ;; Tracked objects:
  2825 ;;		On entry : 0/0
  2826 ;;		On exit  : 0/0
  2827 ;;		Unchanged: 0/0
  2828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2829 ;;      Params:         0       4       0       0       0       0       0       0       0
  2830 ;;      Locals:         0       4       0       0       0       0       0       0       0
  2831 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2832 ;;      Totals:         0       8       0       0       0       0       0       0       0
  2833 ;;Total ram usage:        8 bytes
  2834 ;; Hardware stack levels used:    1
  2835 ;; Hardware stack levels required when called:   11
  2836 ;; This function calls:
  2837 ;;		___lldiv
  2838 ;; This function is called by:
  2839 ;;		_main
  2840 ;; This function uses a non-reentrant model
  2841 ;;
  2842                           
  2843                           	psect	text1
  2844  003638                     __ptext1:
  2845                           	opt stack 0
  2846  003638                     _setup_uart:
  2847                           	opt stack 19
  2848                           
  2849                           ;uart.c: 15: uint32_t brg;
  2850                           ;uart.c: 17: PORTCbits.RC6=1;
  2851                           
  2852                           ;incstack = 0
  2853  003638  8C82               	bsf	3970,6,c	;volatile
  2854                           
  2855                           ;uart.c: 18: TRISCbits.RC6=0;
  2856  00363A  9C94               	bcf	3988,6,c	;volatile
  2857                           
  2858                           ;uart.c: 20: PORTCbits.RC7=1;
  2859  00363C  8E82               	bsf	3970,7,c	;volatile
  2860                           
  2861                           ;uart.c: 21: TRISCbits.RC7=1;
  2862  00363E  8E94               	bsf	3988,7,c	;volatile
  2863                           
  2864                           ;uart.c: 23: TXSTAbits.BRGH=1;
  2865  003640  84AC               	bsf	4012,2,c	;volatile
  2866                           
  2867                           ;uart.c: 24: BAUDCONbits.BRG16=1;
  2868  003642  86B8               	bsf	4024,3,c	;volatile
  2869                           
  2870                           ;uart.c: 25: brg = ((48000000*10/4)/(baudRate)-5);
  2871  003644  0E00               	movlw	0
  2872  003646  0100               	movlb	0	; () banked
  2873  003648  6F60               	movwf	___lldiv@dividend& (0+255),b
  2874  00364A  0E0E               	movlw	14
  2875  00364C  6F61               	movwf	(___lldiv@dividend+1)& (0+255),b
  2876  00364E  0E27               	movlw	39
  2877  003650  6F62               	movwf	(___lldiv@dividend+2)& (0+255),b
  2878  003652  0E07               	movlw	7
  2879  003654  6F63               	movwf	(___lldiv@dividend+3)& (0+255),b
  2880  003656  C06D  F064         	movff	setup_uart@baudRate,___lldiv@divisor
  2881  00365A  C06E  F065         	movff	setup_uart@baudRate+1,___lldiv@divisor+1
  2882  00365E  C06F  F066         	movff	setup_uart@baudRate+2,___lldiv@divisor+2
  2883  003662  C070  F067         	movff	setup_uart@baudRate+3,___lldiv@divisor+3
  2884  003666  EC68  F01D         	call	___lldiv	;wreg free
  2885  00366A  0EFB               	movlw	251
  2886  00366C  0100               	movlb	0	; () banked
  2887  00366E  2560               	addwf	?___lldiv& (0+255),w,b
  2888  003670  6F71               	movwf	setup_uart@brg& (0+255),b
  2889  003672  0EFF               	movlw	255
  2890  003674  2161               	addwfc	(?___lldiv+1)& (0+255),w,b
  2891  003676  6F72               	movwf	(setup_uart@brg+1)& (0+255),b
  2892  003678  0EFF               	movlw	255
  2893  00367A  2162               	addwfc	(?___lldiv+2)& (0+255),w,b
  2894  00367C  6F73               	movwf	(setup_uart@brg+2)& (0+255),b
  2895  00367E  0EFF               	movlw	255
  2896  003680  2163               	addwfc	(?___lldiv+3)& (0+255),w,b
  2897  003682  6F74               	movwf	(setup_uart@brg+3)& (0+255),b
  2898                           
  2899                           ;uart.c: 26: brg /= 10;
  2900  003684  C071  F060         	movff	setup_uart@brg,___lldiv@dividend
  2901  003688  C072  F061         	movff	setup_uart@brg+1,___lldiv@dividend+1
  2902  00368C  C073  F062         	movff	setup_uart@brg+2,___lldiv@dividend+2
  2903  003690  C074  F063         	movff	setup_uart@brg+3,___lldiv@dividend+3
  2904  003694  0E0A               	movlw	10
  2905  003696  6F64               	movwf	___lldiv@divisor& (0+255),b
  2906  003698  0E00               	movlw	0
  2907  00369A  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  2908  00369C  0E00               	movlw	0
  2909  00369E  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  2910  0036A0  0E00               	movlw	0
  2911  0036A2  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  2912  0036A4  EC68  F01D         	call	___lldiv	;wreg free
  2913  0036A8  C060  F071         	movff	?___lldiv,setup_uart@brg
  2914  0036AC  C061  F072         	movff	?___lldiv+1,setup_uart@brg+1
  2915  0036B0  C062  F073         	movff	?___lldiv+2,setup_uart@brg+2
  2916  0036B4  C063  F074         	movff	?___lldiv+3,setup_uart@brg+3
  2917                           
  2918                           ;uart.c: 27: SPBRG=(uint8_t)brg;
  2919  0036B8  C071  FFAF         	movff	setup_uart@brg,4015	;volatile
  2920                           
  2921                           ;uart.c: 28: SPBRGH=(uint8_t)(brg >> 8);
  2922  0036BC  C072  FFB0         	movff	setup_uart@brg+1,4016	;volatile
  2923                           
  2924                           ;uart.c: 30: TXSTAbits.SYNC=0;
  2925  0036C0  98AC               	bcf	4012,4,c	;volatile
  2926                           
  2927                           ;uart.c: 31: TXSTAbits.SENDB=0;
  2928  0036C2  96AC               	bcf	4012,3,c	;volatile
  2929                           
  2930                           ;uart.c: 32: RCSTAbits.SPEN=1;
  2931  0036C4  8EAB               	bsf	4011,7,c	;volatile
  2932                           
  2933                           ;uart.c: 34: BAUDCONbits.TXCKP=0;
  2934  0036C6  98B8               	bcf	4024,4,c	;volatile
  2935                           
  2936                           ;uart.c: 35: BAUDCONbits.RXDTP=0;
  2937  0036C8  9AB8               	bcf	4024,5,c	;volatile
  2938                           
  2939                           ;uart.c: 36: BAUDCONbits.ABDEN=0;
  2940  0036CA  90B8               	bcf	4024,0,c	;volatile
  2941                           
  2942                           ;uart.c: 37: TXSTAbits.TX9=0;
  2943  0036CC  9CAC               	bcf	4012,6,c	;volatile
  2944                           
  2945                           ;uart.c: 38: RCSTAbits.RX9=0;
  2946  0036CE  9CAB               	bcf	4011,6,c	;volatile
  2947                           
  2948                           ;uart.c: 40: RCSTAbits.CREN=1;
  2949  0036D0  88AB               	bsf	4011,4,c	;volatile
  2950                           
  2951                           ;uart.c: 41: TXSTAbits.TXEN=1;
  2952  0036D2  8AAC               	bsf	4012,5,c	;volatile
  2953                           
  2954                           ;uart.c: 43: RCIE=1;
  2955  0036D4  8A9D               	bsf	3997,5,c	;volatile
  2956  0036D6  0012               	return		;funcret
  2957  0036D8                     __end_of_setup_uart:
  2958                           	opt stack 0
  2959                           tblptru	equ	0xFF8
  2960                           tblptrh	equ	0xFF7
  2961                           tblptrl	equ	0xFF6
  2962                           tablat	equ	0xFF5
  2963                           postinc0	equ	0xFEE
  2964                           wreg	equ	0xFE8
  2965                           postdec1	equ	0xFE5
  2966                           fsr1l	equ	0xFE1
  2967                           status	equ	0xFD8
  2968                           
  2969 ;; *************** function _setup_pulsos *****************
  2970 ;; Defined at:
  2971 ;;		line 10 in file "Pulses.c"
  2972 ;; Parameters:    Size  Location     Type
  2973 ;;		None
  2974 ;; Auto vars:     Size  Location     Type
  2975 ;;		None
  2976 ;; Return value:  Size  Location     Type
  2977 ;;                  1    wreg      void 
  2978 ;; Registers used:
  2979 ;;		wreg, status,2
  2980 ;; Tracked objects:
  2981 ;;		On entry : 0/0
  2982 ;;		On exit  : 0/0
  2983 ;;		Unchanged: 0/0
  2984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2985 ;;      Params:         0       0       0       0       0       0       0       0       0
  2986 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2987 ;;      Temps:          0       1       0       0       0       0       0       0       0
  2988 ;;      Totals:         0       1       0       0       0       0       0       0       0
  2989 ;;Total ram usage:        1 bytes
  2990 ;; Hardware stack levels used:    1
  2991 ;; Hardware stack levels required when called:   10
  2992 ;; This function calls:
  2993 ;;		Nothing
  2994 ;; This function is called by:
  2995 ;;		_main
  2996 ;; This function uses a non-reentrant model
  2997 ;;
  2998                           
  2999                           	psect	text2
  3000  004368                     __ptext2:
  3001                           	opt stack 0
  3002  004368                     _setup_pulsos:
  3003                           	opt stack 20
  3004                           
  3005                           ;Pulses.c: 12: TRISDbits.RD0=1;
  3006                           
  3007                           ;incstack = 0
  3008  004368  8095               	bsf	3989,0,c	;volatile
  3009                           
  3010                           ;Pulses.c: 13: dig_1=PORTDbits.RD0;
  3011  00436A  A083               	btfss	3971,0,c	;volatile
  3012  00436C  D004               	goto	u8170
  3013  00436E  0100               	movlb	0	; () banked
  3014  004370  6B60               	clrf	??_setup_pulsos& (0+255),b
  3015  004372  2B60               	incf	??_setup_pulsos& (0+255),f,b
  3016  004374  D002               	goto	u8178
  3017  004376                     u8170:
  3018  004376  0100               	movlb	0	; () banked
  3019  004378  6B60               	clrf	??_setup_pulsos& (0+255),b
  3020  00437A                     u8178:
  3021  00437A  5160               	movf	??_setup_pulsos& (0+255),w,b
  3022  00437C  0102               	movlb	2	; () banked
  3023  00437E  6F46               	movwf	_dig_1& (0+255),b	;volatile
  3024  004380  6B47               	clrf	(_dig_1+1)& (0+255),b	;volatile
  3025                           
  3026                           ;Pulses.c: 14: freqPulses=0;
  3027  004382  0E00               	movlw	0
  3028  004384  6F30               	movwf	_freqPulses& (0+255),b	;volatile
  3029  004386  0E00               	movlw	0
  3030  004388  6F31               	movwf	(_freqPulses+1)& (0+255),b	;volatile
  3031  00438A  0E00               	movlw	0
  3032  00438C  6F32               	movwf	(_freqPulses+2)& (0+255),b	;volatile
  3033  00438E  0E00               	movlw	0
  3034  004390  6F33               	movwf	(_freqPulses+3)& (0+255),b	;volatile
  3035                           
  3036                           ; BSR set to: 2
  3037  004392  0012               	return		;funcret
  3038  004394                     __end_of_setup_pulsos:
  3039                           	opt stack 0
  3040                           tblptru	equ	0xFF8
  3041                           tblptrh	equ	0xFF7
  3042                           tblptrl	equ	0xFF6
  3043                           tablat	equ	0xFF5
  3044                           postinc0	equ	0xFEE
  3045                           wreg	equ	0xFE8
  3046                           postdec1	equ	0xFE5
  3047                           fsr1l	equ	0xFE1
  3048                           status	equ	0xFD8
  3049                           
  3050 ;; *************** function _setup_ccp1 *****************
  3051 ;; Defined at:
  3052 ;;		line 27 in file "Timer.c"
  3053 ;; Parameters:    Size  Location     Type
  3054 ;;		None
  3055 ;; Auto vars:     Size  Location     Type
  3056 ;;		None
  3057 ;; Return value:  Size  Location     Type
  3058 ;;                  1    wreg      void 
  3059 ;; Registers used:
  3060 ;;		wreg, status,2
  3061 ;; Tracked objects:
  3062 ;;		On entry : 0/0
  3063 ;;		On exit  : 0/0
  3064 ;;		Unchanged: 0/0
  3065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3066 ;;      Params:         0       0       0       0       0       0       0       0       0
  3067 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3068 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3069 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3070 ;;Total ram usage:        0 bytes
  3071 ;; Hardware stack levels used:    1
  3072 ;; Hardware stack levels required when called:   10
  3073 ;; This function calls:
  3074 ;;		Nothing
  3075 ;; This function is called by:
  3076 ;;		_main
  3077 ;; This function uses a non-reentrant model
  3078 ;;
  3079                           
  3080                           	psect	text3
  3081  004158                     __ptext3:
  3082                           	opt stack 0
  3083  004158                     _setup_ccp1:
  3084                           	opt stack 20
  3085                           
  3086                           ;Timer.c: 29: GIEH = 0;
  3087                           
  3088                           ; BSR set to: 2
  3089                           ;incstack = 0
  3090  004158  9EF2               	bcf	intcon,7,c	;volatile
  3091                           
  3092                           ;Timer.c: 30: T3CON=0b10111000;
  3093  00415A  0EB8               	movlw	184
  3094  00415C  6EB1               	movwf	4017,c	;volatile
  3095                           
  3096                           ;Timer.c: 31: TMR1H=0x00;
  3097  00415E  0E00               	movlw	0
  3098  004160  6ECF               	movwf	4047,c	;volatile
  3099                           
  3100                           ;Timer.c: 32: TMR1L=0x00;
  3101  004162  0E00               	movlw	0
  3102  004164  6ECE               	movwf	4046,c	;volatile
  3103                           
  3104                           ;Timer.c: 33: CCPR1H=0x05;
  3105  004166  0E05               	movlw	5
  3106  004168  6EBF               	movwf	4031,c	;volatile
  3107                           
  3108                           ;Timer.c: 34: CCPR1L=0xDC;
  3109  00416A  0EDC               	movlw	220
  3110  00416C  6EBE               	movwf	4030,c	;volatile
  3111                           
  3112                           ;Timer.c: 35: ticks=0;
  3113  00416E  0E00               	movlw	0
  3114  004170  0102               	movlb	2	; () banked
  3115  004172  6F2C               	movwf	_ticks& (0+255),b	;volatile
  3116  004174  0E00               	movlw	0
  3117  004176  6F2D               	movwf	(_ticks+1)& (0+255),b	;volatile
  3118  004178  0E00               	movlw	0
  3119  00417A  6F2E               	movwf	(_ticks+2)& (0+255),b	;volatile
  3120  00417C  0E00               	movlw	0
  3121  00417E  6F2F               	movwf	(_ticks+3)& (0+255),b	;volatile
  3122                           
  3123                           ; BSR set to: 2
  3124                           ;Timer.c: 37: CCP1IF=0;
  3125  004180  949E               	bcf	3998,2,c	;volatile
  3126                           
  3127                           ;Timer.c: 38: T1CON=0b11110001;
  3128  004182  0EF1               	movlw	241
  3129  004184  6ECD               	movwf	4045,c	;volatile
  3130                           
  3131                           ;Timer.c: 39: CCP1CON = 0b00001011;
  3132  004186  0E0B               	movlw	11
  3133  004188  6EBD               	movwf	4029,c	;volatile
  3134                           
  3135                           ; BSR set to: 2
  3136                           ;Timer.c: 40: CCP1IE=1;
  3137  00418A  849D               	bsf	3997,2,c	;volatile
  3138                           
  3139                           ; BSR set to: 2
  3140                           ;Timer.c: 41: IPR1bits.CCP1IP=1;
  3141  00418C  849F               	bsf	3999,2,c	;volatile
  3142                           
  3143                           ; BSR set to: 2
  3144                           ;Timer.c: 42: RCONbits.IPEN = 1;
  3145  00418E  8ED0               	bsf	4048,7,c	;volatile
  3146                           
  3147                           ; BSR set to: 2
  3148                           ;Timer.c: 43: GIEH = 1;
  3149  004190  8EF2               	bsf	intcon,7,c	;volatile
  3150                           
  3151                           ; BSR set to: 2
  3152  004192  0012               	return		;funcret
  3153  004194                     __end_of_setup_ccp1:
  3154                           	opt stack 0
  3155                           tblptru	equ	0xFF8
  3156                           tblptrh	equ	0xFF7
  3157                           tblptrl	equ	0xFF6
  3158                           tablat	equ	0xFF5
  3159                           intcon	equ	0xFF2
  3160                           postinc0	equ	0xFEE
  3161                           wreg	equ	0xFE8
  3162                           postdec1	equ	0xFE5
  3163                           fsr1l	equ	0xFE1
  3164                           status	equ	0xFD8
  3165                           
  3166 ;; *************** function _setup_AD *****************
  3167 ;; Defined at:
  3168 ;;		line 10 in file "AD.c"
  3169 ;; Parameters:    Size  Location     Type
  3170 ;;		None
  3171 ;; Auto vars:     Size  Location     Type
  3172 ;;		None
  3173 ;; Return value:  Size  Location     Type
  3174 ;;                  1    wreg      void 
  3175 ;; Registers used:
  3176 ;;		wreg, status,2
  3177 ;; Tracked objects:
  3178 ;;		On entry : 0/0
  3179 ;;		On exit  : 0/0
  3180 ;;		Unchanged: 0/0
  3181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3182 ;;      Params:         0       0       0       0       0       0       0       0       0
  3183 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3184 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3185 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3186 ;;Total ram usage:        0 bytes
  3187 ;; Hardware stack levels used:    1
  3188 ;; Hardware stack levels required when called:   10
  3189 ;; This function calls:
  3190 ;;		Nothing
  3191 ;; This function is called by:
  3192 ;;		_main
  3193 ;; This function uses a non-reentrant model
  3194 ;;
  3195                           
  3196                           	psect	text4
  3197  00450C                     __ptext4:
  3198                           	opt stack 0
  3199  00450C                     _setup_AD:
  3200                           	opt stack 20
  3201                           
  3202                           ;AD.c: 12: ADON=0;
  3203                           
  3204                           ; BSR set to: 2
  3205                           ;incstack = 0
  3206  00450C  90C2               	bcf	4034,0,c	;volatile
  3207                           
  3208                           ;AD.c: 13: ADCON1=0b00001110;
  3209  00450E  0E0E               	movlw	14
  3210  004510  6EC1               	movwf	4033,c	;volatile
  3211                           
  3212                           ;AD.c: 14: ADCON0=0b00000000;
  3213  004512  0E00               	movlw	0
  3214  004514  6EC2               	movwf	4034,c	;volatile
  3215                           
  3216                           ;AD.c: 15: ADCON2=0b10111110;
  3217  004516  0EBE               	movlw	190
  3218  004518  6EC0               	movwf	4032,c	;volatile
  3219                           
  3220                           ;AD.c: 16: ADON=1;
  3221  00451A  80C2               	bsf	4034,0,c	;volatile
  3222                           
  3223                           ;AD.c: 17: ADIF=0;
  3224  00451C  9C9E               	bcf	3998,6,c	;volatile
  3225                           
  3226                           ;AD.c: 18: ADIE=0;
  3227  00451E  9C9D               	bcf	3997,6,c	;volatile
  3228  004520  0012               	return		;funcret
  3229  004522                     __end_of_setup_AD:
  3230                           	opt stack 0
  3231                           tblptru	equ	0xFF8
  3232                           tblptrh	equ	0xFF7
  3233                           tblptrl	equ	0xFF6
  3234                           tablat	equ	0xFF5
  3235                           intcon	equ	0xFF2
  3236                           postinc0	equ	0xFEE
  3237                           wreg	equ	0xFE8
  3238                           postdec1	equ	0xFE5
  3239                           fsr1l	equ	0xFE1
  3240                           status	equ	0xFD8
  3241                           
  3242 ;; *************** function _putsUSBUSART *****************
  3243 ;; Defined at:
  3244 ;;		line 629 in file "../../../../microchip/mla/v2017_03_06/framework/usb/src/usb_device_cdc.c"
  3245 ;; Parameters:    Size  Location     Type
  3246 ;;  data            2    0[BANK0 ] PTR unsigned char 
  3247 ;;		 -> frameBuffer(200), 
  3248 ;; Auto vars:     Size  Location     Type
  3249 ;;  pData           2    2[BANK0 ] PTR unsigned char 
  3250 ;;		 -> frameBuffer(200), 
  3251 ;;  len             1    4[BANK0 ] unsigned char 
  3252 ;; Return value:  Size  Location     Type
  3253 ;;                  1    wreg      void 
  3254 ;; Registers used:
  3255 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3256 ;; Tracked objects:
  3257 ;;		On entry : 0/0
  3258 ;;		On exit  : 0/0
  3259 ;;		Unchanged: 0/0
  3260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3261 ;;      Params:         0       2       0       0       0       0       0       0       0
  3262 ;;      Locals:         0       3       0       0       0       0       0       0       0
  3263 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3264 ;;      Totals:         0       5       0       0       0       0       0       0       0
  3265 ;;Total ram usage:        5 bytes
  3266 ;; Hardware stack levels used:    1
  3267 ;; Hardware stack levels required when called:   10
  3268 ;; This function calls:
  3269 ;;		Nothing
  3270 ;; This function is called by:
  3271 ;;		_main
  3272 ;; This function uses a non-reentrant model
  3273 ;;
  3274                           
  3275                           	psect	text5
  3276  003FB2                     __ptext5:
  3277                           	opt stack 0
  3278  003FB2                     _putsUSBUSART:
  3279                           	opt stack 20
  3280                           
  3281                           ;usb_device_cdc.c: 631: uint8_t len;
  3282                           ;usb_device_cdc.c: 632: char *pData;
  3283                           ;usb_device_cdc.c: 657: {PIE2bits.USBIE = 0;};
  3284                           
  3285                           ;incstack = 0
  3286  003FB2  9AA0               	bcf	4000,5,c	;volatile
  3287                           
  3288                           ;usb_device_cdc.c: 658: if(cdc_trf_state != 0)
  3289  003FB4  0100               	movlb	0	; () banked
  3290  003FB6  51FE               	movf	_cdc_trf_state& (0+255),w,b
  3291  003FB8  B4D8               	btfsc	status,2,c
  3292  003FBA  D002               	goto	l703
  3293                           
  3294                           ; BSR set to: 0
  3295                           ;usb_device_cdc.c: 659: {
  3296                           ;usb_device_cdc.c: 660: {PIE2bits.USBIE = 1;};
  3297  003FBC  8AA0               	bsf	4000,5,c	;volatile
  3298                           
  3299                           ;usb_device_cdc.c: 661: return;
  3300  003FBE  0012               	return	
  3301  003FC0                     l703:
  3302                           
  3303                           ; BSR set to: 0
  3304                           ;usb_device_cdc.c: 662: }
  3305                           ;usb_device_cdc.c: 668: len = 0;
  3306                           
  3307                           ; BSR set to: 0
  3308  003FC0  0E00               	movlw	0
  3309  003FC2  6F64               	movwf	putsUSBUSART@len& (0+255),b
  3310                           
  3311                           ; BSR set to: 0
  3312                           ;usb_device_cdc.c: 669: pData = data;
  3313  003FC4  C060  F062         	movff	putsUSBUSART@data,putsUSBUSART@pData
  3314  003FC8  C061  F063         	movff	putsUSBUSART@data+1,putsUSBUSART@pData+1
  3315  003FCC                     
  3316                           ; BSR set to: 0
  3317                           ;usb_device_cdc.c: 671: {
  3318                           ;usb_device_cdc.c: 672: len++;
  3319                           
  3320                           ; BSR set to: 0
  3321  003FCC  2B64               	incf	putsUSBUSART@len& (0+255),f,b
  3322                           
  3323                           ; BSR set to: 0
  3324                           ;usb_device_cdc.c: 673: if(len == 255) break;
  3325  003FCE  2964               	incf	putsUSBUSART@len& (0+255),w,b
  3326  003FD0  B4D8               	btfsc	status,2,c
  3327  003FD2  D009               	goto	u8150
  3328                           
  3329                           ; BSR set to: 0
  3330                           ;usb_device_cdc.c: 674: }while(*pData++);
  3331                           
  3332                           ; BSR set to: 0
  3333                           
  3334                           ; BSR set to: 0
  3335  003FD4  C062  FFD9         	movff	putsUSBUSART@pData,fsr2l
  3336  003FD8  C063  FFDA         	movff	putsUSBUSART@pData+1,fsr2h
  3337  003FDC  4B62               	infsnz	putsUSBUSART@pData& (0+255),f,b
  3338  003FDE  2B63               	incf	(putsUSBUSART@pData+1)& (0+255),f,b
  3339  003FE0  50DF               	movf	indf2,w,c
  3340  003FE2  A4D8               	btfss	status,2,c
  3341  003FE4  D7F3               	goto	l705
  3342  003FE6                     u8150:
  3343                           
  3344                           ; BSR set to: 0
  3345                           ;usb_device_cdc.c: 682: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = len; cdc_mem_type 
      +                          = 0x01; cdc_trf_state = 1; };
  3346                           
  3347                           ; BSR set to: 0
  3348  003FE6  C060  F23F         	movff	putsUSBUSART@data,_pCDCSrc
  3349  003FEA  C061  F240         	movff	putsUSBUSART@data+1,_pCDCSrc+1
  3350                           
  3351                           ; BSR set to: 0
  3352  003FEE  C064  F0FD         	movff	putsUSBUSART@len,_cdc_tx_len
  3353                           
  3354                           ; BSR set to: 0
  3355  003FF2  0E01               	movlw	1
  3356  003FF4  0101               	movlb	1	; () banked
  3357  003FF6  6FF4               	movwf	_cdc_mem_type& (0+255),b
  3358                           
  3359                           ; BSR set to: 1
  3360  003FF8  0E01               	movlw	1
  3361  003FFA  0100               	movlb	0	; () banked
  3362  003FFC  6FFE               	movwf	_cdc_trf_state& (0+255),b
  3363                           
  3364                           ; BSR set to: 0
  3365                           ;usb_device_cdc.c: 683: {PIE2bits.USBIE = 1;};
  3366  003FFE  8AA0               	bsf	4000,5,c	;volatile
  3367                           
  3368                           ; BSR set to: 0
  3369  004000  0012               	return		;funcret
  3370  004002                     __end_of_putsUSBUSART:
  3371                           	opt stack 0
  3372                           tblptru	equ	0xFF8
  3373                           tblptrh	equ	0xFF7
  3374                           tblptrl	equ	0xFF6
  3375                           tablat	equ	0xFF5
  3376                           intcon	equ	0xFF2
  3377                           postinc0	equ	0xFEE
  3378                           wreg	equ	0xFE8
  3379                           postdec1	equ	0xFE5
  3380                           fsr1l	equ	0xFE1
  3381                           indf2	equ	0xFDF
  3382                           fsr2h	equ	0xFDA
  3383                           fsr2l	equ	0xFD9
  3384                           status	equ	0xFD8
  3385                           
  3386 ;; *************** function _le_pulsos *****************
  3387 ;; Defined at:
  3388 ;;		line 17 in file "Pulses.c"
  3389 ;; Parameters:    Size  Location     Type
  3390 ;;		None
  3391 ;; Auto vars:     Size  Location     Type
  3392 ;;  freq            4    4[BANK0 ] unsigned long 
  3393 ;; Return value:  Size  Location     Type
  3394 ;;                  4    0[BANK0 ] unsigned long 
  3395 ;; Registers used:
  3396 ;;		None
  3397 ;; Tracked objects:
  3398 ;;		On entry : 0/0
  3399 ;;		On exit  : 0/0
  3400 ;;		Unchanged: 0/0
  3401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3402 ;;      Params:         0       4       0       0       0       0       0       0       0
  3403 ;;      Locals:         0       4       0       0       0       0       0       0       0
  3404 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3405 ;;      Totals:         0       8       0       0       0       0       0       0       0
  3406 ;;Total ram usage:        8 bytes
  3407 ;; Hardware stack levels used:    1
  3408 ;; Hardware stack levels required when called:   10
  3409 ;; This function calls:
  3410 ;;		Nothing
  3411 ;; This function is called by:
  3412 ;;		_main
  3413 ;; This function uses a non-reentrant model
  3414 ;;
  3415                           
  3416                           	psect	text6
  3417  0043E8                     __ptext6:
  3418                           	opt stack 0
  3419  0043E8                     _le_pulsos:
  3420                           	opt stack 20
  3421                           
  3422                           ;Pulses.c: 19: CCP1IE=0;
  3423                           
  3424                           ; BSR set to: 0
  3425                           ;incstack = 0
  3426  0043E8  949D               	bcf	3997,2,c	;volatile
  3427                           
  3428                           ;Pulses.c: 20: uint32_t freq=freqPulses;
  3429  0043EA  C230  F064         	movff	_freqPulses,le_pulsos@freq	;volatile
  3430  0043EE  C231  F065         	movff	_freqPulses+1,le_pulsos@freq+1	;volatile
  3431  0043F2  C232  F066         	movff	_freqPulses+2,le_pulsos@freq+2	;volatile
  3432  0043F6  C233  F067         	movff	_freqPulses+3,le_pulsos@freq+3	;volatile
  3433                           
  3434                           ;Pulses.c: 22: CCP1IE=1;
  3435  0043FA  849D               	bsf	3997,2,c	;volatile
  3436                           
  3437                           ;Pulses.c: 23: return freq;
  3438  0043FC  C064  F060         	movff	le_pulsos@freq,?_le_pulsos
  3439  004400  C065  F061         	movff	le_pulsos@freq+1,?_le_pulsos+1
  3440  004404  C066  F062         	movff	le_pulsos@freq+2,?_le_pulsos+2
  3441  004408  C067  F063         	movff	le_pulsos@freq+3,?_le_pulsos+3
  3442  00440C  0012               	return		;funcret
  3443  00440E                     __end_of_le_pulsos:
  3444                           	opt stack 0
  3445                           tblptru	equ	0xFF8
  3446                           tblptrh	equ	0xFF7
  3447                           tblptrl	equ	0xFF6
  3448                           tablat	equ	0xFF5
  3449                           intcon	equ	0xFF2
  3450                           postinc0	equ	0xFEE
  3451                           wreg	equ	0xFE8
  3452                           postdec1	equ	0xFE5
  3453                           fsr1l	equ	0xFE1
  3454                           indf2	equ	0xFDF
  3455                           fsr2h	equ	0xFDA
  3456                           fsr2l	equ	0xFD9
  3457                           status	equ	0xFD8
  3458                           
  3459 ;; *************** function _le_AD *****************
  3460 ;; Defined at:
  3461 ;;		line 21 in file "AD.c"
  3462 ;; Parameters:    Size  Location     Type
  3463 ;;		None
  3464 ;; Auto vars:     Size  Location     Type
  3465 ;;  i               2   75[BANK0 ] int 
  3466 ;;  corrente        3   70[BANK0 ] float 
  3467 ;;  leitura         2   77[BANK0 ] unsigned int 
  3468 ;;  leituraAux      2   73[BANK0 ] unsigned int 
  3469 ;; Return value:  Size  Location     Type
  3470 ;;                  3   62[BANK0 ] float 
  3471 ;; Registers used:
  3472 ;;		wreg, status,2, status,0, cstack
  3473 ;; Tracked objects:
  3474 ;;		On entry : 0/0
  3475 ;;		On exit  : 0/0
  3476 ;;		Unchanged: 0/0
  3477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3478 ;;      Params:         0       3       0       0       0       0       0       0       0
  3479 ;;      Locals:         0      12       0       0       0       0       0       0       0
  3480 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3481 ;;      Totals:         0      17       0       0       0       0       0       0       0
  3482 ;;Total ram usage:       17 bytes
  3483 ;; Hardware stack levels used:    1
  3484 ;; Hardware stack levels required when called:   12
  3485 ;; This function calls:
  3486 ;;		___awtoft
  3487 ;;		___ftadd
  3488 ;;		___ftdiv
  3489 ;;		___ftmul
  3490 ;; This function is called by:
  3491 ;;		_main
  3492 ;; This function uses a non-reentrant model
  3493 ;;
  3494                           
  3495                           	psect	text7
  3496  0024DA                     __ptext7:
  3497                           	opt stack 0
  3498  0024DA                     _le_AD:
  3499                           	opt stack 18
  3500                           
  3501                           ;AD.c: 30: float corrente;
  3502                           ;AD.c: 32: uint16_t leituraAux;
  3503                           ;AD.c: 33: uint16_t leitura=0;
  3504                           
  3505                           ;incstack = 0
  3506  0024DA  0E00               	movlw	0
  3507  0024DC  0100               	movlb	0	; () banked
  3508  0024DE  6FAE               	movwf	(le_AD@leitura+1)& (0+255),b
  3509  0024E0  0E00               	movlw	0
  3510  0024E2  6FAD               	movwf	le_AD@leitura& (0+255),b
  3511                           
  3512                           ;AD.c: 35: for (int i=0;i<32;i++)
  3513  0024E4  0E00               	movlw	0
  3514  0024E6  6FAC               	movwf	(le_AD@i+1)& (0+255),b
  3515  0024E8  0E00               	movlw	0
  3516  0024EA  6FAB               	movwf	le_AD@i& (0+255),b
  3517  0024EC                     l8569:
  3518                           
  3519                           ; BSR set to: 0
  3520  0024EC  BFAC               	btfsc	(le_AD@i+1)& (0+255),7,b
  3521  0024EE  D006               	goto	l1499
  3522  0024F0  51AC               	movf	(le_AD@i+1)& (0+255),w,b
  3523  0024F2  E119               	bnz	l8581
  3524  0024F4  0E20               	movlw	32
  3525  0024F6  5DAB               	subwf	le_AD@i& (0+255),w,b
  3526  0024F8  B0D8               	btfsc	status,0,c
  3527  0024FA  D015               	goto	u8200
  3528  0024FC                     l1499:
  3529                           
  3530                           ; BSR set to: 0
  3531                           ;AD.c: 36: {
  3532                           ;AD.c: 37: GO_DONE=1;
  3533  0024FC  82C2               	bsf	4034,1,c	;volatile
  3534                           
  3535                           ;AD.c: 38: __nop();
  3536  0024FE  F000               	nop	
  3537  002500  B2C2               	btfsc	4034,1,c	;volatile
  3538  002502  D7FE               	goto	l1502
  3539                           
  3540                           ;AD.c: 42: leituraAux=ADRESH;
  3541  002504  CFC4 F0A9          	movff	4036,le_AD@leituraAux	;volatile
  3542  002508  0100               	movlb	0	; () banked
  3543  00250A  6BAA               	clrf	(le_AD@leituraAux+1)& (0+255),b
  3544                           
  3545                           ; BSR set to: 0
  3546                           ;AD.c: 43: leituraAux=(leituraAux <<8) | ADRESL;
  3547  00250C  51A9               	movf	le_AD@leituraAux& (0+255),w,b
  3548  00250E  6FA1               	movwf	??_le_AD& (0+255),b
  3549  002510  50C3               	movf	4035,w,c	;volatile
  3550  002512  6FA9               	movwf	le_AD@leituraAux& (0+255),b
  3551  002514  C0A1  F0AA         	movff	??_le_AD,le_AD@leituraAux+1
  3552                           
  3553                           ; BSR set to: 0
  3554                           ;AD.c: 44: leitura+=leituraAux;
  3555  002518  51A9               	movf	le_AD@leituraAux& (0+255),w,b
  3556  00251A  27AD               	addwf	le_AD@leitura& (0+255),f,b
  3557  00251C  51AA               	movf	(le_AD@leituraAux+1)& (0+255),w,b
  3558  00251E  23AE               	addwfc	(le_AD@leitura+1)& (0+255),f,b
  3559                           
  3560                           ; BSR set to: 0
  3561  002520  4BAB               	infsnz	le_AD@i& (0+255),f,b
  3562  002522  2BAC               	incf	(le_AD@i+1)& (0+255),f,b
  3563  002524  D7E3               	goto	l8569
  3564  002526                     u8200:
  3565  002526                     l8581:
  3566                           
  3567                           ; BSR set to: 0
  3568                           ;AD.c: 46: }
  3569                           ;AD.c: 48: leitura>>=5;
  3570  002526  0E05               	movlw	5
  3571  002528  6FA1               	movwf	??_le_AD& (0+255),b
  3572  00252A                     u8215:
  3573  00252A  90D8               	bcf	status,0,c
  3574  00252C  33AE               	rrcf	(le_AD@leitura+1)& (0+255),f,b
  3575  00252E  33AD               	rrcf	le_AD@leitura& (0+255),f,b
  3576  002530  2FA1               	decfsz	??_le_AD& (0+255),f,b
  3577  002532  D7FB               	goto	u8215
  3578                           
  3579                           ;AD.c: 50: if (leitura==0)
  3580  002534  51AD               	movf	le_AD@leitura& (0+255),w,b
  3581  002536  11AE               	iorwf	(le_AD@leitura+1)& (0+255),w,b
  3582  002538  A4D8               	btfss	status,2,c
  3583  00253A  D007               	goto	l1504
  3584                           
  3585                           ; BSR set to: 0
  3586                           ;AD.c: 51: corrente=0;
  3587  00253C  0E00               	movlw	0
  3588  00253E  6FA6               	movwf	le_AD@corrente& (0+255),b
  3589  002540  0E00               	movlw	0
  3590  002542  6FA7               	movwf	(le_AD@corrente+1)& (0+255),b
  3591  002544  0E00               	movlw	0
  3592  002546  6FA8               	movwf	(le_AD@corrente+2)& (0+255),b
  3593  002548  D04B               	goto	l1505
  3594  00254A                     l1504:
  3595                           
  3596                           ; BSR set to: 0
  3597                           ;AD.c: 52: else
  3598                           ;AD.c: 53: corrente=((int16_t) leitura-195.0)*16.0/784.0+4.0;
  3599                           
  3600                           ; BSR set to: 0
  3601  00254A  0E00               	movlw	0
  3602  00254C  6F92               	movwf	___ftdiv@f2& (0+255),b
  3603  00254E  0E44               	movlw	68
  3604  002550  6F93               	movwf	(___ftdiv@f2+1)& (0+255),b
  3605  002552  0E44               	movlw	68
  3606  002554  6F94               	movwf	(___ftdiv@f2+2)& (0+255),b
  3607  002556  0E00               	movlw	0
  3608  002558  6F83               	movwf	___ftmul@f2& (0+255),b
  3609  00255A  0E80               	movlw	128
  3610  00255C  6F84               	movwf	(___ftmul@f2+1)& (0+255),b
  3611  00255E  0E41               	movlw	65
  3612  002560  6F85               	movwf	(___ftmul@f2+2)& (0+255),b
  3613  002562  0E00               	movlw	0
  3614  002564  6F77               	movwf	___ftadd@f2& (0+255),b
  3615  002566  0E43               	movlw	67
  3616  002568  6F78               	movwf	(___ftadd@f2+1)& (0+255),b
  3617  00256A  0EC3               	movlw	195
  3618  00256C  6F79               	movwf	(___ftadd@f2+2)& (0+255),b
  3619  00256E  C0AD  F068         	movff	le_AD@leitura,___awtoft@c
  3620  002572  C0AE  F069         	movff	le_AD@leitura+1,___awtoft@c+1
  3621  002576  ECE8  F020         	call	___awtoft	;wreg free
  3622  00257A  C068  F074         	movff	?___awtoft,___ftadd@f1
  3623  00257E  C069  F075         	movff	?___awtoft+1,___ftadd@f1+1
  3624  002582  C06A  F076         	movff	?___awtoft+2,___ftadd@f1+2
  3625  002586  ECD8  F00C         	call	___ftadd	;wreg free
  3626  00258A  C074  F080         	movff	?___ftadd,___ftmul@f1
  3627  00258E  C075  F081         	movff	?___ftadd+1,___ftmul@f1+1
  3628  002592  C076  F082         	movff	?___ftadd+2,___ftmul@f1+2
  3629  002596  EC00  F016         	call	___ftmul	;wreg free
  3630  00259A  C080  F08F         	movff	?___ftmul,___ftdiv@f1
  3631  00259E  C081  F090         	movff	?___ftmul+1,___ftdiv@f1+1
  3632  0025A2  C082  F091         	movff	?___ftmul+2,___ftdiv@f1+2
  3633  0025A6  ECF6  F016         	call	___ftdiv	;wreg free
  3634  0025AA  C08F  F0A3         	movff	?___ftdiv,_le_AD$5266
  3635  0025AE  C090  F0A4         	movff	?___ftdiv+1,_le_AD$5266+1
  3636  0025B2  C091  F0A5         	movff	?___ftdiv+2,_le_AD$5266+2
  3637                           
  3638                           ;AD.c: 52: else
  3639                           ;AD.c: 53: corrente=((int16_t) leitura-195.0)*16.0/784.0+4.0;
  3640  0025B6  C0A3  F074         	movff	_le_AD$5266,___ftadd@f1
  3641  0025BA  C0A4  F075         	movff	_le_AD$5266+1,___ftadd@f1+1
  3642  0025BE  C0A5  F076         	movff	_le_AD$5266+2,___ftadd@f1+2
  3643  0025C2  0E00               	movlw	0
  3644  0025C4  0100               	movlb	0	; () banked
  3645  0025C6  6F77               	movwf	___ftadd@f2& (0+255),b
  3646  0025C8  0E80               	movlw	128
  3647  0025CA  6F78               	movwf	(___ftadd@f2+1)& (0+255),b
  3648  0025CC  0E40               	movlw	64
  3649  0025CE  6F79               	movwf	(___ftadd@f2+2)& (0+255),b
  3650  0025D0  ECD8  F00C         	call	___ftadd	;wreg free
  3651  0025D4  C074  F0A6         	movff	?___ftadd,le_AD@corrente
  3652  0025D8  C075  F0A7         	movff	?___ftadd+1,le_AD@corrente+1
  3653  0025DC  C076  F0A8         	movff	?___ftadd+2,le_AD@corrente+2
  3654  0025E0                     l1505:
  3655                           
  3656                           ;AD.c: 55: return corrente;
  3657  0025E0  C0A6  F09E         	movff	le_AD@corrente,?_le_AD
  3658  0025E4  C0A7  F09F         	movff	le_AD@corrente+1,?_le_AD+1
  3659  0025E8  C0A8  F0A0         	movff	le_AD@corrente+2,?_le_AD+2
  3660  0025EC  0012               	return	
  3661  0025EE                     __end_of_le_AD:
  3662                           	opt stack 0
  3663                           tblptru	equ	0xFF8
  3664                           tblptrh	equ	0xFF7
  3665                           tblptrl	equ	0xFF6
  3666                           tablat	equ	0xFF5
  3667                           intcon	equ	0xFF2
  3668                           postinc0	equ	0xFEE
  3669                           wreg	equ	0xFE8
  3670                           postdec1	equ	0xFE5
  3671                           fsr1l	equ	0xFE1
  3672                           indf2	equ	0xFDF
  3673                           fsr2h	equ	0xFDA
  3674                           fsr2l	equ	0xFD9
  3675                           status	equ	0xFD8
  3676                           
  3677 ;; *************** function ___ftdiv *****************
  3678 ;; Defined at:
  3679 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftdiv.c"
  3680 ;; Parameters:    Size  Location     Type
  3681 ;;  f1              3   47[BANK0 ] float 
  3682 ;;  f2              3   50[BANK0 ] float 
  3683 ;; Auto vars:     Size  Location     Type
  3684 ;;  f3              3   57[BANK0 ] float 
  3685 ;;  sign            1   61[BANK0 ] unsigned char 
  3686 ;;  exp             1   60[BANK0 ] unsigned char 
  3687 ;;  cntr            1   56[BANK0 ] unsigned char 
  3688 ;; Return value:  Size  Location     Type
  3689 ;;                  3   47[BANK0 ] float 
  3690 ;; Registers used:
  3691 ;;		wreg, status,2, status,0, cstack
  3692 ;; Tracked objects:
  3693 ;;		On entry : 0/0
  3694 ;;		On exit  : 0/0
  3695 ;;		Unchanged: 0/0
  3696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3697 ;;      Params:         0       6       0       0       0       0       0       0       0
  3698 ;;      Locals:         0       6       0       0       0       0       0       0       0
  3699 ;;      Temps:          0       3       0       0       0       0       0       0       0
  3700 ;;      Totals:         0      15       0       0       0       0       0       0       0
  3701 ;;Total ram usage:       15 bytes
  3702 ;; Hardware stack levels used:    1
  3703 ;; Hardware stack levels required when called:   11
  3704 ;; This function calls:
  3705 ;;		___ftpack
  3706 ;; This function is called by:
  3707 ;;		_le_AD
  3708 ;; This function uses a non-reentrant model
  3709 ;;
  3710                           
  3711                           	psect	text8
  3712  002DEC                     __ptext8:
  3713                           	opt stack 0
  3714  002DEC                     ___ftdiv:
  3715                           	opt stack 18
  3716                           
  3717                           ;incstack = 0
  3718  002DEC  C091  F095         	movff	___ftdiv@f1+2,??___ftdiv
  3719  002DF0  0100               	movlb	0	; () banked
  3720  002DF2  6B96               	clrf	(??___ftdiv+1)& (0+255),b
  3721  002DF4  6B97               	clrf	(??___ftdiv+2)& (0+255),b
  3722  002DF6  3590               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  3723  002DF8  3795               	rlcf	??___ftdiv& (0+255),f,b
  3724  002DFA  E301               	bnc	u7561
  3725  002DFC  8196               	bsf	(??___ftdiv+1)& (0+255),0,b
  3726  002DFE                     u7561:
  3727  002DFE  5195               	movf	??___ftdiv& (0+255),w,b
  3728  002E00  6F9C               	movwf	___ftdiv@exp& (0+255),b
  3729  002E02  519C               	movf	___ftdiv@exp& (0+255),w,b
  3730  002E04  A4D8               	btfss	status,2,c
  3731  002E06  D007               	goto	l2212
  3732                           
  3733                           ; BSR set to: 0
  3734  002E08  0E00               	movlw	0
  3735  002E0A  6F8F               	movwf	?___ftdiv& (0+255),b
  3736  002E0C  0E00               	movlw	0
  3737  002E0E  6F90               	movwf	(?___ftdiv+1)& (0+255),b
  3738  002E10  0E00               	movlw	0
  3739  002E12  6F91               	movwf	(?___ftdiv+2)& (0+255),b
  3740                           
  3741                           ; BSR set to: 0
  3742  002E14  0012               	return	
  3743  002E16                     l2212:
  3744                           
  3745                           ; BSR set to: 0
  3746                           
  3747                           ; BSR set to: 0
  3748  002E16  C094  F095         	movff	___ftdiv@f2+2,??___ftdiv
  3749  002E1A  6B96               	clrf	(??___ftdiv+1)& (0+255),b
  3750  002E1C  6B97               	clrf	(??___ftdiv+2)& (0+255),b
  3751  002E1E  3593               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  3752  002E20  3795               	rlcf	??___ftdiv& (0+255),f,b
  3753  002E22  E301               	bnc	u7581
  3754  002E24  8196               	bsf	(??___ftdiv+1)& (0+255),0,b
  3755  002E26                     u7581:
  3756  002E26  5195               	movf	??___ftdiv& (0+255),w,b
  3757  002E28  6F9D               	movwf	___ftdiv@sign& (0+255),b
  3758  002E2A  519D               	movf	___ftdiv@sign& (0+255),w,b
  3759  002E2C  A4D8               	btfss	status,2,c
  3760  002E2E  D007               	goto	l2214
  3761                           
  3762                           ; BSR set to: 0
  3763  002E30  0E00               	movlw	0
  3764  002E32  6F8F               	movwf	?___ftdiv& (0+255),b
  3765  002E34  0E00               	movlw	0
  3766  002E36  6F90               	movwf	(?___ftdiv+1)& (0+255),b
  3767  002E38  0E00               	movlw	0
  3768  002E3A  6F91               	movwf	(?___ftdiv+2)& (0+255),b
  3769                           
  3770                           ; BSR set to: 0
  3771  002E3C  0012               	return	
  3772  002E3E                     l2214:
  3773                           
  3774                           ; BSR set to: 0
  3775                           
  3776                           ; BSR set to: 0
  3777  002E3E  0E00               	movlw	0
  3778  002E40  6F99               	movwf	___ftdiv@f3& (0+255),b
  3779  002E42  0E00               	movlw	0
  3780  002E44  6F9A               	movwf	(___ftdiv@f3+1)& (0+255),b
  3781  002E46  0E00               	movlw	0
  3782  002E48  6F9B               	movwf	(___ftdiv@f3+2)& (0+255),b
  3783                           
  3784                           ; BSR set to: 0
  3785  002E4A  519D               	movf	___ftdiv@sign& (0+255),w,b
  3786  002E4C  0F89               	addlw	137
  3787  002E4E  5F9C               	subwf	___ftdiv@exp& (0+255),f,b
  3788                           
  3789                           ; BSR set to: 0
  3790  002E50  C091  F09D         	movff	___ftdiv@f1+2,___ftdiv@sign
  3791                           
  3792                           ; BSR set to: 0
  3793  002E54  5194               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3794  002E56  1B9D               	xorwf	___ftdiv@sign& (0+255),f,b
  3795                           
  3796                           ; BSR set to: 0
  3797  002E58  0E80               	movlw	128
  3798  002E5A  179D               	andwf	___ftdiv@sign& (0+255),f,b
  3799                           
  3800                           ; BSR set to: 0
  3801  002E5C  8F90               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  3802                           
  3803                           ; BSR set to: 0
  3804  002E5E  0EFF               	movlw	255
  3805  002E60  178F               	andwf	___ftdiv@f1& (0+255),f,b
  3806  002E62  0EFF               	movlw	255
  3807  002E64  1790               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  3808  002E66  0E00               	movlw	0
  3809  002E68  1791               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  3810                           
  3811                           ; BSR set to: 0
  3812  002E6A  8F93               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  3813                           
  3814                           ; BSR set to: 0
  3815  002E6C  0EFF               	movlw	255
  3816  002E6E  1792               	andwf	___ftdiv@f2& (0+255),f,b
  3817  002E70  0EFF               	movlw	255
  3818  002E72  1793               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  3819  002E74  0E00               	movlw	0
  3820  002E76  1794               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  3821                           
  3822                           ; BSR set to: 0
  3823  002E78  0E18               	movlw	24
  3824  002E7A  6F98               	movwf	___ftdiv@cntr& (0+255),b
  3825  002E7C                     
  3826                           ; BSR set to: 0
  3827                           
  3828                           ; BSR set to: 0
  3829  002E7C  90D8               	bcf	status,0,c
  3830  002E7E  3799               	rlcf	___ftdiv@f3& (0+255),f,b
  3831  002E80  379A               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  3832  002E82  379B               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  3833                           
  3834                           ; BSR set to: 0
  3835  002E84  5192               	movf	___ftdiv@f2& (0+255),w,b
  3836  002E86  5D8F               	subwf	___ftdiv@f1& (0+255),w,b
  3837  002E88  5193               	movf	(___ftdiv@f2+1)& (0+255),w,b
  3838  002E8A  5990               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  3839  002E8C  5194               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3840  002E8E  5991               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  3841  002E90  A0D8               	btfss	status,0,c
  3842  002E92  D007               	goto	l2216
  3843                           
  3844                           ; BSR set to: 0
  3845  002E94  5192               	movf	___ftdiv@f2& (0+255),w,b
  3846  002E96  5F8F               	subwf	___ftdiv@f1& (0+255),f,b
  3847  002E98  5193               	movf	(___ftdiv@f2+1)& (0+255),w,b
  3848  002E9A  5B90               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  3849  002E9C  5194               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3850  002E9E  5B91               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  3851                           
  3852                           ; BSR set to: 0
  3853  002EA0  8199               	bsf	___ftdiv@f3& (0+255),0,b
  3854  002EA2                     l2216:
  3855                           
  3856                           ; BSR set to: 0
  3857  002EA2  90D8               	bcf	status,0,c
  3858  002EA4  378F               	rlcf	___ftdiv@f1& (0+255),f,b
  3859  002EA6  3790               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  3860  002EA8  3791               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  3861                           
  3862                           ; BSR set to: 0
  3863  002EAA  2F98               	decfsz	___ftdiv@cntr& (0+255),f,b
  3864  002EAC  D7E7               	goto	l2215
  3865                           
  3866                           ; BSR set to: 0
  3867                           
  3868                           ; BSR set to: 0
  3869  002EAE  C099  F060         	movff	___ftdiv@f3,___ftpack@arg
  3870  002EB2  C09A  F061         	movff	___ftdiv@f3+1,___ftpack@arg+1
  3871  002EB6  C09B  F062         	movff	___ftdiv@f3+2,___ftpack@arg+2
  3872  002EBA  C09C  F063         	movff	___ftdiv@exp,___ftpack@exp
  3873  002EBE  C09D  F064         	movff	___ftdiv@sign,___ftpack@sign
  3874  002EC2  EC73  F019         	call	___ftpack	;wreg free
  3875  002EC6  C060  F08F         	movff	?___ftpack,?___ftdiv
  3876  002ECA  C061  F090         	movff	?___ftpack+1,?___ftdiv+1
  3877  002ECE  C062  F091         	movff	?___ftpack+2,?___ftdiv+2
  3878  002ED2  0012               	return	
  3879  002ED4                     __end_of___ftdiv:
  3880                           	opt stack 0
  3881                           tblptru	equ	0xFF8
  3882                           tblptrh	equ	0xFF7
  3883                           tblptrl	equ	0xFF6
  3884                           tablat	equ	0xFF5
  3885                           intcon	equ	0xFF2
  3886                           postinc0	equ	0xFEE
  3887                           wreg	equ	0xFE8
  3888                           postdec1	equ	0xFE5
  3889                           fsr1l	equ	0xFE1
  3890                           indf2	equ	0xFDF
  3891                           fsr2h	equ	0xFDA
  3892                           fsr2l	equ	0xFD9
  3893                           status	equ	0xFD8
  3894                           
  3895 ;; *************** function ___awtoft *****************
  3896 ;; Defined at:
  3897 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\awtoft.c"
  3898 ;; Parameters:    Size  Location     Type
  3899 ;;  c               2    8[BANK0 ] int 
  3900 ;; Auto vars:     Size  Location     Type
  3901 ;;  sign            1   11[BANK0 ] unsigned char 
  3902 ;; Return value:  Size  Location     Type
  3903 ;;                  3    8[BANK0 ] float 
  3904 ;; Registers used:
  3905 ;;		wreg, status,2, status,0, cstack
  3906 ;; Tracked objects:
  3907 ;;		On entry : 0/0
  3908 ;;		On exit  : 0/0
  3909 ;;		Unchanged: 0/0
  3910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3911 ;;      Params:         0       3       0       0       0       0       0       0       0
  3912 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3913 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3914 ;;      Totals:         0       4       0       0       0       0       0       0       0
  3915 ;;Total ram usage:        4 bytes
  3916 ;; Hardware stack levels used:    1
  3917 ;; Hardware stack levels required when called:   11
  3918 ;; This function calls:
  3919 ;;		___ftpack
  3920 ;; This function is called by:
  3921 ;;		_le_AD
  3922 ;; This function uses a non-reentrant model
  3923 ;;
  3924                           
  3925                           	psect	text9
  3926  0041D0                     __ptext9:
  3927                           	opt stack 0
  3928  0041D0                     ___awtoft:
  3929                           	opt stack 18
  3930                           
  3931                           ;incstack = 0
  3932  0041D0  0E00               	movlw	0
  3933  0041D2  0100               	movlb	0	; () banked
  3934  0041D4  6F6B               	movwf	___awtoft@sign& (0+255),b
  3935                           
  3936                           ; BSR set to: 0
  3937  0041D6  AF69               	btfss	(___awtoft@c+1)& (0+255),7,b
  3938  0041D8  D006               	goto	l2112
  3939                           
  3940                           ; BSR set to: 0
  3941  0041DA  6D68               	negf	___awtoft@c& (0+255),b
  3942  0041DC  1F69               	comf	(___awtoft@c+1)& (0+255),f,b
  3943  0041DE  B0D8               	btfsc	status,0,c
  3944  0041E0  2B69               	incf	(___awtoft@c+1)& (0+255),f,b
  3945                           
  3946                           ; BSR set to: 0
  3947  0041E2  0E01               	movlw	1
  3948  0041E4  6F6B               	movwf	___awtoft@sign& (0+255),b
  3949  0041E6                     l2112:
  3950                           
  3951                           ; BSR set to: 0
  3952                           
  3953                           ; BSR set to: 0
  3954  0041E6  C068  F060         	movff	___awtoft@c,___ftpack@arg
  3955  0041EA  C069  F061         	movff	___awtoft@c+1,___ftpack@arg+1
  3956  0041EE  6B62               	clrf	(___ftpack@arg+2)& (0+255),b
  3957  0041F0  0E8E               	movlw	142
  3958  0041F2  6F63               	movwf	___ftpack@exp& (0+255),b
  3959  0041F4  C06B  F064         	movff	___awtoft@sign,___ftpack@sign
  3960  0041F8  EC73  F019         	call	___ftpack	;wreg free
  3961  0041FC  C060  F068         	movff	?___ftpack,?___awtoft
  3962  004200  C061  F069         	movff	?___ftpack+1,?___awtoft+1
  3963  004204  C062  F06A         	movff	?___ftpack+2,?___awtoft+2
  3964  004208  0012               	return	
  3965  00420A                     __end_of___awtoft:
  3966                           	opt stack 0
  3967                           tblptru	equ	0xFF8
  3968                           tblptrh	equ	0xFF7
  3969                           tblptrl	equ	0xFF6
  3970                           tablat	equ	0xFF5
  3971                           intcon	equ	0xFF2
  3972                           postinc0	equ	0xFEE
  3973                           wreg	equ	0xFE8
  3974                           postdec1	equ	0xFE5
  3975                           fsr1l	equ	0xFE1
  3976                           indf2	equ	0xFDF
  3977                           fsr2h	equ	0xFDA
  3978                           fsr2l	equ	0xFD9
  3979                           status	equ	0xFD8
  3980                           
  3981 ;; *************** function _delay *****************
  3982 ;; Defined at:
  3983 ;;		line 34 in file "UT.c"
  3984 ;; Parameters:    Size  Location     Type
  3985 ;;  time            4   13[BANK0 ] unsigned long 
  3986 ;; Auto vars:     Size  Location     Type
  3987 ;;  to              4   25[BANK0 ] unsigned long 
  3988 ;; Return value:  Size  Location     Type
  3989 ;;                  1    wreg      void 
  3990 ;; Registers used:
  3991 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3992 ;; Tracked objects:
  3993 ;;		On entry : 0/0
  3994 ;;		On exit  : 0/0
  3995 ;;		Unchanged: 0/0
  3996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3997 ;;      Params:         0       4       0       0       0       0       0       0       0
  3998 ;;      Locals:         0       4       0       0       0       0       0       0       0
  3999 ;;      Temps:          0       8       0       0       0       0       0       0       0
  4000 ;;      Totals:         0      16       0       0       0       0       0       0       0
  4001 ;;Total ram usage:       16 bytes
  4002 ;; Hardware stack levels used:    1
  4003 ;; Hardware stack levels required when called:   13
  4004 ;; This function calls:
  4005 ;;		_millis
  4006 ;;		_verificaUSB
  4007 ;; This function is called by:
  4008 ;;		_main
  4009 ;; This function uses a non-reentrant model
  4010 ;;
  4011                           
  4012                           	psect	text10
  4013  003BD6                     __ptext10:
  4014                           	opt stack 0
  4015  003BD6                     _delay:
  4016                           	opt stack 17
  4017                           
  4018                           ;UT.c: 36: uint32_t to=millis();
  4019                           
  4020                           ;incstack = 0
  4021  003BD6  EC2D  F022         	call	_millis	;wreg free
  4022  003BDA  C060  F079         	movff	?_millis,delay@to
  4023  003BDE  C061  F07A         	movff	?_millis+1,delay@to+1
  4024  003BE2  C062  F07B         	movff	?_millis+2,delay@to+2
  4025  003BE6  C063  F07C         	movff	?_millis+3,delay@to+3
  4026                           
  4027                           ;UT.c: 37: while ((millis()-to)<time)
  4028  003BEA  D002               	goto	l850
  4029  003BEC                     
  4030                           ;UT.c: 38: {
  4031                           ;UT.c: 39: verificaUSB();
  4032  003BEC  EC56  F021         	call	_verificaUSB	;wreg free
  4033  003BF0                     l850:
  4034  003BF0  C079  F071         	movff	delay@to,??_delay
  4035  003BF4  C07A  F072         	movff	delay@to+1,??_delay+1
  4036  003BF8  C07B  F073         	movff	delay@to+2,??_delay+2
  4037  003BFC  C07C  F074         	movff	delay@to+3,??_delay+3
  4038  003C00  0100               	movlb	0	; () banked
  4039  003C02  1F71               	comf	??_delay& (0+255),f,b
  4040  003C04  1F72               	comf	(??_delay+1)& (0+255),f,b
  4041  003C06  1F73               	comf	(??_delay+2)& (0+255),f,b
  4042  003C08  1F74               	comf	(??_delay+3)& (0+255),f,b
  4043  003C0A  2B71               	incf	??_delay& (0+255),f,b
  4044  003C0C  0E00               	movlw	0
  4045  003C0E  2372               	addwfc	(??_delay+1)& (0+255),f,b
  4046  003C10  2373               	addwfc	(??_delay+2)& (0+255),f,b
  4047  003C12  2374               	addwfc	(??_delay+3)& (0+255),f,b
  4048  003C14  EC2D  F022         	call	_millis	;wreg free
  4049  003C18  0100               	movlb	0	; () banked
  4050  003C1A  5171               	movf	??_delay& (0+255),w,b
  4051  003C1C  2560               	addwf	?_millis& (0+255),w,b
  4052  003C1E  6F75               	movwf	(??_delay+4)& (0+255),b
  4053  003C20  5172               	movf	(??_delay+1)& (0+255),w,b
  4054  003C22  2161               	addwfc	(?_millis+1)& (0+255),w,b
  4055  003C24  6F76               	movwf	(??_delay+5)& (0+255),b
  4056  003C26  5173               	movf	(??_delay+2)& (0+255),w,b
  4057  003C28  2162               	addwfc	(?_millis+2)& (0+255),w,b
  4058  003C2A  6F77               	movwf	(??_delay+6)& (0+255),b
  4059  003C2C  5174               	movf	(??_delay+3)& (0+255),w,b
  4060  003C2E  2163               	addwfc	(?_millis+3)& (0+255),w,b
  4061  003C30  6F78               	movwf	(??_delay+7)& (0+255),b
  4062  003C32  516D               	movf	delay@time& (0+255),w,b
  4063  003C34  5D75               	subwf	(??_delay+4)& (0+255),w,b
  4064  003C36  516E               	movf	(delay@time+1)& (0+255),w,b
  4065  003C38  5976               	subwfb	(??_delay+5)& (0+255),w,b
  4066  003C3A  516F               	movf	(delay@time+2)& (0+255),w,b
  4067  003C3C  5977               	subwfb	(??_delay+6)& (0+255),w,b
  4068  003C3E  5170               	movf	(delay@time+3)& (0+255),w,b
  4069  003C40  5978               	subwfb	(??_delay+7)& (0+255),w,b
  4070  003C42  B0D8               	btfsc	status,0,c
  4071  003C44  0012               	return	
  4072  003C46  D7D2               	goto	l851
  4073  003C48                     __end_of_delay:
  4074                           	opt stack 0
  4075                           tblptru	equ	0xFF8
  4076                           tblptrh	equ	0xFF7
  4077                           tblptrl	equ	0xFF6
  4078                           tablat	equ	0xFF5
  4079                           intcon	equ	0xFF2
  4080                           postinc0	equ	0xFEE
  4081                           wreg	equ	0xFE8
  4082                           postdec1	equ	0xFE5
  4083                           fsr1l	equ	0xFE1
  4084                           indf2	equ	0xFDF
  4085                           fsr2h	equ	0xFDA
  4086                           fsr2l	equ	0xFD9
  4087                           status	equ	0xFD8
  4088                           
  4089 ;; *************** function _verificaUSB *****************
  4090 ;; Defined at:
  4091 ;;		line 13 in file "UT.c"
  4092 ;; Parameters:    Size  Location     Type
  4093 ;;		None
  4094 ;; Auto vars:     Size  Location     Type
  4095 ;;		None
  4096 ;; Return value:  Size  Location     Type
  4097 ;;                  1    wreg      unsigned char 
  4098 ;; Registers used:
  4099 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4100 ;; Tracked objects:
  4101 ;;		On entry : 0/0
  4102 ;;		On exit  : 0/0
  4103 ;;		Unchanged: 0/0
  4104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4105 ;;      Params:         0       0       0       0       0       0       0       0       0
  4106 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4107 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4108 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4109 ;;Total ram usage:        0 bytes
  4110 ;; Hardware stack levels used:    1
  4111 ;; Hardware stack levels required when called:   12
  4112 ;; This function calls:
  4113 ;;		_CDCTxService
  4114 ;;		_USBDeviceAttach
  4115 ;;		_USBDeviceDetach
  4116 ;; This function is called by:
  4117 ;;		_delay
  4118 ;;		_main
  4119 ;; This function uses a non-reentrant model
  4120 ;;
  4121                           
  4122                           	psect	text11
  4123  0042AC                     __ptext11:
  4124                           	opt stack 0
  4125  0042AC                     _verificaUSB:
  4126                           	opt stack 18
  4127                           
  4128                           ;UT.c: 15: if ((USBDeviceState == DETACHED_STATE) && (PORTCbits.RC2 == 1))
  4129                           
  4130                           ; BSR set to: 0
  4131                           ;incstack = 0
  4132  0042AC  5058               	movf	_USBDeviceState,w,c	;volatile
  4133  0042AE  B4D8               	btfsc	status,2,c
  4134  0042B0  A482               	btfss	3970,2,c	;volatile
  4135  0042B2  D003               	goto	l841
  4136                           
  4137                           ;UT.c: 16: {
  4138                           ;UT.c: 17: USBDeviceAttach();
  4139  0042B4  EC22  F021         	call	_USBDeviceAttach	;wreg free
  4140                           
  4141                           ;UT.c: 18: }
  4142  0042B8  D006               	goto	l843
  4143  0042BA                     l841:
  4144                           
  4145                           ;UT.c: 19: else if ((USBDeviceState == ATTACHED_STATE) && (PORTCbits.RC2 != 1))
  4146  0042BA  0458               	decf	_USBDeviceState,w,c	;volatile
  4147  0042BC  B4D8               	btfsc	status,2,c
  4148  0042BE  B482               	btfsc	3970,2,c	;volatile
  4149  0042C0  D002               	goto	l843
  4150                           
  4151                           ;UT.c: 20: {
  4152                           ;UT.c: 21: USBDeviceDetach();
  4153  0042C2  ECA6  F022         	call	_USBDeviceDetach	;wreg free
  4154  0042C6                     l843:
  4155                           
  4156                           ;UT.c: 22: }
  4157                           ;UT.c: 24: if ((USBDeviceState < CONFIGURED_STATE) || (UCONbits.SUSPND))
  4158  0042C6  0E1F               	movlw	31
  4159  0042C8  6458               	cpfsgt	_USBDeviceState,c	;volatile
  4160  0042CA  D002               	goto	u6690
  4161  0042CC  A26D               	btfss	3949,1,c	;volatile
  4162  0042CE  D002               	goto	l844
  4163  0042D0                     u6690:
  4164                           
  4165                           ;UT.c: 25: {
  4166                           ;UT.c: 26: return 0;
  4167  0042D0  0E00               	movlw	0
  4168  0042D2  0012               	return	
  4169  0042D4                     l844:
  4170                           
  4171                           ;UT.c: 27: }
  4172                           ;UT.c: 29: CDCTxService();
  4173  0042D4  EC4E  F011         	call	_CDCTxService	;wreg free
  4174                           
  4175                           ;UT.c: 30: return 1;
  4176  0042D8  0E01               	movlw	1
  4177  0042DA  0012               	return	
  4178  0042DC                     __end_of_verificaUSB:
  4179                           	opt stack 0
  4180                           tblptru	equ	0xFF8
  4181                           tblptrh	equ	0xFF7
  4182                           tblptrl	equ	0xFF6
  4183                           tablat	equ	0xFF5
  4184                           intcon	equ	0xFF2
  4185                           postinc0	equ	0xFEE
  4186                           wreg	equ	0xFE8
  4187                           postdec1	equ	0xFE5
  4188                           fsr1l	equ	0xFE1
  4189                           indf2	equ	0xFDF
  4190                           fsr2h	equ	0xFDA
  4191                           fsr2l	equ	0xFD9
  4192                           status	equ	0xFD8
  4193                           
  4194 ;; *************** function _USBDeviceDetach *****************
  4195 ;; Defined at:
  4196 ;;		line 1247 in file "../../../../microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
  4197 ;; Parameters:    Size  Location     Type
  4198 ;;		None
  4199 ;; Auto vars:     Size  Location     Type
  4200 ;;		None
  4201 ;; Return value:  Size  Location     Type
  4202 ;;                  1    wreg      void 
  4203 ;; Registers used:
  4204 ;;		wreg, status,2
  4205 ;; Tracked objects:
  4206 ;;		On entry : 0/0
  4207 ;;		On exit  : 0/0
  4208 ;;		Unchanged: 0/0
  4209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4210 ;;      Params:         0       0       0       0       0       0       0       0       0
  4211 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4212 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4213 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4214 ;;Total ram usage:        0 bytes
  4215 ;; Hardware stack levels used:    1
  4216 ;; Hardware stack levels required when called:   10
  4217 ;; This function calls:
  4218 ;;		Nothing
  4219 ;; This function is called by:
  4220 ;;		_verificaUSB
  4221 ;; This function uses a non-reentrant model
  4222 ;;
  4223                           
  4224                           	psect	text12
  4225  00454C                     __ptext12:
  4226                           	opt stack 0
  4227  00454C                     _USBDeviceDetach:
  4228                           	opt stack 19
  4229                           
  4230                           ;usb_device.c: 1255: {
  4231                           ;usb_device.c: 1257: UCON = 0;
  4232                           
  4233                           ;incstack = 0
  4234  00454C  0E00               	movlw	0
  4235  00454E  6E6D               	movwf	3949,c	;volatile
  4236                           
  4237                           ;usb_device.c: 1260: UIE = 0;
  4238  004550  0E00               	movlw	0
  4239  004552  6E69               	movwf	3945,c	;volatile
  4240                           
  4241                           ;usb_device.c: 1263: USBDeviceState = DETACHED_STATE;
  4242  004554  0E00               	movlw	0
  4243  004556  6E58               	movwf	_USBDeviceState,c	;volatile
  4244  004558  0012               	return	
  4245  00455A                     __end_of_USBDeviceDetach:
  4246                           	opt stack 0
  4247                           tblptru	equ	0xFF8
  4248                           tblptrh	equ	0xFF7
  4249                           tblptrl	equ	0xFF6
  4250                           tablat	equ	0xFF5
  4251                           intcon	equ	0xFF2
  4252                           postinc0	equ	0xFEE
  4253                           wreg	equ	0xFE8
  4254                           postdec1	equ	0xFE5
  4255                           fsr1l	equ	0xFE1
  4256                           indf2	equ	0xFDF
  4257                           fsr2h	equ	0xFDA
  4258                           fsr2l	equ	0xFD9
  4259                           status	equ	0xFD8
  4260                           
  4261 ;; *************** function _USBDeviceAttach *****************
  4262 ;; Defined at:
  4263 ;;		line 1352 in file "../../../../microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
  4264 ;; Parameters:    Size  Location     Type
  4265 ;;		None
  4266 ;; Auto vars:     Size  Location     Type
  4267 ;;		None
  4268 ;; Return value:  Size  Location     Type
  4269 ;;                  1    wreg      void 
  4270 ;; Registers used:
  4271 ;;		wreg, status,2
  4272 ;; Tracked objects:
  4273 ;;		On entry : 0/0
  4274 ;;		On exit  : 0/0
  4275 ;;		Unchanged: 0/0
  4276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4277 ;;      Params:         0       0       0       0       0       0       0       0       0
  4278 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4279 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4280 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4281 ;;Total ram usage:        0 bytes
  4282 ;; Hardware stack levels used:    1
  4283 ;; Hardware stack levels required when called:   10
  4284 ;; This function calls:
  4285 ;;		Nothing
  4286 ;; This function is called by:
  4287 ;;		_verificaUSB
  4288 ;; This function uses a non-reentrant model
  4289 ;;
  4290                           
  4291                           	psect	text13
  4292  004244                     __ptext13:
  4293                           	opt stack 0
  4294  004244                     _USBDeviceAttach:
  4295                           	opt stack 19
  4296                           
  4297                           ;usb_device.c: 1355: if(USBDeviceState == DETACHED_STATE)
  4298                           
  4299                           ;incstack = 0
  4300  004244  5058               	movf	_USBDeviceState,w,c	;volatile
  4301  004246  A4D8               	btfss	status,2,c
  4302  004248  0012               	return	
  4303                           
  4304                           ;usb_device.c: 1356: {
  4305                           ;usb_device.c: 1357: if(PORTCbits.RC2 == 1)
  4306  00424A  A482               	btfss	3970,2,c	;volatile
  4307  00424C  0012               	return	
  4308                           
  4309                           ;usb_device.c: 1358: {
  4310                           ;usb_device.c: 1360: UCON = 0;
  4311  00424E  0E00               	movlw	0
  4312  004250  6E6D               	movwf	3949,c	;volatile
  4313                           
  4314                           ;usb_device.c: 1363: UIE = 0;
  4315  004252  0E00               	movlw	0
  4316  004254  6E69               	movwf	3945,c	;volatile
  4317                           
  4318                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
  4319  004256  0E16               	movlw	22
  4320  004258  6E6F               	movwf	3951,c	;volatile
  4321  00425A  0E9F               	movlw	159
  4322  00425C  6E6B               	movwf	3947,c	;volatile
  4323  00425E  0E7B               	movlw	123
  4324  004260  6E69               	movwf	3945,c	;volatile
  4325                           
  4326                           ;usb_device.c: 1369: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
  4327  004262  8ED0               	bsf	4048,7,c	;volatile
  4328  004264  8AA2               	bsf	4002,5,c	;volatile
  4329  004266  8AA0               	bsf	4000,5,c	;volatile
  4330  004268  8EF2               	bsf	intcon,7,c	;volatile
  4331                           
  4332                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  4333  00426A  D001               	goto	l368
  4334  00426C                     l369:
  4335  00426C  866D               	bsf	3949,3,c	;volatile
  4336  00426E                     l368:
  4337  00426E  A66D               	btfss	3949,3,c	;volatile
  4338  004270  D7FD               	goto	l369
  4339                           
  4340                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
  4341  004272  0E01               	movlw	1
  4342  004274  6E58               	movwf	_USBDeviceState,c	;volatile
  4343  004276  0012               	return	
  4344  004278                     __end_of_USBDeviceAttach:
  4345                           	opt stack 0
  4346                           tblptru	equ	0xFF8
  4347                           tblptrh	equ	0xFF7
  4348                           tblptrl	equ	0xFF6
  4349                           tablat	equ	0xFF5
  4350                           intcon	equ	0xFF2
  4351                           postinc0	equ	0xFEE
  4352                           wreg	equ	0xFE8
  4353                           postdec1	equ	0xFE5
  4354                           fsr1l	equ	0xFE1
  4355                           indf2	equ	0xFDF
  4356                           fsr2h	equ	0xFDA
  4357                           fsr2l	equ	0xFD9
  4358                           status	equ	0xFD8
  4359                           
  4360 ;; *************** function _CDCTxService *****************
  4361 ;; Defined at:
  4362 ;;		line 836 in file "../../../../microchip/mla/v2017_03_06/framework/usb/src/usb_device_cdc.c"
  4363 ;; Parameters:    Size  Location     Type
  4364 ;;		None
  4365 ;; Auto vars:     Size  Location     Type
  4366 ;;  byte_to_send    1   12[BANK0 ] unsigned char 
  4367 ;;  i               1   11[BANK0 ] unsigned char 
  4368 ;; Return value:  Size  Location     Type
  4369 ;;                  1    wreg      void 
  4370 ;; Registers used:
  4371 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4372 ;; Tracked objects:
  4373 ;;		On entry : 0/0
  4374 ;;		On exit  : 0/0
  4375 ;;		Unchanged: 0/0
  4376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4377 ;;      Params:         0       0       0       0       0       0       0       0       0
  4378 ;;      Locals:         0       2       0       0       0       0       0       0       0
  4379 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4380 ;;      Totals:         0       2       0       0       0       0       0       0       0
  4381 ;;Total ram usage:        2 bytes
  4382 ;; Hardware stack levels used:    1
  4383 ;; Hardware stack levels required when called:   11
  4384 ;; This function calls:
  4385 ;;		_USBTransferOnePacket
  4386 ;; This function is called by:
  4387 ;;		_verificaUSB
  4388 ;; This function uses a non-reentrant model
  4389 ;;
  4390                           
  4391                           	psect	text14
  4392  00229C                     __ptext14:
  4393                           	opt stack 0
  4394  00229C                     _CDCTxService:
  4395                           	opt stack 18
  4396                           
  4397                           ;usb_device_cdc.c: 838: uint8_t byte_to_send;
  4398                           ;usb_device_cdc.c: 839: uint8_t i;
  4399                           ;usb_device_cdc.c: 841: {PIE2bits.USBIE = 0;};
  4400                           
  4401                           ;incstack = 0
  4402  00229C  9AA0               	bcf	4000,5,c	;volatile
  4403                           
  4404                           ;usb_device_cdc.c: 843: {};
  4405                           ;usb_device_cdc.c: 845: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
  4406  00229E  0102               	movlb	2	; () banked
  4407  0022A0  5142               	movf	_CDCDataInHandle& (0+255),w,b
  4408  0022A2  1143               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
  4409  0022A4  B4D8               	btfsc	status,2,c
  4410  0022A6  D008               	goto	l717
  4411                           
  4412                           ; BSR set to: 2
  4413  0022A8  C242  FFD9         	movff	_CDCDataInHandle,fsr2l
  4414  0022AC  C243  FFDA         	movff	_CDCDataInHandle+1,fsr2h
  4415  0022B0  AEDF               	btfss	indf2,7,c
  4416  0022B2  D002               	goto	l717
  4417                           
  4418                           ; BSR set to: 2
  4419                           ;usb_device_cdc.c: 846: {
  4420                           ;usb_device_cdc.c: 847: {PIE2bits.USBIE = 1;};
  4421  0022B4  8AA0               	bsf	4000,5,c	;volatile
  4422                           
  4423                           ;usb_device_cdc.c: 848: return;
  4424  0022B6  0012               	return	
  4425  0022B8                     l717:
  4426                           
  4427                           ; BSR set to: 2
  4428                           ;usb_device_cdc.c: 849: }
  4429                           ;usb_device_cdc.c: 856: if(cdc_trf_state == 3)
  4430                           
  4431                           ; BSR set to: 2
  4432  0022B8  0E03               	movlw	3
  4433  0022BA  0100               	movlb	0	; () banked
  4434  0022BC  19FE               	xorwf	_cdc_trf_state& (0+255),w,b
  4435  0022BE  A4D8               	btfss	status,2,c
  4436  0022C0  D002               	goto	l719
  4437                           
  4438                           ; BSR set to: 0
  4439                           ;usb_device_cdc.c: 857: cdc_trf_state = 0;
  4440  0022C2  0E00               	movlw	0
  4441  0022C4  6FFE               	movwf	_cdc_trf_state& (0+255),b
  4442  0022C6                     l719:
  4443                           
  4444                           ; BSR set to: 0
  4445                           ;usb_device_cdc.c: 862: if(cdc_trf_state == 0)
  4446  0022C6  51FE               	movf	_cdc_trf_state& (0+255),w,b
  4447  0022C8  A4D8               	btfss	status,2,c
  4448  0022CA  D002               	goto	l720
  4449                           
  4450                           ; BSR set to: 0
  4451                           ;usb_device_cdc.c: 863: {
  4452                           ;usb_device_cdc.c: 864: {PIE2bits.USBIE = 1;};
  4453  0022CC  8AA0               	bsf	4000,5,c	;volatile
  4454                           
  4455                           ;usb_device_cdc.c: 865: return;
  4456  0022CE  0012               	return	
  4457  0022D0                     l720:
  4458                           
  4459                           ; BSR set to: 0
  4460                           ;usb_device_cdc.c: 866: }
  4461                           ;usb_device_cdc.c: 871: if(cdc_trf_state == 2)
  4462                           
  4463                           ; BSR set to: 0
  4464  0022D0  0E02               	movlw	2
  4465  0022D2  19FE               	xorwf	_cdc_trf_state& (0+255),w,b
  4466  0022D4  A4D8               	btfss	status,2,c
  4467  0022D6  D013               	goto	l721
  4468                           
  4469                           ; BSR set to: 0
  4470                           ;usb_device_cdc.c: 872: {
  4471                           ;usb_device_cdc.c: 873: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
  4472  0022D8  0E01               	movlw	1
  4473  0022DA  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
  4474  0022DC  0E00               	movlw	0
  4475  0022DE  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
  4476  0022E0  0E00               	movlw	0
  4477  0022E2  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  4478  0022E4  0E00               	movlw	0
  4479  0022E6  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
  4480  0022E8  0E02               	movlw	2
  4481  0022EA  EC7D  F013         	call	_USBTransferOnePacket
  4482  0022EE  C060  F242         	movff	?_USBTransferOnePacket,_CDCDataInHandle
  4483  0022F2  C061  F243         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
  4484                           
  4485                           ;usb_device_cdc.c: 875: cdc_trf_state = 3;
  4486  0022F6  0E03               	movlw	3
  4487  0022F8  0100               	movlb	0	; () banked
  4488  0022FA  6FFE               	movwf	_cdc_trf_state& (0+255),b
  4489                           
  4490                           ;usb_device_cdc.c: 876: }
  4491  0022FC  D060               	goto	l723
  4492  0022FE                     l721:
  4493                           
  4494                           ; BSR set to: 0
  4495                           ;usb_device_cdc.c: 877: else if(cdc_trf_state == 1)
  4496                           
  4497                           ; BSR set to: 0
  4498  0022FE  05FE               	decf	_cdc_trf_state& (0+255),w,b
  4499  002300  A4D8               	btfss	status,2,c
  4500  002302  D05D               	goto	l723
  4501                           
  4502                           ; BSR set to: 0
  4503                           ;usb_device_cdc.c: 878: {
  4504                           ;usb_device_cdc.c: 882: if(cdc_tx_len > sizeof(cdc_data_tx))
  4505  002304  0E40               	movlw	64
  4506  002306  65FD               	cpfsgt	_cdc_tx_len& (0+255),b
  4507  002308  D003               	goto	l724
  4508                           
  4509                           ; BSR set to: 0
  4510                           ;usb_device_cdc.c: 883: byte_to_send = sizeof(cdc_data_tx);
  4511  00230A  0E40               	movlw	64
  4512  00230C  6F6C               	movwf	CDCTxService@byte_to_send& (0+255),b
  4513  00230E  D002               	goto	l725
  4514  002310                     l724:
  4515                           
  4516                           ; BSR set to: 0
  4517                           ;usb_device_cdc.c: 884: else
  4518                           ;usb_device_cdc.c: 885: byte_to_send = cdc_tx_len;
  4519  002310  C0FD  F06C         	movff	_cdc_tx_len,CDCTxService@byte_to_send
  4520  002314                     l725:
  4521                           
  4522                           ; BSR set to: 0
  4523                           ;usb_device_cdc.c: 890: cdc_tx_len = cdc_tx_len - byte_to_send;
  4524                           
  4525                           ; BSR set to: 0
  4526  002314  516C               	movf	CDCTxService@byte_to_send& (0+255),w,b
  4527  002316  0800               	sublw	0
  4528  002318  25FD               	addwf	_cdc_tx_len& (0+255),w,b
  4529  00231A  6FFD               	movwf	_cdc_tx_len& (0+255),b
  4530                           
  4531                           ;usb_device_cdc.c: 892: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
  4532  00231C  0E00               	movlw	0
  4533  00231E  0102               	movlb	2	; () banked
  4534  002320  6F3C               	movwf	_pCDCDst& (0+255),b
  4535  002322  0E05               	movlw	5
  4536  002324  6F3D               	movwf	(_pCDCDst+1)& (0+255),b
  4537                           
  4538                           ; BSR set to: 2
  4539                           ;usb_device_cdc.c: 894: i = byte_to_send;
  4540  002326  C06C  F06B         	movff	CDCTxService@byte_to_send,CDCTxService@i
  4541                           
  4542                           ; BSR set to: 2
  4543                           ;usb_device_cdc.c: 895: if(cdc_mem_type == 0x00)
  4544  00232A  0101               	movlb	1	; () banked
  4545  00232C  51F4               	movf	_cdc_mem_type& (0+255),w,b
  4546  00232E  B4D8               	btfsc	status,2,c
  4547  002330  D012               	goto	l727
  4548  002332  D027               	goto	l731
  4549  002334                     
  4550                           ;usb_device_cdc.c: 898: {
  4551                           ;usb_device_cdc.c: 899: *pCDCDst.bRam = *pCDCSrc.bRom;
  4552                           
  4553                           ; BSR set to: 1
  4554  002334  C23F  FFD9         	movff	_pCDCSrc,fsr2l
  4555  002338  C240  FFDA         	movff	_pCDCSrc+1,fsr2h
  4556  00233C  C23C  FFE1         	movff	_pCDCDst,fsr1l
  4557  002340  C23D  FFE2         	movff	_pCDCDst+1,fsr1h
  4558  002344  CFDF FFE7          	movff	indf2,indf1
  4559                           
  4560                           ;usb_device_cdc.c: 900: pCDCDst.bRam++;
  4561  002348  0102               	movlb	2	; () banked
  4562  00234A  4B3C               	infsnz	_pCDCDst& (0+255),f,b
  4563  00234C  2B3D               	incf	(_pCDCDst+1)& (0+255),f,b
  4564                           
  4565                           ; BSR set to: 2
  4566                           ;usb_device_cdc.c: 901: pCDCSrc.bRom++;
  4567  00234E  4B3F               	infsnz	_pCDCSrc& (0+255),f,b
  4568  002350  2B40               	incf	(_pCDCSrc+1)& (0+255),f,b
  4569                           
  4570                           ; BSR set to: 2
  4571                           ;usb_device_cdc.c: 902: i--;
  4572  002352  0100               	movlb	0	; () banked
  4573  002354  076B               	decf	CDCTxService@i& (0+255),f,b
  4574  002356                     l727:
  4575                           
  4576                           ; BSR set to: 0
  4577  002356  0100               	movlb	0	; () banked
  4578  002358  516B               	movf	CDCTxService@i& (0+255),w,b
  4579  00235A  B4D8               	btfsc	status,2,c
  4580  00235C  D016               	goto	u6000
  4581  00235E  D7EA               	goto	l728
  4582  002360                     
  4583                           ; BSR set to: 0
  4584                           ;usb_device_cdc.c: 908: {
  4585                           ;usb_device_cdc.c: 909: *pCDCDst.bRam = *pCDCSrc.bRam;
  4586                           
  4587                           ; BSR set to: 0
  4588  002360  C23F  FFD9         	movff	_pCDCSrc,fsr2l
  4589  002364  C240  FFDA         	movff	_pCDCSrc+1,fsr2h
  4590  002368  C23C  FFE1         	movff	_pCDCDst,fsr1l
  4591  00236C  C23D  FFE2         	movff	_pCDCDst+1,fsr1h
  4592  002370  CFDF FFE7          	movff	indf2,indf1
  4593                           
  4594                           ; BSR set to: 0
  4595                           ;usb_device_cdc.c: 910: pCDCDst.bRam++;
  4596  002374  0102               	movlb	2	; () banked
  4597  002376  4B3C               	infsnz	_pCDCDst& (0+255),f,b
  4598  002378  2B3D               	incf	(_pCDCDst+1)& (0+255),f,b
  4599                           
  4600                           ; BSR set to: 2
  4601                           ;usb_device_cdc.c: 911: pCDCSrc.bRam++;
  4602  00237A  4B3F               	infsnz	_pCDCSrc& (0+255),f,b
  4603  00237C  2B40               	incf	(_pCDCSrc+1)& (0+255),f,b
  4604                           
  4605                           ; BSR set to: 2
  4606                           ;usb_device_cdc.c: 912: i--;
  4607  00237E  0100               	movlb	0	; () banked
  4608  002380  076B               	decf	CDCTxService@i& (0+255),f,b
  4609  002382                     l731:
  4610                           
  4611                           ; BSR set to: 0
  4612  002382  0100               	movlb	0	; () banked
  4613  002384  516B               	movf	CDCTxService@i& (0+255),w,b
  4614  002386  A4D8               	btfss	status,2,c
  4615  002388  D7EB               	goto	l732
  4616  00238A                     u6000:
  4617                           
  4618                           ; BSR set to: 0
  4619                           ;usb_device_cdc.c: 913: }
  4620                           ;usb_device_cdc.c: 914: }
  4621                           ;usb_device_cdc.c: 920: if(cdc_tx_len == 0)
  4622                           
  4623                           ; BSR set to: 0
  4624                           
  4625                           ; BSR set to: 0
  4626  00238A  51FD               	movf	_cdc_tx_len& (0+255),w,b
  4627  00238C  A4D8               	btfss	status,2,c
  4628  00238E  D008               	goto	l736
  4629                           
  4630                           ; BSR set to: 0
  4631                           ;usb_device_cdc.c: 921: {
  4632                           ;usb_device_cdc.c: 922: if(byte_to_send == 64)
  4633  002390  0E40               	movlw	64
  4634  002392  196C               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
  4635  002394  A4D8               	btfss	status,2,c
  4636  002396  D002               	goto	l735
  4637                           
  4638                           ; BSR set to: 0
  4639                           ;usb_device_cdc.c: 923: cdc_trf_state = 2;
  4640  002398  0E02               	movlw	2
  4641  00239A  D001               	goto	L1
  4642  00239C                     l735:
  4643                           
  4644                           ; BSR set to: 0
  4645                           ;usb_device_cdc.c: 924: else
  4646                           ;usb_device_cdc.c: 925: cdc_trf_state = 3;
  4647                           
  4648                           ; BSR set to: 0
  4649  00239C  0E03               	movlw	3
  4650  00239E                     L1:
  4651  00239E  6FFE               	movwf	_cdc_trf_state& (0+255),b
  4652  0023A0                     l736:
  4653                           
  4654                           ; BSR set to: 0
  4655                           ;usb_device_cdc.c: 926: }
  4656                           ;usb_device_cdc.c: 927: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
  4657                           
  4658                           ; BSR set to: 0
  4659                           
  4660                           ; BSR set to: 0
  4661  0023A0  0E01               	movlw	1
  4662  0023A2  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
  4663  0023A4  0E00               	movlw	0
  4664  0023A6  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
  4665  0023A8  0E05               	movlw	5
  4666  0023AA  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  4667  0023AC  C06C  F063         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
  4668  0023B0  0E02               	movlw	2
  4669  0023B2  EC7D  F013         	call	_USBTransferOnePacket
  4670  0023B6  C060  F242         	movff	?_USBTransferOnePacket,_CDCDataInHandle
  4671  0023BA  C061  F243         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
  4672  0023BE                     l723:
  4673                           
  4674                           ;usb_device_cdc.c: 929: }
  4675                           ;usb_device_cdc.c: 931: {PIE2bits.USBIE = 1;};
  4676  0023BE  8AA0               	bsf	4000,5,c	;volatile
  4677  0023C0  0012               	return		;funcret
  4678  0023C2                     __end_of_CDCTxService:
  4679                           	opt stack 0
  4680                           tblptru	equ	0xFF8
  4681                           tblptrh	equ	0xFF7
  4682                           tblptrl	equ	0xFF6
  4683                           tablat	equ	0xFF5
  4684                           intcon	equ	0xFF2
  4685                           postinc0	equ	0xFEE
  4686                           wreg	equ	0xFE8
  4687                           indf1	equ	0xFE7
  4688                           postdec1	equ	0xFE5
  4689                           fsr1h	equ	0xFE2
  4690                           fsr1l	equ	0xFE1
  4691                           indf2	equ	0xFDF
  4692                           fsr2h	equ	0xFDA
  4693                           fsr2l	equ	0xFD9
  4694                           status	equ	0xFD8
  4695                           
  4696 ;; *************** function _USBTransferOnePacket *****************
  4697 ;; Defined at:
  4698 ;;		line 995 in file "../../../../microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
  4699 ;; Parameters:    Size  Location     Type
  4700 ;;  ep              1    wreg     unsigned char 
  4701 ;;  dir             1    0[BANK0 ] unsigned char 
  4702 ;;  data            2    1[BANK0 ] PTR unsigned char 
  4703 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
  4704 ;;  len             1    3[BANK0 ] unsigned char 
  4705 ;; Auto vars:     Size  Location     Type
  4706 ;;  ep              1    8[BANK0 ] unsigned char 
  4707 ;;  handle          2    9[BANK0 ] PTR volatile struct __BD
  4708 ;;		 -> RAM(2047), NULL(0), BDT(48), 
  4709 ;; Return value:  Size  Location     Type
  4710 ;;                  2    0[BANK0 ] PTR void 
  4711 ;; Registers used:
  4712 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4713 ;; Tracked objects:
  4714 ;;		On entry : 0/0
  4715 ;;		On exit  : 0/0
  4716 ;;		Unchanged: 0/0
  4717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4718 ;;      Params:         0       4       0       0       0       0       0       0       0
  4719 ;;      Locals:         0       3       0       0       0       0       0       0       0
  4720 ;;      Temps:          0       4       0       0       0       0       0       0       0
  4721 ;;      Totals:         0      11       0       0       0       0       0       0       0
  4722 ;;Total ram usage:       11 bytes
  4723 ;; Hardware stack levels used:    1
  4724 ;; Hardware stack levels required when called:   10
  4725 ;; This function calls:
  4726 ;;		Nothing
  4727 ;; This function is called by:
  4728 ;;		_CDCTxService
  4729 ;;		_USBCDCEventHandler
  4730 ;;		_getsUSBUSART
  4731 ;; This function uses a non-reentrant model
  4732 ;;
  4733                           
  4734                           	psect	text15
  4735  0026FA                     __ptext15:
  4736                           	opt stack 0
  4737  0026FA                     _USBTransferOnePacket:
  4738                           	opt stack 18
  4739                           
  4740                           ;incstack = 0
  4741                           ;USBTransferOnePacket@ep stored from wreg
  4742  0026FA  0100               	movlb	0	; () banked
  4743  0026FC  6F68               	movwf	USBTransferOnePacket@ep& (0+255),b
  4744                           
  4745                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
  4746                           ;usb_device.c: 1000: if(dir != 0)
  4747  0026FE  0100               	movlb	0	; () banked
  4748  002700  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
  4749  002702  B4D8               	btfsc	status,2,c
  4750  002704  D007               	goto	l346
  4751                           
  4752                           ; BSR set to: 0
  4753                           ;usb_device.c: 1001: {
  4754                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
  4755  002706  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
  4756  002708  0D02               	mullw	2
  4757  00270A  0E3A               	movlw	low _pBDTEntryIn
  4758  00270C  24F3               	addwf	prodl,w,c
  4759  00270E  6ED9               	movwf	fsr2l,c
  4760  002710  0E00               	movlw	high _pBDTEntryIn
  4761  002712  D006               	goto	L2
  4762  002714                     l346:
  4763                           
  4764                           ; BSR set to: 0
  4765                           ;usb_device.c: 1005: else
  4766                           ;usb_device.c: 1006: {
  4767                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
  4768                           
  4769                           ; BSR set to: 0
  4770  002714  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
  4771  002716  0D02               	mullw	2
  4772  002718  0E1E               	movlw	low _pBDTEntryOut
  4773  00271A  24F3               	addwf	prodl,w,c
  4774  00271C  6ED9               	movwf	fsr2l,c
  4775  00271E  0E02               	movlw	high _pBDTEntryOut
  4776  002720                     L2:
  4777  002720  20F4               	addwfc	prodh,w,c
  4778  002722  6EDA               	movwf	fsr2h,c
  4779  002724  CFDE F069          	movff	postinc2,USBTransferOnePacket@handle
  4780  002728  CFDD F06A          	movff	postdec2,USBTransferOnePacket@handle+1
  4781                           
  4782                           ; BSR set to: 0
  4783                           ;usb_device.c: 1009: }
  4784                           ;usb_device.c: 1013: if(handle == 0)
  4785                           
  4786                           ; BSR set to: 0
  4787  00272C  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
  4788  00272E  116A               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  4789  002730  A4D8               	btfss	status,2,c
  4790  002732  D005               	goto	l348
  4791                           
  4792                           ; BSR set to: 0
  4793                           ;usb_device.c: 1014: {
  4794                           ;usb_device.c: 1015: return 0;
  4795  002734  0E00               	movlw	0
  4796  002736  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
  4797  002738  0E00               	movlw	0
  4798  00273A  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
  4799                           
  4800                           ; BSR set to: 0
  4801  00273C  0012               	return	
  4802  00273E                     l348:
  4803                           
  4804                           ; BSR set to: 0
  4805                           ;usb_device.c: 1016: }
  4806                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
  4807                           
  4808                           ; BSR set to: 0
  4809  00273E  EE20 F002          	lfsr	2,2
  4810  002742  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
  4811  002744  26D9               	addwf	fsr2l,f,c
  4812  002746  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  4813  002748  22DA               	addwfc	fsr2h,f,c
  4814  00274A  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
  4815  00274E  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
  4816                           
  4817                           ;usb_device.c: 1030: handle->CNT = len;
  4818  002752  EE20 F001          	lfsr	2,1
  4819  002756  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
  4820  002758  26D9               	addwf	fsr2l,f,c
  4821  00275A  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  4822  00275C  22DA               	addwfc	fsr2h,f,c
  4823  00275E  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
  4824                           
  4825                           ; BSR set to: 0
  4826                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
  4827  002762  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  4828  002766  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  4829  00276A  0E40               	movlw	64
  4830  00276C  16DF               	andwf	indf2,f,c
  4831                           
  4832                           ; BSR set to: 0
  4833                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
  4834  00276E  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  4835  002772  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  4836  002776  0E00               	movlw	0
  4837  002778  86DB               	bsf	plusw2,3,c
  4838                           
  4839                           ; BSR set to: 0
  4840                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
  4841  00277A  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  4842  00277E  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  4843  002782  0E00               	movlw	0
  4844  002784  8EDB               	bsf	plusw2,7,c
  4845                           
  4846                           ; BSR set to: 0
  4847                           ;usb_device.c: 1036: if(dir != 0)
  4848  002786  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
  4849  002788  B4D8               	btfsc	status,2,c
  4850  00278A  D018               	goto	l350
  4851                           
  4852                           ; BSR set to: 0
  4853                           ;usb_device.c: 1037: {
  4854                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
  4855  00278C  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
  4856  00278E  0D02               	mullw	2
  4857  002790  0E3A               	movlw	low _pBDTEntryIn
  4858  002792  24F3               	addwf	prodl,w,c
  4859  002794  6ED9               	movwf	fsr2l,c
  4860  002796  0E00               	movlw	high _pBDTEntryIn
  4861  002798  20F4               	addwfc	prodh,w,c
  4862  00279A  6EDA               	movwf	fsr2h,c
  4863  00279C  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
  4864  0027A0  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
  4865  0027A4  0E04               	movlw	4
  4866  0027A6  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
  4867  0027A8  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
  4868  0027AA  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
  4869  0027AC  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
  4870  0027AE  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
  4871  0027B0  0D02               	mullw	2
  4872  0027B2  0E3A               	movlw	low _pBDTEntryIn
  4873  0027B4  24F3               	addwf	prodl,w,c
  4874  0027B6  6ED9               	movwf	fsr2l,c
  4875  0027B8  0E00               	movlw	high _pBDTEntryIn
  4876  0027BA  D017               	goto	L3
  4877  0027BC                     l350:
  4878                           
  4879                           ; BSR set to: 0
  4880                           ;usb_device.c: 1041: else
  4881                           ;usb_device.c: 1042: {
  4882                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
  4883                           
  4884                           ; BSR set to: 0
  4885  0027BC  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
  4886  0027BE  0D02               	mullw	2
  4887  0027C0  0E1E               	movlw	low _pBDTEntryOut
  4888  0027C2  24F3               	addwf	prodl,w,c
  4889  0027C4  6ED9               	movwf	fsr2l,c
  4890  0027C6  0E02               	movlw	high _pBDTEntryOut
  4891  0027C8  20F4               	addwfc	prodh,w,c
  4892  0027CA  6EDA               	movwf	fsr2h,c
  4893  0027CC  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
  4894  0027D0  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
  4895  0027D4  0E04               	movlw	4
  4896  0027D6  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
  4897  0027D8  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
  4898  0027DA  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
  4899  0027DC  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
  4900  0027DE  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
  4901  0027E0  0D02               	mullw	2
  4902  0027E2  0E1E               	movlw	low _pBDTEntryOut
  4903  0027E4  24F3               	addwf	prodl,w,c
  4904  0027E6  6ED9               	movwf	fsr2l,c
  4905  0027E8  0E02               	movlw	high _pBDTEntryOut
  4906  0027EA                     L3:
  4907  0027EA  20F4               	addwfc	prodh,w,c
  4908  0027EC  6EDA               	movwf	fsr2h,c
  4909  0027EE  C066  FFDE         	movff	??_USBTransferOnePacket+2,postinc2
  4910  0027F2  C067  FFDD         	movff	??_USBTransferOnePacket+3,postdec2
  4911                           
  4912                           ; BSR set to: 0
  4913                           ;usb_device.c: 1045: }
  4914                           ;usb_device.c: 1046: return (void*)handle;
  4915                           
  4916                           ; BSR set to: 0
  4917  0027F6  C069  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
  4918  0027FA  C06A  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
  4919  0027FE  0012               	return	
  4920  002800                     __end_of_USBTransferOnePacket:
  4921                           	opt stack 0
  4922                           tblptru	equ	0xFF8
  4923                           tblptrh	equ	0xFF7
  4924                           tblptrl	equ	0xFF6
  4925                           tablat	equ	0xFF5
  4926                           prodh	equ	0xFF4
  4927                           prodl	equ	0xFF3
  4928                           intcon	equ	0xFF2
  4929                           postinc0	equ	0xFEE
  4930                           wreg	equ	0xFE8
  4931                           indf1	equ	0xFE7
  4932                           postdec1	equ	0xFE5
  4933                           fsr1h	equ	0xFE2
  4934                           fsr1l	equ	0xFE1
  4935                           indf2	equ	0xFDF
  4936                           postinc2	equ	0xFDE
  4937                           postdec2	equ	0xFDD
  4938                           plusw2	equ	0xFDB
  4939                           fsr2h	equ	0xFDA
  4940                           fsr2l	equ	0xFD9
  4941                           status	equ	0xFD8
  4942                           
  4943 ;; *************** function _USBDeviceInit *****************
  4944 ;; Defined at:
  4945 ;;		line 277 in file "../../../../microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
  4946 ;; Parameters:    Size  Location     Type
  4947 ;;		None
  4948 ;; Auto vars:     Size  Location     Type
  4949 ;;  i               1    8[BANK0 ] unsigned char 
  4950 ;; Return value:  Size  Location     Type
  4951 ;;                  1    wreg      void 
  4952 ;; Registers used:
  4953 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4954 ;; Tracked objects:
  4955 ;;		On entry : 0/0
  4956 ;;		On exit  : 0/0
  4957 ;;		Unchanged: 0/0
  4958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4959 ;;      Params:         0       0       0       0       0       0       0       0       0
  4960 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4961 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4962 ;;      Totals:         0       1       0       0       0       0       0       0       0
  4963 ;;Total ram usage:        1 bytes
  4964 ;; Hardware stack levels used:    1
  4965 ;; Hardware stack levels required when called:   11
  4966 ;; This function calls:
  4967 ;;		_memset
  4968 ;; This function is called by:
  4969 ;;		_main
  4970 ;; This function uses a non-reentrant model
  4971 ;;
  4972                           
  4973                           	psect	text16
  4974  001B5E                     __ptext16:
  4975                           	opt stack 0
  4976  001B5E                     _USBDeviceInit:
  4977                           	opt stack 19
  4978                           
  4979                           ;usb_device.c: 279: uint8_t i;
  4980                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
  4981                           
  4982                           ; BSR set to: 0
  4983                           ;incstack = 0
  4984  001B5E  9AA0               	bcf	4000,5,c	;volatile
  4985                           
  4986                           ;usb_device.c: 285: ;
  4987                           ;usb_device.c: 288: {UEIR = 0;};
  4988  001B60  0E00               	movlw	0
  4989  001B62  6E6A               	movwf	3946,c	;volatile
  4990                           
  4991                           ;usb_device.c: 291: {UIR = 0;};
  4992  001B64  0E00               	movlw	0
  4993  001B66  6E68               	movwf	3944,c	;volatile
  4994                           
  4995                           ;usb_device.c: 294: UEP0 = 0;
  4996  001B68  0E00               	movlw	0
  4997  001B6A  6E70               	movwf	3952,c	;volatile
  4998                           
  4999                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
  5000  001B6C  0E71               	movlw	113
  5001  001B6E  0100               	movlb	0	; () banked
  5002  001B70  6F60               	movwf	memset@p1& (0+255),b
  5003  001B72  0E0F               	movlw	15
  5004  001B74  6F61               	movwf	(memset@p1+1)& (0+255),b
  5005  001B76  0E00               	movlw	0
  5006  001B78  6F63               	movwf	(memset@c+1)& (0+255),b
  5007  001B7A  0E00               	movlw	0
  5008  001B7C  6F62               	movwf	memset@c& (0+255),b
  5009  001B7E  0E00               	movlw	0
  5010  001B80  6F65               	movwf	(memset@n+1)& (0+255),b
  5011  001B82  0E02               	movlw	2
  5012  001B84  6F64               	movwf	memset@n& (0+255),b
  5013  001B86  EC6E  F021         	call	_memset	;wreg free
  5014                           
  5015                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  5016  001B8A  0E16               	movlw	22
  5017  001B8C  6E6F               	movwf	3951,c	;volatile
  5018  001B8E  0E9F               	movlw	159
  5019  001B90  6E6B               	movwf	3947,c	;volatile
  5020  001B92  0E7B               	movlw	123
  5021  001B94  6E69               	movwf	3945,c	;volatile
  5022                           
  5023                           ;usb_device.c: 301: ;
  5024                           ;usb_device.c: 304: ;
  5025                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  5026  001B96  0E00               	movlw	0
  5027  001B98  0100               	movlb	0	; () banked
  5028  001B9A  6F68               	movwf	USBDeviceInit@i& (0+255),b
  5029  001B9C                     l8417:
  5030                           
  5031                           ; BSR set to: 0
  5032  001B9C  0E0B               	movlw	11
  5033  001B9E  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
  5034  001BA0  D001               	goto	l307
  5035  001BA2  D00E               	goto	u8090
  5036  001BA4                     l307:
  5037                           
  5038                           ; BSR set to: 0
  5039                           ;usb_device.c: 308: {
  5040                           ;usb_device.c: 309: BDT[i].Val = 0x00;
  5041                           
  5042                           ; BSR set to: 0
  5043  001BA4  5168               	movf	USBDeviceInit@i& (0+255),w,b
  5044  001BA6  0D04               	mullw	4
  5045  001BA8  0E00               	movlw	0
  5046  001BAA  24F3               	addwf	prodl,w,c
  5047  001BAC  6ED9               	movwf	fsr2l,c
  5048  001BAE  0E04               	movlw	4
  5049  001BB0  20F4               	addwfc	prodh,w,c
  5050  001BB2  6EDA               	movwf	fsr2h,c
  5051  001BB4  6ADE               	clrf	postinc2,c
  5052  001BB6  6ADE               	clrf	postinc2,c
  5053  001BB8  6ADE               	clrf	postinc2,c
  5054  001BBA  6ADD               	clrf	postdec2,c
  5055                           
  5056                           ; BSR set to: 0
  5057  001BBC  2B68               	incf	USBDeviceInit@i& (0+255),f,b
  5058  001BBE  D7EE               	goto	l8417
  5059  001BC0                     u8090:
  5060                           
  5061                           ; BSR set to: 0
  5062                           ;usb_device.c: 310: }
  5063                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
  5064  001BC0  8C6D               	bsf	3949,6,c	;volatile
  5065                           
  5066                           ; BSR set to: 0
  5067                           ;usb_device.c: 316: UADDR = 0x00;
  5068  001BC2  0E00               	movlw	0
  5069  001BC4  6E6E               	movwf	3950,c	;volatile
  5070                           
  5071                           ; BSR set to: 0
  5072                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
  5073  001BC6  986D               	bcf	3949,4,c	;volatile
  5074                           
  5075                           ; BSR set to: 0
  5076                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
  5077  001BC8  9C6D               	bcf	3949,6,c	;volatile
  5078  001BCA                     
  5079                           ; BSR set to: 0
  5080                           ;usb_device.c: 326: {
  5081                           ;usb_device.c: 327: (UIR &= 0xF7);
  5082                           
  5083                           ; BSR set to: 0
  5084  001BCA  9668               	bcf	3944,3,c	;volatile
  5085                           
  5086                           ; BSR set to: 0
  5087                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
  5088  001BCC  0E00               	movlw	0
  5089  001BCE  6FFA               	movwf	(_inPipes+3)& (0+255),b	;volatile
  5090                           
  5091                           ; BSR set to: 0
  5092                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
  5093  001BD0  0E00               	movlw	0
  5094  001BD2  6E35               	movwf	_outPipes+3,c	;volatile
  5095                           
  5096                           ; BSR set to: 0
  5097                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
  5098  001BD4  0E00               	movlw	0
  5099  001BD6  6E37               	movwf	_outPipes+5,c	;volatile
  5100  001BD8  0E00               	movlw	0
  5101  001BDA  6E36               	movwf	_outPipes+4,c	;volatile
  5102                           
  5103                           ; BSR set to: 0
  5104                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
  5105  001BDC  B668               	btfsc	3944,3,c	;volatile
  5106  001BDE  D7F5               	goto	l309
  5107                           
  5108                           ; BSR set to: 0
  5109                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
  5110                           
  5111                           ; BSR set to: 0
  5112  001BE0  0E01               	movlw	1
  5113  001BE2  6E4F               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  5114                           
  5115                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
  5116  001BE4  0E01               	movlw	1
  5117  001BE6  6E4E               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  5118                           
  5119                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
  5120  001BE8  0E00               	movlw	0
  5121  001BEA  0101               	movlb	1	; () banked
  5122  001BEC  6FF7               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
  5123                           
  5124                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
  5125  001BEE  0E00               	movlw	0
  5126  001BF0  6FF6               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
  5127                           
  5128                           ;usb_device.c: 341: USBBusIsSuspended = 0;
  5129  001BF2  0E00               	movlw	0
  5130  001BF4  6E54               	movwf	_USBBusIsSuspended,c	;volatile
  5131                           
  5132                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
  5133  001BF6  0E00               	movlw	0
  5134  001BF8  0100               	movlb	0	; () banked
  5135  001BFA  6F68               	movwf	USBDeviceInit@i& (0+255),b
  5136  001BFC                     l8445:
  5137                           
  5138                           ; BSR set to: 0
  5139  001BFC  0E02               	movlw	2
  5140  001BFE  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
  5141  001C00  D001               	goto	l311
  5142  001C02  D02E               	goto	u8120
  5143  001C04                     l311:
  5144                           
  5145                           ; BSR set to: 0
  5146                           ;usb_device.c: 346: {
  5147                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
  5148                           
  5149                           ; BSR set to: 0
  5150  001C04  5168               	movf	USBDeviceInit@i& (0+255),w,b
  5151  001C06  0D02               	mullw	2
  5152  001C08  0E3A               	movlw	low _pBDTEntryIn
  5153  001C0A  24F3               	addwf	prodl,w,c
  5154  001C0C  6ED9               	movwf	fsr2l,c
  5155  001C0E  0E00               	movlw	high _pBDTEntryIn
  5156  001C10  20F4               	addwfc	prodh,w,c
  5157  001C12  6EDA               	movwf	fsr2h,c
  5158  001C14  0E00               	movlw	0
  5159  001C16  6EDE               	movwf	postinc2,c
  5160  001C18  0E00               	movlw	0
  5161  001C1A  6EDD               	movwf	postdec2,c
  5162                           
  5163                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
  5164  001C1C  5168               	movf	USBDeviceInit@i& (0+255),w,b
  5165  001C1E  0D02               	mullw	2
  5166  001C20  0E1E               	movlw	low _pBDTEntryOut
  5167  001C22  24F3               	addwf	prodl,w,c
  5168  001C24  6ED9               	movwf	fsr2l,c
  5169  001C26  0E02               	movlw	high _pBDTEntryOut
  5170  001C28  20F4               	addwfc	prodh,w,c
  5171  001C2A  6EDA               	movwf	fsr2h,c
  5172  001C2C  0E00               	movlw	0
  5173  001C2E  6EDE               	movwf	postinc2,c
  5174  001C30  0E00               	movlw	0
  5175  001C32  6EDD               	movwf	postdec2,c
  5176                           
  5177                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
  5178  001C34  5168               	movf	USBDeviceInit@i& (0+255),w,b
  5179  001C36  0D01               	mullw	1
  5180  001C38  0EEE               	movlw	low _ep_data_in
  5181  001C3A  24F3               	addwf	prodl,w,c
  5182  001C3C  6ED9               	movwf	fsr2l,c
  5183  001C3E  0E01               	movlw	high _ep_data_in
  5184  001C40  20F4               	addwfc	prodh,w,c
  5185  001C42  6EDA               	movwf	fsr2h,c
  5186  001C44  0E00               	movlw	0
  5187  001C46  6EDF               	movwf	indf2,c
  5188                           
  5189                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
  5190  001C48  5168               	movf	USBDeviceInit@i& (0+255),w,b
  5191  001C4A  0D01               	mullw	1
  5192  001C4C  0EEB               	movlw	low _ep_data_out
  5193  001C4E  24F3               	addwf	prodl,w,c
  5194  001C50  6ED9               	movwf	fsr2l,c
  5195  001C52  0E01               	movlw	high _ep_data_out
  5196  001C54  20F4               	addwfc	prodh,w,c
  5197  001C56  6EDA               	movwf	fsr2h,c
  5198  001C58  0E00               	movlw	0
  5199  001C5A  6EDF               	movwf	indf2,c
  5200                           
  5201                           ; BSR set to: 0
  5202  001C5C  2B68               	incf	USBDeviceInit@i& (0+255),f,b
  5203  001C5E  D7CE               	goto	l8445
  5204  001C60                     u8120:
  5205                           
  5206                           ; BSR set to: 0
  5207                           ;usb_device.c: 351: }
  5208                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  5209                           
  5210                           ; BSR set to: 0
  5211  001C60  0E08               	movlw	8
  5212  001C62  6E3A               	movwf	_pBDTEntryIn,c
  5213  001C64  0E04               	movlw	4
  5214  001C66  6E3B               	movwf	_pBDTEntryIn+1,c
  5215                           
  5216                           ; BSR set to: 0
  5217                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
  5218  001C68  0E16               	movlw	22
  5219  001C6A  6E70               	movwf	3952,c	;volatile
  5220                           
  5221                           ; BSR set to: 0
  5222                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  5223  001C6C  0E04               	movlw	4
  5224  001C6E  0104               	movlb	4	; () banked
  5225  001C70  6F03               	movwf	3,b	;volatile
  5226  001C72  0E30               	movlw	48
  5227  001C74  6F02               	movwf	2,b	;volatile
  5228                           
  5229                           ; BSR set to: 4
  5230                           ;usb_device.c: 359: BDT[0].CNT = 8;
  5231  001C76  0E08               	movlw	8
  5232  001C78  6F01               	movwf	1,b	;volatile
  5233                           
  5234                           ; BSR set to: 4
  5235                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
  5236  001C7A  0E04               	movlw	4
  5237  001C7C  6F00               	movwf	0,b	;volatile
  5238                           
  5239                           ; BSR set to: 4
  5240                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
  5241  001C7E  8F00               	bsf	0,7,b	;volatile
  5242                           
  5243                           ; BSR set to: 4
  5244                           ;usb_device.c: 364: USBActiveConfiguration = 0;
  5245  001C80  0E00               	movlw	0
  5246  001C82  6E5E               	movwf	_USBActiveConfiguration,c	;volatile
  5247                           
  5248                           ; BSR set to: 4
  5249                           ;usb_device.c: 366: USB1msTickCount = 0;
  5250  001C84  0E00               	movlw	0
  5251  001C86  0102               	movlb	2	; () banked
  5252  001C88  6F28               	movwf	_USB1msTickCount& (0+255),b	;volatile
  5253  001C8A  0E00               	movlw	0
  5254  001C8C  6F29               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
  5255  001C8E  0E00               	movlw	0
  5256  001C90  6F2A               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
  5257  001C92  0E00               	movlw	0
  5258  001C94  6F2B               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
  5259                           
  5260                           ; BSR set to: 2
  5261                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
  5262  001C96  0E00               	movlw	0
  5263  001C98  0101               	movlb	1	; () banked
  5264  001C9A  6FF5               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
  5265                           
  5266                           ; BSR set to: 1
  5267                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
  5268  001C9C  0E00               	movlw	0
  5269  001C9E  6E58               	movwf	_USBDeviceState,c	;volatile
  5270                           
  5271                           ; BSR set to: 1
  5272  001CA0  0012               	return		;funcret
  5273  001CA2                     __end_of_USBDeviceInit:
  5274                           	opt stack 0
  5275                           tblptru	equ	0xFF8
  5276                           tblptrh	equ	0xFF7
  5277                           tblptrl	equ	0xFF6
  5278                           tablat	equ	0xFF5
  5279                           prodh	equ	0xFF4
  5280                           prodl	equ	0xFF3
  5281                           intcon	equ	0xFF2
  5282                           postinc0	equ	0xFEE
  5283                           wreg	equ	0xFE8
  5284                           indf1	equ	0xFE7
  5285                           postdec1	equ	0xFE5
  5286                           fsr1h	equ	0xFE2
  5287                           fsr1l	equ	0xFE1
  5288                           indf2	equ	0xFDF
  5289                           postinc2	equ	0xFDE
  5290                           postdec2	equ	0xFDD
  5291                           plusw2	equ	0xFDB
  5292                           fsr2h	equ	0xFDA
  5293                           fsr2l	equ	0xFD9
  5294                           status	equ	0xFD8
  5295                           
  5296 ;; *************** function _memset *****************
  5297 ;; Defined at:
  5298 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\memset.c"
  5299 ;; Parameters:    Size  Location     Type
  5300 ;;  p1              2    0[BANK0 ] PTR void 
  5301 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  5302 ;;  c               2    2[BANK0 ] int 
  5303 ;;  n               2    4[BANK0 ] unsigned int 
  5304 ;; Auto vars:     Size  Location     Type
  5305 ;;  p               2    6[BANK0 ] PTR unsigned char 
  5306 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  5307 ;; Return value:  Size  Location     Type
  5308 ;;                  2    0[BANK0 ] PTR void 
  5309 ;; Registers used:
  5310 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5311 ;; Tracked objects:
  5312 ;;		On entry : 0/0
  5313 ;;		On exit  : 0/0
  5314 ;;		Unchanged: 0/0
  5315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5316 ;;      Params:         0       6       0       0       0       0       0       0       0
  5317 ;;      Locals:         0       2       0       0       0       0       0       0       0
  5318 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5319 ;;      Totals:         0       8       0       0       0       0       0       0       0
  5320 ;;Total ram usage:        8 bytes
  5321 ;; Hardware stack levels used:    1
  5322 ;; Hardware stack levels required when called:   10
  5323 ;; This function calls:
  5324 ;;		Nothing
  5325 ;; This function is called by:
  5326 ;;		_USBDeviceInit
  5327 ;; This function uses a non-reentrant model
  5328 ;;
  5329                           
  5330                           	psect	text17
  5331  0042DC                     __ptext17:
  5332                           	opt stack 0
  5333  0042DC                     _memset:
  5334                           	opt stack 19
  5335                           
  5336                           ; BSR set to: 1
  5337                           ;incstack = 0
  5338  0042DC  C060  F066         	movff	memset@p1,memset@p
  5339  0042E0  C061  F067         	movff	memset@p1+1,memset@p+1
  5340  0042E4  D009               	goto	l2389
  5341  0042E6                     l7439:
  5342  0042E6  C066  FFD9         	movff	memset@p,fsr2l
  5343  0042EA  C067  FFDA         	movff	memset@p+1,fsr2h
  5344  0042EE  C062  FFDF         	movff	memset@c,indf2
  5345  0042F2  0100               	movlb	0	; () banked
  5346  0042F4  4B66               	infsnz	memset@p& (0+255),f,b
  5347  0042F6  2B67               	incf	(memset@p+1)& (0+255),f,b
  5348  0042F8                     l2389:
  5349                           
  5350                           ; BSR set to: 0
  5351  0042F8  0100               	movlb	0	; () banked
  5352  0042FA  0764               	decf	memset@n& (0+255),f,b
  5353  0042FC  A0D8               	btfss	status,0,c
  5354  0042FE  0765               	decf	(memset@n+1)& (0+255),f,b
  5355  004300  2964               	incf	memset@n& (0+255),w,b
  5356  004302  E1F1               	bnz	l7439
  5357  004304  2965               	incf	(memset@n+1)& (0+255),w,b
  5358  004306  B4D8               	btfsc	status,2,c
  5359  004308  0012               	return	
  5360  00430A  D7ED               	goto	l2390
  5361  00430C                     __end_of_memset:
  5362                           	opt stack 0
  5363                           tblptru	equ	0xFF8
  5364                           tblptrh	equ	0xFF7
  5365                           tblptrl	equ	0xFF6
  5366                           tablat	equ	0xFF5
  5367                           prodh	equ	0xFF4
  5368                           prodl	equ	0xFF3
  5369                           intcon	equ	0xFF2
  5370                           postinc0	equ	0xFEE
  5371                           wreg	equ	0xFE8
  5372                           indf1	equ	0xFE7
  5373                           postdec1	equ	0xFE5
  5374                           fsr1h	equ	0xFE2
  5375                           fsr1l	equ	0xFE1
  5376                           indf2	equ	0xFDF
  5377                           postinc2	equ	0xFDE
  5378                           postdec2	equ	0xFDD
  5379                           plusw2	equ	0xFDB
  5380                           fsr2h	equ	0xFDA
  5381                           fsr2l	equ	0xFD9
  5382                           status	equ	0xFD8
  5383                           
  5384 ;; *************** function _TxLoRaWan *****************
  5385 ;; Defined at:
  5386 ;;		line 79 in file "LoRaWanCore.c"
  5387 ;; Parameters:    Size  Location     Type
  5388 ;;  conf            1    wreg     unsigned char 
  5389 ;;  porta           1  142[BANK0 ] unsigned char 
  5390 ;;  data            2  143[BANK0 ] PTR const unsigned char 
  5391 ;;		 -> main@dadoPoco(6), 
  5392 ;;  tamData         1  145[BANK0 ] unsigned char 
  5393 ;; Auto vars:     Size  Location     Type
  5394 ;;  conf            1  200[BANK1 ] unsigned char 
  5395 ;;  status          1  201[BANK1 ] unsigned char 
  5396 ;;  i               1  206[BANK1 ] unsigned char 
  5397 ;;  comando       200    0[BANK1 ] unsigned char [200]
  5398 ;;  hex             4  202[BANK1 ] unsigned char [4]
  5399 ;; Return value:  Size  Location     Type
  5400 ;;                  1    wreg      unsigned char 
  5401 ;; Registers used:
  5402 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5403 ;; Tracked objects:
  5404 ;;		On entry : 0/0
  5405 ;;		On exit  : 0/0
  5406 ;;		Unchanged: 0/0
  5407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5408 ;;      Params:         0       4       0       0       0       0       0       0       0
  5409 ;;      Locals:         0       0     207       0       0       0       0       0       0
  5410 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5411 ;;      Totals:         0       5     207       0       0       0       0       0       0
  5412 ;;Total ram usage:      212 bytes
  5413 ;; Hardware stack levels used:    1
  5414 ;; Hardware stack levels required when called:   14
  5415 ;; This function calls:
  5416 ;;		_JoinLoRaWan
  5417 ;;		_ResetModuloLoRaWan
  5418 ;;		_enviaComando
  5419 ;;		_parseLoRaWan
  5420 ;;		_sprintf
  5421 ;;		_strcat
  5422 ;; This function is called by:
  5423 ;;		_main
  5424 ;; This function uses a non-reentrant model
  5425 ;;
  5426                           
  5427                           	psect	text18
  5428  0023C2                     __ptext18:
  5429                           	opt stack 0
  5430  0023C2                     _TxLoRaWan:
  5431                           	opt stack 16
  5432                           
  5433                           ; BSR set to: 0
  5434                           ;incstack = 0
  5435                           ;TxLoRaWan@conf stored from wreg
  5436  0023C2  0101               	movlb	1	; () banked
  5437  0023C4  6FC8               	movwf	TxLoRaWan@conf& (0+255),b
  5438                           
  5439                           ;LoRaWanCore.c: 81: char comando[200];
  5440                           ;LoRaWanCore.c: 82: char hex[4];
  5441                           ;LoRaWanCore.c: 84: if (conf)
  5442  0023C6  0101               	movlb	1	; () banked
  5443  0023C8  51C8               	movf	TxLoRaWan@conf& (0+255),w,b
  5444  0023CA  B4D8               	btfsc	status,2,c
  5445  0023CC  D013               	goto	l1682
  5446                           
  5447                           ; BSR set to: 1
  5448                           ;LoRaWanCore.c: 85: sprintf(comando, "%s %d ", MAC_TX_CNF, porta);
  5449  0023CE  0E00               	movlw	low TxLoRaWan@comando
  5450  0023D0  0100               	movlb	0	; () banked
  5451  0023D2  6FBE               	movwf	sprintf@sp& (0+255),b
  5452  0023D4  0E01               	movlw	high TxLoRaWan@comando
  5453  0023D6  6FBF               	movwf	(sprintf@sp+1)& (0+255),b
  5454  0023D8  0ED2               	movlw	low STR_22
  5455  0023DA  6FC0               	movwf	sprintf@f& (0+255),b
  5456  0023DC  0E7F               	movlw	high STR_22
  5457  0023DE  6FC1               	movwf	(sprintf@f+1)& (0+255),b
  5458  0023E0  0ECD               	movlw	low _MAC_TX_CNF
  5459  0023E2  6FC2               	movwf	(?_sprintf+4)& (0+255),b
  5460  0023E4  0E7E               	movlw	high _MAC_TX_CNF
  5461  0023E6  6FC3               	movwf	(?_sprintf+5)& (0+255),b
  5462  0023E8  C0EE  F0C4         	movff	TxLoRaWan@porta,?_sprintf+6
  5463  0023EC  6BC5               	clrf	(?_sprintf+7)& (0+255),b
  5464  0023EE  EC09  F000         	call	_sprintf	;wreg free
  5465  0023F2  D012               	goto	l1683
  5466  0023F4                     l1682:
  5467                           
  5468                           ;LoRaWanCore.c: 86: else
  5469                           ;LoRaWanCore.c: 87: sprintf(comando, "%s %d ", MAC_TX_UNCNF, porta);
  5470  0023F4  0E00               	movlw	low TxLoRaWan@comando
  5471  0023F6  0100               	movlb	0	; () banked
  5472  0023F8  6FBE               	movwf	sprintf@sp& (0+255),b
  5473  0023FA  0E01               	movlw	high TxLoRaWan@comando
  5474  0023FC  6FBF               	movwf	(sprintf@sp+1)& (0+255),b
  5475  0023FE  0ED2               	movlw	low STR_22
  5476  002400  6FC0               	movwf	sprintf@f& (0+255),b
  5477  002402  0E7F               	movlw	high STR_22
  5478  002404  6FC1               	movwf	(sprintf@f+1)& (0+255),b
  5479  002406  0EC4               	movlw	low _MAC_TX_UNCNF
  5480  002408  6FC2               	movwf	(?_sprintf+4)& (0+255),b
  5481  00240A  0E7E               	movlw	high _MAC_TX_UNCNF
  5482  00240C  6FC3               	movwf	(?_sprintf+5)& (0+255),b
  5483  00240E  C0EE  F0C4         	movff	TxLoRaWan@porta,?_sprintf+6
  5484  002412  6BC5               	clrf	(?_sprintf+7)& (0+255),b
  5485  002414  EC09  F000         	call	_sprintf	;wreg free
  5486  002418                     l1683:
  5487                           
  5488                           ;LoRaWanCore.c: 89: for (uint8_t i=0;i<tamData;i++)
  5489  002418  0E00               	movlw	0
  5490  00241A  0101               	movlb	1	; () banked
  5491  00241C  6FCE               	movwf	TxLoRaWan@i& (0+255),b
  5492  00241E  D027               	goto	l1684
  5493  002420                     
  5494                           ; BSR set to: 1
  5495                           ;LoRaWanCore.c: 90: {
  5496                           ;LoRaWanCore.c: 91: sprintf(hex, "%02X", data[i]);
  5497                           
  5498                           ; BSR set to: 1
  5499  002420  0ECA               	movlw	low TxLoRaWan@hex
  5500  002422  0100               	movlb	0	; () banked
  5501  002424  6FBE               	movwf	sprintf@sp& (0+255),b
  5502  002426  0E01               	movlw	high TxLoRaWan@hex
  5503  002428  6FBF               	movwf	(sprintf@sp+1)& (0+255),b
  5504  00242A  0EF5               	movlw	low STR_24
  5505  00242C  6FC0               	movwf	sprintf@f& (0+255),b
  5506  00242E  0E7F               	movlw	high STR_24
  5507  002430  6FC1               	movwf	(sprintf@f+1)& (0+255),b
  5508  002432  0101               	movlb	1	; () banked
  5509  002434  51CE               	movf	TxLoRaWan@i& (0+255),w,b
  5510  002436  0D01               	mullw	1
  5511  002438  50F3               	movf	prodl,w,c
  5512  00243A  0100               	movlb	0	; () banked
  5513  00243C  25EF               	addwf	TxLoRaWan@data& (0+255),w,b
  5514  00243E  6ED9               	movwf	fsr2l,c
  5515  002440  50F4               	movf	prodh,w,c
  5516  002442  21F0               	addwfc	(TxLoRaWan@data+1)& (0+255),w,b
  5517  002444  6EDA               	movwf	fsr2h,c
  5518  002446  50DF               	movf	indf2,w,c
  5519  002448  6FF2               	movwf	??_TxLoRaWan& (0+255),b
  5520  00244A  51F2               	movf	??_TxLoRaWan& (0+255),w,b
  5521  00244C  6FC2               	movwf	(?_sprintf+4)& (0+255),b
  5522  00244E  6BC3               	clrf	(?_sprintf+5)& (0+255),b
  5523  002450  EC09  F000         	call	_sprintf	;wreg free
  5524                           
  5525                           ;LoRaWanCore.c: 92: strcat(comando,hex);
  5526  002454  0E00               	movlw	low TxLoRaWan@comando
  5527  002456  0100               	movlb	0	; () banked
  5528  002458  6F60               	movwf	strcat@to& (0+255),b
  5529  00245A  0E01               	movlw	high TxLoRaWan@comando
  5530  00245C  6F61               	movwf	(strcat@to+1)& (0+255),b
  5531  00245E  0ECA               	movlw	low TxLoRaWan@hex
  5532  002460  6F62               	movwf	strcat@from& (0+255),b
  5533  002462  0E01               	movlw	high TxLoRaWan@hex
  5534  002464  6F63               	movwf	(strcat@from+1)& (0+255),b
  5535  002466  EC25  F020         	call	_strcat	;wreg free
  5536  00246A  0101               	movlb	1	; () banked
  5537  00246C  2BCE               	incf	TxLoRaWan@i& (0+255),f,b
  5538  00246E                     l1684:
  5539                           
  5540                           ; BSR set to: 1
  5541                           
  5542                           ; BSR set to: 1
  5543  00246E  0100               	movlb	0	; () banked
  5544  002470  51F1               	movf	TxLoRaWan@tamData& (0+255),w,b
  5545  002472  0101               	movlb	1	; () banked
  5546  002474  5DCE               	subwf	TxLoRaWan@i& (0+255),w,b
  5547  002476  A0D8               	btfss	status,0,c
  5548  002478  D7D3               	goto	l1685
  5549  00247A                     u8250:
  5550                           
  5551                           ;LoRaWanCore.c: 96: {
  5552                           ;LoRaWanCore.c: 97: uint8_t status=enviaComando(comando,0);
  5553                           
  5554                           ; BSR set to: 1
  5555                           
  5556                           ;LoRaWanCore.c: 93: }
  5557                           ;LoRaWanCore.c: 95: while (1)
  5558                           
  5559                           ; BSR set to: 1
  5560  00247A  0E00               	movlw	low TxLoRaWan@comando
  5561  00247C  0100               	movlb	0	; () banked
  5562  00247E  6F7C               	movwf	enviaComando@cmd& (0+255),b
  5563  002480  0E01               	movlw	high TxLoRaWan@comando
  5564  002482  6F7D               	movwf	(enviaComando@cmd+1)& (0+255),b
  5565  002484  0E00               	movlw	0
  5566  002486  6F7E               	movwf	enviaComando@tipoComando& (0+255),b
  5567  002488  EC00  F014         	call	_enviaComando	;wreg free
  5568  00248C  0101               	movlb	1	; () banked
  5569  00248E  6FC9               	movwf	TxLoRaWan@status& (0+255),b
  5570                           
  5571                           ;LoRaWanCore.c: 98: switch (status)
  5572  002490  D015               	goto	l1688
  5573  002492                     
  5574                           ; BSR set to: 1
  5575                           ;LoRaWanCore.c: 101: return (parseLoRaWan()==9);
  5576                           
  5577                           ; BSR set to: 1
  5578  002492  EC22  F01A         	call	_parseLoRaWan	;wreg free
  5579  002496  0A09               	xorlw	9
  5580  002498  A4D8               	btfss	status,2,c
  5581  00249A  D002               	goto	u8260
  5582  00249C  0E01               	movlw	1
  5583  00249E  0012               	return	
  5584  0024A0                     u8260:
  5585  0024A0  0E00               	movlw	0
  5586  0024A2  0012               	return	
  5587  0024A4                     
  5588                           ;LoRaWanCore.c: 103: case 5:
  5589                           ;LoRaWanCore.c: 104: {
  5590                           ;LoRaWanCore.c: 105: if (!JoinLoRaWan())
  5591  0024A4  EC05  F021         	call	_JoinLoRaWan	;wreg free
  5592  0024A8  D002               	goto	L4
  5593  0024AA                     
  5594                           ;LoRaWanCore.c: 110: {
  5595                           ;LoRaWanCore.c: 111: if (!ResetModuloLoRaWan())
  5596  0024AA  EC07  F022         	call	_ResetModuloLoRaWan	;wreg free
  5597  0024AE                     L4:
  5598  0024AE  0900               	iorlw	0
  5599  0024B0  A4D8               	btfss	status,2,c
  5600  0024B2  D7E3               	goto	u8250
  5601                           
  5602                           ;LoRaWanCore.c: 112: return 0;
  5603  0024B4  0E00               	movlw	0
  5604  0024B6  0012               	return	
  5605  0024B8                     
  5606                           ;LoRaWanCore.c: 117: return 0;
  5607  0024B8  0E00               	movlw	0
  5608  0024BA  0012               	return	
  5609  0024BC                     l1688:
  5610  0024BC  0101               	movlb	1	; () banked
  5611  0024BE  51C9               	movf	TxLoRaWan@status& (0+255),w,b
  5612                           
  5613                           ; Switch size 1, requested type "space"
  5614                           ; Number of cases is 4, Range of values is 0 to 6
  5615                           ; switch strategies available:
  5616                           ; Name         Instructions Cycles
  5617                           ; simple_byte           13     7 (average)
  5618                           ;	Chosen strategy is simple_byte
  5619  0024C0  0A00               	xorlw	0	; case 0
  5620  0024C2  B4D8               	btfsc	status,2,c
  5621  0024C4  D7E6               	goto	l1689
  5622  0024C6  0A02               	xorlw	2	; case 2
  5623  0024C8  B4D8               	btfsc	status,2,c
  5624  0024CA  D7EC               	goto	l1691
  5625  0024CC  0A07               	xorlw	7	; case 5
  5626  0024CE  B4D8               	btfsc	status,2,c
  5627  0024D0  D7E9               	goto	l1691
  5628  0024D2  0A03               	xorlw	3	; case 6
  5629  0024D4  B4D8               	btfsc	status,2,c
  5630  0024D6  D7E9               	goto	l1695
  5631  0024D8  D7EF               	goto	l1697
  5632  0024DA                     __end_of_TxLoRaWan:
  5633                           	opt stack 0
  5634                           tblptru	equ	0xFF8
  5635                           tblptrh	equ	0xFF7
  5636                           tblptrl	equ	0xFF6
  5637                           tablat	equ	0xFF5
  5638                           prodh	equ	0xFF4
  5639                           prodl	equ	0xFF3
  5640                           intcon	equ	0xFF2
  5641                           postinc0	equ	0xFEE
  5642                           wreg	equ	0xFE8
  5643                           indf1	equ	0xFE7
  5644                           postdec1	equ	0xFE5
  5645                           fsr1h	equ	0xFE2
  5646                           fsr1l	equ	0xFE1
  5647                           indf2	equ	0xFDF
  5648                           postinc2	equ	0xFDE
  5649                           postdec2	equ	0xFDD
  5650                           plusw2	equ	0xFDB
  5651                           fsr2h	equ	0xFDA
  5652                           fsr2l	equ	0xFD9
  5653                           status	equ	0xFD8
  5654                           
  5655 ;; *************** function _strcat *****************
  5656 ;; Defined at:
  5657 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strcat.c"
  5658 ;; Parameters:    Size  Location     Type
  5659 ;;  to              2    0[BANK0 ] PTR unsigned char 
  5660 ;;		 -> TxLoRaWan@comando(200), frameBuffer(200), 
  5661 ;;  from            2    2[BANK0 ] PTR const unsigned char 
  5662 ;;		 -> TxLoRaWan@hex(4), addSensorFloat@f(30), addSensorInt@f(30), addSensorStr@f(30), 
  5663 ;; Auto vars:     Size  Location     Type
  5664 ;;  cp              2    4[BANK0 ] PTR unsigned char 
  5665 ;;		 -> TxLoRaWan@comando(200), frameBuffer(200), 
  5666 ;; Return value:  Size  Location     Type
  5667 ;;                  2    0[BANK0 ] PTR unsigned char 
  5668 ;; Registers used:
  5669 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5670 ;; Tracked objects:
  5671 ;;		On entry : 0/0
  5672 ;;		On exit  : 0/0
  5673 ;;		Unchanged: 0/0
  5674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5675 ;;      Params:         0       4       0       0       0       0       0       0       0
  5676 ;;      Locals:         0       2       0       0       0       0       0       0       0
  5677 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5678 ;;      Totals:         0       6       0       0       0       0       0       0       0
  5679 ;;Total ram usage:        6 bytes
  5680 ;; Hardware stack levels used:    1
  5681 ;; Hardware stack levels required when called:   10
  5682 ;; This function calls:
  5683 ;;		Nothing
  5684 ;; This function is called by:
  5685 ;;		_TxLoRaWan
  5686 ;;		_addSensorStr
  5687 ;;		_addSensorInt
  5688 ;;		_addSensorFloat
  5689 ;; This function uses a non-reentrant model
  5690 ;;
  5691                           
  5692                           	psect	text19
  5693  00404A                     __ptext19:
  5694                           	opt stack 0
  5695  00404A                     _strcat:
  5696                           	opt stack 19
  5697                           
  5698                           ;incstack = 0
  5699  00404A  C060  F064         	movff	strcat@to,strcat@cp
  5700  00404E  C061  F065         	movff	strcat@to+1,strcat@cp+1
  5701  004052  D003               	goto	l2527
  5702  004054  0100               	movlb	0	; () banked
  5703  004056  4B64               	infsnz	strcat@cp& (0+255),f,b
  5704  004058  2B65               	incf	(strcat@cp+1)& (0+255),f,b
  5705  00405A                     l2527:
  5706                           
  5707                           ; BSR set to: 0
  5708  00405A  C064  FFD9         	movff	strcat@cp,fsr2l
  5709  00405E  C065  FFDA         	movff	strcat@cp+1,fsr2h
  5710  004062  50DF               	movf	indf2,w,c
  5711  004064  B4D8               	btfsc	status,2,c
  5712  004066  D006               	goto	l2530
  5713  004068  D7F5               	goto	l2528
  5714  00406A  0100               	movlb	0	; () banked
  5715  00406C  4B64               	infsnz	strcat@cp& (0+255),f,b
  5716  00406E  2B65               	incf	(strcat@cp+1)& (0+255),f,b
  5717  004070  4B62               	infsnz	strcat@from& (0+255),f,b
  5718  004072  2B63               	incf	(strcat@from+1)& (0+255),f,b
  5719  004074                     l2530:
  5720                           
  5721                           ; BSR set to: 0
  5722  004074  C062  FFD9         	movff	strcat@from,fsr2l
  5723  004078  C063  FFDA         	movff	strcat@from+1,fsr2h
  5724  00407C  C064  FFE1         	movff	strcat@cp,fsr1l
  5725  004080  C065  FFE2         	movff	strcat@cp+1,fsr1h
  5726  004084  CFDF FFE7          	movff	indf2,indf1
  5727  004088  50E7               	movf	indf1,w,c
  5728  00408A  B4D8               	btfsc	status,2,c
  5729  00408C  0012               	return	
  5730  00408E  D7ED               	goto	l2531
  5731  004090                     __end_of_strcat:
  5732                           	opt stack 0
  5733                           tblptru	equ	0xFF8
  5734                           tblptrh	equ	0xFF7
  5735                           tblptrl	equ	0xFF6
  5736                           tablat	equ	0xFF5
  5737                           prodh	equ	0xFF4
  5738                           prodl	equ	0xFF3
  5739                           intcon	equ	0xFF2
  5740                           postinc0	equ	0xFEE
  5741                           wreg	equ	0xFE8
  5742                           indf1	equ	0xFE7
  5743                           postdec1	equ	0xFE5
  5744                           fsr1h	equ	0xFE2
  5745                           fsr1l	equ	0xFE1
  5746                           indf2	equ	0xFDF
  5747                           postinc2	equ	0xFDE
  5748                           postdec2	equ	0xFDD
  5749                           plusw2	equ	0xFDB
  5750                           fsr2h	equ	0xFDA
  5751                           fsr2l	equ	0xFD9
  5752                           status	equ	0xFD8
  5753                           
  5754 ;; *************** function _ResetModuloLoRaWan *****************
  5755 ;; Defined at:
  5756 ;;		line 41 in file "LoRaWanCore.c"
  5757 ;; Parameters:    Size  Location     Type
  5758 ;;		None
  5759 ;; Auto vars:     Size  Location     Type
  5760 ;;  status          1   39[BANK0 ] unsigned char 
  5761 ;; Return value:  Size  Location     Type
  5762 ;;                  1    wreg      unsigned char 
  5763 ;; Registers used:
  5764 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5765 ;; Tracked objects:
  5766 ;;		On entry : 0/0
  5767 ;;		On exit  : 0/0
  5768 ;;		Unchanged: 0/0
  5769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5770 ;;      Params:         0       0       0       0       0       0       0       0       0
  5771 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5772 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5773 ;;      Totals:         0       1       0       0       0       0       0       0       0
  5774 ;;Total ram usage:        1 bytes
  5775 ;; Hardware stack levels used:    1
  5776 ;; Hardware stack levels required when called:   13
  5777 ;; This function calls:
  5778 ;;		_enviaComando
  5779 ;; This function is called by:
  5780 ;;		_TxLoRaWan
  5781 ;; This function uses a non-reentrant model
  5782 ;;
  5783                           
  5784                           	psect	text20
  5785  00440E                     __ptext20:
  5786                           	opt stack 0
  5787  00440E                     _ResetModuloLoRaWan:
  5788                           	opt stack 16
  5789                           
  5790                           ;LoRaWanCore.c: 43: uint8_t status;
  5791                           ;LoRaWanCore.c: 45: status=enviaComando(SYS_RESET,1);
  5792                           
  5793                           ;incstack = 0
  5794  00440E  0ED4               	movlw	low _SYS_RESET
  5795  004410  0100               	movlb	0	; () banked
  5796  004412  6F7C               	movwf	enviaComando@cmd& (0+255),b
  5797  004414  0E7E               	movlw	high _SYS_RESET
  5798  004416  6F7D               	movwf	(enviaComando@cmd+1)& (0+255),b
  5799  004418  0E01               	movlw	1
  5800  00441A  6F7E               	movwf	enviaComando@tipoComando& (0+255),b
  5801  00441C  EC00  F014         	call	_enviaComando	;wreg free
  5802  004420  0100               	movlb	0	; () banked
  5803  004422  6F87               	movwf	ResetModuloLoRaWan@status& (0+255),b
  5804                           
  5805                           ; BSR set to: 0
  5806                           ;LoRaWanCore.c: 46: return (status==15);
  5807  004424  0E0F               	movlw	15
  5808  004426  1987               	xorwf	ResetModuloLoRaWan@status& (0+255),w,b
  5809  004428  A4D8               	btfss	status,2,c
  5810  00442A  D002               	goto	u7480
  5811  00442C  0E01               	movlw	1
  5812  00442E  0012               	return	
  5813  004430                     u7480:
  5814  004430  0E00               	movlw	0
  5815  004432  0012               	return	
  5816  004434                     __end_of_ResetModuloLoRaWan:
  5817                           	opt stack 0
  5818                           tblptru	equ	0xFF8
  5819                           tblptrh	equ	0xFF7
  5820                           tblptrl	equ	0xFF6
  5821                           tablat	equ	0xFF5
  5822                           prodh	equ	0xFF4
  5823                           prodl	equ	0xFF3
  5824                           intcon	equ	0xFF2
  5825                           postinc0	equ	0xFEE
  5826                           wreg	equ	0xFE8
  5827                           indf1	equ	0xFE7
  5828                           postdec1	equ	0xFE5
  5829                           fsr1h	equ	0xFE2
  5830                           fsr1l	equ	0xFE1
  5831                           indf2	equ	0xFDF
  5832                           postinc2	equ	0xFDE
  5833                           postdec2	equ	0xFDD
  5834                           plusw2	equ	0xFDB
  5835                           fsr2h	equ	0xFDA
  5836                           fsr2l	equ	0xFD9
  5837                           status	equ	0xFD8
  5838                           
  5839 ;; *************** function _JoinLoRaWan *****************
  5840 ;; Defined at:
  5841 ;;		line 49 in file "LoRaWanCore.c"
  5842 ;; Parameters:    Size  Location     Type
  5843 ;;		None
  5844 ;; Auto vars:     Size  Location     Type
  5845 ;;  status          1   39[BANK0 ] unsigned char 
  5846 ;; Return value:  Size  Location     Type
  5847 ;;                  1    wreg      unsigned char 
  5848 ;; Registers used:
  5849 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5850 ;; Tracked objects:
  5851 ;;		On entry : 0/0
  5852 ;;		On exit  : 0/0
  5853 ;;		Unchanged: 0/0
  5854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5855 ;;      Params:         0       0       0       0       0       0       0       0       0
  5856 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5857 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5858 ;;      Totals:         0       1       0       0       0       0       0       0       0
  5859 ;;Total ram usage:        1 bytes
  5860 ;; Hardware stack levels used:    1
  5861 ;; Hardware stack levels required when called:   13
  5862 ;; This function calls:
  5863 ;;		_enviaComando
  5864 ;;		_parseLoRaWan
  5865 ;; This function is called by:
  5866 ;;		_main
  5867 ;;		_TxLoRaWan
  5868 ;; This function uses a non-reentrant model
  5869 ;;
  5870                           
  5871                           	psect	text21
  5872  00420A                     __ptext21:
  5873                           	opt stack 0
  5874  00420A                     _JoinLoRaWan:
  5875                           	opt stack 16
  5876                           
  5877                           ;LoRaWanCore.c: 51: uint8_t status;
  5878                           ;LoRaWanCore.c: 53: status=enviaComando(MAC_JOIN_OTAA,0);
  5879                           
  5880                           ; BSR set to: 0
  5881                           ;incstack = 0
  5882  00420A  0EBA               	movlw	low _MAC_JOIN_OTAA
  5883  00420C  0100               	movlb	0	; () banked
  5884  00420E  6F7C               	movwf	enviaComando@cmd& (0+255),b
  5885  004210  0E7E               	movlw	high _MAC_JOIN_OTAA
  5886  004212  6F7D               	movwf	(enviaComando@cmd+1)& (0+255),b
  5887  004214  0E00               	movlw	0
  5888  004216  6F7E               	movwf	enviaComando@tipoComando& (0+255),b
  5889  004218  EC00  F014         	call	_enviaComando	;wreg free
  5890  00421C  0100               	movlb	0	; () banked
  5891  00421E  6F87               	movwf	JoinLoRaWan@status& (0+255),b
  5892                           
  5893                           ;LoRaWanCore.c: 54: switch (status)
  5894  004220  D00B               	goto	l1670
  5895  004222                     
  5896                           ; BSR set to: 0
  5897                           ;LoRaWanCore.c: 57: return (parseLoRaWan()==14);
  5898                           
  5899                           ; BSR set to: 0
  5900  004222  EC22  F01A         	call	_parseLoRaWan	;wreg free
  5901  004226  0A0E               	xorlw	14
  5902  004228  A4D8               	btfss	status,2,c
  5903  00422A  D002               	goto	u6700
  5904  00422C  0E01               	movlw	1
  5905  00422E  0012               	return	
  5906  004230                     u6700:
  5907  004230  0E00               	movlw	0
  5908  004232  0012               	return	
  5909  004234                     
  5910                           ;LoRaWanCore.c: 60: return 0;
  5911  004234  0E00               	movlw	0
  5912                           
  5913                           ;LoRaWanCore.c: 62: }
  5914  004236  0012               	return	
  5915  004238                     l1670:
  5916  004238  0100               	movlb	0	; () banked
  5917  00423A  5187               	movf	JoinLoRaWan@status& (0+255),w,b
  5918                           
  5919                           ; Switch size 1, requested type "space"
  5920                           ; Number of cases is 1, Range of values is 0 to 0
  5921                           ; switch strategies available:
  5922                           ; Name         Instructions Cycles
  5923                           ; simple_byte            4     3 (average)
  5924                           ;	Chosen strategy is simple_byte
  5925  00423C  0A00               	xorlw	0	; case 0
  5926  00423E  B4D8               	btfsc	status,2,c
  5927  004240  D7F0               	goto	l1671
  5928  004242  D7F8               	goto	l1673
  5929  004244                     __end_of_JoinLoRaWan:
  5930                           	opt stack 0
  5931                           tblptru	equ	0xFF8
  5932                           tblptrh	equ	0xFF7
  5933                           tblptrl	equ	0xFF6
  5934                           tablat	equ	0xFF5
  5935                           prodh	equ	0xFF4
  5936                           prodl	equ	0xFF3
  5937                           intcon	equ	0xFF2
  5938                           postinc0	equ	0xFEE
  5939                           wreg	equ	0xFE8
  5940                           indf1	equ	0xFE7
  5941                           postdec1	equ	0xFE5
  5942                           fsr1h	equ	0xFE2
  5943                           fsr1l	equ	0xFE1
  5944                           indf2	equ	0xFDF
  5945                           postinc2	equ	0xFDE
  5946                           postdec2	equ	0xFDD
  5947                           plusw2	equ	0xFDB
  5948                           fsr2h	equ	0xFDA
  5949                           fsr2l	equ	0xFD9
  5950                           status	equ	0xFD8
  5951                           
  5952 ;; *************** function _SetChannelLoRaWan *****************
  5953 ;; Defined at:
  5954 ;;		line 65 in file "LoRaWanCore.c"
  5955 ;; Parameters:    Size  Location     Type
  5956 ;;  canal           1    wreg     unsigned char 
  5957 ;;  ligado          1  142[BANK0 ] unsigned char 
  5958 ;; Auto vars:     Size  Location     Type
  5959 ;;  canal           1  201[BANK1 ] unsigned char 
  5960 ;;  comando       200    0[BANK1 ] unsigned char [200]
  5961 ;;  status          1  200[BANK1 ] unsigned char 
  5962 ;; Return value:  Size  Location     Type
  5963 ;;                  1    wreg      unsigned char 
  5964 ;; Registers used:
  5965 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5966 ;; Tracked objects:
  5967 ;;		On entry : 0/0
  5968 ;;		On exit  : 0/0
  5969 ;;		Unchanged: 0/0
  5970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5971 ;;      Params:         0       1       0       0       0       0       0       0       0
  5972 ;;      Locals:         0       0     202       0       0       0       0       0       0
  5973 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5974 ;;      Totals:         0       1     202       0       0       0       0       0       0
  5975 ;;Total ram usage:      203 bytes
  5976 ;; Hardware stack levels used:    1
  5977 ;; Hardware stack levels required when called:   14
  5978 ;; This function calls:
  5979 ;;		_enviaComando
  5980 ;;		_sprintf
  5981 ;; This function is called by:
  5982 ;;		_main
  5983 ;; This function uses a non-reentrant model
  5984 ;;
  5985                           
  5986                           	psect	text22
  5987  003CBA                     __ptext22:
  5988                           	opt stack 0
  5989  003CBA                     _SetChannelLoRaWan:
  5990                           	opt stack 16
  5991                           
  5992                           ;incstack = 0
  5993                           ;SetChannelLoRaWan@canal stored from wreg
  5994  003CBA  0101               	movlb	1	; () banked
  5995  003CBC  6FC9               	movwf	SetChannelLoRaWan@canal& (0+255),b
  5996                           
  5997                           ;LoRaWanCore.c: 67: char comando[200];
  5998                           ;LoRaWanCore.c: 69: if (ligado)
  5999  003CBE  0100               	movlb	0	; () banked
  6000  003CC0  51EE               	movf	SetChannelLoRaWan@ligado& (0+255),w,b
  6001  003CC2  B4D8               	btfsc	status,2,c
  6002  003CC4  D012               	goto	l1677
  6003                           
  6004                           ; BSR set to: 0
  6005                           ;LoRaWanCore.c: 70: sprintf(comando, "%s %d on", MAC_SET_CH_STATUS, canal);
  6006  003CC6  0E00               	movlw	low SetChannelLoRaWan@comando
  6007  003CC8  6FBE               	movwf	sprintf@sp& (0+255),b
  6008  003CCA  0E01               	movlw	high SetChannelLoRaWan@comando
  6009  003CCC  6FBF               	movwf	(sprintf@sp+1)& (0+255),b
  6010  003CCE  0EAA               	movlw	low STR_20
  6011  003CD0  6FC0               	movwf	sprintf@f& (0+255),b
  6012  003CD2  0E7F               	movlw	high STR_20
  6013  003CD4  6FC1               	movwf	(sprintf@f+1)& (0+255),b
  6014  003CD6  0EAC               	movlw	low _MAC_SET_CH_STATUS
  6015  003CD8  6FC2               	movwf	(?_sprintf+4)& (0+255),b
  6016  003CDA  0E7E               	movlw	high _MAC_SET_CH_STATUS
  6017  003CDC  6FC3               	movwf	(?_sprintf+5)& (0+255),b
  6018  003CDE  C1C9  F0C4         	movff	SetChannelLoRaWan@canal,?_sprintf+6
  6019  003CE2  6BC5               	clrf	(?_sprintf+7)& (0+255),b
  6020  003CE4  EC09  F000         	call	_sprintf	;wreg free
  6021  003CE8  D012               	goto	l1678
  6022  003CEA                     l1677:
  6023                           
  6024                           ;LoRaWanCore.c: 71: else
  6025                           ;LoRaWanCore.c: 72: sprintf(comando, "%s %d off", MAC_SET_CH_STATUS, canal);
  6026  003CEA  0E00               	movlw	low SetChannelLoRaWan@comando
  6027  003CEC  0100               	movlb	0	; () banked
  6028  003CEE  6FBE               	movwf	sprintf@sp& (0+255),b
  6029  003CF0  0E01               	movlw	high SetChannelLoRaWan@comando
  6030  003CF2  6FBF               	movwf	(sprintf@sp+1)& (0+255),b
  6031  003CF4  0E96               	movlw	low STR_21
  6032  003CF6  6FC0               	movwf	sprintf@f& (0+255),b
  6033  003CF8  0E7F               	movlw	high STR_21
  6034  003CFA  6FC1               	movwf	(sprintf@f+1)& (0+255),b
  6035  003CFC  0EAC               	movlw	low _MAC_SET_CH_STATUS
  6036  003CFE  6FC2               	movwf	(?_sprintf+4)& (0+255),b
  6037  003D00  0E7E               	movlw	high _MAC_SET_CH_STATUS
  6038  003D02  6FC3               	movwf	(?_sprintf+5)& (0+255),b
  6039  003D04  C1C9  F0C4         	movff	SetChannelLoRaWan@canal,?_sprintf+6
  6040  003D08  6BC5               	clrf	(?_sprintf+7)& (0+255),b
  6041  003D0A  EC09  F000         	call	_sprintf	;wreg free
  6042  003D0E                     l1678:
  6043                           
  6044                           ;LoRaWanCore.c: 74: uint8_t status=enviaComando(comando,0);
  6045  003D0E  0E00               	movlw	low SetChannelLoRaWan@comando
  6046  003D10  0100               	movlb	0	; () banked
  6047  003D12  6F7C               	movwf	enviaComando@cmd& (0+255),b
  6048  003D14  0E01               	movlw	high SetChannelLoRaWan@comando
  6049  003D16  6F7D               	movwf	(enviaComando@cmd+1)& (0+255),b
  6050  003D18  0E00               	movlw	0
  6051  003D1A  6F7E               	movwf	enviaComando@tipoComando& (0+255),b
  6052  003D1C  EC00  F014         	call	_enviaComando	;wreg free
  6053  003D20  0101               	movlb	1	; () banked
  6054  003D22  6FC8               	movwf	SetChannelLoRaWan@status& (0+255),b
  6055  003D24  0012               	return	
  6056  003D26                     __end_of_SetChannelLoRaWan:
  6057                           	opt stack 0
  6058                           tblptru	equ	0xFF8
  6059                           tblptrh	equ	0xFF7
  6060                           tblptrl	equ	0xFF6
  6061                           tablat	equ	0xFF5
  6062                           prodh	equ	0xFF4
  6063                           prodl	equ	0xFF3
  6064                           intcon	equ	0xFF2
  6065                           postinc0	equ	0xFEE
  6066                           wreg	equ	0xFE8
  6067                           indf1	equ	0xFE7
  6068                           postdec1	equ	0xFE5
  6069                           fsr1h	equ	0xFE2
  6070                           fsr1l	equ	0xFE1
  6071                           indf2	equ	0xFDF
  6072                           postinc2	equ	0xFDE
  6073                           postdec2	equ	0xFDD
  6074                           plusw2	equ	0xFDB
  6075                           fsr2h	equ	0xFDA
  6076                           fsr2l	equ	0xFD9
  6077                           status	equ	0xFD8
  6078                           
  6079 ;; *************** function _sprintf *****************
  6080 ;; Defined at:
  6081 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\doprnt.c"
  6082 ;; Parameters:    Size  Location     Type
  6083 ;;  sp              2   94[BANK0 ] PTR unsigned char 
  6084 ;;		 -> TxLoRaWan@hex(4), TxLoRaWan@comando(200), SetChannelLoRaWan@comando(200), addSensorFloat@f(30), 
  6085 ;;		 -> addSensorInt@f(30), addSensorStr@f(30), frameBuffer(200), 
  6086 ;;  f               2   96[BANK0 ] PTR const unsigned char 
  6087 ;;		 -> STR_24(5), STR_23(7), STR_22(7), STR_21(10), 
  6088 ;;		 -> STR_20(9), STR_4(7), STR_3(8), STR_2(7), 
  6089 ;;		 -> STR_1(17), 
  6090 ;; Auto vars:     Size  Location     Type
  6091 ;;  idx             1  115[BANK0 ] unsigned char 
  6092 ;;  val             4  130[BANK0 ] unsigned long 
  6093 ;;  tmpval          4  124[BANK0 ] struct .
  6094 ;;  fval            3  134[BANK0 ] struct .
  6095 ;;  flag            2  139[BANK0 ] unsigned short 
  6096 ;;  width           2  137[BANK0 ] int 
  6097 ;;  exp             2  128[BANK0 ] int 
  6098 ;;  prec            2  122[BANK0 ] int 
  6099 ;;  ap              2  120[BANK0 ] PTR void [1]
  6100 ;;		 -> ?_sprintf(2), 
  6101 ;;  len             2  118[BANK0 ] unsigned int 
  6102 ;;  cp              2  116[BANK0 ] PTR const unsigned char 
  6103 ;;		 -> STR_25(7), MAC_TX_UNCNF(9), MAC_TX_CNF(7), MAC_SET_CH_STATUS(14), 
  6104 ;;  c               1  141[BANK0 ] char 
  6105 ;;  d               1    0        unsigned char 
  6106 ;; Return value:  Size  Location     Type
  6107 ;;                  2   94[BANK0 ] int 
  6108 ;; Registers used:
  6109 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6110 ;; Tracked objects:
  6111 ;;		On entry : 0/0
  6112 ;;		On exit  : 0/0
  6113 ;;		Unchanged: 0/0
  6114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6115 ;;      Params:         0      12       0       0       0       0       0       0       0
  6116 ;;      Locals:         0      30       0       0       0       0       0       0       0
  6117 ;;      Temps:          0       6       0       0       0       0       0       0       0
  6118 ;;      Totals:         0      48       0       0       0       0       0       0       0
  6119 ;;Total ram usage:       48 bytes
  6120 ;; Hardware stack levels used:    1
  6121 ;; Hardware stack levels required when called:   13
  6122 ;; This function calls:
  6123 ;;		___awdiv
  6124 ;;		___ftadd
  6125 ;;		___ftge
  6126 ;;		___ftmul
  6127 ;;		___ftneg
  6128 ;;		___ftsub
  6129 ;;		___fttol
  6130 ;;		___lldiv
  6131 ;;		___llmod
  6132 ;;		___lltoft
  6133 ;;		___wmul
  6134 ;;		__div_to_l_
  6135 ;;		__tdiv_to_l_
  6136 ;;		_fround
  6137 ;;		_isdigit
  6138 ;;		_scale
  6139 ;; This function is called by:
  6140 ;;		_SetChannelLoRaWan
  6141 ;;		_TxLoRaWan
  6142 ;;		_createFrame
  6143 ;;		_addSensorStr
  6144 ;;		_addSensorInt
  6145 ;;		_addSensorFloat
  6146 ;; This function uses a non-reentrant model
  6147 ;;
  6148                           
  6149                           	psect	text23
  6150  000012                     __ptext23:
  6151                           	opt stack 0
  6152  000012                     _sprintf:
  6153                           	opt stack 16
  6154                           
  6155                           ;doprnt.c: 494: va_list ap;
  6156                           ;doprnt.c: 499: signed char c;
  6157                           ;doprnt.c: 501: int width;
  6158                           ;doprnt.c: 504: int prec;
  6159                           ;doprnt.c: 508: unsigned short flag;
  6160                           ;doprnt.c: 515: char d;
  6161                           ;doprnt.c: 516: double fval;
  6162                           ;doprnt.c: 517: int exp;
  6163                           ;doprnt.c: 523: union {
  6164                           ;doprnt.c: 524: unsigned long vd;
  6165                           ;doprnt.c: 525: double integ;
  6166                           ;doprnt.c: 526: } tmpval;
  6167                           ;doprnt.c: 528: unsigned long val;
  6168                           ;doprnt.c: 529: unsigned len;
  6169                           ;doprnt.c: 530: const char * cp;
  6170                           ;doprnt.c: 533: *ap = __va_start();
  6171                           
  6172                           ; BSR set to: 1
  6173                           ;incstack = 0
  6174  000012  0EC2               	movlw	low (?_sprintf+4)
  6175  000014  0100               	movlb	0	; () banked
  6176  000016  6FD8               	movwf	sprintf@ap& (0+255),b
  6177  000018  0E00               	movlw	high (?_sprintf+4)
  6178  00001A  6FD9               	movwf	(sprintf@ap+1)& (0+255),b
  6179                           
  6180                           ;doprnt.c: 536: while(c = *f++) {
  6181  00001C  EFDD  F005         	goto	u7440
  6182  000020                     
  6183                           ; BSR set to: 0
  6184                           ;doprnt.c: 538: if(c != '%')
  6185                           
  6186                           ; BSR set to: 0
  6187  000020  0E25               	movlw	37
  6188  000022  19ED               	xorwf	sprintf@c& (0+255),w,b
  6189  000024  B4D8               	btfsc	status,2,c
  6190  000026  D00A               	goto	l1792
  6191                           
  6192                           ; BSR set to: 0
  6193                           ;doprnt.c: 540: {
  6194                           ;doprnt.c: 541: ((*sp++ = (c)));
  6195  000028  C0BE  FFD9         	movff	sprintf@sp,fsr2l
  6196  00002C  C0BF  FFDA         	movff	sprintf@sp+1,fsr2h
  6197  000030  C0ED  FFDF         	movff	sprintf@c,indf2
  6198                           
  6199                           ; BSR set to: 0
  6200  000034  4BBE               	infsnz	sprintf@sp& (0+255),f,b
  6201  000036  2BBF               	incf	(sprintf@sp+1)& (0+255),f,b
  6202                           
  6203                           ;doprnt.c: 542: continue;
  6204  000038  EFDD  F005         	goto	u7440
  6205  00003C                     l1792:
  6206                           
  6207                           ; BSR set to: 0
  6208                           ;doprnt.c: 543: }
  6209                           ;doprnt.c: 546: width = 0;
  6210                           
  6211                           ; BSR set to: 0
  6212  00003C  0E00               	movlw	0
  6213  00003E  6FEA               	movwf	(sprintf@width+1)& (0+255),b
  6214  000040  0E00               	movlw	0
  6215  000042  6FE9               	movwf	sprintf@width& (0+255),b
  6216                           
  6217                           ;doprnt.c: 548: flag = 0;
  6218  000044  0E00               	movlw	0
  6219  000046  6FEC               	movwf	(sprintf@flag+1)& (0+255),b
  6220  000048  0E00               	movlw	0
  6221  00004A  6FEB               	movwf	sprintf@flag& (0+255),b
  6222                           
  6223                           ; BSR set to: 0
  6224                           ;doprnt.c: 551: switch(*f) {
  6225                           
  6226                           ;doprnt.c: 550: for(;;) {
  6227  00004C  D004               	goto	l1794
  6228  00004E                     
  6229                           ;doprnt.c: 580: flag |= 0x04;
  6230                           
  6231                           ; BSR set to: 0
  6232  00004E  0100               	movlb	0	; () banked
  6233  000050  85EB               	bsf	sprintf@flag& (0+255),2,b
  6234                           
  6235                           ;doprnt.c: 581: f++;
  6236  000052  4BC0               	infsnz	sprintf@f& (0+255),f,b
  6237  000054  2BC1               	incf	(sprintf@f+1)& (0+255),f,b
  6238  000056                     l1794:
  6239                           
  6240                           ; BSR set to: 0
  6241  000056  C0C0  FFF6         	movff	sprintf@f,tblptrl
  6242  00005A  C0C1  FFF7         	movff	sprintf@f+1,tblptrh
  6243  00005E                     	if	0	;tblptru may be non-zero
  6244  00005E                     	endif
  6245  00005E                     	if	0	;tblptru may be non-zero
  6246  00005E                     	endif
  6247  00005E  0008               	tblrd		*
  6248  000060  50F5               	movf	tablat,w,c
  6249                           
  6250                           ; Switch size 1, requested type "space"
  6251                           ; Number of cases is 1, Range of values is 48 to 48
  6252                           ; switch strategies available:
  6253                           ; Name         Instructions Cycles
  6254                           ; simple_byte            4     3 (average)
  6255                           ;	Chosen strategy is simple_byte
  6256  000062  0A30               	xorlw	48	; case 48
  6257  000064  B4D8               	btfsc	status,2,c
  6258  000066  D7F3               	goto	l1795
  6259                           
  6260                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  6261                           
  6262                           ;doprnt.c: 586: }
  6263                           
  6264                           ;doprnt.c: 585: break;
  6265  000068  C0C0  FFF6         	movff	sprintf@f,tblptrl
  6266  00006C  C0C1  FFF7         	movff	sprintf@f+1,tblptrh
  6267  000070                     	if	0	;tblptru may be non-zero
  6268  000070                     	endif
  6269  000070                     	if	0	;tblptru may be non-zero
  6270  000070                     	endif
  6271  000070  0008               	tblrd		*
  6272  000072  50F5               	movf	tablat,w,c
  6273  000074  EC64  F022         	call	_isdigit
  6274  000078  A0D8               	btfss	status,0,c
  6275  00007A  D0A4               	goto	l1803
  6276                           
  6277                           ;doprnt.c: 598: width = 0;
  6278  00007C  0E00               	movlw	0
  6279  00007E  0100               	movlb	0	; () banked
  6280  000080  6FEA               	movwf	(sprintf@width+1)& (0+255),b
  6281  000082  0E00               	movlw	0
  6282  000084  6FE9               	movwf	sprintf@width& (0+255),b
  6283  000086                     
  6284                           ;doprnt.c: 600: width *= 10;
  6285                           
  6286                           ; BSR set to: 0
  6287  000086  C0E9  F06E         	movff	sprintf@width,___wmul@multiplier
  6288  00008A  C0EA  F06F         	movff	sprintf@width+1,___wmul@multiplier+1
  6289  00008E  0E00               	movlw	0
  6290  000090  0100               	movlb	0	; () banked
  6291  000092  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6292  000094  0E0A               	movlw	10
  6293  000096  6F70               	movwf	___wmul@multiplicand& (0+255),b
  6294  000098  ECE0  F021         	call	___wmul	;wreg free
  6295  00009C  C06E  F0E9         	movff	?___wmul,sprintf@width
  6296  0000A0  C06F  F0EA         	movff	?___wmul+1,sprintf@width+1
  6297                           
  6298                           ;doprnt.c: 601: width += *f++ - '0';
  6299  0000A4  0ED0               	movlw	208
  6300  0000A6  0100               	movlb	0	; () banked
  6301  0000A8  6FCA               	movwf	??_sprintf& (0+255),b
  6302  0000AA  0EFF               	movlw	255
  6303  0000AC  6FCB               	movwf	(??_sprintf+1)& (0+255),b
  6304  0000AE  C0C0  FFF6         	movff	sprintf@f,tblptrl
  6305  0000B2  C0C1  FFF7         	movff	sprintf@f+1,tblptrh
  6306  0000B6                     	if	0	;tblptru may be non-zero
  6307  0000B6                     	endif
  6308  0000B6                     	if	0	;tblptru may be non-zero
  6309  0000B6                     	endif
  6310  0000B6  0008               	tblrd		*
  6311  0000B8  50F5               	movf	tablat,w,c
  6312  0000BA  6FCC               	movwf	(??_sprintf+2)& (0+255),b
  6313  0000BC  6BCD               	clrf	(??_sprintf+3)& (0+255),b
  6314  0000BE  51CA               	movf	??_sprintf& (0+255),w,b
  6315  0000C0  27CC               	addwf	(??_sprintf+2)& (0+255),f,b
  6316  0000C2  51CB               	movf	(??_sprintf+1)& (0+255),w,b
  6317  0000C4  23CD               	addwfc	(??_sprintf+3)& (0+255),f,b
  6318  0000C6  51CC               	movf	(??_sprintf+2)& (0+255),w,b
  6319  0000C8  27E9               	addwf	sprintf@width& (0+255),f,b
  6320  0000CA  51CD               	movf	(??_sprintf+3)& (0+255),w,b
  6321  0000CC  23EA               	addwfc	(sprintf@width+1)& (0+255),f,b
  6322                           
  6323                           ; BSR set to: 0
  6324  0000CE  4BC0               	infsnz	sprintf@f& (0+255),f,b
  6325  0000D0  2BC1               	incf	(sprintf@f+1)& (0+255),f,b
  6326                           
  6327                           ; BSR set to: 0
  6328                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  6329  0000D2  C0C0  FFF6         	movff	sprintf@f,tblptrl
  6330  0000D6  C0C1  FFF7         	movff	sprintf@f+1,tblptrh
  6331  0000DA                     	if	0	;tblptru may be non-zero
  6332  0000DA                     	endif
  6333  0000DA                     	if	0	;tblptru may be non-zero
  6334  0000DA                     	endif
  6335  0000DA  0008               	tblrd		*
  6336  0000DC  50F5               	movf	tablat,w,c
  6337  0000DE  EC64  F022         	call	_isdigit
  6338  0000E2  A0D8               	btfss	status,0,c
  6339  0000E4  D06F               	goto	l1803
  6340  0000E6  D7CF               	goto	l1800
  6341  0000E8                     
  6342                           ;doprnt.c: 643: flag |= 0x10;
  6343  0000E8  0100               	movlb	0	; () banked
  6344  0000EA  89EB               	bsf	sprintf@flag& (0+255),4,b
  6345                           
  6346                           ;doprnt.c: 644: goto loop;
  6347  0000EC  D06B               	goto	l1803
  6348  0000EE                     
  6349                           ; BSR set to: 0
  6350                           ;doprnt.c: 663: flag |= 0x400;
  6351                           
  6352                           ; BSR set to: 0
  6353  0000EE  85EC               	bsf	(sprintf@flag+1)& (0+255),2,b
  6354                           
  6355                           ; BSR set to: 0
  6356                           ;doprnt.c: 698: case 'i':
  6357                           ;doprnt.c: 699: break;
  6358                           
  6359                           ; BSR set to: 0
  6360                           
  6361                           ;doprnt.c: 697: case 'd':
  6362                           
  6363                           ;doprnt.c: 664: break;
  6364  0000F0  D092               	goto	l1808
  6365  0000F2                     
  6366                           ; BSR set to: 0
  6367                           ;doprnt.c: 718: case 'x':
  6368                           ;doprnt.c: 721: flag |= 0x80;
  6369                           
  6370                           ; BSR set to: 0
  6371                           
  6372                           ; BSR set to: 0
  6373  0000F2  8FEB               	bsf	sprintf@flag& (0+255),7,b
  6374                           
  6375                           ;doprnt.c: 723: break;
  6376  0000F4  D090               	goto	l1808
  6377  0000F6                     
  6378                           ; BSR set to: 0
  6379                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  6380                           
  6381                           ; BSR set to: 0
  6382  0000F6  C0D8  FFD9         	movff	sprintf@ap,fsr2l
  6383  0000FA  C0D9  FFDA         	movff	sprintf@ap+1,fsr2h
  6384  0000FE  CFDE F0D4          	movff	postinc2,sprintf@cp
  6385  000102  CFDD F0D5          	movff	postdec2,sprintf@cp+1
  6386                           
  6387                           ; BSR set to: 0
  6388  000106  0E02               	movlw	2
  6389  000108  27D8               	addwf	sprintf@ap& (0+255),f,b
  6390  00010A  0E00               	movlw	0
  6391  00010C  23D9               	addwfc	(sprintf@ap+1)& (0+255),f,b
  6392                           
  6393                           ; BSR set to: 0
  6394                           ;doprnt.c: 740: if(!cp)
  6395  00010E  51D4               	movf	sprintf@cp& (0+255),w,b
  6396  000110  11D5               	iorwf	(sprintf@cp+1)& (0+255),w,b
  6397  000112  A4D8               	btfss	status,2,c
  6398  000114  D004               	goto	l1814
  6399                           
  6400                           ; BSR set to: 0
  6401                           ;doprnt.c: 741: cp = "(null)";
  6402  000116  0ECB               	movlw	low STR_25
  6403  000118  6FD4               	movwf	sprintf@cp& (0+255),b
  6404  00011A  0E7F               	movlw	high STR_25
  6405  00011C  6FD5               	movwf	(sprintf@cp+1)& (0+255),b
  6406  00011E                     l1814:
  6407                           
  6408                           ; BSR set to: 0
  6409                           ;doprnt.c: 745: len = 0;
  6410                           
  6411                           ; BSR set to: 0
  6412  00011E  0E00               	movlw	0
  6413  000120  6FD7               	movwf	(sprintf@len+1)& (0+255),b
  6414  000122  0E00               	movlw	0
  6415  000124  6FD6               	movwf	sprintf@len& (0+255),b
  6416                           
  6417                           ;doprnt.c: 746: while(cp[len])
  6418  000126  D002               	goto	l1815
  6419  000128                     
  6420                           ; BSR set to: 0
  6421                           ;doprnt.c: 747: len++;
  6422                           
  6423                           ; BSR set to: 0
  6424  000128  4BD6               	infsnz	sprintf@len& (0+255),f,b
  6425  00012A  2BD7               	incf	(sprintf@len+1)& (0+255),f,b
  6426  00012C                     l1815:
  6427                           
  6428                           ; BSR set to: 0
  6429                           
  6430                           ; BSR set to: 0
  6431  00012C  51D6               	movf	sprintf@len& (0+255),w,b
  6432  00012E  25D4               	addwf	sprintf@cp& (0+255),w,b
  6433  000130  6FCA               	movwf	??_sprintf& (0+255),b
  6434  000132  51D7               	movf	(sprintf@len+1)& (0+255),w,b
  6435  000134  21D5               	addwfc	(sprintf@cp+1)& (0+255),w,b
  6436  000136  6FCB               	movwf	(??_sprintf+1)& (0+255),b
  6437  000138  C0CA  FFF6         	movff	??_sprintf,tblptrl
  6438  00013C  C0CB  FFF7         	movff	??_sprintf+1,tblptrh
  6439  000140                     	if	0	;tblptru may be non-zero
  6440  000140                     	endif
  6441  000140                     	if	0	;tblptru may be non-zero
  6442  000140                     	endif
  6443  000140  0008               	tblrd		*
  6444  000142  50F5               	movf	tablat,w,c
  6445  000144  0900               	iorlw	0
  6446  000146  A4D8               	btfss	status,2,c
  6447  000148  D7EF               	goto	l1816
  6448                           
  6449                           ; BSR set to: 0
  6450                           ;doprnt.c: 757: if(width > len)
  6451                           
  6452                           ; BSR set to: 0
  6453  00014A  51E9               	movf	sprintf@width& (0+255),w,b
  6454  00014C  5DD6               	subwf	sprintf@len& (0+255),w,b
  6455  00014E  51EA               	movf	(sprintf@width+1)& (0+255),w,b
  6456  000150  59D7               	subwfb	(sprintf@len+1)& (0+255),w,b
  6457  000152  B0D8               	btfsc	status,0,c
  6458  000154  D005               	goto	l1818
  6459                           
  6460                           ; BSR set to: 0
  6461                           ;doprnt.c: 758: width -= len;
  6462  000156  51D6               	movf	sprintf@len& (0+255),w,b
  6463  000158  5FE9               	subwf	sprintf@width& (0+255),f,b
  6464  00015A  51D7               	movf	(sprintf@len+1)& (0+255),w,b
  6465  00015C  5BEA               	subwfb	(sprintf@width+1)& (0+255),f,b
  6466  00015E  D00D               	goto	l1820
  6467  000160                     l1818:
  6468                           
  6469                           ; BSR set to: 0
  6470                           ;doprnt.c: 759: else
  6471                           ;doprnt.c: 760: width = 0;
  6472                           
  6473                           ; BSR set to: 0
  6474  000160  0E00               	movlw	0
  6475  000162  6FEA               	movwf	(sprintf@width+1)& (0+255),b
  6476  000164  0E00               	movlw	0
  6477  000166  6FE9               	movwf	sprintf@width& (0+255),b
  6478                           
  6479                           ; BSR set to: 0
  6480                           ;doprnt.c: 764: while(width--)
  6481  000168  D008               	goto	l1820
  6482  00016A                     l7689:
  6483                           
  6484                           ; BSR set to: 0
  6485                           ;doprnt.c: 765: ((*sp++ = (' ')));
  6486  00016A  C0BE  FFD9         	movff	sprintf@sp,fsr2l
  6487  00016E  C0BF  FFDA         	movff	sprintf@sp+1,fsr2h
  6488  000172  0E20               	movlw	32
  6489  000174  6EDF               	movwf	indf2,c
  6490                           
  6491                           ; BSR set to: 0
  6492  000176  4BBE               	infsnz	sprintf@sp& (0+255),f,b
  6493  000178  2BBF               	incf	(sprintf@sp+1)& (0+255),f,b
  6494  00017A                     l1820:
  6495                           
  6496                           ; BSR set to: 0
  6497                           
  6498                           ; BSR set to: 0
  6499  00017A  07E9               	decf	sprintf@width& (0+255),f,b
  6500  00017C  A0D8               	btfss	status,0,c
  6501  00017E  07EA               	decf	(sprintf@width+1)& (0+255),f,b
  6502  000180  29E9               	incf	sprintf@width& (0+255),w,b
  6503  000182  E1F3               	bnz	l7689
  6504  000184  29EA               	incf	(sprintf@width+1)& (0+255),w,b
  6505  000186  B4D8               	btfsc	status,2,c
  6506  000188  D010               	goto	l1823
  6507  00018A  D7EF               	goto	l1821
  6508  00018C                     l7695:
  6509                           
  6510                           ; BSR set to: 0
  6511                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
  6512  00018C  C0D4  FFF6         	movff	sprintf@cp,tblptrl
  6513  000190  C0D5  FFF7         	movff	sprintf@cp+1,tblptrh
  6514  000194                     	if	0	;tblptru may be non-zero
  6515  000194                     	endif
  6516  000194                     	if	0	;tblptru may be non-zero
  6517  000194                     	endif
  6518  000194  C0BE  FFD9         	movff	sprintf@sp,fsr2l
  6519  000198  C0BF  FFDA         	movff	sprintf@sp+1,fsr2h
  6520  00019C  0008               	tblrd		*
  6521  00019E  CFF5 FFDF          	movff	tablat,indf2
  6522                           
  6523                           ; BSR set to: 0
  6524  0001A2  4BD4               	infsnz	sprintf@cp& (0+255),f,b
  6525  0001A4  2BD5               	incf	(sprintf@cp+1)& (0+255),f,b
  6526                           
  6527                           ; BSR set to: 0
  6528  0001A6  4BBE               	infsnz	sprintf@sp& (0+255),f,b
  6529  0001A8  2BBF               	incf	(sprintf@sp+1)& (0+255),f,b
  6530  0001AA                     l1823:
  6531                           
  6532                           ; BSR set to: 0
  6533                           
  6534                           ; BSR set to: 0
  6535  0001AA  07D6               	decf	sprintf@len& (0+255),f,b
  6536  0001AC  A0D8               	btfss	status,0,c
  6537  0001AE  07D7               	decf	(sprintf@len+1)& (0+255),f,b
  6538  0001B0  29D6               	incf	sprintf@len& (0+255),w,b
  6539  0001B2  E1EC               	bnz	l7695
  6540  0001B4  29D7               	incf	(sprintf@len+1)& (0+255),w,b
  6541  0001B6  B4D8               	btfsc	status,2,c
  6542  0001B8  EFDD  F005         	goto	u7440
  6543  0001BC  D7E7               	goto	l1824
  6544  0001BE                     
  6545                           ; BSR set to: 0
  6546                           ;doprnt.c: 818: flag |= 0xC0;
  6547                           
  6548                           ; BSR set to: 0
  6549  0001BE  0EC0               	movlw	192
  6550  0001C0  13EB               	iorwf	sprintf@flag& (0+255),f,b
  6551                           
  6552                           ; BSR set to: 0
  6553                           ;doprnt.c: 822: }
  6554                           
  6555                           ;doprnt.c: 819: break;
  6556  0001C2  D029               	goto	l1808
  6557  0001C4                     l1803:
  6558                           
  6559                           ; BSR set to: 0
  6560  0001C4  C0C0  FFF6         	movff	sprintf@f,tblptrl
  6561  0001C8  C0C1  FFF7         	movff	sprintf@f+1,tblptrh
  6562  0001CC  0100               	movlb	0	; () banked
  6563  0001CE  4BC0               	infsnz	sprintf@f& (0+255),f,b
  6564  0001D0  2BC1               	incf	(sprintf@f+1)& (0+255),f,b
  6565  0001D2                     	if	0	;tblptru may be non-zero
  6566  0001D2                     	endif
  6567  0001D2                     	if	0	;tblptru may be non-zero
  6568  0001D2                     	endif
  6569  0001D2  0008               	tblrd		*
  6570  0001D4  CFF5 F0ED          	movff	tablat,sprintf@c
  6571  0001D8  51ED               	movf	sprintf@c& (0+255),w,b
  6572                           
  6573                           ; Switch size 1, requested type "space"
  6574                           ; Number of cases is 9, Range of values is 0 to 120
  6575                           ; switch strategies available:
  6576                           ; Name         Instructions Cycles
  6577                           ; simple_byte           28    15 (average)
  6578                           ;	Chosen strategy is simple_byte
  6579  0001DA  0A00               	xorlw	0	; case 0
  6580  0001DC  B4D8               	btfsc	status,2,c
  6581  0001DE  EFEA  F005         	goto	u7450
  6582  0001E2  0A58               	xorlw	88	; case 88
  6583  0001E4  B4D8               	btfsc	status,2,c
  6584  0001E6  D785               	goto	l1811
  6585  0001E8  0A3C               	xorlw	60	; case 100
  6586  0001EA  B4D8               	btfsc	status,2,c
  6587  0001EC  D014               	goto	l1808
  6588  0001EE  0A02               	xorlw	2	; case 102
  6589  0001F0  B4D8               	btfsc	status,2,c
  6590  0001F2  D77D               	goto	l1807
  6591  0001F4  0A0F               	xorlw	15	; case 105
  6592  0001F6  B4D8               	btfsc	status,2,c
  6593  0001F8  D00E               	goto	l1808
  6594  0001FA  0A05               	xorlw	5	; case 108
  6595  0001FC  B4D8               	btfsc	status,2,c
  6596  0001FE  D774               	goto	l1806
  6597  000200  0A1F               	xorlw	31	; case 115
  6598  000202  B4D8               	btfsc	status,2,c
  6599  000204  D778               	goto	l1813
  6600  000206  0A06               	xorlw	6	; case 117
  6601  000208  B4D8               	btfsc	status,2,c
  6602  00020A  D7D9               	goto	l1827
  6603  00020C  0A0D               	xorlw	13	; case 120
  6604  00020E  B4D8               	btfsc	status,2,c
  6605  000210  D770               	goto	l1811
  6606  000212  EFDD  F005         	goto	u7440
  6607  000216                     l1808:
  6608                           
  6609                           ; BSR set to: 0
  6610                           ;doprnt.c: 825: if(flag & (0x700)) {
  6611                           
  6612                           ; BSR set to: 0
  6613  000216  0E07               	movlw	7
  6614  000218  15EC               	andwf	(sprintf@flag+1)& (0+255),w,b
  6615  00021A  B4D8               	btfsc	status,2,c
  6616  00021C  D327               	goto	l1828
  6617                           
  6618                           ; BSR set to: 0
  6619                           ;doprnt.c: 829: prec = 6;
  6620  00021E  0E00               	movlw	0
  6621  000220  6FDB               	movwf	(sprintf@prec+1)& (0+255),b
  6622  000222  0E06               	movlw	6
  6623  000224  6FDA               	movwf	sprintf@prec& (0+255),b
  6624                           
  6625                           ; BSR set to: 0
  6626                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  6627  000226  C0D8  FFD9         	movff	sprintf@ap,fsr2l
  6628  00022A  C0D9  FFDA         	movff	sprintf@ap+1,fsr2h
  6629  00022E  CFDE F0E6          	movff	postinc2,sprintf@fval
  6630  000232  CFDE F0E7          	movff	postinc2,sprintf@fval+1
  6631  000236  CFDD F0E8          	movff	postdec2,sprintf@fval+2
  6632                           
  6633                           ; BSR set to: 0
  6634  00023A  0E03               	movlw	3
  6635  00023C  27D8               	addwf	sprintf@ap& (0+255),f,b
  6636  00023E  0E00               	movlw	0
  6637  000240  23D9               	addwfc	(sprintf@ap+1)& (0+255),f,b
  6638                           
  6639                           ; BSR set to: 0
  6640                           ;doprnt.c: 831: if(fval < 0.0) {
  6641  000242  AFE8               	btfss	(sprintf@fval+2)& (0+255),7,b
  6642  000244  D011               	goto	l1829
  6643                           
  6644                           ; BSR set to: 0
  6645                           ;doprnt.c: 832: fval = -fval;
  6646  000246  C0E6  F060         	movff	sprintf@fval,___ftneg@f1
  6647  00024A  C0E7  F061         	movff	sprintf@fval+1,___ftneg@f1+1
  6648  00024E  C0E8  F062         	movff	sprintf@fval+2,___ftneg@f1+2
  6649  000252  EC1A  F022         	call	___ftneg	;wreg free
  6650  000256  C060  F0E6         	movff	?___ftneg,sprintf@fval
  6651  00025A  C061  F0E7         	movff	?___ftneg+1,sprintf@fval+1
  6652  00025E  C062  F0E8         	movff	?___ftneg+2,sprintf@fval+2
  6653                           
  6654                           ;doprnt.c: 833: flag |= 0x03;
  6655  000262  0E03               	movlw	3
  6656  000264  0100               	movlb	0	; () banked
  6657  000266  13EB               	iorwf	sprintf@flag& (0+255),f,b
  6658  000268                     l1829:
  6659                           
  6660                           ; BSR set to: 0
  6661                           ;doprnt.c: 834: }
  6662                           ;doprnt.c: 835: exp = 0;
  6663                           
  6664                           ; BSR set to: 0
  6665  000268  0E00               	movlw	0
  6666  00026A  6FE1               	movwf	(sprintf@exp+1)& (0+255),b
  6667  00026C  0E00               	movlw	0
  6668  00026E  6FE0               	movwf	sprintf@exp& (0+255),b
  6669                           
  6670                           ; BSR set to: 0
  6671                           ;doprnt.c: 836: if( fval!=0) {
  6672  000270  51E6               	movf	sprintf@fval& (0+255),w,b
  6673  000272  11E7               	iorwf	(sprintf@fval+1)& (0+255),w,b
  6674  000274  11E8               	iorwf	(sprintf@fval+2)& (0+255),w,b
  6675  000276  B4D8               	btfsc	status,2,c
  6676  000278  D088               	goto	l1834
  6677                           
  6678                           ; BSR set to: 0
  6679                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  6680  00027A  0E82               	movlw	130
  6681  00027C  6FCA               	movwf	??_sprintf& (0+255),b
  6682  00027E  0EFF               	movlw	255
  6683  000280  6FCB               	movwf	(??_sprintf+1)& (0+255),b
  6684  000282  C0E6  F0CC         	movff	sprintf@fval,??_sprintf+2
  6685  000286  C0E7  F0CD         	movff	sprintf@fval+1,??_sprintf+3
  6686  00028A  C0E8  F0CE         	movff	sprintf@fval+2,??_sprintf+4
  6687  00028E  C0E9  F0CF         	movff	sprintf@fval+3,??_sprintf+5
  6688  000292  0E10               	movlw	16
  6689  000294  D005               	goto	u6980
  6690  000296                     u6985:
  6691  000296  90D8               	bcf	status,0,c
  6692  000298  33CF               	rrcf	(??_sprintf+5)& (0+255),f,b
  6693  00029A  33CE               	rrcf	(??_sprintf+4)& (0+255),f,b
  6694  00029C  33CD               	rrcf	(??_sprintf+3)& (0+255),f,b
  6695  00029E  33CC               	rrcf	(??_sprintf+2)& (0+255),f,b
  6696  0002A0                     u6980:
  6697  0002A0  2EE8               	decfsz	wreg,f,c
  6698  0002A2  D7F9               	goto	u6985
  6699  0002A4  51CC               	movf	(??_sprintf+2)& (0+255),w,b
  6700  0002A6  25CA               	addwf	??_sprintf& (0+255),w,b
  6701  0002A8  6FE0               	movwf	sprintf@exp& (0+255),b
  6702  0002AA  0E00               	movlw	0
  6703  0002AC  21CB               	addwfc	(??_sprintf+1)& (0+255),w,b
  6704  0002AE  6FE1               	movwf	(sprintf@exp+1)& (0+255),b
  6705                           
  6706                           ; BSR set to: 0
  6707                           ;doprnt.c: 838: exp--;
  6708  0002B0  07E0               	decf	sprintf@exp& (0+255),f,b
  6709  0002B2  A0D8               	btfss	status,0,c
  6710  0002B4  07E1               	decf	(sprintf@exp+1)& (0+255),f,b
  6711                           
  6712                           ; BSR set to: 0
  6713                           ;doprnt.c: 839: exp *= 3;
  6714  0002B6  C0E0  F06E         	movff	sprintf@exp,___wmul@multiplier
  6715  0002BA  C0E1  F06F         	movff	sprintf@exp+1,___wmul@multiplier+1
  6716  0002BE  0E00               	movlw	0
  6717  0002C0  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6718  0002C2  0E03               	movlw	3
  6719  0002C4  6F70               	movwf	___wmul@multiplicand& (0+255),b
  6720  0002C6  ECE0  F021         	call	___wmul	;wreg free
  6721  0002CA  C06E  F0E0         	movff	?___wmul,sprintf@exp
  6722  0002CE  C06F  F0E1         	movff	?___wmul+1,sprintf@exp+1
  6723                           
  6724                           ;doprnt.c: 840: exp /= 10;
  6725  0002D2  C0E0  F066         	movff	sprintf@exp,___awdiv@dividend
  6726  0002D6  C0E1  F067         	movff	sprintf@exp+1,___awdiv@dividend+1
  6727  0002DA  0E00               	movlw	0
  6728  0002DC  0100               	movlb	0	; () banked
  6729  0002DE  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  6730  0002E0  0E0A               	movlw	10
  6731  0002E2  6F68               	movwf	___awdiv@divisor& (0+255),b
  6732  0002E4  ECE2  F01C         	call	___awdiv	;wreg free
  6733  0002E8  C066  F0E0         	movff	?___awdiv,sprintf@exp
  6734  0002EC  C067  F0E1         	movff	?___awdiv+1,sprintf@exp+1
  6735                           
  6736                           ;doprnt.c: 841: if(exp < 0)
  6737  0002F0  0100               	movlb	0	; () banked
  6738  0002F2  AFE1               	btfss	(sprintf@exp+1)& (0+255),7,b
  6739  0002F4  D003               	goto	l1831
  6740                           
  6741                           ; BSR set to: 0
  6742                           ;doprnt.c: 842: exp--;
  6743  0002F6  07E0               	decf	sprintf@exp& (0+255),f,b
  6744  0002F8  A0D8               	btfss	status,0,c
  6745  0002FA  07E1               	decf	(sprintf@exp+1)& (0+255),f,b
  6746  0002FC                     l1831:
  6747                           
  6748                           ; BSR set to: 0
  6749                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  6750                           
  6751                           ; BSR set to: 0
  6752  0002FC  51E0               	movf	sprintf@exp& (0+255),w,b
  6753  0002FE  0800               	sublw	0
  6754  000300  ECF1  F005         	call	_scale
  6755  000304  C08F  F0DC         	movff	?_scale,sprintf@tmpval
  6756  000308  C090  F0DD         	movff	?_scale+1,sprintf@tmpval+1
  6757  00030C  C091  F0DE         	movff	?_scale+2,sprintf@tmpval+2
  6758                           
  6759                           ;doprnt.c: 847: tmpval.integ *= fval;
  6760  000310  C0DC  F080         	movff	sprintf@tmpval,___ftmul@f1
  6761  000314  C0DD  F081         	movff	sprintf@tmpval+1,___ftmul@f1+1
  6762  000318  C0DE  F082         	movff	sprintf@tmpval+2,___ftmul@f1+2
  6763  00031C  C0E6  F083         	movff	sprintf@fval,___ftmul@f2
  6764  000320  C0E7  F084         	movff	sprintf@fval+1,___ftmul@f2+1
  6765  000324  C0E8  F085         	movff	sprintf@fval+2,___ftmul@f2+2
  6766  000328  EC00  F016         	call	___ftmul	;wreg free
  6767  00032C  C080  F0DC         	movff	?___ftmul,sprintf@tmpval
  6768  000330  C081  F0DD         	movff	?___ftmul+1,sprintf@tmpval+1
  6769  000334  C082  F0DE         	movff	?___ftmul+2,sprintf@tmpval+2
  6770                           
  6771                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  6772  000338  C0DC  F060         	movff	sprintf@tmpval,___ftge@ff1
  6773  00033C  C0DD  F061         	movff	sprintf@tmpval+1,___ftge@ff1+1
  6774  000340  C0DE  F062         	movff	sprintf@tmpval+2,___ftge@ff1+2
  6775  000344  0E00               	movlw	0
  6776  000346  0100               	movlb	0	; () banked
  6777  000348  6F63               	movwf	___ftge@ff2& (0+255),b
  6778  00034A  0E80               	movlw	128
  6779  00034C  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
  6780  00034E  0E3F               	movlw	63
  6781  000350  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
  6782  000352  EC50  F01C         	call	___ftge	;wreg free
  6783  000356  0100               	movlb	0	; () banked
  6784  000358  B0D8               	btfsc	status,0,c
  6785  00035A  D004               	goto	l1832
  6786                           
  6787                           ; BSR set to: 0
  6788                           ;doprnt.c: 849: exp--;
  6789  00035C  07E0               	decf	sprintf@exp& (0+255),f,b
  6790  00035E  A0D8               	btfss	status,0,c
  6791  000360  07E1               	decf	(sprintf@exp+1)& (0+255),f,b
  6792  000362  D013               	goto	l1834
  6793  000364                     l1832:
  6794                           
  6795                           ; BSR set to: 0
  6796                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  6797                           
  6798                           ; BSR set to: 0
  6799  000364  C0DC  F060         	movff	sprintf@tmpval,___ftge@ff1
  6800  000368  C0DD  F061         	movff	sprintf@tmpval+1,___ftge@ff1+1
  6801  00036C  C0DE  F062         	movff	sprintf@tmpval+2,___ftge@ff1+2
  6802  000370  0E00               	movlw	0
  6803  000372  6F63               	movwf	___ftge@ff2& (0+255),b
  6804  000374  0E20               	movlw	32
  6805  000376  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
  6806  000378  0E41               	movlw	65
  6807  00037A  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
  6808  00037C  EC50  F01C         	call	___ftge	;wreg free
  6809  000380  0100               	movlb	0	; () banked
  6810  000382  A0D8               	btfss	status,0,c
  6811  000384  D002               	goto	l1834
  6812                           
  6813                           ; BSR set to: 0
  6814                           ;doprnt.c: 851: exp++;
  6815  000386  4BE0               	infsnz	sprintf@exp& (0+255),f,b
  6816  000388  2BE1               	incf	(sprintf@exp+1)& (0+255),f,b
  6817  00038A                     l1834:
  6818                           
  6819                           ; BSR set to: 0
  6820                           ;doprnt.c: 852: }
  6821                           ;doprnt.c: 1112: if(prec <= 12)
  6822                           
  6823                           ; BSR set to: 0
  6824                           
  6825                           ; BSR set to: 0
  6826                           
  6827                           ; BSR set to: 0
  6828  00038A  BFDB               	btfsc	(sprintf@prec+1)& (0+255),7,b
  6829  00038C  D006               	goto	u7020
  6830  00038E  51DB               	movf	(sprintf@prec+1)& (0+255),w,b
  6831  000390  E11B               	bnz	l7755
  6832  000392  0E0D               	movlw	13
  6833  000394  5DDA               	subwf	sprintf@prec& (0+255),w,b
  6834  000396  B0D8               	btfsc	status,0,c
  6835  000398  D017               	goto	l1835
  6836  00039A                     u7020:
  6837                           
  6838                           ; BSR set to: 0
  6839                           ;doprnt.c: 1113: fval += fround(prec);
  6840  00039A  C0E6  F074         	movff	sprintf@fval,___ftadd@f1
  6841  00039E  C0E7  F075         	movff	sprintf@fval+1,___ftadd@f1+1
  6842  0003A2  C0E8  F076         	movff	sprintf@fval+2,___ftadd@f1+2
  6843  0003A6  51DA               	movf	sprintf@prec& (0+255),w,b
  6844  0003A8  EC4D  F009         	call	_fround
  6845  0003AC  C08F  F077         	movff	?_fround,___ftadd@f2
  6846  0003B0  C090  F078         	movff	?_fround+1,___ftadd@f2+1
  6847  0003B4  C091  F079         	movff	?_fround+2,___ftadd@f2+2
  6848  0003B8  ECD8  F00C         	call	___ftadd	;wreg free
  6849  0003BC  C074  F0E6         	movff	?___ftadd,sprintf@fval
  6850  0003C0  C075  F0E7         	movff	?___ftadd+1,sprintf@fval+1
  6851  0003C4  C076  F0E8         	movff	?___ftadd+2,sprintf@fval+2
  6852  0003C8                     l1835:
  6853  0003C8                     l7755:
  6854                           
  6855                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  6856  0003C8  0100               	movlb	0	; () banked
  6857  0003CA  BFE1               	btfsc	(sprintf@exp+1)& (0+255),7,b
  6858  0003CC  D006               	goto	u7030
  6859  0003CE  51E1               	movf	(sprintf@exp+1)& (0+255),w,b
  6860  0003D0  E11F               	bnz	l7763
  6861  0003D2  0E0A               	movlw	10
  6862  0003D4  5DE0               	subwf	sprintf@exp& (0+255),w,b
  6863  0003D6  B0D8               	btfsc	status,0,c
  6864  0003D8  D01B               	goto	u7060
  6865  0003DA                     u7030:
  6866                           
  6867                           ; BSR set to: 0
  6868  0003DA  51E6               	movf	sprintf@fval& (0+255),w,b
  6869  0003DC  11E7               	iorwf	(sprintf@fval+1)& (0+255),w,b
  6870  0003DE  11E8               	iorwf	(sprintf@fval+2)& (0+255),w,b
  6871  0003E0  B4D8               	btfsc	status,2,c
  6872  0003E2  D054               	goto	l1836
  6873                           
  6874                           ; BSR set to: 0
  6875  0003E4  C0E6  F0AF         	movff	sprintf@fval,___fttol@f1
  6876  0003E8  C0E7  F0B0         	movff	sprintf@fval+1,___fttol@f1+1
  6877  0003EC  C0E8  F0B1         	movff	sprintf@fval+2,___fttol@f1+2
  6878  0003F0  EC84  F015         	call	___fttol	;wreg free
  6879  0003F4  0100               	movlb	0	; () banked
  6880  0003F6  51AF               	movf	?___fttol& (0+255),w,b
  6881  0003F8  11B0               	iorwf	(?___fttol+1)& (0+255),w,b
  6882  0003FA  11B1               	iorwf	(?___fttol+2)& (0+255),w,b
  6883  0003FC  11B2               	iorwf	(?___fttol+3)& (0+255),w,b
  6884  0003FE  B4D8               	btfsc	status,2,c
  6885                           
  6886                           ; BSR set to: 0
  6887  000400  BFE1               	btfsc	(sprintf@exp+1)& (0+255),7,b
  6888  000402  D044               	goto	l1836
  6889  000404  51E1               	movf	(sprintf@exp+1)& (0+255),w,b
  6890  000406  E104               	bnz	l7763
  6891  000408  0E02               	movlw	2
  6892  00040A  5DE0               	subwf	sprintf@exp& (0+255),w,b
  6893  00040C  A0D8               	btfss	status,0,c
  6894  00040E  D03E               	goto	l1836
  6895  000410                     u7060:
  6896  000410                     l7763:
  6897                           
  6898                           ; BSR set to: 0
  6899                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  6900  000410  C0DC  F060         	movff	sprintf@tmpval,___ftge@ff1
  6901  000414  C0DD  F061         	movff	sprintf@tmpval+1,___ftge@ff1+1
  6902  000418  C0DE  F062         	movff	sprintf@tmpval+2,___ftge@ff1+2
  6903  00041C  0E70               	movlw	112
  6904  00041E  6F63               	movwf	___ftge@ff2& (0+255),b
  6905  000420  0E89               	movlw	137
  6906  000422  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
  6907  000424  0E40               	movlw	64
  6908  000426  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
  6909  000428  EC50  F01C         	call	___ftge	;wreg free
  6910  00042C  0100               	movlb	0	; () banked
  6911  00042E  B0D8               	btfsc	status,0,c
  6912  000430  D002               	goto	l1839
  6913                           
  6914                           ; BSR set to: 0
  6915                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  6916  000432  0EF7               	movlw	247
  6917  000434  D001               	goto	L5
  6918  000436                     l1839:
  6919                           
  6920                           ; BSR set to: 0
  6921                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  6922                           
  6923                           ; BSR set to: 0
  6924  000436  0EF8               	movlw	248
  6925  000438                     L5:
  6926  000438  27E0               	addwf	sprintf@exp& (0+255),f,b
  6927  00043A  0EFF               	movlw	255
  6928  00043C  23E1               	addwfc	(sprintf@exp+1)& (0+255),f,b
  6929                           
  6930                           ; BSR set to: 0
  6931                           ;doprnt.c: 1124: }
  6932                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  6933                           
  6934                           ; BSR set to: 0
  6935  00043E  51E0               	movf	sprintf@exp& (0+255),w,b
  6936  000440  ECF1  F005         	call	_scale
  6937  000444  C08F  F0DC         	movff	?_scale,sprintf@tmpval
  6938  000448  C090  F0DD         	movff	?_scale+1,sprintf@tmpval+1
  6939  00044C  C091  F0DE         	movff	?_scale+2,sprintf@tmpval+2
  6940                           
  6941                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  6942  000450  C0E6  F060         	movff	sprintf@fval,__tdiv_to_l_@f1
  6943  000454  C0E7  F061         	movff	sprintf@fval+1,__tdiv_to_l_@f1+1
  6944  000458  C0E8  F062         	movff	sprintf@fval+2,__tdiv_to_l_@f1+2
  6945  00045C  C0DC  F063         	movff	sprintf@tmpval,__tdiv_to_l_@f2
  6946  000460  C0DD  F064         	movff	sprintf@tmpval+1,__tdiv_to_l_@f2+1
  6947  000464  C0DE  F065         	movff	sprintf@tmpval+2,__tdiv_to_l_@f2+2
  6948  000468  ECF1  F00E         	call	__tdiv_to_l_	;wreg free
  6949  00046C  C060  F0E2         	movff	?__tdiv_to_l_,sprintf@val
  6950  000470  C061  F0E3         	movff	?__tdiv_to_l_+1,sprintf@val+1
  6951  000474  C062  F0E4         	movff	?__tdiv_to_l_+2,sprintf@val+2
  6952  000478  C063  F0E5         	movff	?__tdiv_to_l_+3,sprintf@val+3
  6953                           
  6954                           ;doprnt.c: 1129: fval = 0.0;
  6955  00047C  0E00               	movlw	0
  6956  00047E  0100               	movlb	0	; () banked
  6957  000480  6FE6               	movwf	sprintf@fval& (0+255),b
  6958  000482  0E00               	movlw	0
  6959  000484  6FE7               	movwf	(sprintf@fval+1)& (0+255),b
  6960  000486  0E00               	movlw	0
  6961  000488  6FE8               	movwf	(sprintf@fval+2)& (0+255),b
  6962                           
  6963                           ;doprnt.c: 1130: } else {
  6964  00048A  D033               	goto	l1845
  6965  00048C                     l1836:
  6966                           
  6967                           ; BSR set to: 0
  6968                           ;doprnt.c: 1131: val = (unsigned long)fval;
  6969                           
  6970                           ; BSR set to: 0
  6971  00048C  C0E6  F0AF         	movff	sprintf@fval,___fttol@f1
  6972  000490  C0E7  F0B0         	movff	sprintf@fval+1,___fttol@f1+1
  6973  000494  C0E8  F0B1         	movff	sprintf@fval+2,___fttol@f1+2
  6974  000498  EC84  F015         	call	___fttol	;wreg free
  6975  00049C  C0AF  F0E2         	movff	?___fttol,sprintf@val
  6976  0004A0  C0B0  F0E3         	movff	?___fttol+1,sprintf@val+1
  6977  0004A4  C0B1  F0E4         	movff	?___fttol+2,sprintf@val+2
  6978  0004A8  C0B2  F0E5         	movff	?___fttol+3,sprintf@val+3
  6979                           
  6980                           ;doprnt.c: 1132: fval -= (double)val;
  6981  0004AC  C0E6  F080         	movff	sprintf@fval,___ftsub@f1
  6982  0004B0  C0E7  F081         	movff	sprintf@fval+1,___ftsub@f1+1
  6983  0004B4  C0E8  F082         	movff	sprintf@fval+2,___ftsub@f1+2
  6984  0004B8  C0E2  F068         	movff	sprintf@val,___lltoft@c
  6985  0004BC  C0E3  F069         	movff	sprintf@val+1,___lltoft@c+1
  6986  0004C0  C0E4  F06A         	movff	sprintf@val+2,___lltoft@c+2
  6987  0004C4  C0E5  F06B         	movff	sprintf@val+3,___lltoft@c+3
  6988  0004C8  ECFA  F01E         	call	___lltoft	;wreg free
  6989  0004CC  C068  F083         	movff	?___lltoft,___ftsub@f2
  6990  0004D0  C069  F084         	movff	?___lltoft+1,___ftsub@f2+1
  6991  0004D4  C06A  F085         	movff	?___lltoft+2,___ftsub@f2+2
  6992  0004D8  EC6A  F020         	call	___ftsub	;wreg free
  6993  0004DC  C080  F0E6         	movff	?___ftsub,sprintf@fval
  6994  0004E0  C081  F0E7         	movff	?___ftsub+1,sprintf@fval+1
  6995  0004E4  C082  F0E8         	movff	?___ftsub+2,sprintf@fval+2
  6996                           
  6997                           ;doprnt.c: 1133: exp = 0;
  6998  0004E8  0E00               	movlw	0
  6999  0004EA  0100               	movlb	0	; () banked
  7000  0004EC  6FE1               	movwf	(sprintf@exp+1)& (0+255),b
  7001  0004EE  0E00               	movlw	0
  7002  0004F0  6FE0               	movwf	sprintf@exp& (0+255),b
  7003  0004F2                     l1845:
  7004                           
  7005                           ; BSR set to: 0
  7006                           ;doprnt.c: 1134: }
  7007                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  7008                           
  7009                           ; BSR set to: 0
  7010  0004F2  0E01               	movlw	1
  7011  0004F4  6FED               	movwf	sprintf@c& (0+255),b
  7012  0004F6                     l7783:
  7013                           
  7014                           ; BSR set to: 0
  7015  0004F6  0E0A               	movlw	10
  7016  0004F8  19ED               	xorwf	sprintf@c& (0+255),w,b
  7017  0004FA  B4D8               	btfsc	status,2,c
  7018  0004FC  D018               	goto	u7100
  7019                           
  7020                           ; BSR set to: 0
  7021                           ;doprnt.c: 1137: if(val < dpowers[c])
  7022                           
  7023                           ; BSR set to: 0
  7024                           
  7025                           ; BSR set to: 0
  7026  0004FE  51ED               	movf	sprintf@c& (0+255),w,b
  7027  000500  0D04               	mullw	4
  7028  000502  0E51               	movlw	low _dpowers
  7029  000504  24F3               	addwf	prodl,w,c
  7030  000506  6EF6               	movwf	tblptrl,c
  7031  000508  0E7D               	movlw	high _dpowers
  7032  00050A  20F4               	addwfc	prodh,w,c
  7033  00050C  6EF7               	movwf	tblptrh,c
  7034  00050E                     	if	0	;There are less than 3 active tblptr bytes
  7035  00050E                     	endif
  7036  00050E  0009               	tblrd		*+
  7037  000510  50F5               	movf	tablat,w,c
  7038  000512  5DE2               	subwf	sprintf@val& (0+255),w,b
  7039  000514  0009               	tblrd		*+
  7040  000516  50F5               	movf	tablat,w,c
  7041  000518  59E3               	subwfb	(sprintf@val+1)& (0+255),w,b
  7042  00051A  0009               	tblrd		*+
  7043  00051C  50F5               	movf	tablat,w,c
  7044  00051E  59E4               	subwfb	(sprintf@val+2)& (0+255),w,b
  7045  000520  0009               	tblrd		*+
  7046  000522  50F5               	movf	tablat,w,c
  7047  000524  59E5               	subwfb	(sprintf@val+3)& (0+255),w,b
  7048  000526  A0D8               	btfss	status,0,c
  7049  000528  D002               	goto	u7100
  7050                           
  7051                           ; BSR set to: 0
  7052                           
  7053                           ; BSR set to: 0
  7054                           
  7055                           ; BSR set to: 0
  7056                           ;doprnt.c: 1138: break;
  7057  00052A  2BED               	incf	sprintf@c& (0+255),f,b
  7058  00052C  D7E4               	goto	l7783
  7059  00052E                     u7100:
  7060                           
  7061                           ; BSR set to: 0
  7062                           ;doprnt.c: 1142: width -= prec + c + exp;
  7063                           
  7064                           ; BSR set to: 0
  7065  00052E  C0ED  F0CA         	movff	sprintf@c,??_sprintf
  7066  000532  6BCB               	clrf	(??_sprintf+1)& (0+255),b
  7067  000534  BFCA               	btfsc	??_sprintf& (0+255),7,b
  7068  000536  07CB               	decf	(??_sprintf+1)& (0+255),f,b
  7069  000538  51DA               	movf	sprintf@prec& (0+255),w,b
  7070  00053A  27CA               	addwf	??_sprintf& (0+255),f,b
  7071  00053C  51DB               	movf	(sprintf@prec+1)& (0+255),w,b
  7072  00053E  23CB               	addwfc	(??_sprintf+1)& (0+255),f,b
  7073  000540  51E0               	movf	sprintf@exp& (0+255),w,b
  7074  000542  27CA               	addwf	??_sprintf& (0+255),f,b
  7075  000544  51E1               	movf	(sprintf@exp+1)& (0+255),w,b
  7076  000546  23CB               	addwfc	(??_sprintf+1)& (0+255),f,b
  7077  000548  51CA               	movf	??_sprintf& (0+255),w,b
  7078  00054A  5FE9               	subwf	sprintf@width& (0+255),f,b
  7079  00054C  51CB               	movf	(??_sprintf+1)& (0+255),w,b
  7080  00054E  5BEA               	subwfb	(sprintf@width+1)& (0+255),f,b
  7081                           
  7082                           ;doprnt.c: 1143: if(
  7083                           ;doprnt.c: 1147: prec)
  7084  000550  51DA               	movf	sprintf@prec& (0+255),w,b
  7085  000552  11DB               	iorwf	(sprintf@prec+1)& (0+255),w,b
  7086  000554  B4D8               	btfsc	status,2,c
  7087  000556  D003               	goto	l1849
  7088                           
  7089                           ; BSR set to: 0
  7090                           ;doprnt.c: 1148: width--;
  7091  000558  07E9               	decf	sprintf@width& (0+255),f,b
  7092  00055A  A0D8               	btfss	status,0,c
  7093  00055C  07EA               	decf	(sprintf@width+1)& (0+255),f,b
  7094  00055E                     l1849:
  7095                           
  7096                           ; BSR set to: 0
  7097                           ;doprnt.c: 1149: if(flag & 0x03)
  7098                           
  7099                           ; BSR set to: 0
  7100  00055E  0E03               	movlw	3
  7101  000560  15EB               	andwf	sprintf@flag& (0+255),w,b
  7102  000562  6FCA               	movwf	??_sprintf& (0+255),b
  7103  000564  0E00               	movlw	0
  7104  000566  15EC               	andwf	(sprintf@flag+1)& (0+255),w,b
  7105  000568  6FCB               	movwf	(??_sprintf+1)& (0+255),b
  7106  00056A  51CA               	movf	??_sprintf& (0+255),w,b
  7107  00056C  11CB               	iorwf	(??_sprintf+1)& (0+255),w,b
  7108  00056E  B4D8               	btfsc	status,2,c
  7109  000570  D003               	goto	l1850
  7110                           
  7111                           ; BSR set to: 0
  7112                           ;doprnt.c: 1150: width--;
  7113  000572  07E9               	decf	sprintf@width& (0+255),f,b
  7114  000574  A0D8               	btfss	status,0,c
  7115  000576  07EA               	decf	(sprintf@width+1)& (0+255),f,b
  7116  000578                     l1850:
  7117                           
  7118                           ; BSR set to: 0
  7119                           ;doprnt.c: 1153: if(flag & 0x04) {
  7120                           
  7121                           ; BSR set to: 0
  7122  000578  A5EB               	btfss	sprintf@flag& (0+255),2,b
  7123  00057A  D031               	goto	l1857
  7124                           
  7125                           ; BSR set to: 0
  7126                           ;doprnt.c: 1157: if(flag & 0x03)
  7127  00057C  0E03               	movlw	3
  7128  00057E  15EB               	andwf	sprintf@flag& (0+255),w,b
  7129  000580  6FCA               	movwf	??_sprintf& (0+255),b
  7130  000582  0E00               	movlw	0
  7131  000584  15EC               	andwf	(sprintf@flag+1)& (0+255),w,b
  7132  000586  6FCB               	movwf	(??_sprintf+1)& (0+255),b
  7133  000588  51CA               	movf	??_sprintf& (0+255),w,b
  7134  00058A  11CB               	iorwf	(??_sprintf+1)& (0+255),w,b
  7135  00058C  B4D8               	btfsc	status,2,c
  7136  00058E  D014               	goto	l1853
  7137                           
  7138                           ; BSR set to: 0
  7139                           ;doprnt.c: 1159: ((*sp++ = ('-')));
  7140  000590  C0BE  FFD9         	movff	sprintf@sp,fsr2l
  7141  000594  C0BF  FFDA         	movff	sprintf@sp+1,fsr2h
  7142  000598  0E2D               	movlw	45
  7143  00059A  6EDF               	movwf	indf2,c
  7144                           
  7145                           ; BSR set to: 0
  7146  00059C  4BBE               	infsnz	sprintf@sp& (0+255),f,b
  7147  00059E  2BBF               	incf	(sprintf@sp+1)& (0+255),f,b
  7148                           
  7149                           ; BSR set to: 0
  7150                           ;doprnt.c: 1168: while(width > 0) {
  7151  0005A0  D00B               	goto	l1853
  7152  0005A2                     l7811:
  7153                           
  7154                           ; BSR set to: 0
  7155                           ;doprnt.c: 1169: ((*sp++ = ('0')));
  7156  0005A2  C0BE  FFD9         	movff	sprintf@sp,fsr2l
  7157  0005A6  C0BF  FFDA         	movff	sprintf@sp+1,fsr2h
  7158  0005AA  0E30               	movlw	48
  7159  0005AC  6EDF               	movwf	indf2,c
  7160                           
  7161                           ; BSR set to: 0
  7162  0005AE  4BBE               	infsnz	sprintf@sp& (0+255),f,b
  7163  0005B0  2BBF               	incf	(sprintf@sp+1)& (0+255),f,b
  7164                           
  7165                           ; BSR set to: 0
  7166                           ;doprnt.c: 1170: width--;
  7167  0005B2  07E9               	decf	sprintf@width& (0+255),f,b
  7168  0005B4  A0D8               	btfss	status,0,c
  7169  0005B6  07EA               	decf	(sprintf@width+1)& (0+255),f,b
  7170  0005B8                     l1853:
  7171                           
  7172                           ; BSR set to: 0
  7173                           
  7174                           ; BSR set to: 0
  7175  0005B8  BFEA               	btfsc	(sprintf@width+1)& (0+255),7,b
  7176  0005BA  D073               	goto	l1861
  7177  0005BC  51EA               	movf	(sprintf@width+1)& (0+255),w,b
  7178  0005BE  E1F1               	bnz	l7811
  7179  0005C0  05E9               	decf	sprintf@width& (0+255),w,b
  7180  0005C2  A0D8               	btfss	status,0,c
  7181  0005C4  D06E               	goto	l1861
  7182  0005C6  D7ED               	goto	l1854
  7183  0005C8                     l7819:
  7184                           
  7185                           ; BSR set to: 0
  7186                           ;doprnt.c: 1181: ((*sp++ = (' ')));
  7187  0005C8  C0BE  FFD9         	movff	sprintf@sp,fsr2l
  7188  0005CC  C0BF  FFDA         	movff	sprintf@sp+1,fsr2h
  7189  0005D0  0E20               	movlw	32
  7190  0005D2  6EDF               	movwf	indf2,c
  7191                           
  7192                           ; BSR set to: 0
  7193  0005D4  4BBE               	infsnz	sprintf@sp& (0+255),f,b
  7194  0005D6  2BBF               	incf	(sprintf@sp+1)& (0+255),f,b
  7195                           
  7196                           ; BSR set to: 0
  7197                           ;doprnt.c: 1182: width--;
  7198  0005D8  07E9               	decf	sprintf@width& (0+255),f,b
  7199  0005DA  A0D8               	btfss	status,0,c
  7200  0005DC  07EA               	decf	(sprintf@width+1)& (0+255),f,b
  7201  0005DE                     l1857:
  7202                           
  7203                           ; BSR set to: 0
  7204                           
  7205                           ; BSR set to: 0
  7206  0005DE  BFEA               	btfsc	(sprintf@width+1)& (0+255),7,b
  7207  0005E0  D005               	goto	u7160
  7208  0005E2  51EA               	movf	(sprintf@width+1)& (0+255),w,b
  7209  0005E4  E1F1               	bnz	l7819
  7210  0005E6  05E9               	decf	sprintf@width& (0+255),w,b
  7211  0005E8  B0D8               	btfsc	status,0,c
  7212  0005EA  D7EE               	goto	l1858
  7213  0005EC                     u7160:
  7214                           
  7215                           ; BSR set to: 0
  7216                           ;doprnt.c: 1183: }
  7217                           ;doprnt.c: 1188: if(flag & 0x03)
  7218                           
  7219                           ; BSR set to: 0
  7220  0005EC  0E03               	movlw	3
  7221  0005EE  15EB               	andwf	sprintf@flag& (0+255),w,b
  7222  0005F0  6FCA               	movwf	??_sprintf& (0+255),b
  7223  0005F2  0E00               	movlw	0
  7224  0005F4  15EC               	andwf	(sprintf@flag+1)& (0+255),w,b
  7225  0005F6  6FCB               	movwf	(??_sprintf+1)& (0+255),b
  7226  0005F8  51CA               	movf	??_sprintf& (0+255),w,b
  7227  0005FA  11CB               	iorwf	(??_sprintf+1)& (0+255),w,b
  7228  0005FC  B4D8               	btfsc	status,2,c
  7229  0005FE  D051               	goto	l1861
  7230                           
  7231                           ; BSR set to: 0
  7232                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  7233  000600  C0BE  FFD9         	movff	sprintf@sp,fsr2l
  7234  000604  C0BF  FFDA         	movff	sprintf@sp+1,fsr2h
  7235  000608  0E2D               	movlw	45
  7236  00060A  D048               	goto	L6
  7237  00060C                     
  7238                           ; BSR set to: 0
  7239                           ;doprnt.c: 1200: {
  7240                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  7241                           
  7242                           ; BSR set to: 0
  7243  00060C  C0E2  F060         	movff	sprintf@val,___lldiv@dividend
  7244  000610  C0E3  F061         	movff	sprintf@val+1,___lldiv@dividend+1
  7245  000614  C0E4  F062         	movff	sprintf@val+2,___lldiv@dividend+2
  7246  000618  C0E5  F063         	movff	sprintf@val+3,___lldiv@dividend+3
  7247  00061C  51ED               	movf	sprintf@c& (0+255),w,b
  7248  00061E  0D04               	mullw	4
  7249  000620  0E51               	movlw	low _dpowers
  7250  000622  24F3               	addwf	prodl,w,c
  7251  000624  6EF6               	movwf	tblptrl,c
  7252  000626  0E7D               	movlw	high _dpowers
  7253  000628  20F4               	addwfc	prodh,w,c
  7254  00062A  6EF7               	movwf	tblptrh,c
  7255  00062C                     	if	0	;There are less than 3 active tblptr bytes
  7256  00062C                     	endif
  7257  00062C  0009               	tblrd		*+
  7258  00062E  CFF5 F064          	movff	tablat,___lldiv@divisor
  7259  000632  0009               	tblrd		*+
  7260  000634  CFF5 F065          	movff	tablat,___lldiv@divisor+1
  7261  000638  0009               	tblrd		*+
  7262  00063A  CFF5 F066          	movff	tablat,___lldiv@divisor+2
  7263  00063E  000A               	tblrd		*-
  7264  000640  CFF5 F067          	movff	tablat,___lldiv@divisor+3
  7265  000644  EC68  F01D         	call	___lldiv	;wreg free
  7266  000648  C060  F0DC         	movff	?___lldiv,sprintf@tmpval
  7267  00064C  C061  F0DD         	movff	?___lldiv+1,sprintf@tmpval+1
  7268  000650  C062  F0DE         	movff	?___lldiv+2,sprintf@tmpval+2
  7269  000654  C063  F0DF         	movff	?___lldiv+3,sprintf@tmpval+3
  7270                           
  7271                           ;doprnt.c: 1202: tmpval.vd %= 10;
  7272  000658  C0DC  F06D         	movff	sprintf@tmpval,___llmod@dividend
  7273  00065C  C0DD  F06E         	movff	sprintf@tmpval+1,___llmod@dividend+1
  7274  000660  C0DE  F06F         	movff	sprintf@tmpval+2,___llmod@dividend+2
  7275  000664  C0DF  F070         	movff	sprintf@tmpval+3,___llmod@dividend+3
  7276  000668  0E0A               	movlw	10
  7277  00066A  0100               	movlb	0	; () banked
  7278  00066C  6F71               	movwf	___llmod@divisor& (0+255),b
  7279  00066E  0E00               	movlw	0
  7280  000670  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
  7281  000672  0E00               	movlw	0
  7282  000674  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
  7283  000676  0E00               	movlw	0
  7284  000678  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
  7285  00067A  EC93  F01E         	call	___llmod	;wreg free
  7286  00067E  C06D  F0DC         	movff	?___llmod,sprintf@tmpval
  7287  000682  C06E  F0DD         	movff	?___llmod+1,sprintf@tmpval+1
  7288  000686  C06F  F0DE         	movff	?___llmod+2,sprintf@tmpval+2
  7289  00068A  C070  F0DF         	movff	?___llmod+3,sprintf@tmpval+3
  7290                           
  7291                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  7292  00068E  0100               	movlb	0	; () banked
  7293  000690  51DC               	movf	sprintf@tmpval& (0+255),w,b
  7294  000692  0F30               	addlw	48
  7295  000694  C0BE  FFD9         	movff	sprintf@sp,fsr2l
  7296  000698  C0BF  FFDA         	movff	sprintf@sp+1,fsr2h
  7297  00069C                     L6:
  7298  00069C  6EDF               	movwf	indf2,c
  7299                           
  7300                           ; BSR set to: 0
  7301  00069E  4BBE               	infsnz	sprintf@sp& (0+255),f,b
  7302  0006A0  2BBF               	incf	(sprintf@sp+1)& (0+255),f,b
  7303  0006A2                     l1861:
  7304                           
  7305                           ; BSR set to: 0
  7306                           
  7307                           ; BSR set to: 0
  7308  0006A2  07ED               	decf	sprintf@c& (0+255),f,b
  7309  0006A4  29ED               	incf	sprintf@c& (0+255),w,b
  7310  0006A6  B4D8               	btfsc	status,2,c
  7311  0006A8  D00C               	goto	l1864
  7312  0006AA  D7B0               	goto	l1862
  7313  0006AC                     l7843:
  7314                           
  7315                           ; BSR set to: 0
  7316                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  7317  0006AC  C0BE  FFD9         	movff	sprintf@sp,fsr2l
  7318  0006B0  C0BF  FFDA         	movff	sprintf@sp+1,fsr2h
  7319  0006B4  0E30               	movlw	48
  7320  0006B6  6EDF               	movwf	indf2,c
  7321                           
  7322                           ; BSR set to: 0
  7323  0006B8  4BBE               	infsnz	sprintf@sp& (0+255),f,b
  7324  0006BA  2BBF               	incf	(sprintf@sp+1)& (0+255),f,b
  7325                           
  7326                           ; BSR set to: 0
  7327                           ;doprnt.c: 1209: exp--;
  7328  0006BC  07E0               	decf	sprintf@exp& (0+255),f,b
  7329  0006BE  A0D8               	btfss	status,0,c
  7330  0006C0  07E1               	decf	(sprintf@exp+1)& (0+255),f,b
  7331  0006C2                     l1864:
  7332                           
  7333                           ; BSR set to: 0
  7334                           
  7335                           ; BSR set to: 0
  7336  0006C2  BFE1               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7337  0006C4  D005               	goto	u7190
  7338  0006C6  51E1               	movf	(sprintf@exp+1)& (0+255),w,b
  7339  0006C8  E1F1               	bnz	l7843
  7340  0006CA  05E0               	decf	sprintf@exp& (0+255),w,b
  7341  0006CC  B0D8               	btfsc	status,0,c
  7342  0006CE  D7EE               	goto	l1865
  7343  0006D0                     u7190:
  7344                           
  7345                           ; BSR set to: 0
  7346                           ;doprnt.c: 1210: }
  7347                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  7348                           
  7349                           ; BSR set to: 0
  7350  0006D0  BFDB               	btfsc	(sprintf@prec+1)& (0+255),7,b
  7351  0006D2  D009               	goto	l1867
  7352  0006D4  51DB               	movf	(sprintf@prec+1)& (0+255),w,b
  7353  0006D6  E104               	bnz	u7200
  7354  0006D8  0E09               	movlw	9
  7355  0006DA  5DDA               	subwf	sprintf@prec& (0+255),w,b
  7356  0006DC  A0D8               	btfss	status,0,c
  7357  0006DE  D003               	goto	l1867
  7358  0006E0                     u7200:
  7359                           
  7360                           ; BSR set to: 0
  7361                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  7362  0006E0  0E08               	movlw	8
  7363  0006E2  6FED               	movwf	sprintf@c& (0+255),b
  7364  0006E4  D002               	goto	l1868
  7365  0006E6                     l1867:
  7366                           
  7367                           ; BSR set to: 0
  7368                           ;doprnt.c: 1213: else
  7369                           ;doprnt.c: 1214: c = prec;
  7370  0006E6  C0DA  F0ED         	movff	sprintf@prec,sprintf@c
  7371  0006EA                     l1868:
  7372                           
  7373                           ; BSR set to: 0
  7374                           ;doprnt.c: 1215: prec -= c;
  7375                           
  7376                           ; BSR set to: 0
  7377  0006EA  51ED               	movf	sprintf@c& (0+255),w,b
  7378  0006EC  5FDA               	subwf	sprintf@prec& (0+255),f,b
  7379  0006EE  0E00               	movlw	0
  7380  0006F0  BFED               	btfsc	sprintf@c& (0+255),7,b
  7381  0006F2  0EFF               	movlw	255
  7382  0006F4  5BDB               	subwfb	(sprintf@prec+1)& (0+255),f,b
  7383                           
  7384                           ; BSR set to: 0
  7385                           ;doprnt.c: 1219: if(c)
  7386  0006F6  51ED               	movf	sprintf@c& (0+255),w,b
  7387  0006F8  B4D8               	btfsc	status,2,c
  7388  0006FA  D008               	goto	l1869
  7389                           
  7390                           ; BSR set to: 0
  7391                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  7392  0006FC  C0BE  FFD9         	movff	sprintf@sp,fsr2l
  7393  000700  C0BF  FFDA         	movff	sprintf@sp+1,fsr2h
  7394  000704  0E2E               	movlw	46
  7395  000706  6EDF               	movwf	indf2,c
  7396                           
  7397                           ; BSR set to: 0
  7398  000708  4BBE               	infsnz	sprintf@sp& (0+255),f,b
  7399  00070A  2BBF               	incf	(sprintf@sp+1)& (0+255),f,b
  7400  00070C                     l1869:
  7401                           
  7402                           ; BSR set to: 0
  7403                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  7404                           
  7405                           ; BSR set to: 0
  7406  00070C  51ED               	movf	sprintf@c& (0+255),w,b
  7407  00070E  ECF1  F005         	call	_scale
  7408  000712  C08F  F0D0         	movff	?_scale,_sprintf$5270
  7409  000716  C090  F0D1         	movff	?_scale+1,_sprintf$5270+1
  7410  00071A  C091  F0D2         	movff	?_scale+2,_sprintf$5270+2
  7411                           
  7412                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  7413  00071E  C0E6  F083         	movff	sprintf@fval,___ftmul@f2
  7414  000722  C0E7  F084         	movff	sprintf@fval+1,___ftmul@f2+1
  7415  000726  C0E8  F085         	movff	sprintf@fval+2,___ftmul@f2+2
  7416  00072A  C0D0  F080         	movff	_sprintf$5270,___ftmul@f1
  7417  00072E  C0D1  F081         	movff	_sprintf$5270+1,___ftmul@f1+1
  7418  000732  C0D2  F082         	movff	_sprintf$5270+2,___ftmul@f1+2
  7419  000736  EC00  F016         	call	___ftmul	;wreg free
  7420  00073A  C080  F0AF         	movff	?___ftmul,___fttol@f1
  7421  00073E  C081  F0B0         	movff	?___ftmul+1,___fttol@f1+1
  7422  000742  C082  F0B1         	movff	?___ftmul+2,___fttol@f1+2
  7423  000746  EC84  F015         	call	___fttol	;wreg free
  7424  00074A  C0AF  F0E2         	movff	?___fttol,sprintf@val
  7425  00074E  C0B0  F0E3         	movff	?___fttol+1,sprintf@val+1
  7426  000752  C0B1  F0E4         	movff	?___fttol+2,sprintf@val+2
  7427  000756  C0B2  F0E5         	movff	?___fttol+3,sprintf@val+3
  7428                           
  7429                           ;doprnt.c: 1228: while(c--) {
  7430  00075A  D072               	goto	l1870
  7431  00075C                     
  7432                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  7433  00075C  C0E2  F060         	movff	sprintf@val,___lldiv@dividend
  7434  000760  C0E3  F061         	movff	sprintf@val+1,___lldiv@dividend+1
  7435  000764  C0E4  F062         	movff	sprintf@val+2,___lldiv@dividend+2
  7436  000768  C0E5  F063         	movff	sprintf@val+3,___lldiv@dividend+3
  7437  00076C  0100               	movlb	0	; () banked
  7438  00076E  51ED               	movf	sprintf@c& (0+255),w,b
  7439  000770  0D04               	mullw	4
  7440  000772  0E51               	movlw	low _dpowers
  7441  000774  24F3               	addwf	prodl,w,c
  7442  000776  6EF6               	movwf	tblptrl,c
  7443  000778  0E7D               	movlw	high _dpowers
  7444  00077A  20F4               	addwfc	prodh,w,c
  7445  00077C  6EF7               	movwf	tblptrh,c
  7446  00077E                     	if	0	;There are less than 3 active tblptr bytes
  7447  00077E                     	endif
  7448  00077E  0009               	tblrd		*+
  7449  000780  CFF5 F064          	movff	tablat,___lldiv@divisor
  7450  000784  0009               	tblrd		*+
  7451  000786  CFF5 F065          	movff	tablat,___lldiv@divisor+1
  7452  00078A  0009               	tblrd		*+
  7453  00078C  CFF5 F066          	movff	tablat,___lldiv@divisor+2
  7454  000790  000A               	tblrd		*-
  7455  000792  CFF5 F067          	movff	tablat,___lldiv@divisor+3
  7456  000796  EC68  F01D         	call	___lldiv	;wreg free
  7457  00079A  C060  F0DC         	movff	?___lldiv,sprintf@tmpval
  7458  00079E  C061  F0DD         	movff	?___lldiv+1,sprintf@tmpval+1
  7459  0007A2  C062  F0DE         	movff	?___lldiv+2,sprintf@tmpval+2
  7460  0007A6  C063  F0DF         	movff	?___lldiv+3,sprintf@tmpval+3
  7461                           
  7462                           ;doprnt.c: 1230: tmpval.vd %= 10;
  7463  0007AA  C0DC  F06D         	movff	sprintf@tmpval,___llmod@dividend
  7464  0007AE  C0DD  F06E         	movff	sprintf@tmpval+1,___llmod@dividend+1
  7465  0007B2  C0DE  F06F         	movff	sprintf@tmpval+2,___llmod@dividend+2
  7466  0007B6  C0DF  F070         	movff	sprintf@tmpval+3,___llmod@dividend+3
  7467  0007BA  0E0A               	movlw	10
  7468  0007BC  0100               	movlb	0	; () banked
  7469  0007BE  6F71               	movwf	___llmod@divisor& (0+255),b
  7470  0007C0  0E00               	movlw	0
  7471  0007C2  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
  7472  0007C4  0E00               	movlw	0
  7473  0007C6  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
  7474  0007C8  0E00               	movlw	0
  7475  0007CA  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
  7476  0007CC  EC93  F01E         	call	___llmod	;wreg free
  7477  0007D0  C06D  F0DC         	movff	?___llmod,sprintf@tmpval
  7478  0007D4  C06E  F0DD         	movff	?___llmod+1,sprintf@tmpval+1
  7479  0007D8  C06F  F0DE         	movff	?___llmod+2,sprintf@tmpval+2
  7480  0007DC  C070  F0DF         	movff	?___llmod+3,sprintf@tmpval+3
  7481                           
  7482                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  7483  0007E0  0100               	movlb	0	; () banked
  7484  0007E2  51DC               	movf	sprintf@tmpval& (0+255),w,b
  7485  0007E4  0F30               	addlw	48
  7486  0007E6  C0BE  FFD9         	movff	sprintf@sp,fsr2l
  7487  0007EA  C0BF  FFDA         	movff	sprintf@sp+1,fsr2h
  7488  0007EE  6EDF               	movwf	indf2,c
  7489                           
  7490                           ; BSR set to: 0
  7491  0007F0  4BBE               	infsnz	sprintf@sp& (0+255),f,b
  7492  0007F2  2BBF               	incf	(sprintf@sp+1)& (0+255),f,b
  7493                           
  7494                           ; BSR set to: 0
  7495                           ;doprnt.c: 1232: val %= dpowers[c];
  7496  0007F4  C0E2  F06D         	movff	sprintf@val,___llmod@dividend
  7497  0007F8  C0E3  F06E         	movff	sprintf@val+1,___llmod@dividend+1
  7498  0007FC  C0E4  F06F         	movff	sprintf@val+2,___llmod@dividend+2
  7499  000800  C0E5  F070         	movff	sprintf@val+3,___llmod@dividend+3
  7500  000804  51ED               	movf	sprintf@c& (0+255),w,b
  7501  000806  0D04               	mullw	4
  7502  000808  0E51               	movlw	low _dpowers
  7503  00080A  24F3               	addwf	prodl,w,c
  7504  00080C  6EF6               	movwf	tblptrl,c
  7505  00080E  0E7D               	movlw	high _dpowers
  7506  000810  20F4               	addwfc	prodh,w,c
  7507  000812  6EF7               	movwf	tblptrh,c
  7508  000814                     	if	0	;There are less than 3 active tblptr bytes
  7509  000814                     	endif
  7510  000814  0009               	tblrd		*+
  7511  000816  CFF5 F071          	movff	tablat,___llmod@divisor
  7512  00081A  0009               	tblrd		*+
  7513  00081C  CFF5 F072          	movff	tablat,___llmod@divisor+1
  7514  000820  0009               	tblrd		*+
  7515  000822  CFF5 F073          	movff	tablat,___llmod@divisor+2
  7516  000826  000A               	tblrd		*-
  7517  000828  CFF5 F074          	movff	tablat,___llmod@divisor+3
  7518  00082C  EC93  F01E         	call	___llmod	;wreg free
  7519  000830  C06D  F0E2         	movff	?___llmod,sprintf@val
  7520  000834  C06E  F0E3         	movff	?___llmod+1,sprintf@val+1
  7521  000838  C06F  F0E4         	movff	?___llmod+2,sprintf@val+2
  7522  00083C  C070  F0E5         	movff	?___llmod+3,sprintf@val+3
  7523  000840                     l1870:
  7524  000840  0100               	movlb	0	; () banked
  7525  000842  07ED               	decf	sprintf@c& (0+255),f,b
  7526  000844  29ED               	incf	sprintf@c& (0+255),w,b
  7527  000846  B4D8               	btfsc	status,2,c
  7528  000848  D00C               	goto	l1873
  7529  00084A  D788               	goto	l1871
  7530  00084C                     
  7531                           ; BSR set to: 0
  7532                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  7533                           
  7534                           ; BSR set to: 0
  7535  00084C  C0BE  FFD9         	movff	sprintf@sp,fsr2l
  7536  000850  C0BF  FFDA         	movff	sprintf@sp+1,fsr2h
  7537  000854  0E30               	movlw	48
  7538  000856  6EDF               	movwf	indf2,c
  7539                           
  7540                           ; BSR set to: 0
  7541  000858  4BBE               	infsnz	sprintf@sp& (0+255),f,b
  7542  00085A  2BBF               	incf	(sprintf@sp+1)& (0+255),f,b
  7543                           
  7544                           ; BSR set to: 0
  7545                           ;doprnt.c: 1237: prec--;
  7546  00085C  07DA               	decf	sprintf@prec& (0+255),f,b
  7547  00085E  A0D8               	btfss	status,0,c
  7548  000860  07DB               	decf	(sprintf@prec+1)& (0+255),f,b
  7549  000862                     l1873:
  7550                           
  7551                           ; BSR set to: 0
  7552                           
  7553                           ; BSR set to: 0
  7554  000862  51DA               	movf	sprintf@prec& (0+255),w,b
  7555  000864  11DB               	iorwf	(sprintf@prec+1)& (0+255),w,b
  7556  000866  B4D8               	btfsc	status,2,c
  7557  000868  D1A8               	goto	u7440
  7558  00086A  D7F0               	goto	l1874
  7559  00086C                     l1828:
  7560                           
  7561                           ; BSR set to: 0
  7562                           ;doprnt.c: 1246: }
  7563                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
  7564                           
  7565                           ; BSR set to: 0
  7566  00086C  0EC0               	movlw	192
  7567  00086E  15EB               	andwf	sprintf@flag& (0+255),w,b
  7568  000870  6FCA               	movwf	??_sprintf& (0+255),b
  7569  000872  0E00               	movlw	0
  7570  000874  15EC               	andwf	(sprintf@flag+1)& (0+255),w,b
  7571  000876  6FCB               	movwf	(??_sprintf+1)& (0+255),b
  7572  000878  51CA               	movf	??_sprintf& (0+255),w,b
  7573  00087A  11CB               	iorwf	(??_sprintf+1)& (0+255),w,b
  7574  00087C  A4D8               	btfss	status,2,c
  7575  00087E  D02E               	goto	l1876
  7576                           
  7577                           ; BSR set to: 0
  7578                           ;doprnt.c: 1253: {
  7579                           ;doprnt.c: 1255: if(flag & 0x10)
  7580  000880  A9EB               	btfss	sprintf@flag& (0+255),4,b
  7581  000882  D00E               	goto	l1877
  7582                           
  7583                           ; BSR set to: 0
  7584                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
  7585  000884  C0D8  FFD9         	movff	sprintf@ap,fsr2l
  7586  000888  C0D9  FFDA         	movff	sprintf@ap+1,fsr2h
  7587  00088C  CFDE F0E2          	movff	postinc2,sprintf@val
  7588  000890  CFDE F0E3          	movff	postinc2,sprintf@val+1
  7589  000894  CFDE F0E4          	movff	postinc2,sprintf@val+2
  7590  000898  CFDE F0E5          	movff	postinc2,sprintf@val+3
  7591                           
  7592                           ; BSR set to: 0
  7593  00089C  0E04               	movlw	4
  7594  00089E  D00E               	goto	L7
  7595  0008A0                     l1877:
  7596                           
  7597                           ; BSR set to: 0
  7598                           ;doprnt.c: 1257: else
  7599                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  7600                           
  7601                           ; BSR set to: 0
  7602  0008A0  C0D8  FFD9         	movff	sprintf@ap,fsr2l
  7603  0008A4  C0D9  FFDA         	movff	sprintf@ap+1,fsr2h
  7604  0008A8  CFDE F0E2          	movff	postinc2,sprintf@val
  7605  0008AC  CFDD F0E3          	movff	postdec2,sprintf@val+1
  7606  0008B0  0E00               	movlw	0
  7607  0008B2  BFE3               	btfsc	(sprintf@val+1)& (0+255),7,b
  7608  0008B4  0EFF               	movlw	-1
  7609  0008B6  6FE4               	movwf	(sprintf@val+2)& (0+255),b
  7610  0008B8  6FE5               	movwf	(sprintf@val+3)& (0+255),b
  7611                           
  7612                           ; BSR set to: 0
  7613  0008BA  0E02               	movlw	2
  7614  0008BC                     L7:
  7615  0008BC  27D8               	addwf	sprintf@ap& (0+255),f,b
  7616  0008BE  0E00               	movlw	0
  7617  0008C0  23D9               	addwfc	(sprintf@ap+1)& (0+255),f,b
  7618                           
  7619                           ; BSR set to: 0
  7620                           ;doprnt.c: 1261: if((long)val < 0) {
  7621                           
  7622                           ; BSR set to: 0
  7623  0008C2  AFE5               	btfss	(sprintf@val+3)& (0+255),7,b
  7624  0008C4  D06A               	goto	l1883
  7625                           
  7626                           ; BSR set to: 0
  7627                           ;doprnt.c: 1262: flag |= 0x03;
  7628  0008C6  0E03               	movlw	3
  7629  0008C8  13EB               	iorwf	sprintf@flag& (0+255),f,b
  7630                           
  7631                           ; BSR set to: 0
  7632                           ;doprnt.c: 1263: val = -val;
  7633  0008CA  1FE5               	comf	(sprintf@val+3)& (0+255),f,b
  7634  0008CC  1FE4               	comf	(sprintf@val+2)& (0+255),f,b
  7635  0008CE  1FE3               	comf	(sprintf@val+1)& (0+255),f,b
  7636  0008D0  6DE2               	negf	sprintf@val& (0+255),b
  7637  0008D2  0E00               	movlw	0
  7638  0008D4  23E3               	addwfc	(sprintf@val+1)& (0+255),f,b
  7639  0008D6  23E4               	addwfc	(sprintf@val+2)& (0+255),f,b
  7640  0008D8  23E5               	addwfc	(sprintf@val+3)& (0+255),f,b
  7641                           
  7642                           ; BSR set to: 0
  7643                           ;doprnt.c: 1264: }
  7644                           ;doprnt.c: 1266: }
  7645  0008DA  D05F               	goto	l1883
  7646  0008DC                     l1876:
  7647                           
  7648                           ; BSR set to: 0
  7649                           ;doprnt.c: 1268: else
  7650                           ;doprnt.c: 1273: {
  7651                           ;doprnt.c: 1281: if(flag & 0x10)
  7652  0008DC  A9EB               	btfss	sprintf@flag& (0+255),4,b
  7653  0008DE  D00E               	goto	l1881
  7654                           
  7655                           ; BSR set to: 0
  7656                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  7657  0008E0  C0D8  FFD9         	movff	sprintf@ap,fsr2l
  7658  0008E4  C0D9  FFDA         	movff	sprintf@ap+1,fsr2h
  7659  0008E8  CFDE F0E2          	movff	postinc2,sprintf@val
  7660  0008EC  CFDE F0E3          	movff	postinc2,sprintf@val+1
  7661  0008F0  CFDE F0E4          	movff	postinc2,sprintf@val+2
  7662  0008F4  CFDE F0E5          	movff	postinc2,sprintf@val+3
  7663                           
  7664                           ; BSR set to: 0
  7665  0008F8  0E04               	movlw	4
  7666  0008FA  D00F               	goto	L8
  7667  0008FC                     l1881:
  7668                           
  7669                           ; BSR set to: 0
  7670                           ;doprnt.c: 1283: else
  7671                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  7672                           
  7673                           ; BSR set to: 0
  7674  0008FC  C0D8  FFD9         	movff	sprintf@ap,fsr2l
  7675  000900  C0D9  FFDA         	movff	sprintf@ap+1,fsr2h
  7676  000904  CFDE F0CA          	movff	postinc2,??_sprintf
  7677  000908  CFDD F0CB          	movff	postdec2,??_sprintf+1
  7678  00090C  C0CA  F0E2         	movff	??_sprintf,sprintf@val
  7679  000910  C0CB  F0E3         	movff	??_sprintf+1,sprintf@val+1
  7680  000914  6BE4               	clrf	(sprintf@val+2)& (0+255),b
  7681  000916  6BE5               	clrf	(sprintf@val+3)& (0+255),b
  7682                           
  7683                           ; BSR set to: 0
  7684  000918  0E02               	movlw	2
  7685  00091A                     L8:
  7686  00091A  27D8               	addwf	sprintf@ap& (0+255),f,b
  7687  00091C  0E00               	movlw	0
  7688  00091E  23D9               	addwfc	(sprintf@ap+1)& (0+255),f,b
  7689                           
  7690                           ; BSR set to: 0
  7691                           ;doprnt.c: 1287: }
  7692                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
  7693                           
  7694                           ; BSR set to: 0
  7695  000920  D03C               	goto	l1883
  7696  000922                     
  7697                           ; BSR set to: 0
  7698                           ;doprnt.c: 1302: case 0xC0:
  7699                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  7700                           
  7701                           ; BSR set to: 0
  7702                           
  7703                           ; BSR set to: 0
  7704  000922  0E01               	movlw	1
  7705  000924  6FED               	movwf	sprintf@c& (0+255),b
  7706  000926                     l7915:
  7707                           
  7708                           ; BSR set to: 0
  7709  000926  0E0A               	movlw	10
  7710  000928  19ED               	xorwf	sprintf@c& (0+255),w,b
  7711  00092A  B4D8               	btfsc	status,2,c
  7712  00092C  D041               	goto	l1889
  7713                           
  7714                           ; BSR set to: 0
  7715                           ;doprnt.c: 1306: if(val < dpowers[c])
  7716                           
  7717                           ; BSR set to: 0
  7718                           
  7719                           ; BSR set to: 0
  7720  00092E  51ED               	movf	sprintf@c& (0+255),w,b
  7721  000930  0D04               	mullw	4
  7722  000932  0E51               	movlw	low _dpowers
  7723  000934  24F3               	addwf	prodl,w,c
  7724  000936  6EF6               	movwf	tblptrl,c
  7725  000938  0E7D               	movlw	high _dpowers
  7726  00093A  20F4               	addwfc	prodh,w,c
  7727  00093C  6EF7               	movwf	tblptrh,c
  7728  00093E                     	if	0	;There are less than 3 active tblptr bytes
  7729  00093E                     	endif
  7730  00093E  0009               	tblrd		*+
  7731  000940  50F5               	movf	tablat,w,c
  7732  000942  5DE2               	subwf	sprintf@val& (0+255),w,b
  7733  000944  0009               	tblrd		*+
  7734  000946  50F5               	movf	tablat,w,c
  7735  000948  59E3               	subwfb	(sprintf@val+1)& (0+255),w,b
  7736  00094A  0009               	tblrd		*+
  7737  00094C  50F5               	movf	tablat,w,c
  7738  00094E  59E4               	subwfb	(sprintf@val+2)& (0+255),w,b
  7739  000950  0009               	tblrd		*+
  7740  000952  50F5               	movf	tablat,w,c
  7741  000954  59E5               	subwfb	(sprintf@val+3)& (0+255),w,b
  7742  000956  A0D8               	btfss	status,0,c
  7743  000958  D02B               	goto	l1889
  7744                           
  7745                           ; BSR set to: 0
  7746                           
  7747                           ; BSR set to: 0
  7748                           
  7749                           ; BSR set to: 0
  7750                           ;doprnt.c: 1307: break;
  7751  00095A  2BED               	incf	sprintf@c& (0+255),f,b
  7752  00095C  D7E4               	goto	l7915
  7753  00095E                     
  7754                           ; BSR set to: 0
  7755                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  7756                           
  7757                           ; BSR set to: 0
  7758  00095E  0E01               	movlw	1
  7759  000960  6FED               	movwf	sprintf@c& (0+255),b
  7760  000962                     l7929:
  7761                           
  7762                           ; BSR set to: 0
  7763  000962  0E08               	movlw	8
  7764  000964  19ED               	xorwf	sprintf@c& (0+255),w,b
  7765  000966  B4D8               	btfsc	status,2,c
  7766  000968  D023               	goto	l1889
  7767                           
  7768                           ; BSR set to: 0
  7769                           ;doprnt.c: 1317: if(val < hexpowers[c])
  7770                           
  7771                           ; BSR set to: 0
  7772                           
  7773                           ; BSR set to: 0
  7774  00096A  51ED               	movf	sprintf@c& (0+255),w,b
  7775  00096C  0D04               	mullw	4
  7776  00096E  0EC7               	movlw	low _hexpowers
  7777  000970  24F3               	addwf	prodl,w,c
  7778  000972  6EF6               	movwf	tblptrl,c
  7779  000974  0E7D               	movlw	high _hexpowers
  7780  000976  20F4               	addwfc	prodh,w,c
  7781  000978  6EF7               	movwf	tblptrh,c
  7782  00097A                     	if	0	;There are less than 3 active tblptr bytes
  7783  00097A                     	endif
  7784  00097A  0009               	tblrd		*+
  7785  00097C  50F5               	movf	tablat,w,c
  7786  00097E  5DE2               	subwf	sprintf@val& (0+255),w,b
  7787  000980  0009               	tblrd		*+
  7788  000982  50F5               	movf	tablat,w,c
  7789  000984  59E3               	subwfb	(sprintf@val+1)& (0+255),w,b
  7790  000986  0009               	tblrd		*+
  7791  000988  50F5               	movf	tablat,w,c
  7792  00098A  59E4               	subwfb	(sprintf@val+2)& (0+255),w,b
  7793  00098C  0009               	tblrd		*+
  7794  00098E  50F5               	movf	tablat,w,c
  7795  000990  59E5               	subwfb	(sprintf@val+3)& (0+255),w,b
  7796  000992  A0D8               	btfss	status,0,c
  7797  000994  D00D               	goto	l1889
  7798                           
  7799                           ; BSR set to: 0
  7800                           
  7801                           ; BSR set to: 0
  7802                           
  7803                           ; BSR set to: 0
  7804                           ;doprnt.c: 1318: break;
  7805  000996  2BED               	incf	sprintf@c& (0+255),f,b
  7806  000998  D7E4               	goto	l7929
  7807  00099A                     l1883:
  7808                           
  7809                           ; BSR set to: 0
  7810                           
  7811                           ; BSR set to: 0
  7812  00099A  51EB               	movf	sprintf@flag& (0+255),w,b
  7813  00099C  0BC0               	andlw	192
  7814                           
  7815                           ; Switch size 1, requested type "space"
  7816                           ; Number of cases is 3, Range of values is 0 to 192
  7817                           ; switch strategies available:
  7818                           ; Name         Instructions Cycles
  7819                           ; simple_byte           10     6 (average)
  7820                           ;	Chosen strategy is simple_byte
  7821  00099E  0A00               	xorlw	0	; case 0
  7822  0009A0  B4D8               	btfsc	status,2,c
  7823  0009A2  D7BF               	goto	l1884
  7824  0009A4  0A80               	xorlw	128	; case 128
  7825  0009A6  B4D8               	btfsc	status,2,c
  7826  0009A8  D7DA               	goto	l1890
  7827  0009AA  0A40               	xorlw	64	; case 192
  7828  0009AC  B4D8               	btfsc	status,2,c
  7829  0009AE  D7B9               	goto	l1884
  7830  0009B0                     l1889:
  7831                           
  7832                           ; BSR set to: 0
  7833                           ;doprnt.c: 1345: if(width && flag & 0x03)
  7834                           
  7835                           ; BSR set to: 0
  7836  0009B0  51E9               	movf	sprintf@width& (0+255),w,b
  7837  0009B2  11EA               	iorwf	(sprintf@width+1)& (0+255),w,b
  7838  0009B4  B4D8               	btfsc	status,2,c
  7839  0009B6  D00D               	goto	l1894
  7840                           
  7841                           ; BSR set to: 0
  7842  0009B8  0E03               	movlw	3
  7843  0009BA  15EB               	andwf	sprintf@flag& (0+255),w,b
  7844  0009BC  6FCA               	movwf	??_sprintf& (0+255),b
  7845  0009BE  0E00               	movlw	0
  7846  0009C0  15EC               	andwf	(sprintf@flag+1)& (0+255),w,b
  7847  0009C2  6FCB               	movwf	(??_sprintf+1)& (0+255),b
  7848  0009C4  51CA               	movf	??_sprintf& (0+255),w,b
  7849  0009C6  11CB               	iorwf	(??_sprintf+1)& (0+255),w,b
  7850  0009C8  B4D8               	btfsc	status,2,c
  7851  0009CA  D003               	goto	l1894
  7852                           
  7853                           ; BSR set to: 0
  7854                           ;doprnt.c: 1346: width--;
  7855  0009CC  07E9               	decf	sprintf@width& (0+255),f,b
  7856  0009CE  A0D8               	btfss	status,0,c
  7857  0009D0  07EA               	decf	(sprintf@width+1)& (0+255),f,b
  7858  0009D2                     l1894:
  7859                           
  7860                           ; BSR set to: 0
  7861                           ;doprnt.c: 1381: if(width > c)
  7862                           
  7863                           ; BSR set to: 0
  7864  0009D2  0E80               	movlw	128
  7865  0009D4  BFED               	btfsc	sprintf@c& (0+255),7,b
  7866  0009D6  0E7F               	movlw	127
  7867  0009D8  6FCA               	movwf	??_sprintf& (0+255),b
  7868  0009DA  51E9               	movf	sprintf@width& (0+255),w,b
  7869  0009DC  5DED               	subwf	sprintf@c& (0+255),w,b
  7870  0009DE  51EA               	movf	(sprintf@width+1)& (0+255),w,b
  7871  0009E0  0A80               	xorlw	128
  7872  0009E2  59CA               	subwfb	??_sprintf& (0+255),w,b
  7873  0009E4  B0D8               	btfsc	status,0,c
  7874  0009E6  D007               	goto	l1895
  7875                           
  7876                           ; BSR set to: 0
  7877                           ;doprnt.c: 1382: width -= c;
  7878  0009E8  51ED               	movf	sprintf@c& (0+255),w,b
  7879  0009EA  5FE9               	subwf	sprintf@width& (0+255),f,b
  7880  0009EC  0E00               	movlw	0
  7881  0009EE  BFED               	btfsc	sprintf@c& (0+255),7,b
  7882  0009F0  0EFF               	movlw	255
  7883  0009F2  5BEA               	subwfb	(sprintf@width+1)& (0+255),f,b
  7884  0009F4  D004               	goto	l1896
  7885  0009F6                     l1895:
  7886                           
  7887                           ; BSR set to: 0
  7888                           ;doprnt.c: 1383: else
  7889                           ;doprnt.c: 1384: width = 0;
  7890                           
  7891                           ; BSR set to: 0
  7892  0009F6  0E00               	movlw	0
  7893  0009F8  6FEA               	movwf	(sprintf@width+1)& (0+255),b
  7894  0009FA  0E00               	movlw	0
  7895  0009FC  6FE9               	movwf	sprintf@width& (0+255),b
  7896  0009FE                     l1896:
  7897                           
  7898                           ; BSR set to: 0
  7899                           ;doprnt.c: 1387: if(flag & 0x04) {
  7900                           
  7901                           ; BSR set to: 0
  7902  0009FE  A5EB               	btfss	sprintf@flag& (0+255),2,b
  7903  000A00  D022               	goto	l1897
  7904                           
  7905                           ; BSR set to: 0
  7906                           ;doprnt.c: 1392: if(flag & 0x03)
  7907  000A02  0E03               	movlw	3
  7908  000A04  15EB               	andwf	sprintf@flag& (0+255),w,b
  7909  000A06  6FCA               	movwf	??_sprintf& (0+255),b
  7910  000A08  0E00               	movlw	0
  7911  000A0A  15EC               	andwf	(sprintf@flag+1)& (0+255),w,b
  7912  000A0C  6FCB               	movwf	(??_sprintf+1)& (0+255),b
  7913  000A0E  51CA               	movf	??_sprintf& (0+255),w,b
  7914  000A10  11CB               	iorwf	(??_sprintf+1)& (0+255),w,b
  7915  000A12  B4D8               	btfsc	status,2,c
  7916  000A14  D008               	goto	l1898
  7917                           
  7918                           ; BSR set to: 0
  7919                           ;doprnt.c: 1393: ((*sp++ = ('-')));
  7920  000A16  C0BE  FFD9         	movff	sprintf@sp,fsr2l
  7921  000A1A  C0BF  FFDA         	movff	sprintf@sp+1,fsr2h
  7922  000A1E  0E2D               	movlw	45
  7923  000A20  6EDF               	movwf	indf2,c
  7924                           
  7925                           ; BSR set to: 0
  7926  000A22  4BBE               	infsnz	sprintf@sp& (0+255),f,b
  7927  000A24  2BBF               	incf	(sprintf@sp+1)& (0+255),f,b
  7928  000A26                     l1898:
  7929                           
  7930                           ; BSR set to: 0
  7931                           ;doprnt.c: 1415: if(width)
  7932                           
  7933                           ; BSR set to: 0
  7934  000A26  51E9               	movf	sprintf@width& (0+255),w,b
  7935  000A28  11EA               	iorwf	(sprintf@width+1)& (0+255),w,b
  7936  000A2A  B4D8               	btfsc	status,2,c
  7937  000A2C  D031               	goto	l1906
  7938                           
  7939                           ; BSR set to: 0
  7940                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  7941                           
  7942                           ; BSR set to: 0
  7943                           
  7944                           ;doprnt.c: 1416: do
  7945  000A2E  C0BE  FFD9         	movff	sprintf@sp,fsr2l
  7946  000A32  C0BF  FFDA         	movff	sprintf@sp+1,fsr2h
  7947  000A36  0E30               	movlw	48
  7948  000A38  6EDF               	movwf	indf2,c
  7949                           
  7950                           ; BSR set to: 0
  7951  000A3A  4BBE               	infsnz	sprintf@sp& (0+255),f,b
  7952  000A3C  2BBF               	incf	(sprintf@sp+1)& (0+255),f,b
  7953                           
  7954                           ; BSR set to: 0
  7955                           ;doprnt.c: 1418: while(--width);
  7956  000A3E  07E9               	decf	sprintf@width& (0+255),f,b
  7957  000A40  A0D8               	btfss	status,0,c
  7958  000A42  07EA               	decf	(sprintf@width+1)& (0+255),f,b
  7959  000A44  D7F0               	goto	l1898
  7960  000A46                     l1897:
  7961                           
  7962                           ; BSR set to: 0
  7963                           ;doprnt.c: 1422: {
  7964                           ;doprnt.c: 1424: if(width
  7965                           ;doprnt.c: 1428: )
  7966                           
  7967                           ; BSR set to: 0
  7968  000A46  51E9               	movf	sprintf@width& (0+255),w,b
  7969  000A48  11EA               	iorwf	(sprintf@width+1)& (0+255),w,b
  7970  000A4A  B4D8               	btfsc	status,2,c
  7971  000A4C  D00F               	goto	u7420
  7972  000A4E                     u7410:
  7973                           
  7974                           ; BSR set to: 0
  7975                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  7976                           
  7977                           ; BSR set to: 0
  7978                           
  7979                           ;doprnt.c: 1429: do
  7980  000A4E  C0BE  FFD9         	movff	sprintf@sp,fsr2l
  7981  000A52  C0BF  FFDA         	movff	sprintf@sp+1,fsr2h
  7982  000A56  0E20               	movlw	32
  7983  000A58  6EDF               	movwf	indf2,c
  7984                           
  7985                           ; BSR set to: 0
  7986  000A5A  4BBE               	infsnz	sprintf@sp& (0+255),f,b
  7987  000A5C  2BBF               	incf	(sprintf@sp+1)& (0+255),f,b
  7988                           
  7989                           ; BSR set to: 0
  7990                           ;doprnt.c: 1431: while(--width);
  7991  000A5E  07E9               	decf	sprintf@width& (0+255),f,b
  7992  000A60  A0D8               	btfss	status,0,c
  7993  000A62  07EA               	decf	(sprintf@width+1)& (0+255),f,b
  7994  000A64  51E9               	movf	sprintf@width& (0+255),w,b
  7995  000A66  11EA               	iorwf	(sprintf@width+1)& (0+255),w,b
  7996  000A68  A4D8               	btfss	status,2,c
  7997  000A6A  D7F1               	goto	u7410
  7998  000A6C                     u7420:
  7999                           
  8000                           ; BSR set to: 0
  8001                           ;doprnt.c: 1438: if(flag & 0x03)
  8002                           
  8003                           ; BSR set to: 0
  8004                           
  8005                           ; BSR set to: 0
  8006  000A6C  0E03               	movlw	3
  8007  000A6E  15EB               	andwf	sprintf@flag& (0+255),w,b
  8008  000A70  6FCA               	movwf	??_sprintf& (0+255),b
  8009  000A72  0E00               	movlw	0
  8010  000A74  15EC               	andwf	(sprintf@flag+1)& (0+255),w,b
  8011  000A76  6FCB               	movwf	(??_sprintf+1)& (0+255),b
  8012  000A78  51CA               	movf	??_sprintf& (0+255),w,b
  8013  000A7A  11CB               	iorwf	(??_sprintf+1)& (0+255),w,b
  8014  000A7C  B4D8               	btfsc	status,2,c
  8015  000A7E  D008               	goto	l1906
  8016                           
  8017                           ; BSR set to: 0
  8018                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  8019  000A80  C0BE  FFD9         	movff	sprintf@sp,fsr2l
  8020  000A84  C0BF  FFDA         	movff	sprintf@sp+1,fsr2h
  8021  000A88  0E2D               	movlw	45
  8022  000A8A  6EDF               	movwf	indf2,c
  8023                           
  8024                           ; BSR set to: 0
  8025  000A8C  4BBE               	infsnz	sprintf@sp& (0+255),f,b
  8026  000A8E  2BBF               	incf	(sprintf@sp+1)& (0+255),f,b
  8027  000A90                     l1906:
  8028                           
  8029                           ; BSR set to: 0
  8030                           ;doprnt.c: 1469: }
  8031                           ;doprnt.c: 1472: prec = c;
  8032                           
  8033                           ; BSR set to: 0
  8034                           
  8035                           ; BSR set to: 0
  8036  000A90  51ED               	movf	sprintf@c& (0+255),w,b
  8037  000A92  6FDA               	movwf	sprintf@prec& (0+255),b
  8038  000A94  6BDB               	clrf	(sprintf@prec+1)& (0+255),b
  8039  000A96  BFDA               	btfsc	sprintf@prec& (0+255),7,b
  8040  000A98  07DB               	decf	(sprintf@prec+1)& (0+255),f,b
  8041                           
  8042                           ;doprnt.c: 1474: while(prec--) {
  8043  000A9A  D087               	goto	l1907
  8044  000A9C                     
  8045                           ; BSR set to: 0
  8046                           ;doprnt.c: 1486: case 0xC0:
  8047                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  8048                           
  8049                           ; BSR set to: 0
  8050                           
  8051                           ; BSR set to: 0
  8052  000A9C  C0DA  F0CA         	movff	sprintf@prec,??_sprintf
  8053  000AA0  C0DB  F0CB         	movff	sprintf@prec+1,??_sprintf+1
  8054  000AA4  90D8               	bcf	status,0,c
  8055  000AA6  37CA               	rlcf	??_sprintf& (0+255),f,b
  8056  000AA8  37CB               	rlcf	(??_sprintf+1)& (0+255),f,b
  8057  000AAA  90D8               	bcf	status,0,c
  8058  000AAC  37CA               	rlcf	??_sprintf& (0+255),f,b
  8059  000AAE  37CB               	rlcf	(??_sprintf+1)& (0+255),f,b
  8060  000AB0  0E51               	movlw	low _dpowers
  8061  000AB2  25CA               	addwf	??_sprintf& (0+255),w,b
  8062  000AB4  6EF6               	movwf	tblptrl,c
  8063  000AB6  0E7D               	movlw	high _dpowers
  8064  000AB8  21CB               	addwfc	(??_sprintf+1)& (0+255),w,b
  8065  000ABA  6EF7               	movwf	tblptrh,c
  8066  000ABC                     	if	0	;There are less than 3 active tblptr bytes
  8067  000ABC                     	endif
  8068  000ABC  0009               	tblrd		*+
  8069  000ABE  CFF5 F064          	movff	tablat,___lldiv@divisor
  8070  000AC2  0009               	tblrd		*+
  8071  000AC4  CFF5 F065          	movff	tablat,___lldiv@divisor+1
  8072  000AC8  0009               	tblrd		*+
  8073  000ACA  CFF5 F066          	movff	tablat,___lldiv@divisor+2
  8074  000ACE  000A               	tblrd		*-
  8075  000AD0  CFF5 F067          	movff	tablat,___lldiv@divisor+3
  8076  000AD4  C0E2  F060         	movff	sprintf@val,___lldiv@dividend
  8077  000AD8  C0E3  F061         	movff	sprintf@val+1,___lldiv@dividend+1
  8078  000ADC  C0E4  F062         	movff	sprintf@val+2,___lldiv@dividend+2
  8079  000AE0  C0E5  F063         	movff	sprintf@val+3,___lldiv@dividend+3
  8080  000AE4  EC68  F01D         	call	___lldiv	;wreg free
  8081  000AE8  C060  F06D         	movff	?___lldiv,___llmod@dividend
  8082  000AEC  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
  8083  000AF0  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
  8084  000AF4  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
  8085  000AF8  0E0A               	movlw	10
  8086  000AFA  0100               	movlb	0	; () banked
  8087  000AFC  6F71               	movwf	___llmod@divisor& (0+255),b
  8088  000AFE  0E00               	movlw	0
  8089  000B00  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
  8090  000B02  0E00               	movlw	0
  8091  000B04  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
  8092  000B06  0E00               	movlw	0
  8093  000B08  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
  8094  000B0A  EC93  F01E         	call	___llmod	;wreg free
  8095  000B0E  0100               	movlb	0	; () banked
  8096  000B10  516D               	movf	?___llmod& (0+255),w,b
  8097  000B12  0F30               	addlw	48
  8098  000B14  6FED               	movwf	sprintf@c& (0+255),b
  8099                           
  8100                           ;doprnt.c: 1491: break;
  8101  000B16  D041               	goto	l1912
  8102  000B18                     
  8103                           ; BSR set to: 0
  8104                           ;doprnt.c: 1499: {
  8105                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  8106                           
  8107                           ; BSR set to: 0
  8108  000B18  C0E2  F060         	movff	sprintf@val,___lldiv@dividend
  8109  000B1C  C0E3  F061         	movff	sprintf@val+1,___lldiv@dividend+1
  8110  000B20  C0E4  F062         	movff	sprintf@val+2,___lldiv@dividend+2
  8111  000B24  C0E5  F063         	movff	sprintf@val+3,___lldiv@dividend+3
  8112  000B28  C0DA  F0CA         	movff	sprintf@prec,??_sprintf
  8113  000B2C  C0DB  F0CB         	movff	sprintf@prec+1,??_sprintf+1
  8114  000B30  90D8               	bcf	status,0,c
  8115  000B32  37CA               	rlcf	??_sprintf& (0+255),f,b
  8116  000B34  37CB               	rlcf	(??_sprintf+1)& (0+255),f,b
  8117  000B36  90D8               	bcf	status,0,c
  8118  000B38  37CA               	rlcf	??_sprintf& (0+255),f,b
  8119  000B3A  37CB               	rlcf	(??_sprintf+1)& (0+255),f,b
  8120  000B3C  0EC7               	movlw	low _hexpowers
  8121  000B3E  25CA               	addwf	??_sprintf& (0+255),w,b
  8122  000B40  6EF6               	movwf	tblptrl,c
  8123  000B42  0E7D               	movlw	high _hexpowers
  8124  000B44  21CB               	addwfc	(??_sprintf+1)& (0+255),w,b
  8125  000B46  6EF7               	movwf	tblptrh,c
  8126  000B48                     	if	0	;There are less than 3 active tblptr bytes
  8127  000B48                     	endif
  8128  000B48  0009               	tblrd		*+
  8129  000B4A  CFF5 F064          	movff	tablat,___lldiv@divisor
  8130  000B4E  0009               	tblrd		*+
  8131  000B50  CFF5 F065          	movff	tablat,___lldiv@divisor+1
  8132  000B54  0009               	tblrd		*+
  8133  000B56  CFF5 F066          	movff	tablat,___lldiv@divisor+2
  8134  000B5A  000A               	tblrd		*-
  8135  000B5C  CFF5 F067          	movff	tablat,___lldiv@divisor+3
  8136  000B60  EC68  F01D         	call	___lldiv	;wreg free
  8137  000B64  0100               	movlb	0	; () banked
  8138  000B66  5160               	movf	?___lldiv& (0+255),w,b
  8139  000B68  0B0F               	andlw	15
  8140  000B6A  6FD3               	movwf	sprintf@idx& (0+255),b
  8141                           
  8142                           ; BSR set to: 0
  8143                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
  8144  000B6C  51D3               	movf	sprintf@idx& (0+255),w,b
  8145  000B6E  0D01               	mullw	1
  8146  000B70  0E16               	movlw	low STR_26
  8147  000B72  24F3               	addwf	prodl,w,c
  8148  000B74  6EF6               	movwf	tblptrl,c
  8149  000B76  0E7F               	movlw	high STR_26
  8150  000B78  20F4               	addwfc	prodh,w,c
  8151  000B7A  6EF7               	movwf	tblptrh,c
  8152  000B7C                     	if	0	;There are less than 3 active tblptr bytes
  8153  000B7C                     	endif
  8154  000B7C  0008               	tblrd		*
  8155  000B7E  CFF5 F0ED          	movff	tablat,sprintf@c
  8156                           
  8157                           ; BSR set to: 0
  8158                           ;doprnt.c: 1523: }
  8159                           
  8160                           ;doprnt.c: 1508: }
  8161                           ;doprnt.c: 1510: break;
  8162  000B82  D00B               	goto	l1912
  8163  000B84                     l7997:
  8164                           
  8165                           ; BSR set to: 0
  8166  000B84  51EB               	movf	sprintf@flag& (0+255),w,b
  8167  000B86  0BC0               	andlw	192
  8168                           
  8169                           ; Switch size 1, requested type "space"
  8170                           ; Number of cases is 3, Range of values is 0 to 192
  8171                           ; switch strategies available:
  8172                           ; Name         Instructions Cycles
  8173                           ; simple_byte           10     6 (average)
  8174                           ;	Chosen strategy is simple_byte
  8175  000B88  0A00               	xorlw	0	; case 0
  8176  000B8A  B4D8               	btfsc	status,2,c
  8177  000B8C  D787               	goto	l1910
  8178  000B8E  0A80               	xorlw	128	; case 128
  8179  000B90  B4D8               	btfsc	status,2,c
  8180  000B92  D7C2               	goto	l1913
  8181  000B94  0A40               	xorlw	64	; case 192
  8182  000B96  B4D8               	btfsc	status,2,c
  8183  000B98  D781               	goto	l1910
  8184  000B9A                     l1912:
  8185                           
  8186                           ; BSR set to: 0
  8187                           ;doprnt.c: 1524: ((*sp++ = (c)));
  8188                           
  8189                           ; BSR set to: 0
  8190  000B9A  C0BE  FFD9         	movff	sprintf@sp,fsr2l
  8191  000B9E  C0BF  FFDA         	movff	sprintf@sp+1,fsr2h
  8192  000BA2  C0ED  FFDF         	movff	sprintf@c,indf2
  8193                           
  8194                           ; BSR set to: 0
  8195  000BA6  4BBE               	infsnz	sprintf@sp& (0+255),f,b
  8196  000BA8  2BBF               	incf	(sprintf@sp+1)& (0+255),f,b
  8197  000BAA                     l1907:
  8198                           
  8199                           ; BSR set to: 0
  8200                           
  8201                           ; BSR set to: 0
  8202  000BAA  07DA               	decf	sprintf@prec& (0+255),f,b
  8203  000BAC  A0D8               	btfss	status,0,c
  8204  000BAE  07DB               	decf	(sprintf@prec+1)& (0+255),f,b
  8205  000BB0  29DA               	incf	sprintf@prec& (0+255),w,b
  8206  000BB2  E1E8               	bnz	l7997
  8207  000BB4  29DB               	incf	(sprintf@prec+1)& (0+255),w,b
  8208  000BB6  A4D8               	btfss	status,2,c
  8209  000BB8  D7E5               	goto	l1909
  8210  000BBA                     u7440:
  8211                           
  8212                           ; BSR set to: 0
  8213                           
  8214                           ; BSR set to: 0
  8215                           
  8216                           ; BSR set to: 0
  8217  000BBA  C0C0  FFF6         	movff	sprintf@f,tblptrl
  8218  000BBE  C0C1  FFF7         	movff	sprintf@f+1,tblptrh
  8219  000BC2  4BC0               	infsnz	sprintf@f& (0+255),f,b
  8220  000BC4  2BC1               	incf	(sprintf@f+1)& (0+255),f,b
  8221  000BC6                     	if	0	;tblptru may be non-zero
  8222  000BC6                     	endif
  8223  000BC6                     	if	0	;tblptru may be non-zero
  8224  000BC6                     	endif
  8225  000BC6  0008               	tblrd		*
  8226  000BC8  CFF5 F0ED          	movff	tablat,sprintf@c
  8227  000BCC  51ED               	movf	sprintf@c& (0+255),w,b
  8228  000BCE  A4D8               	btfss	status,2,c
  8229  000BD0  EF10  F000         	goto	l1791
  8230  000BD4                     u7450:
  8231                           
  8232                           ;doprnt.c: 1538: *sp = 0;
  8233                           
  8234                           ; BSR set to: 0
  8235                           
  8236                           ;doprnt.c: 1525: }
  8237                           ;doprnt.c: 1533: }
  8238                           ;doprnt.c: 1535: alldone:
  8239                           
  8240                           ; BSR set to: 0
  8241  000BD4  C0BE  FFD9         	movff	sprintf@sp,fsr2l
  8242  000BD8  C0BF  FFDA         	movff	sprintf@sp+1,fsr2h
  8243  000BDC  0E00               	movlw	0
  8244  000BDE  6EDF               	movwf	indf2,c
  8245  000BE0  0012               	return	
  8246  000BE2                     __end_of_sprintf:
  8247                           	opt stack 0
  8248                           tblptru	equ	0xFF8
  8249                           tblptrh	equ	0xFF7
  8250                           tblptrl	equ	0xFF6
  8251                           tablat	equ	0xFF5
  8252                           prodh	equ	0xFF4
  8253                           prodl	equ	0xFF3
  8254                           intcon	equ	0xFF2
  8255                           postinc0	equ	0xFEE
  8256                           wreg	equ	0xFE8
  8257                           indf1	equ	0xFE7
  8258                           postdec1	equ	0xFE5
  8259                           fsr1h	equ	0xFE2
  8260                           fsr1l	equ	0xFE1
  8261                           indf2	equ	0xFDF
  8262                           postinc2	equ	0xFDE
  8263                           postdec2	equ	0xFDD
  8264                           plusw2	equ	0xFDB
  8265                           fsr2h	equ	0xFDA
  8266                           fsr2l	equ	0xFD9
  8267                           status	equ	0xFD8
  8268                           
  8269 ;; *************** function _scale *****************
  8270 ;; Defined at:
  8271 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\doprnt.c"
  8272 ;; Parameters:    Size  Location     Type
  8273 ;;  scl             1    wreg     char 
  8274 ;; Auto vars:     Size  Location     Type
  8275 ;;  scl             1   53[BANK0 ] char 
  8276 ;; Return value:  Size  Location     Type
  8277 ;;                  3   47[BANK0 ] char 
  8278 ;; Registers used:
  8279 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8280 ;; Tracked objects:
  8281 ;;		On entry : 0/0
  8282 ;;		On exit  : 0/0
  8283 ;;		Unchanged: 0/0
  8284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8285 ;;      Params:         0       3       0       0       0       0       0       0       0
  8286 ;;      Locals:         0       4       0       0       0       0       0       0       0
  8287 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8288 ;;      Totals:         0       7       0       0       0       0       0       0       0
  8289 ;;Total ram usage:        7 bytes
  8290 ;; Hardware stack levels used:    1
  8291 ;; Hardware stack levels required when called:   12
  8292 ;; This function calls:
  8293 ;;		___awdiv
  8294 ;;		___awmod
  8295 ;;		___ftmul
  8296 ;;		___wmul
  8297 ;; This function is called by:
  8298 ;;		_sprintf
  8299 ;; This function uses a non-reentrant model
  8300 ;;
  8301                           
  8302                           	psect	text24
  8303  000BE2                     __ptext24:
  8304                           	opt stack 0
  8305  000BE2                     _scale:
  8306                           	opt stack 16
  8307                           
  8308                           ;incstack = 0
  8309                           ;scale@scl stored from wreg
  8310  000BE2  0100               	movlb	0	; () banked
  8311  000BE4  6F95               	movwf	scale@scl& (0+255),b
  8312                           
  8313                           ;doprnt.c: 428: if(scl < 0) {
  8314  000BE6  0100               	movlb	0	; () banked
  8315  000BE8  AF95               	btfss	scale@scl& (0+255),7,b
  8316  000BEA  D10C               	goto	l1780
  8317                           
  8318                           ; BSR set to: 0
  8319                           ;doprnt.c: 429: scl = -scl;
  8320  000BEC  6D95               	negf	scale@scl& (0+255),b
  8321                           
  8322                           ;doprnt.c: 430: if(scl>=110)
  8323  000BEE  5195               	movf	scale@scl& (0+255),w,b
  8324  000BF0  0A80               	xorlw	128
  8325  000BF2  0F12               	addlw	-238
  8326  000BF4  A0D8               	btfss	status,0,c
  8327  000BF6  D097               	goto	l1781
  8328                           
  8329                           ; BSR set to: 0
  8330                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  8331  000BF8  0E00               	movlw	0
  8332  000BFA  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8333  000BFC  0E03               	movlw	3
  8334  000BFE  6F70               	movwf	___wmul@multiplicand& (0+255),b
  8335  000C00  0E00               	movlw	0
  8336  000C02  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  8337  000C04  0E0A               	movlw	10
  8338  000C06  6F68               	movwf	___awdiv@divisor& (0+255),b
  8339  000C08  0E00               	movlw	0
  8340  000C0A  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  8341  000C0C  0E64               	movlw	100
  8342  000C0E  6F62               	movwf	___awmod@divisor& (0+255),b
  8343  000C10  5195               	movf	scale@scl& (0+255),w,b
  8344  000C12  6F60               	movwf	___awmod@dividend& (0+255),b
  8345  000C14  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  8346  000C16  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  8347  000C18  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  8348  000C1A  EC24  F01E         	call	___awmod	;wreg free
  8349  000C1E  C060  F066         	movff	?___awmod,___awdiv@dividend
  8350  000C22  C061  F067         	movff	?___awmod+1,___awdiv@dividend+1
  8351  000C26  ECE2  F01C         	call	___awdiv	;wreg free
  8352  000C2A  0E09               	movlw	9
  8353  000C2C  0100               	movlb	0	; () banked
  8354  000C2E  2566               	addwf	?___awdiv& (0+255),w,b
  8355  000C30  6F6E               	movwf	___wmul@multiplier& (0+255),b
  8356  000C32  0E00               	movlw	0
  8357  000C34  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  8358  000C36  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  8359  000C38  ECE0  F021         	call	___wmul	;wreg free
  8360  000C3C  0EA0               	movlw	low __npowers_
  8361  000C3E  0100               	movlb	0	; () banked
  8362  000C40  256E               	addwf	?___wmul& (0+255),w,b
  8363  000C42  6EF6               	movwf	tblptrl,c
  8364  000C44  0E7D               	movlw	high __npowers_
  8365  000C46  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  8366  000C48  6EF7               	movwf	tblptrh,c
  8367  000C4A                     	if	0	;There are less than 3 active tblptr bytes
  8368  000C4A                     	endif
  8369  000C4A  0009               	tblrd		*+
  8370  000C4C  CFF5 F083          	movff	tablat,___ftmul@f2
  8371  000C50  0009               	tblrd		*+
  8372  000C52  CFF5 F084          	movff	tablat,___ftmul@f2+1
  8373  000C56  000A               	tblrd		*-
  8374  000C58  CFF5 F085          	movff	tablat,___ftmul@f2+2
  8375  000C5C  0E00               	movlw	0
  8376  000C5E  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  8377  000C60  0E64               	movlw	100
  8378  000C62  6F68               	movwf	___awdiv@divisor& (0+255),b
  8379  000C64  5195               	movf	scale@scl& (0+255),w,b
  8380  000C66  6F66               	movwf	___awdiv@dividend& (0+255),b
  8381  000C68  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  8382  000C6A  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
  8383  000C6C  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8384  000C6E  ECE2  F01C         	call	___awdiv	;wreg free
  8385  000C72  0E12               	movlw	18
  8386  000C74  0100               	movlb	0	; () banked
  8387  000C76  2566               	addwf	?___awdiv& (0+255),w,b
  8388  000C78  6F6E               	movwf	___wmul@multiplier& (0+255),b
  8389  000C7A  0E00               	movlw	0
  8390  000C7C  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  8391  000C7E  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  8392  000C80  0E00               	movlw	0
  8393  000C82  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8394  000C84  0E03               	movlw	3
  8395  000C86  6F70               	movwf	___wmul@multiplicand& (0+255),b
  8396  000C88  ECE0  F021         	call	___wmul	;wreg free
  8397  000C8C  0EA0               	movlw	low __npowers_
  8398  000C8E  0100               	movlb	0	; () banked
  8399  000C90  256E               	addwf	?___wmul& (0+255),w,b
  8400  000C92  6EF6               	movwf	tblptrl,c
  8401  000C94  0E7D               	movlw	high __npowers_
  8402  000C96  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  8403  000C98  6EF7               	movwf	tblptrh,c
  8404  000C9A                     	if	0	;There are less than 3 active tblptr bytes
  8405  000C9A                     	endif
  8406  000C9A  0009               	tblrd		*+
  8407  000C9C  CFF5 F080          	movff	tablat,___ftmul@f1
  8408  000CA0  0009               	tblrd		*+
  8409  000CA2  CFF5 F081          	movff	tablat,___ftmul@f1+1
  8410  000CA6  000A               	tblrd		*-
  8411  000CA8  CFF5 F082          	movff	tablat,___ftmul@f1+2
  8412  000CAC  EC00  F016         	call	___ftmul	;wreg free
  8413  000CB0  C080  F092         	movff	?___ftmul,_scale$5269
  8414  000CB4  C081  F093         	movff	?___ftmul+1,_scale$5269+1
  8415  000CB8  C082  F094         	movff	?___ftmul+2,_scale$5269+2
  8416                           
  8417                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  8418  000CBC  C092  F080         	movff	_scale$5269,___ftmul@f1
  8419  000CC0  C093  F081         	movff	_scale$5269+1,___ftmul@f1+1
  8420  000CC4  C094  F082         	movff	_scale$5269+2,___ftmul@f1+2
  8421  000CC8  0E00               	movlw	0
  8422  000CCA  0100               	movlb	0	; () banked
  8423  000CCC  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8424  000CCE  0E03               	movlw	3
  8425  000CD0  6F70               	movwf	___wmul@multiplicand& (0+255),b
  8426  000CD2  0E00               	movlw	0
  8427  000CD4  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  8428  000CD6  0E0A               	movlw	10
  8429  000CD8  6F62               	movwf	___awmod@divisor& (0+255),b
  8430  000CDA  5195               	movf	scale@scl& (0+255),w,b
  8431  000CDC  6F60               	movwf	___awmod@dividend& (0+255),b
  8432  000CDE  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  8433  000CE0  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  8434  000CE2  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  8435  000CE4  EC24  F01E         	call	___awmod	;wreg free
  8436  000CE8  C060  F06E         	movff	?___awmod,___wmul@multiplier
  8437  000CEC  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
  8438  000CF0  ECE0  F021         	call	___wmul	;wreg free
  8439  000CF4  0EA0               	movlw	low __npowers_
  8440  000CF6  0100               	movlb	0	; () banked
  8441  000CF8  256E               	addwf	?___wmul& (0+255),w,b
  8442  000CFA  6EF6               	movwf	tblptrl,c
  8443  000CFC  0E7D               	movlw	high __npowers_
  8444  000CFE  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  8445  000D00  6EF7               	movwf	tblptrh,c
  8446  000D02                     	if	0	;There are less than 3 active tblptr bytes
  8447  000D02                     	endif
  8448  000D02  0009               	tblrd		*+
  8449  000D04  CFF5 F083          	movff	tablat,___ftmul@f2
  8450  000D08  0009               	tblrd		*+
  8451  000D0A  CFF5 F084          	movff	tablat,___ftmul@f2+1
  8452  000D0E  000A               	tblrd		*-
  8453  000D10  CFF5 F085          	movff	tablat,___ftmul@f2+2
  8454  000D14  EC00  F016         	call	___ftmul	;wreg free
  8455  000D18  C080  F08F         	movff	?___ftmul,?_scale
  8456  000D1C  C081  F090         	movff	?___ftmul+1,?_scale+1
  8457  000D20  C082  F091         	movff	?___ftmul+2,?_scale+2
  8458  000D24  0012               	return	
  8459  000D26                     l1781:
  8460                           
  8461                           ;doprnt.c: 432: else if(scl > 10)
  8462  000D26  0100               	movlb	0	; () banked
  8463  000D28  5195               	movf	scale@scl& (0+255),w,b
  8464  000D2A  0A80               	xorlw	128
  8465  000D2C  0F75               	addlw	-139
  8466  000D2E  A0D8               	btfss	status,0,c
  8467  000D30  D056               	goto	l1784
  8468                           
  8469                           ; BSR set to: 0
  8470                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  8471  000D32  0E00               	movlw	0
  8472  000D34  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  8473  000D36  0E0A               	movlw	10
  8474  000D38  6F68               	movwf	___awdiv@divisor& (0+255),b
  8475  000D3A  5195               	movf	scale@scl& (0+255),w,b
  8476  000D3C  6F66               	movwf	___awdiv@dividend& (0+255),b
  8477  000D3E  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  8478  000D40  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
  8479  000D42  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8480  000D44  ECE2  F01C         	call	___awdiv	;wreg free
  8481  000D48  0E09               	movlw	9
  8482  000D4A  0100               	movlb	0	; () banked
  8483  000D4C  2566               	addwf	?___awdiv& (0+255),w,b
  8484  000D4E  6F6E               	movwf	___wmul@multiplier& (0+255),b
  8485  000D50  0E00               	movlw	0
  8486  000D52  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  8487  000D54  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  8488  000D56  0E00               	movlw	0
  8489  000D58  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8490  000D5A  0E03               	movlw	3
  8491  000D5C  6F70               	movwf	___wmul@multiplicand& (0+255),b
  8492  000D5E  ECE0  F021         	call	___wmul	;wreg free
  8493  000D62  0EA0               	movlw	low __npowers_
  8494  000D64  0100               	movlb	0	; () banked
  8495  000D66  256E               	addwf	?___wmul& (0+255),w,b
  8496  000D68  6EF6               	movwf	tblptrl,c
  8497  000D6A  0E7D               	movlw	high __npowers_
  8498  000D6C  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  8499  000D6E  6EF7               	movwf	tblptrh,c
  8500  000D70                     	if	0	;There are less than 3 active tblptr bytes
  8501  000D70                     	endif
  8502  000D70  0009               	tblrd		*+
  8503  000D72  CFF5 F080          	movff	tablat,___ftmul@f1
  8504  000D76  0009               	tblrd		*+
  8505  000D78  CFF5 F081          	movff	tablat,___ftmul@f1+1
  8506  000D7C  000A               	tblrd		*-
  8507  000D7E  CFF5 F082          	movff	tablat,___ftmul@f1+2
  8508  000D82  0E00               	movlw	0
  8509  000D84  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8510  000D86  0E03               	movlw	3
  8511  000D88  6F70               	movwf	___wmul@multiplicand& (0+255),b
  8512  000D8A  0E00               	movlw	0
  8513  000D8C  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  8514  000D8E  0E0A               	movlw	10
  8515  000D90  6F62               	movwf	___awmod@divisor& (0+255),b
  8516  000D92  5195               	movf	scale@scl& (0+255),w,b
  8517  000D94  6F60               	movwf	___awmod@dividend& (0+255),b
  8518  000D96  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  8519  000D98  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  8520  000D9A  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  8521  000D9C  EC24  F01E         	call	___awmod	;wreg free
  8522  000DA0  C060  F06E         	movff	?___awmod,___wmul@multiplier
  8523  000DA4  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
  8524  000DA8  ECE0  F021         	call	___wmul	;wreg free
  8525  000DAC  0EA0               	movlw	low __npowers_
  8526  000DAE  0100               	movlb	0	; () banked
  8527  000DB0  256E               	addwf	?___wmul& (0+255),w,b
  8528  000DB2  6EF6               	movwf	tblptrl,c
  8529  000DB4  0E7D               	movlw	high __npowers_
  8530  000DB6  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  8531  000DB8  6EF7               	movwf	tblptrh,c
  8532  000DBA                     	if	0	;There are less than 3 active tblptr bytes
  8533  000DBA                     	endif
  8534  000DBA  0009               	tblrd		*+
  8535  000DBC  CFF5 F083          	movff	tablat,___ftmul@f2
  8536  000DC0  0009               	tblrd		*+
  8537  000DC2  CFF5 F084          	movff	tablat,___ftmul@f2+1
  8538  000DC6  000A               	tblrd		*-
  8539  000DC8  CFF5 F085          	movff	tablat,___ftmul@f2+2
  8540  000DCC  EC00  F016         	call	___ftmul	;wreg free
  8541  000DD0  C080  F08F         	movff	?___ftmul,?_scale
  8542  000DD4  C081  F090         	movff	?___ftmul+1,?_scale+1
  8543  000DD8  C082  F091         	movff	?___ftmul+2,?_scale+2
  8544  000DDC  0012               	return	
  8545  000DDE                     l1784:
  8546                           
  8547                           ;doprnt.c: 434: return _npowers_[scl];
  8548  000DDE  0100               	movlb	0	; () banked
  8549  000DE0  5195               	movf	scale@scl& (0+255),w,b
  8550  000DE2  0D03               	mullw	3
  8551  000DE4  0EA0               	movlw	low __npowers_
  8552  000DE6  24F3               	addwf	prodl,w,c
  8553  000DE8  6EF6               	movwf	tblptrl,c
  8554  000DEA  0E7D               	movlw	high __npowers_
  8555  000DEC  20F4               	addwfc	prodh,w,c
  8556  000DEE  6EF7               	movwf	tblptrh,c
  8557  000DF0                     	if	0	;There are less than 3 active tblptr bytes
  8558  000DF0                     	endif
  8559  000DF0  0009               	tblrd		*+
  8560  000DF2  CFF5 F08F          	movff	tablat,?_scale
  8561  000DF6  0009               	tblrd		*+
  8562  000DF8  CFF5 F090          	movff	tablat,?_scale+1
  8563  000DFC  000A               	tblrd		*-
  8564  000DFE  CFF5 F091          	movff	tablat,?_scale+2
  8565                           
  8566                           ; BSR set to: 0
  8567  000E02  0012               	return	
  8568  000E04                     l1780:
  8569                           
  8570                           ; BSR set to: 0
  8571                           ;doprnt.c: 435: }
  8572                           ;doprnt.c: 436: if(scl>=110)
  8573                           
  8574                           ; BSR set to: 0
  8575  000E04  5195               	movf	scale@scl& (0+255),w,b
  8576  000E06  0A80               	xorlw	128
  8577  000E08  0F12               	addlw	-238
  8578  000E0A  A0D8               	btfss	status,0,c
  8579  000E0C  D097               	goto	l1785
  8580                           
  8581                           ; BSR set to: 0
  8582                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  8583  000E0E  0E00               	movlw	0
  8584  000E10  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8585  000E12  0E03               	movlw	3
  8586  000E14  6F70               	movwf	___wmul@multiplicand& (0+255),b
  8587  000E16  0E00               	movlw	0
  8588  000E18  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  8589  000E1A  0E0A               	movlw	10
  8590  000E1C  6F68               	movwf	___awdiv@divisor& (0+255),b
  8591  000E1E  0E00               	movlw	0
  8592  000E20  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  8593  000E22  0E64               	movlw	100
  8594  000E24  6F62               	movwf	___awmod@divisor& (0+255),b
  8595  000E26  5195               	movf	scale@scl& (0+255),w,b
  8596  000E28  6F60               	movwf	___awmod@dividend& (0+255),b
  8597  000E2A  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  8598  000E2C  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  8599  000E2E  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  8600  000E30  EC24  F01E         	call	___awmod	;wreg free
  8601  000E34  C060  F066         	movff	?___awmod,___awdiv@dividend
  8602  000E38  C061  F067         	movff	?___awmod+1,___awdiv@dividend+1
  8603  000E3C  ECE2  F01C         	call	___awdiv	;wreg free
  8604  000E40  0E09               	movlw	9
  8605  000E42  0100               	movlb	0	; () banked
  8606  000E44  2566               	addwf	?___awdiv& (0+255),w,b
  8607  000E46  6F6E               	movwf	___wmul@multiplier& (0+255),b
  8608  000E48  0E00               	movlw	0
  8609  000E4A  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  8610  000E4C  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  8611  000E4E  ECE0  F021         	call	___wmul	;wreg free
  8612  000E52  0E79               	movlw	low __powers_
  8613  000E54  0100               	movlb	0	; () banked
  8614  000E56  256E               	addwf	?___wmul& (0+255),w,b
  8615  000E58  6EF6               	movwf	tblptrl,c
  8616  000E5A  0E7D               	movlw	high __powers_
  8617  000E5C  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  8618  000E5E  6EF7               	movwf	tblptrh,c
  8619  000E60                     	if	0	;There are less than 3 active tblptr bytes
  8620  000E60                     	endif
  8621  000E60  0009               	tblrd		*+
  8622  000E62  CFF5 F083          	movff	tablat,___ftmul@f2
  8623  000E66  0009               	tblrd		*+
  8624  000E68  CFF5 F084          	movff	tablat,___ftmul@f2+1
  8625  000E6C  000A               	tblrd		*-
  8626  000E6E  CFF5 F085          	movff	tablat,___ftmul@f2+2
  8627  000E72  0E00               	movlw	0
  8628  000E74  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  8629  000E76  0E64               	movlw	100
  8630  000E78  6F68               	movwf	___awdiv@divisor& (0+255),b
  8631  000E7A  5195               	movf	scale@scl& (0+255),w,b
  8632  000E7C  6F66               	movwf	___awdiv@dividend& (0+255),b
  8633  000E7E  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  8634  000E80  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
  8635  000E82  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8636  000E84  ECE2  F01C         	call	___awdiv	;wreg free
  8637  000E88  0E12               	movlw	18
  8638  000E8A  0100               	movlb	0	; () banked
  8639  000E8C  2566               	addwf	?___awdiv& (0+255),w,b
  8640  000E8E  6F6E               	movwf	___wmul@multiplier& (0+255),b
  8641  000E90  0E00               	movlw	0
  8642  000E92  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  8643  000E94  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  8644  000E96  0E00               	movlw	0
  8645  000E98  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8646  000E9A  0E03               	movlw	3
  8647  000E9C  6F70               	movwf	___wmul@multiplicand& (0+255),b
  8648  000E9E  ECE0  F021         	call	___wmul	;wreg free
  8649  000EA2  0E79               	movlw	low __powers_
  8650  000EA4  0100               	movlb	0	; () banked
  8651  000EA6  256E               	addwf	?___wmul& (0+255),w,b
  8652  000EA8  6EF6               	movwf	tblptrl,c
  8653  000EAA  0E7D               	movlw	high __powers_
  8654  000EAC  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  8655  000EAE  6EF7               	movwf	tblptrh,c
  8656  000EB0                     	if	0	;There are less than 3 active tblptr bytes
  8657  000EB0                     	endif
  8658  000EB0  0009               	tblrd		*+
  8659  000EB2  CFF5 F080          	movff	tablat,___ftmul@f1
  8660  000EB6  0009               	tblrd		*+
  8661  000EB8  CFF5 F081          	movff	tablat,___ftmul@f1+1
  8662  000EBC  000A               	tblrd		*-
  8663  000EBE  CFF5 F082          	movff	tablat,___ftmul@f1+2
  8664  000EC2  EC00  F016         	call	___ftmul	;wreg free
  8665  000EC6  C080  F092         	movff	?___ftmul,_scale$5269
  8666  000ECA  C081  F093         	movff	?___ftmul+1,_scale$5269+1
  8667  000ECE  C082  F094         	movff	?___ftmul+2,_scale$5269+2
  8668                           
  8669                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  8670  000ED2  C092  F080         	movff	_scale$5269,___ftmul@f1
  8671  000ED6  C093  F081         	movff	_scale$5269+1,___ftmul@f1+1
  8672  000EDA  C094  F082         	movff	_scale$5269+2,___ftmul@f1+2
  8673  000EDE  0E00               	movlw	0
  8674  000EE0  0100               	movlb	0	; () banked
  8675  000EE2  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8676  000EE4  0E03               	movlw	3
  8677  000EE6  6F70               	movwf	___wmul@multiplicand& (0+255),b
  8678  000EE8  0E00               	movlw	0
  8679  000EEA  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  8680  000EEC  0E0A               	movlw	10
  8681  000EEE  6F62               	movwf	___awmod@divisor& (0+255),b
  8682  000EF0  5195               	movf	scale@scl& (0+255),w,b
  8683  000EF2  6F60               	movwf	___awmod@dividend& (0+255),b
  8684  000EF4  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  8685  000EF6  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  8686  000EF8  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  8687  000EFA  EC24  F01E         	call	___awmod	;wreg free
  8688  000EFE  C060  F06E         	movff	?___awmod,___wmul@multiplier
  8689  000F02  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
  8690  000F06  ECE0  F021         	call	___wmul	;wreg free
  8691  000F0A  0E79               	movlw	low __powers_
  8692  000F0C  0100               	movlb	0	; () banked
  8693  000F0E  256E               	addwf	?___wmul& (0+255),w,b
  8694  000F10  6EF6               	movwf	tblptrl,c
  8695  000F12  0E7D               	movlw	high __powers_
  8696  000F14  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  8697  000F16  6EF7               	movwf	tblptrh,c
  8698  000F18                     	if	0	;There are less than 3 active tblptr bytes
  8699  000F18                     	endif
  8700  000F18  0009               	tblrd		*+
  8701  000F1A  CFF5 F083          	movff	tablat,___ftmul@f2
  8702  000F1E  0009               	tblrd		*+
  8703  000F20  CFF5 F084          	movff	tablat,___ftmul@f2+1
  8704  000F24  000A               	tblrd		*-
  8705  000F26  CFF5 F085          	movff	tablat,___ftmul@f2+2
  8706  000F2A  EC00  F016         	call	___ftmul	;wreg free
  8707  000F2E  C080  F08F         	movff	?___ftmul,?_scale
  8708  000F32  C081  F090         	movff	?___ftmul+1,?_scale+1
  8709  000F36  C082  F091         	movff	?___ftmul+2,?_scale+2
  8710  000F3A  0012               	return	
  8711  000F3C                     l1785:
  8712                           
  8713                           ;doprnt.c: 438: else if(scl > 10)
  8714  000F3C  0100               	movlb	0	; () banked
  8715  000F3E  5195               	movf	scale@scl& (0+255),w,b
  8716  000F40  0A80               	xorlw	128
  8717  000F42  0F75               	addlw	-139
  8718  000F44  A0D8               	btfss	status,0,c
  8719  000F46  D056               	goto	l1787
  8720                           
  8721                           ; BSR set to: 0
  8722                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  8723  000F48  0E00               	movlw	0
  8724  000F4A  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  8725  000F4C  0E0A               	movlw	10
  8726  000F4E  6F68               	movwf	___awdiv@divisor& (0+255),b
  8727  000F50  5195               	movf	scale@scl& (0+255),w,b
  8728  000F52  6F66               	movwf	___awdiv@dividend& (0+255),b
  8729  000F54  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  8730  000F56  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
  8731  000F58  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8732  000F5A  ECE2  F01C         	call	___awdiv	;wreg free
  8733  000F5E  0E09               	movlw	9
  8734  000F60  0100               	movlb	0	; () banked
  8735  000F62  2566               	addwf	?___awdiv& (0+255),w,b
  8736  000F64  6F6E               	movwf	___wmul@multiplier& (0+255),b
  8737  000F66  0E00               	movlw	0
  8738  000F68  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  8739  000F6A  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  8740  000F6C  0E00               	movlw	0
  8741  000F6E  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8742  000F70  0E03               	movlw	3
  8743  000F72  6F70               	movwf	___wmul@multiplicand& (0+255),b
  8744  000F74  ECE0  F021         	call	___wmul	;wreg free
  8745  000F78  0E79               	movlw	low __powers_
  8746  000F7A  0100               	movlb	0	; () banked
  8747  000F7C  256E               	addwf	?___wmul& (0+255),w,b
  8748  000F7E  6EF6               	movwf	tblptrl,c
  8749  000F80  0E7D               	movlw	high __powers_
  8750  000F82  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  8751  000F84  6EF7               	movwf	tblptrh,c
  8752  000F86                     	if	0	;There are less than 3 active tblptr bytes
  8753  000F86                     	endif
  8754  000F86  0009               	tblrd		*+
  8755  000F88  CFF5 F080          	movff	tablat,___ftmul@f1
  8756  000F8C  0009               	tblrd		*+
  8757  000F8E  CFF5 F081          	movff	tablat,___ftmul@f1+1
  8758  000F92  000A               	tblrd		*-
  8759  000F94  CFF5 F082          	movff	tablat,___ftmul@f1+2
  8760  000F98  0E00               	movlw	0
  8761  000F9A  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8762  000F9C  0E03               	movlw	3
  8763  000F9E  6F70               	movwf	___wmul@multiplicand& (0+255),b
  8764  000FA0  0E00               	movlw	0
  8765  000FA2  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  8766  000FA4  0E0A               	movlw	10
  8767  000FA6  6F62               	movwf	___awmod@divisor& (0+255),b
  8768  000FA8  5195               	movf	scale@scl& (0+255),w,b
  8769  000FAA  6F60               	movwf	___awmod@dividend& (0+255),b
  8770  000FAC  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  8771  000FAE  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  8772  000FB0  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  8773  000FB2  EC24  F01E         	call	___awmod	;wreg free
  8774  000FB6  C060  F06E         	movff	?___awmod,___wmul@multiplier
  8775  000FBA  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
  8776  000FBE  ECE0  F021         	call	___wmul	;wreg free
  8777  000FC2  0E79               	movlw	low __powers_
  8778  000FC4  0100               	movlb	0	; () banked
  8779  000FC6  256E               	addwf	?___wmul& (0+255),w,b
  8780  000FC8  6EF6               	movwf	tblptrl,c
  8781  000FCA  0E7D               	movlw	high __powers_
  8782  000FCC  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  8783  000FCE  6EF7               	movwf	tblptrh,c
  8784  000FD0                     	if	0	;There are less than 3 active tblptr bytes
  8785  000FD0                     	endif
  8786  000FD0  0009               	tblrd		*+
  8787  000FD2  CFF5 F083          	movff	tablat,___ftmul@f2
  8788  000FD6  0009               	tblrd		*+
  8789  000FD8  CFF5 F084          	movff	tablat,___ftmul@f2+1
  8790  000FDC  000A               	tblrd		*-
  8791  000FDE  CFF5 F085          	movff	tablat,___ftmul@f2+2
  8792  000FE2  EC00  F016         	call	___ftmul	;wreg free
  8793  000FE6  C080  F08F         	movff	?___ftmul,?_scale
  8794  000FEA  C081  F090         	movff	?___ftmul+1,?_scale+1
  8795  000FEE  C082  F091         	movff	?___ftmul+2,?_scale+2
  8796  000FF2  0012               	return	
  8797  000FF4                     l1787:
  8798                           
  8799                           ;doprnt.c: 440: return _powers_[scl];
  8800  000FF4  0100               	movlb	0	; () banked
  8801  000FF6  5195               	movf	scale@scl& (0+255),w,b
  8802  000FF8  0D03               	mullw	3
  8803  000FFA  0E79               	movlw	low __powers_
  8804  000FFC  24F3               	addwf	prodl,w,c
  8805  000FFE  6EF6               	movwf	tblptrl,c
  8806  001000  0E7D               	movlw	high __powers_
  8807  001002  20F4               	addwfc	prodh,w,c
  8808  001004  6EF7               	movwf	tblptrh,c
  8809  001006                     	if	0	;There are less than 3 active tblptr bytes
  8810  001006                     	endif
  8811  001006  0009               	tblrd		*+
  8812  001008  CFF5 F08F          	movff	tablat,?_scale
  8813  00100C  0009               	tblrd		*+
  8814  00100E  CFF5 F090          	movff	tablat,?_scale+1
  8815  001012  000A               	tblrd		*-
  8816  001014  CFF5 F091          	movff	tablat,?_scale+2
  8817  001018  0012               	return	
  8818  00101A                     __end_of_scale:
  8819                           	opt stack 0
  8820                           tblptru	equ	0xFF8
  8821                           tblptrh	equ	0xFF7
  8822                           tblptrl	equ	0xFF6
  8823                           tablat	equ	0xFF5
  8824                           prodh	equ	0xFF4
  8825                           prodl	equ	0xFF3
  8826                           intcon	equ	0xFF2
  8827                           postinc0	equ	0xFEE
  8828                           wreg	equ	0xFE8
  8829                           indf1	equ	0xFE7
  8830                           postdec1	equ	0xFE5
  8831                           fsr1h	equ	0xFE2
  8832                           fsr1l	equ	0xFE1
  8833                           indf2	equ	0xFDF
  8834                           postinc2	equ	0xFDE
  8835                           postdec2	equ	0xFDD
  8836                           plusw2	equ	0xFDB
  8837                           fsr2h	equ	0xFDA
  8838                           fsr2l	equ	0xFD9
  8839                           status	equ	0xFD8
  8840                           
  8841 ;; *************** function _isdigit *****************
  8842 ;; Defined at:
  8843 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\isdigit.c"
  8844 ;; Parameters:    Size  Location     Type
  8845 ;;  c               1    wreg     unsigned char 
  8846 ;; Auto vars:     Size  Location     Type
  8847 ;;  c               1    2[BANK0 ] unsigned char 
  8848 ;; Return value:  Size  Location     Type
  8849 ;;		None               void
  8850 ;; Registers used:
  8851 ;;		wreg, status,2, status,0
  8852 ;; Tracked objects:
  8853 ;;		On entry : 0/0
  8854 ;;		On exit  : 0/0
  8855 ;;		Unchanged: 0/0
  8856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8857 ;;      Params:         0       0       0       0       0       0       0       0       0
  8858 ;;      Locals:         0       2       0       0       0       0       0       0       0
  8859 ;;      Temps:          0       1       0       0       0       0       0       0       0
  8860 ;;      Totals:         0       3       0       0       0       0       0       0       0
  8861 ;;Total ram usage:        3 bytes
  8862 ;; Hardware stack levels used:    1
  8863 ;; Hardware stack levels required when called:   10
  8864 ;; This function calls:
  8865 ;;		Nothing
  8866 ;; This function is called by:
  8867 ;;		_sprintf
  8868 ;; This function uses a non-reentrant model
  8869 ;;
  8870                           
  8871                           	psect	text25
  8872  0044C8                     __ptext25:
  8873                           	opt stack 0
  8874  0044C8                     _isdigit:
  8875                           	opt stack 18
  8876                           
  8877                           ;incstack = 0
  8878                           ;isdigit@c stored from wreg
  8879  0044C8  0100               	movlb	0	; () banked
  8880  0044CA  6F62               	movwf	isdigit@c& (0+255),b
  8881  0044CC  0E00               	movlw	0
  8882  0044CE  0100               	movlb	0	; () banked
  8883  0044D0  6F61               	movwf	_isdigit$4726& (0+255),b
  8884                           
  8885                           ; BSR set to: 0
  8886  0044D2  0E3A               	movlw	58
  8887  0044D4  6162               	cpfslt	isdigit@c& (0+255),b
  8888  0044D6  D005               	goto	l2280
  8889                           
  8890                           ; BSR set to: 0
  8891  0044D8  0E2F               	movlw	47
  8892  0044DA  6562               	cpfsgt	isdigit@c& (0+255),b
  8893  0044DC  D002               	goto	l2280
  8894                           
  8895                           ; BSR set to: 0
  8896  0044DE  0E01               	movlw	1
  8897  0044E0  6F61               	movwf	_isdigit$4726& (0+255),b
  8898  0044E2                     l2280:
  8899                           
  8900                           ; BSR set to: 0
  8901                           
  8902                           ; BSR set to: 0
  8903  0044E2  C061  F060         	movff	_isdigit$4726,??_isdigit
  8904  0044E6  3160               	rrcf	??_isdigit& (0+255),w,b
  8905  0044E8  0012               	return	
  8906  0044EA                     __end_of_isdigit:
  8907                           	opt stack 0
  8908                           tblptru	equ	0xFF8
  8909                           tblptrh	equ	0xFF7
  8910                           tblptrl	equ	0xFF6
  8911                           tablat	equ	0xFF5
  8912                           prodh	equ	0xFF4
  8913                           prodl	equ	0xFF3
  8914                           intcon	equ	0xFF2
  8915                           postinc0	equ	0xFEE
  8916                           wreg	equ	0xFE8
  8917                           indf1	equ	0xFE7
  8918                           postdec1	equ	0xFE5
  8919                           fsr1h	equ	0xFE2
  8920                           fsr1l	equ	0xFE1
  8921                           indf2	equ	0xFDF
  8922                           postinc2	equ	0xFDE
  8923                           postdec2	equ	0xFDD
  8924                           plusw2	equ	0xFDB
  8925                           fsr2h	equ	0xFDA
  8926                           fsr2l	equ	0xFD9
  8927                           status	equ	0xFD8
  8928                           
  8929 ;; *************** function _fround *****************
  8930 ;; Defined at:
  8931 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\doprnt.c"
  8932 ;; Parameters:    Size  Location     Type
  8933 ;;  prec            1    wreg     unsigned char 
  8934 ;; Auto vars:     Size  Location     Type
  8935 ;;  prec            1   56[BANK0 ] unsigned char 
  8936 ;; Return value:  Size  Location     Type
  8937 ;;                  3   47[BANK0 ] unsigned char 
  8938 ;; Registers used:
  8939 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8940 ;; Tracked objects:
  8941 ;;		On entry : 0/0
  8942 ;;		On exit  : 0/0
  8943 ;;		Unchanged: 0/0
  8944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8945 ;;      Params:         0       3       0       0       0       0       0       0       0
  8946 ;;      Locals:         0       7       0       0       0       0       0       0       0
  8947 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8948 ;;      Totals:         0      10       0       0       0       0       0       0       0
  8949 ;;Total ram usage:       10 bytes
  8950 ;; Hardware stack levels used:    1
  8951 ;; Hardware stack levels required when called:   12
  8952 ;; This function calls:
  8953 ;;		___awdiv
  8954 ;;		___awmod
  8955 ;;		___ftmul
  8956 ;;		___wmul
  8957 ;; This function is called by:
  8958 ;;		_sprintf
  8959 ;; This function uses a non-reentrant model
  8960 ;;
  8961                           
  8962                           	psect	text26
  8963  00129A                     __ptext26:
  8964                           	opt stack 0
  8965  00129A                     _fround:
  8966                           	opt stack 16
  8967                           
  8968                           ; BSR set to: 0
  8969                           ;incstack = 0
  8970                           ;fround@prec stored from wreg
  8971  00129A  0100               	movlb	0	; () banked
  8972  00129C  6F98               	movwf	fround@prec& (0+255),b
  8973                           
  8974                           ;doprnt.c: 413: if(prec>=110)
  8975  00129E  0E6D               	movlw	109
  8976  0012A0  0100               	movlb	0	; () banked
  8977  0012A2  6598               	cpfsgt	fround@prec& (0+255),b
  8978  0012A4  D0A6               	goto	l1774
  8979                           
  8980                           ; BSR set to: 0
  8981                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8982  0012A6  0E00               	movlw	0
  8983  0012A8  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8984  0012AA  0E03               	movlw	3
  8985  0012AC  6F70               	movwf	___wmul@multiplicand& (0+255),b
  8986  0012AE  0E00               	movlw	0
  8987  0012B0  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  8988  0012B2  0E0A               	movlw	10
  8989  0012B4  6F68               	movwf	___awdiv@divisor& (0+255),b
  8990  0012B6  0E00               	movlw	0
  8991  0012B8  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  8992  0012BA  0E64               	movlw	100
  8993  0012BC  6F62               	movwf	___awmod@divisor& (0+255),b
  8994  0012BE  C098  F060         	movff	fround@prec,___awmod@dividend
  8995  0012C2  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  8996  0012C4  EC24  F01E         	call	___awmod	;wreg free
  8997  0012C8  C060  F066         	movff	?___awmod,___awdiv@dividend
  8998  0012CC  C061  F067         	movff	?___awmod+1,___awdiv@dividend+1
  8999  0012D0  ECE2  F01C         	call	___awdiv	;wreg free
  9000  0012D4  0E09               	movlw	9
  9001  0012D6  0100               	movlb	0	; () banked
  9002  0012D8  2566               	addwf	?___awdiv& (0+255),w,b
  9003  0012DA  6F6E               	movwf	___wmul@multiplier& (0+255),b
  9004  0012DC  0E00               	movlw	0
  9005  0012DE  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  9006  0012E0  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  9007  0012E2  ECE0  F021         	call	___wmul	;wreg free
  9008  0012E6  0EA0               	movlw	low __npowers_
  9009  0012E8  0100               	movlb	0	; () banked
  9010  0012EA  256E               	addwf	?___wmul& (0+255),w,b
  9011  0012EC  6EF6               	movwf	tblptrl,c
  9012  0012EE  0E7D               	movlw	high __npowers_
  9013  0012F0  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  9014  0012F2  6EF7               	movwf	tblptrh,c
  9015  0012F4                     	if	0	;There are less than 3 active tblptr bytes
  9016  0012F4                     	endif
  9017  0012F4  0009               	tblrd		*+
  9018  0012F6  CFF5 F083          	movff	tablat,___ftmul@f2
  9019  0012FA  0009               	tblrd		*+
  9020  0012FC  CFF5 F084          	movff	tablat,___ftmul@f2+1
  9021  001300  000A               	tblrd		*-
  9022  001302  CFF5 F085          	movff	tablat,___ftmul@f2+2
  9023  001306  0E00               	movlw	0
  9024  001308  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  9025  00130A  0E64               	movlw	100
  9026  00130C  6F68               	movwf	___awdiv@divisor& (0+255),b
  9027  00130E  C098  F066         	movff	fround@prec,___awdiv@dividend
  9028  001312  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  9029  001314  ECE2  F01C         	call	___awdiv	;wreg free
  9030  001318  0E12               	movlw	18
  9031  00131A  0100               	movlb	0	; () banked
  9032  00131C  2566               	addwf	?___awdiv& (0+255),w,b
  9033  00131E  6F6E               	movwf	___wmul@multiplier& (0+255),b
  9034  001320  0E00               	movlw	0
  9035  001322  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  9036  001324  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  9037  001326  0E00               	movlw	0
  9038  001328  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9039  00132A  0E03               	movlw	3
  9040  00132C  6F70               	movwf	___wmul@multiplicand& (0+255),b
  9041  00132E  ECE0  F021         	call	___wmul	;wreg free
  9042  001332  0EA0               	movlw	low __npowers_
  9043  001334  0100               	movlb	0	; () banked
  9044  001336  256E               	addwf	?___wmul& (0+255),w,b
  9045  001338  6EF6               	movwf	tblptrl,c
  9046  00133A  0E7D               	movlw	high __npowers_
  9047  00133C  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  9048  00133E  6EF7               	movwf	tblptrh,c
  9049  001340                     	if	0	;There are less than 3 active tblptr bytes
  9050  001340                     	endif
  9051  001340  0009               	tblrd		*+
  9052  001342  CFF5 F080          	movff	tablat,___ftmul@f1
  9053  001346  0009               	tblrd		*+
  9054  001348  CFF5 F081          	movff	tablat,___ftmul@f1+1
  9055  00134C  000A               	tblrd		*-
  9056  00134E  CFF5 F082          	movff	tablat,___ftmul@f1+2
  9057  001352  EC00  F016         	call	___ftmul	;wreg free
  9058  001356  C080  F095         	movff	?___ftmul,_fround$5267
  9059  00135A  C081  F096         	movff	?___ftmul+1,_fround$5267+1
  9060  00135E  C082  F097         	movff	?___ftmul+2,_fround$5267+2
  9061                           
  9062                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  9063  001362  0E00               	movlw	0
  9064  001364  0100               	movlb	0	; () banked
  9065  001366  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9066  001368  0E03               	movlw	3
  9067  00136A  6F70               	movwf	___wmul@multiplicand& (0+255),b
  9068  00136C  0E00               	movlw	0
  9069  00136E  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  9070  001370  0E0A               	movlw	10
  9071  001372  6F62               	movwf	___awmod@divisor& (0+255),b
  9072  001374  C098  F060         	movff	fround@prec,___awmod@dividend
  9073  001378  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  9074  00137A  EC24  F01E         	call	___awmod	;wreg free
  9075  00137E  C060  F06E         	movff	?___awmod,___wmul@multiplier
  9076  001382  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
  9077  001386  ECE0  F021         	call	___wmul	;wreg free
  9078  00138A  0EA0               	movlw	low __npowers_
  9079  00138C  0100               	movlb	0	; () banked
  9080  00138E  256E               	addwf	?___wmul& (0+255),w,b
  9081  001390  6EF6               	movwf	tblptrl,c
  9082  001392  0E7D               	movlw	high __npowers_
  9083  001394  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  9084  001396  6EF7               	movwf	tblptrh,c
  9085  001398                     	if	0	;There are less than 3 active tblptr bytes
  9086  001398                     	endif
  9087  001398  0009               	tblrd		*+
  9088  00139A  CFF5 F083          	movff	tablat,___ftmul@f2
  9089  00139E  0009               	tblrd		*+
  9090  0013A0  CFF5 F084          	movff	tablat,___ftmul@f2+1
  9091  0013A4  000A               	tblrd		*-
  9092  0013A6  CFF5 F085          	movff	tablat,___ftmul@f2+2
  9093  0013AA  C095  F080         	movff	_fround$5267,___ftmul@f1
  9094  0013AE  C096  F081         	movff	_fround$5267+1,___ftmul@f1+1
  9095  0013B2  C097  F082         	movff	_fround$5267+2,___ftmul@f1+2
  9096  0013B6  EC00  F016         	call	___ftmul	;wreg free
  9097  0013BA  C080  F092         	movff	?___ftmul,_fround$5268
  9098  0013BE  C081  F093         	movff	?___ftmul+1,_fround$5268+1
  9099  0013C2  C082  F094         	movff	?___ftmul+2,_fround$5268+2
  9100                           
  9101                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  9102  0013C6  C092  F080         	movff	_fround$5268,___ftmul@f1
  9103  0013CA  C093  F081         	movff	_fround$5268+1,___ftmul@f1+1
  9104  0013CE  C094  F082         	movff	_fround$5268+2,___ftmul@f1+2
  9105  0013D2  0E00               	movlw	0
  9106  0013D4  0100               	movlb	0	; () banked
  9107  0013D6  6F83               	movwf	___ftmul@f2& (0+255),b
  9108  0013D8  0E00               	movlw	0
  9109  0013DA  6F84               	movwf	(___ftmul@f2+1)& (0+255),b
  9110  0013DC  0E3F               	movlw	63
  9111  0013DE  6F85               	movwf	(___ftmul@f2+2)& (0+255),b
  9112  0013E0  EC00  F016         	call	___ftmul	;wreg free
  9113  0013E4  C080  F08F         	movff	?___ftmul,?_fround
  9114  0013E8  C081  F090         	movff	?___ftmul+1,?_fround+1
  9115  0013EC  C082  F091         	movff	?___ftmul+2,?_fround+2
  9116  0013F0  0012               	return	
  9117  0013F2                     l1774:
  9118                           
  9119                           ;doprnt.c: 415: else if(prec > 10)
  9120  0013F2  0E0A               	movlw	10
  9121  0013F4  0100               	movlb	0	; () banked
  9122  0013F6  6598               	cpfsgt	fround@prec& (0+255),b
  9123  0013F8  D067               	goto	l1777
  9124                           
  9125                           ; BSR set to: 0
  9126                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  9127  0013FA  0E00               	movlw	0
  9128  0013FC  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9129  0013FE  0E03               	movlw	3
  9130  001400  6F70               	movwf	___wmul@multiplicand& (0+255),b
  9131  001402  0E00               	movlw	0
  9132  001404  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  9133  001406  0E0A               	movlw	10
  9134  001408  6F62               	movwf	___awmod@divisor& (0+255),b
  9135  00140A  C098  F060         	movff	fround@prec,___awmod@dividend
  9136  00140E  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  9137  001410  EC24  F01E         	call	___awmod	;wreg free
  9138  001414  C060  F06E         	movff	?___awmod,___wmul@multiplier
  9139  001418  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
  9140  00141C  ECE0  F021         	call	___wmul	;wreg free
  9141  001420  0EA0               	movlw	low __npowers_
  9142  001422  0100               	movlb	0	; () banked
  9143  001424  256E               	addwf	?___wmul& (0+255),w,b
  9144  001426  6EF6               	movwf	tblptrl,c
  9145  001428  0E7D               	movlw	high __npowers_
  9146  00142A  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  9147  00142C  6EF7               	movwf	tblptrh,c
  9148  00142E                     	if	0	;There are less than 3 active tblptr bytes
  9149  00142E                     	endif
  9150  00142E  0009               	tblrd		*+
  9151  001430  CFF5 F083          	movff	tablat,___ftmul@f2
  9152  001434  0009               	tblrd		*+
  9153  001436  CFF5 F084          	movff	tablat,___ftmul@f2+1
  9154  00143A  000A               	tblrd		*-
  9155  00143C  CFF5 F085          	movff	tablat,___ftmul@f2+2
  9156  001440  0E00               	movlw	0
  9157  001442  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  9158  001444  0E0A               	movlw	10
  9159  001446  6F68               	movwf	___awdiv@divisor& (0+255),b
  9160  001448  C098  F066         	movff	fround@prec,___awdiv@dividend
  9161  00144C  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  9162  00144E  ECE2  F01C         	call	___awdiv	;wreg free
  9163  001452  0E09               	movlw	9
  9164  001454  0100               	movlb	0	; () banked
  9165  001456  2566               	addwf	?___awdiv& (0+255),w,b
  9166  001458  6F6E               	movwf	___wmul@multiplier& (0+255),b
  9167  00145A  0E00               	movlw	0
  9168  00145C  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  9169  00145E  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  9170  001460  0E00               	movlw	0
  9171  001462  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9172  001464  0E03               	movlw	3
  9173  001466  6F70               	movwf	___wmul@multiplicand& (0+255),b
  9174  001468  ECE0  F021         	call	___wmul	;wreg free
  9175  00146C  0EA0               	movlw	low __npowers_
  9176  00146E  0100               	movlb	0	; () banked
  9177  001470  256E               	addwf	?___wmul& (0+255),w,b
  9178  001472  6EF6               	movwf	tblptrl,c
  9179  001474  0E7D               	movlw	high __npowers_
  9180  001476  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  9181  001478  6EF7               	movwf	tblptrh,c
  9182  00147A                     	if	0	;There are less than 3 active tblptr bytes
  9183  00147A                     	endif
  9184  00147A  0009               	tblrd		*+
  9185  00147C  CFF5 F080          	movff	tablat,___ftmul@f1
  9186  001480  0009               	tblrd		*+
  9187  001482  CFF5 F081          	movff	tablat,___ftmul@f1+1
  9188  001486  000A               	tblrd		*-
  9189  001488  CFF5 F082          	movff	tablat,___ftmul@f1+2
  9190  00148C  EC00  F016         	call	___ftmul	;wreg free
  9191  001490  C080  F095         	movff	?___ftmul,_fround$5267
  9192  001494  C081  F096         	movff	?___ftmul+1,_fround$5267+1
  9193  001498  C082  F097         	movff	?___ftmul+2,_fround$5267+2
  9194                           
  9195                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  9196  00149C  C095  F080         	movff	_fround$5267,___ftmul@f1
  9197  0014A0  C096  F081         	movff	_fround$5267+1,___ftmul@f1+1
  9198  0014A4  C097  F082         	movff	_fround$5267+2,___ftmul@f1+2
  9199  0014A8  0E00               	movlw	0
  9200  0014AA  0100               	movlb	0	; () banked
  9201  0014AC  6F83               	movwf	___ftmul@f2& (0+255),b
  9202  0014AE  0E00               	movlw	0
  9203  0014B0  6F84               	movwf	(___ftmul@f2+1)& (0+255),b
  9204  0014B2  0E3F               	movlw	63
  9205  0014B4  6F85               	movwf	(___ftmul@f2+2)& (0+255),b
  9206  0014B6  EC00  F016         	call	___ftmul	;wreg free
  9207  0014BA  C080  F08F         	movff	?___ftmul,?_fround
  9208  0014BE  C081  F090         	movff	?___ftmul+1,?_fround+1
  9209  0014C2  C082  F091         	movff	?___ftmul+2,?_fround+2
  9210  0014C6  0012               	return	
  9211  0014C8                     l1777:
  9212                           
  9213                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  9214  0014C8  0100               	movlb	0	; () banked
  9215  0014CA  5198               	movf	fround@prec& (0+255),w,b
  9216  0014CC  0D03               	mullw	3
  9217  0014CE  0EA0               	movlw	low __npowers_
  9218  0014D0  24F3               	addwf	prodl,w,c
  9219  0014D2  6EF6               	movwf	tblptrl,c
  9220  0014D4  0E7D               	movlw	high __npowers_
  9221  0014D6  20F4               	addwfc	prodh,w,c
  9222  0014D8  6EF7               	movwf	tblptrh,c
  9223  0014DA                     	if	0	;There are less than 3 active tblptr bytes
  9224  0014DA                     	endif
  9225  0014DA  0009               	tblrd		*+
  9226  0014DC  CFF5 F080          	movff	tablat,___ftmul@f1
  9227  0014E0  0009               	tblrd		*+
  9228  0014E2  CFF5 F081          	movff	tablat,___ftmul@f1+1
  9229  0014E6  000A               	tblrd		*-
  9230  0014E8  CFF5 F082          	movff	tablat,___ftmul@f1+2
  9231  0014EC  0E00               	movlw	0
  9232  0014EE  6F83               	movwf	___ftmul@f2& (0+255),b
  9233  0014F0  0E00               	movlw	0
  9234  0014F2  6F84               	movwf	(___ftmul@f2+1)& (0+255),b
  9235  0014F4  0E3F               	movlw	63
  9236  0014F6  6F85               	movwf	(___ftmul@f2+2)& (0+255),b
  9237  0014F8  EC00  F016         	call	___ftmul	;wreg free
  9238  0014FC  C080  F08F         	movff	?___ftmul,?_fround
  9239  001500  C081  F090         	movff	?___ftmul+1,?_fround+1
  9240  001504  C082  F091         	movff	?___ftmul+2,?_fround+2
  9241  001508  0012               	return	
  9242  00150A                     __end_of_fround:
  9243                           	opt stack 0
  9244                           tblptru	equ	0xFF8
  9245                           tblptrh	equ	0xFF7
  9246                           tblptrl	equ	0xFF6
  9247                           tablat	equ	0xFF5
  9248                           prodh	equ	0xFF4
  9249                           prodl	equ	0xFF3
  9250                           intcon	equ	0xFF2
  9251                           postinc0	equ	0xFEE
  9252                           wreg	equ	0xFE8
  9253                           indf1	equ	0xFE7
  9254                           postdec1	equ	0xFE5
  9255                           fsr1h	equ	0xFE2
  9256                           fsr1l	equ	0xFE1
  9257                           indf2	equ	0xFDF
  9258                           postinc2	equ	0xFDE
  9259                           postdec2	equ	0xFDD
  9260                           plusw2	equ	0xFDB
  9261                           fsr2h	equ	0xFDA
  9262                           fsr2l	equ	0xFD9
  9263                           status	equ	0xFD8
  9264                           
  9265 ;; *************** function ___wmul *****************
  9266 ;; Defined at:
  9267 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\Umul16.c"
  9268 ;; Parameters:    Size  Location     Type
  9269 ;;  multiplier      2   14[BANK0 ] unsigned int 
  9270 ;;  multiplicand    2   16[BANK0 ] unsigned int 
  9271 ;; Auto vars:     Size  Location     Type
  9272 ;;  product         2   18[BANK0 ] unsigned int 
  9273 ;; Return value:  Size  Location     Type
  9274 ;;                  2   14[BANK0 ] unsigned int 
  9275 ;; Registers used:
  9276 ;;		wreg, status,2, status,0, prodl, prodh
  9277 ;; Tracked objects:
  9278 ;;		On entry : 0/0
  9279 ;;		On exit  : 0/0
  9280 ;;		Unchanged: 0/0
  9281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9282 ;;      Params:         0       4       0       0       0       0       0       0       0
  9283 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9284 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9285 ;;      Totals:         0       6       0       0       0       0       0       0       0
  9286 ;;Total ram usage:        6 bytes
  9287 ;; Hardware stack levels used:    1
  9288 ;; Hardware stack levels required when called:   10
  9289 ;; This function calls:
  9290 ;;		Nothing
  9291 ;; This function is called by:
  9292 ;;		_fround
  9293 ;;		_scale
  9294 ;;		_sprintf
  9295 ;; This function uses a non-reentrant model
  9296 ;;
  9297                           
  9298                           	psect	text27
  9299  0043C0                     __ptext27:
  9300                           	opt stack 0
  9301  0043C0                     ___wmul:
  9302                           	opt stack 17
  9303                           
  9304                           ;incstack = 0
  9305  0043C0  0100               	movlb	0	; () banked
  9306  0043C2  516E               	movf	___wmul@multiplier& (0+255),w,b
  9307  0043C4  0370               	mulwf	___wmul@multiplicand& (0+255),b
  9308  0043C6  CFF3 F072          	movff	prodl,___wmul@product
  9309  0043CA  CFF4 F073          	movff	prodh,___wmul@product+1
  9310  0043CE  516E               	movf	___wmul@multiplier& (0+255),w,b
  9311  0043D0  0371               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  9312  0043D2  50F3               	movf	prodl,w,c
  9313  0043D4  2773               	addwf	(___wmul@product+1)& (0+255),f,b
  9314  0043D6  516F               	movf	(___wmul@multiplier+1)& (0+255),w,b
  9315  0043D8  0370               	mulwf	___wmul@multiplicand& (0+255),b
  9316  0043DA  50F3               	movf	prodl,w,c
  9317  0043DC  2773               	addwf	(___wmul@product+1)& (0+255),f,b
  9318                           
  9319                           ; BSR set to: 0
  9320  0043DE  C072  F06E         	movff	___wmul@product,?___wmul
  9321  0043E2  C073  F06F         	movff	___wmul@product+1,?___wmul+1
  9322  0043E6  0012               	return	
  9323  0043E8                     __end_of___wmul:
  9324                           	opt stack 0
  9325                           tblptru	equ	0xFF8
  9326                           tblptrh	equ	0xFF7
  9327                           tblptrl	equ	0xFF6
  9328                           tablat	equ	0xFF5
  9329                           prodh	equ	0xFF4
  9330                           prodl	equ	0xFF3
  9331                           intcon	equ	0xFF2
  9332                           postinc0	equ	0xFEE
  9333                           wreg	equ	0xFE8
  9334                           indf1	equ	0xFE7
  9335                           postdec1	equ	0xFE5
  9336                           fsr1h	equ	0xFE2
  9337                           fsr1l	equ	0xFE1
  9338                           indf2	equ	0xFDF
  9339                           postinc2	equ	0xFDE
  9340                           postdec2	equ	0xFDD
  9341                           plusw2	equ	0xFDB
  9342                           fsr2h	equ	0xFDA
  9343                           fsr2l	equ	0xFD9
  9344                           status	equ	0xFD8
  9345                           
  9346 ;; *************** function ___ftmul *****************
  9347 ;; Defined at:
  9348 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftmul.c"
  9349 ;; Parameters:    Size  Location     Type
  9350 ;;  f1              3   32[BANK0 ] float 
  9351 ;;  f2              3   35[BANK0 ] float 
  9352 ;; Auto vars:     Size  Location     Type
  9353 ;;  f3_as_produc    3   42[BANK0 ] unsigned um
  9354 ;;  sign            1   46[BANK0 ] unsigned char 
  9355 ;;  cntr            1   45[BANK0 ] unsigned char 
  9356 ;;  exp             1   41[BANK0 ] unsigned char 
  9357 ;; Return value:  Size  Location     Type
  9358 ;;                  3   32[BANK0 ] float 
  9359 ;; Registers used:
  9360 ;;		wreg, status,2, status,0, cstack
  9361 ;; Tracked objects:
  9362 ;;		On entry : 0/0
  9363 ;;		On exit  : 0/0
  9364 ;;		Unchanged: 0/0
  9365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9366 ;;      Params:         0       6       0       0       0       0       0       0       0
  9367 ;;      Locals:         0       6       0       0       0       0       0       0       0
  9368 ;;      Temps:          0       3       0       0       0       0       0       0       0
  9369 ;;      Totals:         0      15       0       0       0       0       0       0       0
  9370 ;;Total ram usage:       15 bytes
  9371 ;; Hardware stack levels used:    1
  9372 ;; Hardware stack levels required when called:   11
  9373 ;; This function calls:
  9374 ;;		___ftpack
  9375 ;; This function is called by:
  9376 ;;		_main
  9377 ;;		_le_AD
  9378 ;;		_fround
  9379 ;;		_scale
  9380 ;;		_sprintf
  9381 ;; This function uses a non-reentrant model
  9382 ;;
  9383                           
  9384                           	psect	text28
  9385  002C00                     __ptext28:
  9386                           	opt stack 0
  9387  002C00                     ___ftmul:
  9388                           	opt stack 18
  9389                           
  9390                           ; BSR set to: 0
  9391                           ;incstack = 0
  9392  002C00  C082  F086         	movff	___ftmul@f1+2,??___ftmul
  9393  002C04  0100               	movlb	0	; () banked
  9394  002C06  6B87               	clrf	(??___ftmul+1)& (0+255),b
  9395  002C08  6B88               	clrf	(??___ftmul+2)& (0+255),b
  9396  002C0A  3581               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  9397  002C0C  3786               	rlcf	??___ftmul& (0+255),f,b
  9398  002C0E  E301               	bnc	u5611
  9399  002C10  8187               	bsf	(??___ftmul+1)& (0+255),0,b
  9400  002C12                     u5611:
  9401  002C12  5186               	movf	??___ftmul& (0+255),w,b
  9402  002C14  6F89               	movwf	___ftmul@exp& (0+255),b
  9403  002C16  5189               	movf	___ftmul@exp& (0+255),w,b
  9404  002C18  A4D8               	btfss	status,2,c
  9405  002C1A  D007               	goto	l2244
  9406                           
  9407                           ; BSR set to: 0
  9408  002C1C  0E00               	movlw	0
  9409  002C1E  6F80               	movwf	?___ftmul& (0+255),b
  9410  002C20  0E00               	movlw	0
  9411  002C22  6F81               	movwf	(?___ftmul+1)& (0+255),b
  9412  002C24  0E00               	movlw	0
  9413  002C26  6F82               	movwf	(?___ftmul+2)& (0+255),b
  9414                           
  9415                           ; BSR set to: 0
  9416  002C28  0012               	return	
  9417  002C2A                     l2244:
  9418                           
  9419                           ; BSR set to: 0
  9420                           
  9421                           ; BSR set to: 0
  9422  002C2A  C085  F086         	movff	___ftmul@f2+2,??___ftmul
  9423  002C2E  6B87               	clrf	(??___ftmul+1)& (0+255),b
  9424  002C30  6B88               	clrf	(??___ftmul+2)& (0+255),b
  9425  002C32  3584               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  9426  002C34  3786               	rlcf	??___ftmul& (0+255),f,b
  9427  002C36  E301               	bnc	u5631
  9428  002C38  8187               	bsf	(??___ftmul+1)& (0+255),0,b
  9429  002C3A                     u5631:
  9430  002C3A  5186               	movf	??___ftmul& (0+255),w,b
  9431  002C3C  6F8E               	movwf	___ftmul@sign& (0+255),b
  9432  002C3E  518E               	movf	___ftmul@sign& (0+255),w,b
  9433  002C40  A4D8               	btfss	status,2,c
  9434  002C42  D007               	goto	l2246
  9435                           
  9436                           ; BSR set to: 0
  9437  002C44  0E00               	movlw	0
  9438  002C46  6F80               	movwf	?___ftmul& (0+255),b
  9439  002C48  0E00               	movlw	0
  9440  002C4A  6F81               	movwf	(?___ftmul+1)& (0+255),b
  9441  002C4C  0E00               	movlw	0
  9442  002C4E  6F82               	movwf	(?___ftmul+2)& (0+255),b
  9443                           
  9444                           ; BSR set to: 0
  9445  002C50  0012               	return	
  9446  002C52                     l2246:
  9447                           
  9448                           ; BSR set to: 0
  9449                           
  9450                           ; BSR set to: 0
  9451  002C52  518E               	movf	___ftmul@sign& (0+255),w,b
  9452  002C54  0F7B               	addlw	123
  9453  002C56  2789               	addwf	___ftmul@exp& (0+255),f,b
  9454                           
  9455                           ; BSR set to: 0
  9456  002C58  C082  F08E         	movff	___ftmul@f1+2,___ftmul@sign
  9457  002C5C  5185               	movf	(___ftmul@f2+2)& (0+255),w,b
  9458  002C5E  1B8E               	xorwf	___ftmul@sign& (0+255),f,b
  9459  002C60  0E80               	movlw	128
  9460  002C62  178E               	andwf	___ftmul@sign& (0+255),f,b
  9461                           
  9462                           ; BSR set to: 0
  9463  002C64  8F81               	bsf	(___ftmul@f1+1)& (0+255),7,b
  9464                           
  9465                           ; BSR set to: 0
  9466  002C66  8F84               	bsf	(___ftmul@f2+1)& (0+255),7,b
  9467                           
  9468                           ; BSR set to: 0
  9469  002C68  0EFF               	movlw	255
  9470  002C6A  1783               	andwf	___ftmul@f2& (0+255),f,b
  9471  002C6C  0EFF               	movlw	255
  9472  002C6E  1784               	andwf	(___ftmul@f2+1)& (0+255),f,b
  9473  002C70  0E00               	movlw	0
  9474  002C72  1785               	andwf	(___ftmul@f2+2)& (0+255),f,b
  9475                           
  9476                           ; BSR set to: 0
  9477  002C74  0E00               	movlw	0
  9478  002C76  6F8A               	movwf	___ftmul@f3_as_product& (0+255),b
  9479  002C78  0E00               	movlw	0
  9480  002C7A  6F8B               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  9481  002C7C  0E00               	movlw	0
  9482  002C7E  6F8C               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  9483                           
  9484                           ; BSR set to: 0
  9485  002C80  0E07               	movlw	7
  9486  002C82  6F8D               	movwf	___ftmul@cntr& (0+255),b
  9487  002C84                     
  9488                           ; BSR set to: 0
  9489                           
  9490                           ; BSR set to: 0
  9491  002C84  A180               	btfss	___ftmul@f1& (0+255),0,b
  9492  002C86  D006               	goto	l2248
  9493                           
  9494                           ; BSR set to: 0
  9495  002C88  5183               	movf	___ftmul@f2& (0+255),w,b
  9496  002C8A  278A               	addwf	___ftmul@f3_as_product& (0+255),f,b
  9497  002C8C  5184               	movf	(___ftmul@f2+1)& (0+255),w,b
  9498  002C8E  238B               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  9499  002C90  5185               	movf	(___ftmul@f2+2)& (0+255),w,b
  9500  002C92  238C               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  9501  002C94                     l2248:
  9502                           
  9503                           ; BSR set to: 0
  9504                           
  9505                           ; BSR set to: 0
  9506  002C94  90D8               	bcf	status,0,c
  9507  002C96  3382               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  9508  002C98  3381               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  9509  002C9A  3380               	rrcf	___ftmul@f1& (0+255),f,b
  9510  002C9C  90D8               	bcf	status,0,c
  9511  002C9E  3783               	rlcf	___ftmul@f2& (0+255),f,b
  9512  002CA0  3784               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  9513  002CA2  3785               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  9514                           
  9515                           ; BSR set to: 0
  9516  002CA4  2F8D               	decfsz	___ftmul@cntr& (0+255),f,b
  9517  002CA6  D7EE               	goto	l2247
  9518                           
  9519                           ; BSR set to: 0
  9520                           
  9521                           ; BSR set to: 0
  9522  002CA8  0E09               	movlw	9
  9523  002CAA  6F8D               	movwf	___ftmul@cntr& (0+255),b
  9524  002CAC                     
  9525                           ; BSR set to: 0
  9526                           
  9527                           ; BSR set to: 0
  9528  002CAC  A180               	btfss	___ftmul@f1& (0+255),0,b
  9529  002CAE  D006               	goto	l2251
  9530                           
  9531                           ; BSR set to: 0
  9532  002CB0  5183               	movf	___ftmul@f2& (0+255),w,b
  9533  002CB2  278A               	addwf	___ftmul@f3_as_product& (0+255),f,b
  9534  002CB4  5184               	movf	(___ftmul@f2+1)& (0+255),w,b
  9535  002CB6  238B               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  9536  002CB8  5185               	movf	(___ftmul@f2+2)& (0+255),w,b
  9537  002CBA  238C               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  9538  002CBC                     l2251:
  9539                           
  9540                           ; BSR set to: 0
  9541                           
  9542                           ; BSR set to: 0
  9543  002CBC  90D8               	bcf	status,0,c
  9544  002CBE  3382               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  9545  002CC0  3381               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  9546  002CC2  3380               	rrcf	___ftmul@f1& (0+255),f,b
  9547  002CC4  90D8               	bcf	status,0,c
  9548  002CC6  338C               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  9549  002CC8  338B               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  9550  002CCA  338A               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  9551                           
  9552                           ; BSR set to: 0
  9553  002CCC  2F8D               	decfsz	___ftmul@cntr& (0+255),f,b
  9554  002CCE  D7EE               	goto	l2250
  9555                           
  9556                           ; BSR set to: 0
  9557                           
  9558                           ; BSR set to: 0
  9559  002CD0  C08A  F060         	movff	___ftmul@f3_as_product,___ftpack@arg
  9560  002CD4  C08B  F061         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  9561  002CD8  C08C  F062         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  9562  002CDC  C089  F063         	movff	___ftmul@exp,___ftpack@exp
  9563  002CE0  C08E  F064         	movff	___ftmul@sign,___ftpack@sign
  9564  002CE4  EC73  F019         	call	___ftpack	;wreg free
  9565  002CE8  C060  F080         	movff	?___ftpack,?___ftmul
  9566  002CEC  C061  F081         	movff	?___ftpack+1,?___ftmul+1
  9567  002CF0  C062  F082         	movff	?___ftpack+2,?___ftmul+2
  9568  002CF4  0012               	return	
  9569  002CF6                     __end_of___ftmul:
  9570                           	opt stack 0
  9571                           tblptru	equ	0xFF8
  9572                           tblptrh	equ	0xFF7
  9573                           tblptrl	equ	0xFF6
  9574                           tablat	equ	0xFF5
  9575                           prodh	equ	0xFF4
  9576                           prodl	equ	0xFF3
  9577                           intcon	equ	0xFF2
  9578                           postinc0	equ	0xFEE
  9579                           wreg	equ	0xFE8
  9580                           indf1	equ	0xFE7
  9581                           postdec1	equ	0xFE5
  9582                           fsr1h	equ	0xFE2
  9583                           fsr1l	equ	0xFE1
  9584                           indf2	equ	0xFDF
  9585                           postinc2	equ	0xFDE
  9586                           postdec2	equ	0xFDD
  9587                           plusw2	equ	0xFDB
  9588                           fsr2h	equ	0xFDA
  9589                           fsr2l	equ	0xFD9
  9590                           status	equ	0xFD8
  9591                           
  9592 ;; *************** function ___awmod *****************
  9593 ;; Defined at:
  9594 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\awmod.c"
  9595 ;; Parameters:    Size  Location     Type
  9596 ;;  dividend        2    0[BANK0 ] int 
  9597 ;;  divisor         2    2[BANK0 ] int 
  9598 ;; Auto vars:     Size  Location     Type
  9599 ;;  sign            1    5[BANK0 ] unsigned char 
  9600 ;;  counter         1    4[BANK0 ] unsigned char 
  9601 ;; Return value:  Size  Location     Type
  9602 ;;                  2    0[BANK0 ] int 
  9603 ;; Registers used:
  9604 ;;		wreg, status,2, status,0
  9605 ;; Tracked objects:
  9606 ;;		On entry : 0/0
  9607 ;;		On exit  : 0/0
  9608 ;;		Unchanged: 0/0
  9609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9610 ;;      Params:         0       4       0       0       0       0       0       0       0
  9611 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9612 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9613 ;;      Totals:         0       6       0       0       0       0       0       0       0
  9614 ;;Total ram usage:        6 bytes
  9615 ;; Hardware stack levels used:    1
  9616 ;; Hardware stack levels required when called:   10
  9617 ;; This function calls:
  9618 ;;		Nothing
  9619 ;; This function is called by:
  9620 ;;		_fround
  9621 ;;		_scale
  9622 ;; This function uses a non-reentrant model
  9623 ;;
  9624                           
  9625                           	psect	text29
  9626  003C48                     __ptext29:
  9627                           	opt stack 0
  9628  003C48                     ___awmod:
  9629                           	opt stack 17
  9630                           
  9631                           ;incstack = 0
  9632  003C48  0E00               	movlw	0
  9633  003C4A  0100               	movlb	0	; () banked
  9634  003C4C  6F65               	movwf	___awmod@sign& (0+255),b
  9635                           
  9636                           ; BSR set to: 0
  9637  003C4E  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
  9638  003C50  D006               	goto	l2097
  9639                           
  9640                           ; BSR set to: 0
  9641  003C52  6D60               	negf	___awmod@dividend& (0+255),b
  9642  003C54  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  9643  003C56  B0D8               	btfsc	status,0,c
  9644  003C58  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  9645                           
  9646                           ; BSR set to: 0
  9647  003C5A  0E01               	movlw	1
  9648  003C5C  6F65               	movwf	___awmod@sign& (0+255),b
  9649  003C5E                     l2097:
  9650                           
  9651                           ; BSR set to: 0
  9652                           
  9653                           ; BSR set to: 0
  9654  003C5E  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  9655  003C60  D004               	goto	l2098
  9656                           
  9657                           ; BSR set to: 0
  9658  003C62  6D62               	negf	___awmod@divisor& (0+255),b
  9659  003C64  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
  9660  003C66  B0D8               	btfsc	status,0,c
  9661  003C68  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
  9662  003C6A                     l2098:
  9663                           
  9664                           ; BSR set to: 0
  9665                           
  9666                           ; BSR set to: 0
  9667  003C6A  5162               	movf	___awmod@divisor& (0+255),w,b
  9668  003C6C  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  9669  003C6E  B4D8               	btfsc	status,2,c
  9670  003C70  D018               	goto	l2105
  9671                           
  9672                           ; BSR set to: 0
  9673  003C72  0E01               	movlw	1
  9674  003C74  6F64               	movwf	___awmod@counter& (0+255),b
  9675  003C76  D004               	goto	l2100
  9676  003C78                     
  9677                           ; BSR set to: 0
  9678                           
  9679                           ; BSR set to: 0
  9680  003C78  90D8               	bcf	status,0,c
  9681  003C7A  3762               	rlcf	___awmod@divisor& (0+255),f,b
  9682  003C7C  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  9683  003C7E  2B64               	incf	___awmod@counter& (0+255),f,b
  9684  003C80                     l2100:
  9685                           
  9686                           ; BSR set to: 0
  9687                           
  9688                           ; BSR set to: 0
  9689  003C80  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  9690  003C82  D7FA               	goto	l2101
  9691  003C84                     u5760:
  9692                           
  9693                           ; BSR set to: 0
  9694                           
  9695                           ; BSR set to: 0
  9696                           
  9697                           ; BSR set to: 0
  9698  003C84  5162               	movf	___awmod@divisor& (0+255),w,b
  9699  003C86  5D60               	subwf	___awmod@dividend& (0+255),w,b
  9700  003C88  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  9701  003C8A  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  9702  003C8C  A0D8               	btfss	status,0,c
  9703  003C8E  D004               	goto	l2104
  9704                           
  9705                           ; BSR set to: 0
  9706  003C90  5162               	movf	___awmod@divisor& (0+255),w,b
  9707  003C92  5F60               	subwf	___awmod@dividend& (0+255),f,b
  9708  003C94  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  9709  003C96  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  9710  003C98                     l2104:
  9711                           
  9712                           ; BSR set to: 0
  9713                           
  9714                           ; BSR set to: 0
  9715  003C98  90D8               	bcf	status,0,c
  9716  003C9A  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  9717  003C9C  3362               	rrcf	___awmod@divisor& (0+255),f,b
  9718                           
  9719                           ; BSR set to: 0
  9720  003C9E  2F64               	decfsz	___awmod@counter& (0+255),f,b
  9721  003CA0  D7F1               	goto	u5760
  9722  003CA2                     l2105:
  9723                           
  9724                           ; BSR set to: 0
  9725                           
  9726                           ; BSR set to: 0
  9727                           
  9728                           ; BSR set to: 0
  9729  003CA2  5165               	movf	___awmod@sign& (0+255),w,b
  9730  003CA4  B4D8               	btfsc	status,2,c
  9731  003CA6  D004               	goto	l2106
  9732                           
  9733                           ; BSR set to: 0
  9734  003CA8  6D60               	negf	___awmod@dividend& (0+255),b
  9735  003CAA  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  9736  003CAC  B0D8               	btfsc	status,0,c
  9737  003CAE  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  9738  003CB0                     l2106:
  9739                           
  9740                           ; BSR set to: 0
  9741                           
  9742                           ; BSR set to: 0
  9743  003CB0  C060  F060         	movff	___awmod@dividend,?___awmod
  9744  003CB4  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
  9745  003CB8  0012               	return	
  9746  003CBA                     __end_of___awmod:
  9747                           	opt stack 0
  9748                           tblptru	equ	0xFF8
  9749                           tblptrh	equ	0xFF7
  9750                           tblptrl	equ	0xFF6
  9751                           tablat	equ	0xFF5
  9752                           prodh	equ	0xFF4
  9753                           prodl	equ	0xFF3
  9754                           intcon	equ	0xFF2
  9755                           postinc0	equ	0xFEE
  9756                           wreg	equ	0xFE8
  9757                           indf1	equ	0xFE7
  9758                           postdec1	equ	0xFE5
  9759                           fsr1h	equ	0xFE2
  9760                           fsr1l	equ	0xFE1
  9761                           indf2	equ	0xFDF
  9762                           postinc2	equ	0xFDE
  9763                           postdec2	equ	0xFDD
  9764                           plusw2	equ	0xFDB
  9765                           fsr2h	equ	0xFDA
  9766                           fsr2l	equ	0xFD9
  9767                           status	equ	0xFD8
  9768                           
  9769 ;; *************** function ___awdiv *****************
  9770 ;; Defined at:
  9771 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\awdiv.c"
  9772 ;; Parameters:    Size  Location     Type
  9773 ;;  dividend        2    6[BANK0 ] int 
  9774 ;;  divisor         2    8[BANK0 ] int 
  9775 ;; Auto vars:     Size  Location     Type
  9776 ;;  quotient        2   12[BANK0 ] int 
  9777 ;;  sign            1   11[BANK0 ] unsigned char 
  9778 ;;  counter         1   10[BANK0 ] unsigned char 
  9779 ;; Return value:  Size  Location     Type
  9780 ;;                  2    6[BANK0 ] int 
  9781 ;; Registers used:
  9782 ;;		wreg, status,2, status,0
  9783 ;; Tracked objects:
  9784 ;;		On entry : 0/0
  9785 ;;		On exit  : 0/0
  9786 ;;		Unchanged: 0/0
  9787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9788 ;;      Params:         0       4       0       0       0       0       0       0       0
  9789 ;;      Locals:         0       4       0       0       0       0       0       0       0
  9790 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9791 ;;      Totals:         0       8       0       0       0       0       0       0       0
  9792 ;;Total ram usage:        8 bytes
  9793 ;; Hardware stack levels used:    1
  9794 ;; Hardware stack levels required when called:   10
  9795 ;; This function calls:
  9796 ;;		Nothing
  9797 ;; This function is called by:
  9798 ;;		_fround
  9799 ;;		_scale
  9800 ;;		_sprintf
  9801 ;; This function uses a non-reentrant model
  9802 ;;
  9803                           
  9804                           	psect	text30
  9805  0039C4                     __ptext30:
  9806                           	opt stack 0
  9807  0039C4                     ___awdiv:
  9808                           	opt stack 17
  9809                           
  9810                           ; BSR set to: 0
  9811                           ;incstack = 0
  9812  0039C4  0E00               	movlw	0
  9813  0039C6  0100               	movlb	0	; () banked
  9814  0039C8  6F6B               	movwf	___awdiv@sign& (0+255),b
  9815                           
  9816                           ; BSR set to: 0
  9817  0039CA  AF69               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  9818  0039CC  D006               	goto	l2084
  9819                           
  9820                           ; BSR set to: 0
  9821  0039CE  6D68               	negf	___awdiv@divisor& (0+255),b
  9822  0039D0  1F69               	comf	(___awdiv@divisor+1)& (0+255),f,b
  9823  0039D2  B0D8               	btfsc	status,0,c
  9824  0039D4  2B69               	incf	(___awdiv@divisor+1)& (0+255),f,b
  9825                           
  9826                           ; BSR set to: 0
  9827  0039D6  0E01               	movlw	1
  9828  0039D8  6F6B               	movwf	___awdiv@sign& (0+255),b
  9829  0039DA                     l2084:
  9830                           
  9831                           ; BSR set to: 0
  9832                           
  9833                           ; BSR set to: 0
  9834  0039DA  AF67               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  9835  0039DC  D006               	goto	l2085
  9836                           
  9837                           ; BSR set to: 0
  9838  0039DE  6D66               	negf	___awdiv@dividend& (0+255),b
  9839  0039E0  1F67               	comf	(___awdiv@dividend+1)& (0+255),f,b
  9840  0039E2  B0D8               	btfsc	status,0,c
  9841  0039E4  2B67               	incf	(___awdiv@dividend+1)& (0+255),f,b
  9842                           
  9843                           ; BSR set to: 0
  9844  0039E6  0E01               	movlw	1
  9845  0039E8  1B6B               	xorwf	___awdiv@sign& (0+255),f,b
  9846  0039EA                     l2085:
  9847                           
  9848                           ; BSR set to: 0
  9849                           
  9850                           ; BSR set to: 0
  9851  0039EA  0E00               	movlw	0
  9852  0039EC  6F6D               	movwf	(___awdiv@quotient+1)& (0+255),b
  9853  0039EE  0E00               	movlw	0
  9854  0039F0  6F6C               	movwf	___awdiv@quotient& (0+255),b
  9855                           
  9856                           ; BSR set to: 0
  9857  0039F2  5168               	movf	___awdiv@divisor& (0+255),w,b
  9858  0039F4  1169               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  9859  0039F6  B4D8               	btfsc	status,2,c
  9860  0039F8  D01C               	goto	l2092
  9861                           
  9862                           ; BSR set to: 0
  9863  0039FA  0E01               	movlw	1
  9864  0039FC  6F6A               	movwf	___awdiv@counter& (0+255),b
  9865  0039FE  D004               	goto	l2087
  9866  003A00                     
  9867                           ; BSR set to: 0
  9868                           
  9869                           ; BSR set to: 0
  9870  003A00  90D8               	bcf	status,0,c
  9871  003A02  3768               	rlcf	___awdiv@divisor& (0+255),f,b
  9872  003A04  3769               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  9873  003A06  2B6A               	incf	___awdiv@counter& (0+255),f,b
  9874  003A08                     l2087:
  9875                           
  9876                           ; BSR set to: 0
  9877                           
  9878                           ; BSR set to: 0
  9879  003A08  AF69               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  9880  003A0A  D7FA               	goto	l2088
  9881  003A0C                     u5700:
  9882                           
  9883                           ; BSR set to: 0
  9884                           
  9885                           ; BSR set to: 0
  9886                           
  9887                           ; BSR set to: 0
  9888  003A0C  90D8               	bcf	status,0,c
  9889  003A0E  376C               	rlcf	___awdiv@quotient& (0+255),f,b
  9890  003A10  376D               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  9891                           
  9892                           ; BSR set to: 0
  9893  003A12  5168               	movf	___awdiv@divisor& (0+255),w,b
  9894  003A14  5D66               	subwf	___awdiv@dividend& (0+255),w,b
  9895  003A16  5169               	movf	(___awdiv@divisor+1)& (0+255),w,b
  9896  003A18  5967               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  9897  003A1A  A0D8               	btfss	status,0,c
  9898  003A1C  D005               	goto	l2091
  9899                           
  9900                           ; BSR set to: 0
  9901  003A1E  5168               	movf	___awdiv@divisor& (0+255),w,b
  9902  003A20  5F66               	subwf	___awdiv@dividend& (0+255),f,b
  9903  003A22  5169               	movf	(___awdiv@divisor+1)& (0+255),w,b
  9904  003A24  5B67               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  9905                           
  9906                           ; BSR set to: 0
  9907  003A26  816C               	bsf	___awdiv@quotient& (0+255),0,b
  9908  003A28                     l2091:
  9909                           
  9910                           ; BSR set to: 0
  9911                           
  9912                           ; BSR set to: 0
  9913  003A28  90D8               	bcf	status,0,c
  9914  003A2A  3369               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  9915  003A2C  3368               	rrcf	___awdiv@divisor& (0+255),f,b
  9916                           
  9917                           ; BSR set to: 0
  9918  003A2E  2F6A               	decfsz	___awdiv@counter& (0+255),f,b
  9919  003A30  D7ED               	goto	u5700
  9920  003A32                     l2092:
  9921                           
  9922                           ; BSR set to: 0
  9923                           
  9924                           ; BSR set to: 0
  9925                           
  9926                           ; BSR set to: 0
  9927  003A32  516B               	movf	___awdiv@sign& (0+255),w,b
  9928  003A34  B4D8               	btfsc	status,2,c
  9929  003A36  D004               	goto	l2093
  9930                           
  9931                           ; BSR set to: 0
  9932  003A38  6D6C               	negf	___awdiv@quotient& (0+255),b
  9933  003A3A  1F6D               	comf	(___awdiv@quotient+1)& (0+255),f,b
  9934  003A3C  B0D8               	btfsc	status,0,c
  9935  003A3E  2B6D               	incf	(___awdiv@quotient+1)& (0+255),f,b
  9936  003A40                     l2093:
  9937                           
  9938                           ; BSR set to: 0
  9939                           
  9940                           ; BSR set to: 0
  9941  003A40  C06C  F066         	movff	___awdiv@quotient,?___awdiv
  9942  003A44  C06D  F067         	movff	___awdiv@quotient+1,?___awdiv+1
  9943  003A48  0012               	return	
  9944  003A4A                     __end_of___awdiv:
  9945                           	opt stack 0
  9946                           tblptru	equ	0xFF8
  9947                           tblptrh	equ	0xFF7
  9948                           tblptrl	equ	0xFF6
  9949                           tablat	equ	0xFF5
  9950                           prodh	equ	0xFF4
  9951                           prodl	equ	0xFF3
  9952                           intcon	equ	0xFF2
  9953                           postinc0	equ	0xFEE
  9954                           wreg	equ	0xFE8
  9955                           indf1	equ	0xFE7
  9956                           postdec1	equ	0xFE5
  9957                           fsr1h	equ	0xFE2
  9958                           fsr1l	equ	0xFE1
  9959                           indf2	equ	0xFDF
  9960                           postinc2	equ	0xFDE
  9961                           postdec2	equ	0xFDD
  9962                           plusw2	equ	0xFDB
  9963                           fsr2h	equ	0xFDA
  9964                           fsr2l	equ	0xFD9
  9965                           status	equ	0xFD8
  9966                           
  9967 ;; *************** function __tdiv_to_l_ *****************
  9968 ;; Defined at:
  9969 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftdivl.c"
  9970 ;; Parameters:    Size  Location     Type
  9971 ;;  f1              3    0[BANK0 ] float 
  9972 ;;  f2              3    3[BANK0 ] float 
  9973 ;; Auto vars:     Size  Location     Type
  9974 ;;  quot            4    9[BANK0 ] unsigned long 
  9975 ;;  exp1            1   14[BANK0 ] unsigned char 
  9976 ;;  cntr            1   13[BANK0 ] unsigned char 
  9977 ;; Return value:  Size  Location     Type
  9978 ;;                  4    0[BANK0 ] unsigned long 
  9979 ;; Registers used:
  9980 ;;		wreg, status,2, status,0
  9981 ;; Tracked objects:
  9982 ;;		On entry : 0/0
  9983 ;;		On exit  : 0/0
  9984 ;;		Unchanged: 0/0
  9985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9986 ;;      Params:         0       6       0       0       0       0       0       0       0
  9987 ;;      Locals:         0       6       0       0       0       0       0       0       0
  9988 ;;      Temps:          0       3       0       0       0       0       0       0       0
  9989 ;;      Totals:         0      15       0       0       0       0       0       0       0
  9990 ;;Total ram usage:       15 bytes
  9991 ;; Hardware stack levels used:    1
  9992 ;; Hardware stack levels required when called:   10
  9993 ;; This function calls:
  9994 ;;		Nothing
  9995 ;; This function is called by:
  9996 ;;		_sprintf
  9997 ;; This function uses a non-reentrant model
  9998 ;;
  9999                           
 10000                           	psect	text31
 10001  001DE2                     __ptext31:
 10002                           	opt stack 0
 10003  001DE2                     __tdiv_to_l_:
 10004                           	opt stack 18
 10005                           
 10006                           ; BSR set to: 0
 10007                           ;incstack = 0
 10008  001DE2  C062  F066         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 10009  001DE6  0100               	movlb	0	; () banked
 10010  001DE8  6B67               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 10011  001DEA  6B68               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 10012  001DEC  3561               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 10013  001DEE  3766               	rlcf	??__tdiv_to_l_& (0+255),f,b
 10014  001DF0  E301               	bnc	u6181
 10015  001DF2  8167               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 10016  001DF4                     u6181:
 10017  001DF4  5166               	movf	??__tdiv_to_l_& (0+255),w,b
 10018  001DF6  6F6E               	movwf	__tdiv_to_l_@exp1& (0+255),b
 10019  001DF8  516E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 10020  001DFA  A4D8               	btfss	status,2,c
 10021  001DFC  D009               	goto	l2220
 10022                           
 10023                           ; BSR set to: 0
 10024  001DFE  0E00               	movlw	0
 10025  001E00  6F60               	movwf	?__tdiv_to_l_& (0+255),b
 10026  001E02  0E00               	movlw	0
 10027  001E04  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10028  001E06  0E00               	movlw	0
 10029  001E08  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10030  001E0A  0E00               	movlw	0
 10031  001E0C  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10032                           
 10033                           ; BSR set to: 0
 10034  001E0E  0012               	return	
 10035  001E10                     l2220:
 10036                           
 10037                           ; BSR set to: 0
 10038                           
 10039                           ; BSR set to: 0
 10040  001E10  C065  F066         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 10041  001E14  6B67               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 10042  001E16  6B68               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 10043  001E18  3564               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 10044  001E1A  3766               	rlcf	??__tdiv_to_l_& (0+255),f,b
 10045  001E1C  E301               	bnc	u6201
 10046  001E1E  8167               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 10047  001E20                     u6201:
 10048  001E20  5166               	movf	??__tdiv_to_l_& (0+255),w,b
 10049  001E22  6F6D               	movwf	__tdiv_to_l_@cntr& (0+255),b
 10050  001E24  516D               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 10051  001E26  A4D8               	btfss	status,2,c
 10052  001E28  D009               	goto	l2222
 10053                           
 10054                           ; BSR set to: 0
 10055  001E2A  0E00               	movlw	0
 10056  001E2C  6F60               	movwf	?__tdiv_to_l_& (0+255),b
 10057  001E2E  0E00               	movlw	0
 10058  001E30  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10059  001E32  0E00               	movlw	0
 10060  001E34  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10061  001E36  0E00               	movlw	0
 10062  001E38  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10063                           
 10064                           ; BSR set to: 0
 10065  001E3A  0012               	return	
 10066  001E3C                     l2222:
 10067                           
 10068                           ; BSR set to: 0
 10069                           
 10070                           ; BSR set to: 0
 10071  001E3C  8F61               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 10072                           
 10073                           ; BSR set to: 0
 10074  001E3E  0EFF               	movlw	255
 10075  001E40  1760               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 10076  001E42  0EFF               	movlw	255
 10077  001E44  1761               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 10078  001E46  0E00               	movlw	0
 10079  001E48  1762               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 10080  001E4A  8F64               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 10081                           
 10082                           ; BSR set to: 0
 10083  001E4C  0EFF               	movlw	255
 10084  001E4E  1763               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 10085  001E50  0EFF               	movlw	255
 10086  001E52  1764               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 10087  001E54  0E00               	movlw	0
 10088  001E56  1765               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 10089                           
 10090                           ; BSR set to: 0
 10091  001E58  0E00               	movlw	0
 10092  001E5A  6F69               	movwf	__tdiv_to_l_@quot& (0+255),b
 10093  001E5C  0E00               	movlw	0
 10094  001E5E  6F6A               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 10095  001E60  0E00               	movlw	0
 10096  001E62  6F6B               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 10097  001E64  0E00               	movlw	0
 10098  001E66  6F6C               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 10099                           
 10100                           ; BSR set to: 0
 10101  001E68  0E7F               	movlw	127
 10102  001E6A  5F6E               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 10103                           
 10104                           ; BSR set to: 0
 10105  001E6C  516D               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 10106  001E6E  0F98               	addlw	152
 10107  001E70  5F6E               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 10108                           
 10109                           ; BSR set to: 0
 10110  001E72  0E18               	movlw	24
 10111  001E74  6F6D               	movwf	__tdiv_to_l_@cntr& (0+255),b
 10112  001E76                     l2223:
 10113                           
 10114                           ; BSR set to: 0
 10115  001E76  90D8               	bcf	status,0,c
 10116  001E78  3769               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 10117  001E7A  376A               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 10118  001E7C  376B               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 10119  001E7E  376C               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 10120                           
 10121                           ; BSR set to: 0
 10122  001E80  5163               	movf	__tdiv_to_l_@f2& (0+255),w,b
 10123  001E82  5D60               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 10124  001E84  5164               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 10125  001E86  5961               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 10126  001E88  5165               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 10127  001E8A  5962               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 10128  001E8C  A0D8               	btfss	status,0,c
 10129  001E8E  D007               	goto	l2224
 10130                           
 10131                           ; BSR set to: 0
 10132  001E90  5163               	movf	__tdiv_to_l_@f2& (0+255),w,b
 10133  001E92  5F60               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 10134  001E94  5164               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 10135  001E96  5B61               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 10136  001E98  5165               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 10137  001E9A  5B62               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 10138                           
 10139                           ; BSR set to: 0
 10140  001E9C  8169               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 10141  001E9E                     l2224:
 10142                           
 10143                           ; BSR set to: 0
 10144  001E9E  90D8               	bcf	status,0,c
 10145  001EA0  3760               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 10146  001EA2  3761               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 10147  001EA4  3762               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 10148                           
 10149                           ; BSR set to: 0
 10150  001EA6  2F6D               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 10151  001EA8  D7E6               	goto	l2223
 10152                           
 10153                           ; BSR set to: 0
 10154                           
 10155                           ; BSR set to: 0
 10156  001EAA  AF6E               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 10157  001EAC  D016               	goto	l2226
 10158                           
 10159                           ; BSR set to: 0
 10160  001EAE  516E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 10161  001EB0  0A80               	xorlw	128
 10162  001EB2  0F97               	addlw	151
 10163  001EB4  B0D8               	btfsc	status,0,c
 10164  001EB6  D009               	goto	l2227
 10165                           
 10166                           ; BSR set to: 0
 10167  001EB8  0E00               	movlw	0
 10168  001EBA  6F60               	movwf	?__tdiv_to_l_& (0+255),b
 10169  001EBC  0E00               	movlw	0
 10170  001EBE  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10171  001EC0  0E00               	movlw	0
 10172  001EC2  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10173  001EC4  0E00               	movlw	0
 10174  001EC6  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10175                           
 10176                           ; BSR set to: 0
 10177  001EC8  0012               	return	
 10178  001ECA                     l2227:
 10179                           
 10180                           ; BSR set to: 0
 10181                           
 10182                           ; BSR set to: 0
 10183                           
 10184                           ; BSR set to: 0
 10185  001ECA  90D8               	bcf	status,0,c
 10186  001ECC  336C               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 10187  001ECE  336B               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 10188  001ED0  336A               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 10189  001ED2  3369               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 10190                           
 10191                           ; BSR set to: 0
 10192  001ED4  3F6E               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 10193  001ED6  D7F9               	goto	l2227
 10194                           
 10195                           ; BSR set to: 0
 10196  001ED8  D015               	goto	u6260
 10197  001EDA                     l2226:
 10198                           
 10199                           ; BSR set to: 0
 10200                           
 10201                           ; BSR set to: 0
 10202  001EDA  0E17               	movlw	23
 10203  001EDC  656E               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 10204  001EDE  D00F               	goto	l2232
 10205                           
 10206                           ; BSR set to: 0
 10207  001EE0  0E00               	movlw	0
 10208  001EE2  6F60               	movwf	?__tdiv_to_l_& (0+255),b
 10209  001EE4  0E00               	movlw	0
 10210  001EE6  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10211  001EE8  0E00               	movlw	0
 10212  001EEA  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10213  001EEC  0E00               	movlw	0
 10214  001EEE  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10215                           
 10216                           ; BSR set to: 0
 10217  001EF0  0012               	return	
 10218  001EF2                     
 10219                           ; BSR set to: 0
 10220                           
 10221                           ; BSR set to: 0
 10222  001EF2  90D8               	bcf	status,0,c
 10223  001EF4  3769               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 10224  001EF6  376A               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 10225  001EF8  376B               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 10226  001EFA  376C               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 10227  001EFC  076E               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 10228  001EFE                     l2232:
 10229                           
 10230                           ; BSR set to: 0
 10231                           
 10232                           ; BSR set to: 0
 10233  001EFE  516E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 10234  001F00  A4D8               	btfss	status,2,c
 10235  001F02  D7F7               	goto	l2233
 10236  001F04                     u6260:
 10237                           
 10238                           ; BSR set to: 0
 10239                           
 10240                           ; BSR set to: 0
 10241  001F04  C069  F060         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 10242  001F08  C06A  F061         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 10243  001F0C  C06B  F062         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 10244  001F10  C06C  F063         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 10245                           
 10246                           ; BSR set to: 0
 10247  001F14  0012               	return		;funcret
 10248  001F16                     __end_of__tdiv_to_l_:
 10249                           	opt stack 0
 10250                           tblptru	equ	0xFF8
 10251                           tblptrh	equ	0xFF7
 10252                           tblptrl	equ	0xFF6
 10253                           tablat	equ	0xFF5
 10254                           prodh	equ	0xFF4
 10255                           prodl	equ	0xFF3
 10256                           intcon	equ	0xFF2
 10257                           postinc0	equ	0xFEE
 10258                           wreg	equ	0xFE8
 10259                           indf1	equ	0xFE7
 10260                           postdec1	equ	0xFE5
 10261                           fsr1h	equ	0xFE2
 10262                           fsr1l	equ	0xFE1
 10263                           indf2	equ	0xFDF
 10264                           postinc2	equ	0xFDE
 10265                           postdec2	equ	0xFDD
 10266                           plusw2	equ	0xFDB
 10267                           fsr2h	equ	0xFDA
 10268                           fsr2l	equ	0xFD9
 10269                           status	equ	0xFD8
 10270                           
 10271 ;; *************** function __div_to_l_ *****************
 10272 ;; Defined at:
 10273 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\fldivl.c"
 10274 ;; Parameters:    Size  Location     Type
 10275 ;;  f1              3    0[BANK0 ] unsigned long 
 10276 ;;  f2              3    3[BANK0 ] unsigned long 
 10277 ;; Auto vars:     Size  Location     Type
 10278 ;;  quot            4    6[BANK0 ] unsigned long 
 10279 ;;  exp1            1   11[BANK0 ] unsigned char 
 10280 ;;  cntr            1   10[BANK0 ] unsigned char 
 10281 ;; Return value:  Size  Location     Type
 10282 ;;                  4    0[BANK0 ] unsigned long 
 10283 ;; Registers used:
 10284 ;;		wreg, status,2, status,0
 10285 ;; Tracked objects:
 10286 ;;		On entry : 0/0
 10287 ;;		On exit  : 0/0
 10288 ;;		Unchanged: 0/0
 10289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10290 ;;      Params:         0       6       0       0       0       0       0       0       0
 10291 ;;      Locals:         0       6       0       0       0       0       0       0       0
 10292 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10293 ;;      Totals:         0      12       0       0       0       0       0       0       0
 10294 ;;Total ram usage:       12 bytes
 10295 ;; Hardware stack levels used:    1
 10296 ;; Hardware stack levels required when called:   10
 10297 ;; This function calls:
 10298 ;;		Nothing
 10299 ;; This function is called by:
 10300 ;;		_sprintf
 10301 ;; This function uses a non-reentrant model
 10302 ;;
 10303                           
 10304                           	psect	text32
 10305  002172                     __ptext32:
 10306                           	opt stack 0
 10307  002172                     __div_to_l_:
 10308                           	opt stack 18
 10309                           
 10310                           ; BSR set to: 0
 10311                           ;incstack = 0
 10312  002172  0100               	movlb	0	; () banked
 10313  002174  3562               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 10314  002176  3563               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 10315  002178  6F6B               	movwf	__div_to_l_@exp1& (0+255),b
 10316  00217A  516B               	movf	__div_to_l_@exp1& (0+255),w,b
 10317  00217C  A4D8               	btfss	status,2,c
 10318  00217E  D009               	goto	l2116
 10319                           
 10320                           ; BSR set to: 0
 10321  002180  0E00               	movlw	0
 10322  002182  6F60               	movwf	?__div_to_l_& (0+255),b
 10323  002184  0E00               	movlw	0
 10324  002186  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
 10325  002188  0E00               	movlw	0
 10326  00218A  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
 10327  00218C  0E00               	movlw	0
 10328  00218E  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
 10329                           
 10330                           ; BSR set to: 0
 10331  002190  0012               	return	
 10332  002192                     l2116:
 10333                           
 10334                           ; BSR set to: 0
 10335                           
 10336                           ; BSR set to: 0
 10337  002192  3565               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 10338  002194  3566               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 10339  002196  6F6A               	movwf	__div_to_l_@cntr& (0+255),b
 10340  002198  516A               	movf	__div_to_l_@cntr& (0+255),w,b
 10341  00219A  A4D8               	btfss	status,2,c
 10342  00219C  D009               	goto	l2118
 10343                           
 10344                           ; BSR set to: 0
 10345  00219E  0E00               	movlw	0
 10346  0021A0  6F60               	movwf	?__div_to_l_& (0+255),b
 10347  0021A2  0E00               	movlw	0
 10348  0021A4  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
 10349  0021A6  0E00               	movlw	0
 10350  0021A8  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
 10351  0021AA  0E00               	movlw	0
 10352  0021AC  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
 10353                           
 10354                           ; BSR set to: 0
 10355  0021AE  0012               	return	
 10356  0021B0                     l2118:
 10357                           
 10358                           ; BSR set to: 0
 10359                           
 10360                           ; BSR set to: 0
 10361  0021B0  8F62               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 10362                           
 10363                           ; BSR set to: 0
 10364  0021B2  0EFF               	movlw	255
 10365  0021B4  1760               	andwf	__div_to_l_@f1& (0+255),f,b
 10366  0021B6  0EFF               	movlw	255
 10367  0021B8  1761               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 10368  0021BA  0EFF               	movlw	255
 10369  0021BC  1762               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 10370  0021BE  0E00               	movlw	0
 10371  0021C0  1763               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 10372                           
 10373                           ; BSR set to: 0
 10374  0021C2  8F65               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 10375  0021C4  0EFF               	movlw	255
 10376  0021C6  1763               	andwf	__div_to_l_@f2& (0+255),f,b
 10377  0021C8  0EFF               	movlw	255
 10378  0021CA  1764               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 10379  0021CC  0EFF               	movlw	255
 10380  0021CE  1765               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 10381  0021D0  0E00               	movlw	0
 10382  0021D2  1766               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 10383                           
 10384                           ; BSR set to: 0
 10385  0021D4  0E00               	movlw	0
 10386  0021D6  6F66               	movwf	__div_to_l_@quot& (0+255),b
 10387  0021D8  0E00               	movlw	0
 10388  0021DA  6F67               	movwf	(__div_to_l_@quot+1)& (0+255),b
 10389  0021DC  0E00               	movlw	0
 10390  0021DE  6F68               	movwf	(__div_to_l_@quot+2)& (0+255),b
 10391  0021E0  0E00               	movlw	0
 10392  0021E2  6F69               	movwf	(__div_to_l_@quot+3)& (0+255),b
 10393                           
 10394                           ; BSR set to: 0
 10395  0021E4  0E7F               	movlw	127
 10396  0021E6  5F6B               	subwf	__div_to_l_@exp1& (0+255),f,b
 10397                           
 10398                           ; BSR set to: 0
 10399  0021E8  516A               	movf	__div_to_l_@cntr& (0+255),w,b
 10400  0021EA  0FA0               	addlw	160
 10401  0021EC  5F6B               	subwf	__div_to_l_@exp1& (0+255),f,b
 10402                           
 10403                           ; BSR set to: 0
 10404  0021EE  0E20               	movlw	32
 10405  0021F0  6F6A               	movwf	__div_to_l_@cntr& (0+255),b
 10406  0021F2                     
 10407                           ; BSR set to: 0
 10408                           
 10409                           ; BSR set to: 0
 10410  0021F2  90D8               	bcf	status,0,c
 10411  0021F4  3766               	rlcf	__div_to_l_@quot& (0+255),f,b
 10412  0021F6  3767               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 10413  0021F8  3768               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 10414  0021FA  3769               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 10415                           
 10416                           ; BSR set to: 0
 10417  0021FC  5163               	movf	__div_to_l_@f2& (0+255),w,b
 10418  0021FE  5D60               	subwf	__div_to_l_@f1& (0+255),w,b
 10419  002200  5164               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 10420  002202  5961               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 10421  002204  5165               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 10422  002206  5962               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 10423  002208  5166               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 10424  00220A  5963               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 10425  00220C  A0D8               	btfss	status,0,c
 10426  00220E  D009               	goto	l2120
 10427                           
 10428                           ; BSR set to: 0
 10429  002210  5163               	movf	__div_to_l_@f2& (0+255),w,b
 10430  002212  5F60               	subwf	__div_to_l_@f1& (0+255),f,b
 10431  002214  5164               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 10432  002216  5B61               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 10433  002218  5165               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 10434  00221A  5B62               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 10435  00221C  5166               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 10436  00221E  5B63               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 10437                           
 10438                           ; BSR set to: 0
 10439  002220  8166               	bsf	__div_to_l_@quot& (0+255),0,b
 10440  002222                     l2120:
 10441                           
 10442                           ; BSR set to: 0
 10443                           
 10444                           ; BSR set to: 0
 10445  002222  90D8               	bcf	status,0,c
 10446  002224  3760               	rlcf	__div_to_l_@f1& (0+255),f,b
 10447  002226  3761               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 10448  002228  3762               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 10449  00222A  3763               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 10450                           
 10451                           ; BSR set to: 0
 10452  00222C  2F6A               	decfsz	__div_to_l_@cntr& (0+255),f,b
 10453  00222E  D7E1               	goto	l2119
 10454                           
 10455                           ; BSR set to: 0
 10456                           
 10457                           ; BSR set to: 0
 10458  002230  AF6B               	btfss	__div_to_l_@exp1& (0+255),7,b
 10459  002232  D016               	goto	l2122
 10460                           
 10461                           ; BSR set to: 0
 10462  002234  516B               	movf	__div_to_l_@exp1& (0+255),w,b
 10463  002236  0A80               	xorlw	128
 10464  002238  0F9F               	addlw	159
 10465  00223A  B0D8               	btfsc	status,0,c
 10466  00223C  D009               	goto	l2123
 10467                           
 10468                           ; BSR set to: 0
 10469  00223E  0E00               	movlw	0
 10470  002240  6F60               	movwf	?__div_to_l_& (0+255),b
 10471  002242  0E00               	movlw	0
 10472  002244  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
 10473  002246  0E00               	movlw	0
 10474  002248  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
 10475  00224A  0E00               	movlw	0
 10476  00224C  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
 10477                           
 10478                           ; BSR set to: 0
 10479  00224E  0012               	return	
 10480  002250                     l2123:
 10481                           
 10482                           ; BSR set to: 0
 10483                           
 10484                           ; BSR set to: 0
 10485                           
 10486                           ; BSR set to: 0
 10487  002250  90D8               	bcf	status,0,c
 10488  002252  3369               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 10489  002254  3368               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 10490  002256  3367               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 10491  002258  3366               	rrcf	__div_to_l_@quot& (0+255),f,b
 10492                           
 10493                           ; BSR set to: 0
 10494  00225A  3F6B               	incfsz	__div_to_l_@exp1& (0+255),f,b
 10495  00225C  D7F9               	goto	l2123
 10496                           
 10497                           ; BSR set to: 0
 10498  00225E  D015               	goto	u6330
 10499  002260                     l2122:
 10500                           
 10501                           ; BSR set to: 0
 10502                           
 10503                           ; BSR set to: 0
 10504  002260  0E1F               	movlw	31
 10505  002262  656B               	cpfsgt	__div_to_l_@exp1& (0+255),b
 10506  002264  D00F               	goto	l2128
 10507                           
 10508                           ; BSR set to: 0
 10509  002266  0E00               	movlw	0
 10510  002268  6F60               	movwf	?__div_to_l_& (0+255),b
 10511  00226A  0E00               	movlw	0
 10512  00226C  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
 10513  00226E  0E00               	movlw	0
 10514  002270  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
 10515  002272  0E00               	movlw	0
 10516  002274  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
 10517                           
 10518                           ; BSR set to: 0
 10519  002276  0012               	return	
 10520  002278                     
 10521                           ; BSR set to: 0
 10522                           
 10523                           ; BSR set to: 0
 10524  002278  90D8               	bcf	status,0,c
 10525  00227A  3766               	rlcf	__div_to_l_@quot& (0+255),f,b
 10526  00227C  3767               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 10527  00227E  3768               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 10528  002280  3769               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 10529  002282  076B               	decf	__div_to_l_@exp1& (0+255),f,b
 10530  002284                     l2128:
 10531                           
 10532                           ; BSR set to: 0
 10533                           
 10534                           ; BSR set to: 0
 10535  002284  516B               	movf	__div_to_l_@exp1& (0+255),w,b
 10536  002286  A4D8               	btfss	status,2,c
 10537  002288  D7F7               	goto	l2129
 10538  00228A                     u6330:
 10539                           
 10540                           ; BSR set to: 0
 10541                           
 10542                           ; BSR set to: 0
 10543  00228A  C066  F060         	movff	__div_to_l_@quot,?__div_to_l_
 10544  00228E  C067  F061         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 10545  002292  C068  F062         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 10546  002296  C069  F063         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 10547                           
 10548                           ; BSR set to: 0
 10549  00229A  0012               	return		;funcret
 10550  00229C                     __end_of__div_to_l_:
 10551                           	opt stack 0
 10552                           tblptru	equ	0xFF8
 10553                           tblptrh	equ	0xFF7
 10554                           tblptrl	equ	0xFF6
 10555                           tablat	equ	0xFF5
 10556                           prodh	equ	0xFF4
 10557                           prodl	equ	0xFF3
 10558                           intcon	equ	0xFF2
 10559                           postinc0	equ	0xFEE
 10560                           wreg	equ	0xFE8
 10561                           indf1	equ	0xFE7
 10562                           postdec1	equ	0xFE5
 10563                           fsr1h	equ	0xFE2
 10564                           fsr1l	equ	0xFE1
 10565                           indf2	equ	0xFDF
 10566                           postinc2	equ	0xFDE
 10567                           postdec2	equ	0xFDD
 10568                           plusw2	equ	0xFDB
 10569                           fsr2h	equ	0xFDA
 10570                           fsr2l	equ	0xFD9
 10571                           status	equ	0xFD8
 10572                           
 10573 ;; *************** function ___lltoft *****************
 10574 ;; Defined at:
 10575 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lltoft.c"
 10576 ;; Parameters:    Size  Location     Type
 10577 ;;  c               4    8[BANK0 ] unsigned long 
 10578 ;; Auto vars:     Size  Location     Type
 10579 ;;  exp             1   16[BANK0 ] unsigned char 
 10580 ;; Return value:  Size  Location     Type
 10581 ;;                  3    8[BANK0 ] float 
 10582 ;; Registers used:
 10583 ;;		wreg, status,2, status,0, cstack
 10584 ;; Tracked objects:
 10585 ;;		On entry : 0/0
 10586 ;;		On exit  : 0/0
 10587 ;;		Unchanged: 0/0
 10588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10589 ;;      Params:         0       4       0       0       0       0       0       0       0
 10590 ;;      Locals:         0       1       0       0       0       0       0       0       0
 10591 ;;      Temps:          0       4       0       0       0       0       0       0       0
 10592 ;;      Totals:         0       9       0       0       0       0       0       0       0
 10593 ;;Total ram usage:        9 bytes
 10594 ;; Hardware stack levels used:    1
 10595 ;; Hardware stack levels required when called:   11
 10596 ;; This function calls:
 10597 ;;		___ftpack
 10598 ;; This function is called by:
 10599 ;;		_sprintf
 10600 ;; This function uses a non-reentrant model
 10601 ;;
 10602                           
 10603                           	psect	text33
 10604  003DF4                     __ptext33:
 10605                           	opt stack 0
 10606  003DF4                     ___lltoft:
 10607                           	opt stack 17
 10608                           
 10609                           ; BSR set to: 0
 10610                           ;incstack = 0
 10611  003DF4  0E8E               	movlw	142
 10612  003DF6  0100               	movlb	0	; () banked
 10613  003DF8  6F70               	movwf	___lltoft@exp& (0+255),b
 10614  003DFA  D006               	goto	l2327
 10615  003DFC                     
 10616                           ; BSR set to: 0
 10617                           
 10618                           ; BSR set to: 0
 10619  003DFC  90D8               	bcf	status,0,c
 10620  003DFE  336B               	rrcf	(___lltoft@c+3)& (0+255),f,b
 10621  003E00  336A               	rrcf	(___lltoft@c+2)& (0+255),f,b
 10622  003E02  3369               	rrcf	(___lltoft@c+1)& (0+255),f,b
 10623  003E04  3368               	rrcf	___lltoft@c& (0+255),f,b
 10624  003E06  2B70               	incf	___lltoft@exp& (0+255),f,b
 10625  003E08                     l2327:
 10626                           
 10627                           ; BSR set to: 0
 10628                           
 10629                           ; BSR set to: 0
 10630  003E08  0E00               	movlw	0
 10631  003E0A  1568               	andwf	___lltoft@c& (0+255),w,b
 10632  003E0C  6F6C               	movwf	??___lltoft& (0+255),b
 10633  003E0E  0E00               	movlw	0
 10634  003E10  1569               	andwf	(___lltoft@c+1)& (0+255),w,b
 10635  003E12  6F6D               	movwf	(??___lltoft+1)& (0+255),b
 10636  003E14  0E00               	movlw	0
 10637  003E16  156A               	andwf	(___lltoft@c+2)& (0+255),w,b
 10638  003E18  6F6E               	movwf	(??___lltoft+2)& (0+255),b
 10639  003E1A  0EFF               	movlw	255
 10640  003E1C  156B               	andwf	(___lltoft@c+3)& (0+255),w,b
 10641  003E1E  6F6F               	movwf	(??___lltoft+3)& (0+255),b
 10642  003E20  516C               	movf	??___lltoft& (0+255),w,b
 10643  003E22  116D               	iorwf	(??___lltoft+1)& (0+255),w,b
 10644  003E24  116E               	iorwf	(??___lltoft+2)& (0+255),w,b
 10645  003E26  116F               	iorwf	(??___lltoft+3)& (0+255),w,b
 10646  003E28  A4D8               	btfss	status,2,c
 10647  003E2A  D7E8               	goto	l2328
 10648                           
 10649                           ; BSR set to: 0
 10650                           
 10651                           ; BSR set to: 0
 10652  003E2C  C068  F060         	movff	___lltoft@c,___ftpack@arg
 10653  003E30  C069  F061         	movff	___lltoft@c+1,___ftpack@arg+1
 10654  003E34  C06A  F062         	movff	___lltoft@c+2,___ftpack@arg+2
 10655  003E38  C070  F063         	movff	___lltoft@exp,___ftpack@exp
 10656  003E3C  0E00               	movlw	0
 10657  003E3E  6F64               	movwf	___ftpack@sign& (0+255),b
 10658  003E40  EC73  F019         	call	___ftpack	;wreg free
 10659  003E44  C060  F068         	movff	?___ftpack,?___lltoft
 10660  003E48  C061  F069         	movff	?___ftpack+1,?___lltoft+1
 10661  003E4C  C062  F06A         	movff	?___ftpack+2,?___lltoft+2
 10662  003E50  0012               	return	
 10663  003E52                     __end_of___lltoft:
 10664                           	opt stack 0
 10665                           tblptru	equ	0xFF8
 10666                           tblptrh	equ	0xFF7
 10667                           tblptrl	equ	0xFF6
 10668                           tablat	equ	0xFF5
 10669                           prodh	equ	0xFF4
 10670                           prodl	equ	0xFF3
 10671                           intcon	equ	0xFF2
 10672                           postinc0	equ	0xFEE
 10673                           wreg	equ	0xFE8
 10674                           indf1	equ	0xFE7
 10675                           postdec1	equ	0xFE5
 10676                           fsr1h	equ	0xFE2
 10677                           fsr1l	equ	0xFE1
 10678                           indf2	equ	0xFDF
 10679                           postinc2	equ	0xFDE
 10680                           postdec2	equ	0xFDD
 10681                           plusw2	equ	0xFDB
 10682                           fsr2h	equ	0xFDA
 10683                           fsr2l	equ	0xFD9
 10684                           status	equ	0xFD8
 10685                           
 10686 ;; *************** function ___llmod *****************
 10687 ;; Defined at:
 10688 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\llmod.c"
 10689 ;; Parameters:    Size  Location     Type
 10690 ;;  dividend        4   13[BANK0 ] unsigned long 
 10691 ;;  divisor         4   17[BANK0 ] unsigned long 
 10692 ;; Auto vars:     Size  Location     Type
 10693 ;;  counter         1   21[BANK0 ] unsigned char 
 10694 ;; Return value:  Size  Location     Type
 10695 ;;                  4   13[BANK0 ] unsigned long 
 10696 ;; Registers used:
 10697 ;;		wreg, status,2, status,0
 10698 ;; Tracked objects:
 10699 ;;		On entry : 0/0
 10700 ;;		On exit  : 0/0
 10701 ;;		Unchanged: 0/0
 10702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10703 ;;      Params:         0       8       0       0       0       0       0       0       0
 10704 ;;      Locals:         0       1       0       0       0       0       0       0       0
 10705 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10706 ;;      Totals:         0       9       0       0       0       0       0       0       0
 10707 ;;Total ram usage:        9 bytes
 10708 ;; Hardware stack levels used:    1
 10709 ;; Hardware stack levels required when called:   10
 10710 ;; This function calls:
 10711 ;;		Nothing
 10712 ;; This function is called by:
 10713 ;;		_sprintf
 10714 ;;		_send
 10715 ;; This function uses a non-reentrant model
 10716 ;;
 10717                           
 10718                           	psect	text34
 10719  003D26                     __ptext34:
 10720                           	opt stack 0
 10721  003D26                     ___llmod:
 10722                           	opt stack 18
 10723                           
 10724                           ;incstack = 0
 10725  003D26  0100               	movlb	0	; () banked
 10726  003D28  5171               	movf	___llmod@divisor& (0+255),w,b
 10727  003D2A  1172               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 10728  003D2C  1173               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 10729  003D2E  1174               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 10730  003D30  B4D8               	btfsc	status,2,c
 10731  003D32  D024               	goto	l2321
 10732                           
 10733                           ; BSR set to: 0
 10734  003D34  0E01               	movlw	1
 10735  003D36  6F75               	movwf	___llmod@counter& (0+255),b
 10736  003D38  D006               	goto	l2316
 10737  003D3A                     
 10738                           ; BSR set to: 0
 10739                           
 10740                           ; BSR set to: 0
 10741  003D3A  90D8               	bcf	status,0,c
 10742  003D3C  3771               	rlcf	___llmod@divisor& (0+255),f,b
 10743  003D3E  3772               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 10744  003D40  3773               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 10745  003D42  3774               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 10746  003D44  2B75               	incf	___llmod@counter& (0+255),f,b
 10747  003D46                     l2316:
 10748                           
 10749                           ; BSR set to: 0
 10750                           
 10751                           ; BSR set to: 0
 10752  003D46  AF74               	btfss	(___llmod@divisor+3)& (0+255),7,b
 10753  003D48  D7F8               	goto	l2317
 10754  003D4A                     u6510:
 10755                           
 10756                           ; BSR set to: 0
 10757                           
 10758                           ; BSR set to: 0
 10759                           
 10760                           ; BSR set to: 0
 10761  003D4A  5171               	movf	___llmod@divisor& (0+255),w,b
 10762  003D4C  5D6D               	subwf	___llmod@dividend& (0+255),w,b
 10763  003D4E  5172               	movf	(___llmod@divisor+1)& (0+255),w,b
 10764  003D50  596E               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 10765  003D52  5173               	movf	(___llmod@divisor+2)& (0+255),w,b
 10766  003D54  596F               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 10767  003D56  5174               	movf	(___llmod@divisor+3)& (0+255),w,b
 10768  003D58  5970               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 10769  003D5A  A0D8               	btfss	status,0,c
 10770  003D5C  D008               	goto	l2320
 10771                           
 10772                           ; BSR set to: 0
 10773  003D5E  5171               	movf	___llmod@divisor& (0+255),w,b
 10774  003D60  5F6D               	subwf	___llmod@dividend& (0+255),f,b
 10775  003D62  5172               	movf	(___llmod@divisor+1)& (0+255),w,b
 10776  003D64  5B6E               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 10777  003D66  5173               	movf	(___llmod@divisor+2)& (0+255),w,b
 10778  003D68  5B6F               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 10779  003D6A  5174               	movf	(___llmod@divisor+3)& (0+255),w,b
 10780  003D6C  5B70               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 10781  003D6E                     l2320:
 10782                           
 10783                           ; BSR set to: 0
 10784                           
 10785                           ; BSR set to: 0
 10786  003D6E  90D8               	bcf	status,0,c
 10787  003D70  3374               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 10788  003D72  3373               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 10789  003D74  3372               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 10790  003D76  3371               	rrcf	___llmod@divisor& (0+255),f,b
 10791                           
 10792                           ; BSR set to: 0
 10793  003D78  2F75               	decfsz	___llmod@counter& (0+255),f,b
 10794  003D7A  D7E7               	goto	u6510
 10795  003D7C                     l2321:
 10796                           
 10797                           ; BSR set to: 0
 10798                           
 10799                           ; BSR set to: 0
 10800  003D7C  C06D  F06D         	movff	___llmod@dividend,?___llmod
 10801  003D80  C06E  F06E         	movff	___llmod@dividend+1,?___llmod+1
 10802  003D84  C06F  F06F         	movff	___llmod@dividend+2,?___llmod+2
 10803  003D88  C070  F070         	movff	___llmod@dividend+3,?___llmod+3
 10804                           
 10805                           ; BSR set to: 0
 10806  003D8C  0012               	return		;funcret
 10807  003D8E                     __end_of___llmod:
 10808                           	opt stack 0
 10809                           tblptru	equ	0xFF8
 10810                           tblptrh	equ	0xFF7
 10811                           tblptrl	equ	0xFF6
 10812                           tablat	equ	0xFF5
 10813                           prodh	equ	0xFF4
 10814                           prodl	equ	0xFF3
 10815                           intcon	equ	0xFF2
 10816                           postinc0	equ	0xFEE
 10817                           wreg	equ	0xFE8
 10818                           indf1	equ	0xFE7
 10819                           postdec1	equ	0xFE5
 10820                           fsr1h	equ	0xFE2
 10821                           fsr1l	equ	0xFE1
 10822                           indf2	equ	0xFDF
 10823                           postinc2	equ	0xFDE
 10824                           postdec2	equ	0xFDD
 10825                           plusw2	equ	0xFDB
 10826                           fsr2h	equ	0xFDA
 10827                           fsr2l	equ	0xFD9
 10828                           status	equ	0xFD8
 10829                           
 10830 ;; *************** function ___lldiv *****************
 10831 ;; Defined at:
 10832 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lldiv.c"
 10833 ;; Parameters:    Size  Location     Type
 10834 ;;  dividend        4    0[BANK0 ] unsigned long 
 10835 ;;  divisor         4    4[BANK0 ] unsigned long 
 10836 ;; Auto vars:     Size  Location     Type
 10837 ;;  quotient        4    8[BANK0 ] unsigned long 
 10838 ;;  counter         1   12[BANK0 ] unsigned char 
 10839 ;; Return value:  Size  Location     Type
 10840 ;;                  4    0[BANK0 ] unsigned long 
 10841 ;; Registers used:
 10842 ;;		wreg, status,2, status,0
 10843 ;; Tracked objects:
 10844 ;;		On entry : 0/0
 10845 ;;		On exit  : 0/0
 10846 ;;		Unchanged: 0/0
 10847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10848 ;;      Params:         0       8       0       0       0       0       0       0       0
 10849 ;;      Locals:         0       5       0       0       0       0       0       0       0
 10850 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10851 ;;      Totals:         0      13       0       0       0       0       0       0       0
 10852 ;;Total ram usage:       13 bytes
 10853 ;; Hardware stack levels used:    1
 10854 ;; Hardware stack levels required when called:   10
 10855 ;; This function calls:
 10856 ;;		Nothing
 10857 ;; This function is called by:
 10858 ;;		_setup_uart
 10859 ;;		_sprintf
 10860 ;; This function uses a non-reentrant model
 10861 ;;
 10862                           
 10863                           	psect	text35
 10864  003AD0                     __ptext35:
 10865                           	opt stack 0
 10866  003AD0                     ___lldiv:
 10867                           	opt stack 19
 10868                           
 10869                           ; BSR set to: 0
 10870                           ;incstack = 0
 10871  003AD0  0E00               	movlw	0
 10872  003AD2  0100               	movlb	0	; () banked
 10873  003AD4  6F68               	movwf	___lldiv@quotient& (0+255),b
 10874  003AD6  0E00               	movlw	0
 10875  003AD8  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 10876  003ADA  0E00               	movlw	0
 10877  003ADC  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 10878  003ADE  0E00               	movlw	0
 10879  003AE0  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 10880                           
 10881                           ; BSR set to: 0
 10882  003AE2  5164               	movf	___lldiv@divisor& (0+255),w,b
 10883  003AE4  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 10884  003AE6  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 10885  003AE8  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 10886  003AEA  B4D8               	btfsc	status,2,c
 10887  003AEC  D02A               	goto	l2311
 10888                           
 10889                           ; BSR set to: 0
 10890  003AEE  0E01               	movlw	1
 10891  003AF0  6F6C               	movwf	___lldiv@counter& (0+255),b
 10892  003AF2  D006               	goto	l2306
 10893  003AF4                     
 10894                           ; BSR set to: 0
 10895                           
 10896                           ; BSR set to: 0
 10897  003AF4  90D8               	bcf	status,0,c
 10898  003AF6  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 10899  003AF8  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 10900  003AFA  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 10901  003AFC  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 10902  003AFE  2B6C               	incf	___lldiv@counter& (0+255),f,b
 10903  003B00                     l2306:
 10904                           
 10905                           ; BSR set to: 0
 10906                           
 10907                           ; BSR set to: 0
 10908  003B00  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 10909  003B02  D7F8               	goto	l2307
 10910  003B04                     u6480:
 10911                           
 10912                           ; BSR set to: 0
 10913                           
 10914                           ; BSR set to: 0
 10915                           
 10916                           ; BSR set to: 0
 10917  003B04  90D8               	bcf	status,0,c
 10918  003B06  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 10919  003B08  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 10920  003B0A  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 10921  003B0C  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 10922                           
 10923                           ; BSR set to: 0
 10924  003B0E  5164               	movf	___lldiv@divisor& (0+255),w,b
 10925  003B10  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 10926  003B12  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 10927  003B14  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 10928  003B16  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 10929  003B18  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 10930  003B1A  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 10931  003B1C  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 10932  003B1E  A0D8               	btfss	status,0,c
 10933  003B20  D009               	goto	l2310
 10934                           
 10935                           ; BSR set to: 0
 10936  003B22  5164               	movf	___lldiv@divisor& (0+255),w,b
 10937  003B24  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 10938  003B26  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 10939  003B28  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 10940  003B2A  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 10941  003B2C  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 10942  003B2E  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 10943  003B30  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 10944                           
 10945                           ; BSR set to: 0
 10946  003B32  8168               	bsf	___lldiv@quotient& (0+255),0,b
 10947  003B34                     l2310:
 10948                           
 10949                           ; BSR set to: 0
 10950                           
 10951                           ; BSR set to: 0
 10952  003B34  90D8               	bcf	status,0,c
 10953  003B36  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 10954  003B38  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 10955  003B3A  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 10956  003B3C  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 10957                           
 10958                           ; BSR set to: 0
 10959  003B3E  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 10960  003B40  D7E1               	goto	u6480
 10961  003B42                     l2311:
 10962                           
 10963                           ; BSR set to: 0
 10964                           
 10965                           ; BSR set to: 0
 10966  003B42  C068  F060         	movff	___lldiv@quotient,?___lldiv
 10967  003B46  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 10968  003B4A  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 10969  003B4E  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 10970                           
 10971                           ; BSR set to: 0
 10972  003B52  0012               	return		;funcret
 10973  003B54                     __end_of___lldiv:
 10974                           	opt stack 0
 10975                           tblptru	equ	0xFF8
 10976                           tblptrh	equ	0xFF7
 10977                           tblptrl	equ	0xFF6
 10978                           tablat	equ	0xFF5
 10979                           prodh	equ	0xFF4
 10980                           prodl	equ	0xFF3
 10981                           intcon	equ	0xFF2
 10982                           postinc0	equ	0xFEE
 10983                           wreg	equ	0xFE8
 10984                           indf1	equ	0xFE7
 10985                           postdec1	equ	0xFE5
 10986                           fsr1h	equ	0xFE2
 10987                           fsr1l	equ	0xFE1
 10988                           indf2	equ	0xFDF
 10989                           postinc2	equ	0xFDE
 10990                           postdec2	equ	0xFDD
 10991                           plusw2	equ	0xFDB
 10992                           fsr2h	equ	0xFDA
 10993                           fsr2l	equ	0xFD9
 10994                           status	equ	0xFD8
 10995                           
 10996 ;; *************** function ___fttol *****************
 10997 ;; Defined at:
 10998 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\fttol.c"
 10999 ;; Parameters:    Size  Location     Type
 11000 ;;  f1              3   79[BANK0 ] float 
 11001 ;; Auto vars:     Size  Location     Type
 11002 ;;  lval            4   89[BANK0 ] unsigned long 
 11003 ;;  exp1            1   93[BANK0 ] unsigned char 
 11004 ;;  sign1           1   88[BANK0 ] unsigned char 
 11005 ;; Return value:  Size  Location     Type
 11006 ;;                  4   79[BANK0 ] long 
 11007 ;; Registers used:
 11008 ;;		wreg, status,2, status,0
 11009 ;; Tracked objects:
 11010 ;;		On entry : 0/0
 11011 ;;		On exit  : 0/0
 11012 ;;		Unchanged: 0/0
 11013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11014 ;;      Params:         0       4       0       0       0       0       0       0       0
 11015 ;;      Locals:         0       6       0       0       0       0       0       0       0
 11016 ;;      Temps:          0       5       0       0       0       0       0       0       0
 11017 ;;      Totals:         0      15       0       0       0       0       0       0       0
 11018 ;;Total ram usage:       15 bytes
 11019 ;; Hardware stack levels used:    1
 11020 ;; Hardware stack levels required when called:   10
 11021 ;; This function calls:
 11022 ;;		Nothing
 11023 ;; This function is called by:
 11024 ;;		_main
 11025 ;;		_sprintf
 11026 ;; This function uses a non-reentrant model
 11027 ;;
 11028                           
 11029                           	psect	text36
 11030  002B08                     __ptext36:
 11031                           	opt stack 0
 11032  002B08                     ___fttol:
 11033                           	opt stack 20
 11034                           
 11035                           ; BSR set to: 0
 11036                           ;incstack = 0
 11037  002B08  C0B1  F0B3         	movff	___fttol@f1+2,??___fttol
 11038  002B0C  0100               	movlb	0	; () banked
 11039  002B0E  6BB4               	clrf	(??___fttol+1)& (0+255),b
 11040  002B10  6BB5               	clrf	(??___fttol+2)& (0+255),b
 11041  002B12  35B0               	rlcf	(___fttol@f1+1)& (0+255),w,b
 11042  002B14  37B3               	rlcf	??___fttol& (0+255),f,b
 11043  002B16  E301               	bnc	u6391
 11044  002B18  81B4               	bsf	(??___fttol+1)& (0+255),0,b
 11045  002B1A                     u6391:
 11046  002B1A  51B3               	movf	??___fttol& (0+255),w,b
 11047  002B1C  6FBD               	movwf	___fttol@exp1& (0+255),b
 11048  002B1E  51BD               	movf	___fttol@exp1& (0+255),w,b
 11049  002B20  A4D8               	btfss	status,2,c
 11050  002B22  D009               	goto	l2265
 11051                           
 11052                           ; BSR set to: 0
 11053  002B24  0E00               	movlw	0
 11054  002B26  6FAF               	movwf	?___fttol& (0+255),b
 11055  002B28  0E00               	movlw	0
 11056  002B2A  6FB0               	movwf	(?___fttol+1)& (0+255),b
 11057  002B2C  0E00               	movlw	0
 11058  002B2E  6FB1               	movwf	(?___fttol+2)& (0+255),b
 11059  002B30  0E00               	movlw	0
 11060  002B32  6FB2               	movwf	(?___fttol+3)& (0+255),b
 11061                           
 11062                           ; BSR set to: 0
 11063  002B34  0012               	return	
 11064  002B36                     l2265:
 11065                           
 11066                           ; BSR set to: 0
 11067                           
 11068                           ; BSR set to: 0
 11069  002B36  0E17               	movlw	23
 11070  002B38  6FB3               	movwf	??___fttol& (0+255),b
 11071  002B3A  C0AF  F0B4         	movff	___fttol@f1,??___fttol+1
 11072  002B3E  C0B0  F0B5         	movff	___fttol@f1+1,??___fttol+2
 11073  002B42  C0B1  F0B6         	movff	___fttol@f1+2,??___fttol+3
 11074  002B46  29B3               	incf	??___fttol& (0+255),w,b
 11075  002B48  6FB7               	movwf	(??___fttol+4)& (0+255),b
 11076  002B4A  D004               	goto	u6410
 11077  002B4C                     u6415:
 11078  002B4C  90D8               	bcf	status,0,c
 11079  002B4E  33B6               	rrcf	(??___fttol+3)& (0+255),f,b
 11080  002B50  33B5               	rrcf	(??___fttol+2)& (0+255),f,b
 11081  002B52  33B4               	rrcf	(??___fttol+1)& (0+255),f,b
 11082  002B54                     u6410:
 11083  002B54  2FB7               	decfsz	(??___fttol+4)& (0+255),f,b
 11084  002B56  D7FA               	goto	u6415
 11085  002B58  0100               	movlb	0	; () banked
 11086  002B5A  51B4               	movf	(??___fttol+1)& (0+255),w,b
 11087  002B5C  6FB8               	movwf	___fttol@sign1& (0+255),b
 11088                           
 11089                           ; BSR set to: 0
 11090  002B5E  8FB0               	bsf	(___fttol@f1+1)& (0+255),7,b
 11091                           
 11092                           ; BSR set to: 0
 11093  002B60  0EFF               	movlw	255
 11094  002B62  17AF               	andwf	___fttol@f1& (0+255),f,b
 11095  002B64  0EFF               	movlw	255
 11096  002B66  17B0               	andwf	(___fttol@f1+1)& (0+255),f,b
 11097  002B68  0E00               	movlw	0
 11098  002B6A  17B1               	andwf	(___fttol@f1+2)& (0+255),f,b
 11099                           
 11100                           ; BSR set to: 0
 11101  002B6C  51AF               	movf	___fttol@f1& (0+255),w,b
 11102  002B6E  6FB9               	movwf	___fttol@lval& (0+255),b
 11103  002B70  51B0               	movf	(___fttol@f1+1)& (0+255),w,b
 11104  002B72  6FBA               	movwf	(___fttol@lval+1)& (0+255),b
 11105  002B74  51B1               	movf	(___fttol@f1+2)& (0+255),w,b
 11106  002B76  6FBB               	movwf	(___fttol@lval+2)& (0+255),b
 11107  002B78  6BBC               	clrf	(___fttol@lval+3)& (0+255),b
 11108                           
 11109                           ; BSR set to: 0
 11110  002B7A  0E8E               	movlw	142
 11111  002B7C  5FBD               	subwf	___fttol@exp1& (0+255),f,b
 11112                           
 11113                           ; BSR set to: 0
 11114  002B7E  AFBD               	btfss	___fttol@exp1& (0+255),7,b
 11115  002B80  D016               	goto	l2267
 11116                           
 11117                           ; BSR set to: 0
 11118  002B82  51BD               	movf	___fttol@exp1& (0+255),w,b
 11119  002B84  0A80               	xorlw	128
 11120  002B86  0F8F               	addlw	143
 11121  002B88  B0D8               	btfsc	status,0,c
 11122  002B8A  D009               	goto	l2268
 11123                           
 11124                           ; BSR set to: 0
 11125  002B8C  0E00               	movlw	0
 11126  002B8E  6FAF               	movwf	?___fttol& (0+255),b
 11127  002B90  0E00               	movlw	0
 11128  002B92  6FB0               	movwf	(?___fttol+1)& (0+255),b
 11129  002B94  0E00               	movlw	0
 11130  002B96  6FB1               	movwf	(?___fttol+2)& (0+255),b
 11131  002B98  0E00               	movlw	0
 11132  002B9A  6FB2               	movwf	(?___fttol+3)& (0+255),b
 11133                           
 11134                           ; BSR set to: 0
 11135  002B9C  0012               	return	
 11136  002B9E                     l2268:
 11137                           
 11138                           ; BSR set to: 0
 11139                           
 11140                           ; BSR set to: 0
 11141                           
 11142                           ; BSR set to: 0
 11143  002B9E  90D8               	bcf	status,0,c
 11144  002BA0  33BC               	rrcf	(___fttol@lval+3)& (0+255),f,b
 11145  002BA2  33BB               	rrcf	(___fttol@lval+2)& (0+255),f,b
 11146  002BA4  33BA               	rrcf	(___fttol@lval+1)& (0+255),f,b
 11147  002BA6  33B9               	rrcf	___fttol@lval& (0+255),f,b
 11148                           
 11149                           ; BSR set to: 0
 11150  002BA8  3FBD               	incfsz	___fttol@exp1& (0+255),f,b
 11151  002BAA  D7F9               	goto	l2268
 11152                           
 11153                           ; BSR set to: 0
 11154  002BAC  D015               	goto	u6450
 11155  002BAE                     l2267:
 11156                           
 11157                           ; BSR set to: 0
 11158                           
 11159                           ; BSR set to: 0
 11160  002BAE  0E17               	movlw	23
 11161  002BB0  65BD               	cpfsgt	___fttol@exp1& (0+255),b
 11162  002BB2  D00F               	goto	l2273
 11163                           
 11164                           ; BSR set to: 0
 11165  002BB4  0E00               	movlw	0
 11166  002BB6  6FAF               	movwf	?___fttol& (0+255),b
 11167  002BB8  0E00               	movlw	0
 11168  002BBA  6FB0               	movwf	(?___fttol+1)& (0+255),b
 11169  002BBC  0E00               	movlw	0
 11170  002BBE  6FB1               	movwf	(?___fttol+2)& (0+255),b
 11171  002BC0  0E00               	movlw	0
 11172  002BC2  6FB2               	movwf	(?___fttol+3)& (0+255),b
 11173                           
 11174                           ; BSR set to: 0
 11175  002BC4  0012               	return	
 11176  002BC6                     
 11177                           ; BSR set to: 0
 11178                           
 11179                           ; BSR set to: 0
 11180  002BC6  90D8               	bcf	status,0,c
 11181  002BC8  37B9               	rlcf	___fttol@lval& (0+255),f,b
 11182  002BCA  37BA               	rlcf	(___fttol@lval+1)& (0+255),f,b
 11183  002BCC  37BB               	rlcf	(___fttol@lval+2)& (0+255),f,b
 11184  002BCE  37BC               	rlcf	(___fttol@lval+3)& (0+255),f,b
 11185  002BD0  07BD               	decf	___fttol@exp1& (0+255),f,b
 11186  002BD2                     l2273:
 11187                           
 11188                           ; BSR set to: 0
 11189                           
 11190                           ; BSR set to: 0
 11191  002BD2  51BD               	movf	___fttol@exp1& (0+255),w,b
 11192  002BD4  A4D8               	btfss	status,2,c
 11193  002BD6  D7F7               	goto	l2274
 11194  002BD8                     u6450:
 11195                           
 11196                           ; BSR set to: 0
 11197                           
 11198                           ; BSR set to: 0
 11199                           
 11200                           ; BSR set to: 0
 11201  002BD8  51B8               	movf	___fttol@sign1& (0+255),w,b
 11202  002BDA  B4D8               	btfsc	status,2,c
 11203  002BDC  D008               	goto	l2276
 11204                           
 11205                           ; BSR set to: 0
 11206  002BDE  1FBC               	comf	(___fttol@lval+3)& (0+255),f,b
 11207  002BE0  1FBB               	comf	(___fttol@lval+2)& (0+255),f,b
 11208  002BE2  1FBA               	comf	(___fttol@lval+1)& (0+255),f,b
 11209  002BE4  6DB9               	negf	___fttol@lval& (0+255),b
 11210  002BE6  0E00               	movlw	0
 11211  002BE8  23BA               	addwfc	(___fttol@lval+1)& (0+255),f,b
 11212  002BEA  23BB               	addwfc	(___fttol@lval+2)& (0+255),f,b
 11213  002BEC  23BC               	addwfc	(___fttol@lval+3)& (0+255),f,b
 11214  002BEE                     l2276:
 11215                           
 11216                           ; BSR set to: 0
 11217                           
 11218                           ; BSR set to: 0
 11219  002BEE  C0B9  F0AF         	movff	___fttol@lval,?___fttol
 11220  002BF2  C0BA  F0B0         	movff	___fttol@lval+1,?___fttol+1
 11221  002BF6  C0BB  F0B1         	movff	___fttol@lval+2,?___fttol+2
 11222  002BFA  C0BC  F0B2         	movff	___fttol@lval+3,?___fttol+3
 11223  002BFE  0012               	return	
 11224  002C00                     __end_of___fttol:
 11225                           	opt stack 0
 11226                           tblptru	equ	0xFF8
 11227                           tblptrh	equ	0xFF7
 11228                           tblptrl	equ	0xFF6
 11229                           tablat	equ	0xFF5
 11230                           prodh	equ	0xFF4
 11231                           prodl	equ	0xFF3
 11232                           intcon	equ	0xFF2
 11233                           postinc0	equ	0xFEE
 11234                           wreg	equ	0xFE8
 11235                           indf1	equ	0xFE7
 11236                           postdec1	equ	0xFE5
 11237                           fsr1h	equ	0xFE2
 11238                           fsr1l	equ	0xFE1
 11239                           indf2	equ	0xFDF
 11240                           postinc2	equ	0xFDE
 11241                           postdec2	equ	0xFDD
 11242                           plusw2	equ	0xFDB
 11243                           fsr2h	equ	0xFDA
 11244                           fsr2l	equ	0xFD9
 11245                           status	equ	0xFD8
 11246                           
 11247 ;; *************** function ___ftsub *****************
 11248 ;; Defined at:
 11249 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftsub.c"
 11250 ;; Parameters:    Size  Location     Type
 11251 ;;  f1              3   32[BANK0 ] float 
 11252 ;;  f2              3   35[BANK0 ] float 
 11253 ;; Auto vars:     Size  Location     Type
 11254 ;;		None
 11255 ;; Return value:  Size  Location     Type
 11256 ;;                  3   32[BANK0 ] float 
 11257 ;; Registers used:
 11258 ;;		wreg, status,2, status,0, cstack
 11259 ;; Tracked objects:
 11260 ;;		On entry : 0/0
 11261 ;;		On exit  : 0/0
 11262 ;;		Unchanged: 0/0
 11263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11264 ;;      Params:         0       6       0       0       0       0       0       0       0
 11265 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11266 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11267 ;;      Totals:         0       6       0       0       0       0       0       0       0
 11268 ;;Total ram usage:        6 bytes
 11269 ;; Hardware stack levels used:    1
 11270 ;; Hardware stack levels required when called:   12
 11271 ;; This function calls:
 11272 ;;		___ftadd
 11273 ;; This function is called by:
 11274 ;;		_sprintf
 11275 ;; This function uses a non-reentrant model
 11276 ;;
 11277                           
 11278                           	psect	text37
 11279  0040D4                     __ptext37:
 11280                           	opt stack 0
 11281  0040D4                     ___ftsub:
 11282                           	opt stack 16
 11283                           
 11284                           ; BSR set to: 0
 11285                           ;incstack = 0
 11286  0040D4  0100               	movlb	0	; () banked
 11287  0040D6  5183               	movf	___ftsub@f2& (0+255),w,b
 11288  0040D8  1184               	iorwf	(___ftsub@f2+1)& (0+255),w,b
 11289  0040DA  1185               	iorwf	(___ftsub@f2+2)& (0+255),w,b
 11290  0040DC  B4D8               	btfsc	status,2,c
 11291  0040DE  D006               	goto	l2261
 11292                           
 11293                           ; BSR set to: 0
 11294  0040E0  0E00               	movlw	0
 11295  0040E2  1B83               	xorwf	___ftsub@f2& (0+255),f,b
 11296  0040E4  0E00               	movlw	0
 11297  0040E6  1B84               	xorwf	(___ftsub@f2+1)& (0+255),f,b
 11298  0040E8  0E80               	movlw	128
 11299  0040EA  1B85               	xorwf	(___ftsub@f2+2)& (0+255),f,b
 11300  0040EC                     l2261:
 11301                           
 11302                           ; BSR set to: 0
 11303                           
 11304                           ; BSR set to: 0
 11305  0040EC  C080  F074         	movff	___ftsub@f1,___ftadd@f1
 11306  0040F0  C081  F075         	movff	___ftsub@f1+1,___ftadd@f1+1
 11307  0040F4  C082  F076         	movff	___ftsub@f1+2,___ftadd@f1+2
 11308  0040F8  C083  F077         	movff	___ftsub@f2,___ftadd@f2
 11309  0040FC  C084  F078         	movff	___ftsub@f2+1,___ftadd@f2+1
 11310  004100  C085  F079         	movff	___ftsub@f2+2,___ftadd@f2+2
 11311  004104  ECD8  F00C         	call	___ftadd	;wreg free
 11312  004108  C074  F080         	movff	?___ftadd,?___ftsub
 11313  00410C  C075  F081         	movff	?___ftadd+1,?___ftsub+1
 11314  004110  C076  F082         	movff	?___ftadd+2,?___ftsub+2
 11315  004114  0012               	return	
 11316  004116                     __end_of___ftsub:
 11317                           	opt stack 0
 11318                           tblptru	equ	0xFF8
 11319                           tblptrh	equ	0xFF7
 11320                           tblptrl	equ	0xFF6
 11321                           tablat	equ	0xFF5
 11322                           prodh	equ	0xFF4
 11323                           prodl	equ	0xFF3
 11324                           intcon	equ	0xFF2
 11325                           postinc0	equ	0xFEE
 11326                           wreg	equ	0xFE8
 11327                           indf1	equ	0xFE7
 11328                           postdec1	equ	0xFE5
 11329                           fsr1h	equ	0xFE2
 11330                           fsr1l	equ	0xFE1
 11331                           indf2	equ	0xFDF
 11332                           postinc2	equ	0xFDE
 11333                           postdec2	equ	0xFDD
 11334                           plusw2	equ	0xFDB
 11335                           fsr2h	equ	0xFDA
 11336                           fsr2l	equ	0xFD9
 11337                           status	equ	0xFD8
 11338                           
 11339 ;; *************** function ___ftadd *****************
 11340 ;; Defined at:
 11341 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftadd.c"
 11342 ;; Parameters:    Size  Location     Type
 11343 ;;  f1              3   20[BANK0 ] float 
 11344 ;;  f2              3   23[BANK0 ] float 
 11345 ;; Auto vars:     Size  Location     Type
 11346 ;;  exp1            1   31[BANK0 ] unsigned char 
 11347 ;;  exp2            1   30[BANK0 ] unsigned char 
 11348 ;;  sign            1   29[BANK0 ] unsigned char 
 11349 ;; Return value:  Size  Location     Type
 11350 ;;                  3   20[BANK0 ] float 
 11351 ;; Registers used:
 11352 ;;		wreg, status,2, status,0, cstack
 11353 ;; Tracked objects:
 11354 ;;		On entry : 0/0
 11355 ;;		On exit  : 0/0
 11356 ;;		Unchanged: 0/0
 11357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11358 ;;      Params:         0       6       0       0       0       0       0       0       0
 11359 ;;      Locals:         0       3       0       0       0       0       0       0       0
 11360 ;;      Temps:          0       3       0       0       0       0       0       0       0
 11361 ;;      Totals:         0      12       0       0       0       0       0       0       0
 11362 ;;Total ram usage:       12 bytes
 11363 ;; Hardware stack levels used:    1
 11364 ;; Hardware stack levels required when called:   11
 11365 ;; This function calls:
 11366 ;;		___ftpack
 11367 ;; This function is called by:
 11368 ;;		_le_AD
 11369 ;;		_sprintf
 11370 ;;		___ftsub
 11371 ;; This function uses a non-reentrant model
 11372 ;;
 11373                           
 11374                           	psect	text38
 11375  0019B0                     __ptext38:
 11376                           	opt stack 0
 11377  0019B0                     ___ftadd:
 11378                           	opt stack 18
 11379                           
 11380                           ;incstack = 0
 11381  0019B0  C076  F07A         	movff	___ftadd@f1+2,??___ftadd
 11382  0019B4  0100               	movlb	0	; () banked
 11383  0019B6  6B7B               	clrf	(??___ftadd+1)& (0+255),b
 11384  0019B8  6B7C               	clrf	(??___ftadd+2)& (0+255),b
 11385  0019BA  3575               	rlcf	(___ftadd@f1+1)& (0+255),w,b
 11386  0019BC  377A               	rlcf	??___ftadd& (0+255),f,b
 11387  0019BE  E301               	bnc	u5401
 11388  0019C0  817B               	bsf	(??___ftadd+1)& (0+255),0,b
 11389  0019C2                     u5401:
 11390  0019C2  517A               	movf	??___ftadd& (0+255),w,b
 11391  0019C4  6F7F               	movwf	___ftadd@exp1& (0+255),b
 11392  0019C6  C079  F07A         	movff	___ftadd@f2+2,??___ftadd
 11393  0019CA  6B7B               	clrf	(??___ftadd+1)& (0+255),b
 11394  0019CC  6B7C               	clrf	(??___ftadd+2)& (0+255),b
 11395  0019CE  3578               	rlcf	(___ftadd@f2+1)& (0+255),w,b
 11396  0019D0  377A               	rlcf	??___ftadd& (0+255),f,b
 11397  0019D2  E301               	bnc	u5411
 11398  0019D4  817B               	bsf	(??___ftadd+1)& (0+255),0,b
 11399  0019D6                     u5411:
 11400  0019D6  517A               	movf	??___ftadd& (0+255),w,b
 11401  0019D8  6F7E               	movwf	___ftadd@exp2& (0+255),b
 11402                           
 11403                           ; BSR set to: 0
 11404  0019DA  517F               	movf	___ftadd@exp1& (0+255),w,b
 11405  0019DC  B4D8               	btfsc	status,2,c
 11406  0019DE  D00B               	goto	u5440
 11407                           
 11408                           ; BSR set to: 0
 11409  0019E0  517E               	movf	___ftadd@exp2& (0+255),w,b
 11410  0019E2  5D7F               	subwf	___ftadd@exp1& (0+255),w,b
 11411  0019E4  B0D8               	btfsc	status,0,c
 11412  0019E6  D00E               	goto	l2179
 11413                           
 11414                           ; BSR set to: 0
 11415  0019E8  517F               	movf	___ftadd@exp1& (0+255),w,b
 11416  0019EA  0800               	sublw	0
 11417  0019EC  257E               	addwf	___ftadd@exp2& (0+255),w,b
 11418  0019EE  6F7A               	movwf	??___ftadd& (0+255),b
 11419  0019F0  0E18               	movlw	24
 11420  0019F2  657A               	cpfsgt	??___ftadd& (0+255),b
 11421  0019F4  D007               	goto	l2179
 11422  0019F6                     u5440:
 11423                           
 11424                           ; BSR set to: 0
 11425  0019F6  C077  F074         	movff	___ftadd@f2,?___ftadd
 11426  0019FA  C078  F075         	movff	___ftadd@f2+1,?___ftadd+1
 11427  0019FE  C079  F076         	movff	___ftadd@f2+2,?___ftadd+2
 11428  001A02  0012               	return	
 11429  001A04                     l2179:
 11430                           
 11431                           ; BSR set to: 0
 11432                           
 11433                           ; BSR set to: 0
 11434  001A04  517E               	movf	___ftadd@exp2& (0+255),w,b
 11435  001A06  B4D8               	btfsc	status,2,c
 11436  001A08  D00B               	goto	u5470
 11437                           
 11438                           ; BSR set to: 0
 11439  001A0A  517F               	movf	___ftadd@exp1& (0+255),w,b
 11440  001A0C  5D7E               	subwf	___ftadd@exp2& (0+255),w,b
 11441  001A0E  B0D8               	btfsc	status,0,c
 11442  001A10  D00E               	goto	l2183
 11443                           
 11444                           ; BSR set to: 0
 11445  001A12  517E               	movf	___ftadd@exp2& (0+255),w,b
 11446  001A14  0800               	sublw	0
 11447  001A16  257F               	addwf	___ftadd@exp1& (0+255),w,b
 11448  001A18  6F7A               	movwf	??___ftadd& (0+255),b
 11449  001A1A  0E18               	movlw	24
 11450  001A1C  657A               	cpfsgt	??___ftadd& (0+255),b
 11451  001A1E  D007               	goto	l2183
 11452  001A20                     u5470:
 11453                           
 11454                           ; BSR set to: 0
 11455  001A20  C074  F074         	movff	___ftadd@f1,?___ftadd
 11456  001A24  C075  F075         	movff	___ftadd@f1+1,?___ftadd+1
 11457  001A28  C076  F076         	movff	___ftadd@f1+2,?___ftadd+2
 11458  001A2C  0012               	return	
 11459  001A2E                     l2183:
 11460                           
 11461                           ; BSR set to: 0
 11462                           
 11463                           ; BSR set to: 0
 11464  001A2E  0E06               	movlw	6
 11465  001A30  6F7D               	movwf	___ftadd@sign& (0+255),b
 11466                           
 11467                           ; BSR set to: 0
 11468  001A32  BF76               	btfsc	(___ftadd@f1+2)& (0+255),7,b
 11469                           
 11470                           ; BSR set to: 0
 11471  001A34  8F7D               	bsf	___ftadd@sign& (0+255),7,b
 11472                           
 11473                           ; BSR set to: 0
 11474                           
 11475                           ; BSR set to: 0
 11476  001A36  BF79               	btfsc	(___ftadd@f2+2)& (0+255),7,b
 11477                           
 11478                           ; BSR set to: 0
 11479  001A38  8D7D               	bsf	___ftadd@sign& (0+255),6,b
 11480                           
 11481                           ; BSR set to: 0
 11482  001A3A  8F75               	bsf	(___ftadd@f1+1)& (0+255),7,b
 11483                           
 11484                           ; BSR set to: 0
 11485  001A3C  0EFF               	movlw	255
 11486  001A3E  1774               	andwf	___ftadd@f1& (0+255),f,b
 11487  001A40  0EFF               	movlw	255
 11488  001A42  1775               	andwf	(___ftadd@f1+1)& (0+255),f,b
 11489  001A44  0E00               	movlw	0
 11490  001A46  1776               	andwf	(___ftadd@f1+2)& (0+255),f,b
 11491  001A48  8F78               	bsf	(___ftadd@f2+1)& (0+255),7,b
 11492                           
 11493                           ; BSR set to: 0
 11494  001A4A  0EFF               	movlw	255
 11495  001A4C  1777               	andwf	___ftadd@f2& (0+255),f,b
 11496  001A4E  0EFF               	movlw	255
 11497  001A50  1778               	andwf	(___ftadd@f2+1)& (0+255),f,b
 11498  001A52  0E00               	movlw	0
 11499  001A54  1779               	andwf	(___ftadd@f2+2)& (0+255),f,b
 11500                           
 11501                           ; BSR set to: 0
 11502  001A56  517E               	movf	___ftadd@exp2& (0+255),w,b
 11503  001A58  5D7F               	subwf	___ftadd@exp1& (0+255),w,b
 11504  001A5A  B0D8               	btfsc	status,0,c
 11505  001A5C  D01B               	goto	l2188
 11506  001A5E                     u5500:
 11507                           
 11508                           ; BSR set to: 0
 11509                           
 11510                           ; BSR set to: 0
 11511  001A5E  90D8               	bcf	status,0,c
 11512  001A60  3777               	rlcf	___ftadd@f2& (0+255),f,b
 11513  001A62  3778               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 11514  001A64  3779               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 11515  001A66  077E               	decf	___ftadd@exp2& (0+255),f,b
 11516                           
 11517                           ; BSR set to: 0
 11518  001A68  517F               	movf	___ftadd@exp1& (0+255),w,b
 11519  001A6A  197E               	xorwf	___ftadd@exp2& (0+255),w,b
 11520  001A6C  B4D8               	btfsc	status,2,c
 11521  001A6E  D00D               	goto	l2193
 11522                           
 11523                           ; BSR set to: 0
 11524  001A70  077D               	decf	___ftadd@sign& (0+255),f,b
 11525  001A72  C07D  F07A         	movff	___ftadd@sign,??___ftadd
 11526  001A76  0E07               	movlw	7
 11527  001A78  177A               	andwf	??___ftadd& (0+255),f,b
 11528  001A7A  B4D8               	btfsc	status,2,c
 11529  001A7C  D006               	goto	l2193
 11530  001A7E  D7EF               	goto	u5500
 11531  001A80                     
 11532                           ; BSR set to: 0
 11533                           
 11534                           ; BSR set to: 0
 11535  001A80  90D8               	bcf	status,0,c
 11536  001A82  3376               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 11537  001A84  3375               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 11538  001A86  3374               	rrcf	___ftadd@f1& (0+255),f,b
 11539  001A88  2B7F               	incf	___ftadd@exp1& (0+255),f,b
 11540  001A8A                     l2193:
 11541                           
 11542                           ; BSR set to: 0
 11543                           
 11544                           ; BSR set to: 0
 11545  001A8A  517E               	movf	___ftadd@exp2& (0+255),w,b
 11546  001A8C  197F               	xorwf	___ftadd@exp1& (0+255),w,b
 11547  001A8E  B4D8               	btfsc	status,2,c
 11548  001A90  D01F               	goto	u5570
 11549  001A92  D7F6               	goto	l2194
 11550  001A94                     l2188:
 11551                           
 11552                           ; BSR set to: 0
 11553                           
 11554                           ; BSR set to: 0
 11555  001A94  517F               	movf	___ftadd@exp1& (0+255),w,b
 11556  001A96  5D7E               	subwf	___ftadd@exp2& (0+255),w,b
 11557  001A98  B0D8               	btfsc	status,0,c
 11558  001A9A  D01A               	goto	u5570
 11559  001A9C                     u5540:
 11560                           
 11561                           ; BSR set to: 0
 11562                           
 11563                           ; BSR set to: 0
 11564  001A9C  90D8               	bcf	status,0,c
 11565  001A9E  3774               	rlcf	___ftadd@f1& (0+255),f,b
 11566  001AA0  3775               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 11567  001AA2  3776               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 11568  001AA4  077F               	decf	___ftadd@exp1& (0+255),f,b
 11569                           
 11570                           ; BSR set to: 0
 11571  001AA6  517F               	movf	___ftadd@exp1& (0+255),w,b
 11572  001AA8  197E               	xorwf	___ftadd@exp2& (0+255),w,b
 11573  001AAA  B4D8               	btfsc	status,2,c
 11574  001AAC  D00D               	goto	l2202
 11575                           
 11576                           ; BSR set to: 0
 11577  001AAE  077D               	decf	___ftadd@sign& (0+255),f,b
 11578  001AB0  C07D  F07A         	movff	___ftadd@sign,??___ftadd
 11579  001AB4  0E07               	movlw	7
 11580  001AB6  177A               	andwf	??___ftadd& (0+255),f,b
 11581  001AB8  B4D8               	btfsc	status,2,c
 11582  001ABA  D006               	goto	l2202
 11583  001ABC  D7EF               	goto	u5540
 11584  001ABE                     
 11585                           ; BSR set to: 0
 11586                           
 11587                           ; BSR set to: 0
 11588  001ABE  90D8               	bcf	status,0,c
 11589  001AC0  3379               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 11590  001AC2  3378               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 11591  001AC4  3377               	rrcf	___ftadd@f2& (0+255),f,b
 11592  001AC6  2B7E               	incf	___ftadd@exp2& (0+255),f,b
 11593  001AC8                     l2202:
 11594                           
 11595                           ; BSR set to: 0
 11596                           
 11597                           ; BSR set to: 0
 11598  001AC8  517E               	movf	___ftadd@exp2& (0+255),w,b
 11599  001ACA  197F               	xorwf	___ftadd@exp1& (0+255),w,b
 11600  001ACC  A4D8               	btfss	status,2,c
 11601  001ACE  D7F7               	goto	l2203
 11602  001AD0                     u5570:
 11603                           
 11604                           ; BSR set to: 0
 11605                           
 11606                           ; BSR set to: 0
 11607                           
 11608                           ; BSR set to: 0
 11609  001AD0  AF7D               	btfss	___ftadd@sign& (0+255),7,b
 11610  001AD2  D00C               	goto	l2205
 11611                           
 11612                           ; BSR set to: 0
 11613  001AD4  0EFF               	movlw	255
 11614  001AD6  1B74               	xorwf	___ftadd@f1& (0+255),f,b
 11615  001AD8  0EFF               	movlw	255
 11616  001ADA  1B75               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 11617  001ADC  0EFF               	movlw	255
 11618  001ADE  1B76               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 11619  001AE0  0E01               	movlw	1
 11620  001AE2  2774               	addwf	___ftadd@f1& (0+255),f,b
 11621  001AE4  0E00               	movlw	0
 11622  001AE6  2375               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 11623  001AE8  0E00               	movlw	0
 11624  001AEA  2376               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 11625  001AEC                     l2205:
 11626                           
 11627                           ; BSR set to: 0
 11628  001AEC  AD7D               	btfss	___ftadd@sign& (0+255),6,b
 11629  001AEE  D00C               	goto	l2206
 11630                           
 11631                           ; BSR set to: 0
 11632  001AF0  0EFF               	movlw	255
 11633  001AF2  1B77               	xorwf	___ftadd@f2& (0+255),f,b
 11634  001AF4  0EFF               	movlw	255
 11635  001AF6  1B78               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 11636  001AF8  0EFF               	movlw	255
 11637  001AFA  1B79               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 11638  001AFC  0E01               	movlw	1
 11639  001AFE  2777               	addwf	___ftadd@f2& (0+255),f,b
 11640  001B00  0E00               	movlw	0
 11641  001B02  2378               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 11642  001B04  0E00               	movlw	0
 11643  001B06  2379               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 11644  001B08                     l2206:
 11645                           
 11646                           ; BSR set to: 0
 11647                           
 11648                           ; BSR set to: 0
 11649  001B08  0E00               	movlw	0
 11650  001B0A  6F7D               	movwf	___ftadd@sign& (0+255),b
 11651                           
 11652                           ; BSR set to: 0
 11653  001B0C  5174               	movf	___ftadd@f1& (0+255),w,b
 11654  001B0E  2777               	addwf	___ftadd@f2& (0+255),f,b
 11655  001B10  5175               	movf	(___ftadd@f1+1)& (0+255),w,b
 11656  001B12  2378               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 11657  001B14  5176               	movf	(___ftadd@f1+2)& (0+255),w,b
 11658  001B16  2379               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 11659                           
 11660                           ; BSR set to: 0
 11661  001B18  AF79               	btfss	(___ftadd@f2+2)& (0+255),7,b
 11662  001B1A  D00E               	goto	l2207
 11663                           
 11664                           ; BSR set to: 0
 11665  001B1C  0EFF               	movlw	255
 11666  001B1E  1B77               	xorwf	___ftadd@f2& (0+255),f,b
 11667  001B20  0EFF               	movlw	255
 11668  001B22  1B78               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 11669  001B24  0EFF               	movlw	255
 11670  001B26  1B79               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 11671  001B28  0E01               	movlw	1
 11672  001B2A  2777               	addwf	___ftadd@f2& (0+255),f,b
 11673  001B2C  0E00               	movlw	0
 11674  001B2E  2378               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 11675  001B30  0E00               	movlw	0
 11676  001B32  2379               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 11677                           
 11678                           ; BSR set to: 0
 11679  001B34  0E01               	movlw	1
 11680  001B36  6F7D               	movwf	___ftadd@sign& (0+255),b
 11681  001B38                     l2207:
 11682                           
 11683                           ; BSR set to: 0
 11684                           
 11685                           ; BSR set to: 0
 11686  001B38  C077  F060         	movff	___ftadd@f2,___ftpack@arg
 11687  001B3C  C078  F061         	movff	___ftadd@f2+1,___ftpack@arg+1
 11688  001B40  C079  F062         	movff	___ftadd@f2+2,___ftpack@arg+2
 11689  001B44  C07F  F063         	movff	___ftadd@exp1,___ftpack@exp
 11690  001B48  C07D  F064         	movff	___ftadd@sign,___ftpack@sign
 11691  001B4C  EC73  F019         	call	___ftpack	;wreg free
 11692  001B50  C060  F074         	movff	?___ftpack,?___ftadd
 11693  001B54  C061  F075         	movff	?___ftpack+1,?___ftadd+1
 11694  001B58  C062  F076         	movff	?___ftpack+2,?___ftadd+2
 11695  001B5C  0012               	return	
 11696  001B5E                     __end_of___ftadd:
 11697                           	opt stack 0
 11698                           tblptru	equ	0xFF8
 11699                           tblptrh	equ	0xFF7
 11700                           tblptrl	equ	0xFF6
 11701                           tablat	equ	0xFF5
 11702                           prodh	equ	0xFF4
 11703                           prodl	equ	0xFF3
 11704                           intcon	equ	0xFF2
 11705                           postinc0	equ	0xFEE
 11706                           wreg	equ	0xFE8
 11707                           indf1	equ	0xFE7
 11708                           postdec1	equ	0xFE5
 11709                           fsr1h	equ	0xFE2
 11710                           fsr1l	equ	0xFE1
 11711                           indf2	equ	0xFDF
 11712                           postinc2	equ	0xFDE
 11713                           postdec2	equ	0xFDD
 11714                           plusw2	equ	0xFDB
 11715                           fsr2h	equ	0xFDA
 11716                           fsr2l	equ	0xFD9
 11717                           status	equ	0xFD8
 11718                           
 11719 ;; *************** function ___ftpack *****************
 11720 ;; Defined at:
 11721 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\float.c"
 11722 ;; Parameters:    Size  Location     Type
 11723 ;;  arg             3    0[BANK0 ] unsigned um
 11724 ;;  exp             1    3[BANK0 ] unsigned char 
 11725 ;;  sign            1    4[BANK0 ] unsigned char 
 11726 ;; Auto vars:     Size  Location     Type
 11727 ;;		None
 11728 ;; Return value:  Size  Location     Type
 11729 ;;                  3    0[BANK0 ] float 
 11730 ;; Registers used:
 11731 ;;		wreg, status,2, status,0
 11732 ;; Tracked objects:
 11733 ;;		On entry : 0/0
 11734 ;;		On exit  : 0/0
 11735 ;;		Unchanged: 0/0
 11736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11737 ;;      Params:         0       5       0       0       0       0       0       0       0
 11738 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11739 ;;      Temps:          0       3       0       0       0       0       0       0       0
 11740 ;;      Totals:         0       8       0       0       0       0       0       0       0
 11741 ;;Total ram usage:        8 bytes
 11742 ;; Hardware stack levels used:    1
 11743 ;; Hardware stack levels required when called:   10
 11744 ;; This function calls:
 11745 ;;		Nothing
 11746 ;; This function is called by:
 11747 ;;		___awtoft
 11748 ;;		___ftadd
 11749 ;;		___ftdiv
 11750 ;;		___ftmul
 11751 ;;		___lltoft
 11752 ;; This function uses a non-reentrant model
 11753 ;;
 11754                           
 11755                           	psect	text39
 11756  0032E6                     __ptext39:
 11757                           	opt stack 0
 11758  0032E6                     ___ftpack:
 11759                           	opt stack 18
 11760                           
 11761                           ;incstack = 0
 11762  0032E6  0100               	movlb	0	; () banked
 11763  0032E8  5163               	movf	___ftpack@exp& (0+255),w,b
 11764  0032EA  B4D8               	btfsc	status,2,c
 11765  0032EC  D005               	goto	u5100
 11766                           
 11767                           ; BSR set to: 0
 11768  0032EE  5160               	movf	___ftpack@arg& (0+255),w,b
 11769  0032F0  1161               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 11770  0032F2  1162               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 11771  0032F4  A4D8               	btfss	status,2,c
 11772  0032F6  D00C               	goto	l2148
 11773  0032F8                     u5100:
 11774                           
 11775                           ; BSR set to: 0
 11776                           
 11777                           ; BSR set to: 0
 11778  0032F8  0E00               	movlw	0
 11779  0032FA  6F60               	movwf	?___ftpack& (0+255),b
 11780  0032FC  0E00               	movlw	0
 11781  0032FE  6F61               	movwf	(?___ftpack+1)& (0+255),b
 11782  003300  0E00               	movlw	0
 11783  003302  6F62               	movwf	(?___ftpack+2)& (0+255),b
 11784                           
 11785                           ; BSR set to: 0
 11786  003304  0012               	return	
 11787  003306                     
 11788                           ; BSR set to: 0
 11789                           
 11790                           ; BSR set to: 0
 11791  003306  2B63               	incf	___ftpack@exp& (0+255),f,b
 11792  003308  90D8               	bcf	status,0,c
 11793  00330A  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 11794  00330C  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 11795  00330E  3360               	rrcf	___ftpack@arg& (0+255),f,b
 11796  003310                     l2148:
 11797                           
 11798                           ; BSR set to: 0
 11799                           
 11800                           ; BSR set to: 0
 11801  003310  0E00               	movlw	0
 11802  003312  1560               	andwf	___ftpack@arg& (0+255),w,b
 11803  003314  6F65               	movwf	??___ftpack& (0+255),b
 11804  003316  0E00               	movlw	0
 11805  003318  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
 11806  00331A  6F66               	movwf	(??___ftpack+1)& (0+255),b
 11807  00331C  0EFE               	movlw	254
 11808  00331E  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
 11809  003320  6F67               	movwf	(??___ftpack+2)& (0+255),b
 11810  003322  5165               	movf	??___ftpack& (0+255),w,b
 11811  003324  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
 11812  003326  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
 11813  003328  B4D8               	btfsc	status,2,c
 11814  00332A  D00C               	goto	l2151
 11815  00332C  D7EC               	goto	l2149
 11816  00332E                     
 11817                           ; BSR set to: 0
 11818                           
 11819                           ; BSR set to: 0
 11820  00332E  2B63               	incf	___ftpack@exp& (0+255),f,b
 11821                           
 11822                           ; BSR set to: 0
 11823  003330  0E01               	movlw	1
 11824  003332  2760               	addwf	___ftpack@arg& (0+255),f,b
 11825  003334  0E00               	movlw	0
 11826  003336  2361               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 11827  003338  0E00               	movlw	0
 11828  00333A  2362               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 11829  00333C  90D8               	bcf	status,0,c
 11830  00333E  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 11831  003340  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 11832  003342  3360               	rrcf	___ftpack@arg& (0+255),f,b
 11833  003344                     l2151:
 11834                           
 11835                           ; BSR set to: 0
 11836                           
 11837                           ; BSR set to: 0
 11838  003344  0E00               	movlw	0
 11839  003346  1560               	andwf	___ftpack@arg& (0+255),w,b
 11840  003348  6F65               	movwf	??___ftpack& (0+255),b
 11841  00334A  0E00               	movlw	0
 11842  00334C  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
 11843  00334E  6F66               	movwf	(??___ftpack+1)& (0+255),b
 11844  003350  0EFF               	movlw	255
 11845  003352  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
 11846  003354  6F67               	movwf	(??___ftpack+2)& (0+255),b
 11847  003356  5165               	movf	??___ftpack& (0+255),w,b
 11848  003358  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
 11849  00335A  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
 11850  00335C  B4D8               	btfsc	status,2,c
 11851  00335E  D006               	goto	l2154
 11852  003360  D7E6               	goto	l2152
 11853  003362                     
 11854                           ; BSR set to: 0
 11855                           
 11856                           ; BSR set to: 0
 11857  003362  0763               	decf	___ftpack@exp& (0+255),f,b
 11858  003364  90D8               	bcf	status,0,c
 11859  003366  3760               	rlcf	___ftpack@arg& (0+255),f,b
 11860  003368  3761               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 11861  00336A  3762               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 11862  00336C                     l2154:
 11863                           
 11864                           ; BSR set to: 0
 11865                           
 11866                           ; BSR set to: 0
 11867  00336C  BF61               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 11868  00336E  D003               	goto	u5140
 11869                           
 11870                           ; BSR set to: 0
 11871  003370  0E02               	movlw	2
 11872  003372  6163               	cpfslt	___ftpack@exp& (0+255),b
 11873  003374  D7F6               	goto	l2155
 11874  003376                     u5140:
 11875                           
 11876                           ; BSR set to: 0
 11877                           
 11878                           ; BSR set to: 0
 11879  003376  A163               	btfss	___ftpack@exp& (0+255),0,b
 11880                           
 11881                           ; BSR set to: 0
 11882  003378  9F61               	bcf	(___ftpack@arg+1)& (0+255),7,b
 11883                           
 11884                           ; BSR set to: 0
 11885                           
 11886                           ; BSR set to: 0
 11887  00337A  90D8               	bcf	status,0,c
 11888  00337C  3363               	rrcf	___ftpack@exp& (0+255),f,b
 11889  00337E  5163               	movf	___ftpack@exp& (0+255),w,b
 11890  003380  1362               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 11891                           
 11892                           ; BSR set to: 0
 11893  003382  5164               	movf	___ftpack@sign& (0+255),w,b
 11894  003384  A4D8               	btfss	status,2,c
 11895                           
 11896                           ; BSR set to: 0
 11897  003386  8F62               	bsf	(___ftpack@arg+2)& (0+255),7,b
 11898                           
 11899                           ; BSR set to: 0
 11900                           
 11901                           ; BSR set to: 0
 11902  003388  C060  F060         	movff	___ftpack@arg,?___ftpack
 11903  00338C  C061  F061         	movff	___ftpack@arg+1,?___ftpack+1
 11904  003390  C062  F062         	movff	___ftpack@arg+2,?___ftpack+2
 11905  003394  0012               	return	
 11906  003396                     __end_of___ftpack:
 11907                           	opt stack 0
 11908                           tblptru	equ	0xFF8
 11909                           tblptrh	equ	0xFF7
 11910                           tblptrl	equ	0xFF6
 11911                           tablat	equ	0xFF5
 11912                           prodh	equ	0xFF4
 11913                           prodl	equ	0xFF3
 11914                           intcon	equ	0xFF2
 11915                           postinc0	equ	0xFEE
 11916                           wreg	equ	0xFE8
 11917                           indf1	equ	0xFE7
 11918                           postdec1	equ	0xFE5
 11919                           fsr1h	equ	0xFE2
 11920                           fsr1l	equ	0xFE1
 11921                           indf2	equ	0xFDF
 11922                           postinc2	equ	0xFDE
 11923                           postdec2	equ	0xFDD
 11924                           plusw2	equ	0xFDB
 11925                           fsr2h	equ	0xFDA
 11926                           fsr2l	equ	0xFD9
 11927                           status	equ	0xFD8
 11928                           
 11929 ;; *************** function ___ftneg *****************
 11930 ;; Defined at:
 11931 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftneg.c"
 11932 ;; Parameters:    Size  Location     Type
 11933 ;;  f1              3    0[BANK0 ] float 
 11934 ;; Auto vars:     Size  Location     Type
 11935 ;;		None
 11936 ;; Return value:  Size  Location     Type
 11937 ;;                  3    0[BANK0 ] float 
 11938 ;; Registers used:
 11939 ;;		wreg, status,2, status,0
 11940 ;; Tracked objects:
 11941 ;;		On entry : 0/0
 11942 ;;		On exit  : 0/0
 11943 ;;		Unchanged: 0/0
 11944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11945 ;;      Params:         0       3       0       0       0       0       0       0       0
 11946 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11947 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11948 ;;      Totals:         0       3       0       0       0       0       0       0       0
 11949 ;;Total ram usage:        3 bytes
 11950 ;; Hardware stack levels used:    1
 11951 ;; Hardware stack levels required when called:   10
 11952 ;; This function calls:
 11953 ;;		Nothing
 11954 ;; This function is called by:
 11955 ;;		_sprintf
 11956 ;; This function uses a non-reentrant model
 11957 ;;
 11958                           
 11959                           	psect	text40
 11960  004434                     __ptext40:
 11961                           	opt stack 0
 11962  004434                     ___ftneg:
 11963                           	opt stack 18
 11964                           
 11965                           ; BSR set to: 0
 11966                           ;incstack = 0
 11967  004434  0100               	movlb	0	; () banked
 11968  004436  5160               	movf	___ftneg@f1& (0+255),w,b
 11969  004438  1161               	iorwf	(___ftneg@f1+1)& (0+255),w,b
 11970  00443A  1162               	iorwf	(___ftneg@f1+2)& (0+255),w,b
 11971  00443C  B4D8               	btfsc	status,2,c
 11972  00443E  D006               	goto	l2255
 11973                           
 11974                           ; BSR set to: 0
 11975  004440  0E00               	movlw	0
 11976  004442  1B60               	xorwf	___ftneg@f1& (0+255),f,b
 11977  004444  0E00               	movlw	0
 11978  004446  1B61               	xorwf	(___ftneg@f1+1)& (0+255),f,b
 11979  004448  0E80               	movlw	128
 11980  00444A  1B62               	xorwf	(___ftneg@f1+2)& (0+255),f,b
 11981  00444C                     l2255:
 11982                           
 11983                           ; BSR set to: 0
 11984  00444C  C060  F060         	movff	___ftneg@f1,?___ftneg
 11985  004450  C061  F061         	movff	___ftneg@f1+1,?___ftneg+1
 11986  004454  C062  F062         	movff	___ftneg@f1+2,?___ftneg+2
 11987                           
 11988                           ; BSR set to: 0
 11989  004458  0012               	return		;funcret
 11990  00445A                     __end_of___ftneg:
 11991                           	opt stack 0
 11992                           tblptru	equ	0xFF8
 11993                           tblptrh	equ	0xFF7
 11994                           tblptrl	equ	0xFF6
 11995                           tablat	equ	0xFF5
 11996                           prodh	equ	0xFF4
 11997                           prodl	equ	0xFF3
 11998                           intcon	equ	0xFF2
 11999                           postinc0	equ	0xFEE
 12000                           wreg	equ	0xFE8
 12001                           indf1	equ	0xFE7
 12002                           postdec1	equ	0xFE5
 12003                           fsr1h	equ	0xFE2
 12004                           fsr1l	equ	0xFE1
 12005                           indf2	equ	0xFDF
 12006                           postinc2	equ	0xFDE
 12007                           postdec2	equ	0xFDD
 12008                           plusw2	equ	0xFDB
 12009                           fsr2h	equ	0xFDA
 12010                           fsr2l	equ	0xFD9
 12011                           status	equ	0xFD8
 12012                           
 12013 ;; *************** function ___ftge *****************
 12014 ;; Defined at:
 12015 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftge.c"
 12016 ;; Parameters:    Size  Location     Type
 12017 ;;  ff1             3    0[BANK0 ] float 
 12018 ;;  ff2             3    3[BANK0 ] float 
 12019 ;; Auto vars:     Size  Location     Type
 12020 ;;		None
 12021 ;; Return value:  Size  Location     Type
 12022 ;;		None               void
 12023 ;; Registers used:
 12024 ;;		wreg, status,2, status,0
 12025 ;; Tracked objects:
 12026 ;;		On entry : 0/0
 12027 ;;		On exit  : 0/0
 12028 ;;		Unchanged: 0/0
 12029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12030 ;;      Params:         0       6       0       0       0       0       0       0       0
 12031 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12032 ;;      Temps:          0       3       0       0       0       0       0       0       0
 12033 ;;      Totals:         0       9       0       0       0       0       0       0       0
 12034 ;;Total ram usage:        9 bytes
 12035 ;; Hardware stack levels used:    1
 12036 ;; Hardware stack levels required when called:   10
 12037 ;; This function calls:
 12038 ;;		Nothing
 12039 ;; This function is called by:
 12040 ;;		_sprintf
 12041 ;; This function uses a non-reentrant model
 12042 ;;
 12043                           
 12044                           	psect	text41
 12045  0038A0                     __ptext41:
 12046                           	opt stack 0
 12047  0038A0                     ___ftge:
 12048                           	opt stack 18
 12049                           
 12050                           ; BSR set to: 0
 12051                           ;incstack = 0
 12052  0038A0  0100               	movlb	0	; () banked
 12053  0038A2  AF62               	btfss	(___ftge@ff1+2)& (0+255),7,b
 12054  0038A4  D016               	goto	l2237
 12055                           
 12056                           ; BSR set to: 0
 12057  0038A6  C060  F066         	movff	___ftge@ff1,??___ftge
 12058  0038AA  C061  F067         	movff	___ftge@ff1+1,??___ftge+1
 12059  0038AE  C062  F068         	movff	___ftge@ff1+2,??___ftge+2
 12060  0038B2  1F66               	comf	??___ftge& (0+255),f,b
 12061  0038B4  1F67               	comf	(??___ftge+1)& (0+255),f,b
 12062  0038B6  1F68               	comf	(??___ftge+2)& (0+255),f,b
 12063  0038B8  2B66               	incf	??___ftge& (0+255),f,b
 12064  0038BA  0E00               	movlw	0
 12065  0038BC  2367               	addwfc	(??___ftge+1)& (0+255),f,b
 12066  0038BE  2368               	addwfc	(??___ftge+2)& (0+255),f,b
 12067  0038C0  0E00               	movlw	0
 12068  0038C2  2566               	addwf	??___ftge& (0+255),w,b
 12069  0038C4  6F60               	movwf	___ftge@ff1& (0+255),b
 12070  0038C6  0E00               	movlw	0
 12071  0038C8  2167               	addwfc	(??___ftge+1)& (0+255),w,b
 12072  0038CA  6F61               	movwf	(___ftge@ff1+1)& (0+255),b
 12073  0038CC  0E80               	movlw	128
 12074  0038CE  2168               	addwfc	(??___ftge+2)& (0+255),w,b
 12075  0038D0  6F62               	movwf	(___ftge@ff1+2)& (0+255),b
 12076  0038D2                     l2237:
 12077                           
 12078                           ; BSR set to: 0
 12079                           
 12080                           ; BSR set to: 0
 12081  0038D2  AF65               	btfss	(___ftge@ff2+2)& (0+255),7,b
 12082  0038D4  D016               	goto	l2238
 12083                           
 12084                           ; BSR set to: 0
 12085  0038D6  C063  F066         	movff	___ftge@ff2,??___ftge
 12086  0038DA  C064  F067         	movff	___ftge@ff2+1,??___ftge+1
 12087  0038DE  C065  F068         	movff	___ftge@ff2+2,??___ftge+2
 12088  0038E2  1F66               	comf	??___ftge& (0+255),f,b
 12089  0038E4  1F67               	comf	(??___ftge+1)& (0+255),f,b
 12090  0038E6  1F68               	comf	(??___ftge+2)& (0+255),f,b
 12091  0038E8  2B66               	incf	??___ftge& (0+255),f,b
 12092  0038EA  0E00               	movlw	0
 12093  0038EC  2367               	addwfc	(??___ftge+1)& (0+255),f,b
 12094  0038EE  2368               	addwfc	(??___ftge+2)& (0+255),f,b
 12095  0038F0  0E00               	movlw	0
 12096  0038F2  2566               	addwf	??___ftge& (0+255),w,b
 12097  0038F4  6F63               	movwf	___ftge@ff2& (0+255),b
 12098  0038F6  0E00               	movlw	0
 12099  0038F8  2167               	addwfc	(??___ftge+1)& (0+255),w,b
 12100  0038FA  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
 12101  0038FC  0E80               	movlw	128
 12102  0038FE  2168               	addwfc	(??___ftge+2)& (0+255),w,b
 12103  003900  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
 12104  003902                     l2238:
 12105                           
 12106                           ; BSR set to: 0
 12107                           
 12108                           ; BSR set to: 0
 12109  003902  0E00               	movlw	0
 12110  003904  1B60               	xorwf	___ftge@ff1& (0+255),f,b
 12111  003906  0E00               	movlw	0
 12112  003908  1B61               	xorwf	(___ftge@ff1+1)& (0+255),f,b
 12113  00390A  0E80               	movlw	128
 12114  00390C  1B62               	xorwf	(___ftge@ff1+2)& (0+255),f,b
 12115                           
 12116                           ; BSR set to: 0
 12117  00390E  0E00               	movlw	0
 12118  003910  1B63               	xorwf	___ftge@ff2& (0+255),f,b
 12119  003912  0E00               	movlw	0
 12120  003914  1B64               	xorwf	(___ftge@ff2+1)& (0+255),f,b
 12121  003916  0E80               	movlw	128
 12122  003918  1B65               	xorwf	(___ftge@ff2+2)& (0+255),f,b
 12123  00391A  5163               	movf	___ftge@ff2& (0+255),w,b
 12124  00391C  5D60               	subwf	___ftge@ff1& (0+255),w,b
 12125  00391E  5164               	movf	(___ftge@ff2+1)& (0+255),w,b
 12126  003920  5961               	subwfb	(___ftge@ff1+1)& (0+255),w,b
 12127  003922  5165               	movf	(___ftge@ff2+2)& (0+255),w,b
 12128  003924  5962               	subwfb	(___ftge@ff1+2)& (0+255),w,b
 12129  003926  B0D8               	btfsc	status,0,c
 12130  003928  D002               	goto	l6035
 12131                           
 12132                           ; BSR set to: 0
 12133  00392A  90D8               	bcf	status,0,c
 12134  00392C  0012               	return	
 12135  00392E                     l6035:
 12136                           
 12137                           ; BSR set to: 0
 12138                           
 12139                           ; BSR set to: 0
 12140  00392E  80D8               	bsf	status,0,c
 12141                           
 12142                           ; BSR set to: 0
 12143  003930  0012               	return	
 12144  003932                     __end_of___ftge:
 12145                           	opt stack 0
 12146                           tblptru	equ	0xFF8
 12147                           tblptrh	equ	0xFF7
 12148                           tblptrl	equ	0xFF6
 12149                           tablat	equ	0xFF5
 12150                           prodh	equ	0xFF4
 12151                           prodl	equ	0xFF3
 12152                           intcon	equ	0xFF2
 12153                           postinc0	equ	0xFEE
 12154                           wreg	equ	0xFE8
 12155                           indf1	equ	0xFE7
 12156                           postdec1	equ	0xFE5
 12157                           fsr1h	equ	0xFE2
 12158                           fsr1l	equ	0xFE1
 12159                           indf2	equ	0xFDF
 12160                           postinc2	equ	0xFDE
 12161                           postdec2	equ	0xFDD
 12162                           plusw2	equ	0xFDB
 12163                           fsr2h	equ	0xFDA
 12164                           fsr2l	equ	0xFD9
 12165                           status	equ	0xFD8
 12166                           
 12167 ;; *************** function _enviaComando *****************
 12168 ;; Defined at:
 12169 ;;		line 124 in file "LoRaWanCore.c"
 12170 ;; Parameters:    Size  Location     Type
 12171 ;;  cmd             2   28[BANK0 ] PTR const unsigned char 
 12172 ;;		 -> TxLoRaWan@comando(200), SetChannelLoRaWan@comando(200), MAC_JOIN_OTAA(10), SYS_RESET(6), 
 12173 ;;  tipoComando     1   30[BANK0 ] unsigned char 
 12174 ;; Auto vars:     Size  Location     Type
 12175 ;;  i               2   35[BANK0 ] unsigned int 
 12176 ;;  i               2   33[BANK0 ] unsigned int 
 12177 ;;  i               2   37[BANK0 ] unsigned int 
 12178 ;; Return value:  Size  Location     Type
 12179 ;;                  1    wreg      unsigned char 
 12180 ;; Registers used:
 12181 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12182 ;; Tracked objects:
 12183 ;;		On entry : 0/0
 12184 ;;		On exit  : 0/0
 12185 ;;		Unchanged: 0/0
 12186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12187 ;;      Params:         0       3       0       0       0       0       0       0       0
 12188 ;;      Locals:         0       6       0       0       0       0       0       0       0
 12189 ;;      Temps:          0       2       0       0       0       0       0       0       0
 12190 ;;      Totals:         0      11       0       0       0       0       0       0       0
 12191 ;;Total ram usage:       11 bytes
 12192 ;; Hardware stack levels used:    1
 12193 ;; Hardware stack levels required when called:   12
 12194 ;; This function calls:
 12195 ;;		_initRecebeDados
 12196 ;;		_parseLoRaWan
 12197 ;;		_putch
 12198 ;;		_strlen
 12199 ;; This function is called by:
 12200 ;;		_ResetModuloLoRaWan
 12201 ;;		_JoinLoRaWan
 12202 ;;		_SetChannelLoRaWan
 12203 ;;		_TxLoRaWan
 12204 ;; This function uses a non-reentrant model
 12205 ;;
 12206                           
 12207                           	psect	text42
 12208  002800                     __ptext42:
 12209                           	opt stack 0
 12210  002800                     _enviaComando:
 12211                           	opt stack 17
 12212                           
 12213                           ;LoRaWanCore.c: 126: initRecebeDados();
 12214                           
 12215                           ; BSR set to: 0
 12216                           ;incstack = 0
 12217  002800  EC91  F022         	call	_initRecebeDados	;wreg free
 12218                           
 12219                           ;LoRaWanCore.c: 128: switch (tipoComando)
 12220  002804  D041               	goto	l1702
 12221  002806                     
 12222                           ;LoRaWanCore.c: 131: {
 12223                           ;LoRaWanCore.c: 132: for (uint16_t i = 0; i < strlen(MAC); i++)
 12224  002806  0E00               	movlw	0
 12225  002808  0100               	movlb	0	; () banked
 12226  00280A  6F82               	movwf	(enviaComando@i+1)& (0+255),b
 12227  00280C  0E00               	movlw	0
 12228  00280E  6F81               	movwf	enviaComando@i& (0+255),b
 12229  002810  D00D               	goto	l1704
 12230  002812                     
 12231                           ; BSR set to: 0
 12232                           ;LoRaWanCore.c: 133: {
 12233                           ;LoRaWanCore.c: 134: putch((char)MAC[i]);
 12234                           
 12235                           ; BSR set to: 0
 12236  002812  0EDF               	movlw	low _MAC
 12237  002814  2581               	addwf	enviaComando@i& (0+255),w,b
 12238  002816  6EF6               	movwf	tblptrl,c
 12239  002818  0E7E               	movlw	high _MAC
 12240  00281A  2182               	addwfc	(enviaComando@i+1)& (0+255),w,b
 12241  00281C  6EF7               	movwf	tblptrh,c
 12242  00281E                     	if	0	;There are less than 3 active tblptr bytes
 12243  00281E                     	endif
 12244  00281E  0008               	tblrd		*
 12245  002820  50F5               	movf	tablat,w,c
 12246  002822  ECAD  F022         	call	_putch
 12247  002826  0100               	movlb	0	; () banked
 12248  002828  4B81               	infsnz	enviaComando@i& (0+255),f,b
 12249  00282A  2B82               	incf	(enviaComando@i+1)& (0+255),f,b
 12250  00282C                     l1704:
 12251                           
 12252                           ; BSR set to: 0
 12253                           
 12254                           ; BSR set to: 0
 12255  00282C  0EDF               	movlw	low _MAC
 12256  00282E  6F60               	movwf	strlen@s& (0+255),b
 12257  002830  0E7E               	movlw	high _MAC
 12258  002832  6F61               	movwf	(strlen@s+1)& (0+255),b
 12259  002834  EC85  F01F         	call	_strlen	;wreg free
 12260  002838  0100               	movlb	0	; () banked
 12261  00283A  5160               	movf	?_strlen& (0+255),w,b
 12262  00283C  5D81               	subwf	enviaComando@i& (0+255),w,b
 12263  00283E  5161               	movf	(?_strlen+1)& (0+255),w,b
 12264  002840  5982               	subwfb	(enviaComando@i+1)& (0+255),w,b
 12265  002842  B0D8               	btfsc	status,0,c
 12266  002844  D029               	goto	l1707
 12267  002846  D7E5               	goto	l1705
 12268  002848                     
 12269                           ; BSR set to: 0
 12270                           ;LoRaWanCore.c: 138: {
 12271                           ;LoRaWanCore.c: 139: for (uint16_t i = 0; i < strlen(SYS); i++)
 12272                           
 12273                           ; BSR set to: 0
 12274  002848  0E00               	movlw	0
 12275  00284A  6F84               	movwf	(enviaComando@i_4423+1)& (0+255),b
 12276  00284C  0E00               	movlw	0
 12277  00284E  6F83               	movwf	enviaComando@i_4423& (0+255),b
 12278  002850  D00D               	goto	l1709
 12279  002852                     
 12280                           ; BSR set to: 0
 12281                           ;LoRaWanCore.c: 140: {
 12282                           ;LoRaWanCore.c: 141: putch((char)SYS[i]);
 12283                           
 12284                           ; BSR set to: 0
 12285  002852  0EDA               	movlw	low _SYS
 12286  002854  2583               	addwf	enviaComando@i_4423& (0+255),w,b
 12287  002856  6EF6               	movwf	tblptrl,c
 12288  002858  0E7E               	movlw	high _SYS
 12289  00285A  2184               	addwfc	(enviaComando@i_4423+1)& (0+255),w,b
 12290  00285C  6EF7               	movwf	tblptrh,c
 12291  00285E                     	if	0	;There are less than 3 active tblptr bytes
 12292  00285E                     	endif
 12293  00285E  0008               	tblrd		*
 12294  002860  50F5               	movf	tablat,w,c
 12295  002862  ECAD  F022         	call	_putch
 12296  002866  0100               	movlb	0	; () banked
 12297  002868  4B83               	infsnz	enviaComando@i_4423& (0+255),f,b
 12298  00286A  2B84               	incf	(enviaComando@i_4423+1)& (0+255),f,b
 12299  00286C                     l1709:
 12300                           
 12301                           ; BSR set to: 0
 12302                           
 12303                           ; BSR set to: 0
 12304  00286C  0EDA               	movlw	low _SYS
 12305  00286E  6F60               	movwf	strlen@s& (0+255),b
 12306  002870  0E7E               	movlw	high _SYS
 12307  002872  6F61               	movwf	(strlen@s+1)& (0+255),b
 12308  002874  EC85  F01F         	call	_strlen	;wreg free
 12309  002878  0100               	movlb	0	; () banked
 12310  00287A  5160               	movf	?_strlen& (0+255),w,b
 12311  00287C  5D83               	subwf	enviaComando@i_4423& (0+255),w,b
 12312  00287E  5161               	movf	(?_strlen+1)& (0+255),w,b
 12313  002880  5984               	subwfb	(enviaComando@i_4423+1)& (0+255),w,b
 12314  002882  B0D8               	btfsc	status,0,c
 12315  002884  D009               	goto	l1707
 12316  002886  D7E5               	goto	l1710
 12317  002888                     l1702:
 12318                           
 12319                           ; BSR set to: 0
 12320  002888  0100               	movlb	0	; () banked
 12321  00288A  517E               	movf	enviaComando@tipoComando& (0+255),w,b
 12322                           
 12323                           ; Switch size 1, requested type "space"
 12324                           ; Number of cases is 2, Range of values is 0 to 1
 12325                           ; switch strategies available:
 12326                           ; Name         Instructions Cycles
 12327                           ; simple_byte            7     4 (average)
 12328                           ;	Chosen strategy is simple_byte
 12329  00288C  0A00               	xorlw	0	; case 0
 12330  00288E  B4D8               	btfsc	status,2,c
 12331  002890  D7BA               	goto	l1703
 12332  002892  0A01               	xorlw	1	; case 1
 12333  002894  B4D8               	btfsc	status,2,c
 12334  002896  D7D8               	goto	l1708
 12335  002898                     l1707:
 12336                           
 12337                           ; BSR set to: 0
 12338                           ;LoRaWanCore.c: 147: for (uint16_t i = 0; i < strlen(cmd); i++)
 12339                           
 12340                           ; BSR set to: 0
 12341  002898  0E00               	movlw	0
 12342  00289A  6F86               	movwf	(enviaComando@i_4424+1)& (0+255),b
 12343  00289C  0E00               	movlw	0
 12344  00289E  6F85               	movwf	enviaComando@i_4424& (0+255),b
 12345  0028A0  D01B               	goto	l1712
 12346  0028A2                     
 12347                           ; BSR set to: 0
 12348                           ;LoRaWanCore.c: 148: {
 12349                           ;LoRaWanCore.c: 149: putch((char)cmd[i]);
 12350                           
 12351                           ; BSR set to: 0
 12352  0028A2  5185               	movf	enviaComando@i_4424& (0+255),w,b
 12353  0028A4  257C               	addwf	enviaComando@cmd& (0+255),w,b
 12354  0028A6  6F7F               	movwf	??_enviaComando& (0+255),b
 12355  0028A8  5186               	movf	(enviaComando@i_4424+1)& (0+255),w,b
 12356  0028AA  217D               	addwfc	(enviaComando@cmd+1)& (0+255),w,b
 12357  0028AC  6F80               	movwf	(??_enviaComando+1)& (0+255),b
 12358  0028AE  C07F  FFF6         	movff	??_enviaComando,tblptrl
 12359  0028B2  C080  FFF7         	movff	??_enviaComando+1,tblptrh
 12360  0028B6  6AF8               	clrf	tblptru,c
 12361  0028B8  0E07               	movlw	(high __ramtop+-1)
 12362  0028BA  64F7               	cpfsgt	tblptrh,c
 12363  0028BC  D003               	bra	u6077
 12364  0028BE  0008               	tblrd		*
 12365  0028C0  50F5               	movf	tablat,w,c
 12366  0028C2  D005               	bra	u6070
 12367  0028C4                     u6077:
 12368  0028C4  CFF6 FFE9          	movff	tblptrl,fsr0l
 12369  0028C8  CFF7 FFEA          	movff	tblptrh,fsr0h
 12370  0028CC  50EF               	movf	indf0,w,c
 12371  0028CE                     u6070:
 12372  0028CE  ECAD  F022         	call	_putch
 12373  0028D2  0100               	movlb	0	; () banked
 12374  0028D4  4B85               	infsnz	enviaComando@i_4424& (0+255),f,b
 12375  0028D6  2B86               	incf	(enviaComando@i_4424+1)& (0+255),f,b
 12376  0028D8                     l1712:
 12377                           
 12378                           ; BSR set to: 0
 12379                           
 12380                           ; BSR set to: 0
 12381  0028D8  C07C  F060         	movff	enviaComando@cmd,strlen@s
 12382  0028DC  C07D  F061         	movff	enviaComando@cmd+1,strlen@s+1
 12383  0028E0  EC85  F01F         	call	_strlen	;wreg free
 12384  0028E4  0100               	movlb	0	; () banked
 12385  0028E6  5160               	movf	?_strlen& (0+255),w,b
 12386  0028E8  5D85               	subwf	enviaComando@i_4424& (0+255),w,b
 12387  0028EA  5161               	movf	(?_strlen+1)& (0+255),w,b
 12388  0028EC  5986               	subwfb	(enviaComando@i_4424+1)& (0+255),w,b
 12389  0028EE  A0D8               	btfss	status,0,c
 12390  0028F0  D7D8               	goto	l1713
 12391                           
 12392                           ; BSR set to: 0
 12393                           ;LoRaWanCore.c: 150: }
 12394                           ;LoRaWanCore.c: 151: putch(0x0D);
 12395                           
 12396                           ; BSR set to: 0
 12397  0028F2  0E0D               	movlw	13
 12398  0028F4  ECAD  F022         	call	_putch
 12399                           
 12400                           ;LoRaWanCore.c: 152: putch(0x0A);
 12401  0028F8  0E0A               	movlw	10
 12402  0028FA  ECAD  F022         	call	_putch
 12403                           
 12404                           ;LoRaWanCore.c: 154: return parseLoRaWan();
 12405  0028FE  EC22  F01A         	call	_parseLoRaWan	;wreg free
 12406  002902  0012               	return	
 12407  002904                     __end_of_enviaComando:
 12408                           	opt stack 0
 12409                           tblptru	equ	0xFF8
 12410                           tblptrh	equ	0xFF7
 12411                           tblptrl	equ	0xFF6
 12412                           tablat	equ	0xFF5
 12413                           prodh	equ	0xFF4
 12414                           prodl	equ	0xFF3
 12415                           intcon	equ	0xFF2
 12416                           indf0	equ	0xFEF
 12417                           postinc0	equ	0xFEE
 12418                           fsr0h	equ	0xFEA
 12419                           fsr0l	equ	0xFE9
 12420                           wreg	equ	0xFE8
 12421                           indf1	equ	0xFE7
 12422                           postdec1	equ	0xFE5
 12423                           fsr1h	equ	0xFE2
 12424                           fsr1l	equ	0xFE1
 12425                           indf2	equ	0xFDF
 12426                           postinc2	equ	0xFDE
 12427                           postdec2	equ	0xFDD
 12428                           plusw2	equ	0xFDB
 12429                           fsr2h	equ	0xFDA
 12430                           fsr2l	equ	0xFD9
 12431                           status	equ	0xFD8
 12432                           
 12433 ;; *************** function _strlen *****************
 12434 ;; Defined at:
 12435 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strlen.c"
 12436 ;; Parameters:    Size  Location     Type
 12437 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 12438 ;;		 -> recebeByteLoRaWan@frameData(100), SYS(5), MAC(5), TxLoRaWan@comando(200), 
 12439 ;;		 -> SetChannelLoRaWan@comando(200), MAC_JOIN_OTAA(10), SYS_RESET(6), STR_19(16), 
 12440 ;;		 -> STR_18(7), STR_17(14), STR_16(8), STR_15(8), 
 12441 ;;		 -> STR_14(10), STR_13(17), STR_12(11), STR_11(5), 
 12442 ;;		 -> STR_10(32), STR_9(7), STR_8(11), STR_7(11), 
 12443 ;;		 -> STR_6(14), STR_5(3), 
 12444 ;; Auto vars:     Size  Location     Type
 12445 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
 12446 ;;		 -> recebeByteLoRaWan@frameData(100), SYS(5), MAC(5), TxLoRaWan@comando(200), 
 12447 ;;		 -> SetChannelLoRaWan@comando(200), MAC_JOIN_OTAA(10), SYS_RESET(6), STR_19(16), 
 12448 ;;		 -> STR_18(7), STR_17(14), STR_16(8), STR_15(8), 
 12449 ;;		 -> STR_14(10), STR_13(17), STR_12(11), STR_11(5), 
 12450 ;;		 -> STR_10(32), STR_9(7), STR_8(11), STR_7(11), 
 12451 ;;		 -> STR_6(14), STR_5(3), 
 12452 ;; Return value:  Size  Location     Type
 12453 ;;                  2    0[BANK0 ] unsigned int 
 12454 ;; Registers used:
 12455 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 12456 ;; Tracked objects:
 12457 ;;		On entry : 0/0
 12458 ;;		On exit  : 0/0
 12459 ;;		Unchanged: 0/0
 12460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12461 ;;      Params:         0       2       0       0       0       0       0       0       0
 12462 ;;      Locals:         0       2       0       0       0       0       0       0       0
 12463 ;;      Temps:          0       2       0       0       0       0       0       0       0
 12464 ;;      Totals:         0       6       0       0       0       0       0       0       0
 12465 ;;Total ram usage:        6 bytes
 12466 ;; Hardware stack levels used:    1
 12467 ;; Hardware stack levels required when called:   10
 12468 ;; This function calls:
 12469 ;;		Nothing
 12470 ;; This function is called by:
 12471 ;;		_enviaComando
 12472 ;; This function uses a non-reentrant model
 12473 ;;
 12474                           
 12475                           	psect	text43
 12476  003F0A                     __ptext43:
 12477                           	opt stack 0
 12478  003F0A                     _strlen:
 12479                           	opt stack 18
 12480                           
 12481                           ;incstack = 0
 12482  003F0A  C060  F064         	movff	strlen@s,strlen@cp
 12483  003F0E  C061  F065         	movff	strlen@s+1,strlen@cp+1
 12484  003F12  D003               	goto	l2550
 12485  003F14  0100               	movlb	0	; () banked
 12486  003F16  4B64               	infsnz	strlen@cp& (0+255),f,b
 12487  003F18  2B65               	incf	(strlen@cp+1)& (0+255),f,b
 12488  003F1A                     l2550:
 12489                           
 12490                           ; BSR set to: 0
 12491  003F1A  C064  FFF6         	movff	strlen@cp,tblptrl
 12492  003F1E  C065  FFF7         	movff	strlen@cp+1,tblptrh
 12493  003F22  6AF8               	clrf	tblptru,c
 12494  003F24  0E07               	movlw	(high __ramtop+-1)
 12495  003F26  64F7               	cpfsgt	tblptrh,c
 12496  003F28  D003               	bra	u5387
 12497  003F2A  0008               	tblrd		*
 12498  003F2C  50F5               	movf	tablat,w,c
 12499  003F2E  D005               	bra	u5380
 12500  003F30                     u5387:
 12501  003F30  CFF6 FFE9          	movff	tblptrl,fsr0l
 12502  003F34  CFF7 FFEA          	movff	tblptrh,fsr0h
 12503  003F38  50EF               	movf	indf0,w,c
 12504  003F3A                     u5380:
 12505  003F3A  0900               	iorlw	0
 12506  003F3C  A4D8               	btfss	status,2,c
 12507  003F3E  D7EA               	goto	l2551
 12508  003F40  C060  F062         	movff	strlen@s,??_strlen
 12509  003F44  C061  F063         	movff	strlen@s+1,??_strlen+1
 12510  003F48  0100               	movlb	0	; () banked
 12511  003F4A  1F62               	comf	??_strlen& (0+255),f,b
 12512  003F4C  1F63               	comf	(??_strlen+1)& (0+255),f,b
 12513  003F4E  4B62               	infsnz	??_strlen& (0+255),f,b
 12514  003F50  2B63               	incf	(??_strlen+1)& (0+255),f,b
 12515  003F52  5164               	movf	strlen@cp& (0+255),w,b
 12516  003F54  2562               	addwf	??_strlen& (0+255),w,b
 12517  003F56  6F60               	movwf	?_strlen& (0+255),b
 12518  003F58  5165               	movf	(strlen@cp+1)& (0+255),w,b
 12519  003F5A  2163               	addwfc	(??_strlen+1)& (0+255),w,b
 12520  003F5C  6F61               	movwf	(?_strlen+1)& (0+255),b
 12521  003F5E  0012               	return	
 12522  003F60                     __end_of_strlen:
 12523                           	opt stack 0
 12524                           tblptru	equ	0xFF8
 12525                           tblptrh	equ	0xFF7
 12526                           tblptrl	equ	0xFF6
 12527                           tablat	equ	0xFF5
 12528                           prodh	equ	0xFF4
 12529                           prodl	equ	0xFF3
 12530                           intcon	equ	0xFF2
 12531                           indf0	equ	0xFEF
 12532                           postinc0	equ	0xFEE
 12533                           fsr0h	equ	0xFEA
 12534                           fsr0l	equ	0xFE9
 12535                           wreg	equ	0xFE8
 12536                           indf1	equ	0xFE7
 12537                           postdec1	equ	0xFE5
 12538                           fsr1h	equ	0xFE2
 12539                           fsr1l	equ	0xFE1
 12540                           indf2	equ	0xFDF
 12541                           postinc2	equ	0xFDE
 12542                           postdec2	equ	0xFDD
 12543                           plusw2	equ	0xFDB
 12544                           fsr2h	equ	0xFDA
 12545                           fsr2l	equ	0xFD9
 12546                           status	equ	0xFD8
 12547                           
 12548 ;; *************** function _putch *****************
 12549 ;; Defined at:
 12550 ;;		line 46 in file "uart/uart.c"
 12551 ;; Parameters:    Size  Location     Type
 12552 ;;  data            1    wreg     unsigned char 
 12553 ;; Auto vars:     Size  Location     Type
 12554 ;;  data            1    0[BANK0 ] unsigned char 
 12555 ;; Return value:  Size  Location     Type
 12556 ;;                  1    wreg      void 
 12557 ;; Registers used:
 12558 ;;		wreg
 12559 ;; Tracked objects:
 12560 ;;		On entry : 0/0
 12561 ;;		On exit  : 0/0
 12562 ;;		Unchanged: 0/0
 12563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12564 ;;      Params:         0       0       0       0       0       0       0       0       0
 12565 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12566 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12567 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12568 ;;Total ram usage:        1 bytes
 12569 ;; Hardware stack levels used:    1
 12570 ;; Hardware stack levels required when called:   10
 12571 ;; This function calls:
 12572 ;;		Nothing
 12573 ;; This function is called by:
 12574 ;;		_main
 12575 ;;		_enviaComando
 12576 ;;		_gen_send
 12577 ;;		_sendXBeePriv
 12578 ;; This function uses a non-reentrant model
 12579 ;;
 12580                           
 12581                           	psect	text44
 12582  00455A                     __ptext44:
 12583                           	opt stack 0
 12584  00455A                     _putch:
 12585                           	opt stack 20
 12586                           
 12587                           ; BSR set to: 0
 12588                           ;incstack = 0
 12589                           ;putch@data stored from wreg
 12590  00455A  0100               	movlb	0	; () banked
 12591  00455C  6F60               	movwf	putch@data& (0+255),b
 12592  00455E                     
 12593                           ;uart.c: 48: while (!TXIF);
 12594  00455E  A89E               	btfss	3998,4,c	;volatile
 12595  004560  D7FE               	goto	l6657
 12596                           
 12597                           ;uart.c: 49: TXREG=data;
 12598  004562  C060  FFAD         	movff	putch@data,4013	;volatile
 12599  004566  0012               	return		;funcret
 12600  004568                     __end_of_putch:
 12601                           	opt stack 0
 12602                           tblptru	equ	0xFF8
 12603                           tblptrh	equ	0xFF7
 12604                           tblptrl	equ	0xFF6
 12605                           tablat	equ	0xFF5
 12606                           prodh	equ	0xFF4
 12607                           prodl	equ	0xFF3
 12608                           intcon	equ	0xFF2
 12609                           indf0	equ	0xFEF
 12610                           postinc0	equ	0xFEE
 12611                           fsr0h	equ	0xFEA
 12612                           fsr0l	equ	0xFE9
 12613                           wreg	equ	0xFE8
 12614                           indf1	equ	0xFE7
 12615                           postdec1	equ	0xFE5
 12616                           fsr1h	equ	0xFE2
 12617                           fsr1l	equ	0xFE1
 12618                           indf2	equ	0xFDF
 12619                           postinc2	equ	0xFDE
 12620                           postdec2	equ	0xFDD
 12621                           plusw2	equ	0xFDB
 12622                           fsr2h	equ	0xFDA
 12623                           fsr2l	equ	0xFD9
 12624                           status	equ	0xFD8
 12625                           
 12626 ;; *************** function _parseLoRaWan *****************
 12627 ;; Defined at:
 12628 ;;		line 157 in file "LoRaWanCore.c"
 12629 ;; Parameters:    Size  Location     Type
 12630 ;;		None
 12631 ;; Auto vars:     Size  Location     Type
 12632 ;;  previous        4   20[BANK0 ] unsigned long 
 12633 ;;  intervalMAX     2   24[BANK0 ] unsigned int 
 12634 ;;  timeout         1   27[BANK0 ] unsigned char 
 12635 ;;  status          1   26[BANK0 ] unsigned char 
 12636 ;; Return value:  Size  Location     Type
 12637 ;;                  1    wreg      unsigned char 
 12638 ;; Registers used:
 12639 ;;		wreg, status,2, status,0, cstack
 12640 ;; Tracked objects:
 12641 ;;		On entry : 0/0
 12642 ;;		On exit  : 0/0
 12643 ;;		Unchanged: 0/0
 12644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12645 ;;      Params:         0       0       0       0       0       0       0       0       0
 12646 ;;      Locals:         0       8       0       0       0       0       0       0       0
 12647 ;;      Temps:          0      12       0       0       0       0       0       0       0
 12648 ;;      Totals:         0      20       0       0       0       0       0       0       0
 12649 ;;Total ram usage:       20 bytes
 12650 ;; Hardware stack levels used:    1
 12651 ;; Hardware stack levels required when called:   11
 12652 ;; This function calls:
 12653 ;;		_millis
 12654 ;; This function is called by:
 12655 ;;		_JoinLoRaWan
 12656 ;;		_TxLoRaWan
 12657 ;;		_enviaComando
 12658 ;; This function uses a non-reentrant model
 12659 ;;
 12660                           
 12661                           	psect	text45
 12662  003444                     __ptext45:
 12663                           	opt stack 0
 12664  003444                     _parseLoRaWan:
 12665                           	opt stack 18
 12666                           
 12667                           ;LoRaWanCore.c: 159: uint8_t status=0xFF;
 12668                           
 12669                           ;incstack = 0
 12670  003444  0100               	movlb	0	; () banked
 12671  003446  697A               	setf	parseLoRaWan@status& (0+255),b
 12672                           
 12673                           ; BSR set to: 0
 12674                           ;LoRaWanCore.c: 160: uint16_t intervalMAX=60000;
 12675  003448  0EEA               	movlw	234
 12676  00344A  6F79               	movwf	(parseLoRaWan@intervalMAX+1)& (0+255),b
 12677  00344C  0E60               	movlw	96
 12678  00344E  6F78               	movwf	parseLoRaWan@intervalMAX& (0+255),b
 12679                           
 12680                           ;LoRaWanCore.c: 161: bool timeout=0;
 12681  003450  0E00               	movlw	0
 12682  003452  6F7B               	movwf	parseLoRaWan@timeout& (0+255),b
 12683                           
 12684                           ; BSR set to: 0
 12685                           ;LoRaWanCore.c: 162: uint32_t previous=millis();
 12686  003454  EC2D  F022         	call	_millis	;wreg free
 12687  003458  C060  F074         	movff	?_millis,parseLoRaWan@previous
 12688  00345C  C061  F075         	movff	?_millis+1,parseLoRaWan@previous+1
 12689  003460  C062  F076         	movff	?_millis+2,parseLoRaWan@previous+2
 12690  003464  C063  F077         	movff	?_millis+3,parseLoRaWan@previous+3
 12691                           
 12692                           ;LoRaWanCore.c: 164: while ((!timeout) && (!novaMsgLoRaWan))
 12693  003468  D033               	goto	l1720
 12694  00346A                     
 12695                           ;LoRaWanCore.c: 165: {
 12696                           ;LoRaWanCore.c: 166: if ((millis()-previous) > intervalMAX)
 12697  00346A  C074  F068         	movff	parseLoRaWan@previous,??_parseLoRaWan
 12698  00346E  C075  F069         	movff	parseLoRaWan@previous+1,??_parseLoRaWan+1
 12699  003472  C076  F06A         	movff	parseLoRaWan@previous+2,??_parseLoRaWan+2
 12700  003476  C077  F06B         	movff	parseLoRaWan@previous+3,??_parseLoRaWan+3
 12701  00347A  0100               	movlb	0	; () banked
 12702  00347C  1F68               	comf	??_parseLoRaWan& (0+255),f,b
 12703  00347E  1F69               	comf	(??_parseLoRaWan+1)& (0+255),f,b
 12704  003480  1F6A               	comf	(??_parseLoRaWan+2)& (0+255),f,b
 12705  003482  1F6B               	comf	(??_parseLoRaWan+3)& (0+255),f,b
 12706  003484  2B68               	incf	??_parseLoRaWan& (0+255),f,b
 12707  003486  0E00               	movlw	0
 12708  003488  2369               	addwfc	(??_parseLoRaWan+1)& (0+255),f,b
 12709  00348A  236A               	addwfc	(??_parseLoRaWan+2)& (0+255),f,b
 12710  00348C  236B               	addwfc	(??_parseLoRaWan+3)& (0+255),f,b
 12711  00348E  EC2D  F022         	call	_millis	;wreg free
 12712  003492  0100               	movlb	0	; () banked
 12713  003494  5168               	movf	??_parseLoRaWan& (0+255),w,b
 12714  003496  2560               	addwf	?_millis& (0+255),w,b
 12715  003498  6F6C               	movwf	(??_parseLoRaWan+4)& (0+255),b
 12716  00349A  5169               	movf	(??_parseLoRaWan+1)& (0+255),w,b
 12717  00349C  2161               	addwfc	(?_millis+1)& (0+255),w,b
 12718  00349E  6F6D               	movwf	(??_parseLoRaWan+5)& (0+255),b
 12719  0034A0  516A               	movf	(??_parseLoRaWan+2)& (0+255),w,b
 12720  0034A2  2162               	addwfc	(?_millis+2)& (0+255),w,b
 12721  0034A4  6F6E               	movwf	(??_parseLoRaWan+6)& (0+255),b
 12722  0034A6  516B               	movf	(??_parseLoRaWan+3)& (0+255),w,b
 12723  0034A8  2163               	addwfc	(?_millis+3)& (0+255),w,b
 12724  0034AA  6F6F               	movwf	(??_parseLoRaWan+7)& (0+255),b
 12725  0034AC  5178               	movf	parseLoRaWan@intervalMAX& (0+255),w,b
 12726  0034AE  6F70               	movwf	(??_parseLoRaWan+8)& (0+255),b
 12727  0034B0  5179               	movf	(parseLoRaWan@intervalMAX+1)& (0+255),w,b
 12728  0034B2  6F71               	movwf	(??_parseLoRaWan+9)& (0+255),b
 12729  0034B4  6B72               	clrf	(??_parseLoRaWan+10)& (0+255),b
 12730  0034B6  6B73               	clrf	(??_parseLoRaWan+11)& (0+255),b
 12731  0034B8  516C               	movf	(??_parseLoRaWan+4)& (0+255),w,b
 12732  0034BA  5D70               	subwf	(??_parseLoRaWan+8)& (0+255),w,b
 12733  0034BC  516D               	movf	(??_parseLoRaWan+5)& (0+255),w,b
 12734  0034BE  5971               	subwfb	(??_parseLoRaWan+9)& (0+255),w,b
 12735  0034C0  516E               	movf	(??_parseLoRaWan+6)& (0+255),w,b
 12736  0034C2  5972               	subwfb	(??_parseLoRaWan+10)& (0+255),w,b
 12737  0034C4  516F               	movf	(??_parseLoRaWan+7)& (0+255),w,b
 12738  0034C6  5973               	subwfb	(??_parseLoRaWan+11)& (0+255),w,b
 12739  0034C8  B0D8               	btfsc	status,0,c
 12740  0034CA  D002               	goto	l1720
 12741                           
 12742                           ; BSR set to: 0
 12743                           ;LoRaWanCore.c: 167: {
 12744                           ;LoRaWanCore.c: 168: timeout=1;
 12745  0034CC  0E01               	movlw	1
 12746  0034CE  6F7B               	movwf	parseLoRaWan@timeout& (0+255),b
 12747  0034D0                     l1720:
 12748                           
 12749                           ; BSR set to: 0
 12750  0034D0  0100               	movlb	0	; () banked
 12751  0034D2  517B               	movf	parseLoRaWan@timeout& (0+255),w,b
 12752  0034D4  A4D8               	btfss	status,2,c
 12753  0034D6  D003               	goto	u5360
 12754                           
 12755                           ; BSR set to: 0
 12756  0034D8  51FF               	movf	_novaMsgLoRaWan& (0+255),w,b	;volatile
 12757  0034DA  B4D8               	btfsc	status,2,c
 12758  0034DC  D7C6               	goto	l1719
 12759  0034DE                     u5360:
 12760                           
 12761                           ; BSR set to: 0
 12762                           ;LoRaWanCore.c: 169: }
 12763                           ;LoRaWanCore.c: 170: }
 12764                           ;LoRaWanCore.c: 172: if (novaMsgLoRaWan)
 12765                           
 12766                           ; BSR set to: 0
 12767                           
 12768                           ; BSR set to: 0
 12769  0034DE  51FF               	movf	_novaMsgLoRaWan& (0+255),w,b	;volatile
 12770  0034E0  B4D8               	btfsc	status,2,c
 12771  0034E2  D004               	goto	l1724
 12772                           
 12773                           ; BSR set to: 0
 12774                           ;LoRaWanCore.c: 173: {
 12775                           ;LoRaWanCore.c: 174: status=responseLoRaWan;
 12776  0034E4  C05B  F07A         	movff	_responseLoRaWan,parseLoRaWan@status	;volatile
 12777                           
 12778                           ; BSR set to: 0
 12779                           ;LoRaWanCore.c: 175: novaMsgLoRaWan=0;
 12780  0034E8  0E00               	movlw	0
 12781  0034EA  6FFF               	movwf	_novaMsgLoRaWan& (0+255),b	;volatile
 12782  0034EC                     l1724:
 12783                           
 12784                           ; BSR set to: 0
 12785                           ;LoRaWanCore.c: 176: }
 12786                           ;LoRaWanCore.c: 178: return status;
 12787  0034EC  517A               	movf	parseLoRaWan@status& (0+255),w,b
 12788  0034EE  0012               	return	
 12789  0034F0                     __end_of_parseLoRaWan:
 12790                           	opt stack 0
 12791                           tblptru	equ	0xFF8
 12792                           tblptrh	equ	0xFF7
 12793                           tblptrl	equ	0xFF6
 12794                           tablat	equ	0xFF5
 12795                           prodh	equ	0xFF4
 12796                           prodl	equ	0xFF3
 12797                           intcon	equ	0xFF2
 12798                           indf0	equ	0xFEF
 12799                           postinc0	equ	0xFEE
 12800                           fsr0h	equ	0xFEA
 12801                           fsr0l	equ	0xFE9
 12802                           wreg	equ	0xFE8
 12803                           indf1	equ	0xFE7
 12804                           postdec1	equ	0xFE5
 12805                           fsr1h	equ	0xFE2
 12806                           fsr1l	equ	0xFE1
 12807                           indf2	equ	0xFDF
 12808                           postinc2	equ	0xFDE
 12809                           postdec2	equ	0xFDD
 12810                           plusw2	equ	0xFDB
 12811                           fsr2h	equ	0xFDA
 12812                           fsr2l	equ	0xFD9
 12813                           status	equ	0xFD8
 12814                           
 12815 ;; *************** function _millis *****************
 12816 ;; Defined at:
 12817 ;;		line 47 in file "Timer.c"
 12818 ;; Parameters:    Size  Location     Type
 12819 ;;		None
 12820 ;; Auto vars:     Size  Location     Type
 12821 ;;  m               4    4[BANK0 ] unsigned long 
 12822 ;; Return value:  Size  Location     Type
 12823 ;;                  4    0[BANK0 ] unsigned long 
 12824 ;; Registers used:
 12825 ;;		None
 12826 ;; Tracked objects:
 12827 ;;		On entry : 0/0
 12828 ;;		On exit  : 0/0
 12829 ;;		Unchanged: 0/0
 12830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12831 ;;      Params:         0       4       0       0       0       0       0       0       0
 12832 ;;      Locals:         0       4       0       0       0       0       0       0       0
 12833 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12834 ;;      Totals:         0       8       0       0       0       0       0       0       0
 12835 ;;Total ram usage:        8 bytes
 12836 ;; Hardware stack levels used:    1
 12837 ;; Hardware stack levels required when called:   10
 12838 ;; This function calls:
 12839 ;;		Nothing
 12840 ;; This function is called by:
 12841 ;;		_delay
 12842 ;;		_main
 12843 ;;		_parseLoRaWan
 12844 ;;		_parse_message
 12845 ;;		_txZBStatusResponse
 12846 ;; This function uses a non-reentrant model
 12847 ;;
 12848                           
 12849                           	psect	text46
 12850  00445A                     __ptext46:
 12851                           	opt stack 0
 12852  00445A                     _millis:
 12853                           	opt stack 20
 12854                           
 12855                           ;Timer.c: 49: CCP1IE=0;
 12856                           
 12857                           ; BSR set to: 0
 12858                           ;incstack = 0
 12859  00445A  949D               	bcf	3997,2,c	;volatile
 12860                           
 12861                           ;Timer.c: 50: uint32_t m=ticks;
 12862  00445C  C22C  F064         	movff	_ticks,millis@m	;volatile
 12863  004460  C22D  F065         	movff	_ticks+1,millis@m+1	;volatile
 12864  004464  C22E  F066         	movff	_ticks+2,millis@m+2	;volatile
 12865  004468  C22F  F067         	movff	_ticks+3,millis@m+3	;volatile
 12866                           
 12867                           ;Timer.c: 51: CCP1IE=1;
 12868  00446C  849D               	bsf	3997,2,c	;volatile
 12869                           
 12870                           ;Timer.c: 53: return m;
 12871  00446E  C064  F060         	movff	millis@m,?_millis
 12872  004472  C065  F061         	movff	millis@m+1,?_millis+1
 12873  004476  C066  F062         	movff	millis@m+2,?_millis+2
 12874  00447A  C067  F063         	movff	millis@m+3,?_millis+3
 12875  00447E  0012               	return		;funcret
 12876  004480                     __end_of_millis:
 12877                           	opt stack 0
 12878                           tblptru	equ	0xFF8
 12879                           tblptrh	equ	0xFF7
 12880                           tblptrl	equ	0xFF6
 12881                           tablat	equ	0xFF5
 12882                           prodh	equ	0xFF4
 12883                           prodl	equ	0xFF3
 12884                           intcon	equ	0xFF2
 12885                           indf0	equ	0xFEF
 12886                           postinc0	equ	0xFEE
 12887                           fsr0h	equ	0xFEA
 12888                           fsr0l	equ	0xFE9
 12889                           wreg	equ	0xFE8
 12890                           indf1	equ	0xFE7
 12891                           postdec1	equ	0xFE5
 12892                           fsr1h	equ	0xFE2
 12893                           fsr1l	equ	0xFE1
 12894                           indf2	equ	0xFDF
 12895                           postinc2	equ	0xFDE
 12896                           postdec2	equ	0xFDD
 12897                           plusw2	equ	0xFDB
 12898                           fsr2h	equ	0xFDA
 12899                           fsr2l	equ	0xFD9
 12900                           status	equ	0xFD8
 12901                           
 12902 ;; *************** function _initRecebeDados *****************
 12903 ;; Defined at:
 12904 ;;		line 181 in file "LoRaWanCore.c"
 12905 ;; Parameters:    Size  Location     Type
 12906 ;;		None
 12907 ;; Auto vars:     Size  Location     Type
 12908 ;;		None
 12909 ;; Return value:  Size  Location     Type
 12910 ;;                  1    wreg      void 
 12911 ;; Registers used:
 12912 ;;		wreg, status,2
 12913 ;; Tracked objects:
 12914 ;;		On entry : 0/0
 12915 ;;		On exit  : 0/0
 12916 ;;		Unchanged: 0/0
 12917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12918 ;;      Params:         0       0       0       0       0       0       0       0       0
 12919 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12920 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12921 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12922 ;;Total ram usage:        0 bytes
 12923 ;; Hardware stack levels used:    1
 12924 ;; Hardware stack levels required when called:   10
 12925 ;; This function calls:
 12926 ;;		Nothing
 12927 ;; This function is called by:
 12928 ;;		_enviaComando
 12929 ;; This function uses a non-reentrant model
 12930 ;;
 12931                           
 12932                           	psect	text47
 12933  004522                     __ptext47:
 12934                           	opt stack 0
 12935  004522                     _initRecebeDados:
 12936                           	opt stack 18
 12937                           
 12938                           ;LoRaWanCore.c: 183: RCIE=0;
 12939                           
 12940                           ;incstack = 0
 12941  004522  9A9D               	bcf	3997,5,c	;volatile
 12942                           
 12943                           ;LoRaWanCore.c: 184: responseLoRaWan=0xFF;
 12944  004524  685B               	setf	_responseLoRaWan,c	;volatile
 12945                           
 12946                           ;LoRaWanCore.c: 185: tamFrame=0;
 12947  004526  0E00               	movlw	0
 12948  004528  6E59               	movwf	_tamFrame,c	;volatile
 12949                           
 12950                           ;LoRaWanCore.c: 186: tamDadosRecebidos=0;
 12951  00452A  0E00               	movlw	0
 12952  00452C  6E5A               	movwf	_tamDadosRecebidos,c	;volatile
 12953                           
 12954                           ;LoRaWanCore.c: 187: novaMsgLoRaWan=0;
 12955  00452E  0E00               	movlw	0
 12956  004530  0100               	movlb	0	; () banked
 12957  004532  6FFF               	movwf	_novaMsgLoRaWan& (0+255),b	;volatile
 12958                           
 12959                           ; BSR set to: 0
 12960                           ;LoRaWanCore.c: 188: RCIE=1;
 12961  004534  8A9D               	bsf	3997,5,c	;volatile
 12962                           
 12963                           ; BSR set to: 0
 12964  004536  0012               	return		;funcret
 12965  004538                     __end_of_initRecebeDados:
 12966                           	opt stack 0
 12967                           tblptru	equ	0xFF8
 12968                           tblptrh	equ	0xFF7
 12969                           tblptrl	equ	0xFF6
 12970                           tablat	equ	0xFF5
 12971                           prodh	equ	0xFF4
 12972                           prodl	equ	0xFF3
 12973                           intcon	equ	0xFF2
 12974                           indf0	equ	0xFEF
 12975                           postinc0	equ	0xFEE
 12976                           fsr0h	equ	0xFEA
 12977                           fsr0l	equ	0xFE9
 12978                           wreg	equ	0xFE8
 12979                           indf1	equ	0xFE7
 12980                           postdec1	equ	0xFE5
 12981                           fsr1h	equ	0xFE2
 12982                           fsr1l	equ	0xFE1
 12983                           indf2	equ	0xFDF
 12984                           postinc2	equ	0xFDE
 12985                           postdec2	equ	0xFDD
 12986                           plusw2	equ	0xFDB
 12987                           fsr2h	equ	0xFDA
 12988                           fsr2l	equ	0xFD9
 12989                           status	equ	0xFD8
 12990                           
 12991 ;; *************** function _SYS_InterruptHigh *****************
 12992 ;; Defined at:
 12993 ;;		line 59 in file "usb/system.c"
 12994 ;; Parameters:    Size  Location     Type
 12995 ;;		None
 12996 ;; Auto vars:     Size  Location     Type
 12997 ;;  dig             2   47[COMRAM] int 
 12998 ;; Return value:  Size  Location     Type
 12999 ;;                  1    wreg      void 
 13000 ;; Registers used:
 13001 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13002 ;; Tracked objects:
 13003 ;;		On entry : 0/0
 13004 ;;		On exit  : 0/0
 13005 ;;		Unchanged: 0/0
 13006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13007 ;;      Params:         0       0       0       0       0       0       0       0       0
 13008 ;;      Locals:         2       0       0       0       0       0       0       0       0
 13009 ;;      Temps:         19       0       0       0       0       0       0       0       0
 13010 ;;      Totals:        21       0       0       0       0       0       0       0       0
 13011 ;;Total ram usage:       21 bytes
 13012 ;; Hardware stack levels used:    1
 13013 ;; Hardware stack levels required when called:    9
 13014 ;; This function calls:
 13015 ;;		_USBDeviceTasks
 13016 ;;		_getch
 13017 ;;		_recebeByteLoRaWan
 13018 ;; This function is called by:
 13019 ;;		Interrupt level 2
 13020 ;; This function uses a non-reentrant model
 13021 ;;
 13022                           
 13023                           	psect	intcode
 13024  000008                     __pintcode:
 13025                           	opt stack 0
 13026  000008                     _SYS_InterruptHigh:
 13027                           	opt stack 16
 13028                           
 13029                           ; BSR set to: 0
 13030                           ;incstack = 0
 13031  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 13032  00000A  ED82  F014         	call	int_func,f	;refresh shadow registers
 13033                           tblptru	equ	0xFF8
 13034                           tblptrh	equ	0xFF7
 13035                           tblptrl	equ	0xFF6
 13036                           tablat	equ	0xFF5
 13037                           prodh	equ	0xFF4
 13038                           prodl	equ	0xFF3
 13039                           intcon	equ	0xFF2
 13040                           indf0	equ	0xFEF
 13041                           postinc0	equ	0xFEE
 13042                           fsr0h	equ	0xFEA
 13043                           fsr0l	equ	0xFE9
 13044                           wreg	equ	0xFE8
 13045                           indf1	equ	0xFE7
 13046                           postdec1	equ	0xFE5
 13047                           fsr1h	equ	0xFE2
 13048                           fsr1l	equ	0xFE1
 13049                           indf2	equ	0xFDF
 13050                           postinc2	equ	0xFDE
 13051                           postdec2	equ	0xFDD
 13052                           plusw2	equ	0xFDB
 13053                           fsr2h	equ	0xFDA
 13054                           fsr2l	equ	0xFD9
 13055                           status	equ	0xFD8
 13056                           
 13057                           	psect	intcode_body
 13058  002904                     __pintcode_body:
 13059                           	opt stack 16
 13060  002904                     int_func:
 13061                           	opt stack 16
 13062  002904  0006               	pop		; remove dummy address from shadow register refresh
 13063  002906  CFFA F01E          	movff	pclath,??_SYS_InterruptHigh+1
 13064  00290A  CFFB F01F          	movff	pclatu,??_SYS_InterruptHigh+2
 13065  00290E  CFE9 F020          	movff	fsr0l,??_SYS_InterruptHigh+3
 13066  002912  CFEA F021          	movff	fsr0h,??_SYS_InterruptHigh+4
 13067  002916  CFE1 F022          	movff	fsr1l,??_SYS_InterruptHigh+5
 13068  00291A  CFE2 F023          	movff	fsr1h,??_SYS_InterruptHigh+6
 13069  00291E  CFD9 F024          	movff	fsr2l,??_SYS_InterruptHigh+7
 13070  002922  CFDA F025          	movff	fsr2h,??_SYS_InterruptHigh+8
 13071  002926  CFF3 F026          	movff	prodl,??_SYS_InterruptHigh+9
 13072  00292A  CFF4 F027          	movff	prodh,??_SYS_InterruptHigh+10
 13073  00292E  CFF6 F028          	movff	tblptrl,??_SYS_InterruptHigh+11
 13074  002932  CFF7 F029          	movff	tblptrh,??_SYS_InterruptHigh+12
 13075  002936  CFF8 F02A          	movff	tblptru,??_SYS_InterruptHigh+13
 13076  00293A  CFF5 F02B          	movff	tablat,??_SYS_InterruptHigh+14
 13077  00293E  C05F  F02C         	movff	btemp,??_SYS_InterruptHigh+15
 13078  002942  C060  F02D         	movff	btemp+1,??_SYS_InterruptHigh+16
 13079  002946  C061  F02E         	movff	btemp+2,??_SYS_InterruptHigh+17
 13080  00294A  C062  F02F         	movff	btemp+3,??_SYS_InterruptHigh+18
 13081                           
 13082                           ;system.c: 62: if (CCP1IF && CCP1IE)
 13083  00294E  B49E               	btfsc	3998,2,c	;volatile
 13084  002950  A49D               	btfss	3997,2,c	;volatile
 13085  002952  D028               	goto	i2l75
 13086                           
 13087                           ;system.c: 63: {
 13088                           ;system.c: 64: CCP1IF=0;
 13089  002954  949E               	bcf	3998,2,c	;volatile
 13090                           
 13091                           ;system.c: 65: ticks++;
 13092  002956  0E01               	movlw	1
 13093  002958  0102               	movlb	2	; () banked
 13094  00295A  272C               	addwf	_ticks& (0+255),f,b	;volatile
 13095  00295C  0E00               	movlw	0
 13096  00295E  232D               	addwfc	(_ticks+1)& (0+255),f,b	;volatile
 13097  002960  232E               	addwfc	(_ticks+2)& (0+255),f,b	;volatile
 13098  002962  232F               	addwfc	(_ticks+3)& (0+255),f,b	;volatile
 13099                           
 13100                           ; BSR set to: 2
 13101                           ;system.c: 67: int dig=PORTDbits.RD0;
 13102  002964  A083               	btfss	3971,0,c	;volatile
 13103  002966  D003               	goto	i2u842_40
 13104  002968  6A1D               	clrf	??_SYS_InterruptHigh& (0+255),c
 13105  00296A  2A1D               	incf	??_SYS_InterruptHigh& (0+255),f,c
 13106  00296C  D001               	goto	i2u842_48
 13107  00296E                     i2u842_40:
 13108  00296E  6A1D               	clrf	??_SYS_InterruptHigh& (0+255),c
 13109  002970                     i2u842_48:
 13110  002970  501D               	movf	??_SYS_InterruptHigh,w,c
 13111  002972  6E30               	movwf	SYS_InterruptHigh@dig,c
 13112  002974  6A31               	clrf	SYS_InterruptHigh@dig+1,c
 13113                           
 13114                           ;system.c: 69: if ((dig_1!=dig) && (dig==1))
 13115  002976  5030               	movf	SYS_InterruptHigh@dig,w,c
 13116  002978  0102               	movlb	2	; () banked
 13117  00297A  1946               	xorwf	_dig_1& (0+255),w,b	;volatile
 13118  00297C  E104               	bnz	i2u843_40
 13119  00297E  5031               	movf	SYS_InterruptHigh@dig+1,w,c
 13120  002980  1947               	xorwf	(_dig_1+1)& (0+255),w,b	;volatile
 13121  002982  B4D8               	btfsc	status,2,c
 13122  002984  D00A               	goto	i2l76
 13123  002986                     i2u843_40:
 13124                           
 13125                           ; BSR set to: 2
 13126  002986  0430               	decf	SYS_InterruptHigh@dig,w,c
 13127  002988  1031               	iorwf	SYS_InterruptHigh@dig+1,w,c
 13128  00298A  A4D8               	btfss	status,2,c
 13129  00298C  D006               	goto	i2l76
 13130                           
 13131                           ; BSR set to: 2
 13132                           ;system.c: 70: freqPulses++;
 13133  00298E  0E01               	movlw	1
 13134  002990  2730               	addwf	_freqPulses& (0+255),f,b	;volatile
 13135  002992  0E00               	movlw	0
 13136  002994  2331               	addwfc	(_freqPulses+1)& (0+255),f,b	;volatile
 13137  002996  2332               	addwfc	(_freqPulses+2)& (0+255),f,b	;volatile
 13138  002998  2333               	addwfc	(_freqPulses+3)& (0+255),f,b	;volatile
 13139  00299A                     i2l76:
 13140                           
 13141                           ; BSR set to: 2
 13142                           ;system.c: 71: dig_1=dig;
 13143                           
 13144                           ; BSR set to: 2
 13145  00299A  C030  F246         	movff	SYS_InterruptHigh@dig,_dig_1	;volatile
 13146  00299E  C031  F247         	movff	SYS_InterruptHigh@dig+1,_dig_1+1	;volatile
 13147                           
 13148                           ;system.c: 72: }
 13149  0029A2  D00B               	goto	i2l80
 13150  0029A4                     i2l75:
 13151                           
 13152                           ;system.c: 73: else if (RCIE && RCIF)
 13153  0029A4  BA9D               	btfsc	3997,5,c	;volatile
 13154  0029A6  AA9E               	btfss	3998,5,c	;volatile
 13155  0029A8  D005               	goto	i2l78
 13156                           
 13157                           ;system.c: 74: {
 13158                           ;system.c: 76: recebeByteLoRaWan(getch());
 13159  0029AA  EC40  F022         	call	_getch	;wreg free
 13160  0029AE  ECAF  F00B         	call	_recebeByteLoRaWan
 13161                           
 13162                           ;system.c: 77: }
 13163  0029B2  D003               	goto	i2l80
 13164  0029B4                     i2l78:
 13165                           
 13166                           ;system.c: 78: else if (USBIE)
 13167  0029B4  BAA0               	btfsc	4000,5,c	;volatile
 13168                           
 13169                           ;system.c: 79: {
 13170                           ;system.c: 81: USBDeviceTasks();
 13171  0029B6  EC8B  F00F         	call	_USBDeviceTasks	;wreg free
 13172  0029BA                     i2l80:
 13173  0029BA  C02F  F062         	movff	??_SYS_InterruptHigh+18,btemp+3
 13174  0029BE  C02E  F061         	movff	??_SYS_InterruptHigh+17,btemp+2
 13175  0029C2  C02D  F060         	movff	??_SYS_InterruptHigh+16,btemp+1
 13176  0029C6  C02C  F05F         	movff	??_SYS_InterruptHigh+15,btemp
 13177  0029CA  C02B  FFF5         	movff	??_SYS_InterruptHigh+14,tablat
 13178  0029CE  C02A  FFF8         	movff	??_SYS_InterruptHigh+13,tblptru
 13179  0029D2  C029  FFF7         	movff	??_SYS_InterruptHigh+12,tblptrh
 13180  0029D6  C028  FFF6         	movff	??_SYS_InterruptHigh+11,tblptrl
 13181  0029DA  C027  FFF4         	movff	??_SYS_InterruptHigh+10,prodh
 13182  0029DE  C026  FFF3         	movff	??_SYS_InterruptHigh+9,prodl
 13183  0029E2  C025  FFDA         	movff	??_SYS_InterruptHigh+8,fsr2h
 13184  0029E6  C024  FFD9         	movff	??_SYS_InterruptHigh+7,fsr2l
 13185  0029EA  C023  FFE2         	movff	??_SYS_InterruptHigh+6,fsr1h
 13186  0029EE  C022  FFE1         	movff	??_SYS_InterruptHigh+5,fsr1l
 13187  0029F2  C021  FFEA         	movff	??_SYS_InterruptHigh+4,fsr0h
 13188  0029F6  C020  FFE9         	movff	??_SYS_InterruptHigh+3,fsr0l
 13189  0029FA  C01F  FFFB         	movff	??_SYS_InterruptHigh+2,pclatu
 13190  0029FE  C01E  FFFA         	movff	??_SYS_InterruptHigh+1,pclath
 13191  002A02  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 13192  002A04  0011               	retfie		f
 13193  002A06                     __end_of_SYS_InterruptHigh:
 13194                           	opt stack 0
 13195                           pclatu	equ	0xFFB
 13196                           pclath	equ	0xFFA
 13197                           tblptru	equ	0xFF8
 13198                           tblptrh	equ	0xFF7
 13199                           tblptrl	equ	0xFF6
 13200                           tablat	equ	0xFF5
 13201                           prodh	equ	0xFF4
 13202                           prodl	equ	0xFF3
 13203                           intcon	equ	0xFF2
 13204                           indf0	equ	0xFEF
 13205                           postinc0	equ	0xFEE
 13206                           fsr0h	equ	0xFEA
 13207                           fsr0l	equ	0xFE9
 13208                           wreg	equ	0xFE8
 13209                           indf1	equ	0xFE7
 13210                           postdec1	equ	0xFE5
 13211                           fsr1h	equ	0xFE2
 13212                           fsr1l	equ	0xFE1
 13213                           indf2	equ	0xFDF
 13214                           postinc2	equ	0xFDE
 13215                           postdec2	equ	0xFDD
 13216                           plusw2	equ	0xFDB
 13217                           fsr2h	equ	0xFDA
 13218                           fsr2l	equ	0xFD9
 13219                           status	equ	0xFD8
 13220                           
 13221 ;; *************** function _recebeByteLoRaWan *****************
 13222 ;; Defined at:
 13223 ;;		line 193 in file "LoRaWanCore.c"
 13224 ;; Parameters:    Size  Location     Type
 13225 ;;  b               1    wreg     char 
 13226 ;; Auto vars:     Size  Location     Type
 13227 ;;  b               1   15[COMRAM] char 
 13228 ;;  i               1   18[COMRAM] unsigned char 
 13229 ;;  port            1   14[COMRAM] unsigned char 
 13230 ;;  i               1   16[COMRAM] unsigned char 
 13231 ;;  tamMsgRx        1   17[COMRAM] unsigned char 
 13232 ;;  len             1   13[COMRAM] unsigned char 
 13233 ;; Return value:  Size  Location     Type
 13234 ;;                  1    wreg      void 
 13235 ;; Registers used:
 13236 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13237 ;; Tracked objects:
 13238 ;;		On entry : 0/0
 13239 ;;		On exit  : 0/0
 13240 ;;		Unchanged: 0/0
 13241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13242 ;;      Params:         0       0       0       0       0       0       0       0       0
 13243 ;;      Locals:         6       0       0       0       0       0       0       0       0
 13244 ;;      Temps:          4       0       0       0       0       0       0       0       0
 13245 ;;      Totals:        10       0       0       0       0       0       0       0       0
 13246 ;;Total ram usage:       10 bytes
 13247 ;; Hardware stack levels used:    1
 13248 ;; Hardware stack levels required when called:    2
 13249 ;; This function calls:
 13250 ;;		_converter
 13251 ;;		_strcmp
 13252 ;;		_strcpy
 13253 ;;		_strncmp
 13254 ;;		i2_strlen
 13255 ;; This function is called by:
 13256 ;;		_SYS_InterruptHigh
 13257 ;; This function uses a non-reentrant model
 13258 ;;
 13259                           
 13260                           	psect	text49
 13261  00175E                     __ptext49:
 13262                           	opt stack 0
 13263  00175E                     _recebeByteLoRaWan:
 13264                           	opt stack 22
 13265                           
 13266                           ;incstack = 0
 13267                           ;recebeByteLoRaWan@b stored from wreg
 13268  00175E  6E10               	movwf	recebeByteLoRaWan@b,c
 13269                           
 13270                           ;LoRaWanCore.c: 195: static uint8_t frameData[100];
 13271                           ;LoRaWanCore.c: 197: frameData[tamFrame++]=b;
 13272  001760  5059               	movf	_tamFrame,w,c	;volatile
 13273  001762  0D01               	mullw	1
 13274  001764  0E00               	movlw	low recebeByteLoRaWan@frameData
 13275  001766  24F3               	addwf	prodl,w,c
 13276  001768  6ED9               	movwf	fsr2l,c
 13277  00176A  0E03               	movlw	high recebeByteLoRaWan@frameData
 13278  00176C  20F4               	addwfc	prodh,w,c
 13279  00176E  6EDA               	movwf	fsr2h,c
 13280  001770  C010  FFDF         	movff	recebeByteLoRaWan@b,indf2
 13281  001774  2A59               	incf	_tamFrame,f,c	;volatile
 13282                           
 13283                           ;LoRaWanCore.c: 198: if ((b==0x0A) && (tamFrame>2))
 13284  001776  0E0A               	movlw	10
 13285  001778  1810               	xorwf	recebeByteLoRaWan@b,w,c
 13286  00177A  A4D8               	btfss	status,2,c
 13287  00177C  D10F               	goto	i2u781_40
 13288  00177E  0E02               	movlw	2
 13289  001780  6459               	cpfsgt	_tamFrame,c	;volatile
 13290  001782  D10C               	goto	i2u781_40
 13291                           
 13292                           ;LoRaWanCore.c: 199: {
 13293                           ;LoRaWanCore.c: 200: frameData[tamFrame]=0x00;
 13294  001784  5059               	movf	_tamFrame,w,c	;volatile
 13295  001786  0D01               	mullw	1
 13296  001788  0E00               	movlw	low recebeByteLoRaWan@frameData
 13297  00178A  24F3               	addwf	prodl,w,c
 13298  00178C  6ED9               	movwf	fsr2l,c
 13299  00178E  0E03               	movlw	high recebeByteLoRaWan@frameData
 13300  001790  20F4               	addwfc	prodh,w,c
 13301  001792  6EDA               	movwf	fsr2h,c
 13302  001794  0E00               	movlw	0
 13303  001796  6EDF               	movwf	indf2,c
 13304                           
 13305                           ;LoRaWanCore.c: 201: strcpy(frameBuffer,frameData);
 13306  001798  0E00               	movlw	low _frameBuffer
 13307  00179A  6E01               	movwf	strcpy@to,c
 13308  00179C  0E06               	movlw	high _frameBuffer
 13309  00179E  6E02               	movwf	strcpy@to+1,c
 13310  0017A0  0E00               	movlw	low recebeByteLoRaWan@frameData
 13311  0017A2  6E03               	movwf	strcpy@from,c
 13312  0017A4  0E03               	movlw	high recebeByteLoRaWan@frameData
 13313  0017A6  6E04               	movwf	strcpy@from+1,c
 13314  0017A8  EC86  F021         	call	_strcpy	;wreg free
 13315                           
 13316                           ;LoRaWanCore.c: 203: frameData[tamFrame-2]=0x00;
 13317  0017AC  0EFE               	movlw	254
 13318  0017AE  6E0A               	movwf	??_recebeByteLoRaWan& (0+255),c
 13319  0017B0  0EFF               	movlw	255
 13320  0017B2  6E0B               	movwf	(??_recebeByteLoRaWan+1)& (0+255),c
 13321  0017B4  5059               	movf	_tamFrame,w,c	;volatile
 13322  0017B6  6E0C               	movwf	(??_recebeByteLoRaWan+2)& (0+255),c
 13323  0017B8  6A0D               	clrf	(??_recebeByteLoRaWan+3)& (0+255),c
 13324  0017BA  500A               	movf	??_recebeByteLoRaWan,w,c
 13325  0017BC  260C               	addwf	??_recebeByteLoRaWan+2,f,c
 13326  0017BE  500B               	movf	??_recebeByteLoRaWan+1,w,c
 13327  0017C0  220D               	addwfc	??_recebeByteLoRaWan+3,f,c
 13328  0017C2  0E00               	movlw	low recebeByteLoRaWan@frameData
 13329  0017C4  240C               	addwf	??_recebeByteLoRaWan+2,w,c
 13330  0017C6  6ED9               	movwf	fsr2l,c
 13331  0017C8  0E03               	movlw	high recebeByteLoRaWan@frameData
 13332  0017CA  200D               	addwfc	??_recebeByteLoRaWan+3,w,c
 13333  0017CC  6EDA               	movwf	fsr2h,c
 13334  0017CE  0E00               	movlw	0
 13335  0017D0  6EDF               	movwf	indf2,c
 13336                           
 13337                           ;LoRaWanCore.c: 204: tamFrame=0;
 13338  0017D2  0E00               	movlw	0
 13339  0017D4  6E59               	movwf	_tamFrame,c	;volatile
 13340                           
 13341                           ;LoRaWanCore.c: 205: uint8_t len = (sizeof(MSG_LORAWAN) / sizeof((MSG_LORAWAN)[0]));
 13342  0017D6  0E0F               	movlw	15
 13343  0017D8  6E0E               	movwf	recebeByteLoRaWan@len,c
 13344                           
 13345                           ;LoRaWanCore.c: 206: responseLoRaWan=0xFF;
 13346  0017DA  685B               	setf	_responseLoRaWan,c	;volatile
 13347                           
 13348                           ;LoRaWanCore.c: 207: for (uint8_t i=0;i<len;i++)
 13349  0017DC  0E00               	movlw	0
 13350  0017DE  6E11               	movwf	recebeByteLoRaWan@i,c
 13351  0017E0  D01D               	goto	i2l1734
 13352  0017E2                     
 13353                           ;LoRaWanCore.c: 208: {
 13354                           ;LoRaWanCore.c: 209: if (strcmp(frameData,MSG_LORAWAN[i])==0)
 13355  0017E2  0E00               	movlw	low recebeByteLoRaWan@frameData
 13356  0017E4  6E01               	movwf	strcmp@s1,c
 13357  0017E6  0E03               	movlw	high recebeByteLoRaWan@frameData
 13358  0017E8  6E02               	movwf	strcmp@s1+1,c
 13359  0017EA  5011               	movf	recebeByteLoRaWan@i,w,c
 13360  0017EC  0D02               	mullw	2
 13361  0017EE  0EC2               	movlw	low _MSG_LORAWAN
 13362  0017F0  24F3               	addwf	prodl,w,c
 13363  0017F2  6ED9               	movwf	fsr2l,c
 13364  0017F4  0E02               	movlw	high _MSG_LORAWAN
 13365  0017F6  20F4               	addwfc	prodh,w,c
 13366  0017F8  6EDA               	movwf	fsr2h,c
 13367  0017FA  CFDE F003          	movff	postinc2,strcmp@s2
 13368  0017FE  CFDD F004          	movff	postdec2,strcmp@s2+1
 13369  001802  EC01  F020         	call	_strcmp	;wreg free
 13370  001806  5001               	movf	?_strcmp,w,c
 13371  001808  1002               	iorwf	?_strcmp+1,w,c
 13372  00180A  A4D8               	btfss	status,2,c
 13373  00180C  D006               	goto	i2l1736
 13374                           
 13375                           ;LoRaWanCore.c: 210: {
 13376                           ;LoRaWanCore.c: 211: responseLoRaWan=i;
 13377  00180E  C011  F05B         	movff	recebeByteLoRaWan@i,_responseLoRaWan	;volatile
 13378                           
 13379                           ;LoRaWanCore.c: 212: novaMsgLoRaWan=1;
 13380  001812  0E01               	movlw	1
 13381  001814  0100               	movlb	0	; () banked
 13382  001816  6FFF               	movwf	_novaMsgLoRaWan& (0+255),b	;volatile
 13383                           
 13384                           ; BSR set to: 0
 13385                           ;LoRaWanCore.c: 213: return;
 13386  001818  0012               	return	
 13387  00181A                     i2l1736:
 13388                           
 13389                           ; BSR set to: 0
 13390  00181A  2A11               	incf	recebeByteLoRaWan@i,f,c
 13391  00181C                     i2l1734:
 13392  00181C  500E               	movf	recebeByteLoRaWan@len,w,c
 13393  00181E  5C11               	subwf	recebeByteLoRaWan@i,w,c
 13394  001820  A0D8               	btfss	status,0,c
 13395  001822  D7DF               	goto	i2l1735
 13396                           
 13397                           ;LoRaWanCore.c: 214: }
 13398                           ;LoRaWanCore.c: 215: }
 13399                           ;LoRaWanCore.c: 217: uint8_t tamMsgRx=strlen(MSG_LORAWAN[15]);
 13400  001824  C2E0  F001         	movff	_MSG_LORAWAN+30,i2strlen@s
 13401  001828  C2E1  F002         	movff	_MSG_LORAWAN+31,i2strlen@s+1
 13402  00182C  ECB0  F01F         	call	i2_strlen	;wreg free
 13403  001830  5001               	movf	?i2_strlen,w,c
 13404  001832  6E12               	movwf	recebeByteLoRaWan@tamMsgRx,c
 13405                           
 13406                           ;LoRaWanCore.c: 218: if (strncmp(frameData,MSG_LORAWAN[15],tamMsgRx)==0)
 13407  001834  0E00               	movlw	low recebeByteLoRaWan@frameData
 13408  001836  6E01               	movwf	strncmp@s1,c
 13409  001838  0E03               	movlw	high recebeByteLoRaWan@frameData
 13410  00183A  6E02               	movwf	strncmp@s1+1,c
 13411  00183C  C2E0  F003         	movff	_MSG_LORAWAN+30,strncmp@s2
 13412  001840  C2E1  F004         	movff	_MSG_LORAWAN+31,strncmp@s2+1
 13413  001844  C012  F005         	movff	recebeByteLoRaWan@tamMsgRx,strncmp@len
 13414  001848  6A06               	clrf	strncmp@len+1,c
 13415  00184A  ECAA  F01D         	call	_strncmp	;wreg free
 13416  00184E  5001               	movf	?_strncmp,w,c
 13417  001850  1002               	iorwf	?_strncmp+1,w,c
 13418  001852  A4D8               	btfss	status,2,c
 13419  001854  D006               	goto	i2l1739
 13420                           
 13421                           ;LoRaWanCore.c: 219: {
 13422                           ;LoRaWanCore.c: 220: responseLoRaWan=15;
 13423  001856  0E0F               	movlw	15
 13424  001858  6E5B               	movwf	_responseLoRaWan,c	;volatile
 13425                           
 13426                           ;LoRaWanCore.c: 221: novaMsgLoRaWan=1;
 13427  00185A  0E01               	movlw	1
 13428  00185C  0100               	movlb	0	; () banked
 13429  00185E  6FFF               	movwf	_novaMsgLoRaWan& (0+255),b	;volatile
 13430                           
 13431                           ; BSR set to: 0
 13432                           ;LoRaWanCore.c: 222: return;
 13433  001860  0012               	return	
 13434  001862                     i2l1739:
 13435                           
 13436                           ;LoRaWanCore.c: 223: }
 13437                           ;LoRaWanCore.c: 227: tamMsgRx=strlen(MSG_LORAWAN[10]);
 13438                           
 13439                           ; BSR set to: 0
 13440  001862  C2D6  F001         	movff	_MSG_LORAWAN+20,i2strlen@s
 13441  001866  C2D7  F002         	movff	_MSG_LORAWAN+21,i2strlen@s+1
 13442  00186A  ECB0  F01F         	call	i2_strlen	;wreg free
 13443  00186E  5001               	movf	?i2_strlen,w,c
 13444  001870  6E12               	movwf	recebeByteLoRaWan@tamMsgRx,c
 13445                           
 13446                           ;LoRaWanCore.c: 228: if (strncmp(frameData,MSG_LORAWAN[10],tamMsgRx)==0)
 13447  001872  0E00               	movlw	low recebeByteLoRaWan@frameData
 13448  001874  6E01               	movwf	strncmp@s1,c
 13449  001876  0E03               	movlw	high recebeByteLoRaWan@frameData
 13450  001878  6E02               	movwf	strncmp@s1+1,c
 13451  00187A  C2D6  F003         	movff	_MSG_LORAWAN+20,strncmp@s2
 13452  00187E  C2D7  F004         	movff	_MSG_LORAWAN+21,strncmp@s2+1
 13453  001882  C012  F005         	movff	recebeByteLoRaWan@tamMsgRx,strncmp@len
 13454  001886  6A06               	clrf	strncmp@len+1,c
 13455  001888  ECAA  F01D         	call	_strncmp	;wreg free
 13456  00188C  5001               	movf	?_strncmp,w,c
 13457  00188E  1002               	iorwf	?_strncmp+1,w,c
 13458  001890  A4D8               	btfss	status,2,c
 13459  001892  D084               	goto	i2u781_40
 13460                           
 13461                           ;LoRaWanCore.c: 229: {
 13462                           ;LoRaWanCore.c: 232: uint8_t i=tamMsgRx;
 13463  001894  C012  F013         	movff	recebeByteLoRaWan@tamMsgRx,recebeByteLoRaWan@i_4437
 13464                           
 13465                           ;LoRaWanCore.c: 233: uint8_t port=0;
 13466  001898  0E00               	movlw	0
 13467  00189A  6E0F               	movwf	recebeByteLoRaWan@port,c
 13468                           
 13469                           ;LoRaWanCore.c: 235: for (;i<strlen(frameData);i++)
 13470  00189C  D027               	goto	i2l1741
 13471  00189E                     
 13472                           ;LoRaWanCore.c: 236: {
 13473                           ;LoRaWanCore.c: 237: if ((frameData[i]<'0') || (frameData[i]>'9'))
 13474  00189E  5013               	movf	recebeByteLoRaWan@i_4437,w,c
 13475  0018A0  0D01               	mullw	1
 13476  0018A2  0E00               	movlw	low recebeByteLoRaWan@frameData
 13477  0018A4  24F3               	addwf	prodl,w,c
 13478  0018A6  6ED9               	movwf	fsr2l,c
 13479  0018A8  0E03               	movlw	high recebeByteLoRaWan@frameData
 13480  0018AA  20F4               	addwfc	prodh,w,c
 13481  0018AC  6EDA               	movwf	fsr2h,c
 13482  0018AE  0E2F               	movlw	47
 13483  0018B0  64DF               	cpfsgt	indf2,c
 13484  0018B2  D02B               	goto	i2u779_40
 13485  0018B4  5013               	movf	recebeByteLoRaWan@i_4437,w,c
 13486  0018B6  0D01               	mullw	1
 13487  0018B8  0E00               	movlw	low recebeByteLoRaWan@frameData
 13488  0018BA  24F3               	addwf	prodl,w,c
 13489  0018BC  6ED9               	movwf	fsr2l,c
 13490  0018BE  0E03               	movlw	high recebeByteLoRaWan@frameData
 13491  0018C0  20F4               	addwfc	prodh,w,c
 13492  0018C2  6EDA               	movwf	fsr2h,c
 13493  0018C4  0E39               	movlw	57
 13494  0018C6  64DF               	cpfsgt	indf2,c
 13495  0018C8  D001               	goto	i2l1743
 13496  0018CA  D01F               	goto	i2u779_40
 13497  0018CC                     i2l1743:
 13498                           
 13499                           ;LoRaWanCore.c: 239: port*=10;
 13500  0018CC  0E0A               	movlw	10
 13501  0018CE  020F               	mulwf	recebeByteLoRaWan@port,c
 13502  0018D0  50F3               	movf	prodl,w,c
 13503  0018D2  6E0F               	movwf	recebeByteLoRaWan@port,c
 13504                           
 13505                           ;LoRaWanCore.c: 240: port+=frameData[i]-'0';
 13506  0018D4  5013               	movf	recebeByteLoRaWan@i_4437,w,c
 13507  0018D6  0D01               	mullw	1
 13508  0018D8  0E00               	movlw	low recebeByteLoRaWan@frameData
 13509  0018DA  24F3               	addwf	prodl,w,c
 13510  0018DC  6ED9               	movwf	fsr2l,c
 13511  0018DE  0E03               	movlw	high recebeByteLoRaWan@frameData
 13512  0018E0  20F4               	addwfc	prodh,w,c
 13513  0018E2  6EDA               	movwf	fsr2h,c
 13514  0018E4  50DF               	movf	indf2,w,c
 13515  0018E6  0FD0               	addlw	208
 13516  0018E8  260F               	addwf	recebeByteLoRaWan@port,f,c
 13517  0018EA  2A13               	incf	recebeByteLoRaWan@i_4437,f,c
 13518  0018EC                     i2l1741:
 13519  0018EC  0E00               	movlw	low recebeByteLoRaWan@frameData
 13520  0018EE  6E01               	movwf	i2strlen@s,c
 13521  0018F0  0E03               	movlw	high recebeByteLoRaWan@frameData
 13522  0018F2  6E02               	movwf	i2strlen@s+1,c
 13523  0018F4  ECB0  F01F         	call	i2_strlen	;wreg free
 13524  0018F8  5013               	movf	recebeByteLoRaWan@i_4437,w,c
 13525  0018FA  6E0A               	movwf	??_recebeByteLoRaWan& (0+255),c
 13526  0018FC  6A0B               	clrf	(??_recebeByteLoRaWan+1)& (0+255),c
 13527  0018FE  5001               	movf	?i2_strlen,w,c
 13528  001900  5C0A               	subwf	??_recebeByteLoRaWan,w,c
 13529  001902  5002               	movf	?i2_strlen+1,w,c
 13530  001904  580B               	subwfb	??_recebeByteLoRaWan+1,w,c
 13531  001906  A0D8               	btfss	status,0,c
 13532  001908  D7CA               	goto	i2l1742
 13533  00190A                     i2u779_40:
 13534                           
 13535                           ;LoRaWanCore.c: 241: }
 13536                           ;LoRaWanCore.c: 242: i++;
 13537  00190A  2A13               	incf	recebeByteLoRaWan@i_4437,f,c
 13538                           
 13539                           ;LoRaWanCore.c: 244: for (;i<strlen(frameData);i+=2)
 13540  00190C  D038               	goto	i2l1747
 13541  00190E                     
 13542                           ;LoRaWanCore.c: 245: {
 13543                           ;LoRaWanCore.c: 246: dadosRecebidos[tamDadosRecebidos].port=port;
 13544  00190E  505A               	movf	_tamDadosRecebidos,w,c	;volatile
 13545  001910  0D02               	mullw	2
 13546  001912  0E00               	movlw	low _dadosRecebidos
 13547  001914  24F3               	addwf	prodl,w,c
 13548  001916  6ED9               	movwf	fsr2l,c
 13549  001918  0E02               	movlw	high _dadosRecebidos
 13550  00191A  20F4               	addwfc	prodh,w,c
 13551  00191C  6EDA               	movwf	fsr2h,c
 13552  00191E  C00F  FFDF         	movff	recebeByteLoRaWan@port,indf2
 13553                           
 13554                           ;LoRaWanCore.c: 247: dadosRecebidos[tamDadosRecebidos++].data=converter(frameData[i],fra
      +                          meData[i+1]);
 13555  001922  505A               	movf	_tamDadosRecebidos,w,c	;volatile
 13556  001924  0D02               	mullw	2
 13557  001926  0E01               	movlw	1
 13558  001928  26F3               	addwf	prodl,f,c
 13559  00192A  0E00               	movlw	0
 13560  00192C  22F4               	addwfc	prodh,f,c
 13561  00192E  0E00               	movlw	low _dadosRecebidos
 13562  001930  24F3               	addwf	prodl,w,c
 13563  001932  6ED9               	movwf	fsr2l,c
 13564  001934  0E02               	movlw	high _dadosRecebidos
 13565  001936  20F4               	addwfc	prodh,w,c
 13566  001938  6EDA               	movwf	fsr2h,c
 13567  00193A  5013               	movf	recebeByteLoRaWan@i_4437,w,c
 13568  00193C  6E0A               	movwf	??_recebeByteLoRaWan& (0+255),c
 13569  00193E  6A0B               	clrf	(??_recebeByteLoRaWan+1)& (0+255),c
 13570  001940  0E01               	movlw	1
 13571  001942  260A               	addwf	??_recebeByteLoRaWan,f,c
 13572  001944  0E00               	movlw	0
 13573  001946  220B               	addwfc	??_recebeByteLoRaWan+1,f,c
 13574  001948  0E00               	movlw	low recebeByteLoRaWan@frameData
 13575  00194A  240A               	addwf	??_recebeByteLoRaWan,w,c
 13576  00194C  6EE1               	movwf	fsr1l,c
 13577  00194E  0E03               	movlw	high recebeByteLoRaWan@frameData
 13578  001950  200B               	addwfc	??_recebeByteLoRaWan+1,w,c
 13579  001952  6EE2               	movwf	fsr1h,c
 13580  001954  50E7               	movf	indf1,w,c
 13581  001956  6E02               	movwf	converter@conv2,c
 13582  001958  5013               	movf	recebeByteLoRaWan@i_4437,w,c
 13583  00195A  0D01               	mullw	1
 13584  00195C  0E00               	movlw	low recebeByteLoRaWan@frameData
 13585  00195E  24F3               	addwf	prodl,w,c
 13586  001960  6EE1               	movwf	fsr1l,c
 13587  001962  0E03               	movlw	high recebeByteLoRaWan@frameData
 13588  001964  20F4               	addwfc	prodh,w,c
 13589  001966  6EE2               	movwf	fsr1h,c
 13590  001968  50E7               	movf	indf1,w,c
 13591  00196A  EC25  F01D         	call	_converter
 13592  00196E  6EDF               	movwf	indf2,c
 13593  001970  2A5A               	incf	_tamDadosRecebidos,f,c	;volatile
 13594                           
 13595                           ;LoRaWanCore.c: 248: if (tamDadosRecebidos>=10)
 13596  001972  0E09               	movlw	9
 13597  001974  645A               	cpfsgt	_tamDadosRecebidos,c	;volatile
 13598  001976  D001               	goto	i2l1749
 13599  001978  0012               	return	
 13600  00197A                     i2l1749:
 13601  00197A  0E02               	movlw	2
 13602  00197C  2613               	addwf	recebeByteLoRaWan@i_4437,f,c
 13603  00197E                     i2l1747:
 13604  00197E  0E00               	movlw	low recebeByteLoRaWan@frameData
 13605  001980  6E01               	movwf	i2strlen@s,c
 13606  001982  0E03               	movlw	high recebeByteLoRaWan@frameData
 13607  001984  6E02               	movwf	i2strlen@s+1,c
 13608  001986  ECB0  F01F         	call	i2_strlen	;wreg free
 13609  00198A  5013               	movf	recebeByteLoRaWan@i_4437,w,c
 13610  00198C  6E0A               	movwf	??_recebeByteLoRaWan& (0+255),c
 13611  00198E  6A0B               	clrf	(??_recebeByteLoRaWan+1)& (0+255),c
 13612  001990  5001               	movf	?i2_strlen,w,c
 13613  001992  5C0A               	subwf	??_recebeByteLoRaWan,w,c
 13614  001994  5002               	movf	?i2_strlen+1,w,c
 13615  001996  580B               	subwfb	??_recebeByteLoRaWan+1,w,c
 13616  001998  A0D8               	btfss	status,0,c
 13617  00199A  D7B9               	goto	i2l1748
 13618  00199C                     i2u781_40:
 13619                           
 13620                           ;LoRaWanCore.c: 250: }
 13621                           ;LoRaWanCore.c: 251: }
 13622                           ;LoRaWanCore.c: 252: }
 13623                           ;LoRaWanCore.c: 254: if ((tamFrame>=100) || (b==0x0A))
 13624  00199C  0E64               	movlw	100
 13625  00199E  6059               	cpfslt	_tamFrame,c	;volatile
 13626  0019A0  D004               	goto	i2u783_40
 13627  0019A2  0E0A               	movlw	10
 13628  0019A4  1810               	xorwf	recebeByteLoRaWan@b,w,c
 13629  0019A6  A4D8               	btfss	status,2,c
 13630  0019A8  0012               	return	
 13631  0019AA                     i2u783_40:
 13632                           
 13633                           ;LoRaWanCore.c: 255: {
 13634                           ;LoRaWanCore.c: 256: tamFrame=0;
 13635  0019AA  0E00               	movlw	0
 13636  0019AC  6E59               	movwf	_tamFrame,c	;volatile
 13637  0019AE  0012               	return	
 13638  0019B0                     __end_of_recebeByteLoRaWan:
 13639                           	opt stack 0
 13640                           pclatu	equ	0xFFB
 13641                           pclath	equ	0xFFA
 13642                           tblptru	equ	0xFF8
 13643                           tblptrh	equ	0xFF7
 13644                           tblptrl	equ	0xFF6
 13645                           tablat	equ	0xFF5
 13646                           prodh	equ	0xFF4
 13647                           prodl	equ	0xFF3
 13648                           intcon	equ	0xFF2
 13649                           indf0	equ	0xFEF
 13650                           postinc0	equ	0xFEE
 13651                           fsr0h	equ	0xFEA
 13652                           fsr0l	equ	0xFE9
 13653                           wreg	equ	0xFE8
 13654                           indf1	equ	0xFE7
 13655                           postdec1	equ	0xFE5
 13656                           fsr1h	equ	0xFE2
 13657                           fsr1l	equ	0xFE1
 13658                           indf2	equ	0xFDF
 13659                           postinc2	equ	0xFDE
 13660                           postdec2	equ	0xFDD
 13661                           plusw2	equ	0xFDB
 13662                           fsr2h	equ	0xFDA
 13663                           fsr2l	equ	0xFD9
 13664                           status	equ	0xFD8
 13665                           
 13666 ;; *************** function i2_strlen *****************
 13667 ;; Defined at:
 13668 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strlen.c"
 13669 ;; Parameters:    Size  Location     Type
 13670 ;;  s               2    0[COMRAM] PTR const unsigned char 
 13671 ;;		 -> recebeByteLoRaWan@frameData(100), SYS(5), MAC(5), TxLoRaWan@comando(200), 
 13672 ;;		 -> SetChannelLoRaWan@comando(200), MAC_JOIN_OTAA(10), SYS_RESET(6), STR_19(16), 
 13673 ;;		 -> STR_18(7), STR_17(14), STR_16(8), STR_15(8), 
 13674 ;;		 -> STR_14(10), STR_13(17), STR_12(11), STR_11(5), 
 13675 ;;		 -> STR_10(32), STR_9(7), STR_8(11), STR_7(11), 
 13676 ;;		 -> STR_6(14), STR_5(3), 
 13677 ;; Auto vars:     Size  Location     Type
 13678 ;;  strlen          2    4[COMRAM] PTR const unsigned char 
 13679 ;;		 -> recebeByteLoRaWan@frameData(100), SYS(5), MAC(5), TxLoRaWan@comando(200), 
 13680 ;;		 -> SetChannelLoRaWan@comando(200), MAC_JOIN_OTAA(10), SYS_RESET(6), STR_19(16), 
 13681 ;;		 -> STR_18(7), STR_17(14), STR_16(8), STR_15(8), 
 13682 ;;		 -> STR_14(10), STR_13(17), STR_12(11), STR_11(5), 
 13683 ;;		 -> STR_10(32), STR_9(7), STR_8(11), STR_7(11), 
 13684 ;;		 -> STR_6(14), STR_5(3), 
 13685 ;; Return value:  Size  Location     Type
 13686 ;;                  2    0[COMRAM] unsigned int 
 13687 ;; Registers used:
 13688 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 13689 ;; Tracked objects:
 13690 ;;		On entry : 0/0
 13691 ;;		On exit  : 0/0
 13692 ;;		Unchanged: 0/0
 13693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13694 ;;      Params:         2       0       0       0       0       0       0       0       0
 13695 ;;      Locals:         2       0       0       0       0       0       0       0       0
 13696 ;;      Temps:          2       0       0       0       0       0       0       0       0
 13697 ;;      Totals:         6       0       0       0       0       0       0       0       0
 13698 ;;Total ram usage:        6 bytes
 13699 ;; Hardware stack levels used:    1
 13700 ;; This function calls:
 13701 ;;		Nothing
 13702 ;; This function is called by:
 13703 ;;		_recebeByteLoRaWan
 13704 ;; This function uses a non-reentrant model
 13705 ;;
 13706                           
 13707                           	psect	text50
 13708  003F60                     __ptext50:
 13709                           	opt stack 0
 13710  003F60                     i2_strlen:
 13711                           	opt stack 23
 13712                           
 13713                           ;incstack = 0
 13714  003F60  C001  F005         	movff	i2strlen@s,i2strlen@cp
 13715  003F64  C002  F006         	movff	i2strlen@s+1,i2strlen@cp+1
 13716  003F68  D002               	goto	i2l2550
 13717  003F6A  4A05               	infsnz	i2strlen@cp,f,c
 13718  003F6C  2A06               	incf	i2strlen@cp+1,f,c
 13719  003F6E                     i2l2550:
 13720  003F6E  C005  FFF6         	movff	i2strlen@cp,tblptrl
 13721  003F72  C006  FFF7         	movff	i2strlen@cp+1,tblptrh
 13722  003F76  6AF8               	clrf	tblptru,c
 13723  003F78  0E07               	movlw	(high __ramtop+-1)
 13724  003F7A  64F7               	cpfsgt	tblptrh,c
 13725  003F7C  D003               	bra	i2u767_47
 13726  003F7E  0008               	tblrd		*
 13727  003F80  50F5               	movf	tablat,w,c
 13728  003F82  D005               	bra	i2u767_40
 13729  003F84                     i2u767_47:
 13730  003F84  CFF6 FFE9          	movff	tblptrl,fsr0l
 13731  003F88  CFF7 FFEA          	movff	tblptrh,fsr0h
 13732  003F8C  50EF               	movf	indf0,w,c
 13733  003F8E                     i2u767_40:
 13734  003F8E  0900               	iorlw	0
 13735  003F90  A4D8               	btfss	status,2,c
 13736  003F92  D7EB               	goto	i2l2551
 13737  003F94  C001  F003         	movff	i2strlen@s,??i2_strlen
 13738  003F98  C002  F004         	movff	i2strlen@s+1,??i2_strlen+1
 13739  003F9C  1E03               	comf	??i2_strlen,f,c
 13740  003F9E  1E04               	comf	??i2_strlen+1,f,c
 13741  003FA0  4A03               	infsnz	??i2_strlen,f,c
 13742  003FA2  2A04               	incf	??i2_strlen+1,f,c
 13743  003FA4  5005               	movf	i2strlen@cp,w,c
 13744  003FA6  2403               	addwf	??i2_strlen,w,c
 13745  003FA8  6E01               	movwf	?i2_strlen,c
 13746  003FAA  5006               	movf	i2strlen@cp+1,w,c
 13747  003FAC  2004               	addwfc	??i2_strlen+1,w,c
 13748  003FAE  6E02               	movwf	?i2_strlen+1,c
 13749  003FB0  0012               	return	
 13750  003FB2                     __end_ofi2_strlen:
 13751                           	opt stack 0
 13752                           pclatu	equ	0xFFB
 13753                           pclath	equ	0xFFA
 13754                           tblptru	equ	0xFF8
 13755                           tblptrh	equ	0xFF7
 13756                           tblptrl	equ	0xFF6
 13757                           tablat	equ	0xFF5
 13758                           prodh	equ	0xFF4
 13759                           prodl	equ	0xFF3
 13760                           intcon	equ	0xFF2
 13761                           indf0	equ	0xFEF
 13762                           postinc0	equ	0xFEE
 13763                           fsr0h	equ	0xFEA
 13764                           fsr0l	equ	0xFE9
 13765                           wreg	equ	0xFE8
 13766                           indf1	equ	0xFE7
 13767                           postdec1	equ	0xFE5
 13768                           fsr1h	equ	0xFE2
 13769                           fsr1l	equ	0xFE1
 13770                           indf2	equ	0xFDF
 13771                           postinc2	equ	0xFDE
 13772                           postdec2	equ	0xFDD
 13773                           plusw2	equ	0xFDB
 13774                           fsr2h	equ	0xFDA
 13775                           fsr2l	equ	0xFD9
 13776                           status	equ	0xFD8
 13777                           
 13778 ;; *************** function _strncmp *****************
 13779 ;; Defined at:
 13780 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strncmp.c"
 13781 ;; Parameters:    Size  Location     Type
 13782 ;;  s1              2    0[COMRAM] PTR const unsigned char 
 13783 ;;		 -> recebeByteLoRaWan@frameData(100), 
 13784 ;;  s2              2    2[COMRAM] PTR const unsigned char 
 13785 ;;		 -> STR_19(16), STR_18(7), STR_17(14), STR_16(8), 
 13786 ;;		 -> STR_15(8), STR_14(10), STR_13(17), STR_12(11), 
 13787 ;;		 -> STR_11(5), STR_10(32), STR_9(7), STR_8(11), 
 13788 ;;		 -> STR_7(11), STR_6(14), STR_5(3), 
 13789 ;;  len             2    4[COMRAM] unsigned int 
 13790 ;; Auto vars:     Size  Location     Type
 13791 ;;		None
 13792 ;; Return value:  Size  Location     Type
 13793 ;;                  2    0[COMRAM] int 
 13794 ;; Registers used:
 13795 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 13796 ;; Tracked objects:
 13797 ;;		On entry : 0/0
 13798 ;;		On exit  : 0/0
 13799 ;;		Unchanged: 0/0
 13800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13801 ;;      Params:         6       0       0       0       0       0       0       0       0
 13802 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13803 ;;      Temps:          3       0       0       0       0       0       0       0       0
 13804 ;;      Totals:         9       0       0       0       0       0       0       0       0
 13805 ;;Total ram usage:        9 bytes
 13806 ;; Hardware stack levels used:    1
 13807 ;; This function calls:
 13808 ;;		Nothing
 13809 ;; This function is called by:
 13810 ;;		_recebeByteLoRaWan
 13811 ;; This function uses a non-reentrant model
 13812 ;;
 13813                           
 13814                           	psect	text51
 13815  003B54                     __ptext51:
 13816                           	opt stack 0
 13817  003B54                     _strncmp:
 13818                           	opt stack 23
 13819                           
 13820                           ;incstack = 0
 13821  003B54  D033               	goto	i2l2556
 13822  003B56                     i2l8047:
 13823  003B56  C001  FFD9         	movff	strncmp@s1,fsr2l
 13824  003B5A  C002  FFDA         	movff	strncmp@s1+1,fsr2h
 13825  003B5E  50DF               	movf	indf2,w,c
 13826  003B60  B4D8               	btfsc	status,2,c
 13827  003B62  D00F               	goto	i2u754_40
 13828  003B64  C001  FFD9         	movff	strncmp@s1,fsr2l
 13829  003B68  C002  FFDA         	movff	strncmp@s1+1,fsr2h
 13830  003B6C  50DF               	movf	indf2,w,c
 13831  003B6E  6E07               	movwf	??_strncmp& (0+255),c
 13832  003B70  C003  FFF6         	movff	strncmp@s2,tblptrl
 13833  003B74  C004  FFF7         	movff	strncmp@s2+1,tblptrh
 13834  003B78                     	if	0	;tblptru may be non-zero
 13835  003B78                     	endif
 13836  003B78                     	if	0	;tblptru may be non-zero
 13837  003B78                     	endif
 13838  003B78  0008               	tblrd		*
 13839  003B7A  50F5               	movf	tablat,w,c
 13840  003B7C  1807               	xorwf	??_strncmp,w,c
 13841  003B7E  B4D8               	btfsc	status,2,c
 13842  003B80  D019               	goto	i2l2558
 13843  003B82                     i2u754_40:
 13844  003B82  C003  FFF6         	movff	strncmp@s2,tblptrl
 13845  003B86  C004  FFF7         	movff	strncmp@s2+1,tblptrh
 13846  003B8A                     	if	0	;tblptru may be non-zero
 13847  003B8A                     	endif
 13848  003B8A                     	if	0	;tblptru may be non-zero
 13849  003B8A                     	endif
 13850  003B8A  0008               	tblrd		*
 13851  003B8C  50F5               	movf	tablat,w,c
 13852  003B8E  6E07               	movwf	??_strncmp& (0+255),c
 13853  003B90  6A08               	clrf	(??_strncmp+1)& (0+255),c
 13854  003B92  1E07               	comf	??_strncmp,f,c
 13855  003B94  1E08               	comf	??_strncmp+1,f,c
 13856  003B96  4A07               	infsnz	??_strncmp,f,c
 13857  003B98  2A08               	incf	??_strncmp+1,f,c
 13858  003B9A  C001  FFD9         	movff	strncmp@s1,fsr2l
 13859  003B9E  C002  FFDA         	movff	strncmp@s1+1,fsr2h
 13860  003BA2  50DF               	movf	indf2,w,c
 13861  003BA4  6E09               	movwf	(??_strncmp+2)& (0+255),c
 13862  003BA6  5009               	movf	??_strncmp+2,w,c
 13863  003BA8  2407               	addwf	??_strncmp,w,c
 13864  003BAA  6E01               	movwf	?_strncmp,c
 13865  003BAC  0E00               	movlw	0
 13866  003BAE  2008               	addwfc	??_strncmp+1,w,c
 13867  003BB0  6E02               	movwf	?_strncmp+1,c
 13868  003BB2  0012               	return	
 13869  003BB4                     i2l2558:
 13870  003BB4  4A01               	infsnz	strncmp@s1,f,c
 13871  003BB6  2A02               	incf	strncmp@s1+1,f,c
 13872  003BB8  4A03               	infsnz	strncmp@s2,f,c
 13873  003BBA  2A04               	incf	strncmp@s2+1,f,c
 13874  003BBC                     i2l2556:
 13875  003BBC  0605               	decf	strncmp@len,f,c
 13876  003BBE  A0D8               	btfss	status,0,c
 13877  003BC0  0606               	decf	strncmp@len+1,f,c
 13878  003BC2  2805               	incf	strncmp@len,w,c
 13879  003BC4  E1C8               	bnz	i2l8047
 13880  003BC6  2806               	incf	strncmp@len+1,w,c
 13881  003BC8  A4D8               	btfss	status,2,c
 13882  003BCA  D7C5               	goto	i2l2557
 13883  003BCC  0E00               	movlw	0
 13884  003BCE  6E02               	movwf	?_strncmp+1,c
 13885  003BD0  0E00               	movlw	0
 13886  003BD2  6E01               	movwf	?_strncmp,c
 13887  003BD4  0012               	return	
 13888  003BD6                     __end_of_strncmp:
 13889                           	opt stack 0
 13890                           pclatu	equ	0xFFB
 13891                           pclath	equ	0xFFA
 13892                           tblptru	equ	0xFF8
 13893                           tblptrh	equ	0xFF7
 13894                           tblptrl	equ	0xFF6
 13895                           tablat	equ	0xFF5
 13896                           prodh	equ	0xFF4
 13897                           prodl	equ	0xFF3
 13898                           intcon	equ	0xFF2
 13899                           indf0	equ	0xFEF
 13900                           postinc0	equ	0xFEE
 13901                           fsr0h	equ	0xFEA
 13902                           fsr0l	equ	0xFE9
 13903                           wreg	equ	0xFE8
 13904                           indf1	equ	0xFE7
 13905                           postdec1	equ	0xFE5
 13906                           fsr1h	equ	0xFE2
 13907                           fsr1l	equ	0xFE1
 13908                           indf2	equ	0xFDF
 13909                           postinc2	equ	0xFDE
 13910                           postdec2	equ	0xFDD
 13911                           plusw2	equ	0xFDB
 13912                           fsr2h	equ	0xFDA
 13913                           fsr2l	equ	0xFD9
 13914                           status	equ	0xFD8
 13915                           
 13916 ;; *************** function _strcpy *****************
 13917 ;; Defined at:
 13918 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strcpy.c"
 13919 ;; Parameters:    Size  Location     Type
 13920 ;;  to              2    0[COMRAM] PTR unsigned char 
 13921 ;;		 -> frameBuffer(200), 
 13922 ;;  from            2    2[COMRAM] PTR const unsigned char 
 13923 ;;		 -> recebeByteLoRaWan@frameData(100), 
 13924 ;; Auto vars:     Size  Location     Type
 13925 ;;  cp              2    4[COMRAM] PTR unsigned char 
 13926 ;;		 -> frameBuffer(200), 
 13927 ;; Return value:  Size  Location     Type
 13928 ;;                  2    0[COMRAM] PTR unsigned char 
 13929 ;; Registers used:
 13930 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 13931 ;; Tracked objects:
 13932 ;;		On entry : 0/0
 13933 ;;		On exit  : 0/0
 13934 ;;		Unchanged: 0/0
 13935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13936 ;;      Params:         4       0       0       0       0       0       0       0       0
 13937 ;;      Locals:         2       0       0       0       0       0       0       0       0
 13938 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13939 ;;      Totals:         6       0       0       0       0       0       0       0       0
 13940 ;;Total ram usage:        6 bytes
 13941 ;; Hardware stack levels used:    1
 13942 ;; This function calls:
 13943 ;;		Nothing
 13944 ;; This function is called by:
 13945 ;;		_recebeByteLoRaWan
 13946 ;; This function uses a non-reentrant model
 13947 ;;
 13948                           
 13949                           	psect	text52
 13950  00430C                     __ptext52:
 13951                           	opt stack 0
 13952  00430C                     _strcpy:
 13953                           	opt stack 23
 13954                           
 13955                           ;incstack = 0
 13956  00430C  C001  F005         	movff	strcpy@to,strcpy@cp
 13957  004310  C002  F006         	movff	strcpy@to+1,strcpy@cp+1
 13958  004314  D004               	goto	i2l2544
 13959  004316  4A05               	infsnz	strcpy@cp,f,c
 13960  004318  2A06               	incf	strcpy@cp+1,f,c
 13961  00431A  4A03               	infsnz	strcpy@from,f,c
 13962  00431C  2A04               	incf	strcpy@from+1,f,c
 13963  00431E                     i2l2544:
 13964  00431E  C003  FFD9         	movff	strcpy@from,fsr2l
 13965  004322  C004  FFDA         	movff	strcpy@from+1,fsr2h
 13966  004326  C005  FFE1         	movff	strcpy@cp,fsr1l
 13967  00432A  C006  FFE2         	movff	strcpy@cp+1,fsr1h
 13968  00432E  CFDF FFE7          	movff	indf2,indf1
 13969  004332  50E7               	movf	indf1,w,c
 13970  004334  B4D8               	btfsc	status,2,c
 13971  004336  0012               	return	
 13972  004338  D7EE               	goto	i2l2545
 13973  00433A                     __end_of_strcpy:
 13974                           	opt stack 0
 13975                           pclatu	equ	0xFFB
 13976                           pclath	equ	0xFFA
 13977                           tblptru	equ	0xFF8
 13978                           tblptrh	equ	0xFF7
 13979                           tblptrl	equ	0xFF6
 13980                           tablat	equ	0xFF5
 13981                           prodh	equ	0xFF4
 13982                           prodl	equ	0xFF3
 13983                           intcon	equ	0xFF2
 13984                           indf0	equ	0xFEF
 13985                           postinc0	equ	0xFEE
 13986                           fsr0h	equ	0xFEA
 13987                           fsr0l	equ	0xFE9
 13988                           wreg	equ	0xFE8
 13989                           indf1	equ	0xFE7
 13990                           postdec1	equ	0xFE5
 13991                           fsr1h	equ	0xFE2
 13992                           fsr1l	equ	0xFE1
 13993                           indf2	equ	0xFDF
 13994                           postinc2	equ	0xFDE
 13995                           postdec2	equ	0xFDD
 13996                           plusw2	equ	0xFDB
 13997                           fsr2h	equ	0xFDA
 13998                           fsr2l	equ	0xFD9
 13999                           status	equ	0xFD8
 14000                           
 14001 ;; *************** function _strcmp *****************
 14002 ;; Defined at:
 14003 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strcmp.c"
 14004 ;; Parameters:    Size  Location     Type
 14005 ;;  s1              2    0[COMRAM] PTR const unsigned char 
 14006 ;;		 -> recebeByteLoRaWan@frameData(100), 
 14007 ;;  s2              2    2[COMRAM] PTR const unsigned char 
 14008 ;;		 -> STR_19(16), STR_18(7), STR_17(14), STR_16(8), 
 14009 ;;		 -> STR_15(8), STR_14(10), STR_13(17), STR_12(11), 
 14010 ;;		 -> STR_11(5), STR_10(32), STR_9(7), STR_8(11), 
 14011 ;;		 -> STR_7(11), STR_6(14), STR_5(3), 
 14012 ;; Auto vars:     Size  Location     Type
 14013 ;;  r               1    5[COMRAM] char 
 14014 ;; Return value:  Size  Location     Type
 14015 ;;                  2    0[COMRAM] int 
 14016 ;; Registers used:
 14017 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14018 ;; Tracked objects:
 14019 ;;		On entry : 0/0
 14020 ;;		On exit  : 0/0
 14021 ;;		Unchanged: 0/0
 14022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14023 ;;      Params:         4       0       0       0       0       0       0       0       0
 14024 ;;      Locals:         1       0       0       0       0       0       0       0       0
 14025 ;;      Temps:          1       0       0       0       0       0       0       0       0
 14026 ;;      Totals:         6       0       0       0       0       0       0       0       0
 14027 ;;Total ram usage:        6 bytes
 14028 ;; Hardware stack levels used:    1
 14029 ;; This function calls:
 14030 ;;		Nothing
 14031 ;; This function is called by:
 14032 ;;		_recebeByteLoRaWan
 14033 ;; This function uses a non-reentrant model
 14034 ;;
 14035                           
 14036                           	psect	text53
 14037  004002                     __ptext53:
 14038                           	opt stack 0
 14039  004002                     _strcmp:
 14040                           	opt stack 23
 14041                           
 14042                           ;incstack = 0
 14043  004002  D004               	goto	i2l2536
 14044  004004  4A01               	infsnz	strcmp@s1,f,c
 14045  004006  2A02               	incf	strcmp@s1+1,f,c
 14046  004008  4A03               	infsnz	strcmp@s2,f,c
 14047  00400A  2A04               	incf	strcmp@s2+1,f,c
 14048  00400C                     i2l2536:
 14049  00400C  C001  FFD9         	movff	strcmp@s1,fsr2l
 14050  004010  C002  FFDA         	movff	strcmp@s1+1,fsr2h
 14051  004014  50DF               	movf	indf2,w,c
 14052  004016  6E05               	movwf	??_strcmp& (0+255),c
 14053  004018  C003  FFF6         	movff	strcmp@s2,tblptrl
 14054  00401C  C004  FFF7         	movff	strcmp@s2+1,tblptrh
 14055  004020                     	if	0	;tblptru may be non-zero
 14056  004020                     	endif
 14057  004020                     	if	0	;tblptru may be non-zero
 14058  004020                     	endif
 14059  004020  0008               	tblrd		*
 14060  004022  50F5               	movf	tablat,w,c
 14061  004024  0800               	sublw	0
 14062  004026  2405               	addwf	??_strcmp,w,c
 14063  004028  6E06               	movwf	strcmp@r,c
 14064  00402A  5006               	movf	strcmp@r,w,c
 14065  00402C  A4D8               	btfss	status,2,c
 14066  00402E  D007               	goto	i2u752_40
 14067  004030  C001  FFD9         	movff	strcmp@s1,fsr2l
 14068  004034  C002  FFDA         	movff	strcmp@s1+1,fsr2h
 14069  004038  50DF               	movf	indf2,w,c
 14070  00403A  A4D8               	btfss	status,2,c
 14071  00403C  D7E3               	goto	i2l2537
 14072  00403E                     i2u752_40:
 14073  00403E  5006               	movf	strcmp@r,w,c
 14074  004040  6E01               	movwf	?_strcmp,c
 14075  004042  6A02               	clrf	?_strcmp+1,c
 14076  004044  BE01               	btfsc	?_strcmp,7,c
 14077  004046  0602               	decf	?_strcmp+1,f,c
 14078  004048  0012               	return	
 14079  00404A                     __end_of_strcmp:
 14080                           	opt stack 0
 14081                           pclatu	equ	0xFFB
 14082                           pclath	equ	0xFFA
 14083                           tblptru	equ	0xFF8
 14084                           tblptrh	equ	0xFF7
 14085                           tblptrl	equ	0xFF6
 14086                           tablat	equ	0xFF5
 14087                           prodh	equ	0xFF4
 14088                           prodl	equ	0xFF3
 14089                           intcon	equ	0xFF2
 14090                           indf0	equ	0xFEF
 14091                           postinc0	equ	0xFEE
 14092                           fsr0h	equ	0xFEA
 14093                           fsr0l	equ	0xFE9
 14094                           wreg	equ	0xFE8
 14095                           indf1	equ	0xFE7
 14096                           postdec1	equ	0xFE5
 14097                           fsr1h	equ	0xFE2
 14098                           fsr1l	equ	0xFE1
 14099                           indf2	equ	0xFDF
 14100                           postinc2	equ	0xFDE
 14101                           postdec2	equ	0xFDD
 14102                           plusw2	equ	0xFDB
 14103                           fsr2h	equ	0xFDA
 14104                           fsr2l	equ	0xFD9
 14105                           status	equ	0xFD8
 14106                           
 14107 ;; *************** function _converter *****************
 14108 ;; Defined at:
 14109 ;;		line 357 in file "XBeeCore.c"
 14110 ;; Parameters:    Size  Location     Type
 14111 ;;  conv1           1    wreg     unsigned char 
 14112 ;;  conv2           1    1[COMRAM] unsigned char 
 14113 ;; Auto vars:     Size  Location     Type
 14114 ;;  conv1           1    5[COMRAM] unsigned char 
 14115 ;;  aux2            1    4[COMRAM] unsigned char 
 14116 ;;  aux             1    3[COMRAM] unsigned char 
 14117 ;;  resul           1    2[COMRAM] unsigned char 
 14118 ;; Return value:  Size  Location     Type
 14119 ;;                  1    wreg      unsigned char 
 14120 ;; Registers used:
 14121 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14122 ;; Tracked objects:
 14123 ;;		On entry : 0/0
 14124 ;;		On exit  : 0/0
 14125 ;;		Unchanged: 0/0
 14126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14127 ;;      Params:         1       0       0       0       0       0       0       0       0
 14128 ;;      Locals:         4       0       0       0       0       0       0       0       0
 14129 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14130 ;;      Totals:         5       0       0       0       0       0       0       0       0
 14131 ;;Total ram usage:        5 bytes
 14132 ;; Hardware stack levels used:    1
 14133 ;; Hardware stack levels required when called:    1
 14134 ;; This function calls:
 14135 ;;		_toupper
 14136 ;; This function is called by:
 14137 ;;		_recebeByteLoRaWan
 14138 ;;		_send
 14139 ;; This function uses a non-reentrant model
 14140 ;;
 14141                           
 14142                           	psect	text54
 14143  003A4A                     __ptext54:
 14144                           	opt stack 0
 14145  003A4A                     _converter:
 14146                           	opt stack 22
 14147                           
 14148                           ;incstack = 0
 14149                           ;converter@conv1 stored from wreg
 14150  003A4A  6E06               	movwf	converter@conv1,c
 14151                           
 14152                           ;XBeeCore.c: 359: uint8_t aux=0;
 14153  003A4C  0E00               	movlw	0
 14154  003A4E  6E04               	movwf	converter@aux,c
 14155                           
 14156                           ;XBeeCore.c: 360: uint8_t aux2=0;
 14157  003A50  0E00               	movlw	0
 14158  003A52  6E05               	movwf	converter@aux2,c
 14159                           
 14160                           ;XBeeCore.c: 361: uint8_t resul=0;
 14161  003A54  0E00               	movlw	0
 14162  003A56  6E03               	movwf	converter@resul,c
 14163                           
 14164                           ;XBeeCore.c: 364: conv1=toupper(conv1);
 14165  003A58  5006               	movf	converter@conv1,w,c
 14166  003A5A  EC9C  F022         	call	_toupper
 14167  003A5E  6E06               	movwf	converter@conv1,c
 14168                           
 14169                           ;XBeeCore.c: 365: conv2=toupper(conv2);
 14170  003A60  5002               	movf	converter@conv2,w,c
 14171  003A62  EC9C  F022         	call	_toupper
 14172  003A66  6E02               	movwf	converter@conv2,c
 14173                           
 14174                           ;XBeeCore.c: 367: if ((conv1>='0') && (conv1<='9'))
 14175  003A68  0E2F               	movlw	47
 14176  003A6A  6406               	cpfsgt	converter@conv1,c
 14177  003A6C  D006               	goto	i2l1162
 14178  003A6E  0E3A               	movlw	58
 14179  003A70  6006               	cpfslt	converter@conv1,c
 14180  003A72  D003               	goto	i2l1162
 14181                           
 14182                           ;XBeeCore.c: 368: {
 14183                           ;XBeeCore.c: 369: aux=conv1-'0';
 14184  003A74  5006               	movf	converter@conv1,w,c
 14185  003A76  0FD0               	addlw	208
 14186  003A78  D008               	goto	L9
 14187  003A7A                     i2l1162:
 14188                           
 14189                           ;XBeeCore.c: 371: else if ((conv1>='A') && (conv1<='F'))
 14190  003A7A  0E40               	movlw	64
 14191  003A7C  6406               	cpfsgt	converter@conv1,c
 14192  003A7E  D006               	goto	i2l1164
 14193  003A80  0E47               	movlw	71
 14194  003A82  6006               	cpfslt	converter@conv1,c
 14195  003A84  D003               	goto	i2l1164
 14196                           
 14197                           ;XBeeCore.c: 372: {
 14198                           ;XBeeCore.c: 373: aux=conv1-'A'+10;
 14199  003A86  5006               	movf	converter@conv1,w,c
 14200  003A88  0FC9               	addlw	201
 14201  003A8A                     L9:
 14202  003A8A  6E04               	movwf	converter@aux,c
 14203  003A8C                     i2l1164:
 14204                           
 14205                           ;XBeeCore.c: 374: }
 14206                           ;XBeeCore.c: 376: if ((conv2>='0') && (conv2<='9'))
 14207  003A8C  0E2F               	movlw	47
 14208  003A8E  6402               	cpfsgt	converter@conv2,c
 14209  003A90  D006               	goto	i2l1165
 14210  003A92  0E3A               	movlw	58
 14211  003A94  6002               	cpfslt	converter@conv2,c
 14212  003A96  D003               	goto	i2l1165
 14213                           
 14214                           ;XBeeCore.c: 377: {
 14215                           ;XBeeCore.c: 378: aux2=conv2-'0';
 14216  003A98  5002               	movf	converter@conv2,w,c
 14217  003A9A  0FD0               	addlw	208
 14218  003A9C  D00A               	goto	L11
 14219  003A9E                     i2l1165:
 14220                           
 14221                           ;XBeeCore.c: 380: else if ((conv2>='A') && (conv2<='F'))
 14222  003A9E  0E40               	movlw	64
 14223  003AA0  6402               	cpfsgt	converter@conv2,c
 14224  003AA2  D006               	goto	i2l1167
 14225  003AA4  0E47               	movlw	71
 14226  003AA6  6002               	cpfslt	converter@conv2,c
 14227  003AA8  D003               	goto	i2l1167
 14228                           
 14229                           ;XBeeCore.c: 381: {
 14230                           ;XBeeCore.c: 382: aux2=conv2-'A'+10;
 14231  003AAA  5002               	movf	converter@conv2,w,c
 14232  003AAC  0FC9               	addlw	201
 14233  003AAE  D001               	goto	L11
 14234  003AB0                     i2l1167:
 14235                           
 14236                           ;XBeeCore.c: 384: else
 14237                           ;XBeeCore.c: 385: {
 14238                           ;XBeeCore.c: 386: aux2=100;
 14239  003AB0  0E64               	movlw	100
 14240  003AB2                     L11:
 14241  003AB2  6E05               	movwf	converter@aux2,c
 14242                           
 14243                           ;XBeeCore.c: 387: }
 14244                           ;XBeeCore.c: 389: if(aux2==100)
 14245  003AB4  0E64               	movlw	100
 14246  003AB6  1805               	xorwf	converter@aux2,w,c
 14247  003AB8  A4D8               	btfss	status,2,c
 14248  003ABA  D003               	goto	i2l1169
 14249                           
 14250                           ;XBeeCore.c: 390: {
 14251                           ;XBeeCore.c: 391: resul=aux;
 14252  003ABC  C004  F003         	movff	converter@aux,converter@resul
 14253                           
 14254                           ;XBeeCore.c: 392: }
 14255  003AC0  D005               	goto	i2l1170
 14256  003AC2                     i2l1169:
 14257                           
 14258                           ;XBeeCore.c: 393: else
 14259                           ;XBeeCore.c: 394: {
 14260                           ;XBeeCore.c: 395: resul=(uint8_t)((aux*16)+aux2);
 14261  003AC2  5004               	movf	converter@aux,w,c
 14262  003AC4  0D10               	mullw	16
 14263  003AC6  50F3               	movf	prodl,w,c
 14264  003AC8  2405               	addwf	converter@aux2,w,c
 14265  003ACA  6E03               	movwf	converter@resul,c
 14266  003ACC                     i2l1170:
 14267                           
 14268                           ;XBeeCore.c: 396: }
 14269                           ;XBeeCore.c: 397: return resul;
 14270  003ACC  5003               	movf	converter@resul,w,c
 14271  003ACE  0012               	return	
 14272  003AD0                     __end_of_converter:
 14273                           	opt stack 0
 14274                           pclatu	equ	0xFFB
 14275                           pclath	equ	0xFFA
 14276                           tblptru	equ	0xFF8
 14277                           tblptrh	equ	0xFF7
 14278                           tblptrl	equ	0xFF6
 14279                           tablat	equ	0xFF5
 14280                           prodh	equ	0xFF4
 14281                           prodl	equ	0xFF3
 14282                           intcon	equ	0xFF2
 14283                           indf0	equ	0xFEF
 14284                           postinc0	equ	0xFEE
 14285                           fsr0h	equ	0xFEA
 14286                           fsr0l	equ	0xFE9
 14287                           wreg	equ	0xFE8
 14288                           indf1	equ	0xFE7
 14289                           postdec1	equ	0xFE5
 14290                           fsr1h	equ	0xFE2
 14291                           fsr1l	equ	0xFE1
 14292                           indf2	equ	0xFDF
 14293                           postinc2	equ	0xFDE
 14294                           postdec2	equ	0xFDD
 14295                           plusw2	equ	0xFDB
 14296                           fsr2h	equ	0xFDA
 14297                           fsr2l	equ	0xFD9
 14298                           status	equ	0xFD8
 14299                           
 14300 ;; *************** function _toupper *****************
 14301 ;; Defined at:
 14302 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\toupper.c"
 14303 ;; Parameters:    Size  Location     Type
 14304 ;;  c               1    wreg     unsigned char 
 14305 ;; Auto vars:     Size  Location     Type
 14306 ;;  c               1    0[COMRAM] unsigned char 
 14307 ;; Return value:  Size  Location     Type
 14308 ;;                  1    wreg      unsigned char 
 14309 ;; Registers used:
 14310 ;;		wreg, status,2, status,0
 14311 ;; Tracked objects:
 14312 ;;		On entry : 0/0
 14313 ;;		On exit  : 0/0
 14314 ;;		Unchanged: 0/0
 14315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14316 ;;      Params:         0       0       0       0       0       0       0       0       0
 14317 ;;      Locals:         1       0       0       0       0       0       0       0       0
 14318 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14319 ;;      Totals:         1       0       0       0       0       0       0       0       0
 14320 ;;Total ram usage:        1 bytes
 14321 ;; Hardware stack levels used:    1
 14322 ;; This function calls:
 14323 ;;		Nothing
 14324 ;; This function is called by:
 14325 ;;		_converter
 14326 ;; This function uses a non-reentrant model
 14327 ;;
 14328                           
 14329                           	psect	text55
 14330  004538                     __ptext55:
 14331                           	opt stack 0
 14332  004538                     _toupper:
 14333                           	opt stack 22
 14334                           
 14335                           ;incstack = 0
 14336                           ;toupper@c stored from wreg
 14337  004538  6E01               	movwf	toupper@c,c
 14338  00453A  0E7B               	movlw	123
 14339  00453C  6001               	cpfslt	toupper@c,c
 14340  00453E  D004               	goto	i2l2565
 14341  004540  0E60               	movlw	96
 14342  004542  6401               	cpfsgt	toupper@c,c
 14343  004544  D001               	goto	i2l2565
 14344  004546  9A01               	bcf	toupper@c,5,c
 14345  004548                     i2l2565:
 14346  004548  5001               	movf	toupper@c,w,c
 14347  00454A  0012               	return	
 14348  00454C                     __end_of_toupper:
 14349                           	opt stack 0
 14350                           pclatu	equ	0xFFB
 14351                           pclath	equ	0xFFA
 14352                           tblptru	equ	0xFF8
 14353                           tblptrh	equ	0xFF7
 14354                           tblptrl	equ	0xFF6
 14355                           tablat	equ	0xFF5
 14356                           prodh	equ	0xFF4
 14357                           prodl	equ	0xFF3
 14358                           intcon	equ	0xFF2
 14359                           indf0	equ	0xFEF
 14360                           postinc0	equ	0xFEE
 14361                           fsr0h	equ	0xFEA
 14362                           fsr0l	equ	0xFE9
 14363                           wreg	equ	0xFE8
 14364                           indf1	equ	0xFE7
 14365                           postdec1	equ	0xFE5
 14366                           fsr1h	equ	0xFE2
 14367                           fsr1l	equ	0xFE1
 14368                           indf2	equ	0xFDF
 14369                           postinc2	equ	0xFDE
 14370                           postdec2	equ	0xFDD
 14371                           plusw2	equ	0xFDB
 14372                           fsr2h	equ	0xFDA
 14373                           fsr2l	equ	0xFD9
 14374                           status	equ	0xFD8
 14375                           
 14376 ;; *************** function _getch *****************
 14377 ;; Defined at:
 14378 ;;		line 52 in file "uart/uart.c"
 14379 ;; Parameters:    Size  Location     Type
 14380 ;;		None
 14381 ;; Auto vars:     Size  Location     Type
 14382 ;;  data            1    2[COMRAM] unsigned char 
 14383 ;;  RC              1    1[COMRAM] unsigned char 
 14384 ;; Return value:  Size  Location     Type
 14385 ;;                  1    wreg      unsigned char 
 14386 ;; Registers used:
 14387 ;;		wreg, status,2, status,0
 14388 ;; Tracked objects:
 14389 ;;		On entry : 0/0
 14390 ;;		On exit  : 0/0
 14391 ;;		Unchanged: 0/0
 14392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14393 ;;      Params:         0       0       0       0       0       0       0       0       0
 14394 ;;      Locals:         2       0       0       0       0       0       0       0       0
 14395 ;;      Temps:          1       0       0       0       0       0       0       0       0
 14396 ;;      Totals:         3       0       0       0       0       0       0       0       0
 14397 ;;Total ram usage:        3 bytes
 14398 ;; Hardware stack levels used:    1
 14399 ;; This function calls:
 14400 ;;		Nothing
 14401 ;; This function is called by:
 14402 ;;		_SYS_InterruptHigh
 14403 ;;		_flush
 14404 ;; This function uses a non-reentrant model
 14405 ;;
 14406                           
 14407                           	psect	text56
 14408  004480                     __ptext56:
 14409                           	opt stack 0
 14410  004480                     _getch:
 14411                           	opt stack 24
 14412                           
 14413                           ;uart.c: 54: uint8_t RC;
 14414                           ;uart.c: 55: char data;
 14415                           ;uart.c: 57: if (!RCIF)
 14416                           
 14417                           ;incstack = 0
 14418  004480  BA9E               	btfsc	3998,5,c	;volatile
 14419  004482  D002               	goto	i2l961
 14420                           
 14421                           ;uart.c: 58: return 0;
 14422  004484  0E00               	movlw	0
 14423  004486  0012               	return	
 14424  004488                     i2l961:
 14425                           
 14426                           ;uart.c: 60: RC=RCSTA;
 14427  004488  CFAB F002          	movff	4011,getch@RC	;volatile
 14428                           
 14429                           ;uart.c: 61: data=RCREG;
 14430  00448C  CFAE F003          	movff	4014,getch@data	;volatile
 14431                           
 14432                           ;uart.c: 64: if ((RC & 0x06)!=0)
 14433  004490  C002  F001         	movff	getch@RC,??_getch
 14434  004494  0E06               	movlw	6
 14435  004496  1601               	andwf	??_getch,f,c
 14436  004498  B4D8               	btfsc	status,2,c
 14437  00449A  D003               	goto	i2l963
 14438                           
 14439                           ;uart.c: 65: {
 14440                           ;uart.c: 66: RCSTAbits.CREN=0;
 14441  00449C  98AB               	bcf	4011,4,c	;volatile
 14442                           
 14443                           ;uart.c: 67: __nop();
 14444  00449E  F000               	nop	
 14445                           
 14446                           ;uart.c: 68: RCSTAbits.CREN=1;
 14447  0044A0  88AB               	bsf	4011,4,c	;volatile
 14448  0044A2                     i2l963:
 14449                           
 14450                           ;uart.c: 69: }
 14451                           ;uart.c: 71: return data;
 14452  0044A2  5003               	movf	getch@data,w,c
 14453  0044A4  0012               	return	
 14454  0044A6                     __end_of_getch:
 14455                           	opt stack 0
 14456                           pclatu	equ	0xFFB
 14457                           pclath	equ	0xFFA
 14458                           tblptru	equ	0xFF8
 14459                           tblptrh	equ	0xFF7
 14460                           tblptrl	equ	0xFF6
 14461                           tablat	equ	0xFF5
 14462                           prodh	equ	0xFF4
 14463                           prodl	equ	0xFF3
 14464                           intcon	equ	0xFF2
 14465                           indf0	equ	0xFEF
 14466                           postinc0	equ	0xFEE
 14467                           fsr0h	equ	0xFEA
 14468                           fsr0l	equ	0xFE9
 14469                           wreg	equ	0xFE8
 14470                           indf1	equ	0xFE7
 14471                           postdec1	equ	0xFE5
 14472                           fsr1h	equ	0xFE2
 14473                           fsr1l	equ	0xFE1
 14474                           indf2	equ	0xFDF
 14475                           postinc2	equ	0xFDE
 14476                           postdec2	equ	0xFDD
 14477                           plusw2	equ	0xFDB
 14478                           fsr2h	equ	0xFDA
 14479                           fsr2l	equ	0xFD9
 14480                           status	equ	0xFD8
 14481                           
 14482 ;; *************** function _USBDeviceTasks *****************
 14483 ;; Defined at:
 14484 ;;		line 477 in file "../../../../microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 14485 ;; Parameters:    Size  Location     Type
 14486 ;;		None
 14487 ;; Auto vars:     Size  Location     Type
 14488 ;;  i               1   27[COMRAM] unsigned char 
 14489 ;; Return value:  Size  Location     Type
 14490 ;;                  1    wreg      void 
 14491 ;; Registers used:
 14492 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14493 ;; Tracked objects:
 14494 ;;		On entry : 0/0
 14495 ;;		On exit  : 0/0
 14496 ;;		Unchanged: 0/0
 14497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14498 ;;      Params:         0       0       0       0       0       0       0       0       0
 14499 ;;      Locals:         1       0       0       0       0       0       0       0       0
 14500 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14501 ;;      Totals:         1       0       0       0       0       0       0       0       0
 14502 ;;Total ram usage:        1 bytes
 14503 ;; Hardware stack levels used:    1
 14504 ;; Hardware stack levels required when called:    8
 14505 ;; This function calls:
 14506 ;;		_USBCtrlEPAllowStatusStage
 14507 ;;		_USBCtrlEPService
 14508 ;;		_USBIncrement1msInternalTimers
 14509 ;;		_USBStallHandler
 14510 ;;		_USBSuspend
 14511 ;;		_USBWakeFromSuspend
 14512 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14513 ;;		i2_USBDeviceInit
 14514 ;; This function is called by:
 14515 ;;		_SYS_InterruptHigh
 14516 ;; This function uses a non-reentrant model
 14517 ;;
 14518                           
 14519                           	psect	text57
 14520  001F16                     __ptext57:
 14521                           	opt stack 0
 14522  001F16                     _USBDeviceTasks:
 14523                           	opt stack 16
 14524                           
 14525                           ;usb_device.c: 479: uint8_t i;
 14526                           ;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
 14527                           
 14528                           ;incstack = 0
 14529  001F16  0458               	decf	_USBDeviceState,w,c	;volatile
 14530  001F18  B4D8               	btfsc	status,2,c
 14531                           
 14532                           ;usb_device.c: 591: {
 14533                           ;usb_device.c: 601: if(!UCONbits.SE0)
 14534  001F1A  BA6D               	btfsc	3949,5,c	;volatile
 14535  001F1C  D006               	goto	i2l317
 14536                           
 14537                           ;usb_device.c: 602: {
 14538                           ;usb_device.c: 608: {UIR = 0;};
 14539  001F1E  0E00               	movlw	0
 14540  001F20  6E68               	movwf	3944,c	;volatile
 14541                           
 14542                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
 14543  001F22  8069               	bsf	3945,0,c	;volatile
 14544                           
 14545                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
 14546  001F24  8869               	bsf	3945,4,c	;volatile
 14547                           
 14548                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
 14549  001F26  0E02               	movlw	2
 14550  001F28  6E58               	movwf	_USBDeviceState,c	;volatile
 14551  001F2A                     i2l317:
 14552                           
 14553                           ;usb_device.c: 617: }
 14554                           ;usb_device.c: 618: }
 14555                           ;usb_device.c: 634: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 14556  001F2A  B468               	btfsc	3944,2,c	;volatile
 14557  001F2C  A469               	btfss	3945,2,c	;volatile
 14558  001F2E  D003               	goto	i2l318
 14559                           
 14560                           ;usb_device.c: 635: {
 14561                           ;usb_device.c: 636: (UIR &= 0xFB);
 14562  001F30  9468               	bcf	3944,2,c	;volatile
 14563                           
 14564                           ;usb_device.c: 640: USBWakeFromSuspend();
 14565  001F32  EC3C  F021         	call	_USBWakeFromSuspend	;wreg free
 14566  001F36                     i2l318:
 14567                           
 14568                           ;usb_device.c: 642: }
 14569                           ;usb_device.c: 647: if(UCONbits.SUSPND==1)
 14570  001F36  A26D               	btfss	3949,1,c	;volatile
 14571  001F38  D002               	goto	i2l319
 14572                           
 14573                           ;usb_device.c: 648: {
 14574                           ;usb_device.c: 649: {PIR2bits.USBIF = 0;};
 14575  001F3A  9AA1               	bcf	4001,5,c	;volatile
 14576                           
 14577                           ;usb_device.c: 650: return;
 14578  001F3C  0012               	return	
 14579  001F3E                     i2l319:
 14580                           
 14581                           ;usb_device.c: 651: }
 14582                           ;usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
 14583  001F3E  B068               	btfsc	3944,0,c	;volatile
 14584  001F40  A069               	btfss	3945,0,c	;volatile
 14585  001F42  D006               	goto	i2l321
 14586                           
 14587                           ;usb_device.c: 664: {
 14588                           ;usb_device.c: 665: USBDeviceInit();
 14589  001F44  EC51  F00E         	call	i2_USBDeviceInit	;wreg free
 14590                           
 14591                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
 14592  001F48  8AA0               	bsf	4000,5,c	;volatile
 14593                           
 14594                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
 14595  001F4A  0E04               	movlw	4
 14596  001F4C  6E58               	movwf	_USBDeviceState,c	;volatile
 14597                           
 14598                           ;usb_device.c: 681: (UIR &= 0xFE);
 14599  001F4E  9068               	bcf	3944,0,c	;volatile
 14600  001F50                     i2l321:
 14601                           
 14602                           ;usb_device.c: 682: }
 14603                           ;usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 14604  001F50  B868               	btfsc	3944,4,c	;volatile
 14605  001F52  A869               	btfss	3945,4,c	;volatile
 14606  001F54  D002               	goto	i2l322
 14607                           
 14608                           ;usb_device.c: 688: {
 14609                           ;usb_device.c: 694: USBSuspend();
 14610  001F56  EC9D  F021         	call	_USBSuspend	;wreg free
 14611  001F5A                     i2l322:
 14612                           
 14613                           ;usb_device.c: 696: }
 14614                           ;usb_device.c: 708: if(UIRbits.SOFIF)
 14615  001F5A  AC68               	btfss	3944,6,c	;volatile
 14616  001F5C  D01A               	goto	i2l326
 14617                           
 14618                           ;usb_device.c: 709: {
 14619                           ;usb_device.c: 711: if(UIEbits.SOFIE)
 14620  001F5E  AC69               	btfss	3945,6,c	;volatile
 14621  001F60  D00E               	goto	i2l324
 14622                           
 14623                           ;usb_device.c: 712: {
 14624                           ;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 14625  001F62  0E00               	movlw	0
 14626  001F64  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14627  001F66  0E73               	movlw	115
 14628  001F68  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14629  001F6A  0E00               	movlw	0
 14630  001F6C  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 14631  001F6E  0E00               	movlw	0
 14632  001F70  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 14633  001F72  0E00               	movlw	0
 14634  001F74  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14635  001F76  0E01               	movlw	1
 14636  001F78  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14637  001F7A  EC29  F01F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14638  001F7E                     i2l324:
 14639                           
 14640                           ;usb_device.c: 714: }
 14641                           ;usb_device.c: 715: (UIR &= 0xBF);
 14642  001F7E  9C68               	bcf	3944,6,c	;volatile
 14643                           
 14644                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
 14645  001F80  EC75  F022         	call	_USBIncrement1msInternalTimers	;wreg free
 14646                           
 14647                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 14648  001F84  5051               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 14649  001F86  A4D8               	btfss	status,2,c
 14650                           
 14651                           ;usb_device.c: 736: {
 14652                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 14653  001F88  0651               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 14654                           
 14655                           ;usb_device.c: 738: }
 14656                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 14657  001F8A  5051               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 14658  001F8C  B4D8               	btfsc	status,2,c
 14659                           
 14660                           ;usb_device.c: 745: {
 14661                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 14662  001F8E  ECB4  F018         	call	_USBCtrlEPAllowStatusStage	;wreg free
 14663  001F92                     i2l326:
 14664                           
 14665                           ;usb_device.c: 747: }
 14666                           ;usb_device.c: 749: }
 14667                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
 14668  001F92  BA68               	btfsc	3944,5,c	;volatile
 14669  001F94  AA69               	btfss	3945,5,c	;volatile
 14670  001F96  D002               	goto	i2l327
 14671                           
 14672                           ;usb_device.c: 752: {
 14673                           ;usb_device.c: 753: USBStallHandler();
 14674  001F98  EC8B  F020         	call	_USBStallHandler	;wreg free
 14675  001F9C                     i2l327:
 14676                           
 14677                           ;usb_device.c: 754: }
 14678                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 14679  001F9C  B268               	btfsc	3944,1,c	;volatile
 14680  001F9E  A269               	btfss	3945,1,c	;volatile
 14681  001FA0  D00F               	goto	i2l328
 14682                           
 14683                           ;usb_device.c: 757: {
 14684                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 14685  001FA2  0E7F               	movlw	127
 14686  001FA4  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14687  001FA6  680D               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14688  001FA8  0E00               	movlw	0
 14689  001FAA  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 14690  001FAC  0E00               	movlw	0
 14691  001FAE  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 14692  001FB0  0E00               	movlw	0
 14693  001FB2  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14694  001FB4  0E01               	movlw	1
 14695  001FB6  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14696  001FB8  EC29  F01F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14697                           
 14698                           ;usb_device.c: 759: {UEIR = 0;};
 14699  001FBC  0E00               	movlw	0
 14700  001FBE  6E6A               	movwf	3946,c	;volatile
 14701  001FC0                     i2l328:
 14702                           
 14703                           ;usb_device.c: 767: }
 14704                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 14705  001FC0  0E04               	movlw	4
 14706  001FC2  6058               	cpfslt	_USBDeviceState,c	;volatile
 14707  001FC4  D002               	goto	i2l329
 14708                           
 14709                           ;usb_device.c: 775: {
 14710                           ;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 14711  001FC6  9AA1               	bcf	4001,5,c	;volatile
 14712                           
 14713                           ;usb_device.c: 777: return;
 14714  001FC8  0012               	return	
 14715  001FCA                     i2l329:
 14716                           
 14717                           ;usb_device.c: 778: }
 14718                           ;usb_device.c: 783: if(UIEbits.TRNIE)
 14719  001FCA  A669               	btfss	3945,3,c	;volatile
 14720  001FCC  D039               	goto	i2u807_40
 14721                           
 14722                           ;usb_device.c: 784: {
 14723                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
 14724  001FCE  0E00               	movlw	0
 14725  001FD0  6E1C               	movwf	USBDeviceTasks@i,c
 14726  001FD2                     i2l8377:
 14727  001FD2  0E03               	movlw	3
 14728  001FD4  641C               	cpfsgt	USBDeviceTasks@i,c
 14729  001FD6  D001               	goto	i2l331
 14730  001FD8  D033               	goto	i2u807_40
 14731  001FDA                     i2l331:
 14732                           
 14733                           ;usb_device.c: 786: {
 14734                           ;usb_device.c: 787: if(UIRbits.TRNIF)
 14735  001FDA  A668               	btfss	3944,3,c	;volatile
 14736  001FDC  D031               	goto	i2u807_40
 14737                           
 14738                           ;usb_device.c: 788: {
 14739                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
 14740  001FDE  CF6C F05D          	movff	3948,_USTATcopy	;volatile
 14741                           
 14742                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 14743  001FE2  305D               	rrcf	_USTATcopy,w,c	;volatile
 14744  001FE4  32E8               	rrcf	wreg,f,c
 14745  001FE6  32E8               	rrcf	wreg,f,c
 14746  001FE8  0B0F               	andlw	15
 14747  001FEA  6E53               	movwf	_endpoint_number,c	;volatile
 14748                           
 14749                           ;usb_device.c: 793: (UIR &= 0xF7);
 14750  001FEC  9668               	bcf	3944,3,c	;volatile
 14751                           
 14752                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 14753  001FEE  B45D               	btfsc	_USTATcopy,2,c	;volatile
 14754  001FF0  D007               	goto	i2l334
 14755                           
 14756                           ;usb_device.c: 799: {
 14757                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 14758  001FF2  5053               	movf	_endpoint_number,w,c	;volatile
 14759  001FF4  0D01               	mullw	1
 14760  001FF6  0EEB               	movlw	low _ep_data_out
 14761  001FF8  24F3               	addwf	prodl,w,c
 14762  001FFA  6ED9               	movwf	fsr2l,c
 14763  001FFC  0E01               	movlw	high _ep_data_out
 14764  001FFE  D006               	goto	L12
 14765  002000                     i2l334:
 14766                           
 14767                           ;usb_device.c: 802: else
 14768                           ;usb_device.c: 803: {
 14769                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 14770                           
 14771                           ; BSR set to: 1
 14772  002000  5053               	movf	_endpoint_number,w,c	;volatile
 14773  002002  0D01               	mullw	1
 14774  002004  0EEE               	movlw	low _ep_data_in
 14775  002006  24F3               	addwf	prodl,w,c
 14776  002008  6ED9               	movwf	fsr2l,c
 14777  00200A  0E01               	movlw	high _ep_data_in
 14778  00200C                     L12:
 14779  00200C  20F4               	addwfc	prodh,w,c
 14780  00200E  6EDA               	movwf	fsr2h,c
 14781  002010  0101               	movlb	1	; () banked
 14782  002012  70DF               	btg	indf2,0,c
 14783                           
 14784                           ; BSR set to: 1
 14785                           ;usb_device.c: 805: }
 14786                           ;usb_device.c: 810: if(endpoint_number == 0)
 14787                           
 14788                           ; BSR set to: 1
 14789  002014  5053               	movf	_endpoint_number,w,c	;volatile
 14790  002016  A4D8               	btfss	status,2,c
 14791  002018  D003               	goto	i2l336
 14792                           
 14793                           ; BSR set to: 1
 14794                           ;usb_device.c: 811: {
 14795                           ;usb_device.c: 812: USBCtrlEPService();
 14796  00201A  ECBB  F01B         	call	_USBCtrlEPService	;wreg free
 14797                           
 14798                           ;usb_device.c: 813: }
 14799  00201E  D00E               	goto	i2l338
 14800  002020                     i2l336:
 14801                           
 14802                           ;usb_device.c: 814: else
 14803                           ;usb_device.c: 815: {
 14804                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 14805  002020  0E00               	movlw	0
 14806  002022  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14807  002024  0E72               	movlw	114
 14808  002026  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14809  002028  0E5D               	movlw	low _USTATcopy
 14810  00202A  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 14811  00202C  0E00               	movlw	high _USTATcopy
 14812  00202E  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 14813  002030  0E00               	movlw	0
 14814  002032  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14815  002034  0E00               	movlw	0
 14816  002036  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14817  002038  EC29  F01F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14818  00203C                     i2l338:
 14819  00203C  2A1C               	incf	USBDeviceTasks@i,f,c
 14820  00203E  D7C9               	goto	i2l8377
 14821  002040                     i2u807_40:
 14822                           
 14823                           ;usb_device.c: 822: }
 14824                           ;usb_device.c: 823: }
 14825                           ;usb_device.c: 824: }
 14826                           ;usb_device.c: 826: {PIR2bits.USBIF = 0;};
 14827  002040  9AA1               	bcf	4001,5,c	;volatile
 14828  002042  0012               	return		;funcret
 14829  002044                     __end_of_USBDeviceTasks:
 14830                           	opt stack 0
 14831                           pclatu	equ	0xFFB
 14832                           pclath	equ	0xFFA
 14833                           tblptru	equ	0xFF8
 14834                           tblptrh	equ	0xFF7
 14835                           tblptrl	equ	0xFF6
 14836                           tablat	equ	0xFF5
 14837                           prodh	equ	0xFF4
 14838                           prodl	equ	0xFF3
 14839                           intcon	equ	0xFF2
 14840                           indf0	equ	0xFEF
 14841                           postinc0	equ	0xFEE
 14842                           fsr0h	equ	0xFEA
 14843                           fsr0l	equ	0xFE9
 14844                           wreg	equ	0xFE8
 14845                           indf1	equ	0xFE7
 14846                           postdec1	equ	0xFE5
 14847                           fsr1h	equ	0xFE2
 14848                           fsr1l	equ	0xFE1
 14849                           indf2	equ	0xFDF
 14850                           postinc2	equ	0xFDE
 14851                           postdec2	equ	0xFDD
 14852                           plusw2	equ	0xFDB
 14853                           fsr2h	equ	0xFDA
 14854                           fsr2l	equ	0xFD9
 14855                           status	equ	0xFD8
 14856                           
 14857 ;; *************** function i2_USBDeviceInit *****************
 14858 ;; Defined at:
 14859 ;;		line 277 in file "../../../../microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 14860 ;; Parameters:    Size  Location     Type
 14861 ;;		None
 14862 ;; Auto vars:     Size  Location     Type
 14863 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 14864 ;; Return value:  Size  Location     Type
 14865 ;;                  1    wreg      void 
 14866 ;; Registers used:
 14867 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14868 ;; Tracked objects:
 14869 ;;		On entry : 0/0
 14870 ;;		On exit  : 0/0
 14871 ;;		Unchanged: 0/0
 14872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14873 ;;      Params:         0       0       0       0       0       0       0       0       0
 14874 ;;      Locals:         1       0       0       0       0       0       0       0       0
 14875 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14876 ;;      Totals:         1       0       0       0       0       0       0       0       0
 14877 ;;Total ram usage:        1 bytes
 14878 ;; Hardware stack levels used:    1
 14879 ;; Hardware stack levels required when called:    1
 14880 ;; This function calls:
 14881 ;;		i2_memset
 14882 ;; This function is called by:
 14883 ;;		_USBDeviceTasks
 14884 ;; This function uses a non-reentrant model
 14885 ;;
 14886                           
 14887                           	psect	text58
 14888  001CA2                     __ptext58:
 14889                           	opt stack 0
 14890  001CA2                     i2_USBDeviceInit:
 14891                           	opt stack 22
 14892                           
 14893                           ;usb_device.c: 279: uint8_t i;
 14894                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 14895                           
 14896                           ;incstack = 0
 14897  001CA2  9AA0               	bcf	4000,5,c	;volatile
 14898                           
 14899                           ;usb_device.c: 285: ;
 14900                           ;usb_device.c: 288: {UEIR = 0;};
 14901  001CA4  0E00               	movlw	0
 14902  001CA6  6E6A               	movwf	3946,c	;volatile
 14903                           
 14904                           ;usb_device.c: 291: {UIR = 0;};
 14905  001CA8  0E00               	movlw	0
 14906  001CAA  6E68               	movwf	3944,c	;volatile
 14907                           
 14908                           ;usb_device.c: 294: UEP0 = 0;
 14909  001CAC  0E00               	movlw	0
 14910  001CAE  6E70               	movwf	3952,c	;volatile
 14911                           
 14912                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 14913  001CB0  0E71               	movlw	113
 14914  001CB2  6E01               	movwf	i2memset@p1,c
 14915  001CB4  0E0F               	movlw	15
 14916  001CB6  6E02               	movwf	i2memset@p1+1,c
 14917  001CB8  0E00               	movlw	0
 14918  001CBA  6E04               	movwf	i2memset@c+1,c
 14919  001CBC  0E00               	movlw	0
 14920  001CBE  6E03               	movwf	i2memset@c,c
 14921  001CC0  0E00               	movlw	0
 14922  001CC2  6E06               	movwf	i2memset@n+1,c
 14923  001CC4  0E02               	movlw	2
 14924  001CC6  6E05               	movwf	i2memset@n,c
 14925  001CC8  ECCA  F021         	call	i2_memset	;wreg free
 14926                           
 14927                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 14928  001CCC  0E16               	movlw	22
 14929  001CCE  6E6F               	movwf	3951,c	;volatile
 14930  001CD0  0E9F               	movlw	159
 14931  001CD2  6E6B               	movwf	3947,c	;volatile
 14932  001CD4  0E7B               	movlw	123
 14933  001CD6  6E69               	movwf	3945,c	;volatile
 14934                           
 14935                           ;usb_device.c: 301: ;
 14936                           ;usb_device.c: 304: ;
 14937                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
 14938  001CD8  0E00               	movlw	0
 14939  001CDA  6E09               	movwf	i2USBDeviceInit@i,c
 14940  001CDC                     i2l8135:
 14941  001CDC  0E0B               	movlw	11
 14942  001CDE  6409               	cpfsgt	i2USBDeviceInit@i,c
 14943  001CE0  D001               	goto	i2l307
 14944  001CE2  D00E               	goto	i2u763_40
 14945  001CE4                     i2l307:
 14946                           
 14947                           ;usb_device.c: 308: {
 14948                           ;usb_device.c: 309: BDT[i].Val = 0x00;
 14949  001CE4  5009               	movf	i2USBDeviceInit@i,w,c
 14950  001CE6  0D04               	mullw	4
 14951  001CE8  0E00               	movlw	0
 14952  001CEA  24F3               	addwf	prodl,w,c
 14953  001CEC  6ED9               	movwf	fsr2l,c
 14954  001CEE  0E04               	movlw	4
 14955  001CF0  20F4               	addwfc	prodh,w,c
 14956  001CF2  6EDA               	movwf	fsr2h,c
 14957  001CF4  6ADE               	clrf	postinc2,c
 14958  001CF6  6ADE               	clrf	postinc2,c
 14959  001CF8  6ADE               	clrf	postinc2,c
 14960  001CFA  6ADD               	clrf	postdec2,c
 14961  001CFC  2A09               	incf	i2USBDeviceInit@i,f,c
 14962  001CFE  D7EE               	goto	i2l8135
 14963  001D00                     i2u763_40:
 14964                           
 14965                           ;usb_device.c: 310: }
 14966                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
 14967  001D00  8C6D               	bsf	3949,6,c	;volatile
 14968                           
 14969                           ;usb_device.c: 316: UADDR = 0x00;
 14970  001D02  0E00               	movlw	0
 14971  001D04  6E6E               	movwf	3950,c	;volatile
 14972                           
 14973                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 14974  001D06  986D               	bcf	3949,4,c	;volatile
 14975                           
 14976                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 14977  001D08  9C6D               	bcf	3949,6,c	;volatile
 14978  001D0A                     
 14979                           ;usb_device.c: 326: {
 14980                           ;usb_device.c: 327: (UIR &= 0xF7);
 14981  001D0A  9668               	bcf	3944,3,c	;volatile
 14982                           
 14983                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 14984  001D0C  0E00               	movlw	0
 14985  001D0E  0100               	movlb	0	; () banked
 14986  001D10  6FFA               	movwf	(_inPipes+3)& (0+255),b	;volatile
 14987                           
 14988                           ; BSR set to: 0
 14989                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 14990  001D12  0E00               	movlw	0
 14991  001D14  6E35               	movwf	_outPipes+3,c	;volatile
 14992                           
 14993                           ; BSR set to: 0
 14994                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 14995  001D16  0E00               	movlw	0
 14996  001D18  6E37               	movwf	_outPipes+5,c	;volatile
 14997  001D1A  0E00               	movlw	0
 14998  001D1C  6E36               	movwf	_outPipes+4,c	;volatile
 14999                           
 15000                           ; BSR set to: 0
 15001                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 15002  001D1E  B668               	btfsc	3944,3,c	;volatile
 15003  001D20  D7F4               	goto	i2l309
 15004                           
 15005                           ; BSR set to: 0
 15006                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 15007                           
 15008                           ; BSR set to: 0
 15009  001D22  0E01               	movlw	1
 15010  001D24  6E4F               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 15011                           
 15012                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 15013  001D26  0E01               	movlw	1
 15014  001D28  6E4E               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 15015                           
 15016                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 15017  001D2A  0E00               	movlw	0
 15018  001D2C  0101               	movlb	1	; () banked
 15019  001D2E  6FF7               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 15020                           
 15021                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 15022  001D30  0E00               	movlw	0
 15023  001D32  6FF6               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 15024                           
 15025                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 15026  001D34  0E00               	movlw	0
 15027  001D36  6E54               	movwf	_USBBusIsSuspended,c	;volatile
 15028                           
 15029                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 15030  001D38  0E00               	movlw	0
 15031  001D3A  6E09               	movwf	i2USBDeviceInit@i,c
 15032  001D3C                     i2l8163:
 15033                           
 15034                           ; BSR set to: 1
 15035  001D3C  0E02               	movlw	2
 15036  001D3E  6409               	cpfsgt	i2USBDeviceInit@i,c
 15037  001D40  D001               	goto	i2l311
 15038  001D42  D02E               	goto	i2u766_40
 15039  001D44                     i2l311:
 15040                           
 15041                           ;usb_device.c: 346: {
 15042                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 15043                           
 15044                           ; BSR set to: 1
 15045  001D44  5009               	movf	i2USBDeviceInit@i,w,c
 15046  001D46  0D02               	mullw	2
 15047  001D48  0E3A               	movlw	low _pBDTEntryIn
 15048  001D4A  24F3               	addwf	prodl,w,c
 15049  001D4C  6ED9               	movwf	fsr2l,c
 15050  001D4E  0E00               	movlw	high _pBDTEntryIn
 15051  001D50  20F4               	addwfc	prodh,w,c
 15052  001D52  6EDA               	movwf	fsr2h,c
 15053  001D54  0E00               	movlw	0
 15054  001D56  6EDE               	movwf	postinc2,c
 15055  001D58  0E00               	movlw	0
 15056  001D5A  6EDD               	movwf	postdec2,c
 15057                           
 15058                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 15059  001D5C  5009               	movf	i2USBDeviceInit@i,w,c
 15060  001D5E  0D02               	mullw	2
 15061  001D60  0E1E               	movlw	low _pBDTEntryOut
 15062  001D62  24F3               	addwf	prodl,w,c
 15063  001D64  6ED9               	movwf	fsr2l,c
 15064  001D66  0E02               	movlw	high _pBDTEntryOut
 15065  001D68  20F4               	addwfc	prodh,w,c
 15066  001D6A  6EDA               	movwf	fsr2h,c
 15067  001D6C  0E00               	movlw	0
 15068  001D6E  6EDE               	movwf	postinc2,c
 15069  001D70  0E00               	movlw	0
 15070  001D72  6EDD               	movwf	postdec2,c
 15071                           
 15072                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 15073  001D74  5009               	movf	i2USBDeviceInit@i,w,c
 15074  001D76  0D01               	mullw	1
 15075  001D78  0EEE               	movlw	low _ep_data_in
 15076  001D7A  24F3               	addwf	prodl,w,c
 15077  001D7C  6ED9               	movwf	fsr2l,c
 15078  001D7E  0E01               	movlw	high _ep_data_in
 15079  001D80  20F4               	addwfc	prodh,w,c
 15080  001D82  6EDA               	movwf	fsr2h,c
 15081  001D84  0E00               	movlw	0
 15082  001D86  6EDF               	movwf	indf2,c
 15083                           
 15084                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 15085  001D88  5009               	movf	i2USBDeviceInit@i,w,c
 15086  001D8A  0D01               	mullw	1
 15087  001D8C  0EEB               	movlw	low _ep_data_out
 15088  001D8E  24F3               	addwf	prodl,w,c
 15089  001D90  6ED9               	movwf	fsr2l,c
 15090  001D92  0E01               	movlw	high _ep_data_out
 15091  001D94  20F4               	addwfc	prodh,w,c
 15092  001D96  6EDA               	movwf	fsr2h,c
 15093  001D98  0E00               	movlw	0
 15094  001D9A  6EDF               	movwf	indf2,c
 15095  001D9C  2A09               	incf	i2USBDeviceInit@i,f,c
 15096  001D9E  D7CE               	goto	i2l8163
 15097  001DA0                     i2u766_40:
 15098                           
 15099                           ;usb_device.c: 351: }
 15100                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 15101  001DA0  0E08               	movlw	8
 15102  001DA2  6E3A               	movwf	_pBDTEntryIn,c
 15103  001DA4  0E04               	movlw	4
 15104  001DA6  6E3B               	movwf	_pBDTEntryIn+1,c
 15105                           
 15106                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 15107  001DA8  0E16               	movlw	22
 15108  001DAA  6E70               	movwf	3952,c	;volatile
 15109                           
 15110                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 15111  001DAC  0E04               	movlw	4
 15112  001DAE  0104               	movlb	4	; () banked
 15113  001DB0  6F03               	movwf	3,b	;volatile
 15114  001DB2  0E30               	movlw	48
 15115  001DB4  6F02               	movwf	2,b	;volatile
 15116                           
 15117                           ; BSR set to: 4
 15118                           ;usb_device.c: 359: BDT[0].CNT = 8;
 15119  001DB6  0E08               	movlw	8
 15120  001DB8  6F01               	movwf	1,b	;volatile
 15121                           
 15122                           ; BSR set to: 4
 15123                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 15124  001DBA  0E04               	movlw	4
 15125  001DBC  6F00               	movwf	0,b	;volatile
 15126                           
 15127                           ; BSR set to: 4
 15128                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 15129  001DBE  8F00               	bsf	0,7,b	;volatile
 15130                           
 15131                           ; BSR set to: 4
 15132                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 15133  001DC0  0E00               	movlw	0
 15134  001DC2  6E5E               	movwf	_USBActiveConfiguration,c	;volatile
 15135                           
 15136                           ; BSR set to: 4
 15137                           ;usb_device.c: 366: USB1msTickCount = 0;
 15138  001DC4  0E00               	movlw	0
 15139  001DC6  0102               	movlb	2	; () banked
 15140  001DC8  6F28               	movwf	_USB1msTickCount& (0+255),b	;volatile
 15141  001DCA  0E00               	movlw	0
 15142  001DCC  6F29               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
 15143  001DCE  0E00               	movlw	0
 15144  001DD0  6F2A               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
 15145  001DD2  0E00               	movlw	0
 15146  001DD4  6F2B               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
 15147                           
 15148                           ; BSR set to: 2
 15149                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 15150  001DD6  0E00               	movlw	0
 15151  001DD8  0101               	movlb	1	; () banked
 15152  001DDA  6FF5               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 15153                           
 15154                           ; BSR set to: 1
 15155                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 15156  001DDC  0E00               	movlw	0
 15157  001DDE  6E58               	movwf	_USBDeviceState,c	;volatile
 15158                           
 15159                           ; BSR set to: 1
 15160  001DE0  0012               	return		;funcret
 15161  001DE2                     __end_ofi2_USBDeviceInit:
 15162                           	opt stack 0
 15163                           pclatu	equ	0xFFB
 15164                           pclath	equ	0xFFA
 15165                           tblptru	equ	0xFF8
 15166                           tblptrh	equ	0xFF7
 15167                           tblptrl	equ	0xFF6
 15168                           tablat	equ	0xFF5
 15169                           prodh	equ	0xFF4
 15170                           prodl	equ	0xFF3
 15171                           intcon	equ	0xFF2
 15172                           indf0	equ	0xFEF
 15173                           postinc0	equ	0xFEE
 15174                           fsr0h	equ	0xFEA
 15175                           fsr0l	equ	0xFE9
 15176                           wreg	equ	0xFE8
 15177                           indf1	equ	0xFE7
 15178                           postdec1	equ	0xFE5
 15179                           fsr1h	equ	0xFE2
 15180                           fsr1l	equ	0xFE1
 15181                           indf2	equ	0xFDF
 15182                           postinc2	equ	0xFDE
 15183                           postdec2	equ	0xFDD
 15184                           plusw2	equ	0xFDB
 15185                           fsr2h	equ	0xFDA
 15186                           fsr2l	equ	0xFD9
 15187                           status	equ	0xFD8
 15188                           
 15189 ;; *************** function _USBWakeFromSuspend *****************
 15190 ;; Defined at:
 15191 ;;		line 2303 in file "../../../../microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 15192 ;; Parameters:    Size  Location     Type
 15193 ;;		None
 15194 ;; Auto vars:     Size  Location     Type
 15195 ;;		None
 15196 ;; Return value:  Size  Location     Type
 15197 ;;                  1    wreg      void 
 15198 ;; Registers used:
 15199 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15200 ;; Tracked objects:
 15201 ;;		On entry : 0/0
 15202 ;;		On exit  : 0/0
 15203 ;;		Unchanged: 0/0
 15204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15205 ;;      Params:         0       0       0       0       0       0       0       0       0
 15206 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15207 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15208 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15209 ;;Total ram usage:        0 bytes
 15210 ;; Hardware stack levels used:    1
 15211 ;; Hardware stack levels required when called:    4
 15212 ;; This function calls:
 15213 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15214 ;; This function is called by:
 15215 ;;		_USBDeviceTasks
 15216 ;; This function uses a non-reentrant model
 15217 ;;
 15218                           
 15219                           	psect	text59
 15220  004278                     __ptext59:
 15221                           	opt stack 0
 15222  004278                     _USBWakeFromSuspend:
 15223                           	opt stack 19
 15224                           
 15225                           ;usb_device.c: 2305: USBBusIsSuspended = 0;
 15226                           
 15227                           ; BSR set to: 1
 15228                           ;incstack = 0
 15229  004278  0E00               	movlw	0
 15230  00427A  6E54               	movwf	_USBBusIsSuspended,c	;volatile
 15231                           
 15232                           ;usb_device.c: 2311: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 15233  00427C  0E00               	movlw	0
 15234  00427E  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15235  004280  0E74               	movlw	116
 15236  004282  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15237  004284  0E00               	movlw	0
 15238  004286  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 15239  004288  0E00               	movlw	0
 15240  00428A  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 15241  00428C  0E00               	movlw	0
 15242  00428E  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15243  004290  0E00               	movlw	0
 15244  004292  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15245  004294  EC29  F01F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15246                           
 15247                           ;usb_device.c: 2318: UCONbits.SUSPND = 0;
 15248  004298  926D               	bcf	3949,1,c	;volatile
 15249                           
 15250                           ;usb_device.c: 2323: UIEbits.ACTVIE = 0;
 15251  00429A  9469               	bcf	3945,2,c	;volatile
 15252                           
 15253                           ;usb_device.c: 2341: while(UIRbits.ACTVIF)
 15254  00429C  D001               	goto	i2l477
 15255  00429E                     
 15256                           ;usb_device.c: 2343: {
 15257                           ;usb_device.c: 2344: (UIR &= 0xFB);
 15258  00429E  9468               	bcf	3944,2,c	;volatile
 15259  0042A0                     i2l477:
 15260  0042A0  B468               	btfsc	3944,2,c	;volatile
 15261  0042A2  D7FD               	goto	i2l478
 15262                           
 15263                           ;usb_device.c: 2345: }
 15264                           ;usb_device.c: 2347: USBTicksSinceSuspendEnd = 0;
 15265  0042A4  0E00               	movlw	0
 15266  0042A6  0101               	movlb	1	; () banked
 15267  0042A8  6FF5               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 15268                           
 15269                           ; BSR set to: 1
 15270  0042AA  0012               	return		;funcret
 15271  0042AC                     __end_of_USBWakeFromSuspend:
 15272                           	opt stack 0
 15273                           pclatu	equ	0xFFB
 15274                           pclath	equ	0xFFA
 15275                           tblptru	equ	0xFF8
 15276                           tblptrh	equ	0xFF7
 15277                           tblptrl	equ	0xFF6
 15278                           tablat	equ	0xFF5
 15279                           prodh	equ	0xFF4
 15280                           prodl	equ	0xFF3
 15281                           intcon	equ	0xFF2
 15282                           indf0	equ	0xFEF
 15283                           postinc0	equ	0xFEE
 15284                           fsr0h	equ	0xFEA
 15285                           fsr0l	equ	0xFE9
 15286                           wreg	equ	0xFE8
 15287                           indf1	equ	0xFE7
 15288                           postdec1	equ	0xFE5
 15289                           fsr1h	equ	0xFE2
 15290                           fsr1l	equ	0xFE1
 15291                           indf2	equ	0xFDF
 15292                           postinc2	equ	0xFDE
 15293                           postdec2	equ	0xFDD
 15294                           plusw2	equ	0xFDB
 15295                           fsr2h	equ	0xFDA
 15296                           fsr2l	equ	0xFD9
 15297                           status	equ	0xFD8
 15298                           
 15299 ;; *************** function _USBSuspend *****************
 15300 ;; Defined at:
 15301 ;;		line 2245 in file "../../../../microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 15302 ;; Parameters:    Size  Location     Type
 15303 ;;		None
 15304 ;; Auto vars:     Size  Location     Type
 15305 ;;		None
 15306 ;; Return value:  Size  Location     Type
 15307 ;;                  1    wreg      void 
 15308 ;; Registers used:
 15309 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15310 ;; Tracked objects:
 15311 ;;		On entry : 0/0
 15312 ;;		On exit  : 0/0
 15313 ;;		Unchanged: 0/0
 15314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15315 ;;      Params:         0       0       0       0       0       0       0       0       0
 15316 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15317 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15318 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15319 ;;Total ram usage:        0 bytes
 15320 ;; Hardware stack levels used:    1
 15321 ;; Hardware stack levels required when called:    4
 15322 ;; This function calls:
 15323 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15324 ;; This function is called by:
 15325 ;;		_USBDeviceTasks
 15326 ;; This function uses a non-reentrant model
 15327 ;;
 15328                           
 15329                           	psect	text60
 15330  00433A                     __ptext60:
 15331                           	opt stack 0
 15332  00433A                     _USBSuspend:
 15333                           	opt stack 19
 15334                           
 15335                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
 15336                           
 15337                           ; BSR set to: 1
 15338                           ;incstack = 0
 15339  00433A  8469               	bsf	3945,2,c	;volatile
 15340                           
 15341                           ;usb_device.c: 2271: (UIR &= 0xEF);
 15342  00433C  9868               	bcf	3944,4,c	;volatile
 15343                           
 15344                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
 15345  00433E  826D               	bsf	3949,1,c	;volatile
 15346                           
 15347                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
 15348  004340  0E01               	movlw	1
 15349  004342  6E54               	movwf	_USBBusIsSuspended,c	;volatile
 15350                           
 15351                           ;usb_device.c: 2278: USBTicksSinceSuspendEnd = 0;
 15352  004344  0E00               	movlw	0
 15353  004346  0101               	movlb	1	; () banked
 15354  004348  6FF5               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 15355                           
 15356                           ; BSR set to: 1
 15357                           ;usb_device.c: 2285: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 15358  00434A  0E00               	movlw	0
 15359  00434C  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15360  00434E  0E75               	movlw	117
 15361  004350  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15362  004352  0E00               	movlw	0
 15363  004354  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 15364  004356  0E00               	movlw	0
 15365  004358  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 15366  00435A  0E00               	movlw	0
 15367  00435C  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15368  00435E  0E00               	movlw	0
 15369  004360  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15370  004362  EC29  F01F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15371  004366  0012               	return		;funcret
 15372  004368                     __end_of_USBSuspend:
 15373                           	opt stack 0
 15374                           pclatu	equ	0xFFB
 15375                           pclath	equ	0xFFA
 15376                           tblptru	equ	0xFF8
 15377                           tblptrh	equ	0xFF7
 15378                           tblptrl	equ	0xFF6
 15379                           tablat	equ	0xFF5
 15380                           prodh	equ	0xFF4
 15381                           prodl	equ	0xFF3
 15382                           intcon	equ	0xFF2
 15383                           indf0	equ	0xFEF
 15384                           postinc0	equ	0xFEE
 15385                           fsr0h	equ	0xFEA
 15386                           fsr0l	equ	0xFE9
 15387                           wreg	equ	0xFE8
 15388                           indf1	equ	0xFE7
 15389                           postdec1	equ	0xFE5
 15390                           fsr1h	equ	0xFE2
 15391                           fsr1l	equ	0xFE1
 15392                           indf2	equ	0xFDF
 15393                           postinc2	equ	0xFDE
 15394                           postdec2	equ	0xFDD
 15395                           plusw2	equ	0xFDB
 15396                           fsr2h	equ	0xFDA
 15397                           fsr2l	equ	0xFD9
 15398                           status	equ	0xFD8
 15399                           
 15400 ;; *************** function _USBStallHandler *****************
 15401 ;; Defined at:
 15402 ;;		line 2202 in file "../../../../microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 15403 ;; Parameters:    Size  Location     Type
 15404 ;;		None
 15405 ;; Auto vars:     Size  Location     Type
 15406 ;;		None
 15407 ;; Return value:  Size  Location     Type
 15408 ;;                  1    wreg      void 
 15409 ;; Registers used:
 15410 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15411 ;; Tracked objects:
 15412 ;;		On entry : 0/0
 15413 ;;		On exit  : 0/0
 15414 ;;		Unchanged: 0/0
 15415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15416 ;;      Params:         0       0       0       0       0       0       0       0       0
 15417 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15418 ;;      Temps:          1       0       0       0       0       0       0       0       0
 15419 ;;      Totals:         1       0       0       0       0       0       0       0       0
 15420 ;;Total ram usage:        1 bytes
 15421 ;; Hardware stack levels used:    1
 15422 ;; This function calls:
 15423 ;;		Nothing
 15424 ;; This function is called by:
 15425 ;;		_USBDeviceTasks
 15426 ;; This function uses a non-reentrant model
 15427 ;;
 15428                           
 15429                           	psect	text61
 15430  004116                     __ptext61:
 15431                           	opt stack 0
 15432  004116                     _USBStallHandler:
 15433                           	opt stack 23
 15434                           
 15435                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
 15436                           
 15437                           ;incstack = 0
 15438  004116  A070               	btfss	3952,0,c	;volatile
 15439  004118  D01D               	goto	i2l469
 15440                           
 15441                           ;usb_device.c: 2215: {
 15442                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 15443  00411A  C04A  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 15444  00411E  C04B  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 15445  004122  0E80               	movlw	128
 15446  004124  18DE               	xorwf	postinc2,w,c
 15447  004126  A4D8               	btfss	status,2,c
 15448  004128  D014               	goto	i2l470
 15449  00412A  C03A  FFD9         	movff	_pBDTEntryIn,fsr2l
 15450  00412E  C03B  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 15451  004132  0E84               	movlw	132
 15452  004134  18DE               	xorwf	postinc2,w,c
 15453  004136  A4D8               	btfss	status,2,c
 15454  004138  D00C               	goto	i2l470
 15455                           
 15456                           ;usb_device.c: 2218: {
 15457                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 15458  00413A  C04A  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 15459  00413E  C04B  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 15460  004142  0E0C               	movlw	12
 15461  004144  6EDF               	movwf	indf2,c
 15462                           
 15463                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 15464  004146  C04A  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 15465  00414A  C04B  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 15466  00414E  0E00               	movlw	0
 15467  004150  8EDB               	bsf	plusw2,7,c
 15468  004152                     i2l470:
 15469                           
 15470                           ;usb_device.c: 2222: }
 15471                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
 15472  004152  9070               	bcf	3952,0,c	;volatile
 15473  004154                     i2l469:
 15474                           
 15475                           ;usb_device.c: 2224: }
 15476                           ;usb_device.c: 2226: (UIR &= 0xDF);
 15477  004154  9A68               	bcf	3944,5,c	;volatile
 15478  004156  0012               	return		;funcret
 15479  004158                     __end_of_USBStallHandler:
 15480                           	opt stack 0
 15481                           pclatu	equ	0xFFB
 15482                           pclath	equ	0xFFA
 15483                           tblptru	equ	0xFF8
 15484                           tblptrh	equ	0xFF7
 15485                           tblptrl	equ	0xFF6
 15486                           tablat	equ	0xFF5
 15487                           prodh	equ	0xFF4
 15488                           prodl	equ	0xFF3
 15489                           intcon	equ	0xFF2
 15490                           indf0	equ	0xFEF
 15491                           postinc0	equ	0xFEE
 15492                           fsr0h	equ	0xFEA
 15493                           fsr0l	equ	0xFE9
 15494                           wreg	equ	0xFE8
 15495                           indf1	equ	0xFE7
 15496                           postdec1	equ	0xFE5
 15497                           fsr1h	equ	0xFE2
 15498                           fsr1l	equ	0xFE1
 15499                           indf2	equ	0xFDF
 15500                           postinc2	equ	0xFDE
 15501                           postdec2	equ	0xFDD
 15502                           plusw2	equ	0xFDB
 15503                           fsr2h	equ	0xFDA
 15504                           fsr2l	equ	0xFD9
 15505                           status	equ	0xFD8
 15506                           
 15507 ;; *************** function _USBIncrement1msInternalTimers *****************
 15508 ;; Defined at:
 15509 ;;		line 3025 in file "../../../../microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 15510 ;; Parameters:    Size  Location     Type
 15511 ;;		None
 15512 ;; Auto vars:     Size  Location     Type
 15513 ;;		None
 15514 ;; Return value:  Size  Location     Type
 15515 ;;                  1    wreg      void 
 15516 ;; Registers used:
 15517 ;;		wreg, status,2, status,0
 15518 ;; Tracked objects:
 15519 ;;		On entry : 0/0
 15520 ;;		On exit  : 0/0
 15521 ;;		Unchanged: 0/0
 15522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15523 ;;      Params:         0       0       0       0       0       0       0       0       0
 15524 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15525 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15526 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15527 ;;Total ram usage:        0 bytes
 15528 ;; Hardware stack levels used:    1
 15529 ;; This function calls:
 15530 ;;		Nothing
 15531 ;; This function is called by:
 15532 ;;		_USBDeviceTasks
 15533 ;; This function uses a non-reentrant model
 15534 ;;
 15535                           
 15536                           	psect	text62
 15537  0044EA                     __ptext62:
 15538                           	opt stack 0
 15539  0044EA                     _USBIncrement1msInternalTimers:
 15540                           	opt stack 23
 15541                           
 15542                           ;usb_device.c: 3033: USB1msTickCount++;
 15543                           
 15544                           ;incstack = 0
 15545  0044EA  0E01               	movlw	1
 15546  0044EC  0102               	movlb	2	; () banked
 15547  0044EE  2728               	addwf	_USB1msTickCount& (0+255),f,b	;volatile
 15548  0044F0  0E00               	movlw	0
 15549  0044F2  2329               	addwfc	(_USB1msTickCount+1)& (0+255),f,b	;volatile
 15550  0044F4  232A               	addwfc	(_USB1msTickCount+2)& (0+255),f,b	;volatile
 15551  0044F6  232B               	addwfc	(_USB1msTickCount+3)& (0+255),f,b	;volatile
 15552                           
 15553                           ; BSR set to: 2
 15554                           ;usb_device.c: 3034: if(USBBusIsSuspended == 0)
 15555  0044F8  5054               	movf	_USBBusIsSuspended,w,c	;volatile
 15556  0044FA  A4D8               	btfss	status,2,c
 15557  0044FC  0012               	return	
 15558                           
 15559                           ; BSR set to: 2
 15560                           ;usb_device.c: 3035: {
 15561                           ;usb_device.c: 3036: USBTicksSinceSuspendEnd++;
 15562  0044FE  0101               	movlb	1	; () banked
 15563  004500  2BF5               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b	;volatile
 15564                           
 15565                           ; BSR set to: 1
 15566                           ;usb_device.c: 3038: if(USBTicksSinceSuspendEnd == 0)
 15567  004502  51F5               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b	;volatile
 15568  004504  A4D8               	btfss	status,2,c
 15569  004506  0012               	return	
 15570                           
 15571                           ; BSR set to: 1
 15572                           ;usb_device.c: 3039: {
 15573                           ;usb_device.c: 3040: USBTicksSinceSuspendEnd = 255;
 15574  004508  69F5               	setf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 15575                           
 15576                           ; BSR set to: 1
 15577  00450A  0012               	return	
 15578  00450C                     __end_of_USBIncrement1msInternalTimers:
 15579                           	opt stack 0
 15580                           pclatu	equ	0xFFB
 15581                           pclath	equ	0xFFA
 15582                           tblptru	equ	0xFF8
 15583                           tblptrh	equ	0xFF7
 15584                           tblptrl	equ	0xFF6
 15585                           tablat	equ	0xFF5
 15586                           prodh	equ	0xFF4
 15587                           prodl	equ	0xFF3
 15588                           intcon	equ	0xFF2
 15589                           indf0	equ	0xFEF
 15590                           postinc0	equ	0xFEE
 15591                           fsr0h	equ	0xFEA
 15592                           fsr0l	equ	0xFE9
 15593                           wreg	equ	0xFE8
 15594                           indf1	equ	0xFE7
 15595                           postdec1	equ	0xFE5
 15596                           fsr1h	equ	0xFE2
 15597                           fsr1l	equ	0xFE1
 15598                           indf2	equ	0xFDF
 15599                           postinc2	equ	0xFDE
 15600                           postdec2	equ	0xFDD
 15601                           plusw2	equ	0xFDB
 15602                           fsr2h	equ	0xFDA
 15603                           fsr2l	equ	0xFD9
 15604                           status	equ	0xFD8
 15605                           
 15606 ;; *************** function _USBCtrlEPService *****************
 15607 ;; Defined at:
 15608 ;;		line 2372 in file "../../../../microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 15609 ;; Parameters:    Size  Location     Type
 15610 ;;		None
 15611 ;; Auto vars:     Size  Location     Type
 15612 ;;		None
 15613 ;; Return value:  Size  Location     Type
 15614 ;;                  1    wreg      void 
 15615 ;; Registers used:
 15616 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15617 ;; Tracked objects:
 15618 ;;		On entry : 0/0
 15619 ;;		On exit  : 0/0
 15620 ;;		Unchanged: 0/0
 15621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15622 ;;      Params:         0       0       0       0       0       0       0       0       0
 15623 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15624 ;;      Temps:          1       0       0       0       0       0       0       0       0
 15625 ;;      Totals:         1       0       0       0       0       0       0       0       0
 15626 ;;Total ram usage:        1 bytes
 15627 ;; Hardware stack levels used:    1
 15628 ;; Hardware stack levels required when called:    7
 15629 ;; This function calls:
 15630 ;;		_USBCtrlTrfInHandler
 15631 ;;		_USBCtrlTrfOutHandler
 15632 ;;		_USBCtrlTrfSetupHandler
 15633 ;;		_memcpy
 15634 ;; This function is called by:
 15635 ;;		_USBDeviceTasks
 15636 ;; This function uses a non-reentrant model
 15637 ;;
 15638                           
 15639                           	psect	text63
 15640  003776                     __ptext63:
 15641                           	opt stack 0
 15642  003776                     _USBCtrlEPService:
 15643                           	opt stack 16
 15644                           
 15645                           ;usb_device.c: 2378: USBStatusStageTimeoutCounter = (uint8_t)45;
 15646                           
 15647                           ;incstack = 0
 15648  003776  0E2D               	movlw	45
 15649  003778  6E51               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 15650                           
 15651                           ;usb_device.c: 2382: if((USTATcopy.Val & ~0x02) == 0x00)
 15652  00377A  C05D  F01B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 15653  00377E  0EFD               	movlw	253
 15654  003780  161B               	andwf	??_USBCtrlEPService,f,c
 15655  003782  A4D8               	btfss	status,2,c
 15656  003784  D03B               	goto	i2l483
 15657                           
 15658                           ;usb_device.c: 2383: {
 15659                           ;usb_device.c: 2386: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 15660  003786  C05D  F01B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 15661  00378A  90D8               	bcf	status,0,c
 15662  00378C  321B               	rrcf	??_USBCtrlEPService,f,c
 15663  00378E  0E3F               	movlw	63
 15664  003790  161B               	andwf	??_USBCtrlEPService,f,c
 15665  003792  501B               	movf	??_USBCtrlEPService,w,c
 15666  003794  0D04               	mullw	4
 15667  003796  0E00               	movlw	0
 15668  003798  24F3               	addwf	prodl,w,c
 15669  00379A  6E4A               	movwf	_pBDTEntryEP0OutCurrent,c
 15670  00379C  0E04               	movlw	4
 15671  00379E  20F4               	addwfc	prodh,w,c
 15672  0037A0  6E4B               	movwf	_pBDTEntryEP0OutCurrent+1,c
 15673                           
 15674                           ;usb_device.c: 2394: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 15675  0037A2  C04A  F048         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 15676  0037A6  C04B  F049         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 15677                           
 15678                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 15679  0037AA  0E04               	movlw	4
 15680  0037AC  1848               	xorwf	_pBDTEntryEP0OutNext,w,c
 15681  0037AE  6E48               	movwf	_pBDTEntryEP0OutNext,c
 15682  0037B0  5049               	movf	_pBDTEntryEP0OutNext+1,w,c
 15683  0037B2  6E49               	movwf	_pBDTEntryEP0OutNext+1,c
 15684                           
 15685                           ;usb_device.c: 2399: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 15686  0037B4  C04A  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 15687  0037B8  C04B  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 15688  0037BC  30DF               	rrcf	indf2,w,c
 15689  0037BE  32E8               	rrcf	wreg,f,c
 15690  0037C0  0B0F               	andlw	15
 15691  0037C2  0A0D               	xorlw	13
 15692  0037C4  A4D8               	btfss	status,2,c
 15693  0037C6  D017               	goto	i2l484
 15694                           
 15695                           ;usb_device.c: 2400: {
 15696                           ;usb_device.c: 2405: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void *)(pBDTEntryEP0OutCurr
      +                          ent->ADR)), 8);
 15697  0037C8  0E30               	movlw	48
 15698  0037CA  6E01               	movwf	memcpy@d1,c
 15699  0037CC  0E04               	movlw	4
 15700  0037CE  6E02               	movwf	memcpy@d1+1,c
 15701  0037D0  EE20 F002          	lfsr	2,2
 15702  0037D4  504A               	movf	_pBDTEntryEP0OutCurrent,w,c
 15703  0037D6  26D9               	addwf	fsr2l,f,c
 15704  0037D8  504B               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 15705  0037DA  22DA               	addwfc	fsr2h,f,c
 15706  0037DC  CFDE F003          	movff	postinc2,memcpy@s1
 15707  0037E0  CFDD F004          	movff	postdec2,memcpy@s1+1
 15708  0037E4  0E00               	movlw	0
 15709  0037E6  6E06               	movwf	memcpy@n+1,c
 15710  0037E8  0E08               	movlw	8
 15711  0037EA  6E05               	movwf	memcpy@n,c
 15712  0037EC  EC48  F020         	call	_memcpy	;wreg free
 15713                           
 15714                           ;usb_device.c: 2408: USBCtrlTrfSetupHandler();
 15715  0037F0  EC99  F01C         	call	_USBCtrlTrfSetupHandler	;wreg free
 15716                           
 15717                           ;usb_device.c: 2409: }
 15718  0037F4  0012               	return	
 15719  0037F6                     i2l484:
 15720                           
 15721                           ;usb_device.c: 2410: else
 15722                           ;usb_device.c: 2411: {
 15723                           ;usb_device.c: 2413: USBCtrlTrfOutHandler();
 15724  0037F6  EC57  F01F         	call	_USBCtrlTrfOutHandler	;wreg free
 15725                           
 15726                           ;usb_device.c: 2414: }
 15727                           ;usb_device.c: 2415: }
 15728  0037FA  0012               	return	
 15729  0037FC                     i2l483:
 15730                           
 15731                           ;usb_device.c: 2416: else if((USTATcopy.Val & ~0x02) == 0x04)
 15732  0037FC  505D               	movf	_USTATcopy,w,c	;volatile
 15733  0037FE  0BFD               	andlw	253
 15734  003800  0A04               	xorlw	4
 15735  003802  A4D8               	btfss	status,2,c
 15736  003804  0012               	return	
 15737                           
 15738                           ;usb_device.c: 2417: {
 15739                           ;usb_device.c: 2420: USBCtrlTrfInHandler();
 15740  003806  EC15  F019         	call	_USBCtrlTrfInHandler	;wreg free
 15741  00380A  0012               	return	
 15742  00380C                     __end_of_USBCtrlEPService:
 15743                           	opt stack 0
 15744                           pclatu	equ	0xFFB
 15745                           pclath	equ	0xFFA
 15746                           tblptru	equ	0xFF8
 15747                           tblptrh	equ	0xFF7
 15748                           tblptrl	equ	0xFF6
 15749                           tablat	equ	0xFF5
 15750                           prodh	equ	0xFF4
 15751                           prodl	equ	0xFF3
 15752                           intcon	equ	0xFF2
 15753                           indf0	equ	0xFEF
 15754                           postinc0	equ	0xFEE
 15755                           fsr0h	equ	0xFEA
 15756                           fsr0l	equ	0xFE9
 15757                           wreg	equ	0xFE8
 15758                           indf1	equ	0xFE7
 15759                           postdec1	equ	0xFE5
 15760                           fsr1h	equ	0xFE2
 15761                           fsr1l	equ	0xFE1
 15762                           indf2	equ	0xFDF
 15763                           postinc2	equ	0xFDE
 15764                           postdec2	equ	0xFDD
 15765                           plusw2	equ	0xFDB
 15766                           fsr2h	equ	0xFDA
 15767                           fsr2l	equ	0xFD9
 15768                           status	equ	0xFD8
 15769                           
 15770 ;; *************** function _memcpy *****************
 15771 ;; Defined at:
 15772 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\memcpy.c"
 15773 ;; Parameters:    Size  Location     Type
 15774 ;;  d1              2    0[COMRAM] PTR void 
 15775 ;;		 -> receivePacket(100), response(100), SetupPkt(8), 
 15776 ;;  s1              2    2[COMRAM] PTR const void 
 15777 ;;		 -> recebeByte@frameData(100), CtrlTrfData(8), RAM(2047), SetupPkt(8), 
 15778 ;;  n               2    4[COMRAM] unsigned int 
 15779 ;; Auto vars:     Size  Location     Type
 15780 ;;  s               2    8[COMRAM] PTR const unsigned char 
 15781 ;;		 -> recebeByte@frameData(100), CtrlTrfData(8), RAM(2047), SetupPkt(8), 
 15782 ;;  d               2    6[COMRAM] PTR unsigned char 
 15783 ;;		 -> receivePacket(100), response(100), SetupPkt(8), 
 15784 ;;  tmp             1   10[COMRAM] unsigned char 
 15785 ;; Return value:  Size  Location     Type
 15786 ;;                  2    0[COMRAM] PTR void 
 15787 ;; Registers used:
 15788 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15789 ;; Tracked objects:
 15790 ;;		On entry : 0/0
 15791 ;;		On exit  : 0/0
 15792 ;;		Unchanged: 0/0
 15793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15794 ;;      Params:         6       0       0       0       0       0       0       0       0
 15795 ;;      Locals:         5       0       0       0       0       0       0       0       0
 15796 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15797 ;;      Totals:        11       0       0       0       0       0       0       0       0
 15798 ;;Total ram usage:       11 bytes
 15799 ;; Hardware stack levels used:    1
 15800 ;; This function calls:
 15801 ;;		Nothing
 15802 ;; This function is called by:
 15803 ;;		_USBCtrlEPService
 15804 ;;		_recebeByte
 15805 ;; This function uses a non-reentrant model
 15806 ;;
 15807                           
 15808                           	psect	text64
 15809  004090                     __ptext64:
 15810                           	opt stack 0
 15811  004090                     _memcpy:
 15812                           	opt stack 22
 15813                           
 15814                           ;incstack = 0
 15815  004090  C003  F009         	movff	memcpy@s1,memcpy@s
 15816  004094  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
 15817  004098  C001  F007         	movff	memcpy@d1,memcpy@d
 15818  00409C  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
 15819  0040A0  D010               	goto	i2l2383
 15820  0040A2                     i2l6923:
 15821  0040A2  C009  FFD9         	movff	memcpy@s,fsr2l
 15822  0040A6  C00A  FFDA         	movff	memcpy@s+1,fsr2h
 15823  0040AA  50DF               	movf	indf2,w,c
 15824  0040AC  6E0B               	movwf	memcpy@tmp,c
 15825  0040AE  4A09               	infsnz	memcpy@s,f,c
 15826  0040B0  2A0A               	incf	memcpy@s+1,f,c
 15827  0040B2  C007  FFD9         	movff	memcpy@d,fsr2l
 15828  0040B6  C008  FFDA         	movff	memcpy@d+1,fsr2h
 15829  0040BA  C00B  FFDF         	movff	memcpy@tmp,indf2
 15830  0040BE  4A07               	infsnz	memcpy@d,f,c
 15831  0040C0  2A08               	incf	memcpy@d+1,f,c
 15832  0040C2                     i2l2383:
 15833  0040C2  0605               	decf	memcpy@n,f,c
 15834  0040C4  A0D8               	btfss	status,0,c
 15835  0040C6  0606               	decf	memcpy@n+1,f,c
 15836  0040C8  2805               	incf	memcpy@n,w,c
 15837  0040CA  E1EB               	bnz	i2l6923
 15838  0040CC  2806               	incf	memcpy@n+1,w,c
 15839  0040CE  B4D8               	btfsc	status,2,c
 15840  0040D0  0012               	return	
 15841  0040D2  D7E7               	goto	i2l2384
 15842  0040D4                     __end_of_memcpy:
 15843                           	opt stack 0
 15844                           pclatu	equ	0xFFB
 15845                           pclath	equ	0xFFA
 15846                           tblptru	equ	0xFF8
 15847                           tblptrh	equ	0xFF7
 15848                           tblptrl	equ	0xFF6
 15849                           tablat	equ	0xFF5
 15850                           prodh	equ	0xFF4
 15851                           prodl	equ	0xFF3
 15852                           intcon	equ	0xFF2
 15853                           indf0	equ	0xFEF
 15854                           postinc0	equ	0xFEE
 15855                           fsr0h	equ	0xFEA
 15856                           fsr0l	equ	0xFE9
 15857                           wreg	equ	0xFE8
 15858                           indf1	equ	0xFE7
 15859                           postdec1	equ	0xFE5
 15860                           fsr1h	equ	0xFE2
 15861                           fsr1l	equ	0xFE1
 15862                           indf2	equ	0xFDF
 15863                           postinc2	equ	0xFDE
 15864                           postdec2	equ	0xFDD
 15865                           plusw2	equ	0xFDB
 15866                           fsr2h	equ	0xFDA
 15867                           fsr2l	equ	0xFD9
 15868                           status	equ	0xFD8
 15869                           
 15870 ;; *************** function _USBCtrlTrfSetupHandler *****************
 15871 ;; Defined at:
 15872 ;;		line 2465 in file "../../../../microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 15873 ;; Parameters:    Size  Location     Type
 15874 ;;		None
 15875 ;; Auto vars:     Size  Location     Type
 15876 ;;		None
 15877 ;; Return value:  Size  Location     Type
 15878 ;;                  1    wreg      void 
 15879 ;; Registers used:
 15880 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15881 ;; Tracked objects:
 15882 ;;		On entry : 0/0
 15883 ;;		On exit  : 0/0
 15884 ;;		Unchanged: 0/0
 15885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15886 ;;      Params:         0       0       0       0       0       0       0       0       0
 15887 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15888 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15889 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15890 ;;Total ram usage:        0 bytes
 15891 ;; Hardware stack levels used:    1
 15892 ;; Hardware stack levels required when called:    6
 15893 ;; This function calls:
 15894 ;;		_USBCheckStdRequest
 15895 ;;		_USBCtrlEPServiceComplete
 15896 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15897 ;; This function is called by:
 15898 ;;		_USBCtrlEPService
 15899 ;; This function uses a non-reentrant model
 15900 ;;
 15901                           
 15902                           	psect	text65
 15903  003932                     __ptext65:
 15904                           	opt stack 0
 15905  003932                     _USBCtrlTrfSetupHandler:
 15906                           	opt stack 16
 15907                           
 15908                           ;usb_device.c: 2470: shortPacketStatus = 0;
 15909                           
 15910                           ;incstack = 0
 15911  003932  0E00               	movlw	0
 15912  003934  6E57               	movwf	_shortPacketStatus,c	;volatile
 15913                           
 15914                           ;usb_device.c: 2471: USBDeferStatusStagePacket = 0;
 15915  003936  0E00               	movlw	0
 15916  003938  6E50               	movwf	_USBDeferStatusStagePacket,c	;volatile
 15917                           
 15918                           ;usb_device.c: 2472: USBDeferINDataStagePackets = 0;
 15919  00393A  0E00               	movlw	0
 15920  00393C  0101               	movlb	1	; () banked
 15921  00393E  6FF7               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 15922                           
 15923                           ;usb_device.c: 2473: USBDeferOUTDataStagePackets = 0;
 15924  003940  0E00               	movlw	0
 15925  003942  6FF6               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 15926                           
 15927                           ;usb_device.c: 2474: BothEP0OutUOWNsSet = 0;
 15928  003944  0E00               	movlw	0
 15929  003946  6E52               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 15930                           
 15931                           ;usb_device.c: 2475: controlTransferState = 0;
 15932  003948  0E00               	movlw	0
 15933  00394A  6E56               	movwf	_controlTransferState,c	;volatile
 15934                           
 15935                           ; BSR set to: 1
 15936                           ;usb_device.c: 2484: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 15937  00394C  C03A  FFD9         	movff	_pBDTEntryIn,fsr2l
 15938  003950  C03B  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 15939  003954  0E7F               	movlw	127
 15940  003956  16DF               	andwf	indf2,f,c
 15941                           
 15942                           ; BSR set to: 1
 15943                           ;usb_device.c: 2486: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 15944  003958  0E04               	movlw	4
 15945  00395A  183A               	xorwf	_pBDTEntryIn,w,c
 15946  00395C  6E3A               	movwf	_pBDTEntryIn,c
 15947  00395E  503B               	movf	_pBDTEntryIn+1,w,c
 15948  003960  6E3B               	movwf	_pBDTEntryIn+1,c
 15949                           
 15950                           ; BSR set to: 1
 15951                           ;usb_device.c: 2487: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 15952  003962  C03A  FFD9         	movff	_pBDTEntryIn,fsr2l
 15953  003966  C03B  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 15954  00396A  0E7F               	movlw	127
 15955  00396C  16DF               	andwf	indf2,f,c
 15956                           
 15957                           ; BSR set to: 1
 15958                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 15959  00396E  0E04               	movlw	4
 15960  003970  183A               	xorwf	_pBDTEntryIn,w,c
 15961  003972  6E3A               	movwf	_pBDTEntryIn,c
 15962  003974  503B               	movf	_pBDTEntryIn+1,w,c
 15963  003976  6E3B               	movwf	_pBDTEntryIn+1,c
 15964                           
 15965                           ; BSR set to: 1
 15966                           ;usb_device.c: 2489: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 15967  003978  C048  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 15968  00397C  C049  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 15969  003980  0E7F               	movlw	127
 15970  003982  16DF               	andwf	indf2,f,c
 15971                           
 15972                           ; BSR set to: 1
 15973                           ;usb_device.c: 2491: inPipes[0].info.Val = 0;
 15974  003984  0E00               	movlw	0
 15975  003986  0100               	movlb	0	; () banked
 15976  003988  6FFA               	movwf	(_inPipes+3)& (0+255),b	;volatile
 15977                           
 15978                           ; BSR set to: 0
 15979                           ;usb_device.c: 2492: inPipes[0].wCount.Val = 0;
 15980  00398A  0E00               	movlw	0
 15981  00398C  6FFC               	movwf	(_inPipes+5)& (0+255),b	;volatile
 15982  00398E  0E00               	movlw	0
 15983  003990  6FFB               	movwf	(_inPipes+4)& (0+255),b	;volatile
 15984                           
 15985                           ; BSR set to: 0
 15986                           ;usb_device.c: 2493: outPipes[0].info.Val = 0;
 15987  003992  0E00               	movlw	0
 15988  003994  6E35               	movwf	_outPipes+3,c	;volatile
 15989                           
 15990                           ; BSR set to: 0
 15991                           ;usb_device.c: 2494: outPipes[0].wCount.Val = 0;
 15992  003996  0E00               	movlw	0
 15993  003998  6E37               	movwf	_outPipes+5,c	;volatile
 15994  00399A  0E00               	movlw	0
 15995  00399C  6E36               	movwf	_outPipes+4,c	;volatile
 15996                           
 15997                           ; BSR set to: 0
 15998                           ;usb_device.c: 2500: USBCheckStdRequest();
 15999  00399E  EC6A  F017         	call	_USBCheckStdRequest	;wreg free
 16000                           
 16001                           ;usb_device.c: 2501: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 16002  0039A2  0E00               	movlw	0
 16003  0039A4  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 16004  0039A6  0E03               	movlw	3
 16005  0039A8  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 16006  0039AA  0E00               	movlw	0
 16007  0039AC  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 16008  0039AE  0E00               	movlw	0
 16009  0039B0  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 16010  0039B2  0E00               	movlw	0
 16011  0039B4  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 16012  0039B6  0E00               	movlw	0
 16013  0039B8  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 16014  0039BA  EC29  F01F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 16015                           
 16016                           ;usb_device.c: 2514: USBCtrlEPServiceComplete();
 16017  0039BE  EC7B  F016         	call	_USBCtrlEPServiceComplete	;wreg free
 16018  0039C2  0012               	return		;funcret
 16019  0039C4                     __end_of_USBCtrlTrfSetupHandler:
 16020                           	opt stack 0
 16021                           pclatu	equ	0xFFB
 16022                           pclath	equ	0xFFA
 16023                           tblptru	equ	0xFF8
 16024                           tblptrh	equ	0xFF7
 16025                           tblptrl	equ	0xFF6
 16026                           tablat	equ	0xFF5
 16027                           prodh	equ	0xFF4
 16028                           prodl	equ	0xFF3
 16029                           intcon	equ	0xFF2
 16030                           indf0	equ	0xFEF
 16031                           postinc0	equ	0xFEE
 16032                           fsr0h	equ	0xFEA
 16033                           fsr0l	equ	0xFE9
 16034                           wreg	equ	0xFE8
 16035                           indf1	equ	0xFE7
 16036                           postdec1	equ	0xFE5
 16037                           fsr1h	equ	0xFE2
 16038                           fsr1l	equ	0xFE1
 16039                           indf2	equ	0xFDF
 16040                           postinc2	equ	0xFDE
 16041                           postdec2	equ	0xFDD
 16042                           plusw2	equ	0xFDB
 16043                           fsr2h	equ	0xFDA
 16044                           fsr2l	equ	0xFD9
 16045                           status	equ	0xFD8
 16046                           
 16047 ;; *************** function _USBCtrlEPServiceComplete *****************
 16048 ;; Defined at:
 16049 ;;		line 1616 in file "../../../../microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 16050 ;; Parameters:    Size  Location     Type
 16051 ;;		None
 16052 ;; Auto vars:     Size  Location     Type
 16053 ;;		None
 16054 ;; Return value:  Size  Location     Type
 16055 ;;                  1    wreg      void 
 16056 ;; Registers used:
 16057 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16058 ;; Tracked objects:
 16059 ;;		On entry : 0/0
 16060 ;;		On exit  : 0/0
 16061 ;;		Unchanged: 0/0
 16062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16063 ;;      Params:         0       0       0       0       0       0       0       0       0
 16064 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16065 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16066 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16067 ;;Total ram usage:        0 bytes
 16068 ;; Hardware stack levels used:    1
 16069 ;; Hardware stack levels required when called:    2
 16070 ;; This function calls:
 16071 ;;		_USBCtrlEPAllowDataStage
 16072 ;;		_USBCtrlEPAllowStatusStage
 16073 ;; This function is called by:
 16074 ;;		_USBCtrlTrfSetupHandler
 16075 ;; This function uses a non-reentrant model
 16076 ;;
 16077                           
 16078                           	psect	text66
 16079  002CF6                     __ptext66:
 16080                           	opt stack 0
 16081  002CF6                     _USBCtrlEPServiceComplete:
 16082                           	opt stack 19
 16083                           
 16084                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
 16085                           
 16086                           ;incstack = 0
 16087  002CF6  986D               	bcf	3949,4,c	;volatile
 16088                           
 16089                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
 16090  002CF8  0100               	movlb	0	; () banked
 16091  002CFA  BFFA               	btfsc	(_inPipes+3)& (0+255),7,b	;volatile
 16092  002CFC  D039               	goto	i2l393
 16093                           
 16094                           ; BSR set to: 0
 16095                           ;usb_device.c: 1629: {
 16096                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
 16097  002CFE  AE35               	btfss	_outPipes+3,7,c	;volatile
 16098  002D00  D00C               	goto	i2l394
 16099                           
 16100                           ; BSR set to: 0
 16101                           ;usb_device.c: 1631: {
 16102                           ;usb_device.c: 1632: controlTransferState = 2;
 16103  002D02  0E02               	movlw	2
 16104  002D04  6E56               	movwf	_controlTransferState,c	;volatile
 16105                           
 16106                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
 16107  002D06  0101               	movlb	1	; () banked
 16108  002D08  51F6               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 16109  002D0A  B4D8               	btfsc	status,2,c
 16110                           
 16111                           ; BSR set to: 1
 16112                           ;usb_device.c: 1644: {
 16113                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
 16114  002D0C  EC6C  F01B         	call	_USBCtrlEPAllowDataStage	;wreg free
 16115                           
 16116                           ;usb_device.c: 1646: }
 16117                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
 16118  002D10  0E00               	movlw	0
 16119  002D12  6E4E               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 16120                           
 16121                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
 16122  002D14  0E00               	movlw	0
 16123  002D16  6E4F               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 16124                           
 16125                           ;usb_device.c: 1652: }
 16126  002D18  0012               	return	
 16127  002D1A                     i2l394:
 16128                           
 16129                           ;usb_device.c: 1653: else
 16130                           ;usb_device.c: 1654: {
 16131                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
 16132  002D1A  EE20 F001          	lfsr	2,1
 16133  002D1E  5048               	movf	_pBDTEntryEP0OutNext,w,c
 16134  002D20  26D9               	addwf	fsr2l,f,c
 16135  002D22  5049               	movf	_pBDTEntryEP0OutNext+1,w,c
 16136  002D24  22DA               	addwfc	fsr2h,f,c
 16137  002D26  0E08               	movlw	8
 16138  002D28  6EDF               	movwf	indf2,c
 16139                           
 16140                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 16141  002D2A  EE20 F002          	lfsr	2,2
 16142  002D2E  5048               	movf	_pBDTEntryEP0OutNext,w,c
 16143  002D30  26D9               	addwf	fsr2l,f,c
 16144  002D32  5049               	movf	_pBDTEntryEP0OutNext+1,w,c
 16145  002D34  22DA               	addwfc	fsr2h,f,c
 16146  002D36  0E30               	movlw	48
 16147  002D38  6EDE               	movwf	postinc2,c
 16148  002D3A  0E04               	movlw	4
 16149  002D3C  6EDD               	movwf	postdec2,c
 16150                           
 16151                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 16152  002D3E  C048  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16153  002D42  C049  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16154  002D46  0E0C               	movlw	12
 16155  002D48  6EDF               	movwf	indf2,c
 16156                           
 16157                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16158  002D4A  C048  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16159  002D4E  C049  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16160  002D52  0E00               	movlw	0
 16161  002D54  8EDB               	bsf	plusw2,7,c
 16162                           
 16163                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
 16164  002D56  C03A  FFD9         	movff	_pBDTEntryIn,fsr2l
 16165  002D5A  C03B  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16166  002D5E  0E04               	movlw	4
 16167  002D60  6EDF               	movwf	indf2,c
 16168                           
 16169                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
 16170  002D62  C03A  FFD9         	movff	_pBDTEntryIn,fsr2l
 16171  002D66  C03B  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16172  002D6A  0E00               	movlw	0
 16173  002D6C  8EDB               	bsf	plusw2,7,c
 16174                           
 16175                           ;usb_device.c: 1665: }
 16176                           ;usb_device.c: 1666: }
 16177  002D6E  0012               	return	
 16178  002D70                     i2l393:
 16179                           
 16180                           ; BSR set to: 0
 16181                           ;usb_device.c: 1667: else
 16182                           ;usb_device.c: 1668: {
 16183                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
 16184  002D70  0104               	movlb	4	; () banked
 16185  002D72  AF30               	btfss	48,7,b	;volatile
 16186  002D74  D011               	goto	i2l398
 16187                           
 16188                           ; BSR set to: 4
 16189                           ;usb_device.c: 1670: {
 16190                           ;usb_device.c: 1671: controlTransferState = 1;
 16191  002D76  0E01               	movlw	1
 16192  002D78  6E56               	movwf	_controlTransferState,c	;volatile
 16193                           
 16194                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
 16195  002D7A  0101               	movlb	1	; () banked
 16196  002D7C  51F7               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 16197  002D7E  B4D8               	btfsc	status,2,c
 16198                           
 16199                           ; BSR set to: 1
 16200                           ;usb_device.c: 1686: {
 16201                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
 16202  002D80  EC6C  F01B         	call	_USBCtrlEPAllowDataStage	;wreg free
 16203                           
 16204                           ;usb_device.c: 1688: }
 16205                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
 16206  002D84  0E00               	movlw	0
 16207  002D86  6E4E               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 16208                           
 16209                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
 16210  002D88  0E00               	movlw	0
 16211  002D8A  6E4F               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 16212                           
 16213                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
 16214  002D8C  5050               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 16215  002D8E  A4D8               	btfss	status,2,c
 16216  002D90  0012               	return	
 16217                           
 16218                           ;usb_device.c: 1713: {
 16219                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
 16220  002D92  ECB4  F018         	call	_USBCtrlEPAllowStatusStage	;wreg free
 16221                           
 16222                           ;usb_device.c: 1715: }
 16223                           ;usb_device.c: 1716: }
 16224  002D96  0012               	return	
 16225  002D98                     i2l398:
 16226                           
 16227                           ;usb_device.c: 1717: else
 16228                           ;usb_device.c: 1718: {
 16229                           ;usb_device.c: 1729: controlTransferState = 2;
 16230  002D98  0E02               	movlw	2
 16231  002D9A  6E56               	movwf	_controlTransferState,c	;volatile
 16232                           
 16233                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
 16234  002D9C  EE20 F001          	lfsr	2,1
 16235  002DA0  5048               	movf	_pBDTEntryEP0OutNext,w,c
 16236  002DA2  26D9               	addwf	fsr2l,f,c
 16237  002DA4  5049               	movf	_pBDTEntryEP0OutNext+1,w,c
 16238  002DA6  22DA               	addwfc	fsr2h,f,c
 16239  002DA8  0E08               	movlw	8
 16240  002DAA  6EDF               	movwf	indf2,c
 16241                           
 16242                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 16243  002DAC  EE20 F002          	lfsr	2,2
 16244  002DB0  5048               	movf	_pBDTEntryEP0OutNext,w,c
 16245  002DB2  26D9               	addwf	fsr2l,f,c
 16246  002DB4  5049               	movf	_pBDTEntryEP0OutNext+1,w,c
 16247  002DB6  22DA               	addwfc	fsr2h,f,c
 16248  002DB8  0E30               	movlw	48
 16249  002DBA  6EDE               	movwf	postinc2,c
 16250  002DBC  0E04               	movlw	4
 16251  002DBE  6EDD               	movwf	postdec2,c
 16252                           
 16253                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 16254  002DC0  C048  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16255  002DC4  C049  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16256  002DC8  0E04               	movlw	4
 16257  002DCA  6EDF               	movwf	indf2,c
 16258                           
 16259                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16260  002DCC  C048  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16261  002DD0  C049  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16262  002DD4  0E00               	movlw	0
 16263  002DD6  8EDB               	bsf	plusw2,7,c
 16264                           
 16265                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
 16266  002DD8  0E00               	movlw	0
 16267  002DDA  6E4E               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 16268                           
 16269                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
 16270  002DDC  0E00               	movlw	0
 16271  002DDE  6E4F               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 16272                           
 16273                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
 16274  002DE0  5050               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 16275  002DE2  A4D8               	btfss	status,2,c
 16276  002DE4  0012               	return	
 16277                           
 16278                           ;usb_device.c: 1741: {
 16279                           ;usb_device.c: 1742: USBCtrlEPAllowStatusStage();
 16280  002DE6  ECB4  F018         	call	_USBCtrlEPAllowStatusStage	;wreg free
 16281  002DEA  0012               	return	
 16282  002DEC                     __end_of_USBCtrlEPServiceComplete:
 16283                           	opt stack 0
 16284                           pclatu	equ	0xFFB
 16285                           pclath	equ	0xFFA
 16286                           tblptru	equ	0xFF8
 16287                           tblptrh	equ	0xFF7
 16288                           tblptrl	equ	0xFF6
 16289                           tablat	equ	0xFF5
 16290                           prodh	equ	0xFF4
 16291                           prodl	equ	0xFF3
 16292                           intcon	equ	0xFF2
 16293                           indf0	equ	0xFEF
 16294                           postinc0	equ	0xFEE
 16295                           fsr0h	equ	0xFEA
 16296                           fsr0l	equ	0xFE9
 16297                           wreg	equ	0xFE8
 16298                           indf1	equ	0xFE7
 16299                           postdec1	equ	0xFE5
 16300                           fsr1h	equ	0xFE2
 16301                           fsr1l	equ	0xFE1
 16302                           indf2	equ	0xFDF
 16303                           postinc2	equ	0xFDE
 16304                           postdec2	equ	0xFDD
 16305                           plusw2	equ	0xFDB
 16306                           fsr2h	equ	0xFDA
 16307                           fsr2l	equ	0xFD9
 16308                           status	equ	0xFD8
 16309                           
 16310 ;; *************** function _USBCtrlEPAllowDataStage *****************
 16311 ;; Defined at:
 16312 ;;		line 1488 in file "../../../../microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 16313 ;; Parameters:    Size  Location     Type
 16314 ;;		None
 16315 ;; Auto vars:     Size  Location     Type
 16316 ;;		None
 16317 ;; Return value:  Size  Location     Type
 16318 ;;                  1    wreg      void 
 16319 ;; Registers used:
 16320 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16321 ;; Tracked objects:
 16322 ;;		On entry : 0/0
 16323 ;;		On exit  : 0/0
 16324 ;;		Unchanged: 0/0
 16325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16326 ;;      Params:         0       0       0       0       0       0       0       0       0
 16327 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16328 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16329 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16330 ;;Total ram usage:        0 bytes
 16331 ;; Hardware stack levels used:    1
 16332 ;; Hardware stack levels required when called:    1
 16333 ;; This function calls:
 16334 ;;		_USBCtrlTrfTxService
 16335 ;; This function is called by:
 16336 ;;		_USBCtrlEPServiceComplete
 16337 ;; This function uses a non-reentrant model
 16338 ;;
 16339                           
 16340                           	psect	text67
 16341  0036D8                     __ptext67:
 16342                           	opt stack 0
 16343  0036D8                     _USBCtrlEPAllowDataStage:
 16344                           	opt stack 19
 16345                           
 16346                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
 16347                           
 16348                           ;incstack = 0
 16349  0036D8  0E00               	movlw	0
 16350  0036DA  0101               	movlb	1	; () banked
 16351  0036DC  6FF7               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 16352                           
 16353                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
 16354  0036DE  0E00               	movlw	0
 16355  0036E0  6FF6               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 16356                           
 16357                           ; BSR set to: 1
 16358                           ;usb_device.c: 1493: if(controlTransferState == 2)
 16359  0036E2  0E02               	movlw	2
 16360  0036E4  1856               	xorwf	_controlTransferState,w,c	;volatile
 16361  0036E6  A4D8               	btfss	status,2,c
 16362  0036E8  D01F               	goto	i2l382
 16363                           
 16364                           ; BSR set to: 1
 16365                           ;usb_device.c: 1494: {
 16366                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
 16367  0036EA  EE20 F001          	lfsr	2,1
 16368  0036EE  5048               	movf	_pBDTEntryEP0OutNext,w,c
 16369  0036F0  26D9               	addwf	fsr2l,f,c
 16370  0036F2  5049               	movf	_pBDTEntryEP0OutNext+1,w,c
 16371  0036F4  22DA               	addwfc	fsr2h,f,c
 16372  0036F6  0E08               	movlw	8
 16373  0036F8  6EDF               	movwf	indf2,c
 16374                           
 16375                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 16376  0036FA  EE20 F002          	lfsr	2,2
 16377  0036FE  5048               	movf	_pBDTEntryEP0OutNext,w,c
 16378  003700  26D9               	addwf	fsr2l,f,c
 16379  003702  5049               	movf	_pBDTEntryEP0OutNext+1,w,c
 16380  003704  22DA               	addwfc	fsr2h,f,c
 16381  003706  0E38               	movlw	56
 16382  003708  6EDE               	movwf	postinc2,c
 16383  00370A  0E04               	movlw	4
 16384  00370C  6EDD               	movwf	postdec2,c
 16385                           
 16386                           ; BSR set to: 1
 16387                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 16388  00370E  C048  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16389  003712  C049  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16390  003716  0E48               	movlw	72
 16391  003718  6EDF               	movwf	indf2,c
 16392                           
 16393                           ; BSR set to: 1
 16394                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16395  00371A  C048  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16396  00371E  C049  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16397  003722  0E00               	movlw	0
 16398  003724  8EDB               	bsf	plusw2,7,c
 16399                           
 16400                           ;usb_device.c: 1500: }
 16401  003726  0012               	return	
 16402  003728                     i2l382:
 16403                           
 16404                           ; BSR set to: 1
 16405                           ;usb_device.c: 1501: else
 16406                           ;usb_device.c: 1502: {
 16407                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 16408                           
 16409                           ; BSR set to: 1
 16410  003728  0100               	movlb	0	; () banked
 16411  00372A  51FB               	movf	(_inPipes+4)& (0+255),w,b	;volatile
 16412  00372C  0104               	movlb	4	; () banked
 16413  00372E  5D36               	subwf	54,w,b	;volatile
 16414  003730  0100               	movlb	0	; () banked
 16415  003732  51FC               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 16416  003734  0104               	movlb	4	; () banked
 16417  003736  5937               	subwfb	55,w,b	;volatile
 16418  003738  B0D8               	btfsc	status,0,c
 16419  00373A  D004               	goto	i2l384
 16420                           
 16421                           ; BSR set to: 4
 16422                           ;usb_device.c: 1506: {
 16423                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
 16424  00373C  C436 F0FB          	movff	1078,_inPipes+4	;volatile
 16425  003740  C437 F0FC          	movff	1079,_inPipes+5	;volatile
 16426  003744                     i2l384:
 16427                           
 16428                           ; BSR set to: 4
 16429                           ;usb_device.c: 1508: }
 16430                           ;usb_device.c: 1509: USBCtrlTrfTxService();
 16431                           
 16432                           ; BSR set to: 4
 16433  003744  EC4A  F018         	call	_USBCtrlTrfTxService	;wreg free
 16434                           
 16435                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 16436  003748  EE20 F002          	lfsr	2,2
 16437  00374C  503A               	movf	_pBDTEntryIn,w,c
 16438  00374E  26D9               	addwf	fsr2l,f,c
 16439  003750  503B               	movf	_pBDTEntryIn+1,w,c
 16440  003752  22DA               	addwfc	fsr2h,f,c
 16441  003754  0E38               	movlw	56
 16442  003756  6EDE               	movwf	postinc2,c
 16443  003758  0E04               	movlw	4
 16444  00375A  6EDD               	movwf	postdec2,c
 16445                           
 16446                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 16447  00375C  C03A  FFD9         	movff	_pBDTEntryIn,fsr2l
 16448  003760  C03B  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16449  003764  0E48               	movlw	72
 16450  003766  6EDF               	movwf	indf2,c
 16451                           
 16452                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
 16453  003768  C03A  FFD9         	movff	_pBDTEntryIn,fsr2l
 16454  00376C  C03B  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16455  003770  0E00               	movlw	0
 16456  003772  8EDB               	bsf	plusw2,7,c
 16457  003774  0012               	return	
 16458  003776                     __end_of_USBCtrlEPAllowDataStage:
 16459                           	opt stack 0
 16460                           pclatu	equ	0xFFB
 16461                           pclath	equ	0xFFA
 16462                           tblptru	equ	0xFF8
 16463                           tblptrh	equ	0xFF7
 16464                           tblptrl	equ	0xFF6
 16465                           tablat	equ	0xFF5
 16466                           prodh	equ	0xFF4
 16467                           prodl	equ	0xFF3
 16468                           intcon	equ	0xFF2
 16469                           indf0	equ	0xFEF
 16470                           postinc0	equ	0xFEE
 16471                           fsr0h	equ	0xFEA
 16472                           fsr0l	equ	0xFE9
 16473                           wreg	equ	0xFE8
 16474                           indf1	equ	0xFE7
 16475                           postdec1	equ	0xFE5
 16476                           fsr1h	equ	0xFE2
 16477                           fsr1l	equ	0xFE1
 16478                           indf2	equ	0xFDF
 16479                           postinc2	equ	0xFDE
 16480                           postdec2	equ	0xFDD
 16481                           plusw2	equ	0xFDB
 16482                           fsr2h	equ	0xFDA
 16483                           fsr2l	equ	0xFD9
 16484                           status	equ	0xFD8
 16485                           
 16486 ;; *************** function _USBCheckStdRequest *****************
 16487 ;; Defined at:
 16488 ;;		line 2686 in file "../../../../microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 16489 ;; Parameters:    Size  Location     Type
 16490 ;;		None
 16491 ;; Auto vars:     Size  Location     Type
 16492 ;;		None
 16493 ;; Return value:  Size  Location     Type
 16494 ;;                  1    wreg      void 
 16495 ;; Registers used:
 16496 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16497 ;; Tracked objects:
 16498 ;;		On entry : 0/0
 16499 ;;		On exit  : 0/0
 16500 ;;		Unchanged: 0/0
 16501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16502 ;;      Params:         0       0       0       0       0       0       0       0       0
 16503 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16504 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16505 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16506 ;;Total ram usage:        0 bytes
 16507 ;; Hardware stack levels used:    1
 16508 ;; Hardware stack levels required when called:    5
 16509 ;; This function calls:
 16510 ;;		_USBStdFeatureReqHandler
 16511 ;;		_USBStdGetDscHandler
 16512 ;;		_USBStdGetStatusHandler
 16513 ;;		_USBStdSetCfgHandler
 16514 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16515 ;; This function is called by:
 16516 ;;		_USBCtrlTrfSetupHandler
 16517 ;; This function uses a non-reentrant model
 16518 ;;
 16519                           
 16520                           	psect	text68
 16521  002ED4                     __ptext68:
 16522                           	opt stack 0
 16523  002ED4                     _USBCheckStdRequest:
 16524                           	opt stack 16
 16525                           
 16526                           ;usb_device.c: 2688: if(SetupPkt.RequestType != (0x00>>5)) return;
 16527                           
 16528                           ;incstack = 0
 16529  002ED4  0104               	movlb	4	; () banked
 16530  002ED6  3930               	swapf	48,w,b	;volatile
 16531  002ED8  32E8               	rrcf	wreg,f,c
 16532  002EDA  0B03               	andlw	3
 16533  002EDC  0900               	iorlw	0
 16534  002EDE  A4D8               	btfss	status,2,c
 16535  002EE0  0012               	return	
 16536  002EE2  D047               	goto	i2l517
 16537  002EE4                     i2l518:
 16538                           
 16539                           ; BSR set to: 4
 16540                           ;usb_device.c: 2693: inPipes[0].info.bits.busy = 1;
 16541  002EE4  0100               	movlb	0	; () banked
 16542  002EE6  8FFA               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 16543                           
 16544                           ; BSR set to: 0
 16545                           ;usb_device.c: 2694: USBDeviceState = ADR_PENDING_STATE;
 16546  002EE8  0E08               	movlw	8
 16547  002EEA  6E58               	movwf	_USBDeviceState,c	;volatile
 16548                           
 16549                           ;usb_device.c: 2696: break;
 16550  002EEC  0012               	return	
 16551  002EEE                     
 16552                           ;usb_device.c: 2698: USBStdGetDscHandler();
 16553                           
 16554                           ; BSR set to: 0
 16555  002EEE  EC22  F010         	call	_USBStdGetDscHandler	;wreg free
 16556                           
 16557                           ;usb_device.c: 2699: break;
 16558  002EF2  0012               	return	
 16559  002EF4                     
 16560                           ;usb_device.c: 2701: USBStdSetCfgHandler();
 16561  002EF4  ECDB  F017         	call	_USBStdSetCfgHandler	;wreg free
 16562                           
 16563                           ;usb_device.c: 2702: break;
 16564  002EF8  0012               	return	
 16565  002EFA                     
 16566                           ;usb_device.c: 2704: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 16567  002EFA  0E5E               	movlw	low _USBActiveConfiguration
 16568  002EFC  0100               	movlb	0	; () banked
 16569  002EFE  6FF7               	movwf	_inPipes& (0+255),b	;volatile
 16570  002F00  0E00               	movlw	high _USBActiveConfiguration
 16571  002F02  6FF8               	movwf	(_inPipes+1)& (0+255),b	;volatile
 16572                           
 16573                           ; BSR set to: 0
 16574                           ;usb_device.c: 2705: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 16575  002F04  81FA               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 16576                           
 16577                           ; BSR set to: 0
 16578                           ;usb_device.c: 2706: inPipes[0].wCount.v[0] = 1;
 16579  002F06  0E01               	movlw	1
 16580  002F08  6FFB               	movwf	(_inPipes+4)& (0+255),b	;volatile
 16581                           
 16582                           ; BSR set to: 0
 16583                           ;usb_device.c: 2707: inPipes[0].info.bits.busy = 1;
 16584  002F0A  8FFA               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 16585                           
 16586                           ;usb_device.c: 2708: break;
 16587  002F0C  0012               	return	
 16588  002F0E                     
 16589                           ;usb_device.c: 2710: USBStdGetStatusHandler();
 16590                           
 16591                           ; BSR set to: 0
 16592  002F0E  EC78  F01A         	call	_USBStdGetStatusHandler	;wreg free
 16593                           
 16594                           ;usb_device.c: 2711: break;
 16595  002F12  0012               	return	
 16596  002F14                     
 16597                           ;usb_device.c: 2713: case 3:
 16598                           ;usb_device.c: 2714: USBStdFeatureReqHandler();
 16599  002F14  EC0D  F008         	call	_USBStdFeatureReqHandler	;wreg free
 16600                           
 16601                           ;usb_device.c: 2715: break;
 16602  002F18  0012               	return	
 16603  002F1A                     
 16604                           ;usb_device.c: 2717: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 16605  002F1A  0104               	movlb	4	; () banked
 16606  002F1C  5134               	movf	52,w,b	;volatile
 16607  002F1E  0D01               	mullw	1
 16608  002F20  0EFD               	movlw	low _USBAlternateInterface
 16609  002F22  24F3               	addwf	prodl,w,c
 16610  002F24  0100               	movlb	0	; () banked
 16611  002F26  6FF7               	movwf	_inPipes& (0+255),b	;volatile
 16612  002F28  0E01               	movlw	high _USBAlternateInterface
 16613  002F2A  20F4               	addwfc	prodh,w,c
 16614  002F2C  6FF8               	movwf	(_inPipes+1)& (0+255),b	;volatile
 16615                           
 16616                           ; BSR set to: 0
 16617                           ;usb_device.c: 2718: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 16618  002F2E  81FA               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 16619                           
 16620                           ; BSR set to: 0
 16621                           ;usb_device.c: 2719: inPipes[0].wCount.v[0] = 1;
 16622  002F30  0E01               	movlw	1
 16623  002F32  6FFB               	movwf	(_inPipes+4)& (0+255),b	;volatile
 16624                           
 16625                           ; BSR set to: 0
 16626                           ;usb_device.c: 2720: inPipes[0].info.bits.busy = 1;
 16627  002F34  8FFA               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 16628                           
 16629                           ;usb_device.c: 2721: break;
 16630  002F36  0012               	return	
 16631  002F38                     i2l527:
 16632                           
 16633                           ; BSR set to: 4
 16634                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
 16635  002F38  0100               	movlb	0	; () banked
 16636  002F3A  8FFA               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 16637                           
 16638                           ; BSR set to: 0
 16639                           ;usb_device.c: 2724: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 16640  002F3C  0104               	movlb	4	; () banked
 16641  002F3E  5134               	movf	52,w,b	;volatile
 16642  002F40  0D01               	mullw	1
 16643  002F42  0EFD               	movlw	low _USBAlternateInterface
 16644  002F44  24F3               	addwf	prodl,w,c
 16645  002F46  6ED9               	movwf	fsr2l,c
 16646  002F48  0E01               	movlw	high _USBAlternateInterface
 16647  002F4A  20F4               	addwfc	prodh,w,c
 16648  002F4C  6EDA               	movwf	fsr2h,c
 16649  002F4E  C432 FFDF          	movff	1074,indf2	;volatile
 16650                           
 16651                           ;usb_device.c: 2725: break;
 16652  002F52  0012               	return	
 16653  002F54                     
 16654                           ; BSR set to: 4
 16655                           ;usb_device.c: 2727: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 16656                           
 16657                           ; BSR set to: 4
 16658  002F54  0E00               	movlw	0
 16659  002F56  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 16660  002F58  0E02               	movlw	2
 16661  002F5A  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 16662  002F5C  0E00               	movlw	0
 16663  002F5E  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 16664  002F60  0E00               	movlw	0
 16665  002F62  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 16666  002F64  0E00               	movlw	0
 16667  002F66  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 16668  002F68  0E00               	movlw	0
 16669  002F6A  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 16670  002F6C  EC29  F01F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 16671                           
 16672                           ;usb_device.c: 2732: }
 16673                           
 16674                           ;usb_device.c: 2731: break;
 16675                           
 16676                           ;usb_device.c: 2730: default:
 16677                           
 16678                           ;usb_device.c: 2729: case 12:
 16679                           
 16680                           ;usb_device.c: 2728: break;
 16681  002F70  0012               	return	
 16682  002F72                     i2l517:
 16683  002F72  0104               	movlb	4	; () banked
 16684  002F74  5131               	movf	49,w,b	;volatile
 16685                           
 16686                           ; Switch size 1, requested type "space"
 16687                           ; Number of cases is 11, Range of values is 0 to 12
 16688                           ; switch strategies available:
 16689                           ; Name         Instructions Cycles
 16690                           ; simple_byte           34    18 (average)
 16691                           ;	Chosen strategy is simple_byte
 16692  002F76  0A00               	xorlw	0	; case 0
 16693  002F78  B4D8               	btfsc	status,2,c
 16694  002F7A  D7C9               	goto	i2l523
 16695  002F7C  0A01               	xorlw	1	; case 1
 16696  002F7E  B4D8               	btfsc	status,2,c
 16697  002F80  D7C9               	goto	i2l524
 16698  002F82  0A02               	xorlw	2	; case 3
 16699  002F84  B4D8               	btfsc	status,2,c
 16700  002F86  D7C6               	goto	i2l524
 16701  002F88  0A06               	xorlw	6	; case 5
 16702  002F8A  B4D8               	btfsc	status,2,c
 16703  002F8C  D7AB               	goto	i2l518
 16704  002F8E  0A03               	xorlw	3	; case 6
 16705  002F90  B4D8               	btfsc	status,2,c
 16706  002F92  D7AD               	goto	i2l520
 16707  002F94  0A01               	xorlw	1	; case 7
 16708  002F96  B4D8               	btfsc	status,2,c
 16709  002F98  D7DD               	goto	i2l528
 16710  002F9A  0A0F               	xorlw	15	; case 8
 16711  002F9C  B4D8               	btfsc	status,2,c
 16712  002F9E  D7AD               	goto	i2l522
 16713  002FA0  0A01               	xorlw	1	; case 9
 16714  002FA2  B4D8               	btfsc	status,2,c
 16715  002FA4  D7A7               	goto	i2l521
 16716  002FA6  0A03               	xorlw	3	; case 10
 16717  002FA8  B4D8               	btfsc	status,2,c
 16718  002FAA  D7B7               	goto	i2l526
 16719  002FAC  0A01               	xorlw	1	; case 11
 16720  002FAE  B4D8               	btfsc	status,2,c
 16721  002FB0  D7C3               	goto	i2l527
 16722  002FB2  0A07               	xorlw	7	; case 12
 16723  002FB4  0012               	return	
 16724  002FB6                     __end_of_USBCheckStdRequest:
 16725                           	opt stack 0
 16726                           pclatu	equ	0xFFB
 16727                           pclath	equ	0xFFA
 16728                           tblptru	equ	0xFF8
 16729                           tblptrh	equ	0xFF7
 16730                           tblptrl	equ	0xFF6
 16731                           tablat	equ	0xFF5
 16732                           prodh	equ	0xFF4
 16733                           prodl	equ	0xFF3
 16734                           intcon	equ	0xFF2
 16735                           indf0	equ	0xFEF
 16736                           postinc0	equ	0xFEE
 16737                           fsr0h	equ	0xFEA
 16738                           fsr0l	equ	0xFE9
 16739                           wreg	equ	0xFE8
 16740                           indf1	equ	0xFE7
 16741                           postdec1	equ	0xFE5
 16742                           fsr1h	equ	0xFE2
 16743                           fsr1l	equ	0xFE1
 16744                           indf2	equ	0xFDF
 16745                           postinc2	equ	0xFDE
 16746                           postdec2	equ	0xFDD
 16747                           plusw2	equ	0xFDB
 16748                           fsr2h	equ	0xFDA
 16749                           fsr2l	equ	0xFD9
 16750                           status	equ	0xFD8
 16751                           
 16752 ;; *************** function _USBStdSetCfgHandler *****************
 16753 ;; Defined at:
 16754 ;;		line 1968 in file "../../../../microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 16755 ;; Parameters:    Size  Location     Type
 16756 ;;		None
 16757 ;; Auto vars:     Size  Location     Type
 16758 ;;  i               1   20[COMRAM] unsigned char 
 16759 ;; Return value:  Size  Location     Type
 16760 ;;                  1    wreg      void 
 16761 ;; Registers used:
 16762 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16763 ;; Tracked objects:
 16764 ;;		On entry : 0/0
 16765 ;;		On exit  : 0/0
 16766 ;;		Unchanged: 0/0
 16767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16768 ;;      Params:         0       0       0       0       0       0       0       0       0
 16769 ;;      Locals:         1       0       0       0       0       0       0       0       0
 16770 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16771 ;;      Totals:         1       0       0       0       0       0       0       0       0
 16772 ;;Total ram usage:        1 bytes
 16773 ;; Hardware stack levels used:    1
 16774 ;; Hardware stack levels required when called:    4
 16775 ;; This function calls:
 16776 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16777 ;;		i2_memset
 16778 ;; This function is called by:
 16779 ;;		_USBCheckStdRequest
 16780 ;; This function uses a non-reentrant model
 16781 ;;
 16782                           
 16783                           	psect	text69
 16784  002FB6                     __ptext69:
 16785                           	opt stack 0
 16786  002FB6                     _USBStdSetCfgHandler:
 16787                           	opt stack 16
 16788                           
 16789                           ;usb_device.c: 1970: uint8_t i;
 16790                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
 16791                           
 16792                           ;incstack = 0
 16793  002FB6  0100               	movlb	0	; () banked
 16794  002FB8  8FFA               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 16795                           
 16796                           ; BSR set to: 0
 16797                           ;usb_device.c: 1976: memset((void*)&UEP1,0x00,(2));;
 16798  002FBA  0E71               	movlw	113
 16799  002FBC  6E01               	movwf	i2memset@p1,c
 16800  002FBE  0E0F               	movlw	15
 16801  002FC0  6E02               	movwf	i2memset@p1+1,c
 16802  002FC2  0E00               	movlw	0
 16803  002FC4  6E04               	movwf	i2memset@c+1,c
 16804  002FC6  0E00               	movlw	0
 16805  002FC8  6E03               	movwf	i2memset@c,c
 16806  002FCA  0E00               	movlw	0
 16807  002FCC  6E06               	movwf	i2memset@n+1,c
 16808  002FCE  0E02               	movlw	2
 16809  002FD0  6E05               	movwf	i2memset@n,c
 16810  002FD2  ECCA  F021         	call	i2_memset	;wreg free
 16811                           
 16812                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 16813  002FD6  0E00               	movlw	0
 16814  002FD8  6E01               	movwf	i2memset@p1,c
 16815  002FDA  0E04               	movlw	4
 16816  002FDC  6E02               	movwf	i2memset@p1+1,c
 16817  002FDE  0E00               	movlw	0
 16818  002FE0  6E04               	movwf	i2memset@c+1,c
 16819  002FE2  0E00               	movlw	0
 16820  002FE4  6E03               	movwf	i2memset@c,c
 16821  002FE6  0E00               	movlw	0
 16822  002FE8  6E06               	movwf	i2memset@n+1,c
 16823  002FEA  0E30               	movlw	48
 16824  002FEC  6E05               	movwf	i2memset@n,c
 16825  002FEE  ECCA  F021         	call	i2_memset	;wreg free
 16826                           
 16827                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
 16828  002FF2  8C6D               	bsf	3949,6,c	;volatile
 16829                           
 16830                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
 16831  002FF4  0E00               	movlw	0
 16832  002FF6  6E15               	movwf	USBStdSetCfgHandler@i,c
 16833  002FF8                     i2l6283:
 16834  002FF8  0E02               	movlw	2
 16835  002FFA  6415               	cpfsgt	USBStdSetCfgHandler@i,c
 16836  002FFC  D001               	goto	i2l434
 16837  002FFE  D016               	goto	i2u478_40
 16838  003000                     i2l434:
 16839                           
 16840                           ;usb_device.c: 1988: {
 16841                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
 16842  003000  5015               	movf	USBStdSetCfgHandler@i,w,c
 16843  003002  0D01               	mullw	1
 16844  003004  0EEE               	movlw	low _ep_data_in
 16845  003006  24F3               	addwf	prodl,w,c
 16846  003008  6ED9               	movwf	fsr2l,c
 16847  00300A  0E01               	movlw	high _ep_data_in
 16848  00300C  20F4               	addwfc	prodh,w,c
 16849  00300E  6EDA               	movwf	fsr2h,c
 16850  003010  0E00               	movlw	0
 16851  003012  6EDF               	movwf	indf2,c
 16852                           
 16853                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
 16854  003014  5015               	movf	USBStdSetCfgHandler@i,w,c
 16855  003016  0D01               	mullw	1
 16856  003018  0EEB               	movlw	low _ep_data_out
 16857  00301A  24F3               	addwf	prodl,w,c
 16858  00301C  6ED9               	movwf	fsr2l,c
 16859  00301E  0E01               	movlw	high _ep_data_out
 16860  003020  20F4               	addwfc	prodh,w,c
 16861  003022  6EDA               	movwf	fsr2h,c
 16862  003024  0E00               	movlw	0
 16863  003026  6EDF               	movwf	indf2,c
 16864  003028  2A15               	incf	USBStdSetCfgHandler@i,f,c
 16865  00302A  D7E6               	goto	i2l6283
 16866  00302C                     i2u478_40:
 16867                           
 16868                           ;usb_device.c: 1991: }
 16869                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
 16870  00302C  0EFD               	movlw	low _USBAlternateInterface
 16871  00302E  6E01               	movwf	i2memset@p1,c
 16872  003030  0E01               	movlw	high _USBAlternateInterface
 16873  003032  6E02               	movwf	i2memset@p1+1,c
 16874  003034  0E00               	movlw	0
 16875  003036  6E04               	movwf	i2memset@c+1,c
 16876  003038  0E00               	movlw	0
 16877  00303A  6E03               	movwf	i2memset@c,c
 16878  00303C  0E00               	movlw	0
 16879  00303E  6E06               	movwf	i2memset@n+1,c
 16880  003040  0E02               	movlw	2
 16881  003042  6E05               	movwf	i2memset@n,c
 16882  003044  ECCA  F021         	call	i2_memset	;wreg free
 16883                           
 16884                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
 16885  003048  9C6D               	bcf	3949,6,c	;volatile
 16886                           
 16887                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 16888  00304A  0E08               	movlw	8
 16889  00304C  6E3A               	movwf	_pBDTEntryIn,c
 16890  00304E  0E04               	movlw	4
 16891  003050  6E3B               	movwf	_pBDTEntryIn+1,c
 16892                           
 16893                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 16894  003052  0E00               	movlw	0
 16895  003054  6E4A               	movwf	_pBDTEntryEP0OutCurrent,c
 16896  003056  0E04               	movlw	4
 16897  003058  6E4B               	movwf	_pBDTEntryEP0OutCurrent+1,c
 16898                           
 16899                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 16900  00305A  C04A  F048         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 16901  00305E  C04B  F049         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 16902                           
 16903                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 16904  003062  C432 F05E          	movff	1074,_USBActiveConfiguration	;volatile
 16905                           
 16906                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
 16907  003066  505E               	movf	_USBActiveConfiguration,w,c	;volatile
 16908  003068  A4D8               	btfss	status,2,c
 16909  00306A  D003               	goto	i2l436
 16910                           
 16911                           ;usb_device.c: 2010: {
 16912                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
 16913  00306C  0E10               	movlw	16
 16914  00306E  6E58               	movwf	_USBDeviceState,c	;volatile
 16915                           
 16916                           ;usb_device.c: 2013: }
 16917  003070  0012               	return	
 16918  003072                     i2l436:
 16919                           
 16920                           ;usb_device.c: 2014: else
 16921                           ;usb_device.c: 2015: {
 16922                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 16923  003072  0E00               	movlw	0
 16924  003074  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 16925  003076  0E01               	movlw	1
 16926  003078  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 16927  00307A  0E5E               	movlw	low _USBActiveConfiguration
 16928  00307C  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 16929  00307E  0E00               	movlw	high _USBActiveConfiguration
 16930  003080  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 16931  003082  0E00               	movlw	0
 16932  003084  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 16933  003086  0E01               	movlw	1
 16934  003088  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 16935  00308A  EC29  F01F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 16936                           
 16937                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
 16938  00308E  0E20               	movlw	32
 16939  003090  6E58               	movwf	_USBDeviceState,c	;volatile
 16940  003092  0012               	return	
 16941  003094                     __end_of_USBStdSetCfgHandler:
 16942                           	opt stack 0
 16943                           pclatu	equ	0xFFB
 16944                           pclath	equ	0xFFA
 16945                           tblptru	equ	0xFF8
 16946                           tblptrh	equ	0xFF7
 16947                           tblptrl	equ	0xFF6
 16948                           tablat	equ	0xFF5
 16949                           prodh	equ	0xFF4
 16950                           prodl	equ	0xFF3
 16951                           intcon	equ	0xFF2
 16952                           indf0	equ	0xFEF
 16953                           postinc0	equ	0xFEE
 16954                           fsr0h	equ	0xFEA
 16955                           fsr0l	equ	0xFE9
 16956                           wreg	equ	0xFE8
 16957                           indf1	equ	0xFE7
 16958                           postdec1	equ	0xFE5
 16959                           fsr1h	equ	0xFE2
 16960                           fsr1l	equ	0xFE1
 16961                           indf2	equ	0xFDF
 16962                           postinc2	equ	0xFDE
 16963                           postdec2	equ	0xFDD
 16964                           plusw2	equ	0xFDB
 16965                           fsr2h	equ	0xFDA
 16966                           fsr2l	equ	0xFD9
 16967                           status	equ	0xFD8
 16968                           
 16969 ;; *************** function i2_memset *****************
 16970 ;; Defined at:
 16971 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\memset.c"
 16972 ;; Parameters:    Size  Location     Type
 16973 ;;  p1              2    0[COMRAM] PTR void 
 16974 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 16975 ;;  c               2    2[COMRAM] int 
 16976 ;;  n               2    4[COMRAM] unsigned int 
 16977 ;; Auto vars:     Size  Location     Type
 16978 ;;  memset          2    6[COMRAM] PTR unsigned char 
 16979 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 16980 ;; Return value:  Size  Location     Type
 16981 ;;                  2    0[COMRAM] PTR void 
 16982 ;; Registers used:
 16983 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16984 ;; Tracked objects:
 16985 ;;		On entry : 0/0
 16986 ;;		On exit  : 0/0
 16987 ;;		Unchanged: 0/0
 16988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16989 ;;      Params:         6       0       0       0       0       0       0       0       0
 16990 ;;      Locals:         2       0       0       0       0       0       0       0       0
 16991 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16992 ;;      Totals:         8       0       0       0       0       0       0       0       0
 16993 ;;Total ram usage:        8 bytes
 16994 ;; Hardware stack levels used:    1
 16995 ;; This function calls:
 16996 ;;		Nothing
 16997 ;; This function is called by:
 16998 ;;		_USBStdSetCfgHandler
 16999 ;;		i2_USBDeviceInit
 17000 ;; This function uses a non-reentrant model
 17001 ;;
 17002                           
 17003                           	psect	text70
 17004  004394                     __ptext70:
 17005                           	opt stack 0
 17006  004394                     i2_memset:
 17007                           	opt stack 22
 17008                           
 17009                           ;incstack = 0
 17010  004394  C001  F007         	movff	i2memset@p1,i2memset@p
 17011  004398  C002  F008         	movff	i2memset@p1+1,i2memset@p+1
 17012  00439C  D008               	goto	i2l2389
 17013  00439E                     i2l6213:
 17014  00439E  C007  FFD9         	movff	i2memset@p,fsr2l
 17015  0043A2  C008  FFDA         	movff	i2memset@p+1,fsr2h
 17016  0043A6  C003  FFDF         	movff	i2memset@c,indf2
 17017  0043AA  4A07               	infsnz	i2memset@p,f,c
 17018  0043AC  2A08               	incf	i2memset@p+1,f,c
 17019  0043AE                     i2l2389:
 17020  0043AE  0605               	decf	i2memset@n,f,c
 17021  0043B0  A0D8               	btfss	status,0,c
 17022  0043B2  0606               	decf	i2memset@n+1,f,c
 17023  0043B4  2805               	incf	i2memset@n,w,c
 17024  0043B6  E1F3               	bnz	i2l6213
 17025  0043B8  2806               	incf	i2memset@n+1,w,c
 17026  0043BA  B4D8               	btfsc	status,2,c
 17027  0043BC  0012               	return	
 17028  0043BE  D7EF               	goto	i2l2390
 17029  0043C0                     __end_ofi2_memset:
 17030                           	opt stack 0
 17031                           pclatu	equ	0xFFB
 17032                           pclath	equ	0xFFA
 17033                           tblptru	equ	0xFF8
 17034                           tblptrh	equ	0xFF7
 17035                           tblptrl	equ	0xFF6
 17036                           tablat	equ	0xFF5
 17037                           prodh	equ	0xFF4
 17038                           prodl	equ	0xFF3
 17039                           intcon	equ	0xFF2
 17040                           indf0	equ	0xFEF
 17041                           postinc0	equ	0xFEE
 17042                           fsr0h	equ	0xFEA
 17043                           fsr0l	equ	0xFE9
 17044                           wreg	equ	0xFE8
 17045                           indf1	equ	0xFE7
 17046                           postdec1	equ	0xFE5
 17047                           fsr1h	equ	0xFE2
 17048                           fsr1l	equ	0xFE1
 17049                           indf2	equ	0xFDF
 17050                           postinc2	equ	0xFDE
 17051                           postdec2	equ	0xFDD
 17052                           plusw2	equ	0xFDB
 17053                           fsr2h	equ	0xFDA
 17054                           fsr2l	equ	0xFD9
 17055                           status	equ	0xFD8
 17056                           
 17057 ;; *************** function _USBStdGetStatusHandler *****************
 17058 ;; Defined at:
 17059 ;;		line 2129 in file "../../../../microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 17060 ;; Parameters:    Size  Location     Type
 17061 ;;		None
 17062 ;; Auto vars:     Size  Location     Type
 17063 ;;  p               2    1[COMRAM] PTR struct __BDT
 17064 ;;		 -> RAM(2047), NULL(0), BDT(48), 
 17065 ;; Return value:  Size  Location     Type
 17066 ;;                  1    wreg      void 
 17067 ;; Registers used:
 17068 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17069 ;; Tracked objects:
 17070 ;;		On entry : 0/0
 17071 ;;		On exit  : 0/0
 17072 ;;		Unchanged: 0/0
 17073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17074 ;;      Params:         0       0       0       0       0       0       0       0       0
 17075 ;;      Locals:         2       0       0       0       0       0       0       0       0
 17076 ;;      Temps:          1       0       0       0       0       0       0       0       0
 17077 ;;      Totals:         3       0       0       0       0       0       0       0       0
 17078 ;;Total ram usage:        3 bytes
 17079 ;; Hardware stack levels used:    1
 17080 ;; This function calls:
 17081 ;;		Nothing
 17082 ;; This function is called by:
 17083 ;;		_USBCheckStdRequest
 17084 ;; This function uses a non-reentrant model
 17085 ;;
 17086                           
 17087                           	psect	text71
 17088  0034F0                     __ptext71:
 17089                           	opt stack 0
 17090  0034F0                     _USBStdGetStatusHandler:
 17091                           	opt stack 20
 17092                           
 17093                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
 17094                           
 17095                           ;incstack = 0
 17096  0034F0  0E00               	movlw	0
 17097  0034F2  0104               	movlb	4	; () banked
 17098  0034F4  6F38               	movwf	56,b	;volatile
 17099                           
 17100                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
 17101  0034F6  0E00               	movlw	0
 17102  0034F8  6F39               	movwf	57,b	;volatile
 17103                           
 17104                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
 17105  0034FA  D038               	goto	i2l455
 17106  0034FC                     i2l456:
 17107                           
 17108                           ; BSR set to: 4
 17109                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
 17110  0034FC  0100               	movlb	0	; () banked
 17111  0034FE  8FFA               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 17112                           
 17113                           ;usb_device.c: 2145: }
 17114                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
 17115                           
 17116                           ; BSR set to: 4
 17117                           
 17118                           ; BSR set to: 0
 17119                           ;usb_device.c: 2143: {
 17120                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
 17121                           
 17122                           ;usb_device.c: 2142: if(0 == 1)
 17123  003500  0455               	decf	_RemoteWakeup,w,c	;volatile
 17124  003502  A4D8               	btfss	status,2,c
 17125  003504  D03E               	goto	i2l459
 17126                           
 17127                           ;usb_device.c: 2148: {
 17128                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
 17129  003506  0104               	movlb	4	; () banked
 17130  003508  8338               	bsf	56,1,b	;volatile
 17131                           
 17132                           ; BSR set to: 4
 17133                           ;usb_device.c: 2150: }
 17134                           ;usb_device.c: 2151: break;
 17135  00350A  D03B               	goto	i2l459
 17136  00350C                     i2l460:
 17137                           
 17138                           ; BSR set to: 4
 17139                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
 17140  00350C  0100               	movlb	0	; () banked
 17141  00350E  8FFA               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 17142                           
 17143                           ;usb_device.c: 2154: break;
 17144  003510  D038               	goto	i2l459
 17145  003512                     i2l461:
 17146                           
 17147                           ; BSR set to: 4
 17148                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
 17149  003512  0100               	movlb	0	; () banked
 17150  003514  8FFA               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 17151                           
 17152                           ;usb_device.c: 2160: {
 17153                           ;usb_device.c: 2161: BDT_ENTRY *p;
 17154                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
 17155  003516  0104               	movlb	4	; () banked
 17156  003518  BF34               	btfsc	52,7,b	;volatile
 17157  00351A  D00A               	goto	i2l462
 17158                           
 17159                           ; BSR set to: 4
 17160                           ;usb_device.c: 2164: {
 17161                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 17162  00351C  5134               	movf	52,w,b	;volatile
 17163  00351E  0B0F               	andlw	15
 17164  003520  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 17165  003522  5001               	movf	??_USBStdGetStatusHandler,w,c
 17166  003524  0D02               	mullw	2
 17167  003526  0E1E               	movlw	low _pBDTEntryOut
 17168  003528  24F3               	addwf	prodl,w,c
 17169  00352A  6ED9               	movwf	fsr2l,c
 17170  00352C  0E02               	movlw	high _pBDTEntryOut
 17171  00352E  D009               	goto	L13
 17172  003530                     i2l462:
 17173                           
 17174                           ; BSR set to: 4
 17175                           ;usb_device.c: 2167: else
 17176                           ;usb_device.c: 2168: {
 17177                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 17178                           
 17179                           ; BSR set to: 4
 17180  003530  5134               	movf	52,w,b	;volatile
 17181  003532  0B0F               	andlw	15
 17182  003534  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 17183  003536  5001               	movf	??_USBStdGetStatusHandler,w,c
 17184  003538  0D02               	mullw	2
 17185  00353A  0E3A               	movlw	low _pBDTEntryIn
 17186  00353C  24F3               	addwf	prodl,w,c
 17187  00353E  6ED9               	movwf	fsr2l,c
 17188  003540  0E00               	movlw	high _pBDTEntryIn
 17189  003542                     L13:
 17190  003542  20F4               	addwfc	prodh,w,c
 17191  003544  6EDA               	movwf	fsr2h,c
 17192  003546  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 17193  00354A  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 17194                           
 17195                           ; BSR set to: 4
 17196                           ;usb_device.c: 2170: }
 17197                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 17198                           
 17199                           ; BSR set to: 4
 17200  00354E  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 17201  003552  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 17202  003556  AEDF               	btfss	indf2,7,c
 17203  003558  D014               	goto	i2l459
 17204                           
 17205                           ; BSR set to: 4
 17206  00355A  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 17207  00355E  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 17208  003562  A4DF               	btfss	indf2,2,c
 17209  003564  D00E               	goto	i2l459
 17210                           
 17211                           ; BSR set to: 4
 17212                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
 17213  003566  0E01               	movlw	1
 17214  003568  6F38               	movwf	56,b	;volatile
 17215                           
 17216                           ; BSR set to: 4
 17217                           ;usb_device.c: 2175: }
 17218                           ;usb_device.c: 2176: }
 17219                           
 17220                           ; BSR set to: 4
 17221                           ;usb_device.c: 2174: break;
 17222  00356A  D00B               	goto	i2l459
 17223  00356C                     i2l455:
 17224                           
 17225                           ; BSR set to: 4
 17226                           
 17227                           ; BSR set to: 4
 17228  00356C  5130               	movf	48,w,b	;volatile
 17229  00356E  0B1F               	andlw	31
 17230                           
 17231                           ; Switch size 1, requested type "space"
 17232                           ; Number of cases is 3, Range of values is 0 to 2
 17233                           ; switch strategies available:
 17234                           ; Name         Instructions Cycles
 17235                           ; simple_byte           10     6 (average)
 17236                           ;	Chosen strategy is simple_byte
 17237  003570  0A00               	xorlw	0	; case 0
 17238  003572  B4D8               	btfsc	status,2,c
 17239  003574  D7C3               	goto	i2l456
 17240  003576  0A01               	xorlw	1	; case 1
 17241  003578  B4D8               	btfsc	status,2,c
 17242  00357A  D7C8               	goto	i2l460
 17243  00357C  0A03               	xorlw	3	; case 2
 17244  00357E  B4D8               	btfsc	status,2,c
 17245  003580  D7C8               	goto	i2l461
 17246  003582                     i2l459:
 17247                           
 17248                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
 17249  003582  0100               	movlb	0	; () banked
 17250  003584  AFFA               	btfss	(_inPipes+3)& (0+255),7,b	;volatile
 17251  003586  0012               	return	
 17252                           
 17253                           ; BSR set to: 0
 17254                           ;usb_device.c: 2179: {
 17255                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 17256  003588  0E38               	movlw	56
 17257  00358A  6FF7               	movwf	_inPipes& (0+255),b	;volatile
 17258  00358C  0E04               	movlw	4
 17259  00358E  6FF8               	movwf	(_inPipes+1)& (0+255),b	;volatile
 17260                           
 17261                           ; BSR set to: 0
 17262                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 17263  003590  81FA               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 17264                           
 17265                           ; BSR set to: 0
 17266                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
 17267  003592  0E02               	movlw	2
 17268  003594  6FFB               	movwf	(_inPipes+4)& (0+255),b	;volatile
 17269  003596  0012               	return	
 17270  003598                     __end_of_USBStdGetStatusHandler:
 17271                           	opt stack 0
 17272                           pclatu	equ	0xFFB
 17273                           pclath	equ	0xFFA
 17274                           tblptru	equ	0xFF8
 17275                           tblptrh	equ	0xFF7
 17276                           tblptrl	equ	0xFF6
 17277                           tablat	equ	0xFF5
 17278                           prodh	equ	0xFF4
 17279                           prodl	equ	0xFF3
 17280                           intcon	equ	0xFF2
 17281                           indf0	equ	0xFEF
 17282                           postinc0	equ	0xFEE
 17283                           fsr0h	equ	0xFEA
 17284                           fsr0l	equ	0xFE9
 17285                           wreg	equ	0xFE8
 17286                           indf1	equ	0xFE7
 17287                           postdec1	equ	0xFE5
 17288                           fsr1h	equ	0xFE2
 17289                           fsr1l	equ	0xFE1
 17290                           indf2	equ	0xFDF
 17291                           postinc2	equ	0xFDE
 17292                           postdec2	equ	0xFDD
 17293                           plusw2	equ	0xFDB
 17294                           fsr2h	equ	0xFDA
 17295                           fsr2l	equ	0xFD9
 17296                           status	equ	0xFD8
 17297                           
 17298 ;; *************** function _USBStdGetDscHandler *****************
 17299 ;; Defined at:
 17300 ;;		line 2043 in file "../../../../microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 17301 ;; Parameters:    Size  Location     Type
 17302 ;;		None
 17303 ;; Auto vars:     Size  Location     Type
 17304 ;;		None
 17305 ;; Return value:  Size  Location     Type
 17306 ;;                  1    wreg      void 
 17307 ;; Registers used:
 17308 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 17309 ;; Tracked objects:
 17310 ;;		On entry : 0/0
 17311 ;;		On exit  : 0/0
 17312 ;;		Unchanged: 0/0
 17313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17314 ;;      Params:         0       0       0       0       0       0       0       0       0
 17315 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17316 ;;      Temps:          2       0       0       0       0       0       0       0       0
 17317 ;;      Totals:         2       0       0       0       0       0       0       0       0
 17318 ;;Total ram usage:        2 bytes
 17319 ;; Hardware stack levels used:    1
 17320 ;; This function calls:
 17321 ;;		Nothing
 17322 ;; This function is called by:
 17323 ;;		_USBCheckStdRequest
 17324 ;; This function uses a non-reentrant model
 17325 ;;
 17326                           
 17327                           	psect	text72
 17328  002044                     __ptext72:
 17329                           	opt stack 0
 17330  002044                     _USBStdGetDscHandler:
 17331                           	opt stack 20
 17332                           
 17333                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
 17334                           
 17335                           ; BSR set to: 0
 17336                           ;incstack = 0
 17337  002044  0E80               	movlw	128
 17338  002046  0104               	movlb	4	; () banked
 17339  002048  1930               	xorwf	48,w,b	;volatile
 17340  00204A  A4D8               	btfss	status,2,c
 17341  00204C  0012               	return	
 17342                           
 17343                           ; BSR set to: 4
 17344                           ;usb_device.c: 2046: {
 17345                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 17346  00204E  0EC0               	movlw	192
 17347  002050  0100               	movlb	0	; () banked
 17348  002052  6FFA               	movwf	(_inPipes+3)& (0+255),b	;volatile
 17349                           
 17350                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
 17351  002054  D082               	goto	i2l442
 17352  002056                     
 17353                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 17354                           
 17355                           ; BSR set to: 0
 17356  002056  0E9A               	movlw	low _device_dsc
 17357  002058  0100               	movlb	0	; () banked
 17358  00205A  6FF7               	movwf	_inPipes& (0+255),b	;volatile
 17359  00205C  0E7E               	movlw	high _device_dsc
 17360  00205E  6FF8               	movwf	(_inPipes+1)& (0+255),b	;volatile
 17361                           
 17362                           ; BSR set to: 0
 17363                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
 17364  002060  0E00               	movlw	0
 17365  002062  6FFC               	movwf	(_inPipes+5)& (0+255),b	;volatile
 17366  002064  0E12               	movlw	18
 17367  002066  6FFB               	movwf	(_inPipes+4)& (0+255),b	;volatile
 17368                           
 17369                           ;usb_device.c: 2058: break;
 17370  002068  0012               	return	
 17371  00206A                     
 17372                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
 17373                           
 17374                           ; BSR set to: 0
 17375  00206A  0104               	movlb	4	; () banked
 17376  00206C  5132               	movf	50,w,b	;volatile
 17377  00206E  A4D8               	btfss	status,2,c
 17378  002070  D040               	goto	i2l446
 17379                           
 17380                           ; BSR set to: 4
 17381                           ;usb_device.c: 2064: {
 17382                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 17383  002072  5132               	movf	50,w,b	;volatile
 17384  002074  0D02               	mullw	2
 17385  002076  0EED               	movlw	low _USB_CD_Ptr
 17386  002078  24F3               	addwf	prodl,w,c
 17387  00207A  6EF6               	movwf	tblptrl,c
 17388  00207C  0E7D               	movlw	high _USB_CD_Ptr
 17389  00207E  20F4               	addwfc	prodh,w,c
 17390  002080  6EF7               	movwf	tblptrh,c
 17391  002082                     	if	0	;There are less than 3 active tblptr bytes
 17392  002082                     	endif
 17393  002082  0009               	tblrd		*+
 17394  002084  CFF5 F0F7          	movff	tablat,_inPipes	;volatile
 17395  002088  000A               	tblrd		*-
 17396  00208A  CFF5 F0F8          	movff	tablat,_inPipes+1	;volatile
 17397                           
 17398                           ; BSR set to: 4
 17399                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 17400  00208E  0E02               	movlw	2
 17401  002090  0100               	movlb	0	; () banked
 17402  002092  25F7               	addwf	_inPipes& (0+255),w,b	;volatile
 17403  002094  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 17404  002096  0E00               	movlw	0
 17405  002098  21F8               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 17406  00209A  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 17407  00209C  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 17408  0020A0  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 17409  0020A4  6AF8               	clrf	tblptru,c
 17410  0020A6  0E07               	movlw	(high __ramtop+-1)
 17411  0020A8  64F7               	cpfsgt	tblptrh,c
 17412  0020AA  D003               	bra	i2u482_47
 17413  0020AC  0008               	tblrd		*
 17414  0020AE  50F5               	movf	tablat,w,c
 17415  0020B0  D005               	bra	i2u482_40
 17416  0020B2                     i2u482_47:
 17417  0020B2  CFF6 FFE9          	movff	tblptrl,fsr0l
 17418  0020B6  CFF7 FFEA          	movff	tblptrh,fsr0h
 17419  0020BA  50EF               	movf	indf0,w,c
 17420  0020BC                     i2u482_40:
 17421  0020BC  0100               	movlb	0	; () banked
 17422  0020BE  6FFB               	movwf	(_inPipes+4)& (0+255),b	;volatile
 17423                           
 17424                           ; BSR set to: 0
 17425                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 17426  0020C0  0E03               	movlw	3
 17427  0020C2  25F7               	addwf	_inPipes& (0+255),w,b	;volatile
 17428  0020C4  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 17429  0020C6  0E00               	movlw	0
 17430  0020C8  21F8               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 17431  0020CA  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 17432  0020CC  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 17433  0020D0  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 17434  0020D4  6AF8               	clrf	tblptru,c
 17435  0020D6  0E07               	movlw	(high __ramtop+-1)
 17436  0020D8  64F7               	cpfsgt	tblptrh,c
 17437  0020DA  D003               	bra	i2u483_47
 17438  0020DC  0008               	tblrd		*
 17439  0020DE  50F5               	movf	tablat,w,c
 17440  0020E0  D005               	bra	i2u483_40
 17441  0020E2                     i2u483_47:
 17442  0020E2  CFF6 FFE9          	movff	tblptrl,fsr0l
 17443  0020E6  CFF7 FFEA          	movff	tblptrh,fsr0h
 17444  0020EA  50EF               	movf	indf0,w,c
 17445  0020EC                     i2u483_40:
 17446  0020EC  0100               	movlb	0	; () banked
 17447  0020EE  6FFC               	movwf	(_inPipes+5)& (0+255),b	;volatile
 17448                           
 17449                           ;usb_device.c: 2076: }
 17450  0020F0  0012               	return	
 17451  0020F2                     i2l446:
 17452                           
 17453                           ;usb_device.c: 2077: else
 17454                           ;usb_device.c: 2078: {
 17455                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
 17456                           
 17457                           ; BSR set to: 0
 17458  0020F2  0E00               	movlw	0
 17459  0020F4  0100               	movlb	0	; () banked
 17460  0020F6  6FFA               	movwf	(_inPipes+3)& (0+255),b	;volatile
 17461                           
 17462                           ; BSR set to: 0
 17463                           ;usb_device.c: 2080: }
 17464                           ;usb_device.c: 2081: break;
 17465  0020F8  0012               	return	
 17466  0020FA                     
 17467                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
 17468                           
 17469                           ; BSR set to: 0
 17470  0020FA  0E03               	movlw	3
 17471  0020FC  0104               	movlb	4	; () banked
 17472  0020FE  6132               	cpfslt	50,b	;volatile
 17473  002100  D024               	goto	i2l449
 17474                           
 17475                           ; BSR set to: 4
 17476                           ;usb_device.c: 2087: {
 17477                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 17478  002102  5132               	movf	50,w,b	;volatile
 17479  002104  0D02               	mullw	2
 17480  002106  0EE7               	movlw	low _USB_SD_Ptr
 17481  002108  24F3               	addwf	prodl,w,c
 17482  00210A  6EF6               	movwf	tblptrl,c
 17483  00210C  0E7D               	movlw	high _USB_SD_Ptr
 17484  00210E  20F4               	addwfc	prodh,w,c
 17485  002110  6EF7               	movwf	tblptrh,c
 17486  002112                     	if	0	;There are less than 3 active tblptr bytes
 17487  002112                     	endif
 17488  002112  0009               	tblrd		*+
 17489  002114  CFF5 F0F7          	movff	tablat,_inPipes	;volatile
 17490  002118  000A               	tblrd		*-
 17491  00211A  CFF5 F0F8          	movff	tablat,_inPipes+1	;volatile
 17492                           
 17493                           ; BSR set to: 4
 17494                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 17495  00211E  C0F7  FFF6         	movff	_inPipes,tblptrl	;volatile
 17496  002122  C0F8  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 17497  002126  6AF8               	clrf	tblptru,c
 17498  002128  0E07               	movlw	(high __ramtop+-1)
 17499  00212A  64F7               	cpfsgt	tblptrh,c
 17500  00212C  D003               	bra	i2u485_47
 17501  00212E  0008               	tblrd		*
 17502  002130  50F5               	movf	tablat,w,c
 17503  002132  D005               	bra	i2u485_40
 17504  002134                     i2u485_47:
 17505  002134  CFF6 FFE9          	movff	tblptrl,fsr0l
 17506  002138  CFF7 FFEA          	movff	tblptrh,fsr0h
 17507  00213C  50EF               	movf	indf0,w,c
 17508  00213E                     i2u485_40:
 17509  00213E  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 17510  002140  5001               	movf	??_USBStdGetDscHandler,w,c
 17511  002142  0100               	movlb	0	; () banked
 17512  002144  6FFB               	movwf	(_inPipes+4)& (0+255),b	;volatile
 17513  002146  6BFC               	clrf	(_inPipes+5)& (0+255),b	;volatile
 17514                           
 17515                           ;usb_device.c: 2092: }
 17516  002148  0012               	return	
 17517  00214A                     i2l449:
 17518                           
 17519                           ;usb_device.c: 2102: else
 17520                           ;usb_device.c: 2103: {
 17521                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
 17522                           
 17523                           ; BSR set to: 0
 17524  00214A  0E00               	movlw	0
 17525  00214C  0100               	movlb	0	; () banked
 17526  00214E  6FFA               	movwf	(_inPipes+3)& (0+255),b	;volatile
 17527                           
 17528                           ; BSR set to: 0
 17529                           ;usb_device.c: 2105: }
 17530                           ;usb_device.c: 2106: break;
 17531  002150  0012               	return	
 17532  002152                     
 17533                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
 17534                           
 17535                           ; BSR set to: 0
 17536  002152  0E00               	movlw	0
 17537  002154  0100               	movlb	0	; () banked
 17538  002156  6FFA               	movwf	(_inPipes+3)& (0+255),b	;volatile
 17539                           
 17540                           ; BSR set to: 0
 17541                           ;usb_device.c: 2110: }
 17542                           
 17543                           ;usb_device.c: 2109: break;
 17544  002158  0012               	return	
 17545  00215A                     i2l442:
 17546                           
 17547                           ; BSR set to: 0
 17548                           
 17549                           ; BSR set to: 0
 17550  00215A  0104               	movlb	4	; () banked
 17551  00215C  5133               	movf	51,w,b	;volatile
 17552                           
 17553                           ; Switch size 1, requested type "space"
 17554                           ; Number of cases is 3, Range of values is 1 to 3
 17555                           ; switch strategies available:
 17556                           ; Name         Instructions Cycles
 17557                           ; simple_byte           10     6 (average)
 17558                           ;	Chosen strategy is simple_byte
 17559  00215E  0A01               	xorlw	1	; case 1
 17560  002160  B4D8               	btfsc	status,2,c
 17561  002162  D779               	goto	i2l443
 17562  002164  0A03               	xorlw	3	; case 2
 17563  002166  B4D8               	btfsc	status,2,c
 17564  002168  D780               	goto	i2l445
 17565  00216A  0A01               	xorlw	1	; case 3
 17566  00216C  B4D8               	btfsc	status,2,c
 17567  00216E  D7C5               	goto	i2l448
 17568  002170  D7F0               	goto	i2l451
 17569  002172                     __end_of_USBStdGetDscHandler:
 17570                           	opt stack 0
 17571                           pclatu	equ	0xFFB
 17572                           pclath	equ	0xFFA
 17573                           tblptru	equ	0xFF8
 17574                           tblptrh	equ	0xFF7
 17575                           tblptrl	equ	0xFF6
 17576                           tablat	equ	0xFF5
 17577                           prodh	equ	0xFF4
 17578                           prodl	equ	0xFF3
 17579                           intcon	equ	0xFF2
 17580                           indf0	equ	0xFEF
 17581                           postinc0	equ	0xFEE
 17582                           fsr0h	equ	0xFEA
 17583                           fsr0l	equ	0xFE9
 17584                           wreg	equ	0xFE8
 17585                           indf1	equ	0xFE7
 17586                           postdec1	equ	0xFE5
 17587                           fsr1h	equ	0xFE2
 17588                           fsr1l	equ	0xFE1
 17589                           indf2	equ	0xFDF
 17590                           postinc2	equ	0xFDE
 17591                           postdec2	equ	0xFDD
 17592                           plusw2	equ	0xFDB
 17593                           fsr2h	equ	0xFDA
 17594                           fsr2l	equ	0xFD9
 17595                           status	equ	0xFD8
 17596                           
 17597 ;; *************** function _USBStdFeatureReqHandler *****************
 17598 ;; Defined at:
 17599 ;;		line 2754 in file "../../../../microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 17600 ;; Parameters:    Size  Location     Type
 17601 ;;		None
 17602 ;; Auto vars:     Size  Location     Type
 17603 ;;  p               2   24[COMRAM] PTR struct __BDT
 17604 ;;		 -> RAM(2047), NULL(0), BDT(48), 
 17605 ;;  pUEP            2   21[COMRAM] PTR unsigned char 
 17606 ;;		 -> UEP0(1), 
 17607 ;;  current_ep_d    1   23[COMRAM] struct .
 17608 ;; Return value:  Size  Location     Type
 17609 ;;                  1    wreg      void 
 17610 ;; Registers used:
 17611 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17612 ;; Tracked objects:
 17613 ;;		On entry : 0/0
 17614 ;;		On exit  : 0/0
 17615 ;;		Unchanged: 0/0
 17616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17617 ;;      Params:         0       0       0       0       0       0       0       0       0
 17618 ;;      Locals:         5       0       0       0       0       0       0       0       0
 17619 ;;      Temps:          1       0       0       0       0       0       0       0       0
 17620 ;;      Totals:         6       0       0       0       0       0       0       0       0
 17621 ;;Total ram usage:        6 bytes
 17622 ;; Hardware stack levels used:    1
 17623 ;; Hardware stack levels required when called:    4
 17624 ;; This function calls:
 17625 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 17626 ;; This function is called by:
 17627 ;;		_USBCheckStdRequest
 17628 ;; This function uses a non-reentrant model
 17629 ;;
 17630                           
 17631                           	psect	text73
 17632  00101A                     __ptext73:
 17633                           	opt stack 0
 17634  00101A                     _USBStdFeatureReqHandler:
 17635                           	opt stack 16
 17636                           
 17637                           ;usb_device.c: 2756: BDT_ENTRY *p;
 17638                           ;usb_device.c: 2757: EP_STATUS current_ep_data;
 17639                           ;usb_device.c: 2761: unsigned char* pUEP;
 17640                           ;usb_device.c: 2799: if((SetupPkt.bFeature == 1)&&
 17641                           ;usb_device.c: 2800: (SetupPkt.Recipient == (0x00)))
 17642                           
 17643                           ;incstack = 0
 17644  00101A  0104               	movlb	4	; () banked
 17645  00101C  0532               	decf	50,w,b	;volatile
 17646  00101E  A4D8               	btfss	status,2,c
 17647  001020  D010               	goto	i2l535
 17648                           
 17649                           ; BSR set to: 4
 17650  001022  5130               	movf	48,w,b	;volatile
 17651  001024  0B1F               	andlw	31
 17652  001026  0900               	iorlw	0
 17653  001028  A4D8               	btfss	status,2,c
 17654  00102A  D00B               	goto	i2l535
 17655                           
 17656                           ; BSR set to: 4
 17657                           ;usb_device.c: 2801: {
 17658                           ;usb_device.c: 2802: inPipes[0].info.bits.busy = 1;
 17659  00102C  0100               	movlb	0	; () banked
 17660  00102E  8FFA               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 17661                           
 17662                           ; BSR set to: 0
 17663                           ;usb_device.c: 2803: if(SetupPkt.bRequest == 3)
 17664  001030  0E03               	movlw	3
 17665  001032  0104               	movlb	4	; () banked
 17666  001034  1931               	xorwf	49,w,b	;volatile
 17667  001036  A4D8               	btfss	status,2,c
 17668  001038  D002               	goto	i2l534
 17669                           
 17670                           ; BSR set to: 4
 17671                           ;usb_device.c: 2804: RemoteWakeup = 1;
 17672  00103A  0E01               	movlw	1
 17673  00103C  D001               	goto	L14
 17674  00103E                     i2l534:
 17675                           
 17676                           ; BSR set to: 4
 17677                           ;usb_device.c: 2805: else
 17678                           ;usb_device.c: 2806: RemoteWakeup = 0;
 17679                           
 17680                           ; BSR set to: 4
 17681  00103E  0E00               	movlw	0
 17682  001040                     L14:
 17683  001040  6E55               	movwf	_RemoteWakeup,c	;volatile
 17684  001042                     i2l535:
 17685                           
 17686                           ; BSR set to: 4
 17687                           ;usb_device.c: 2807: }
 17688                           ;usb_device.c: 2810: if((SetupPkt.bFeature == 0)&&
 17689                           ;usb_device.c: 2811: (SetupPkt.Recipient == (0x02))&&
 17690                           ;usb_device.c: 2812: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 17691                           ;usb_device.c: 2813: (USBDeviceState == CONFIGURED_STATE))
 17692                           
 17693                           ; BSR set to: 4
 17694  001042  5132               	movf	50,w,b	;volatile
 17695  001044  A4D8               	btfss	status,2,c
 17696  001046  0012               	return	
 17697                           
 17698                           ; BSR set to: 4
 17699  001048  5130               	movf	48,w,b	;volatile
 17700  00104A  0B1F               	andlw	31
 17701  00104C  0A02               	xorlw	2
 17702  00104E  A4D8               	btfss	status,2,c
 17703  001050  0012               	return	
 17704                           
 17705                           ; BSR set to: 4
 17706  001052  5134               	movf	52,w,b	;volatile
 17707  001054  0B0F               	andlw	15
 17708  001056  0900               	iorlw	0
 17709  001058  B4D8               	btfsc	status,2,c
 17710  00105A  0012               	return	
 17711                           
 17712                           ; BSR set to: 4
 17713  00105C  5134               	movf	52,w,b	;volatile
 17714  00105E  0B0F               	andlw	15
 17715  001060  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17716  001062  0E03               	movlw	3
 17717  001064  6015               	cpfslt	??_USBStdFeatureReqHandler,c
 17718  001066  0012               	return	
 17719                           
 17720                           ; BSR set to: 4
 17721  001068  0E20               	movlw	32
 17722  00106A  1858               	xorwf	_USBDeviceState,w,c	;volatile
 17723  00106C  A4D8               	btfss	status,2,c
 17724  00106E  0012               	return	
 17725                           
 17726                           ; BSR set to: 4
 17727                           ;usb_device.c: 2814: {
 17728                           ;usb_device.c: 2817: inPipes[0].info.bits.busy = 1;
 17729  001070  0100               	movlb	0	; () banked
 17730  001072  8FFA               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 17731                           
 17732                           ;usb_device.c: 2820: if(SetupPkt.EPDir == 0)
 17733  001074  0104               	movlb	4	; () banked
 17734  001076  BF34               	btfsc	52,7,b	;volatile
 17735  001078  D019               	goto	i2l537
 17736                           
 17737                           ; BSR set to: 4
 17738                           ;usb_device.c: 2821: {
 17739                           ;usb_device.c: 2822: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 17740  00107A  5134               	movf	52,w,b	;volatile
 17741  00107C  0B0F               	andlw	15
 17742  00107E  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17743  001080  5015               	movf	??_USBStdFeatureReqHandler,w,c
 17744  001082  0D02               	mullw	2
 17745  001084  0E1E               	movlw	low _pBDTEntryOut
 17746  001086  24F3               	addwf	prodl,w,c
 17747  001088  6ED9               	movwf	fsr2l,c
 17748  00108A  0E02               	movlw	high _pBDTEntryOut
 17749  00108C  20F4               	addwfc	prodh,w,c
 17750  00108E  6EDA               	movwf	fsr2h,c
 17751  001090  CFDE F019          	movff	postinc2,USBStdFeatureReqHandler@p
 17752  001094  CFDD F01A          	movff	postdec2,USBStdFeatureReqHandler@p+1
 17753                           
 17754                           ;usb_device.c: 2823: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 17755  001098  5134               	movf	52,w,b	;volatile
 17756  00109A  0B0F               	andlw	15
 17757  00109C  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17758  00109E  5015               	movf	??_USBStdFeatureReqHandler,w,c
 17759  0010A0  0D01               	mullw	1
 17760  0010A2  0EEB               	movlw	low _ep_data_out
 17761  0010A4  24F3               	addwf	prodl,w,c
 17762  0010A6  6ED9               	movwf	fsr2l,c
 17763  0010A8  0E01               	movlw	high _ep_data_out
 17764  0010AA  D018               	goto	L15
 17765  0010AC                     i2l537:
 17766                           
 17767                           ; BSR set to: 4
 17768                           ;usb_device.c: 2825: else
 17769                           ;usb_device.c: 2826: {
 17770                           ;usb_device.c: 2827: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 17771                           
 17772                           ; BSR set to: 4
 17773  0010AC  5134               	movf	52,w,b	;volatile
 17774  0010AE  0B0F               	andlw	15
 17775  0010B0  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17776  0010B2  5015               	movf	??_USBStdFeatureReqHandler,w,c
 17777  0010B4  0D02               	mullw	2
 17778  0010B6  0E3A               	movlw	low _pBDTEntryIn
 17779  0010B8  24F3               	addwf	prodl,w,c
 17780  0010BA  6ED9               	movwf	fsr2l,c
 17781  0010BC  0E00               	movlw	high _pBDTEntryIn
 17782  0010BE  20F4               	addwfc	prodh,w,c
 17783  0010C0  6EDA               	movwf	fsr2h,c
 17784  0010C2  CFDE F019          	movff	postinc2,USBStdFeatureReqHandler@p
 17785  0010C6  CFDD F01A          	movff	postdec2,USBStdFeatureReqHandler@p+1
 17786                           
 17787                           ;usb_device.c: 2828: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 17788  0010CA  5134               	movf	52,w,b	;volatile
 17789  0010CC  0B0F               	andlw	15
 17790  0010CE  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17791  0010D0  5015               	movf	??_USBStdFeatureReqHandler,w,c
 17792  0010D2  0D01               	mullw	1
 17793  0010D4  0EEE               	movlw	low _ep_data_in
 17794  0010D6  24F3               	addwf	prodl,w,c
 17795  0010D8  6ED9               	movwf	fsr2l,c
 17796  0010DA  0E01               	movlw	high _ep_data_in
 17797  0010DC                     L15:
 17798  0010DC  20F4               	addwfc	prodh,w,c
 17799  0010DE  6EDA               	movwf	fsr2h,c
 17800  0010E0  50DF               	movf	indf2,w,c
 17801  0010E2  6E18               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 17802                           
 17803                           ; BSR set to: 4
 17804                           ;usb_device.c: 2829: }
 17805                           ;usb_device.c: 2835: if(current_ep_data.bits.ping_pong_state == 0)
 17806                           
 17807                           ; BSR set to: 4
 17808  0010E4  B018               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 17809  0010E6  D006               	goto	i2l539
 17810                           
 17811                           ; BSR set to: 4
 17812                           ;usb_device.c: 2836: {
 17813                           ;usb_device.c: 2837: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 17814  0010E8  0EFB               	movlw	251
 17815  0010EA  1419               	andwf	USBStdFeatureReqHandler@p,w,c
 17816  0010EC  6E19               	movwf	USBStdFeatureReqHandler@p,c
 17817  0010EE  0EFF               	movlw	255
 17818  0010F0  141A               	andwf	USBStdFeatureReqHandler@p+1,w,c
 17819  0010F2  D004               	goto	L16
 17820  0010F4                     i2l539:
 17821                           
 17822                           ; BSR set to: 4
 17823                           ;usb_device.c: 2839: else
 17824                           ;usb_device.c: 2840: {
 17825                           ;usb_device.c: 2841: p = (BDT_ENTRY*)(((uintptr_t)p) | 0x0004);
 17826                           
 17827                           ; BSR set to: 4
 17828  0010F4  0E04               	movlw	4
 17829  0010F6  1019               	iorwf	USBStdFeatureReqHandler@p,w,c
 17830  0010F8  6E19               	movwf	USBStdFeatureReqHandler@p,c
 17831  0010FA  501A               	movf	USBStdFeatureReqHandler@p+1,w,c
 17832  0010FC                     L16:
 17833  0010FC  6E1A               	movwf	USBStdFeatureReqHandler@p+1,c
 17834                           
 17835                           ; BSR set to: 4
 17836                           ;usb_device.c: 2842: }
 17837                           ;usb_device.c: 2847: if(SetupPkt.EPDir == 0)
 17838                           
 17839                           ; BSR set to: 4
 17840  0010FE  BF34               	btfsc	52,7,b	;volatile
 17841  001100  D00A               	goto	i2l541
 17842                           
 17843                           ; BSR set to: 4
 17844                           ;usb_device.c: 2848: {
 17845                           ;usb_device.c: 2849: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 17846  001102  5134               	movf	52,w,b	;volatile
 17847  001104  0B0F               	andlw	15
 17848  001106  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17849  001108  5015               	movf	??_USBStdFeatureReqHandler,w,c
 17850  00110A  0D02               	mullw	2
 17851  00110C  0E1E               	movlw	low _pBDTEntryOut
 17852  00110E  24F3               	addwf	prodl,w,c
 17853  001110  6ED9               	movwf	fsr2l,c
 17854  001112  0E02               	movlw	high _pBDTEntryOut
 17855  001114  D009               	goto	L17
 17856  001116                     i2l541:
 17857                           
 17858                           ; BSR set to: 4
 17859                           ;usb_device.c: 2851: else
 17860                           ;usb_device.c: 2852: {
 17861                           ;usb_device.c: 2853: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 17862                           
 17863                           ; BSR set to: 4
 17864  001116  5134               	movf	52,w,b	;volatile
 17865  001118  0B0F               	andlw	15
 17866  00111A  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17867  00111C  5015               	movf	??_USBStdFeatureReqHandler,w,c
 17868  00111E  0D02               	mullw	2
 17869  001120  0E3A               	movlw	low _pBDTEntryIn
 17870  001122  24F3               	addwf	prodl,w,c
 17871  001124  6ED9               	movwf	fsr2l,c
 17872  001126  0E00               	movlw	high _pBDTEntryIn
 17873  001128                     L17:
 17874  001128  20F4               	addwfc	prodh,w,c
 17875  00112A  6EDA               	movwf	fsr2h,c
 17876  00112C  C019  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 17877  001130  C01A  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 17878                           
 17879                           ; BSR set to: 4
 17880                           ;usb_device.c: 2854: }
 17881                           ;usb_device.c: 2857: if(SetupPkt.bRequest == 3)
 17882                           
 17883                           ; BSR set to: 4
 17884  001134  0E03               	movlw	3
 17885  001136  1931               	xorwf	49,w,b	;volatile
 17886  001138  A4D8               	btfss	status,2,c
 17887  00113A  D02D               	goto	i2l543
 17888                           
 17889                           ; BSR set to: 4
 17890                           ;usb_device.c: 2858: {
 17891                           ;usb_device.c: 2859: if(p->STAT.UOWN == 1)
 17892  00113C  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 17893  001140  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 17894  001144  AEDF               	btfss	indf2,7,c
 17895  001146  D01A               	goto	i2l546
 17896                           
 17897                           ; BSR set to: 4
 17898                           ;usb_device.c: 2860: {
 17899                           ;usb_device.c: 2863: if(SetupPkt.EPDir == 0)
 17900  001148  BF34               	btfsc	52,7,b	;volatile
 17901  00114A  D00A               	goto	i2l545
 17902                           
 17903                           ; BSR set to: 4
 17904                           ;usb_device.c: 2864: {
 17905                           ;usb_device.c: 2865: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 17906  00114C  5134               	movf	52,w,b	;volatile
 17907  00114E  0B0F               	andlw	15
 17908  001150  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17909  001152  5015               	movf	??_USBStdFeatureReqHandler,w,c
 17910  001154  0D01               	mullw	1
 17911  001156  0EEB               	movlw	low _ep_data_out
 17912  001158  24F3               	addwf	prodl,w,c
 17913  00115A  6ED9               	movwf	fsr2l,c
 17914  00115C  0E01               	movlw	high _ep_data_out
 17915  00115E  D00A               	goto	L18
 17916  001160                     i2l545:
 17917                           
 17918                           ;usb_device.c: 2867: else
 17919                           ;usb_device.c: 2868: {
 17920                           ;usb_device.c: 2869: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 17921                           
 17922                           ; BSR set to: 1
 17923  001160  0104               	movlb	4	; () banked
 17924  001162  5134               	movf	52,w,b	;volatile
 17925  001164  0B0F               	andlw	15
 17926  001166  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17927  001168  5015               	movf	??_USBStdFeatureReqHandler,w,c
 17928  00116A  0D01               	mullw	1
 17929  00116C  0EEE               	movlw	low _ep_data_in
 17930  00116E  24F3               	addwf	prodl,w,c
 17931  001170  6ED9               	movwf	fsr2l,c
 17932  001172  0E01               	movlw	high _ep_data_in
 17933  001174                     L18:
 17934  001174  20F4               	addwfc	prodh,w,c
 17935  001176  6EDA               	movwf	fsr2h,c
 17936  001178  0101               	movlb	1	; () banked
 17937  00117A  82DF               	bsf	indf2,1,c
 17938  00117C                     i2l546:
 17939                           
 17940                           ;usb_device.c: 2870: }
 17941                           ;usb_device.c: 2871: }
 17942                           ;usb_device.c: 2874: p->STAT.Val |= 0x04;
 17943                           
 17944                           ; BSR set to: 1
 17945                           
 17946                           ; BSR set to: 1
 17947  00117C  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 17948  001180  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 17949  001184  0E00               	movlw	0
 17950  001186  84DB               	bsf	plusw2,2,c
 17951                           
 17952                           ;usb_device.c: 2875: p->STAT.Val |= 0x80;
 17953  001188  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 17954  00118C  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 17955  001190  0E00               	movlw	0
 17956  001192  8EDB               	bsf	plusw2,7,c
 17957                           
 17958                           ;usb_device.c: 2876: }
 17959  001194  0012               	return	
 17960  001196                     i2l543:
 17961                           
 17962                           ;usb_device.c: 2877: else
 17963                           ;usb_device.c: 2878: {
 17964                           ;usb_device.c: 2882: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 17965  001196  0E04               	movlw	4
 17966  001198  1819               	xorwf	USBStdFeatureReqHandler@p,w,c
 17967  00119A  6E19               	movwf	USBStdFeatureReqHandler@p,c
 17968  00119C  501A               	movf	USBStdFeatureReqHandler@p+1,w,c
 17969  00119E  6E1A               	movwf	USBStdFeatureReqHandler@p+1,c
 17970                           
 17971                           ;usb_device.c: 2884: if(p->STAT.UOWN == 1)
 17972  0011A0  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 17973  0011A4  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 17974  0011A8  AEDF               	btfss	indf2,7,c
 17975  0011AA  D01B               	goto	i2l548
 17976                           
 17977                           ;usb_device.c: 2885: {
 17978                           ;usb_device.c: 2888: p->STAT.Val &= (~0x80);
 17979  0011AC  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 17980  0011B0  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 17981  0011B4  0E7F               	movlw	127
 17982  0011B6  16DF               	andwf	indf2,f,c
 17983                           
 17984                           ;usb_device.c: 2889: p->STAT.Val |= 0x40;
 17985  0011B8  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 17986  0011BC  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 17987  0011C0  0E00               	movlw	0
 17988  0011C2  8CDB               	bsf	plusw2,6,c
 17989                           
 17990                           ;usb_device.c: 2890: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 17991  0011C4  0E00               	movlw	0
 17992  0011C6  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 17993  0011C8  0E05               	movlw	5
 17994  0011CA  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 17995  0011CC  C019  F00F         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 17996  0011D0  C01A  F010         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 17997  0011D4  0E00               	movlw	0
 17998  0011D6  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 17999  0011D8  0E02               	movlw	2
 18000  0011DA  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 18001  0011DC  EC29  F01F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 18002                           
 18003                           ;usb_device.c: 2891: }
 18004  0011E0  D006               	goto	i2l549
 18005  0011E2                     i2l548:
 18006                           
 18007                           ;usb_device.c: 2892: else
 18008                           ;usb_device.c: 2893: {
 18009                           ;usb_device.c: 2895: p->STAT.Val |= 0x40;
 18010  0011E2  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18011  0011E6  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18012  0011EA  0E00               	movlw	0
 18013  0011EC  8CDB               	bsf	plusw2,6,c
 18014  0011EE                     i2l549:
 18015                           
 18016                           ;usb_device.c: 2896: }
 18017                           ;usb_device.c: 2900: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 18018  0011EE  0E04               	movlw	4
 18019  0011F0  1819               	xorwf	USBStdFeatureReqHandler@p,w,c
 18020  0011F2  6E19               	movwf	USBStdFeatureReqHandler@p,c
 18021  0011F4  501A               	movf	USBStdFeatureReqHandler@p+1,w,c
 18022  0011F6  6E1A               	movwf	USBStdFeatureReqHandler@p+1,c
 18023                           
 18024                           ;usb_device.c: 2906: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 18025  0011F8  B218               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 18026  0011FA  D006               	goto	i2u507_40
 18027  0011FC  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18028  001200  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18029  001204  AEDF               	btfss	indf2,7,c
 18030  001206  D030               	goto	i2l550
 18031  001208                     i2u507_40:
 18032                           
 18033                           ;usb_device.c: 2907: {
 18034                           ;usb_device.c: 2908: if(SetupPkt.EPDir == 0)
 18035  001208  0104               	movlb	4	; () banked
 18036  00120A  BF34               	btfsc	52,7,b	;volatile
 18037  00120C  D00A               	goto	i2l553
 18038                           
 18039                           ; BSR set to: 4
 18040                           ;usb_device.c: 2909: {
 18041                           ;usb_device.c: 2910: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 18042  00120E  5134               	movf	52,w,b	;volatile
 18043  001210  0B0F               	andlw	15
 18044  001212  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 18045  001214  5015               	movf	??_USBStdFeatureReqHandler,w,c
 18046  001216  0D01               	mullw	1
 18047  001218  0EEB               	movlw	low _ep_data_out
 18048  00121A  24F3               	addwf	prodl,w,c
 18049  00121C  6ED9               	movwf	fsr2l,c
 18050  00121E  0E01               	movlw	high _ep_data_out
 18051  001220  D00A               	goto	L19
 18052  001222                     i2l553:
 18053                           
 18054                           ;usb_device.c: 2912: else
 18055                           ;usb_device.c: 2913: {
 18056                           ;usb_device.c: 2914: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 18057                           
 18058                           ; BSR set to: 1
 18059  001222  0104               	movlb	4	; () banked
 18060  001224  5134               	movf	52,w,b	;volatile
 18061  001226  0B0F               	andlw	15
 18062  001228  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 18063  00122A  5015               	movf	??_USBStdFeatureReqHandler,w,c
 18064  00122C  0D01               	mullw	1
 18065  00122E  0EEE               	movlw	low _ep_data_in
 18066  001230  24F3               	addwf	prodl,w,c
 18067  001232  6ED9               	movwf	fsr2l,c
 18068  001234  0E01               	movlw	high _ep_data_in
 18069  001236                     L19:
 18070  001236  20F4               	addwfc	prodh,w,c
 18071  001238  6EDA               	movwf	fsr2h,c
 18072  00123A  0101               	movlb	1	; () banked
 18073  00123C  92DF               	bcf	indf2,1,c
 18074                           
 18075                           ; BSR set to: 1
 18076                           ;usb_device.c: 2915: }
 18077                           ;usb_device.c: 2917: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 18078                           
 18079                           ; BSR set to: 1
 18080  00123E  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18081  001242  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18082  001246  0E3B               	movlw	59
 18083  001248  16DF               	andwf	indf2,f,c
 18084                           
 18085                           ; BSR set to: 1
 18086                           ;usb_device.c: 2920: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 18087  00124A  0E00               	movlw	0
 18088  00124C  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 18089  00124E  0E05               	movlw	5
 18090  001250  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 18091  001252  C019  F00F         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 18092  001256  C01A  F010         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 18093  00125A  0E00               	movlw	0
 18094  00125C  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 18095  00125E  0E02               	movlw	2
 18096  001260  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 18097  001262  EC29  F01F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 18098                           
 18099                           ;usb_device.c: 2921: }
 18100  001266  D006               	goto	i2l555
 18101  001268                     i2l550:
 18102                           
 18103                           ;usb_device.c: 2922: else
 18104                           ;usb_device.c: 2923: {
 18105                           ;usb_device.c: 2925: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 18106  001268  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18107  00126C  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18108  001270  0E3B               	movlw	59
 18109  001272  16DF               	andwf	indf2,f,c
 18110  001274                     i2l555:
 18111                           
 18112                           ;usb_device.c: 2926: }
 18113                           ;usb_device.c: 2973: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 18114  001274  0104               	movlb	4	; () banked
 18115  001276  5134               	movf	52,w,b	;volatile
 18116  001278  0B0F               	andlw	15
 18117  00127A  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 18118  00127C  5015               	movf	??_USBStdFeatureReqHandler,w,c
 18119  00127E  0D01               	mullw	1
 18120  001280  0E70               	movlw	112
 18121  001282  24F3               	addwf	prodl,w,c
 18122  001284  6E16               	movwf	USBStdFeatureReqHandler@pUEP,c
 18123  001286  0E0F               	movlw	15
 18124  001288  20F4               	addwfc	prodh,w,c
 18125  00128A  6E17               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 18126                           
 18127                           ; BSR set to: 4
 18128                           ;usb_device.c: 2977: *pUEP &= ~0x0001;
 18129  00128C  C016  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 18130  001290  C017  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 18131  001294  0EFE               	movlw	254
 18132  001296  16DF               	andwf	indf2,f,c
 18133                           
 18134                           ; BSR set to: 4
 18135  001298  0012               	return	
 18136  00129A                     __end_of_USBStdFeatureReqHandler:
 18137                           	opt stack 0
 18138                           pclatu	equ	0xFFB
 18139                           pclath	equ	0xFFA
 18140                           tblptru	equ	0xFF8
 18141                           tblptrh	equ	0xFF7
 18142                           tblptrl	equ	0xFF6
 18143                           tablat	equ	0xFF5
 18144                           prodh	equ	0xFF4
 18145                           prodl	equ	0xFF3
 18146                           intcon	equ	0xFF2
 18147                           indf0	equ	0xFEF
 18148                           postinc0	equ	0xFEE
 18149                           fsr0h	equ	0xFEA
 18150                           fsr0l	equ	0xFE9
 18151                           wreg	equ	0xFE8
 18152                           indf1	equ	0xFE7
 18153                           postdec1	equ	0xFE5
 18154                           fsr1h	equ	0xFE2
 18155                           fsr1l	equ	0xFE1
 18156                           indf2	equ	0xFDF
 18157                           postinc2	equ	0xFDE
 18158                           postdec2	equ	0xFDD
 18159                           plusw2	equ	0xFDB
 18160                           fsr2h	equ	0xFDA
 18161                           fsr2l	equ	0xFD9
 18162                           status	equ	0xFD8
 18163                           
 18164 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 18165 ;; Defined at:
 18166 ;;		line 29 in file "usb/usb_events.c"
 18167 ;; Parameters:    Size  Location     Type
 18168 ;;  event           2   12[COMRAM] enum E4179
 18169 ;;  pdata           2   14[COMRAM] PTR void 
 18170 ;;		 -> RAM(2047), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 18171 ;;		 -> BDT(48), 
 18172 ;;  size            2   16[COMRAM] unsigned int 
 18173 ;; Auto vars:     Size  Location     Type
 18174 ;;		None
 18175 ;; Return value:  Size  Location     Type
 18176 ;;                  1    wreg      unsigned char 
 18177 ;; Registers used:
 18178 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18179 ;; Tracked objects:
 18180 ;;		On entry : 0/0
 18181 ;;		On exit  : 0/0
 18182 ;;		Unchanged: 0/0
 18183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18184 ;;      Params:         6       0       0       0       0       0       0       0       0
 18185 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18186 ;;      Temps:          2       0       0       0       0       0       0       0       0
 18187 ;;      Totals:         8       0       0       0       0       0       0       0       0
 18188 ;;Total ram usage:        8 bytes
 18189 ;; Hardware stack levels used:    1
 18190 ;; Hardware stack levels required when called:    3
 18191 ;; This function calls:
 18192 ;;		_CDCInitEP
 18193 ;;		_USBCheckCDCRequest
 18194 ;; This function is called by:
 18195 ;;		_USBDeviceTasks
 18196 ;;		_USBStdSetCfgHandler
 18197 ;;		_USBSuspend
 18198 ;;		_USBWakeFromSuspend
 18199 ;;		_USBCtrlTrfSetupHandler
 18200 ;;		_USBCheckStdRequest
 18201 ;;		_USBStdFeatureReqHandler
 18202 ;; This function uses a non-reentrant model
 18203 ;;
 18204                           
 18205                           	psect	text74
 18206  003E52                     __ptext74:
 18207                           	opt stack 0
 18208  003E52                     _USER_USB_CALLBACK_EVENT_HANDLER:
 18209                           	opt stack 20
 18210                           
 18211                           ;usb_events.c: 31: switch( (int) event )
 18212                           
 18213                           ;incstack = 0
 18214  003E52  D006               	goto	i2l154
 18215  003E54                     
 18216                           ;usb_events.c: 56: CDCInitEP();
 18217  003E54  ECC7  F01E         	call	_CDCInitEP	;wreg free
 18218                           
 18219                           ;usb_events.c: 60: break;
 18220                           
 18221                           ;usb_events.c: 59: case EVENT_SET_DESCRIPTOR:
 18222                           
 18223                           ;usb_events.c: 57: break;
 18224  003E58  0012               	return	
 18225  003E5A                     
 18226                           ;usb_events.c: 65: USBCheckCDCRequest();
 18227  003E5A  ECCB  F019         	call	_USBCheckCDCRequest	;wreg free
 18228                           
 18229                           ;usb_events.c: 76: }
 18230                           
 18231                           ;usb_events.c: 75: break;
 18232                           
 18233                           ;usb_events.c: 74: default:
 18234                           
 18235                           ;usb_events.c: 72: break;
 18236                           
 18237                           ;usb_events.c: 71: case EVENT_TRANSFER_TERMINATED:
 18238                           
 18239                           ;usb_events.c: 69: break;
 18240                           
 18241                           ;usb_events.c: 68: case EVENT_BUS_ERROR:
 18242                           
 18243                           ;usb_events.c: 66: break;
 18244  003E5E  0012               	return	
 18245  003E60                     i2l154:
 18246  003E60  C00D  F013         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 18247  003E64  C00E  F014         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 18248                           
 18249                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 18250                           ; Switch size 1, requested type "space"
 18251                           ; Number of cases is 2, Range of values is 0 to 127
 18252                           ; switch strategies available:
 18253                           ; Name         Instructions Cycles
 18254                           ; simple_byte            7     4 (average)
 18255                           ;	Chosen strategy is simple_byte
 18256  003E68  5014               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 18257  003E6A  0A00               	xorlw	0	; case 0
 18258  003E6C  B4D8               	btfsc	status,2,c
 18259  003E6E  D004               	goto	i2l9355
 18260  003E70  0A7F               	xorlw	127	; case 127
 18261  003E72  A4D8               	btfss	status,2,c
 18262  003E74  0012               	return	
 18263  003E76  D018               	goto	i2l9357
 18264  003E78                     i2l9355:
 18265                           
 18266                           ; Switch size 1, requested type "space"
 18267                           ; Number of cases is 8, Range of values is 1 to 117
 18268                           ; switch strategies available:
 18269                           ; Name         Instructions Cycles
 18270                           ; simple_byte           25    13 (average)
 18271                           ;	Chosen strategy is simple_byte
 18272  003E78  5013               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 18273  003E7A  0A01               	xorlw	1	; case 1
 18274  003E7C  B4D8               	btfsc	status,2,c
 18275  003E7E  D7EA               	goto	i2l160
 18276  003E80  0A03               	xorlw	3	; case 2
 18277  003E82  B4D8               	btfsc	status,2,c
 18278  003E84  0012               	return	
 18279  003E86  0A01               	xorlw	1	; case 3
 18280  003E88  B4D8               	btfsc	status,2,c
 18281  003E8A  D7E7               	goto	i2l162
 18282  003E8C  0A06               	xorlw	6	; case 5
 18283  003E8E  B4D8               	btfsc	status,2,c
 18284  003E90  0012               	return	
 18285  003E92  0A77               	xorlw	119	; case 114
 18286  003E94  B4D8               	btfsc	status,2,c
 18287  003E96  0012               	return	
 18288  003E98  0A01               	xorlw	1	; case 115
 18289  003E9A  B4D8               	btfsc	status,2,c
 18290  003E9C  0012               	return	
 18291  003E9E  0A07               	xorlw	7	; case 116
 18292  003EA0  B4D8               	btfsc	status,2,c
 18293  003EA2  0012               	return	
 18294  003EA4  0A01               	xorlw	1	; case 117
 18295  003EA6  0012               	return	
 18296  003EA8                     i2l9357:
 18297                           
 18298                           ; Switch size 1, requested type "space"
 18299                           ; Number of cases is 1, Range of values is 255 to 255
 18300                           ; switch strategies available:
 18301                           ; Name         Instructions Cycles
 18302                           ; simple_byte            4     3 (average)
 18303                           ;	Chosen strategy is simple_byte
 18304  003EA8  5013               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 18305  003EAA  0AFF               	xorlw	255	; case 255
 18306  003EAC  0012               	return	
 18307  003EAE                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 18308                           	opt stack 0
 18309                           pclatu	equ	0xFFB
 18310                           pclath	equ	0xFFA
 18311                           tblptru	equ	0xFF8
 18312                           tblptrh	equ	0xFF7
 18313                           tblptrl	equ	0xFF6
 18314                           tablat	equ	0xFF5
 18315                           prodh	equ	0xFF4
 18316                           prodl	equ	0xFF3
 18317                           intcon	equ	0xFF2
 18318                           indf0	equ	0xFEF
 18319                           postinc0	equ	0xFEE
 18320                           fsr0h	equ	0xFEA
 18321                           fsr0l	equ	0xFE9
 18322                           wreg	equ	0xFE8
 18323                           indf1	equ	0xFE7
 18324                           postdec1	equ	0xFE5
 18325                           fsr1h	equ	0xFE2
 18326                           fsr1l	equ	0xFE1
 18327                           indf2	equ	0xFDF
 18328                           postinc2	equ	0xFDE
 18329                           postdec2	equ	0xFDD
 18330                           plusw2	equ	0xFDB
 18331                           fsr2h	equ	0xFDA
 18332                           fsr2l	equ	0xFD9
 18333                           status	equ	0xFD8
 18334                           
 18335 ;; *************** function _USBCheckCDCRequest *****************
 18336 ;; Defined at:
 18337 ;;		line 147 in file "../../../../microchip/mla/v2017_03_06/framework/usb/src/usb_device_cdc.c"
 18338 ;; Parameters:    Size  Location     Type
 18339 ;;		None
 18340 ;; Auto vars:     Size  Location     Type
 18341 ;;		None
 18342 ;; Return value:  Size  Location     Type
 18343 ;;                  1    wreg      void 
 18344 ;; Registers used:
 18345 ;;		wreg, status,2, status,0
 18346 ;; Tracked objects:
 18347 ;;		On entry : 0/0
 18348 ;;		On exit  : 0/0
 18349 ;;		Unchanged: 0/0
 18350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18351 ;;      Params:         0       0       0       0       0       0       0       0       0
 18352 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18353 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18354 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18355 ;;Total ram usage:        0 bytes
 18356 ;; Hardware stack levels used:    1
 18357 ;; This function calls:
 18358 ;;		Nothing
 18359 ;; This function is called by:
 18360 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 18361 ;; This function uses a non-reentrant model
 18362 ;;
 18363                           
 18364                           	psect	text75
 18365  003396                     __ptext75:
 18366                           	opt stack 0
 18367  003396                     _USBCheckCDCRequest:
 18368                           	opt stack 22
 18369                           
 18370                           ;usb_device_cdc.c: 152: if(SetupPkt.Recipient != (0x01)) return;
 18371                           
 18372                           ;incstack = 0
 18373  003396  0104               	movlb	4	; () banked
 18374  003398  5130               	movf	48,w,b	;volatile
 18375  00339A  0B1F               	andlw	31
 18376  00339C  06E8               	decf	wreg,f,c
 18377  00339E  A4D8               	btfss	status,2,c
 18378  0033A0  0012               	return	
 18379                           
 18380                           ; BSR set to: 4
 18381                           ;usb_device_cdc.c: 157: if(SetupPkt.RequestType != (0x20>>5)) return;
 18382                           
 18383                           ; BSR set to: 4
 18384                           
 18385                           ; BSR set to: 4
 18386  0033A2  3930               	swapf	48,w,b	;volatile
 18387  0033A4  32E8               	rrcf	wreg,f,c
 18388  0033A6  0B03               	andlw	3
 18389  0033A8  06E8               	decf	wreg,f,c
 18390  0033AA  A4D8               	btfss	status,2,c
 18391  0033AC  0012               	return	
 18392                           
 18393                           ; BSR set to: 4
 18394                           ;usb_device_cdc.c: 163: if((SetupPkt.bIntfID != 0x0)&&
 18395                           ;usb_device_cdc.c: 164: (SetupPkt.bIntfID != 0x01)) return;
 18396                           
 18397                           ; BSR set to: 4
 18398                           
 18399                           ; BSR set to: 4
 18400  0033AE  5134               	movf	52,w,b	;volatile
 18401  0033B0  B4D8               	btfsc	status,2,c
 18402  0033B2  D036               	goto	i2l667
 18403                           
 18404                           ; BSR set to: 4
 18405  0033B4  0534               	decf	52,w,b	;volatile
 18406  0033B6  A4D8               	btfss	status,2,c
 18407  0033B8  0012               	return	
 18408  0033BA  D032               	goto	i2l667
 18409  0033BC                     
 18410                           ; BSR set to: 4
 18411                           ;usb_device_cdc.c: 171: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 18412                           
 18413                           ; BSR set to: 4
 18414  0033BC  0EB3               	movlw	low _dummy_encapsulated_cmd_response
 18415  0033BE  0100               	movlb	0	; () banked
 18416  0033C0  6FF7               	movwf	_inPipes& (0+255),b	;volatile
 18417  0033C2  0E02               	movlw	high _dummy_encapsulated_cmd_response
 18418  0033C4  6FF8               	movwf	(_inPipes+1)& (0+255),b	;volatile
 18419                           
 18420                           ; BSR set to: 0
 18421                           ;usb_device_cdc.c: 172: inPipes[0].wCount.Val = 0x08;
 18422  0033C6  0E00               	movlw	0
 18423  0033C8  6FFC               	movwf	(_inPipes+5)& (0+255),b	;volatile
 18424  0033CA  0E08               	movlw	8
 18425  0033CC  6FFB               	movwf	(_inPipes+4)& (0+255),b	;volatile
 18426                           
 18427                           ; BSR set to: 0
 18428                           ;usb_device_cdc.c: 173: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 18429  0033CE  81FA               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 18430                           
 18431                           ; BSR set to: 0
 18432                           ;usb_device_cdc.c: 174: inPipes[0].info.bits.busy = 1;
 18433  0033D0  8FFA               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 18434                           
 18435                           ;usb_device_cdc.c: 175: break;
 18436  0033D2  0012               	return	
 18437  0033D4                     
 18438                           ;usb_device_cdc.c: 178: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 18439                           
 18440                           ; BSR set to: 0
 18441  0033D4  0EB3               	movlw	low _dummy_encapsulated_cmd_response
 18442  0033D6  0100               	movlb	0	; () banked
 18443  0033D8  6FF7               	movwf	_inPipes& (0+255),b	;volatile
 18444  0033DA  0E02               	movlw	high _dummy_encapsulated_cmd_response
 18445  0033DC  6FF8               	movwf	(_inPipes+1)& (0+255),b	;volatile
 18446                           
 18447                           ; BSR set to: 0
 18448                           ;usb_device_cdc.c: 179: inPipes[0].info.bits.busy = 1;
 18449  0033DE  8FFA               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 18450                           
 18451                           ;usb_device_cdc.c: 180: break;
 18452  0033E0  0012               	return	
 18453  0033E2                     i2l671:
 18454                           
 18455                           ; BSR set to: 4
 18456                           ;usb_device_cdc.c: 185: outPipes[0].wCount.Val = SetupPkt.wLength;
 18457  0033E2  C436 F036          	movff	1078,_outPipes+4	;volatile
 18458  0033E6  C437 F037          	movff	1079,_outPipes+5	;volatile
 18459                           
 18460                           ; BSR set to: 4
 18461                           ;usb_device_cdc.c: 186: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 18462  0033EA  0EBB               	movlw	low _line_coding
 18463  0033EC  6E32               	movwf	_outPipes,c	;volatile
 18464  0033EE  0E02               	movlw	high _line_coding
 18465  0033F0  6E33               	movwf	_outPipes+1,c	;volatile
 18466                           
 18467                           ;usb_device_cdc.c: 187: outPipes[0].pFunc = (0);
 18468  0033F2  0E00               	movlw	0
 18469  0033F4  6E38               	movwf	_outPipes+6,c	;volatile
 18470  0033F6  0E00               	movlw	0
 18471  0033F8  6E39               	movwf	_outPipes+7,c	;volatile
 18472                           
 18473                           ; BSR set to: 4
 18474                           ;usb_device_cdc.c: 188: outPipes[0].info.bits.busy = 1;
 18475  0033FA  8E35               	bsf	_outPipes+3,7,c	;volatile
 18476                           
 18477                           ;usb_device_cdc.c: 189: break;
 18478  0033FC  0012               	return	
 18479  0033FE                     
 18480                           ; BSR set to: 4
 18481                           ;usb_device_cdc.c: 192: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 18482                           
 18483                           ; BSR set to: 4
 18484  0033FE  0EBB               	movlw	low _line_coding
 18485  003400  0100               	movlb	0	; () banked
 18486  003402  6FF7               	movwf	_inPipes& (0+255),b	;volatile
 18487  003404  0E02               	movlw	high _line_coding
 18488  003406  6FF8               	movwf	(_inPipes+1)& (0+255),b	;volatile
 18489                           
 18490                           ; BSR set to: 0
 18491  003408  0E00               	movlw	0
 18492  00340A  6FFC               	movwf	(_inPipes+5)& (0+255),b	;volatile
 18493  00340C  0E07               	movlw	7
 18494  00340E  6FFB               	movwf	(_inPipes+4)& (0+255),b	;volatile
 18495                           
 18496                           ; BSR set to: 0
 18497  003410  0EC1               	movlw	193
 18498  003412  6FFA               	movwf	(_inPipes+3)& (0+255),b	;volatile
 18499                           
 18500                           ;usb_device_cdc.c: 196: break;
 18501  003414  0012               	return	
 18502  003416                     i2l673:
 18503                           
 18504                           ; BSR set to: 4
 18505                           ;usb_device_cdc.c: 199: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 18506  003416  C432 F24A          	movff	1074,_control_signal_bitmap	;volatile
 18507                           
 18508                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
 18509  00341A  0100               	movlb	0	; () banked
 18510  00341C  8FFA               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 18511                           
 18512                           ; BSR set to: 0
 18513                           ;usb_device_cdc.c: 258: }
 18514                           
 18515                           ; BSR set to: 0
 18516                           ;usb_device_cdc.c: 257: break;
 18517                           
 18518                           ;usb_device_cdc.c: 256: default:
 18519                           
 18520                           ;usb_device_cdc.c: 232: break;
 18521  00341E  0012               	return	
 18522  003420                     i2l667:
 18523                           
 18524                           ; BSR set to: 0
 18525  003420  0104               	movlb	4	; () banked
 18526  003422  5131               	movf	49,w,b	;volatile
 18527                           
 18528                           ; Switch size 1, requested type "space"
 18529                           ; Number of cases is 5, Range of values is 0 to 34
 18530                           ; switch strategies available:
 18531                           ; Name         Instructions Cycles
 18532                           ; simple_byte           16     9 (average)
 18533                           ;	Chosen strategy is simple_byte
 18534  003424  0A00               	xorlw	0	; case 0
 18535  003426  B4D8               	btfsc	status,2,c
 18536  003428  D7C9               	goto	i2l668
 18537  00342A  0A01               	xorlw	1	; case 1
 18538  00342C  B4D8               	btfsc	status,2,c
 18539  00342E  D7D2               	goto	i2l670
 18540  003430  0A21               	xorlw	33	; case 32
 18541  003432  B4D8               	btfsc	status,2,c
 18542  003434  D7D6               	goto	i2l671
 18543  003436  0A01               	xorlw	1	; case 33
 18544  003438  B4D8               	btfsc	status,2,c
 18545  00343A  D7E1               	goto	i2l672
 18546  00343C  0A03               	xorlw	3	; case 34
 18547  00343E  A4D8               	btfss	status,2,c
 18548  003440  0012               	return	
 18549  003442  D7E9               	goto	i2l673
 18550  003444                     __end_of_USBCheckCDCRequest:
 18551                           	opt stack 0
 18552                           pclatu	equ	0xFFB
 18553                           pclath	equ	0xFFA
 18554                           tblptru	equ	0xFF8
 18555                           tblptrh	equ	0xFF7
 18556                           tblptrl	equ	0xFF6
 18557                           tablat	equ	0xFF5
 18558                           prodh	equ	0xFF4
 18559                           prodl	equ	0xFF3
 18560                           intcon	equ	0xFF2
 18561                           indf0	equ	0xFEF
 18562                           postinc0	equ	0xFEE
 18563                           fsr0h	equ	0xFEA
 18564                           fsr0l	equ	0xFE9
 18565                           wreg	equ	0xFE8
 18566                           indf1	equ	0xFE7
 18567                           postdec1	equ	0xFE5
 18568                           fsr1h	equ	0xFE2
 18569                           fsr1l	equ	0xFE1
 18570                           indf2	equ	0xFDF
 18571                           postinc2	equ	0xFDE
 18572                           postdec2	equ	0xFDD
 18573                           plusw2	equ	0xFDB
 18574                           fsr2h	equ	0xFDA
 18575                           fsr2l	equ	0xFD9
 18576                           status	equ	0xFD8
 18577                           
 18578 ;; *************** function _CDCInitEP *****************
 18579 ;; Defined at:
 18580 ;;		line 294 in file "../../../../microchip/mla/v2017_03_06/framework/usb/src/usb_device_cdc.c"
 18581 ;; Parameters:    Size  Location     Type
 18582 ;;		None
 18583 ;; Auto vars:     Size  Location     Type
 18584 ;;		None
 18585 ;; Return value:  Size  Location     Type
 18586 ;;                  1    wreg      void 
 18587 ;; Registers used:
 18588 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18589 ;; Tracked objects:
 18590 ;;		On entry : 0/0
 18591 ;;		On exit  : 0/0
 18592 ;;		Unchanged: 0/0
 18593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18594 ;;      Params:         0       0       0       0       0       0       0       0       0
 18595 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18596 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18597 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18598 ;;Total ram usage:        0 bytes
 18599 ;; Hardware stack levels used:    1
 18600 ;; Hardware stack levels required when called:    2
 18601 ;; This function calls:
 18602 ;;		_USBEnableEndpoint
 18603 ;;		i2_USBTransferOnePacket
 18604 ;; This function is called by:
 18605 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 18606 ;; This function uses a non-reentrant model
 18607 ;;
 18608                           
 18609                           	psect	text76
 18610  003D8E                     __ptext76:
 18611                           	opt stack 0
 18612  003D8E                     _CDCInitEP:
 18613                           	opt stack 20
 18614                           
 18615                           ;usb_device_cdc.c: 297: line_coding.dwDTERate = 19200;
 18616                           
 18617                           ;incstack = 0
 18618  003D8E  0E00               	movlw	0
 18619  003D90  0102               	movlb	2	; () banked
 18620  003D92  6FBB               	movwf	_line_coding& (0+255),b
 18621  003D94  0E4B               	movlw	75
 18622  003D96  6FBC               	movwf	(_line_coding+1)& (0+255),b
 18623  003D98  0E00               	movlw	0
 18624  003D9A  6FBD               	movwf	(_line_coding+2)& (0+255),b
 18625  003D9C  0E00               	movlw	0
 18626  003D9E  6FBE               	movwf	(_line_coding+3)& (0+255),b
 18627                           
 18628                           ;usb_device_cdc.c: 298: line_coding.bCharFormat = 0x00;
 18629  003DA0  0E00               	movlw	0
 18630  003DA2  6FBF               	movwf	(_line_coding+4)& (0+255),b
 18631                           
 18632                           ;usb_device_cdc.c: 299: line_coding.bParityType = 0x00;
 18633  003DA4  0E00               	movlw	0
 18634  003DA6  6FC0               	movwf	(_line_coding+5)& (0+255),b
 18635                           
 18636                           ;usb_device_cdc.c: 300: line_coding.bDataBits = 0x08;
 18637  003DA8  0E08               	movlw	8
 18638  003DAA  6FC1               	movwf	(_line_coding+6)& (0+255),b
 18639                           
 18640                           ;usb_device_cdc.c: 302: cdc_rx_len = 0;
 18641  003DAC  0E00               	movlw	0
 18642  003DAE  6E4D               	movwf	_cdc_rx_len,c
 18643                           
 18644                           ; BSR set to: 2
 18645                           ;usb_device_cdc.c: 315: USBEnableEndpoint(1,0x02|0x10|0x08);
 18646  003DB0  0E1A               	movlw	26
 18647  003DB2  6E09               	movwf	USBEnableEndpoint@options,c
 18648  003DB4  0E01               	movlw	1
 18649  003DB6  ECCA  F020         	call	_USBEnableEndpoint
 18650                           
 18651                           ;usb_device_cdc.c: 316: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 18652  003DBA  0E1E               	movlw	30
 18653  003DBC  6E09               	movwf	USBEnableEndpoint@options,c
 18654  003DBE  0E02               	movlw	2
 18655  003DC0  ECCA  F020         	call	_USBEnableEndpoint
 18656                           
 18657                           ;usb_device_cdc.c: 318: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 18658  003DC4  0E00               	movlw	0
 18659  003DC6  6E01               	movwf	i2USBTransferOnePacket@dir,c
 18660  003DC8  0E40               	movlw	64
 18661  003DCA  6E02               	movwf	i2USBTransferOnePacket@data,c
 18662  003DCC  0E05               	movlw	5
 18663  003DCE  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 18664  003DD0  0E40               	movlw	64
 18665  003DD2  6E04               	movwf	i2USBTransferOnePacket@len,c
 18666  003DD4  0E02               	movlw	2
 18667  003DD6  EC03  F015         	call	i2_USBTransferOnePacket
 18668  003DDA  C001  F046         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 18669  003DDE  C002  F047         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 18670                           
 18671                           ;usb_device_cdc.c: 319: CDCDataInHandle = (0);
 18672  003DE2  0E00               	movlw	0
 18673  003DE4  0102               	movlb	2	; () banked
 18674  003DE6  6F42               	movwf	_CDCDataInHandle& (0+255),b
 18675  003DE8  0E00               	movlw	0
 18676  003DEA  6F43               	movwf	(_CDCDataInHandle+1)& (0+255),b
 18677                           
 18678                           ; BSR set to: 2
 18679                           ;usb_device_cdc.c: 346: cdc_trf_state = 0;
 18680  003DEC  0E00               	movlw	0
 18681  003DEE  0100               	movlb	0	; () banked
 18682  003DF0  6FFE               	movwf	_cdc_trf_state& (0+255),b
 18683                           
 18684                           ; BSR set to: 0
 18685  003DF2  0012               	return		;funcret
 18686  003DF4                     __end_of_CDCInitEP:
 18687                           	opt stack 0
 18688                           pclatu	equ	0xFFB
 18689                           pclath	equ	0xFFA
 18690                           tblptru	equ	0xFF8
 18691                           tblptrh	equ	0xFF7
 18692                           tblptrl	equ	0xFF6
 18693                           tablat	equ	0xFF5
 18694                           prodh	equ	0xFF4
 18695                           prodl	equ	0xFF3
 18696                           intcon	equ	0xFF2
 18697                           indf0	equ	0xFEF
 18698                           postinc0	equ	0xFEE
 18699                           fsr0h	equ	0xFEA
 18700                           fsr0l	equ	0xFE9
 18701                           wreg	equ	0xFE8
 18702                           indf1	equ	0xFE7
 18703                           postdec1	equ	0xFE5
 18704                           fsr1h	equ	0xFE2
 18705                           fsr1l	equ	0xFE1
 18706                           indf2	equ	0xFDF
 18707                           postinc2	equ	0xFDE
 18708                           postdec2	equ	0xFDD
 18709                           plusw2	equ	0xFDB
 18710                           fsr2h	equ	0xFDA
 18711                           fsr2l	equ	0xFD9
 18712                           status	equ	0xFD8
 18713                           
 18714 ;; *************** function i2_USBTransferOnePacket *****************
 18715 ;; Defined at:
 18716 ;;		line 995 in file "../../../../microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 18717 ;; Parameters:    Size  Location     Type
 18718 ;;  ep              1    wreg     unsigned char 
 18719 ;;  dir             1    0[COMRAM] unsigned char 
 18720 ;;  data            2    1[COMRAM] PTR unsigned char 
 18721 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 18722 ;;  len             1    3[COMRAM] unsigned char 
 18723 ;; Auto vars:     Size  Location     Type
 18724 ;;  ep              1    8[COMRAM] unsigned char 
 18725 ;;  USBTransferO    2    9[COMRAM] PTR volatile struct __BD
 18726 ;;		 -> RAM(2047), NULL(0), BDT(48), 
 18727 ;; Return value:  Size  Location     Type
 18728 ;;                  2    0[COMRAM] PTR void 
 18729 ;; Registers used:
 18730 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18731 ;; Tracked objects:
 18732 ;;		On entry : 0/0
 18733 ;;		On exit  : 0/0
 18734 ;;		Unchanged: 0/0
 18735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18736 ;;      Params:         4       0       0       0       0       0       0       0       0
 18737 ;;      Locals:         3       0       0       0       0       0       0       0       0
 18738 ;;      Temps:          4       0       0       0       0       0       0       0       0
 18739 ;;      Totals:        11       0       0       0       0       0       0       0       0
 18740 ;;Total ram usage:       11 bytes
 18741 ;; Hardware stack levels used:    1
 18742 ;; This function calls:
 18743 ;;		Nothing
 18744 ;; This function is called by:
 18745 ;;		_CDCInitEP
 18746 ;; This function uses a non-reentrant model
 18747 ;;
 18748                           
 18749                           	psect	text77
 18750  002A06                     __ptext77:
 18751                           	opt stack 0
 18752  002A06                     i2_USBTransferOnePacket:
 18753                           	opt stack 21
 18754                           
 18755                           ; BSR set to: 0
 18756                           ;incstack = 0
 18757                           ;i2USBTransferOnePacket@ep stored from wreg
 18758  002A06  6E09               	movwf	i2USBTransferOnePacket@ep,c
 18759                           
 18760                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 18761                           ;usb_device.c: 1000: if(dir != 0)
 18762  002A08  5001               	movf	i2USBTransferOnePacket@dir,w,c
 18763  002A0A  B4D8               	btfsc	status,2,c
 18764  002A0C  D007               	goto	i2l346
 18765                           
 18766                           ;usb_device.c: 1001: {
 18767                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 18768  002A0E  5009               	movf	i2USBTransferOnePacket@ep,w,c
 18769  002A10  0D02               	mullw	2
 18770  002A12  0E3A               	movlw	low _pBDTEntryIn
 18771  002A14  24F3               	addwf	prodl,w,c
 18772  002A16  6ED9               	movwf	fsr2l,c
 18773  002A18  0E00               	movlw	high _pBDTEntryIn
 18774  002A1A  D006               	goto	L20
 18775  002A1C                     i2l346:
 18776                           
 18777                           ;usb_device.c: 1005: else
 18778                           ;usb_device.c: 1006: {
 18779                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 18780  002A1C  5009               	movf	i2USBTransferOnePacket@ep,w,c
 18781  002A1E  0D02               	mullw	2
 18782  002A20  0E1E               	movlw	low _pBDTEntryOut
 18783  002A22  24F3               	addwf	prodl,w,c
 18784  002A24  6ED9               	movwf	fsr2l,c
 18785  002A26  0E02               	movlw	high _pBDTEntryOut
 18786  002A28                     L20:
 18787  002A28  20F4               	addwfc	prodh,w,c
 18788  002A2A  6EDA               	movwf	fsr2h,c
 18789  002A2C  CFDE F00A          	movff	postinc2,i2USBTransferOnePacket@handle
 18790  002A30  CFDD F00B          	movff	postdec2,i2USBTransferOnePacket@handle+1
 18791                           
 18792                           ;usb_device.c: 1009: }
 18793                           ;usb_device.c: 1013: if(handle == 0)
 18794  002A34  500A               	movf	i2USBTransferOnePacket@handle,w,c
 18795  002A36  100B               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 18796  002A38  A4D8               	btfss	status,2,c
 18797  002A3A  D005               	goto	i2l348
 18798                           
 18799                           ;usb_device.c: 1014: {
 18800                           ;usb_device.c: 1015: return 0;
 18801  002A3C  0E00               	movlw	0
 18802  002A3E  6E01               	movwf	?i2_USBTransferOnePacket,c
 18803  002A40  0E00               	movlw	0
 18804  002A42  6E02               	movwf	?i2_USBTransferOnePacket+1,c
 18805  002A44  0012               	return	
 18806  002A46                     i2l348:
 18807                           
 18808                           ;usb_device.c: 1016: }
 18809                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 18810  002A46  EE20 F002          	lfsr	2,2
 18811  002A4A  500A               	movf	i2USBTransferOnePacket@handle,w,c
 18812  002A4C  26D9               	addwf	fsr2l,f,c
 18813  002A4E  500B               	movf	i2USBTransferOnePacket@handle+1,w,c
 18814  002A50  22DA               	addwfc	fsr2h,f,c
 18815  002A52  C002  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 18816  002A56  C003  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 18817                           
 18818                           ;usb_device.c: 1030: handle->CNT = len;
 18819  002A5A  EE20 F001          	lfsr	2,1
 18820  002A5E  500A               	movf	i2USBTransferOnePacket@handle,w,c
 18821  002A60  26D9               	addwf	fsr2l,f,c
 18822  002A62  500B               	movf	i2USBTransferOnePacket@handle+1,w,c
 18823  002A64  22DA               	addwfc	fsr2h,f,c
 18824  002A66  C004  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 18825                           
 18826                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 18827  002A6A  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 18828  002A6E  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 18829  002A72  0E40               	movlw	64
 18830  002A74  16DF               	andwf	indf2,f,c
 18831                           
 18832                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 18833  002A76  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 18834  002A7A  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 18835  002A7E  0E00               	movlw	0
 18836  002A80  86DB               	bsf	plusw2,3,c
 18837                           
 18838                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 18839  002A82  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 18840  002A86  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 18841  002A8A  0E00               	movlw	0
 18842  002A8C  8EDB               	bsf	plusw2,7,c
 18843                           
 18844                           ;usb_device.c: 1036: if(dir != 0)
 18845  002A8E  5001               	movf	i2USBTransferOnePacket@dir,w,c
 18846  002A90  B4D8               	btfsc	status,2,c
 18847  002A92  D018               	goto	i2l350
 18848                           
 18849                           ;usb_device.c: 1037: {
 18850                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
 18851  002A94  5009               	movf	i2USBTransferOnePacket@ep,w,c
 18852  002A96  0D02               	mullw	2
 18853  002A98  0E3A               	movlw	low _pBDTEntryIn
 18854  002A9A  24F3               	addwf	prodl,w,c
 18855  002A9C  6ED9               	movwf	fsr2l,c
 18856  002A9E  0E00               	movlw	high _pBDTEntryIn
 18857  002AA0  20F4               	addwfc	prodh,w,c
 18858  002AA2  6EDA               	movwf	fsr2h,c
 18859  002AA4  CFDE F005          	movff	postinc2,??i2_USBTransferOnePacket
 18860  002AA8  CFDD F006          	movff	postdec2,??i2_USBTransferOnePacket+1
 18861  002AAC  0E04               	movlw	4
 18862  002AAE  1805               	xorwf	??i2_USBTransferOnePacket,w,c
 18863  002AB0  6E07               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 18864  002AB2  5006               	movf	??i2_USBTransferOnePacket+1,w,c
 18865  002AB4  6E08               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 18866  002AB6  5009               	movf	i2USBTransferOnePacket@ep,w,c
 18867  002AB8  0D02               	mullw	2
 18868  002ABA  0E3A               	movlw	low _pBDTEntryIn
 18869  002ABC  24F3               	addwf	prodl,w,c
 18870  002ABE  6ED9               	movwf	fsr2l,c
 18871  002AC0  0E00               	movlw	high _pBDTEntryIn
 18872  002AC2  D017               	goto	L21
 18873  002AC4                     i2l350:
 18874                           
 18875                           ;usb_device.c: 1041: else
 18876                           ;usb_device.c: 1042: {
 18877                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
 18878  002AC4  5009               	movf	i2USBTransferOnePacket@ep,w,c
 18879  002AC6  0D02               	mullw	2
 18880  002AC8  0E1E               	movlw	low _pBDTEntryOut
 18881  002ACA  24F3               	addwf	prodl,w,c
 18882  002ACC  6ED9               	movwf	fsr2l,c
 18883  002ACE  0E02               	movlw	high _pBDTEntryOut
 18884  002AD0  20F4               	addwfc	prodh,w,c
 18885  002AD2  6EDA               	movwf	fsr2h,c
 18886  002AD4  CFDE F005          	movff	postinc2,??i2_USBTransferOnePacket
 18887  002AD8  CFDD F006          	movff	postdec2,??i2_USBTransferOnePacket+1
 18888  002ADC  0E04               	movlw	4
 18889  002ADE  1805               	xorwf	??i2_USBTransferOnePacket,w,c
 18890  002AE0  6E07               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 18891  002AE2  5006               	movf	??i2_USBTransferOnePacket+1,w,c
 18892  002AE4  6E08               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 18893  002AE6  5009               	movf	i2USBTransferOnePacket@ep,w,c
 18894  002AE8  0D02               	mullw	2
 18895  002AEA  0E1E               	movlw	low _pBDTEntryOut
 18896  002AEC  24F3               	addwf	prodl,w,c
 18897  002AEE  6ED9               	movwf	fsr2l,c
 18898  002AF0  0E02               	movlw	high _pBDTEntryOut
 18899  002AF2                     L21:
 18900  002AF2  20F4               	addwfc	prodh,w,c
 18901  002AF4  6EDA               	movwf	fsr2h,c
 18902  002AF6  C007  FFDE         	movff	??i2_USBTransferOnePacket+2,postinc2
 18903  002AFA  C008  FFDD         	movff	??i2_USBTransferOnePacket+3,postdec2
 18904                           
 18905                           ;usb_device.c: 1045: }
 18906                           ;usb_device.c: 1046: return (void*)handle;
 18907  002AFE  C00A  F001         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 18908  002B02  C00B  F002         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 18909  002B06  0012               	return	
 18910  002B08                     __end_ofi2_USBTransferOnePacket:
 18911                           	opt stack 0
 18912                           pclatu	equ	0xFFB
 18913                           pclath	equ	0xFFA
 18914                           tblptru	equ	0xFF8
 18915                           tblptrh	equ	0xFF7
 18916                           tblptrl	equ	0xFF6
 18917                           tablat	equ	0xFF5
 18918                           prodh	equ	0xFF4
 18919                           prodl	equ	0xFF3
 18920                           intcon	equ	0xFF2
 18921                           indf0	equ	0xFEF
 18922                           postinc0	equ	0xFEE
 18923                           fsr0h	equ	0xFEA
 18924                           fsr0l	equ	0xFE9
 18925                           wreg	equ	0xFE8
 18926                           indf1	equ	0xFE7
 18927                           postdec1	equ	0xFE5
 18928                           fsr1h	equ	0xFE2
 18929                           fsr1l	equ	0xFE1
 18930                           indf2	equ	0xFDF
 18931                           postinc2	equ	0xFDE
 18932                           postdec2	equ	0xFDD
 18933                           plusw2	equ	0xFDB
 18934                           fsr2h	equ	0xFDA
 18935                           fsr2l	equ	0xFD9
 18936                           status	equ	0xFD8
 18937                           
 18938 ;; *************** function _USBEnableEndpoint *****************
 18939 ;; Defined at:
 18940 ;;		line 878 in file "../../../../microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 18941 ;; Parameters:    Size  Location     Type
 18942 ;;  ep              1    wreg     unsigned char 
 18943 ;;  options         1    8[COMRAM] unsigned char 
 18944 ;; Auto vars:     Size  Location     Type
 18945 ;;  ep              1   11[COMRAM] unsigned char 
 18946 ;;  p               2    9[COMRAM] PTR unsigned char 
 18947 ;;		 -> UEP0(1), 
 18948 ;; Return value:  Size  Location     Type
 18949 ;;                  1    wreg      void 
 18950 ;; Registers used:
 18951 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18952 ;; Tracked objects:
 18953 ;;		On entry : 0/0
 18954 ;;		On exit  : 0/0
 18955 ;;		Unchanged: 0/0
 18956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18957 ;;      Params:         1       0       0       0       0       0       0       0       0
 18958 ;;      Locals:         3       0       0       0       0       0       0       0       0
 18959 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18960 ;;      Totals:         4       0       0       0       0       0       0       0       0
 18961 ;;Total ram usage:        4 bytes
 18962 ;; Hardware stack levels used:    1
 18963 ;; Hardware stack levels required when called:    1
 18964 ;; This function calls:
 18965 ;;		_USBConfigureEndpoint
 18966 ;; This function is called by:
 18967 ;;		_CDCInitEP
 18968 ;; This function uses a non-reentrant model
 18969 ;;
 18970                           
 18971                           	psect	text78
 18972  004194                     __ptext78:
 18973                           	opt stack 0
 18974  004194                     _USBEnableEndpoint:
 18975                           	opt stack 20
 18976                           
 18977                           ;incstack = 0
 18978                           ;USBEnableEndpoint@ep stored from wreg
 18979  004194  6E0C               	movwf	USBEnableEndpoint@ep,c
 18980                           
 18981                           ;usb_device.c: 880: unsigned char* p;
 18982                           ;usb_device.c: 884: if(options & 0x04)
 18983  004196  A409               	btfss	USBEnableEndpoint@options,2,c
 18984  004198  D005               	goto	i2l341
 18985                           
 18986                           ;usb_device.c: 885: {
 18987                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 18988  00419A  0E00               	movlw	0
 18989  00419C  6E01               	movwf	USBConfigureEndpoint@direction,c
 18990  00419E  500C               	movf	USBEnableEndpoint@ep,w,c
 18991  0041A0  EC06  F01C         	call	_USBConfigureEndpoint
 18992  0041A4                     i2l341:
 18993                           
 18994                           ;usb_device.c: 887: }
 18995                           ;usb_device.c: 888: if(options & 0x02)
 18996  0041A4  A209               	btfss	USBEnableEndpoint@options,1,c
 18997  0041A6  D005               	goto	i2l342
 18998                           
 18999                           ;usb_device.c: 889: {
 19000                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 19001  0041A8  0E01               	movlw	1
 19002  0041AA  6E01               	movwf	USBConfigureEndpoint@direction,c
 19003  0041AC  500C               	movf	USBEnableEndpoint@ep,w,c
 19004  0041AE  EC06  F01C         	call	_USBConfigureEndpoint
 19005  0041B2                     i2l342:
 19006                           
 19007                           ;usb_device.c: 891: }
 19008                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 19009  0041B2  500C               	movf	USBEnableEndpoint@ep,w,c
 19010  0041B4  0D01               	mullw	1
 19011  0041B6  0E70               	movlw	112
 19012  0041B8  24F3               	addwf	prodl,w,c
 19013  0041BA  6E0A               	movwf	USBEnableEndpoint@p,c
 19014  0041BC  0E0F               	movlw	15
 19015  0041BE  20F4               	addwfc	prodh,w,c
 19016  0041C0  6E0B               	movwf	USBEnableEndpoint@p+1,c
 19017                           
 19018                           ;usb_device.c: 901: *p = options;
 19019  0041C2  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 19020  0041C6  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 19021  0041CA  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 19022  0041CE  0012               	return		;funcret
 19023  0041D0                     __end_of_USBEnableEndpoint:
 19024                           	opt stack 0
 19025                           pclatu	equ	0xFFB
 19026                           pclath	equ	0xFFA
 19027                           tblptru	equ	0xFF8
 19028                           tblptrh	equ	0xFF7
 19029                           tblptrl	equ	0xFF6
 19030                           tablat	equ	0xFF5
 19031                           prodh	equ	0xFF4
 19032                           prodl	equ	0xFF3
 19033                           intcon	equ	0xFF2
 19034                           indf0	equ	0xFEF
 19035                           postinc0	equ	0xFEE
 19036                           fsr0h	equ	0xFEA
 19037                           fsr0l	equ	0xFE9
 19038                           wreg	equ	0xFE8
 19039                           indf1	equ	0xFE7
 19040                           postdec1	equ	0xFE5
 19041                           fsr1h	equ	0xFE2
 19042                           fsr1l	equ	0xFE1
 19043                           indf2	equ	0xFDF
 19044                           postinc2	equ	0xFDE
 19045                           postdec2	equ	0xFDD
 19046                           plusw2	equ	0xFDB
 19047                           fsr2h	equ	0xFDA
 19048                           fsr2l	equ	0xFD9
 19049                           status	equ	0xFD8
 19050                           
 19051 ;; *************** function _USBConfigureEndpoint *****************
 19052 ;; Defined at:
 19053 ;;		line 1543 in file "../../../../microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 19054 ;; Parameters:    Size  Location     Type
 19055 ;;  EPNum           1    wreg     unsigned char 
 19056 ;;  direction       1    0[COMRAM] unsigned char 
 19057 ;; Auto vars:     Size  Location     Type
 19058 ;;  EPNum           1    5[COMRAM] unsigned char 
 19059 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 19060 ;;		 -> BDT(48), 
 19061 ;; Return value:  Size  Location     Type
 19062 ;;                  1    wreg      void 
 19063 ;; Registers used:
 19064 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 19065 ;; Tracked objects:
 19066 ;;		On entry : 0/0
 19067 ;;		On exit  : 0/0
 19068 ;;		Unchanged: 0/0
 19069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19070 ;;      Params:         1       0       0       0       0       0       0       0       0
 19071 ;;      Locals:         3       0       0       0       0       0       0       0       0
 19072 ;;      Temps:          4       0       0       0       0       0       0       0       0
 19073 ;;      Totals:         8       0       0       0       0       0       0       0       0
 19074 ;;Total ram usage:        8 bytes
 19075 ;; Hardware stack levels used:    1
 19076 ;; This function calls:
 19077 ;;		Nothing
 19078 ;; This function is called by:
 19079 ;;		_USBEnableEndpoint
 19080 ;; This function uses a non-reentrant model
 19081 ;;
 19082                           
 19083                           	psect	text79
 19084  00380C                     __ptext79:
 19085                           	opt stack 0
 19086  00380C                     _USBConfigureEndpoint:
 19087                           	opt stack 20
 19088                           
 19089                           ;incstack = 0
 19090                           ;USBConfigureEndpoint@EPNum stored from wreg
 19091  00380C  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 19092                           
 19093                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
 19094                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
 19095  00380E  0E00               	movlw	0
 19096  003810  6E07               	movwf	USBConfigureEndpoint@handle,c
 19097  003812  0E04               	movlw	4
 19098  003814  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 19099                           
 19100                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
 19101  003816  5001               	movf	USBConfigureEndpoint@direction,w,c
 19102  003818  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 19103  00381A  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 19104  00381C  90D8               	bcf	status,0,c
 19105  00381E  3602               	rlcf	??_USBConfigureEndpoint,f,c
 19106  003820  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 19107  003822  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 19108  003824  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 19109  003826  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 19110  003828  90D8               	bcf	status,0,c
 19111  00382A  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 19112  00382C  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 19113  00382E  90D8               	bcf	status,0,c
 19114  003830  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 19115  003832  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 19116  003834  5002               	movf	??_USBConfigureEndpoint,w,c
 19117  003836  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 19118  003838  5003               	movf	??_USBConfigureEndpoint+1,w,c
 19119  00383A  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 19120  00383C  90D8               	bcf	status,0,c
 19121  00383E  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 19122  003840  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 19123  003842  90D8               	bcf	status,0,c
 19124  003844  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 19125  003846  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 19126  003848  5004               	movf	??_USBConfigureEndpoint+2,w,c
 19127  00384A  2607               	addwf	USBConfigureEndpoint@handle,f,c
 19128  00384C  5005               	movf	??_USBConfigureEndpoint+3,w,c
 19129  00384E  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 19130                           
 19131                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
 19132  003850  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 19133  003854  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 19134  003858  9EDF               	bcf	indf2,7,c
 19135                           
 19136                           ;usb_device.c: 1557: if(direction == 0)
 19137  00385A  5001               	movf	USBConfigureEndpoint@direction,w,c
 19138  00385C  A4D8               	btfss	status,2,c
 19139  00385E  D007               	goto	i2l388
 19140                           
 19141                           ;usb_device.c: 1558: {
 19142                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
 19143  003860  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 19144  003862  0D02               	mullw	2
 19145  003864  0E1E               	movlw	low _pBDTEntryOut
 19146  003866  24F3               	addwf	prodl,w,c
 19147  003868  6ED9               	movwf	fsr2l,c
 19148  00386A  0E02               	movlw	high _pBDTEntryOut
 19149  00386C  D006               	goto	L22
 19150  00386E                     i2l388:
 19151                           
 19152                           ;usb_device.c: 1561: else
 19153                           ;usb_device.c: 1562: {
 19154                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
 19155  00386E  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 19156  003870  0D02               	mullw	2
 19157  003872  0E3A               	movlw	low _pBDTEntryIn
 19158  003874  24F3               	addwf	prodl,w,c
 19159  003876  6ED9               	movwf	fsr2l,c
 19160  003878  0E00               	movlw	high _pBDTEntryIn
 19161  00387A                     L22:
 19162  00387A  20F4               	addwfc	prodh,w,c
 19163  00387C  6EDA               	movwf	fsr2h,c
 19164  00387E  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 19165  003882  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 19166                           
 19167                           ;usb_device.c: 1564: }
 19168                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
 19169  003886  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 19170  00388A  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 19171  00388E  9CDF               	bcf	indf2,6,c
 19172                           
 19173                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
 19174  003890  EE20 F004          	lfsr	2,4
 19175  003894  5007               	movf	USBConfigureEndpoint@handle,w,c
 19176  003896  26D9               	addwf	fsr2l,f,c
 19177  003898  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 19178  00389A  22DA               	addwfc	fsr2h,f,c
 19179  00389C  8CDF               	bsf	indf2,6,c
 19180  00389E  0012               	return		;funcret
 19181  0038A0                     __end_of_USBConfigureEndpoint:
 19182                           	opt stack 0
 19183                           pclatu	equ	0xFFB
 19184                           pclath	equ	0xFFA
 19185                           tblptru	equ	0xFF8
 19186                           tblptrh	equ	0xFF7
 19187                           tblptrl	equ	0xFF6
 19188                           tablat	equ	0xFF5
 19189                           prodh	equ	0xFF4
 19190                           prodl	equ	0xFF3
 19191                           intcon	equ	0xFF2
 19192                           indf0	equ	0xFEF
 19193                           postinc0	equ	0xFEE
 19194                           fsr0h	equ	0xFEA
 19195                           fsr0l	equ	0xFE9
 19196                           wreg	equ	0xFE8
 19197                           indf1	equ	0xFE7
 19198                           postdec1	equ	0xFE5
 19199                           fsr1h	equ	0xFE2
 19200                           fsr1l	equ	0xFE1
 19201                           indf2	equ	0xFDF
 19202                           postinc2	equ	0xFDE
 19203                           postdec2	equ	0xFDD
 19204                           plusw2	equ	0xFDB
 19205                           fsr2h	equ	0xFDA
 19206                           fsr2l	equ	0xFD9
 19207                           status	equ	0xFD8
 19208                           
 19209 ;; *************** function _USBCtrlTrfOutHandler *****************
 19210 ;; Defined at:
 19211 ;;		line 2538 in file "../../../../microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 19212 ;; Parameters:    Size  Location     Type
 19213 ;;		None
 19214 ;; Auto vars:     Size  Location     Type
 19215 ;;		None
 19216 ;; Return value:  Size  Location     Type
 19217 ;;                  1    wreg      void 
 19218 ;; Registers used:
 19219 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19220 ;; Tracked objects:
 19221 ;;		On entry : 0/0
 19222 ;;		On exit  : 0/0
 19223 ;;		Unchanged: 0/0
 19224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19225 ;;      Params:         0       0       0       0       0       0       0       0       0
 19226 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19227 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19228 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19229 ;;Total ram usage:        0 bytes
 19230 ;; Hardware stack levels used:    1
 19231 ;; Hardware stack levels required when called:    2
 19232 ;; This function calls:
 19233 ;;		_USBCtrlTrfRxService
 19234 ;; This function is called by:
 19235 ;;		_USBCtrlEPService
 19236 ;; This function uses a non-reentrant model
 19237 ;;
 19238                           
 19239                           	psect	text80
 19240  003EAE                     __ptext80:
 19241                           	opt stack 0
 19242  003EAE                     _USBCtrlTrfOutHandler:
 19243                           	opt stack 20
 19244                           
 19245                           ;usb_device.c: 2540: if(controlTransferState == 2)
 19246                           
 19247                           ;incstack = 0
 19248  003EAE  0E02               	movlw	2
 19249  003EB0  1856               	xorwf	_controlTransferState,w,c	;volatile
 19250  003EB2  A4D8               	btfss	status,2,c
 19251  003EB4  D003               	goto	i2l494
 19252                           
 19253                           ;usb_device.c: 2541: {
 19254                           ;usb_device.c: 2542: USBCtrlTrfRxService();
 19255  003EB6  ECF7  F012         	call	_USBCtrlTrfRxService	;wreg free
 19256                           
 19257                           ;usb_device.c: 2543: }
 19258  003EBA  0012               	return	
 19259  003EBC                     i2l494:
 19260                           
 19261                           ;usb_device.c: 2544: else
 19262                           ;usb_device.c: 2545: {
 19263                           ;usb_device.c: 2548: controlTransferState = 0;
 19264  003EBC  0E00               	movlw	0
 19265  003EBE  6E56               	movwf	_controlTransferState,c	;volatile
 19266                           
 19267                           ;usb_device.c: 2555: if(BothEP0OutUOWNsSet == 0)
 19268  003EC0  5052               	movf	_BothEP0OutUOWNsSet,w,c	;volatile
 19269  003EC2  A4D8               	btfss	status,2,c
 19270  003EC4  D01F               	goto	i2l496
 19271                           
 19272                           ;usb_device.c: 2556: {
 19273                           ;usb_device.c: 2557: pBDTEntryEP0OutNext->CNT = 8;
 19274  003EC6  EE20 F001          	lfsr	2,1
 19275  003ECA  5048               	movf	_pBDTEntryEP0OutNext,w,c
 19276  003ECC  26D9               	addwf	fsr2l,f,c
 19277  003ECE  5049               	movf	_pBDTEntryEP0OutNext+1,w,c
 19278  003ED0  22DA               	addwfc	fsr2h,f,c
 19279  003ED2  0E08               	movlw	8
 19280  003ED4  6EDF               	movwf	indf2,c
 19281                           
 19282                           ;usb_device.c: 2558: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 19283  003ED6  EE20 F002          	lfsr	2,2
 19284  003EDA  5048               	movf	_pBDTEntryEP0OutNext,w,c
 19285  003EDC  26D9               	addwf	fsr2l,f,c
 19286  003EDE  5049               	movf	_pBDTEntryEP0OutNext+1,w,c
 19287  003EE0  22DA               	addwfc	fsr2h,f,c
 19288  003EE2  0E30               	movlw	48
 19289  003EE4  6EDE               	movwf	postinc2,c
 19290  003EE6  0E04               	movlw	4
 19291  003EE8  6EDD               	movwf	postdec2,c
 19292                           
 19293                           ;usb_device.c: 2559: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 19294  003EEA  C048  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19295  003EEE  C049  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19296  003EF2  0E0C               	movlw	12
 19297  003EF4  6EDF               	movwf	indf2,c
 19298                           
 19299                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 19300  003EF6  C048  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19301  003EFA  C049  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19302  003EFE  0E00               	movlw	0
 19303  003F00  8EDB               	bsf	plusw2,7,c
 19304                           
 19305                           ;usb_device.c: 2561: }
 19306  003F02  0012               	return	
 19307  003F04                     i2l496:
 19308                           
 19309                           ;usb_device.c: 2562: else
 19310                           ;usb_device.c: 2563: {
 19311                           ;usb_device.c: 2564: BothEP0OutUOWNsSet = 0;
 19312  003F04  0E00               	movlw	0
 19313  003F06  6E52               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 19314  003F08  0012               	return	
 19315  003F0A                     __end_of_USBCtrlTrfOutHandler:
 19316                           	opt stack 0
 19317                           pclatu	equ	0xFFB
 19318                           pclath	equ	0xFFA
 19319                           tblptru	equ	0xFF8
 19320                           tblptrh	equ	0xFF7
 19321                           tblptrl	equ	0xFF6
 19322                           tablat	equ	0xFF5
 19323                           prodh	equ	0xFF4
 19324                           prodl	equ	0xFF3
 19325                           intcon	equ	0xFF2
 19326                           indf0	equ	0xFEF
 19327                           postinc0	equ	0xFEE
 19328                           fsr0h	equ	0xFEA
 19329                           fsr0l	equ	0xFE9
 19330                           wreg	equ	0xFE8
 19331                           indf1	equ	0xFE7
 19332                           postdec1	equ	0xFE5
 19333                           fsr1h	equ	0xFE2
 19334                           fsr1l	equ	0xFE1
 19335                           indf2	equ	0xFDF
 19336                           postinc2	equ	0xFDE
 19337                           postdec2	equ	0xFDD
 19338                           plusw2	equ	0xFDB
 19339                           fsr2h	equ	0xFDA
 19340                           fsr2l	equ	0xFD9
 19341                           status	equ	0xFD8
 19342                           
 19343 ;; *************** function _USBCtrlTrfRxService *****************
 19344 ;; Defined at:
 19345 ;;		line 1852 in file "../../../../microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 19346 ;; Parameters:    Size  Location     Type
 19347 ;;		None
 19348 ;; Auto vars:     Size  Location     Type
 19349 ;;  byteToRead      1    1[COMRAM] unsigned char 
 19350 ;;  i               1    0[COMRAM] unsigned char 
 19351 ;; Return value:  Size  Location     Type
 19352 ;;                  1    wreg      void 
 19353 ;; Registers used:
 19354 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19355 ;; Tracked objects:
 19356 ;;		On entry : 0/0
 19357 ;;		On exit  : 0/0
 19358 ;;		Unchanged: 0/0
 19359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19360 ;;      Params:         0       0       0       0       0       0       0       0       0
 19361 ;;      Locals:         2       0       0       0       0       0       0       0       0
 19362 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19363 ;;      Totals:         2       0       0       0       0       0       0       0       0
 19364 ;;Total ram usage:        2 bytes
 19365 ;; Hardware stack levels used:    1
 19366 ;; Hardware stack levels required when called:    1
 19367 ;; This function calls:
 19368 ;;		_USBCtrlEPAllowStatusStage
 19369 ;; This function is called by:
 19370 ;;		_USBCtrlTrfOutHandler
 19371 ;; This function uses a non-reentrant model
 19372 ;;
 19373                           
 19374                           	psect	text81
 19375  0025EE                     __ptext81:
 19376                           	opt stack 0
 19377  0025EE                     _USBCtrlTrfRxService:
 19378                           	opt stack 20
 19379                           
 19380                           ;usb_device.c: 1854: uint8_t byteToRead;
 19381                           ;usb_device.c: 1855: uint8_t i;
 19382                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 19383                           
 19384                           ;incstack = 0
 19385  0025EE  EE20 F001          	lfsr	2,1
 19386  0025F2  504A               	movf	_pBDTEntryEP0OutCurrent,w,c
 19387  0025F4  26D9               	addwf	fsr2l,f,c
 19388  0025F6  504B               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 19389  0025F8  22DA               	addwfc	fsr2h,f,c
 19390  0025FA  50DF               	movf	indf2,w,c
 19391  0025FC  6E02               	movwf	USBCtrlTrfRxService@byteToRead,c
 19392                           
 19393                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
 19394  0025FE  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 19395  002600  5C36               	subwf	_outPipes+4,w,c	;volatile
 19396  002602  0E00               	movlw	0
 19397  002604  5837               	subwfb	_outPipes+5,w,c	;volatile
 19398  002606  A0D8               	btfss	status,0,c
 19399                           
 19400                           ;usb_device.c: 1866: {
 19401                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
 19402  002608  C036  F002         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 19403                           
 19404                           ;usb_device.c: 1868: }
 19405                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
 19406  00260C  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 19407  00260E  5E36               	subwf	_outPipes+4,f,c	;volatile
 19408  002610  0E00               	movlw	0
 19409  002612  5A37               	subwfb	_outPipes+5,f,c	;volatile
 19410                           
 19411                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
 19412  002614  0E00               	movlw	0
 19413  002616  6E01               	movwf	USBCtrlTrfRxService@i,c
 19414  002618  D011               	goto	i2l422
 19415  00261A                     
 19416                           ;usb_device.c: 1875: {
 19417                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 19418  00261A  5001               	movf	USBCtrlTrfRxService@i,w,c
 19419  00261C  0D01               	mullw	1
 19420  00261E  0E38               	movlw	56
 19421  002620  24F3               	addwf	prodl,w,c
 19422  002622  6ED9               	movwf	fsr2l,c
 19423  002624  0E04               	movlw	4
 19424  002626  20F4               	addwfc	prodh,w,c
 19425  002628  6EDA               	movwf	fsr2h,c
 19426  00262A  C032  FFE1         	movff	_outPipes,fsr1l	;volatile
 19427  00262E  C033  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 19428  002632  CFDF FFE7          	movff	indf2,indf1
 19429  002636  4A32               	infsnz	_outPipes,f,c	;volatile
 19430  002638  2A33               	incf	_outPipes+1,f,c	;volatile
 19431  00263A  2A01               	incf	USBCtrlTrfRxService@i,f,c
 19432  00263C                     i2l422:
 19433  00263C  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 19434  00263E  5C01               	subwf	USBCtrlTrfRxService@i,w,c
 19435  002640  A0D8               	btfss	status,0,c
 19436  002642  D7EB               	goto	i2l423
 19437                           
 19438                           ;usb_device.c: 1877: }
 19439                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
 19440  002644  5036               	movf	_outPipes+4,w,c	;volatile
 19441  002646  1037               	iorwf	_outPipes+5,w,c	;volatile
 19442  002648  B4D8               	btfsc	status,2,c
 19443  00264A  D032               	goto	i2l425
 19444                           
 19445                           ;usb_device.c: 1882: {
 19446                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
 19447  00264C  EE20 F001          	lfsr	2,1
 19448  002650  5048               	movf	_pBDTEntryEP0OutNext,w,c
 19449  002652  26D9               	addwf	fsr2l,f,c
 19450  002654  5049               	movf	_pBDTEntryEP0OutNext+1,w,c
 19451  002656  22DA               	addwfc	fsr2h,f,c
 19452  002658  0E08               	movlw	8
 19453  00265A  6EDF               	movwf	indf2,c
 19454                           
 19455                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 19456  00265C  EE20 F002          	lfsr	2,2
 19457  002660  5048               	movf	_pBDTEntryEP0OutNext,w,c
 19458  002662  26D9               	addwf	fsr2l,f,c
 19459  002664  5049               	movf	_pBDTEntryEP0OutNext+1,w,c
 19460  002666  22DA               	addwfc	fsr2h,f,c
 19461  002668  0E38               	movlw	56
 19462  00266A  6EDE               	movwf	postinc2,c
 19463  00266C  0E04               	movlw	4
 19464  00266E  6EDD               	movwf	postdec2,c
 19465                           
 19466                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 19467  002670  C04A  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19468  002674  C04B  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19469  002678  BCDF               	btfsc	indf2,6,c
 19470  00267A  D00D               	goto	i2l426
 19471                           
 19472                           ;usb_device.c: 1886: {
 19473                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 19474  00267C  C048  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19475  002680  C049  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19476  002684  0E48               	movlw	72
 19477  002686  6EDF               	movwf	indf2,c
 19478                           
 19479                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 19480  002688  C048  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19481  00268C  C049  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19482  002690  0E00               	movlw	0
 19483  002692  8EDB               	bsf	plusw2,7,c
 19484                           
 19485                           ;usb_device.c: 1889: }
 19486  002694  0012               	return	
 19487  002696                     i2l426:
 19488                           
 19489                           ;usb_device.c: 1890: else
 19490                           ;usb_device.c: 1891: {
 19491                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 19492  002696  C048  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19493  00269A  C049  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19494  00269E  0E08               	movlw	8
 19495  0026A0  6EDF               	movwf	indf2,c
 19496                           
 19497                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 19498  0026A2  C048  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19499  0026A6  C049  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19500  0026AA  0E00               	movlw	0
 19501  0026AC  8EDB               	bsf	plusw2,7,c
 19502                           
 19503                           ;usb_device.c: 1894: }
 19504                           ;usb_device.c: 1895: }
 19505  0026AE  0012               	return	
 19506  0026B0                     i2l425:
 19507                           
 19508                           ;usb_device.c: 1896: else
 19509                           ;usb_device.c: 1897: {
 19510                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 19511  0026B0  EE20 F001          	lfsr	2,1
 19512  0026B4  5048               	movf	_pBDTEntryEP0OutNext,w,c
 19513  0026B6  26D9               	addwf	fsr2l,f,c
 19514  0026B8  5049               	movf	_pBDTEntryEP0OutNext+1,w,c
 19515  0026BA  22DA               	addwfc	fsr2h,f,c
 19516  0026BC  0E08               	movlw	8
 19517  0026BE  6EDF               	movwf	indf2,c
 19518                           
 19519                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 19520  0026C0  EE20 F002          	lfsr	2,2
 19521  0026C4  5048               	movf	_pBDTEntryEP0OutNext,w,c
 19522  0026C6  26D9               	addwf	fsr2l,f,c
 19523  0026C8  5049               	movf	_pBDTEntryEP0OutNext+1,w,c
 19524  0026CA  22DA               	addwfc	fsr2h,f,c
 19525  0026CC  0E30               	movlw	48
 19526  0026CE  6EDE               	movwf	postinc2,c
 19527  0026D0  0E04               	movlw	4
 19528  0026D2  6EDD               	movwf	postdec2,c
 19529                           
 19530                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 19531  0026D4  C048  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19532  0026D8  C049  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19533  0026DC  0E04               	movlw	4
 19534  0026DE  6EDF               	movwf	indf2,c
 19535                           
 19536                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 19537  0026E0  C048  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19538  0026E4  C049  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19539  0026E8  0E00               	movlw	0
 19540  0026EA  8EDB               	bsf	plusw2,7,c
 19541                           
 19542                           ;usb_device.c: 1926: }
 19543                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
 19544                           
 19545                           ;usb_device.c: 1915: {
 19546                           ;usb_device.c: 1921: outPipes[0].pFunc();
 19547  0026EC  9E35               	bcf	_outPipes+3,7,c	;volatile
 19548                           
 19549                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
 19550  0026EE  5050               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 19551  0026F0  A4D8               	btfss	status,2,c
 19552  0026F2  0012               	return	
 19553                           
 19554                           ;usb_device.c: 1942: {
 19555                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
 19556  0026F4  ECB4  F018         	call	_USBCtrlEPAllowStatusStage	;wreg free
 19557  0026F8  0012               	return	
 19558  0026FA                     __end_of_USBCtrlTrfRxService:
 19559                           	opt stack 0
 19560                           pclatu	equ	0xFFB
 19561                           pclath	equ	0xFFA
 19562                           tblptru	equ	0xFF8
 19563                           tblptrh	equ	0xFF7
 19564                           tblptrl	equ	0xFF6
 19565                           tablat	equ	0xFF5
 19566                           prodh	equ	0xFF4
 19567                           prodl	equ	0xFF3
 19568                           intcon	equ	0xFF2
 19569                           indf0	equ	0xFEF
 19570                           postinc0	equ	0xFEE
 19571                           fsr0h	equ	0xFEA
 19572                           fsr0l	equ	0xFE9
 19573                           wreg	equ	0xFE8
 19574                           indf1	equ	0xFE7
 19575                           postdec1	equ	0xFE5
 19576                           fsr1h	equ	0xFE2
 19577                           fsr1l	equ	0xFE1
 19578                           indf2	equ	0xFDF
 19579                           postinc2	equ	0xFDE
 19580                           postdec2	equ	0xFDD
 19581                           plusw2	equ	0xFDB
 19582                           fsr2h	equ	0xFDA
 19583                           fsr2l	equ	0xFD9
 19584                           status	equ	0xFD8
 19585                           
 19586 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 19587 ;; Defined at:
 19588 ;;		line 1416 in file "../../../../microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 19589 ;; Parameters:    Size  Location     Type
 19590 ;;		None
 19591 ;; Auto vars:     Size  Location     Type
 19592 ;;		None
 19593 ;; Return value:  Size  Location     Type
 19594 ;;                  1    wreg      void 
 19595 ;; Registers used:
 19596 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19597 ;; Tracked objects:
 19598 ;;		On entry : 0/0
 19599 ;;		On exit  : 0/0
 19600 ;;		Unchanged: 0/0
 19601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19602 ;;      Params:         0       0       0       0       0       0       0       0       0
 19603 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19604 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19605 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19606 ;;Total ram usage:        0 bytes
 19607 ;; Hardware stack levels used:    1
 19608 ;; This function calls:
 19609 ;;		Nothing
 19610 ;; This function is called by:
 19611 ;;		_USBDeviceTasks
 19612 ;;		_USBCtrlEPServiceComplete
 19613 ;;		_USBCtrlTrfRxService
 19614 ;; This function uses a non-reentrant model
 19615 ;;
 19616                           
 19617                           	psect	text82
 19618  003168                     __ptext82:
 19619                           	opt stack 0
 19620  003168                     _USBCtrlEPAllowStatusStage:
 19621                           	opt stack 20
 19622                           
 19623                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
 19624                           
 19625                           ;incstack = 0
 19626  003168  504F               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 19627  00316A  A4D8               	btfss	status,2,c
 19628  00316C  0012               	return	
 19629                           
 19630                           ;usb_device.c: 1424: {
 19631                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
 19632  00316E  0E01               	movlw	1
 19633  003170  6E4F               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 19634                           
 19635                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
 19636  003172  504E               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 19637  003174  A4D8               	btfss	status,2,c
 19638  003176  0012               	return	
 19639                           
 19640                           ;usb_device.c: 1427: {
 19641                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
 19642  003178  0E01               	movlw	1
 19643  00317A  6E4E               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 19644                           
 19645                           ;usb_device.c: 1432: if(controlTransferState == 2)
 19646  00317C  0E02               	movlw	2
 19647  00317E  1856               	xorwf	_controlTransferState,w,c	;volatile
 19648  003180  A4D8               	btfss	status,2,c
 19649  003182  D015               	goto	i2l376
 19650                           
 19651                           ;usb_device.c: 1433: {
 19652                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
 19653  003184  EE20 F001          	lfsr	2,1
 19654  003188  503A               	movf	_pBDTEntryIn,w,c
 19655  00318A  26D9               	addwf	fsr2l,f,c
 19656  00318C  503B               	movf	_pBDTEntryIn+1,w,c
 19657  00318E  22DA               	addwfc	fsr2h,f,c
 19658  003190  0E00               	movlw	0
 19659  003192  6EDF               	movwf	indf2,c
 19660                           
 19661                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 19662  003194  C03A  FFD9         	movff	_pBDTEntryIn,fsr2l
 19663  003198  C03B  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19664  00319C  0E48               	movlw	72
 19665  00319E  6EDF               	movwf	indf2,c
 19666                           
 19667                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
 19668  0031A0  C03A  FFD9         	movff	_pBDTEntryIn,fsr2l
 19669  0031A4  C03B  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19670  0031A8  0E00               	movlw	0
 19671  0031AA  8EDB               	bsf	plusw2,7,c
 19672                           
 19673                           ;usb_device.c: 1437: }
 19674  0031AC  0012               	return	
 19675  0031AE                     i2l376:
 19676                           
 19677                           ;usb_device.c: 1438: else if(controlTransferState == 1)
 19678  0031AE  0456               	decf	_controlTransferState,w,c	;volatile
 19679  0031B0  A4D8               	btfss	status,2,c
 19680  0031B2  0012               	return	
 19681                           
 19682                           ;usb_device.c: 1439: {
 19683                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
 19684  0031B4  0E00               	movlw	0
 19685  0031B6  6E52               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 19686                           
 19687                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
 19688  0031B8  EE20 F001          	lfsr	2,1
 19689  0031BC  504A               	movf	_pBDTEntryEP0OutCurrent,w,c
 19690  0031BE  26D9               	addwf	fsr2l,f,c
 19691  0031C0  504B               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 19692  0031C2  22DA               	addwfc	fsr2h,f,c
 19693  0031C4  0E08               	movlw	8
 19694  0031C6  6EDF               	movwf	indf2,c
 19695                           
 19696                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 19697  0031C8  EE20 F002          	lfsr	2,2
 19698  0031CC  504A               	movf	_pBDTEntryEP0OutCurrent,w,c
 19699  0031CE  26D9               	addwf	fsr2l,f,c
 19700  0031D0  504B               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 19701  0031D2  22DA               	addwfc	fsr2h,f,c
 19702  0031D4  0E30               	movlw	48
 19703  0031D6  6EDE               	movwf	postinc2,c
 19704  0031D8  0E04               	movlw	4
 19705  0031DA  6EDD               	movwf	postdec2,c
 19706                           
 19707                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 19708  0031DC  C04A  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19709  0031E0  C04B  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19710  0031E4  0E04               	movlw	4
 19711  0031E6  6EDF               	movwf	indf2,c
 19712                           
 19713                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 19714  0031E8  C04A  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19715  0031EC  C04B  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19716  0031F0  0E00               	movlw	0
 19717  0031F2  8EDB               	bsf	plusw2,7,c
 19718                           
 19719                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
 19720  0031F4  0E01               	movlw	1
 19721  0031F6  6E52               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 19722                           
 19723                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
 19724  0031F8  EE20 F001          	lfsr	2,1
 19725  0031FC  5048               	movf	_pBDTEntryEP0OutNext,w,c
 19726  0031FE  26D9               	addwf	fsr2l,f,c
 19727  003200  5049               	movf	_pBDTEntryEP0OutNext+1,w,c
 19728  003202  22DA               	addwfc	fsr2h,f,c
 19729  003204  0E08               	movlw	8
 19730  003206  6EDF               	movwf	indf2,c
 19731                           
 19732                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 19733  003208  EE20 F002          	lfsr	2,2
 19734  00320C  5048               	movf	_pBDTEntryEP0OutNext,w,c
 19735  00320E  26D9               	addwf	fsr2l,f,c
 19736  003210  5049               	movf	_pBDTEntryEP0OutNext+1,w,c
 19737  003212  22DA               	addwfc	fsr2h,f,c
 19738  003214  0E30               	movlw	48
 19739  003216  6EDE               	movwf	postinc2,c
 19740  003218  0E04               	movlw	4
 19741  00321A  6EDD               	movwf	postdec2,c
 19742                           
 19743                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 19744  00321C  C048  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19745  003220  C049  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19746  003224  0E80               	movlw	128
 19747  003226  6EDF               	movwf	indf2,c
 19748  003228  0012               	return	
 19749  00322A                     __end_of_USBCtrlEPAllowStatusStage:
 19750                           	opt stack 0
 19751                           pclatu	equ	0xFFB
 19752                           pclath	equ	0xFFA
 19753                           tblptru	equ	0xFF8
 19754                           tblptrh	equ	0xFF7
 19755                           tblptrl	equ	0xFF6
 19756                           tablat	equ	0xFF5
 19757                           prodh	equ	0xFF4
 19758                           prodl	equ	0xFF3
 19759                           intcon	equ	0xFF2
 19760                           indf0	equ	0xFEF
 19761                           postinc0	equ	0xFEE
 19762                           fsr0h	equ	0xFEA
 19763                           fsr0l	equ	0xFE9
 19764                           wreg	equ	0xFE8
 19765                           indf1	equ	0xFE7
 19766                           postdec1	equ	0xFE5
 19767                           fsr1h	equ	0xFE2
 19768                           fsr1l	equ	0xFE1
 19769                           indf2	equ	0xFDF
 19770                           postinc2	equ	0xFDE
 19771                           postdec2	equ	0xFDD
 19772                           plusw2	equ	0xFDB
 19773                           fsr2h	equ	0xFDA
 19774                           fsr2l	equ	0xFD9
 19775                           status	equ	0xFD8
 19776                           
 19777 ;; *************** function _USBCtrlTrfInHandler *****************
 19778 ;; Defined at:
 19779 ;;		line 2592 in file "../../../../microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 19780 ;; Parameters:    Size  Location     Type
 19781 ;;		None
 19782 ;; Auto vars:     Size  Location     Type
 19783 ;;  lastDTS         1    1[COMRAM] unsigned char 
 19784 ;; Return value:  Size  Location     Type
 19785 ;;                  1    wreg      void 
 19786 ;; Registers used:
 19787 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19788 ;; Tracked objects:
 19789 ;;		On entry : 0/0
 19790 ;;		On exit  : 0/0
 19791 ;;		Unchanged: 0/0
 19792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19793 ;;      Params:         0       0       0       0       0       0       0       0       0
 19794 ;;      Locals:         1       0       0       0       0       0       0       0       0
 19795 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19796 ;;      Totals:         1       0       0       0       0       0       0       0       0
 19797 ;;Total ram usage:        1 bytes
 19798 ;; Hardware stack levels used:    1
 19799 ;; Hardware stack levels required when called:    1
 19800 ;; This function calls:
 19801 ;;		_USBCtrlTrfTxService
 19802 ;; This function is called by:
 19803 ;;		_USBCtrlEPService
 19804 ;; This function uses a non-reentrant model
 19805 ;;
 19806                           
 19807                           	psect	text83
 19808  00322A                     __ptext83:
 19809                           	opt stack 0
 19810  00322A                     _USBCtrlTrfInHandler:
 19811                           	opt stack 21
 19812                           
 19813                           ;usb_device.c: 2594: uint8_t lastDTS;
 19814                           ;usb_device.c: 2596: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 19815                           
 19816                           ;incstack = 0
 19817  00322A  C03A  FFD9         	movff	_pBDTEntryIn,fsr2l
 19818  00322E  C03B  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19819  003232  0E00               	movlw	0
 19820  003234  BCDF               	btfsc	indf2,6,c
 19821  003236  0E01               	movlw	1
 19822  003238  6E02               	movwf	USBCtrlTrfInHandler@lastDTS,c
 19823                           
 19824                           ;usb_device.c: 2599: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 19825  00323A  0E04               	movlw	4
 19826  00323C  183A               	xorwf	_pBDTEntryIn,w,c
 19827  00323E  6E3A               	movwf	_pBDTEntryIn,c
 19828  003240  503B               	movf	_pBDTEntryIn+1,w,c
 19829  003242  6E3B               	movwf	_pBDTEntryIn+1,c
 19830                           
 19831                           ;usb_device.c: 2604: if(USBDeviceState == ADR_PENDING_STATE)
 19832  003244  0E08               	movlw	8
 19833  003246  1858               	xorwf	_USBDeviceState,w,c	;volatile
 19834  003248  A4D8               	btfss	status,2,c
 19835  00324A  D00B               	goto	i2l503
 19836                           
 19837                           ;usb_device.c: 2605: {
 19838                           ;usb_device.c: 2606: UADDR = (SetupPkt.bDevADR & 0x7F);
 19839  00324C  0104               	movlb	4	; () banked
 19840  00324E  5132               	movf	50,w,b	;volatile
 19841  003250  0B7F               	andlw	127
 19842  003252  6E6E               	movwf	3950,c	;volatile
 19843                           
 19844                           ; BSR set to: 4
 19845                           ;usb_device.c: 2607: if(UADDR != 0u)
 19846  003254  506E               	movf	3950,w,c	;volatile
 19847  003256  B4D8               	btfsc	status,2,c
 19848  003258  D002               	goto	i2l502
 19849                           
 19850                           ; BSR set to: 4
 19851                           ;usb_device.c: 2608: {
 19852                           ;usb_device.c: 2609: USBDeviceState=ADDRESS_STATE;
 19853  00325A  0E10               	movlw	16
 19854  00325C  D001               	goto	L23
 19855  00325E                     i2l502:
 19856                           
 19857                           ; BSR set to: 4
 19858                           ;usb_device.c: 2611: else
 19859                           ;usb_device.c: 2612: {
 19860                           ;usb_device.c: 2613: USBDeviceState=DEFAULT_STATE;
 19861                           
 19862                           ; BSR set to: 4
 19863  00325E  0E04               	movlw	4
 19864  003260                     L23:
 19865  003260  6E58               	movwf	_USBDeviceState,c	;volatile
 19866  003262                     i2l503:
 19867                           
 19868                           ;usb_device.c: 2614: }
 19869                           ;usb_device.c: 2615: }
 19870                           ;usb_device.c: 2618: if(controlTransferState == 1)
 19871                           
 19872                           ; BSR set to: 4
 19873                           
 19874                           ; BSR set to: 4
 19875  003262  0456               	decf	_controlTransferState,w,c	;volatile
 19876  003264  A4D8               	btfss	status,2,c
 19877  003266  D03A               	goto	i2l504
 19878                           
 19879                           ;usb_device.c: 2619: {
 19880                           ;usb_device.c: 2620: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 19881  003268  EE20 F002          	lfsr	2,2
 19882  00326C  503A               	movf	_pBDTEntryIn,w,c
 19883  00326E  26D9               	addwf	fsr2l,f,c
 19884  003270  503B               	movf	_pBDTEntryIn+1,w,c
 19885  003272  22DA               	addwfc	fsr2h,f,c
 19886  003274  0E38               	movlw	56
 19887  003276  6EDE               	movwf	postinc2,c
 19888  003278  0E04               	movlw	4
 19889  00327A  6EDD               	movwf	postdec2,c
 19890                           
 19891                           ;usb_device.c: 2621: USBCtrlTrfTxService();
 19892  00327C  EC4A  F018         	call	_USBCtrlTrfTxService	;wreg free
 19893                           
 19894                           ;usb_device.c: 2627: if(shortPacketStatus == 2)
 19895  003280  0E02               	movlw	2
 19896  003282  1857               	xorwf	_shortPacketStatus,w,c	;volatile
 19897  003284  A4D8               	btfss	status,2,c
 19898  003286  D00D               	goto	i2l505
 19899                           
 19900                           ;usb_device.c: 2628: {
 19901                           ;usb_device.c: 2631: pBDTEntryIn[0]->STAT.Val = 0x04;
 19902  003288  C03A  FFD9         	movff	_pBDTEntryIn,fsr2l
 19903  00328C  C03B  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19904  003290  0E04               	movlw	4
 19905  003292  6EDF               	movwf	indf2,c
 19906                           
 19907                           ;usb_device.c: 2632: pBDTEntryIn[0]->STAT.Val |= 0x80;
 19908  003294  C03A  FFD9         	movff	_pBDTEntryIn,fsr2l
 19909  003298  C03B  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19910  00329C  0E00               	movlw	0
 19911  00329E  8EDB               	bsf	plusw2,7,c
 19912                           
 19913                           ;usb_device.c: 2633: }
 19914  0032A0  0012               	return	
 19915  0032A2                     i2l505:
 19916                           
 19917                           ;usb_device.c: 2634: else
 19918                           ;usb_device.c: 2635: {
 19919                           ;usb_device.c: 2636: if(lastDTS == 0)
 19920  0032A2  5002               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 19921  0032A4  A4D8               	btfss	status,2,c
 19922  0032A6  D00D               	goto	i2l507
 19923                           
 19924                           ;usb_device.c: 2637: {
 19925                           ;usb_device.c: 2638: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 19926  0032A8  C03A  FFD9         	movff	_pBDTEntryIn,fsr2l
 19927  0032AC  C03B  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19928  0032B0  0E48               	movlw	72
 19929  0032B2  6EDF               	movwf	indf2,c
 19930                           
 19931                           ;usb_device.c: 2639: pBDTEntryIn[0]->STAT.Val |= 0x80;
 19932  0032B4  C03A  FFD9         	movff	_pBDTEntryIn,fsr2l
 19933  0032B8  C03B  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19934  0032BC  0E00               	movlw	0
 19935  0032BE  8EDB               	bsf	plusw2,7,c
 19936                           
 19937                           ;usb_device.c: 2640: }
 19938  0032C0  0012               	return	
 19939  0032C2                     i2l507:
 19940                           
 19941                           ;usb_device.c: 2641: else
 19942                           ;usb_device.c: 2642: {
 19943                           ;usb_device.c: 2643: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 19944  0032C2  C03A  FFD9         	movff	_pBDTEntryIn,fsr2l
 19945  0032C6  C03B  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19946  0032CA  0E08               	movlw	8
 19947  0032CC  6EDF               	movwf	indf2,c
 19948                           
 19949                           ;usb_device.c: 2644: pBDTEntryIn[0]->STAT.Val |= 0x80;
 19950  0032CE  C03A  FFD9         	movff	_pBDTEntryIn,fsr2l
 19951  0032D2  C03B  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19952  0032D6  0E00               	movlw	0
 19953  0032D8  8EDB               	bsf	plusw2,7,c
 19954                           
 19955                           ;usb_device.c: 2645: }
 19956                           ;usb_device.c: 2646: }
 19957                           ;usb_device.c: 2647: }
 19958  0032DA  0012               	return	
 19959  0032DC                     i2l504:
 19960                           
 19961                           ;usb_device.c: 2648: else
 19962                           ;usb_device.c: 2649: {
 19963                           ;usb_device.c: 2653: if(outPipes[0].info.bits.busy == 1)
 19964  0032DC  BE35               	btfsc	_outPipes+3,7,c	;volatile
 19965                           
 19966                           ;usb_device.c: 2658: }
 19967                           ;usb_device.c: 2659: outPipes[0].info.bits.busy = 0;
 19968                           
 19969                           ;usb_device.c: 2656: {
 19970                           ;usb_device.c: 2657: outPipes[0].pFunc();
 19971  0032DE  9E35               	bcf	_outPipes+3,7,c	;volatile
 19972                           
 19973                           ;usb_device.c: 2660: }
 19974                           ;usb_device.c: 2662: controlTransferState = 0;
 19975  0032E0  0E00               	movlw	0
 19976  0032E2  6E56               	movwf	_controlTransferState,c	;volatile
 19977  0032E4  0012               	return	
 19978  0032E6                     __end_of_USBCtrlTrfInHandler:
 19979                           	opt stack 0
 19980                           pclatu	equ	0xFFB
 19981                           pclath	equ	0xFFA
 19982                           tblptru	equ	0xFF8
 19983                           tblptrh	equ	0xFF7
 19984                           tblptrl	equ	0xFF6
 19985                           tablat	equ	0xFF5
 19986                           prodh	equ	0xFF4
 19987                           prodl	equ	0xFF3
 19988                           intcon	equ	0xFF2
 19989                           indf0	equ	0xFEF
 19990                           postinc0	equ	0xFEE
 19991                           fsr0h	equ	0xFEA
 19992                           fsr0l	equ	0xFE9
 19993                           wreg	equ	0xFE8
 19994                           indf1	equ	0xFE7
 19995                           postdec1	equ	0xFE5
 19996                           fsr1h	equ	0xFE2
 19997                           fsr1l	equ	0xFE1
 19998                           indf2	equ	0xFDF
 19999                           postinc2	equ	0xFDE
 20000                           postdec2	equ	0xFDD
 20001                           plusw2	equ	0xFDB
 20002                           fsr2h	equ	0xFDA
 20003                           fsr2l	equ	0xFD9
 20004                           status	equ	0xFD8
 20005                           
 20006 ;; *************** function _USBCtrlTrfTxService *****************
 20007 ;; Defined at:
 20008 ;;		line 1771 in file "../../../../microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 20009 ;; Parameters:    Size  Location     Type
 20010 ;;		None
 20011 ;; Auto vars:     Size  Location     Type
 20012 ;;  byteToSend      1    0[COMRAM] unsigned char 
 20013 ;; Return value:  Size  Location     Type
 20014 ;;                  1    wreg      void 
 20015 ;; Registers used:
 20016 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 20017 ;; Tracked objects:
 20018 ;;		On entry : 0/0
 20019 ;;		On exit  : 0/0
 20020 ;;		Unchanged: 0/0
 20021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20022 ;;      Params:         0       0       0       0       0       0       0       0       0
 20023 ;;      Locals:         1       0       0       0       0       0       0       0       0
 20024 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20025 ;;      Totals:         1       0       0       0       0       0       0       0       0
 20026 ;;Total ram usage:        1 bytes
 20027 ;; Hardware stack levels used:    1
 20028 ;; This function calls:
 20029 ;;		Nothing
 20030 ;; This function is called by:
 20031 ;;		_USBCtrlEPAllowDataStage
 20032 ;;		_USBCtrlTrfInHandler
 20033 ;; This function uses a non-reentrant model
 20034 ;;
 20035                           
 20036                           	psect	text84
 20037  003094                     __ptext84:
 20038                           	opt stack 0
 20039  003094                     _USBCtrlTrfTxService:
 20040                           	opt stack 19
 20041                           
 20042                           ;usb_device.c: 1773: uint8_t byteToSend;
 20043                           ;usb_device.c: 1777: byteToSend = 8;
 20044                           
 20045                           ;incstack = 0
 20046  003094  0E08               	movlw	8
 20047  003096  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 20048                           
 20049                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
 20050  003098  0100               	movlb	0	; () banked
 20051  00309A  51FC               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 20052  00309C  E110               	bnz	i2l6181
 20053  00309E  0E08               	movlw	8
 20054  0030A0  5DFB               	subwf	(_inPipes+4)& (0+255),w,b	;volatile
 20055  0030A2  B0D8               	btfsc	status,0,c
 20056  0030A4  D00C               	goto	i2l409
 20057                           
 20058                           ; BSR set to: 0
 20059                           ;usb_device.c: 1779: {
 20060                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
 20061  0030A6  C0FB  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 20062                           
 20063                           ; BSR set to: 0
 20064                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
 20065  0030AA  5057               	movf	_shortPacketStatus,w,c	;volatile
 20066  0030AC  A4D8               	btfss	status,2,c
 20067  0030AE  D002               	goto	i2l407
 20068                           
 20069                           ; BSR set to: 0
 20070                           ;usb_device.c: 1788: {
 20071                           ;usb_device.c: 1789: shortPacketStatus = 1;
 20072  0030B0  0E01               	movlw	1
 20073  0030B2  D004               	goto	L24
 20074  0030B4                     i2l407:
 20075                           
 20076                           ; BSR set to: 0
 20077                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
 20078                           
 20079                           ; BSR set to: 0
 20080  0030B4  0457               	decf	_shortPacketStatus,w,c	;volatile
 20081  0030B6  A4D8               	btfss	status,2,c
 20082  0030B8  D002               	goto	i2l409
 20083                           
 20084                           ; BSR set to: 0
 20085                           ;usb_device.c: 1792: {
 20086                           ;usb_device.c: 1793: shortPacketStatus = 2;
 20087  0030BA  0E02               	movlw	2
 20088  0030BC                     L24:
 20089  0030BC  6E57               	movwf	_shortPacketStatus,c	;volatile
 20090  0030BE                     i2l409:
 20091  0030BE                     i2l6181:
 20092                           
 20093                           ; BSR set to: 0
 20094                           ;usb_device.c: 1794: }
 20095                           ;usb_device.c: 1795: }
 20096                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
 20097  0030BE  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 20098  0030C0  5FFB               	subwf	(_inPipes+4)& (0+255),f,b	;volatile
 20099  0030C2  0E00               	movlw	0
 20100  0030C4  5BFC               	subwfb	(_inPipes+5)& (0+255),f,b	;volatile
 20101                           
 20102                           ; BSR set to: 0
 20103                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
 20104  0030C6  EE20 F001          	lfsr	2,1
 20105  0030CA  503A               	movf	_pBDTEntryIn,w,c
 20106  0030CC  26D9               	addwf	fsr2l,f,c
 20107  0030CE  503B               	movf	_pBDTEntryIn+1,w,c
 20108  0030D0  22DA               	addwfc	fsr2h,f,c
 20109  0030D2  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 20110                           
 20111                           ; BSR set to: 0
 20112                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
 20113  0030D6  0E38               	movlw	56
 20114  0030D8  0102               	movlb	2	; () banked
 20115  0030DA  6F44               	movwf	_pDst& (0+255),b
 20116  0030DC  0E04               	movlw	4
 20117  0030DE  6F45               	movwf	(_pDst+1)& (0+255),b
 20118                           
 20119                           ; BSR set to: 2
 20120                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 20121  0030E0  0100               	movlb	0	; () banked
 20122  0030E2  A1FA               	btfss	(_inPipes+3)& (0+255),0,b	;volatile
 20123  0030E4  D01D               	goto	i2l411
 20124  0030E6  D03C               	goto	i2l415
 20125  0030E8                     
 20126                           ;usb_device.c: 1812: {
 20127                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
 20128                           
 20129                           ; BSR set to: 0
 20130  0030E8  C0F7  FFF6         	movff	_inPipes,tblptrl	;volatile
 20131  0030EC  C0F8  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 20132  0030F0  6AF8               	clrf	tblptru,c
 20133  0030F2  C244  FFD9         	movff	_pDst,fsr2l
 20134  0030F6  C245  FFDA         	movff	_pDst+1,fsr2h
 20135  0030FA  0E07               	movlw	(high __ramtop+-1)
 20136  0030FC  64F7               	cpfsgt	tblptrh,c
 20137  0030FE  D003               	bra	i2u466_47
 20138  003100  0008               	tblrd		*
 20139  003102  50F5               	movf	tablat,w,c
 20140  003104  D005               	bra	i2u466_40
 20141  003106                     i2u466_47:
 20142  003106  CFF6 FFE9          	movff	tblptrl,fsr0l
 20143  00310A  CFF7 FFEA          	movff	tblptrh,fsr0h
 20144  00310E  50EF               	movf	indf0,w,c
 20145  003110                     i2u466_40:
 20146  003110  6EDF               	movwf	indf2,c
 20147  003112  0100               	movlb	0	; () banked
 20148  003114  4BF7               	infsnz	_inPipes& (0+255),f,b	;volatile
 20149  003116  2BF8               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 20150                           
 20151                           ; BSR set to: 0
 20152  003118  0102               	movlb	2	; () banked
 20153  00311A  4B44               	infsnz	_pDst& (0+255),f,b
 20154  00311C  2B45               	incf	(_pDst+1)& (0+255),f,b
 20155                           
 20156                           ; BSR set to: 2
 20157                           ;usb_device.c: 1814: byteToSend--;
 20158  00311E  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 20159  003120                     i2l411:
 20160                           
 20161                           ; BSR set to: 2
 20162  003120  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 20163  003122  B4D8               	btfsc	status,2,c
 20164  003124  0012               	return	
 20165  003126  D7E0               	goto	i2l412
 20166  003128                     
 20167                           ;usb_device.c: 1820: {
 20168                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
 20169  003128  C0F7  FFF6         	movff	_inPipes,tblptrl	;volatile
 20170  00312C  C0F8  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 20171  003130  6AF8               	clrf	tblptru,c
 20172  003132  C244  FFD9         	movff	_pDst,fsr2l
 20173  003136  C245  FFDA         	movff	_pDst+1,fsr2h
 20174  00313A  0E07               	movlw	(high __ramtop+-1)
 20175  00313C  64F7               	cpfsgt	tblptrh,c
 20176  00313E  D003               	bra	i2u468_47
 20177  003140  0008               	tblrd		*
 20178  003142  50F5               	movf	tablat,w,c
 20179  003144  D005               	bra	i2u468_40
 20180  003146                     i2u468_47:
 20181  003146  CFF6 FFE9          	movff	tblptrl,fsr0l
 20182  00314A  CFF7 FFEA          	movff	tblptrh,fsr0h
 20183  00314E  50EF               	movf	indf0,w,c
 20184  003150                     i2u468_40:
 20185  003150  6EDF               	movwf	indf2,c
 20186  003152  0100               	movlb	0	; () banked
 20187  003154  4BF7               	infsnz	_inPipes& (0+255),f,b	;volatile
 20188  003156  2BF8               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 20189                           
 20190                           ; BSR set to: 0
 20191  003158  0102               	movlb	2	; () banked
 20192  00315A  4B44               	infsnz	_pDst& (0+255),f,b
 20193  00315C  2B45               	incf	(_pDst+1)& (0+255),f,b
 20194                           
 20195                           ; BSR set to: 2
 20196                           ;usb_device.c: 1822: byteToSend--;
 20197  00315E  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 20198  003160                     i2l415:
 20199                           
 20200                           ; BSR set to: 2
 20201  003160  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 20202  003162  B4D8               	btfsc	status,2,c
 20203  003164  0012               	return	
 20204  003166  D7E0               	goto	i2l416
 20205  003168                     __end_of_USBCtrlTrfTxService:
 20206                           	opt stack 0
 20207                           pclatu	equ	0xFFB
 20208                           pclath	equ	0xFFA
 20209                           tblptru	equ	0xFF8
 20210                           tblptrh	equ	0xFF7
 20211                           tblptrl	equ	0xFF6
 20212                           tablat	equ	0xFF5
 20213                           prodh	equ	0xFF4
 20214                           prodl	equ	0xFF3
 20215                           intcon	equ	0xFF2
 20216                           indf0	equ	0xFEF
 20217                           postinc0	equ	0xFEE
 20218                           fsr0h	equ	0xFEA
 20219                           fsr0l	equ	0xFE9
 20220                           wreg	equ	0xFE8
 20221                           indf1	equ	0xFE7
 20222                           postdec1	equ	0xFE5
 20223                           fsr1h	equ	0xFE2
 20224                           fsr1l	equ	0xFE1
 20225                           indf2	equ	0xFDF
 20226                           postinc2	equ	0xFDE
 20227                           postdec2	equ	0xFDD
 20228                           plusw2	equ	0xFDB
 20229                           fsr2h	equ	0xFDA
 20230                           fsr2l	equ	0xFD9
 20231                           status	equ	0xFD8
 20232                           pclatu	equ	0xFFB
 20233                           pclath	equ	0xFFA
 20234                           tblptru	equ	0xFF8
 20235                           tblptrh	equ	0xFF7
 20236                           tblptrl	equ	0xFF6
 20237                           tablat	equ	0xFF5
 20238                           prodh	equ	0xFF4
 20239                           prodl	equ	0xFF3
 20240                           intcon	equ	0xFF2
 20241                           indf0	equ	0xFEF
 20242                           postinc0	equ	0xFEE
 20243                           fsr0h	equ	0xFEA
 20244                           fsr0l	equ	0xFE9
 20245                           wreg	equ	0xFE8
 20246                           indf1	equ	0xFE7
 20247                           postdec1	equ	0xFE5
 20248                           fsr1h	equ	0xFE2
 20249                           fsr1l	equ	0xFE1
 20250                           indf2	equ	0xFDF
 20251                           postinc2	equ	0xFDE
 20252                           postdec2	equ	0xFDD
 20253                           plusw2	equ	0xFDB
 20254                           fsr2h	equ	0xFDA
 20255                           fsr2l	equ	0xFD9
 20256                           status	equ	0xFD8
 20257                           
 20258                           	psect	rparam
 20259  0000                     pclatu	equ	0xFFB
 20260                           pclath	equ	0xFFA
 20261                           tblptru	equ	0xFF8
 20262                           tblptrh	equ	0xFF7
 20263                           tblptrl	equ	0xFF6
 20264                           tablat	equ	0xFF5
 20265                           prodh	equ	0xFF4
 20266                           prodl	equ	0xFF3
 20267                           intcon	equ	0xFF2
 20268                           indf0	equ	0xFEF
 20269                           postinc0	equ	0xFEE
 20270                           fsr0h	equ	0xFEA
 20271                           fsr0l	equ	0xFE9
 20272                           wreg	equ	0xFE8
 20273                           indf1	equ	0xFE7
 20274                           postdec1	equ	0xFE5
 20275                           fsr1h	equ	0xFE2
 20276                           fsr1l	equ	0xFE1
 20277                           indf2	equ	0xFDF
 20278                           postinc2	equ	0xFDE
 20279                           postdec2	equ	0xFDD
 20280                           plusw2	equ	0xFDB
 20281                           fsr2h	equ	0xFDA
 20282                           fsr2l	equ	0xFD9
 20283                           status	equ	0xFD8
 20284                           
 20285                           	psect	temp
 20286  00005F                     btemp:
 20287                           	opt stack 0
 20288  00005F                     	ds	1
 20289  0000                     int$flags	set	btemp
 20290  0000                     wtemp6	set	btemp+1
 20291                           pclatu	equ	0xFFB
 20292                           pclath	equ	0xFFA
 20293                           tblptru	equ	0xFF8
 20294                           tblptrh	equ	0xFF7
 20295                           tblptrl	equ	0xFF6
 20296                           tablat	equ	0xFF5
 20297                           prodh	equ	0xFF4
 20298                           prodl	equ	0xFF3
 20299                           intcon	equ	0xFF2
 20300                           indf0	equ	0xFEF
 20301                           postinc0	equ	0xFEE
 20302                           fsr0h	equ	0xFEA
 20303                           fsr0l	equ	0xFE9
 20304                           wreg	equ	0xFE8
 20305                           indf1	equ	0xFE7
 20306                           postdec1	equ	0xFE5
 20307                           fsr1h	equ	0xFE2
 20308                           fsr1l	equ	0xFE1
 20309                           indf2	equ	0xFDF
 20310                           postinc2	equ	0xFDE
 20311                           postdec2	equ	0xFDD
 20312                           plusw2	equ	0xFDB
 20313                           fsr2h	equ	0xFDA
 20314                           fsr2l	equ	0xFD9
 20315                           status	equ	0xFD8


Data Sizes:
    Strings     265
    Constant    421
    Data        35
    BSS         918
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     49      94
    BANK0           160    151     160
    BANK1           256    235     256
    BANK2           256      0     228
    BANK3           256      0     200
    BANK4           192      0     100
    BANK5           128      0       0
    BANK6           256      0     200
    BANK7           256      0     150

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMl[48]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_19(CODE[16]), STR_18(CODE[7]), STR_17(CODE[14]), STR_16(CODE[8]), 
		 -> STR_15(CODE[8]), STR_14(CODE[10]), STR_13(CODE[17]), STR_12(CODE[11]), 
		 -> STR_11(CODE[5]), STR_10(CODE[32]), STR_9(CODE[7]), STR_8(CODE[11]), 
		 -> STR_7(CODE[11]), STR_6(CODE[14]), STR_5(CODE[3]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 100
		 -> recebeByteLoRaWan@frameData(BANK3[100]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 200
		 -> recebeByteLoRaWan@frameData(BANK3[100]), SYS(CODE[5]), MAC(CODE[5]), TxLoRaWan@comando(BANK1[200]), 
		 -> SetChannelLoRaWan@comando(BANK1[200]), MAC_JOIN_OTAA(CODE[10]), SYS_RESET(CODE[6]), STR_19(CODE[16]), 
		 -> STR_18(CODE[7]), STR_17(CODE[14]), STR_16(CODE[8]), STR_15(CODE[8]), 
		 -> STR_14(CODE[10]), STR_13(CODE[17]), STR_12(CODE[11]), STR_11(CODE[5]), 
		 -> STR_10(CODE[32]), STR_9(CODE[7]), STR_8(CODE[11]), STR_7(CODE[11]), 
		 -> STR_6(CODE[14]), STR_5(CODE[3]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 200
		 -> recebeByteLoRaWan@frameData(BANK3[100]), SYS(CODE[5]), MAC(CODE[5]), TxLoRaWan@comando(BANK1[200]), 
		 -> SetChannelLoRaWan@comando(BANK1[200]), MAC_JOIN_OTAA(CODE[10]), SYS_RESET(CODE[6]), STR_19(CODE[16]), 
		 -> STR_18(CODE[7]), STR_17(CODE[14]), STR_16(CODE[8]), STR_15(CODE[8]), 
		 -> STR_14(CODE[10]), STR_13(CODE[17]), STR_12(CODE[11]), STR_11(CODE[5]), 
		 -> STR_10(CODE[32]), STR_9(CODE[7]), STR_8(CODE[11]), STR_7(CODE[11]), 
		 -> STR_6(CODE[14]), STR_5(CODE[3]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 100
		 -> recebeByteLoRaWan@frameData(BANK3[100]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 200
		 -> frameBuffer(BANK6[200]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 200
		 -> frameBuffer(BANK6[200]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_19(CODE[16]), STR_18(CODE[7]), STR_17(CODE[14]), STR_16(CODE[8]), 
		 -> STR_15(CODE[8]), STR_14(CODE[10]), STR_13(CODE[17]), STR_12(CODE[11]), 
		 -> STR_11(CODE[5]), STR_10(CODE[32]), STR_9(CODE[7]), STR_8(CODE[11]), 
		 -> STR_7(CODE[11]), STR_6(CODE[14]), STR_5(CODE[3]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 100
		 -> recebeByteLoRaWan@frameData(BANK3[100]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 30
		 -> TxLoRaWan@hex(BANK1[4]), addSensorFloat@f(COMRAM[30]), addSensorInt@f(COMRAM[30]), addSensorStr@f(COMRAM[30]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 200
		 -> TxLoRaWan@comando(BANK1[200]), frameBuffer(BANK6[200]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 200
		 -> TxLoRaWan@comando(BANK1[200]), frameBuffer(BANK6[200]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 100
		 -> receivePacket(BANK3[100]), response(BANK2[100]), SetupPkt(BIGRAMhl[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 100
		 -> receivePacket(BANK3[100]), response(BANK2[100]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 2047
		 -> recebeByte@frameData(BANK4[100]), CtrlTrfData(BIGRAMhl[8]), RAM(DATA[2047]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 2047
		 -> recebeByte@frameData(BANK4[100]), CtrlTrfData(BIGRAMhl[8]), RAM(DATA[2047]), SetupPkt(BIGRAMhl[8]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_25(CODE[7]), MAC_TX_UNCNF(CODE[9]), MAC_TX_CNF(CODE[7]), MAC_SET_CH_STATUS(CODE[14]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_24(CODE[5]), STR_23(CODE[7]), STR_22(CODE[7]), STR_21(CODE[10]), 
		 -> STR_20(CODE[9]), STR_4(CODE[7]), STR_3(CODE[8]), STR_2(CODE[7]), 
		 -> STR_1(CODE[17]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 200
		 -> TxLoRaWan@hex(BANK1[4]), TxLoRaWan@comando(BANK1[200]), SetChannelLoRaWan@comando(BANK1[200]), addSensorFloat@f(COMRAM[30]), 
		 -> addSensorInt@f(COMRAM[30]), addSensorStr@f(COMRAM[30]), frameBuffer(BANK6[200]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 200
		 -> frameBuffer(BANK6[200]), 

    enviaComando@cmd	PTR const unsigned char  size(2) Largest target is 200
		 -> TxLoRaWan@comando(BANK1[200]), SetChannelLoRaWan@comando(BANK1[200]), MAC_JOIN_OTAA(CODE[10]), SYS_RESET(CODE[6]), 

    TxLoRaWan@data	PTR const unsigned char  size(2) Largest target is 6
		 -> main@dadoPoco(BANK1[6]), 

    MSG_LORAWAN	PTR const unsigned char [15] size(2) Largest target is 32
		 -> STR_19(CODE[16]), STR_18(CODE[7]), STR_17(CODE[14]), STR_16(CODE[8]), 
		 -> STR_15(CODE[8]), STR_14(CODE[10]), STR_13(CODE[17]), STR_12(CODE[11]), 
		 -> STR_11(CODE[5]), STR_10(CODE[32]), STR_9(CODE[7]), STR_8(CODE[11]), 
		 -> STR_7(CODE[11]), STR_6(CODE[14]), STR_5(CODE[3]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 200
		 -> TxLoRaWan@comando(BANK1[200]), frameBuffer(BANK6[200]), 

    putsUSBUSART@data	PTR unsigned char  size(2) Largest target is 200
		 -> frameBuffer(BANK6[200]), 

    putsUSBUSART@pData	PTR unsigned char  size(2) Largest target is 200
		 -> frameBuffer(BANK6[200]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S2315_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S2315_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S2315_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S2315_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 100
		 -> receivePacket(BANK3[100]), response(BANK2[100]), SetupPkt(BIGRAMhl[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BIGRAMhl[64]), cdc_data_rx(BIGRAMhh[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S494$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S484$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S484$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S460$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S460$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S460$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S460$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _SYS_InterruptHigh in COMRAM

    _SYS_InterruptHigh->_USBDeviceTasks
    _recebeByteLoRaWan->_strncmp
    _converter->_toupper
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    _main->_TxLoRaWan
    _setup_uart->___lldiv
    _le_AD->___ftdiv
    ___ftdiv->___ftmul
    ___awtoft->___ftpack
    _verificaUSB->_CDCTxService
    _CDCTxService->_USBTransferOnePacket
    _USBDeviceInit->_memset
    _TxLoRaWan->_sprintf
    _ResetModuloLoRaWan->_enviaComando
    _JoinLoRaWan->_enviaComando
    _SetChannelLoRaWan->_sprintf
    _sprintf->___fttol
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___ftadd
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->_le_AD
    ___ftsub->___ftadd
    ___ftadd->___wmul
    _enviaComando->_parseLoRaWan
    _parseLoRaWan->_millis

Critical Paths under _SYS_InterruptHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_TxLoRaWan

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _SYS_InterruptHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _SYS_InterruptHigh in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                32    32      0  210519
                                            147 BANK0      4     4      0
                                            207 BANK1     28    28      0
                        _JoinLoRaWan
                  _SetChannelLoRaWan
                          _TxLoRaWan
                      _USBDeviceInit
                            ___ftmul
                            ___fttol
                              _delay
                              _le_AD
                          _le_pulsos
                             _millis
                              _putch
                       _putsUSBUSART
                           _setup_AD
                         _setup_ccp1
                       _setup_pulsos
                         _setup_uart
                        _verificaUSB
 ---------------------------------------------------------------------------------
 (1) _setup_uart                                           8     4      4    1409
                                             13 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (1) _setup_pulsos                                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup_ccp1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup_AD                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _putsUSBUSART                                         5     3      2     202
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _le_pulsos                                            8     4      4      23
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _le_AD                                               17    14      3   17742
                                             62 BANK0     17    14      3
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    3544
                                             47 BANK0     15     9      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             4     1      3    3114
                                              8 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _delay                                               16    12      4    1927
                                             13 BANK0     16    12      4
                             _millis
                        _verificaUSB
 ---------------------------------------------------------------------------------
 (1) _verificaUSB                                          0     0      0    1770
                       _CDCTxService
                    _USBDeviceAttach
                    _USBDeviceDetach
 ---------------------------------------------------------------------------------
 (2) _USBDeviceDetach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CDCTxService                                         2     2      0    1770
                                             11 BANK0      2     2      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBTransferOnePacket                                11     7      4    1633
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1132
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     930
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _TxLoRaWan                                          212   208      4   90917
                                            142 BANK0      5     1      4
                                              0 BANK1    207   207      0
                        _JoinLoRaWan
                 _ResetModuloLoRaWan
                       _enviaComando
                       _parseLoRaWan
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (2) _strcat                                               6     2      4     810
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _ResetModuloLoRaWan                                   1     1      0    1687
                                             39 BANK0      1     1      0
                       _enviaComando
 ---------------------------------------------------------------------------------
 (2) _JoinLoRaWan                                          1     1      0    1804
                                             39 BANK0      1     1      0
                       _enviaComando
                       _parseLoRaWan
 ---------------------------------------------------------------------------------
 (1) _SetChannelLoRaWan                                  203   202      1   86287
                                            142 BANK0      1     0      1
                                              0 BANK1    202   202      0
                       _enviaComando
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             49    37     12   84178
                                             94 BANK0     48    36     12
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                                7     4      3   21426
                                             47 BANK0      7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              10     7      3   21228
                                             47 BANK0     10     7      3
                            ___awdiv
                            ___awmod
                            ___ftadd (ARG)
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4   10745
                                             14 BANK0      6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    6260
                                             32 BANK0     15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1898
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    2080
                                              6 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         15     9      6     481
                                              0 BANK0     15     9      6
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          12     6      6     624
                                              0 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             9     5      4    3092
                                              8 BANK0      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8    1049
                                             13 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8    1230
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     608
                                             79 BANK0     15    11      4
                            ___ftmul (ARG)
                              _le_AD (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftsub                                              6     0      6    5035
                                             32 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    4638
                                             20 BANK0     12     6      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2934
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3     134
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     670
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (2) _enviaComando                                        11     8      3    1664
                                             28 BANK0     11     8      3
                    _initRecebeDados
                       _parseLoRaWan
                              _putch
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               6     4      2     609
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _putch                                                1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _parseLoRaWan                                        20    20      0     117
                                              8 BANK0     20    20      0
                             _millis
 ---------------------------------------------------------------------------------
 (1) _millis                                               8     4      4      23
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _initRecebeDados                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _SYS_InterruptHigh                                   21    21      0   33203
                                             28 COMRAM    21    21      0
                     _USBDeviceTasks
                              _getch
                  _recebeByteLoRaWan
 ---------------------------------------------------------------------------------
 (7) _recebeByteLoRaWan                                   10    10      0    2467
                                              9 COMRAM    10    10      0
                          _converter
                             _strcmp
                             _strcpy
                            _strncmp
                           i2_strlen
 ---------------------------------------------------------------------------------
 (8) i2_strlen                                             6     4      2     194
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) _strncmp                                              9     3      6     668
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (8) _strcpy                                               6     2      4     253
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) _strcmp                                               6     2      4     269
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) _converter                                            5     4      1     675
                                              1 COMRAM     5     4      1
                            _toupper
 ---------------------------------------------------------------------------------
 (9) _toupper                                              1     1      0      67
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _getch                                                3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (7) _USBDeviceTasks                                       1     1      0   30623
                                             27 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (8) i2_USBDeviceInit                                      1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (8) _USBWakeFromSuspend                                   0     0      0    3879
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBSuspend                                           0     0      0    3879
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBStallHandler                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPService                                     1     1      0   18330
                                             26 COMRAM     1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (9) _memcpy                                              11     5      6    1478
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfSetupHandler                               0     0      0   16623
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (10) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (11) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (10) _USBCheckStdRequest                                  0     0      0   12652
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (11) _USBStdSetCfgHandler                                 1     1      0    4377
                                             20 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (9) i2_memset                                             8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (11) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (11) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (11) _USBStdFeatureReqHandler                             6     6      0    4350
                                             20 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6    3879
                                             12 COMRAM     8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (9) _USBCheckCDCRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _CDCInitEP                                            0     0      0    1187
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (10) i2_USBTransferOnePacket                             11     7      4     454
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (10) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (11) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfOutHandler                                 0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (10) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (11) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfInHandler                                  1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (12) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _JoinLoRaWan
     _enviaComando
       _initRecebeDados
       _parseLoRaWan
         _millis
       _putch
       _strlen
     _parseLoRaWan
       _millis
   _SetChannelLoRaWan
     _enviaComando
       _initRecebeDados
       _parseLoRaWan
         _millis
       _putch
       _strlen
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _le_AD (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _TxLoRaWan
     _JoinLoRaWan
       _enviaComando
         _initRecebeDados
         _parseLoRaWan
           _millis
         _putch
         _strlen
       _parseLoRaWan
         _millis
     _ResetModuloLoRaWan
       _enviaComando
         _initRecebeDados
         _parseLoRaWan
           _millis
         _putch
         _strlen
     _enviaComando
       _initRecebeDados
       _parseLoRaWan
         _millis
       _putch
       _strlen
     _parseLoRaWan
       _millis
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _le_AD (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     _strcat
   _USBDeviceInit
     _memset
   ___ftmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftpack (ARG)
     ___wmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
   ___fttol
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _le_AD (ARG)
       ___awtoft
         ___ftpack
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   _delay
     _millis
     _verificaUSB
       _CDCTxService
         _USBTransferOnePacket
       _USBDeviceAttach
       _USBDeviceDetach
   _le_AD
     ___awtoft
       ___ftpack
     ___ftadd
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   _le_pulsos
   _millis
   _putch
   _putsUSBUSART
   _setup_AD
   _setup_ccp1
   _setup_pulsos
   _setup_uart
     ___lldiv
   _verificaUSB
     _CDCTxService
       _USBTransferOnePacket
     _USBDeviceAttach
     _USBDeviceDetach

 _SYS_InterruptHigh (ROOT)
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _USBCheckCDCRequest
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _USBCheckCDCRequest
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _USBCheckCDCRequest
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _memcpy
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _USBCheckCDCRequest
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _USBCheckCDCRequest
     _USER_USB_CALLBACK_EVENT_HANDLER
       _CDCInitEP
         _USBEnableEndpoint
           _USBConfigureEndpoint
         i2_USBTransferOnePacket
       _USBCheckCDCRequest
     i2_USBDeviceInit
       i2_memset
   _getch
   _recebeByteLoRaWan
     _converter
       _toupper
     _strcmp
     _strcpy
     _strncmp
     i2_strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            3FF      0       0      23        0.0%
BIGRAMhh           280      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0      96      20       58.6%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0      C8      18       78.1%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C8      11       78.1%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      E4       9       89.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100     EB     100       7      100.0%
BIGRAMhl            C0      0       0      22        0.0%
BITBANK4            C0      0       0      12        0.0%
BANK4               C0      0      64      13       52.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     97      A0       5      100.0%
BITBANK5            80      0       0      14        0.0%
BANK5               80      0       0      15        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     31      5E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     56C      16        0.0%
DATA                 0      0     56C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Wed Nov 22 16:21:10 2017

                              _USB_SD_Ptr 7DE7                              ___awdiv@sign 006B  
                             __CFG_BOR$ON 000000                                        _cs 01F1  
                recebeByte@estadoRecepcao 01F3                             _USBDeviceInit 1B5E  
                     ___wmul@multiplicand 0070                               __CFG_BORV$0 000000  
                      __size_of_CDCInitEP 0066                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                              _putsUSBUSART 3FB2  
                            ___ftadd@exp1 007F                              ___ftadd@exp2 007E  
    USER_USB_CALLBACK_EVENT_HANDLER@event 000D      USER_USB_CALLBACK_EVENT_HANDLER@pdata 000F  
                            ___ftadd@sign 007D                                       l311 1C04  
                                     l307 1BA4                                       l309 1BCA  
             __end_of_USBStdGetDscHandler 2172                                       l350 27BC  
                                     l346 2714                                       l348 273E  
                                     l703 3FC0                                       l720 22D0  
                                     l368 426E                                       l721 22FE  
                                     l369 426C                                       l705 3FCC  
                                     l723 23BE                                       l731 2382  
                                     l732 2360                                       l724 2310  
                                     l725 2314                                       l717 22B8  
                                     l735 239C                                       l727 2356  
                                     l719 22C6                                       l736 23A0  
                                     l728 2334                                       l841 42BA  
                                     l850 3BF0                                       l843 42C6  
                                     l851 3BEC                                       l844 42D4  
                                     l860 1596                                       _BDT 000400  
                                     l861 1622                                       l863 1642  
                                     l865 169C                                       l858 152E  
                                     _MAC 7EDF                              __CFG_CPB$OFF 000000  
                            __CFG_CPD$OFF 000000                                       _UIE 000F69  
                                     _UIR 000F68                                       _SYS 7EDA  
                 __end_of_initRecebeDados 4538                                _USBSuspend 433A  
                            ___awmod@sign 0065                      USBStdSetCfgHandler@i 0015  
                                     prod 000FF3                                       wreg 000FE8  
                          _USBDeviceTasks 1F16                            _USBDeviceState 0058  
                   ??_USBCtrlTrfRxService 0001                  __size_ofi2_USBDeviceInit 0140  
                USBEnableEndpoint@options 0009                              __CFG_LVP$OFF 000000  
                            ___ftdiv@cntr 0098                              ___ftdiv@sign 009D  
                            __CFG_WDT$OFF 000000                                      l2100 3C80  
                                    l2101 3C78                                      l2120 2222  
                                    l2104 3C98                                      l2112 41E6  
                                    l2105 3CA2                                      l2202 1AC8  
                                    l2122 2260                                      l2106 3CB0  
                                    l2203 1ABE                                      l2123 2250  
                                    l2116 2192                                      l2220 1E10  
                                    l2212 2E16                                      l2205 1AEC  
                                    l2206 1B08                                      l2310 3B34  
                                    l2118 21B0                                      l2222 1E3C  
                                    l2214 2E3E                                      l1502 2500  
                                    l2151 3344                                      l2207 1B38  
                                    l2311 3B42                                      l2119 21F2  
                                    l2223 1E76                                      l2215 2E7C  
                                    l2152 332E                                      l2320 3D6E  
                                    l2128 2284                                      l2232 1EFE  
                                    l2224 1E9E                                      l2216 2EA2  
                                    l1504 254A                                      l2321 3D7C  
                                    l2129 2278                                      l2233 1EF2  
                                    l1505 25E0                                      l2154 336C  
                                    l2306 3B00                                      l2226 1EDA  
                                    l2250 2CAC                                      l2155 3362  
                                    l2307 3AF4                                      l2227 1ECA  
                                    l2091 3A28                                      l2251 2CBC  
                                    l2148 3310                                      l2316 3D46  
                                    l2092 3A32                                      l2084 39DA  
                                    l2244 2C2A                                      l2237 38D2  
                                    l2149 3306                                      l2261 40EC  
                                    l2317 3D3A                                      l2093 3A40  
                                    l2085 39EA                                      l1702 2888  
                                    l1710 2852                                      l2238 3902  
                                    l2246 2C52                                      l1703 2806  
                                    l2255 444C                                      l2183 1A2E  
                                    l2327 3E08                                      l2087 3A08  
                                    l2247 2C84                                      l1720 34D0  
                                    l1712 28D8                                      l1704 282C  
                                    l2328 3DFC                                      l2088 3A00  
                                    l2248 2C94                                      l2280 44E2  
                                    l1800 0086                                      l1713 28A2  
                                    l1705 2812                                      l2193 1A8A  
                                    l2273 2BD2                                      l2265 2B36  
                                    l2097 3C5E                                      l2194 1A80  
                                    l2274 2BC6                                      l2098 3C6A  
                                    l2530 4074                                      l1707 2898  
                                    l2179 1A04                                      l2267 2BAE  
                                    l1803 01C4                                      l1811 00F2  
                                    l2531 406A                                      l1724 34EC  
                                    l1708 2848                                      l2188 1A94  
                                    l2276 2BEE                                      l2268 2B9E  
                                    l1820 017A                USBConfigureEndpoint@handle 0007  
                                    l1709 286C                                      l1821 016A  
                                    l1813 00F6                                      l2550 3F1A  
                                    l1910 0A9C                                      l1814 011E  
                                    l1806 00E8                                      l1670 4238  
                                    l2390 42E6                                      l1719 346A  
                                    l2551 3F14                                      l1831 02FC  
                                    l1823 01AA                                      l1815 012C  
                                    l1807 00EE                                      l1671 4222  
                                    l2527 405A                                      l1912 0B9A  
                                    l1832 0364                                      l1808 0216  
                                    l1824 018C                                      l1816 0128  
                                    l2528 4054                                      l1913 0B18  
                                    l1673 4234                                      l1906 0A90  
                                    l1850 0578                                      l1834 038A  
                                    l1818 0160                                      l1682 23F4  
                                    l1907 0BAA                                      l1835 03C8  
                                    l1827 01BE                                      l1691 24A4  
                                    l1683 2418                                      l1499 24FC  
                                    l1780 0E04                                      l1828 086C  
                                    l1836 048C                                      l1684 246E  
                                    l1781 0D26                                      l1909 0B84  
                                    l1861 06A2                                      l1853 05B8  
                                    l1845 04F2                                      l1829 0268  
                                    l1677 3CEA                                      l1685 2420  
                                    l2389 42F8                                      l1774 13F2  
                                    l1870 0840                                      l1862 060C  
                                    l1854 05A2                                      l1678 3D0E  
                                    l1871 075C                                      l1839 0436  
                                    l1791 0020                                      l1695 24AA  
                                    l1784 0DDE                                      l1864 06C2  
                                    l1792 003C                                      l1688 24BC  
                                    l1777 14C8                                      l1785 0F3C  
                                    l1881 08FC                                      l1873 0862  
                                    l1865 06AC                                      l1857 05DE  
                                    l1849 055E                                      l1697 24B8  
                                    l1689 2492                                      l1890 095E  
                                    l1874 084C                                      l1858 05C8  
                                    l1794 0056                                      l6035 392E  
                                    l1787 0FF4                                      l1883 099A  
                                    l1867 06E6                                      l1795 004E  
                                    l1884 0922                                      l1876 08DC  
                                    l1868 06EA                                      l1877 08A0  
                                    l1869 070C                                      l1894 09D2  
                                    l1895 09F6                                      l1896 09FE  
                                    l1897 0A46                                      l1889 09B0  
                                    l1898 0A26                                      _ADIE 007CEE  
                                    _ADIF 007CF6               __size_of_ResetModuloLoRaWan 0026  
                                    l7439 42E6                                      l6657 455E  
                                    l8417 1B9C                                      l7811 05A2  
                                    l8445 1BFC                                      l7915 0926  
                                    l7843 06AC                                      l7819 05C8  
                                    l7763 0410                                      l7755 03C8  
                                    _ADON 007E10                                      l8581 2526  
                                    l7783 04F6                                      l7695 018C  
                                    l8911 161A                                      l7929 0962  
                                    l7689 016A                                      l8569 24EC  
                                    l8923 163A                                      l8881 155E  
                                    l7997 0B84                                      l8869 151E  
                                    STR_1 7F38                                      STR_2 7FEE  
                                    STR_3 7FC3                                      STR_4 7FE7  
                                    STR_5 7FA7                                      STR_6 7F59  
                                    STR_7 7F75                                      STR_8 7F8B  
                                    STR_9 7FE0                                      _GIEH 007F97  
                                    u5100 32F8                                      u6000 238A  
                                    u5140 3376                                      u5401 19C2  
                                    u6201 1E20                                      u5411 19D6  
                                    u5500 1A5E                                      u7100 052E  
                                    u7020 039A                                      u6070 28CE  
                                    u7030 03DA                                      u5360 34DE  
                                    u5440 19F6                                      u7200 06E0  
                                    u6410 2B54                                      u6330 228A  
                                    u5611 2C12                                      _RCIE 007CED  
                                    u5380 3F3A                                      u5540 1A9C  
                                    u6260 1F04                                      u5700 3A0C  
                                    u7060 0410                                      _RCIF 007CF5  
                                    u6077 28C4                                      u6181 1DF4  
                                    u5470 1A20                                      u6510 3D4A  
                                    u6415 2B4C                                      u5631 2C3A  
                                    u7160 05EC                                      u8120 1C60  
                                    u8200 2526                                      u5570 1AD0  
                                    u6450 2BD8                                      u7410 0A4E  
                                    u5387 3F30                                      u7420 0A6C  
                                    u6700 4230                                      u7190 06D0  
                                    u8150 3FE6                                      u6391 2B1A  
                                    u8215 252A                     ??_USBCtrlTrfTxService 0001  
                                    i2l80 29BA                                      u6480 3B04  
                                    u5760 3C84                                      u7440 0BBA  
                                    u7450 0BD4                                      u8250 247A  
                                    u8090 1BC0                                      u8170 4376  
                                    i2l75 29A4                                      u9027 1548  
                                    i2l76 299A                                      u8260 24A0  
                                    i2l78 29B4                                      _UCFG 000F6F  
                                    u7480 4430                                      u7561 2DFE  
                                    u6690 42D0                                      u8178 437A  
                                    u8610 155E                                      _UEP0 000F70  
                                    u7581 2E26                                      u8605 153A  
                                    _UEP1 000F71                                      u8606 153C  
                                    u8640 1636                                      u8625 15B8  
                                    u8626 15BA                                      _UEIE 000F6B  
                                    u6980 02A0                                      u8660 1656  
                                    u6985 0296                                      u8691 16FC  
                                    _UEIR 000F6A                                      _UCON 000F6D  
                                    _TXIF 007CF4                              __CFG_PWRT$ON 000000  
                         _CDCDataInHandle 0242    USBStdFeatureReqHandler@current_ep_data 0018  
                                    _pDst 0244                           _USBDeviceDetach 454C  
                                    _main 150A                              ___ftpack@arg 0060  
                       JoinLoRaWan@status 0087                  ??i2_USBTransferOnePacket 0005  
                            ___ftpack@exp 0063                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      indf0 000FEF  
                                    fsr2h 000FDA                                      fsr0l 000FE9  
                                    indf1 000FE7                               _BaudRateGen 0224  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    fsr2l 000FD9                           _USBDeviceAttach 4244  
                                    btemp 005F                                      prodh 000FF4  
                                    prodl 000FF3                                      start 000E  
                           __CFG_IESO$OFF 000000                              _sprintf$5270 00D0  
              __end_of_USBCheckStdRequest 2FB6                              main@dadoPoco 01E2  
                  ??_USBCtrlTrfOutHandler 0003                             __CFG_MCLRE$ON 000000  
                            ___ftmul@cntr 008D                              ___param_bank 000000  
                            ___ftmul@sign 008E                 ??_USBStdFeatureReqHandler 0015  
                           ??_JoinLoRaWan 0087                             le_AD@corrente 00A6  
                ??_USBStdGetStatusHandler 0001                              ___fttol@exp1 00BD  
                            ___fttol@lval 00B9                            ?_USBDeviceInit 0001  
                           ?_enviaComando 007C                             __CFG_PLLDIV$5 000000  
                            _sourceMacLow 0238                                     ?_main 0001  
                         __end_of___awdiv 3A4A                           __end_of___ftadd 1B5E  
                                   STR_10 7EF6                                     STR_11 7FFA  
                                   STR_20 7FAA                                     STR_12 7F80  
                                   STR_21 7F96                                     STR_13 7F27  
                                   STR_22 7FD2                                     STR_14 7FA0  
                                   STR_23 7FD2                                     STR_15 7FB3  
                                   STR_24 7FF5                                     STR_16 7FBB  
                                   STR_25 7FCB                                     STR_17 7F67  
                                   STR_26 7F16                                     STR_18 7FD9  
                                   STR_19 7F49                           __end_of___awmod 3CBA  
       __size_of_USBCtrlEPServiceComplete 00F6                           __end_of___ftdiv 2ED4  
                         __end_of___ftneg 445A                           __end_of___lldiv 3B54  
                         __end_of___ftmul 2CF6                                     _T0CON 000FD5  
                         ___awdiv@divisor 0068                                     _T1CON 000FCD  
                         __end_of___llmod 3D8E                    __end_of_USBDeviceTasks 2044  
                         __end_of___ftsub 4116                           __end_of___fttol 2C00  
                                   _T3CON 000FB1                 ?_USBCtrlEPServiceComplete 0001  
                          __CFG_DEBUG$OFF 000000                                     i2l311 1D44  
                                   i2l160 3E54                                     i2l321 1F50  
                                   i2l154 3E60                                     i2l162 3E5A  
                                   i2l322 1F5A                                     i2l411 3120  
                                   i2l307 1CE4                                     i2l331 1FDA  
                                   i2l412 30E8                                     i2l324 1F7E  
                                   i2l341 41A4                                     i2l309 1D0A  
                                   i2l317 1F2A                                     i2l502 325E  
                                   i2l422 263C                                     i2l342 41B2  
                                   i2l350 2AC4                                     i2l334 2000  
                                   i2l326 1F92                                     i2l318 1F36  
                                   i2l415 3160                                     i2l407 30B4  
                                   i2l503 3262                                     i2l423 261A  
                                   i2l327 1F9C                                     i2l319 1F3E  
                                   i2l416 3128                                     i2l504 32DC  
                                   i2l520 2EEE                                     i2l336 2020  
                                   i2l328 1FC0                                     i2l409 30BE  
                                   i2l505 32A2                                     i2l425 26B0  
                                   i2l521 2EF4                                     i2l329 1FCA  
                                   i2l426 2696                                     i2l346 2A1C  
                                   i2l442 215A                                     i2l434 3000  
                                   i2l522 2EFA                                     i2l338 203C  
                                   i2l507 32C2                                     i2l451 2152  
                                   i2l443 2056                                     i2l523 2F0E  
                                   i2l348 2A46                                     i2l460 350C  
                                   i2l436 3072                                     i2l524 2F14  
                                   i2l541 1116                                     i2l445 206A  
                                   i2l461 3512                                     i2l517 2F72  
                                   i2l550 1268                                     i2l534 103E  
                                   i2l446 20F2                                     i2l462 3530  
                                   i2l526 2F1A                                     i2l518 2EE4  
                                   i2l382 3728                                     i2l470 4152  
                                   i2l543 1196                                     i2l535 1042  
                                   i2l455 356C                                     i2l527 2F38  
                                   i2l376 31AE                                     i2l448 20FA  
                                   i2l456 34FC                                     i2l528 2F54  
                                   i2l384 3744                                     i2l553 1222  
                                   i2l545 1160                                     i2l537 10AC  
                                   i2l449 214A                                     i2l393 2D70  
                                   i2l546 117C                                     i2l394 2D1A  
                                   i2l555 1274                                     i2l539 10F4  
                                   i2l459 3582                                     i2l483 37FC  
                                   i2l388 386E                                     i2l548 11E2  
                                   i2l484 37F6                                     i2l549 11EE  
                                   i2l469 4154                                     i2l477 42A0  
                                   i2l494 3EBC                                     i2l670 33D4  
                                   i2l398 2D98                                     i2l478 429E  
                                   i2l671 33E2                                     i2l496 3F04  
                                   i2l672 33FE                                     i2l673 3416  
                                   i2l667 3420                                     i2l668 33BC  
                                   i2l961 4488                                     _UADDR 000F6E  
                                   i2l963 44A2                           ___awdiv@counter 006A  
                                   _RCREG 000FAE                                     _RCSTA 000FAB  
                                   _TMR1H 000FCF                                     _TMR1L 000FCE  
                                   _SPBRG 000FAF                             __CFG_USBDIV$2 000000  
                                   _USBIE 007D05                                     _USTAT 000F6C  
                                   _TXREG 000FAD        __size_of_USBCtrlEPAllowStatusStage 00C2  
                            ___lltoft@exp 0070                            __CFG_FCMEN$OFF 000000  
         __end_of_USBCtrlEPAllowDataStage 3776                                     _sd000 7EE4  
                                   _sd001 7E66                                     _sd002 7E32  
          ?_USBIncrement1msInternalTimers 0001                                     _dig_1 0246  
                                   _le_AD 24DA                             ___awtoft@sign 006B  
                                   _delay 3BD6                                i2memset@p1 0001  
                                   _getch 4480                           __end_of_dpowers 7D79  
                                   _scale 0BE2                           __end_of_isdigit 44EA  
                                   _randx 02E0                                     _ticks 022C  
                           ___ftpack@sign 0064                                     _putch 455A  
                                   main@i 01E0                __size_of_SetChannelLoRaWan 006C  
                                   pclath 000FFA                                     tablat 000FF5  
                           _gs_encryption 7EE8                                     plusw2 000FDB  
                       __end_of_CDCInitEP 3DF4                                     status 000FD8  
                                   wtemp6 0060                           __end_of_sprintf 0BE2  
                         __end_of_strncmp 3BD6                           __end_of_toupper 454C  
                        __end_ofi2_memset 43C0                            _tamanhoCommand 0040  
            __size_of_USBStdSetCfgHandler 00DE                          __end_ofi2_strlen 3FB2  
                           setup_uart@brg 0071                           __initialization 3598  
                            __end_of_main 175E                     _control_signal_bitmap 024A  
                          ??_enviaComando 007F                 __size_of_USBCtrlEPService 0096  
                                  ??_main 00F3                             ___fttol@sign1 00B8  
                     __end_of_JoinLoRaWan 4244                             __activetblptr 000002  
                         ?_USBDeviceTasks 0001                    SetChannelLoRaWan@canal 01C9  
                             ?_USBSuspend 0001                        recebeByte@sizeData 0042  
                    __size_of__tdiv_to_l_ 0134                          ?_initRecebeDados 0001  
                              i2strlen@cp 0005                        recebeByteLoRaWan@b 0010  
                      recebeByteLoRaWan@i 0011                              _cdc_mem_type 01F4  
                 __end_of_USBDeviceDetach 455A                             _sourceMacHigh 0234  
                                  ?_le_AD 009E                                    ?_delay 006D  
                                  ?_getch 0001                   __end_of_USBDeviceAttach 4278  
                                  _ADCON0 000FC2                                    _ADCON1 000FC1  
                                  _ADCON2 000FC0                          _CDCDataOutHandle 0046  
                                  _CCP1IE 007CEA                                    _CCP1IF 007CF2  
                        ___llmod@dividend 006D                                    ?_scale 008F  
                                  _ADRESH 000FC4                                    _ADRESL 000FC3  
                                  _CCPR1H 000FBF                                    _CCPR1L 000FBE  
                        ___awdiv@dividend 0066                          __end_of___awtoft 420A  
                                  ?_putch 0001                          __end_of___ftpack 3396  
                        __end_of___lltoft 3E52                     __size_of_CDCTxService 0126  
                                  i2l1170 3ACC                                    i2l1162 3A7A  
                                  i2l1164 3A8C                                    i2l1165 3A9E  
                                  i2l1167 3AB0                                    i2l1169 3AC2  
                                  i2l1741 18EC                                    i2l2390 439E  
                                  i2l2550 3F6E                                    i2l1742 189E  
                                  i2l1734 181C                                    i2l2383 40C2  
                                  i2l2551 3F6A                                    i2l1743 18CC  
                                  i2l1735 17E2                                    i2l2384 40A2  
                                  i2l2536 400C                                    i2l2544 431E  
                                  i2l1736 181A                                    i2l2537 4004  
                                  i2l2545 4316                                    i2l1747 197E  
                                  i2l1739 1862                                    i2l2556 3BBC  
                                  i2l1748 190E                                    i2l2389 43AE  
                                  i2l2565 4548                                    i2l2557 3B56  
                                  i2l1749 197A                                    i2l2558 3BB4  
                                  i2l6213 439E                                TxLoRaWan@i 01CE  
                                  i2l6181 30BE                                    i2l6283 2FF8  
                                  i2l8135 1CDC                                    i2l8047 3B56  
                                  i2l8163 1D3C                                    i2l6923 40A2  
                                  i2l8377 1FD2                                    i2l9355 3E78  
                                  i2l9357 3EA8                                    _PAN_ID 0248  
                           CDCTxService@i 006B                                    _TMR0IE 007F95  
                                  _TMR1IE 007CE8                                    _SPBRGH 000FB0  
                i2USBTransferOnePacket@ep 0009                         ??i2_USBDeviceInit 0009  
         __size_ofi2_USBTransferOnePacket 0102                            __CFG_VREGEN$ON 000000  
                       _shortPacketStatus 0057                            __CFG_XINST$OFF 000000  
                        __end_of__powers_ 7DA0                           USBDeviceTasks@i 001C  
                            _write_values 7EEC               USBStdFeatureReqHandler@pUEP 0016  
                USBTransferOnePacket@data 0061                USBCtrlTrfInHandler@lastDTS 0002  
                         ??_USBDeviceInit 0068                                    ___ftge 38A0  
                                  ___wmul 43C0                                 ??___awdiv 006A  
                               ??___ftadd 007A                            __CFG_STVREN$ON 000000  
                               ??___awmod 0064                                 ??___ftdiv 0095  
                               ??___ftneg 0063                                 ??___lldiv 0068  
                               ??___ftmul 0086                                 ??___llmod 0075  
                               ??___ftsub 0086                                 ??___fttol 00B3  
                       _USBEnableEndpoint 4194           __size_of_USBStdGetStatusHandler 00A8  
                                  le_AD@i 00AB                                    _gs_pan 7EF0  
                                  _memcpy 4090                                    _memset 42DC  
                                  _fround 129A                                    _millis 445A  
                                  clear_0 35D0                                    clear_1 35DC  
                                  clear_2 35E8                                    clear_3 35F4  
                                  clear_4 3600                                    clear_5 360C  
                                  clear_6 3618                                    clear_7 3624  
                        ___awdiv@quotient 006C                           ___awmod@divisor 0062  
                         ___awmod@counter 0064                        __size_of_TxLoRaWan 0118  
                      ?_USBEnableEndpoint 0009                              converter@aux 0004  
                                  _strcat 404A                                    _strcmp 4002  
                                  _strcpy 430C                                    _strlen 3F0A  
                   ___ftmul@f3_as_product 008A             __size_of_USBTransferOnePacket 0106  
                               ??_isdigit 0060                              _CDCTxService 229C  
                        __end_of_setup_AD 4522                              __mediumconst 7D50  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                       ??_USBEnableEndpoint 000A  
                    __end_of_MAC_TX_UNCNF 7ECD                   recebeByteLoRaWan@i_4437 0013  
                               ??_sprintf 00CA                               _CtrlTrfData 000438  
                               ??_strncmp 0007                                 ??_toupper 0001  
                       __end_of_SYS_RESET 7EDA                        setup_uart@baudRate 006D  
                    _controlTransferState 0056                             ?_parseLoRaWan 0001  
                              __accesstop 0060                   __end_of__initialization 362A  
                            ?_verificaUSB 0001                           __CFG_PBADEN$OFF 000000  
                              ___ftadd@f1 0074                                ___ftadd@f2 0077  
                          main@canal_3124 01EA                                ___ftge@ff1 0060  
                              ___ftge@ff2 0063                             ___rparam_used 000001  
                              ___ftdiv@f1 008F                                ___ftdiv@f2 0092  
                              ___ftdiv@f3 0099                  __size_of_USBStallHandler 0042  
                              ___ftneg@f1 0060                                ___awtoft@c 0068  
                     __size_of_USBSuspend 002E                                ___ftmul@f1 0080  
                              ___ftmul@f2 0083                       recebeByte@frameData 0440  
                              ___ftsub@f1 0080                                ___ftsub@f2 0083  
                              ___fttol@f1 00AF                            __pcstackCOMRAM 0001  
               __end_of_USBEnableEndpoint 41D0                             __end_of_sd000 7EE8  
                           __end_of_sd001 7E9A                             __end_of_sd002 7E66  
                             _JoinLoRaWan 420A                              __pidataBANK1 4568  
                            __pidataBANK2 44A6                             __end_of_le_AD 25EE  
                           __end_of_delay 3C48                                ___lltoft@c 0068  
        __size_of_USBCtrlEPAllowDataStage 009E                             __end_of_getch 44A6  
                           __end_of_scale 101A             __size_of_USBConfigureEndpoint 0094  
                         _retries_sending 024B                                _le_AD$5266 00A3  
                           __end_of_putch 4568               __end_of_USBCtrlTrfInHandler 32E6  
                       _MAC_SET_CH_STATUS 7EAC                    i2_USBTransferOnePacket 2A06  
                         _responseLoRaWan 005B                                __div_to_l_ 2172  
                              _cdc_notice 0214                                 ?i2_memset 0001  
                              _cdc_rx_len 004D                                _cdc_tx_len 00FD  
                          main@deltaTempo 01DC                                   ??_le_AD 00A1  
                                 ??_delay 0071                                 ?i2_strlen 0001  
                ??_USBCtrlTrfSetupHandler 001B                          ?_USBDeviceDetach 0001  
                 _USBTicksSinceSuspendEnd 01F5                                   ??_getch 0001  
                         __div_to_l_@exp1 006B                           __div_to_l_@cntr 006A  
                        ?_USBDeviceAttach 0001                                   ??_scale 0092  
                         __div_to_l_@quot 0066                        __end_of_MAC_TX_CNF 7ED4  
                  _USBStdGetStatusHandler 34F0                              sprintf@width 00E9  
                                 ??_putch 0060                           le_AD@leituraAux 00A9  
                      __size_of_converter 0086                            ??_parseLoRaWan 0068  
                              __pbssBANK0 00F7                      __end_of_enviaComando 2904  
                              __pbssBANK1 01EB                                __pbssBANK2 0200  
                              __pbssBANK3 0300                                __pbssBANK4 0440  
                              __pbssBANK6 0600                                __pbssBANK7 0700  
                      __size_of_le_pulsos 0026                     recebeByteLoRaWan@port 000F  
                       __end_of_TxLoRaWan 24DA                   SetChannelLoRaWan@ligado 00EE  
                          _novaMsgLoRaWan 00FF                             __div_to_l_@f1 0060  
                           __div_to_l_@f2 0063               __size_of_USBWakeFromSuspend 0034  
                             _pBDTEntryIn 003A                   SetChannelLoRaWan@status 01C8  
        __end_of_USBCtrlEPServiceComplete 2DEC               __size_of_USBCheckCDCRequest 00AE  
                    USBCtrlTrfRxService@i 0001                                   ?___ftge 0060  
                                 ?___wmul 006E                 __end_of_MAC_SET_CH_STATUS 7EBA  
                                 _CCP1CON 000FBD                                   ?_memcpy 0001  
                                 ?_memset 0060                                   ?_fround 008F  
                                 ?_millis 0060                                _device_dsc 7E9A  
                               ?___awtoft 0068                                 ?___ftpack 0060  
                        _USBCtrlEPService 3776                                _ep_data_in 01EE  
                               ?___lltoft 0068                                   ?_strcat 0060  
                                 ?_strcmp 0001                                   ?_strcpy 0001  
                                 ?_strlen 0060               __end_of_USBCtrlTrfRxService 26FA  
                      _USBCheckStdRequest 2ED4                         _configDescriptor1 7DEF  
                       _tamDadosRecebidos 005A                                   _GO_DONE 007E11  
                              ??i2_memset 0007               __end_of_USBCtrlTrfTxService 3168  
                     _USBStdSetCfgHandler 2FB6                __end_of_ResetModuloLoRaWan 4434  
                              ??i2_strlen 0003                          _discovery_status 024C  
                     ?_USBCheckStdRequest 0001              __size_of_USBStdGetDscHandler 012E  
                                 _UIEbits 000F69                                   _UIRbits 000F68  
                              _gs_channel 7EEE                             _cdc_trf_state 00FE  
                         putsUSBUSART@len 0064                                _freqPulses 0230  
                   __end_of_MAC_JOIN_OTAA 7EC4                                   _pCDCDst 023C  
                                 _pCDCSrc 023F                         __end_of__npowers_ 7DC7  
                                 __Hparam 0000           ??_USBIncrement1msInternalTimers 0001  
                    ?_USBStdSetCfgHandler 0001                                 _CDCInitEP 3D8E  
                              _scale$5269 0092                                   __Lparam 0000  
              __size_of_USBEnableEndpoint 003C                                 ?_setup_AD 0001  
                    ??_USBCheckStdRequest 001B                   enviaComando@tipoComando 007E  
                         __size_of___ftge 0092             __size_of_USBCtrlTrfOutHandler 005C  
                                 ___awdiv 39C4                                   ___ftadd 19B0  
                                 ___awmod 3C48                                   ___ftdiv 2DEC  
                                 ___ftneg 4434                                   ___lldiv 3AD0  
                        ??_USBDeviceTasks 001C                           __size_of___wmul 0028  
                                 ___ftmul 2C00                                   ___llmod 3D26  
                                 ___ftsub 40D4                                   ___fttol 2B08  
                       ??_USBStallHandler 0001                         __end_of_converter 3AD0  
                                 _channel 024D                                   __pcinit 3598  
                       __end_of_le_pulsos 440E                           __size_of_memcpy 0044  
                              ??___awtoft 006B                                ??___ftpack 0065  
                         __size_of_memset 0030                           __size_of_fround 0270  
               __end_of_configDescriptor1 7E32                           __size_of_millis 0026  
                                 __ramtop 0800                                ??___lltoft 006C  
                                 __ptext0 150A                                   __ptext1 3638  
                                 __ptext2 4368                                   __ptext3 4158  
                                 __ptext4 450C                                   __ptext5 3FB2  
                                 __ptext6 43E8                                   __ptext7 24DA  
                                 __ptext8 2DEC                                   __ptext9 41D0  
                                 _inPipes 00F7                                   _command 0700  
             _USBDeferOUTDataStagePackets 01F6                           __size_of_strcat 0046  
                         __size_of_strcmp 0048                           __size_of_strcpy 002E  
                         __size_of_strlen 0056                         __end_of_hexpowers 7DE7  
                             ?__div_to_l_ 0060                                   _dpowers 7D51  
                            ??_USBSuspend 0015                                   _isdigit 44C8  
                                 delay@to 0079                          ___awmod@dividend 0060  
                           _receivePacket 0364                           i2_USBDeviceInit 1CA2  
                        i2USBDeviceInit@i 0009                                   getch@RC 0002  
                           converter@aux2 0005                        __end_of_USB_CD_Ptr 7DEF  
                                 _sprintf 0012           __size_of_USBCtrlTrfSetupHandler 0092  
                                 _strncmp 3B54                            __pintcode_body 2904  
                                 _toupper 4538                      end_of_initialization 362A  
                           TxLoRaWan@data 00EF                             TxLoRaWan@conf 01C8  
                      __end_of_USB_SD_Ptr 7DED                                   memcpy@d 0007  
                                 memcpy@n 0005                                   memcpy@s 0009  
                     _pBDTEntryEP0OutNext 0048                                   memset@c 0062  
                                 memset@n 0064                                   memset@p 0066  
                           __Lmediumconst 7D50                                   int_func 2904  
                         _USB1msTickCount 0228           _dummy_encapsulated_cmd_response 02B3  
                                 millis@m 0064                  ?_USBStdFeatureReqHandler 0001  
                           enviaComando@i 0081                     ??_USBStdSetCfgHandler 0015  
                         ___lldiv@divisor 0064                      __size_of_verificaUSB 0030  
                              ?_CDCInitEP 0001                           ___lldiv@counter 006C  
                      parseLoRaWan@status 007A                  recebeByte@escapeCaracter 004C  
                      __end_of_USBSuspend 4368                   _USBCtrlEPAllowDataStage 36D8  
                               _RCSTAbits 000FAB                                ??_setup_AD 0060  
                                 postdec1 000FE5                                   postdec2 000FDD  
                            _MAC_TX_UNCNF 7EC4                                   postinc0 000FEE  
                                 postinc2 000FDE                  _USBCtrlEPServiceComplete 2CF6  
                          __tdiv_to_l_@f1 0060                            __tdiv_to_l_@f2 0063  
                                 strcmp@r 0006                                   strlen@s 0060  
                    __end_of_parseLoRaWan 34F0                             ??__tdiv_to_l_ 0066  
              _USBStatusStageEnabledFlag1 004F                _USBStatusStageEnabledFlag2 004E  
                      USBEnableEndpoint@p 000A                                 _PORTCbits 000F82  
                               _PORTDbits 000F83                                 _PORTEbits 000F84  
                              _setup_ccp1 4158                             le_pulsos@freq 0064  
                              _setup_uart 3638                     __size_of_enviaComando 0104  
                               _TRISCbits 000F94                                 _TRISDbits 000F95  
                               _TRISEbits 000F96                             ?_setup_pulsos 0001  
                      _BothEP0OutUOWNsSet 0052                 USBConfigureEndpoint@EPNum 0006  
              ?_USBCtrlEPAllowStatusStage 0001       USER_USB_CALLBACK_EVENT_HANDLER@size 0011  
                               _USTATcopy 005D                  __size_of_initRecebeDados 0016  
            __end_of_USBTransferOnePacket 2800                               ___ftdiv@exp 009C  
                               _TXSTAbits 000FAC                                 _SYS_RESET 7ED4  
                     __size_of__div_to_l_ 012A                               ___ftmul@exp 0089  
                            ?_JoinLoRaWan 0001                    _USBCtrlTrfSetupHandler 3932  
                            le_AD@leitura 00AD                         putsUSBUSART@pData 0062  
                 ?i2_USBTransferOnePacket 0001                     __end_of_USBDeviceInit 1CA2  
                          __end_of___ftge 3932     __end_of_USBIncrement1msInternalTimers 450C  
  __size_of_USBIncrement1msInternalTimers 0022             _USBIncrement1msInternalTimers 44EA  
                          __end_of___wmul 43E8                              _enviaComando 2800  
                             _BAUDCONbits 000FB8                   __end_ofi2_USBDeviceInit 1DE2  
                           ?_putsUSBUSART 0060                            __end_of_gs_pan 7EF2  
                               i2memset@c 0003                                 i2memset@n 0005  
                               i2memset@p 0007                            __end_of_memcpy 40D4  
                          __end_of_memset 430C                            __end_of_fround 150A  
                          __end_of_millis 4480                         _USBBusIsSuspended 0054  
                          __end_of_strcat 4090                            __end_of_strcmp 404A  
                          __end_of_strcpy 433A                            __end_of_strlen 3F60  
                     start_initialization 3598                            ??_setup_pulsos 0060  
                 ?_USBStdGetStatusHandler 0001                               __end_of_MAC 7EE4  
           USBCtrlTrfRxService@byteToRead 0002                               __end_of_SYS 7EDF  
                     __end_of__tdiv_to_l_ 1F16                          TxLoRaWan@comando 0100  
                             _cdc_data_rx 000540                               _cdc_data_tx 000500  
                       __size_ofi2_memset 002C              __end_of_USBConfigureEndpoint 38A0  
                        TxLoRaWan@tamData 00F1           __end_of_USBStdFeatureReqHandler 129A  
       __end_of_USBCtrlEPAllowStatusStage 322A                         __size_ofi2_strlen 0052  
                               i2strlen@s 0001                  __end_of_USBCtrlEPService 380C  
                         ___llmod@divisor 0071                           ___llmod@counter 0075  
               ??_USBCtrlEPAllowDataStage 0002                               ??_CDCInitEP 000D  
                          USBDeviceInit@i 0068                                 _TxLoRaWan 23C2  
                  _pBDTEntryEP0OutCurrent 004A                   USBTransferOnePacket@dir 0060  
                 USBTransferOnePacket@len 0063            __end_ofi2_USBTransferOnePacket 2B08  
                                ??___ftge 0066                                  ??___wmul 0072  
                     _USBStdGetDscHandler 2044                               __pdataBANK1 01FF  
                             __pdataBANK2 02C2                          __CFG_LPT1OSC$OFF 000000  
                                ??_memcpy 0007                                  ??_memset 0066  
                          ??_putsUSBUSART 0062                                  ??_fround 0092  
                                ??_millis 0064                             sprintf@tmpval 00DC  
                                ??_strcat 0064                  ResetModuloLoRaWan@status 0087  
                                ??_strcmp 0005                                  ??_strcpy 0005  
                                ??_strlen 0062                               ?_setup_ccp1 0001  
               recebeByteLoRaWan@tamMsgRx 0012                    _USBActiveConfiguration 005E  
                              fround@prec 0098            __end_of_USBStdGetStatusHandler 3598  
                             ?_setup_uart 006D                         __size_of___awtoft 003A  
                       __size_of___ftpack 00B0                         __size_of___lltoft 005E  
                             __pbssCOMRAM 0032                         _recebeByteLoRaWan 175E  
                           __pcstackBANK0 0060                             __pcstackBANK1 0100  
            __size_of_USBCtrlTrfInHandler 00BC                      __end_of_set_link_key 7EEC  
                SetChannelLoRaWan@comando 0100                        ?_recebeByteLoRaWan 0001  
                            _isdigit$4726 0061                      ?_USBStdGetDscHandler 0001  
                   __end_of_gs_encryption 7EEA                __end_of_USBWakeFromSuspend 42AC  
                             sprintf@flag 00EB                               sprintf@fval 00E6  
                             sprintf@prec 00DA                           _USBStallHandler 4116  
                     ??_recebeByteLoRaWan 000A                              _pBDTEntryOut 021E  
              __end_of_USBCheckCDCRequest 3444                      recebeByteLoRaWan@len 000E  
                __size_of_USBDeviceDetach 000E                  __size_of_USBDeviceAttach 0034  
                      _ResetModuloLoRaWan 440E                                 _main$5265 01D9  
                       ??_initRecebeDados 0060                                ?_TxLoRaWan 00EE  
                   __size_of_parseLoRaWan 00AC                                 __pintcode 0008  
                           __pmediumconst 7D50                                  ?___awdiv 0066  
                                ?___ftadd 0074                                  ?___awmod 0060  
                                ?___ftdiv 008F                                  ?___ftneg 0060  
                                ?___lldiv 0060                                  ?___ftmul 0080  
                                ?___llmod 006D                                  ?___ftsub 0080  
                               __npowers_ 7DA0                                  ?___fttol 00AF  
                     ?_ResetModuloLoRaWan 0001                        enviaComando@i_4423 0083  
                      enviaComando@i_4424 0085                         __size_of_setup_AD 0016  
                        ?i2_USBDeviceInit 0001                               __tdiv_to_l_ 1DE2  
               __end_of_recebeByteLoRaWan 19B0                             __send_retries 01FF  
                            ??__div_to_l_ 0066                      _USBTransferOnePacket 26FA  
                               _converter 3A4A                                  ?_isdigit 0001  
                               _le_pulsos 43E8              __end_of_USBCtrlTrfOutHandler 3F0A  
                               _hexpowers 7DC7                     ??_USBStdGetDscHandler 0001  
                             _ep_data_out 01EB                            __size_of_le_AD 0114  
                          __size_of_delay 0072                            __size_of_getch 0026  
                 parseLoRaWan@intervalMAX 0078                                  ?_sprintf 00BE  
            __size_of_USBCtrlTrfRxService 010C                      ??_ResetModuloLoRaWan 0087  
                          __size_of_scale 0438             USBConfigureEndpoint@direction 0001  
                                ?_strncmp 0001                                  ?_toupper 0001  
                          __size_of_putch 000E                      SYS_InterruptHigh@dig 0030  
                               delay@time 006D              __size_of_USBCtrlTrfTxService 00D4  
                            _parseLoRaWan 3444                            ___wmul@product 0072  
                            TxLoRaWan@hex 01CA                ??_USBCtrlEPServiceComplete 0002  
                                _IPR1bits 000F9F                                  _IPR2bits 000FA2  
                                _PIE2bits 000FA0                       __size_of_setup_ccp1 003C  
                               _numPacote 01F8                       __size_of_setup_uart 00A0  
                      __end_of__div_to_l_ 229C                                  i2u507_40 1208  
                                _PIR2bits 000FA1                                  i2u466_40 3110  
                                i2u482_40 20BC                                  i2u466_47 3106  
                                i2u482_47 20B2                                  i2u483_40 20EC  
                                i2u483_47 20E2                                  i2u468_40 3150  
                                i2u468_47 3146                                  i2u485_40 213E  
                                i2u485_47 2134                                  i2u478_40 302C  
                    __end_of_setup_pulsos 4394                                  i2u807_40 2040  
                                i2u752_40 403E                                  i2u754_40 3B82  
                                i2u842_40 296E                                  i2u763_40 1D00  
                                i2u843_40 2986                                  i2u842_48 2970  
                                i2u781_40 199C                                  i2u766_40 1DA0  
                                i2u767_40 3F8E                                  i2u783_40 19AA  
                                i2u767_47 3F84                                  i2u779_40 190A  
                                _RCONbits 000FD0                          __CFG_WDTPS$32768 000000  
                                _UEP0bits 000F70                _USBDeferINDataStagePackets 01F7  
             __size_of_USBCheckStdRequest 00E2                                  _UCONbits 000F6D  
                    _USBConfigureEndpoint 380C                      __size_of_JoinLoRaWan 003A  
                               getch@data 0003                               _frameBuffer 0600  
        __size_of_USBStdFeatureReqHandler 0280                          _get_own_mac_high 7EF2  
                       ___wmul@multiplier 006E                     ?_USBTransferOnePacket 0060  
                               main@canal 01E9                         _SYS_InterruptHigh 0008  
                             _encryptMode 01F9                                ?_converter 0002  
                           ?_CDCTxService 0001                                ?_le_pulsos 0060  
                            _RemoteWakeup 0055                                 main@pisca 01E8  
                               main@tempo 01D1                                  i2_memset 4394  
                        main@tempoTimeOut 01D5                        ?_SYS_InterruptHigh 0001  
                        putsUSBUSART@data 0060                   __end_of_USBStallHandler 4158  
                                i2_strlen 3F60                                 copy_data0 35AC  
             ??_USBCtrlEPAllowStatusStage 0001               __end_of_USBStdSetCfgHandler 3094  
                     ??_SYS_InterruptHigh 001D                      __end_of_putsUSBUSART 4002  
                           ??_verificaUSB 006D                        __end_of_device_dsc 7EAC  
                 ?_USBCtrlTrfSetupHandler 0001                           TxLoRaWan@status 01C9  
                 USBStdGetStatusHandler@p 0002                                  __Hrparam 0000  
                             ??_TxLoRaWan 00F2                                 memcpy@tmp 000B  
                                __Lrparam 0000                    USBTransferOnePacket@ep 0068  
                                _SetupPkt 000430                recebeByteLoRaWan@frameData 0300  
                       ??_USBDeviceDetach 0060                     ?_USBConfigureEndpoint 0001  
                       ??_USBDeviceAttach 0060                          __size_of___awdiv 0086  
                        __size_of___ftadd 01AE                          __size_of___awmod 0072  
                        __size_of___ftdiv 00E8                          __size_of___ftneg 0026  
                        __size_of___lldiv 0084                          __size_of___ftmul 00F6  
                        __size_of___llmod 0068                          __size_of___ftsub 0042  
                        __size_of___fttol 00F8                                  ___awtoft 41D0  
                                ___ftpack 32E6                 __end_of_SYS_InterruptHigh 2A06  
                             _fround$5267 0095                               _fround$5268 0092  
                                ___lltoft 3DF4                               _line_coding 02BB  
              __size_of_recebeByteLoRaWan 0252                        __end_of_gs_channel 7EF0  
                          ??_CDCTxService 006B                                sprintf@idx 00D3  
                              sprintf@len 00D6                                sprintf@exp 00E0  
                              sprintf@val 00E2                                strcat@from 0062  
                        __size_of_isdigit 0022                   __size_of_USBDeviceTasks 012E  
                         enviaComando@cmd 007C                                  __ptext10 3BD6  
                                __ptext11 42AC                                  __ptext20 440E  
                                __ptext12 454C                                  __ptext21 420A  
                                __ptext13 4244                                  __ptext30 39C4  
                                __ptext22 3CBA                                  __ptext14 229C  
                                __ptext31 1DE2                                  __ptext23 0012  
                                __ptext15 26FA                                  __ptext40 4434  
                                __ptext32 2172                                  __ptext24 0BE2  
                                __ptext16 1B5E                                  __ptext41 38A0  
                                __ptext33 3DF4                                  __ptext25 44C8  
                                __ptext17 42DC                                  __ptext50 3F60  
                                __ptext42 2800                                  __ptext34 3D26  
                                __ptext26 129A                                  __ptext18 23C2  
                                __ptext51 3B54                                  __ptext43 3F0A  
                                __ptext35 3AD0                                  __ptext27 43C0  
                                __ptext19 404A                                  __ptext60 433A  
                                __ptext52 430C                                  __ptext44 455A  
                                __ptext36 2B08                                  __ptext28 2C00  
                                __ptext61 4116                                  __ptext53 4002  
                                __ptext45 3444                                  __ptext37 40D4  
                                __ptext29 3C48                                  __ptext70 4394  
                                __ptext62 44EA                                  __ptext54 3A4A  
                                __ptext46 445A                                  __ptext38 19B0  
                                __ptext71 34F0                                  __ptext63 3776  
                                __ptext55 4538                                  __ptext47 4522  
                                __ptext39 32E6                                  __ptext80 3EAE  
                                __ptext72 2044                                  __ptext64 4090  
                                __ptext56 4480                                  __ptext81 25EE  
                                __ptext73 101A                                  __ptext65 3932  
                                __ptext57 1F16                                  __ptext49 175E  
                                __ptext82 3168                                  __ptext74 3E52  
                                __ptext66 2CF6                                  __ptext58 1CA2  
                                __ptext83 322A                                  __ptext75 3396  
                                __ptext67 36D8                                  __ptext59 4278  
                                __ptext84 3094                                  __ptext76 3D8E  
                                __ptext68 2ED4                                  __ptext77 2A06  
                                __ptext69 2FB6                                  __ptext78 4194  
                                __ptext79 380C                                  __powers_ 7D79  
           recebeByte@checksumRecebimento 01F2                          __size_of_sprintf 0BD0  
                        __size_of_strncmp 0082                          __size_of_toupper 0014  
                              strcpy@from 0003                            _dadosRecebidos 0200  
                                _error_AT 01FC                                  _error_RX 024E  
                                _error_TX 005C                      parseLoRaWan@previous 0074  
          __end_of_USBCtrlTrfSetupHandler 39C4                             __size_of_main 0254  
                       ?_USBCtrlEPService 0001                                  _tamFrame 0059  
                              strncmp@len 0005                         main@statusLoRaWan 01CF  
                      ??_USBCtrlEPService 001B                             _MAC_JOIN_OTAA 7EBA  
                     _USBCtrlTrfInHandler 322A                                _MAC_TX_CNF 7ECD  
                     __end_of_verificaUSB 42DC                                  _response 024F  
                                _setup_AD 450C                                  _outPipes 0032  
                            _set_link_key 7EEA                      _USBCtrlTrfOutHandler 3EAE  
                                int$flags 005F                 _USBCtrlEPAllowStatusStage 3168  
                          converter@conv1 0006                            converter@conv2 0002  
                         _get_own_mac_low 7EF4                                  _protocol 01FB  
                          converter@resul 0003                                  main@resp 01D0  
                  ??_USBTransferOnePacket 0064                              ??_setup_ccp1 0060  
                             _MSG_LORAWAN 02C2                     __CFG_CPUDIV$OSC1_PLL2 000000  
                            ??_setup_uart 0071                 _USBDeferStatusStagePacket 0050  
                CDCTxService@byte_to_send 006C                                 putch@data 0060  
                             ??_converter 0003                               ??_le_pulsos 0064  
                              _INTCONbits 000FF2                            TxLoRaWan@porta 00EE  
                    ?_USBCtrlTrfInHandler 0001                                  memcpy@d1 0001  
                                memcpy@s1 0003                           _delivery_status 01FA  
           USBCtrlTrfTxService@byteToSend 0001                                  isdigit@c 0062  
                                memset@p1 0060                                  scale@scl 0095  
                        ?_USBStallHandler 0001                  USBStdFeatureReqHandler@p 0019  
                         _initRecebeDados 4522                                  intlevel2 0000  
                               sprintf@ap 00D8                                 sprintf@cp 00D4  
                        __tdiv_to_l_@exp1 006E                                 sprintf@sp 00BE  
                        __tdiv_to_l_@cntr 006D                    __size_of_USBDeviceInit 0144  
                        __tdiv_to_l_@quot 0069   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 3EAE  
__size_of_USER_USB_CALLBACK_EVENT_HANDLER 005C         ??_USER_USB_CALLBACK_EVENT_HANDLER 0013  
        ?_USER_USB_CALLBACK_EVENT_HANDLER 000D           _USER_USB_CALLBACK_EVENT_HANDLER 3E52  
            i2USBTransferOnePacket@handle 000A                          ___lldiv@dividend 0060  
                   __size_of_setup_pulsos 002C                         _SetChannelLoRaWan 3CBA  
                     parseLoRaWan@timeout 007B                        ?_SetChannelLoRaWan 00EE  
                               strncmp@s1 0001                                 strncmp@s2 0003  
                      __end_of_setup_ccp1 4194                        __end_of_setup_uart 36D8  
              i2USBTransferOnePacket@data 0002                    ??_USBConfigureEndpoint 0002  
                   ?_USBCtrlTrfOutHandler 0001                       _USBCtrlTrfRxService 25EE  
                      _USBWakeFromSuspend 4278                       ??_SetChannelLoRaWan 00EF  
                 _USBStdFeatureReqHandler 101A                        _USBCheckCDCRequest 3396  
                     _USBCtrlTrfTxService 3094                __size_of_SYS_InterruptHigh 29FE  
                            ?__tdiv_to_l_ 0060                                  sprintf@c 00ED  
                                sprintf@f 00C0                                  strcat@cp 0064  
               recebeByte@tamanhoMensagem 0044                                  strcat@to 0060  
                     ?_USBWakeFromSuspend 0001                                  strcmp@s1 0001  
                                strcmp@s2 0003                          ___lldiv@quotient 0068  
                   ??_USBCtrlTrfInHandler 0002                                  strcpy@cp 0005  
                                strlen@cp 0064                                  strcpy@to 0001  
                   _USBAlternateInterface 01FD                                  toupper@c 0001  
                     ?_USBCheckCDCRequest 0001                      __end_of_write_values 7EEE  
               i2USBTransferOnePacket@dir 0001                 i2USBTransferOnePacket@len 0004  
                            _setup_pulsos 4368                       USBEnableEndpoint@ep 000C  
                         _endpoint_number 0053                     __size_of_putsUSBUSART 0050  
                    ?_USBCtrlTrfRxService 0001                 __end_of_SetChannelLoRaWan 3D26  
                      __CFG_FOSC$HSPLL_HS 000000                  ?_USBCtrlEPAllowDataStage 0001  
                    ?_USBCtrlTrfTxService 0001                               _verificaUSB 42AC  
                __end_of_get_own_mac_high 7EF4              _USBStatusStageTimeoutCounter 0051  
                    ??_USBWakeFromSuspend 0015                USBTransferOnePacket@handle 0069  
                    __end_of_CDCTxService 23C2                   __end_of_get_own_mac_low 7EF6  
                    ??_USBCheckCDCRequest 0001                                _USB_CD_Ptr 7DED  
